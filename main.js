/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/moment/moment.js
var require_moment = __commonJS({
  "node_modules/moment/moment.js"(exports, module2) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? module2.exports = factory() : typeof define === "function" && define.amd ? define(factory) : global2.moment = factory();
    })(exports, function() {
      "use strict";
      var hookCallback;
      function hooks() {
        return hookCallback.apply(null, arguments);
      }
      function setHookCallback(callback) {
        hookCallback = callback;
      }
      function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
      }
      function isObject(input) {
        return input != null && Object.prototype.toString.call(input) === "[object Object]";
      }
      function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
      }
      function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
          return Object.getOwnPropertyNames(obj).length === 0;
        } else {
          var k;
          for (k in obj) {
            if (hasOwnProp(obj, k)) {
              return false;
            }
          }
          return true;
        }
      }
      function isUndefined(input) {
        return input === void 0;
      }
      function isNumber(input) {
        return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
      }
      function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
      }
      function map(arr, fn) {
        var res = [], i, arrLen = arr.length;
        for (i = 0; i < arrLen; ++i) {
          res.push(fn(arr[i], i));
        }
        return res;
      }
      function extend(a, b) {
        for (var i in b) {
          if (hasOwnProp(b, i)) {
            a[i] = b[i];
          }
        }
        if (hasOwnProp(b, "toString")) {
          a.toString = b.toString;
        }
        if (hasOwnProp(b, "valueOf")) {
          a.valueOf = b.valueOf;
        }
        return a;
      }
      function createUTC(input, format2, locale2, strict) {
        return createLocalOrUTC(input, format2, locale2, strict, true).utc();
      }
      function defaultParsingFlags() {
        return {
          empty: false,
          unusedTokens: [],
          unusedInput: [],
          overflow: -2,
          charsLeftOver: 0,
          nullInput: false,
          invalidEra: null,
          invalidMonth: null,
          invalidFormat: false,
          userInvalidated: false,
          iso: false,
          parsedDateParts: [],
          era: null,
          meridiem: null,
          rfc2822: false,
          weekdayMismatch: false
        };
      }
      function getParsingFlags(m) {
        if (m._pf == null) {
          m._pf = defaultParsingFlags();
        }
        return m._pf;
      }
      var some;
      if (Array.prototype.some) {
        some = Array.prototype.some;
      } else {
        some = function(fun) {
          var t = Object(this), len = t.length >>> 0, i;
          for (i = 0; i < len; i++) {
            if (i in t && fun.call(this, t[i], i, t)) {
              return true;
            }
          }
          return false;
        };
      }
      function isValid(m) {
        var flags = null, parsedParts = false, isNowValid = m._d && !isNaN(m._d.getTime());
        if (isNowValid) {
          flags = getParsingFlags(m);
          parsedParts = some.call(flags.parsedDateParts, function(i) {
            return i != null;
          });
          isNowValid = flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
          if (m._strict) {
            isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
          }
        }
        if (Object.isFrozen == null || !Object.isFrozen(m)) {
          m._isValid = isNowValid;
        } else {
          return isNowValid;
        }
        return m._isValid;
      }
      function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
          extend(getParsingFlags(m), flags);
        } else {
          getParsingFlags(m).userInvalidated = true;
        }
        return m;
      }
      var momentProperties = hooks.momentProperties = [], updateInProgress = false;
      function copyConfig(to2, from2) {
        var i, prop, val, momentPropertiesLen = momentProperties.length;
        if (!isUndefined(from2._isAMomentObject)) {
          to2._isAMomentObject = from2._isAMomentObject;
        }
        if (!isUndefined(from2._i)) {
          to2._i = from2._i;
        }
        if (!isUndefined(from2._f)) {
          to2._f = from2._f;
        }
        if (!isUndefined(from2._l)) {
          to2._l = from2._l;
        }
        if (!isUndefined(from2._strict)) {
          to2._strict = from2._strict;
        }
        if (!isUndefined(from2._tzm)) {
          to2._tzm = from2._tzm;
        }
        if (!isUndefined(from2._isUTC)) {
          to2._isUTC = from2._isUTC;
        }
        if (!isUndefined(from2._offset)) {
          to2._offset = from2._offset;
        }
        if (!isUndefined(from2._pf)) {
          to2._pf = getParsingFlags(from2);
        }
        if (!isUndefined(from2._locale)) {
          to2._locale = from2._locale;
        }
        if (momentPropertiesLen > 0) {
          for (i = 0; i < momentPropertiesLen; i++) {
            prop = momentProperties[i];
            val = from2[prop];
            if (!isUndefined(val)) {
              to2[prop] = val;
            }
          }
        }
        return to2;
      }
      function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
          this._d = /* @__PURE__ */ new Date(NaN);
        }
        if (updateInProgress === false) {
          updateInProgress = true;
          hooks.updateOffset(this);
          updateInProgress = false;
        }
      }
      function isMoment(obj) {
        return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
      }
      function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
          console.warn("Deprecation warning: " + msg);
        }
      }
      function deprecate(msg, fn) {
        var firstTime = true;
        return extend(function() {
          if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
          }
          if (firstTime) {
            var args = [], arg, i, key, argLen = arguments.length;
            for (i = 0; i < argLen; i++) {
              arg = "";
              if (typeof arguments[i] === "object") {
                arg += "\n[" + i + "] ";
                for (key in arguments[0]) {
                  if (hasOwnProp(arguments[0], key)) {
                    arg += key + ": " + arguments[0][key] + ", ";
                  }
                }
                arg = arg.slice(0, -2);
              } else {
                arg = arguments[i];
              }
              args.push(arg);
            }
            warn(
              msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack
            );
            firstTime = false;
          }
          return fn.apply(this, arguments);
        }, fn);
      }
      var deprecations = {};
      function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
          hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
          warn(msg);
          deprecations[name] = true;
        }
      }
      hooks.suppressDeprecationWarnings = false;
      hooks.deprecationHandler = null;
      function isFunction(input) {
        return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
      }
      function set(config) {
        var prop, i;
        for (i in config) {
          if (hasOwnProp(config, i)) {
            prop = config[i];
            if (isFunction(prop)) {
              this[i] = prop;
            } else {
              this["_" + i] = prop;
            }
          }
        }
        this._config = config;
        this._dayOfMonthOrdinalParseLenient = new RegExp(
          (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
        );
      }
      function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
          if (hasOwnProp(childConfig, prop)) {
            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
              res[prop] = {};
              extend(res[prop], parentConfig[prop]);
              extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
              res[prop] = childConfig[prop];
            } else {
              delete res[prop];
            }
          }
        }
        for (prop in parentConfig) {
          if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
            res[prop] = extend({}, res[prop]);
          }
        }
        return res;
      }
      function Locale(config) {
        if (config != null) {
          this.set(config);
        }
      }
      var keys;
      if (Object.keys) {
        keys = Object.keys;
      } else {
        keys = function(obj) {
          var i, res = [];
          for (i in obj) {
            if (hasOwnProp(obj, i)) {
              res.push(i);
            }
          }
          return res;
        };
      }
      var defaultCalendar = {
        sameDay: "[Today at] LT",
        nextDay: "[Tomorrow at] LT",
        nextWeek: "dddd [at] LT",
        lastDay: "[Yesterday at] LT",
        lastWeek: "[Last] dddd [at] LT",
        sameElse: "L"
      };
      function calendar(key, mom, now3) {
        var output = this._calendar[key] || this._calendar["sameElse"];
        return isFunction(output) ? output.call(mom, now3) : output;
      }
      function zeroFill(number, targetLength, forceSign) {
        var absNumber = "" + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign2 = number >= 0;
        return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
      }
      var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};
      function addFormatToken(token2, padded, ordinal2, callback) {
        var func = callback;
        if (typeof callback === "string") {
          func = function() {
            return this[callback]();
          };
        }
        if (token2) {
          formatTokenFunctions[token2] = func;
        }
        if (padded) {
          formatTokenFunctions[padded[0]] = function() {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
          };
        }
        if (ordinal2) {
          formatTokenFunctions[ordinal2] = function() {
            return this.localeData().ordinal(
              func.apply(this, arguments),
              token2
            );
          };
        }
      }
      function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
          return input.replace(/^\[|\]$/g, "");
        }
        return input.replace(/\\/g, "");
      }
      function makeFormatFunction(format2) {
        var array = format2.match(formattingTokens), i, length;
        for (i = 0, length = array.length; i < length; i++) {
          if (formatTokenFunctions[array[i]]) {
            array[i] = formatTokenFunctions[array[i]];
          } else {
            array[i] = removeFormattingTokens(array[i]);
          }
        }
        return function(mom) {
          var output = "", i2;
          for (i2 = 0; i2 < length; i2++) {
            output += isFunction(array[i2]) ? array[i2].call(mom, format2) : array[i2];
          }
          return output;
        };
      }
      function formatMoment(m, format2) {
        if (!m.isValid()) {
          return m.localeData().invalidDate();
        }
        format2 = expandFormat(format2, m.localeData());
        formatFunctions[format2] = formatFunctions[format2] || makeFormatFunction(format2);
        return formatFunctions[format2](m);
      }
      function expandFormat(format2, locale2) {
        var i = 5;
        function replaceLongDateFormatTokens(input) {
          return locale2.longDateFormat(input) || input;
        }
        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format2)) {
          format2 = format2.replace(
            localFormattingTokens,
            replaceLongDateFormatTokens
          );
          localFormattingTokens.lastIndex = 0;
          i -= 1;
        }
        return format2;
      }
      var defaultLongDateFormat = {
        LTS: "h:mm:ss A",
        LT: "h:mm A",
        L: "MM/DD/YYYY",
        LL: "MMMM D, YYYY",
        LLL: "MMMM D, YYYY h:mm A",
        LLLL: "dddd, MMMM D, YYYY h:mm A"
      };
      function longDateFormat(key) {
        var format2 = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
        if (format2 || !formatUpper) {
          return format2;
        }
        this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function(tok) {
          if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
            return tok.slice(1);
          }
          return tok;
        }).join("");
        return this._longDateFormat[key];
      }
      var defaultInvalidDate = "Invalid date";
      function invalidDate() {
        return this._invalidDate;
      }
      var defaultOrdinal = "%d", defaultDayOfMonthOrdinalParse = /\d{1,2}/;
      function ordinal(number) {
        return this._ordinal.replace("%d", number);
      }
      var defaultRelativeTime = {
        future: "in %s",
        past: "%s ago",
        s: "a few seconds",
        ss: "%d seconds",
        m: "a minute",
        mm: "%d minutes",
        h: "an hour",
        hh: "%d hours",
        d: "a day",
        dd: "%d days",
        w: "a week",
        ww: "%d weeks",
        M: "a month",
        MM: "%d months",
        y: "a year",
        yy: "%d years"
      };
      function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
      }
      function pastFuture(diff2, output) {
        var format2 = this._relativeTime[diff2 > 0 ? "future" : "past"];
        return isFunction(format2) ? format2(output) : format2.replace(/%s/i, output);
      }
      var aliases = {
        D: "date",
        dates: "date",
        date: "date",
        d: "day",
        days: "day",
        day: "day",
        e: "weekday",
        weekdays: "weekday",
        weekday: "weekday",
        E: "isoWeekday",
        isoweekdays: "isoWeekday",
        isoweekday: "isoWeekday",
        DDD: "dayOfYear",
        dayofyears: "dayOfYear",
        dayofyear: "dayOfYear",
        h: "hour",
        hours: "hour",
        hour: "hour",
        ms: "millisecond",
        milliseconds: "millisecond",
        millisecond: "millisecond",
        m: "minute",
        minutes: "minute",
        minute: "minute",
        M: "month",
        months: "month",
        month: "month",
        Q: "quarter",
        quarters: "quarter",
        quarter: "quarter",
        s: "second",
        seconds: "second",
        second: "second",
        gg: "weekYear",
        weekyears: "weekYear",
        weekyear: "weekYear",
        GG: "isoWeekYear",
        isoweekyears: "isoWeekYear",
        isoweekyear: "isoWeekYear",
        w: "week",
        weeks: "week",
        week: "week",
        W: "isoWeek",
        isoweeks: "isoWeek",
        isoweek: "isoWeek",
        y: "year",
        years: "year",
        year: "year"
      };
      function normalizeUnits(units) {
        return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : void 0;
      }
      function normalizeObjectUnits(inputObject) {
        var normalizedInput = {}, normalizedProp, prop;
        for (prop in inputObject) {
          if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);
            if (normalizedProp) {
              normalizedInput[normalizedProp] = inputObject[prop];
            }
          }
        }
        return normalizedInput;
      }
      var priorities = {
        date: 9,
        day: 11,
        weekday: 11,
        isoWeekday: 11,
        dayOfYear: 4,
        hour: 13,
        millisecond: 16,
        minute: 14,
        month: 8,
        quarter: 7,
        second: 15,
        weekYear: 1,
        isoWeekYear: 1,
        week: 5,
        isoWeek: 5,
        year: 1
      };
      function getPrioritizedUnits(unitsObj) {
        var units = [], u;
        for (u in unitsObj) {
          if (hasOwnProp(unitsObj, u)) {
            units.push({ unit: u, priority: priorities[u] });
          }
        }
        units.sort(function(a, b) {
          return a.priority - b.priority;
        });
        return units;
      }
      var match1 = /\d/, match2 = /\d\d/, match3 = /\d{3}/, match4 = /\d{4}/, match6 = /[+-]?\d{6}/, match1to2 = /\d\d?/, match3to4 = /\d\d\d\d?/, match5to6 = /\d\d\d\d\d\d?/, match1to3 = /\d{1,3}/, match1to4 = /\d{1,4}/, match1to6 = /[+-]?\d{1,6}/, matchUnsigned = /\d+/, matchSigned = /[+-]?\d+/, matchOffset = /Z|[+-]\d\d:?\d\d/gi, matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, match1to2NoLeadingZero = /^[1-9]\d?/, match1to2HasZero = /^([1-9]\d|\d)/, regexes;
      regexes = {};
      function addRegexToken(token2, regex, strictRegex) {
        regexes[token2] = isFunction(regex) ? regex : function(isStrict, localeData2) {
          return isStrict && strictRegex ? strictRegex : regex;
        };
      }
      function getParseRegexForToken(token2, config) {
        if (!hasOwnProp(regexes, token2)) {
          return new RegExp(unescapeFormat(token2));
        }
        return regexes[token2](config._strict, config._locale);
      }
      function unescapeFormat(s) {
        return regexEscape(
          s.replace("\\", "").replace(
            /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
            function(matched, p1, p2, p3, p4) {
              return p1 || p2 || p3 || p4;
            }
          )
        );
      }
      function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
      }
      function absFloor(number) {
        if (number < 0) {
          return Math.ceil(number) || 0;
        } else {
          return Math.floor(number);
        }
      }
      function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion, value = 0;
        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
          value = absFloor(coercedNumber);
        }
        return value;
      }
      var tokens = {};
      function addParseToken(token2, callback) {
        var i, func = callback, tokenLen;
        if (typeof token2 === "string") {
          token2 = [token2];
        }
        if (isNumber(callback)) {
          func = function(input, array) {
            array[callback] = toInt(input);
          };
        }
        tokenLen = token2.length;
        for (i = 0; i < tokenLen; i++) {
          tokens[token2[i]] = func;
        }
      }
      function addWeekParseToken(token2, callback) {
        addParseToken(token2, function(input, array, config, token3) {
          config._w = config._w || {};
          callback(input, config._w, config, token3);
        });
      }
      function addTimeToArrayFromToken(token2, input, config) {
        if (input != null && hasOwnProp(tokens, token2)) {
          tokens[token2](input, config._a, config, token2);
        }
      }
      function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
      }
      var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;
      addFormatToken("Y", 0, 0, function() {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : "+" + y;
      });
      addFormatToken(0, ["YY", 2], 0, function() {
        return this.year() % 100;
      });
      addFormatToken(0, ["YYYY", 4], 0, "year");
      addFormatToken(0, ["YYYYY", 5], 0, "year");
      addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
      addRegexToken("Y", matchSigned);
      addRegexToken("YY", match1to2, match2);
      addRegexToken("YYYY", match1to4, match4);
      addRegexToken("YYYYY", match1to6, match6);
      addRegexToken("YYYYYY", match1to6, match6);
      addParseToken(["YYYYY", "YYYYYY"], YEAR);
      addParseToken("YYYY", function(input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
      });
      addParseToken("YY", function(input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
      });
      addParseToken("Y", function(input, array) {
        array[YEAR] = parseInt(input, 10);
      });
      function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
      }
      hooks.parseTwoDigitYear = function(input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
      };
      var getSetYear = makeGetSet("FullYear", true);
      function getIsLeapYear() {
        return isLeapYear(this.year());
      }
      function makeGetSet(unit, keepTime) {
        return function(value) {
          if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
          } else {
            return get(this, unit);
          }
        };
      }
      function get(mom, unit) {
        if (!mom.isValid()) {
          return NaN;
        }
        var d = mom._d, isUTC = mom._isUTC;
        switch (unit) {
          case "Milliseconds":
            return isUTC ? d.getUTCMilliseconds() : d.getMilliseconds();
          case "Seconds":
            return isUTC ? d.getUTCSeconds() : d.getSeconds();
          case "Minutes":
            return isUTC ? d.getUTCMinutes() : d.getMinutes();
          case "Hours":
            return isUTC ? d.getUTCHours() : d.getHours();
          case "Date":
            return isUTC ? d.getUTCDate() : d.getDate();
          case "Day":
            return isUTC ? d.getUTCDay() : d.getDay();
          case "Month":
            return isUTC ? d.getUTCMonth() : d.getMonth();
          case "FullYear":
            return isUTC ? d.getUTCFullYear() : d.getFullYear();
          default:
            return NaN;
        }
      }
      function set$1(mom, unit, value) {
        var d, isUTC, year, month, date;
        if (!mom.isValid() || isNaN(value)) {
          return;
        }
        d = mom._d;
        isUTC = mom._isUTC;
        switch (unit) {
          case "Milliseconds":
            return void (isUTC ? d.setUTCMilliseconds(value) : d.setMilliseconds(value));
          case "Seconds":
            return void (isUTC ? d.setUTCSeconds(value) : d.setSeconds(value));
          case "Minutes":
            return void (isUTC ? d.setUTCMinutes(value) : d.setMinutes(value));
          case "Hours":
            return void (isUTC ? d.setUTCHours(value) : d.setHours(value));
          case "Date":
            return void (isUTC ? d.setUTCDate(value) : d.setDate(value));
          // case 'Day': // Not real
          //    return void (isUTC ? d.setUTCDay(value) : d.setDay(value));
          // case 'Month': // Not used because we need to pass two variables
          //     return void (isUTC ? d.setUTCMonth(value) : d.setMonth(value));
          case "FullYear":
            break;
          // See below ...
          default:
            return;
        }
        year = value;
        month = mom.month();
        date = mom.date();
        date = date === 29 && month === 1 && !isLeapYear(year) ? 28 : date;
        void (isUTC ? d.setUTCFullYear(year, month, date) : d.setFullYear(year, month, date));
      }
      function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
          return this[units]();
        }
        return this;
      }
      function stringSet(units, value) {
        if (typeof units === "object") {
          units = normalizeObjectUnits(units);
          var prioritized = getPrioritizedUnits(units), i, prioritizedLen = prioritized.length;
          for (i = 0; i < prioritizedLen; i++) {
            this[prioritized[i].unit](units[prioritized[i].unit]);
          }
        } else {
          units = normalizeUnits(units);
          if (isFunction(this[units])) {
            return this[units](value);
          }
        }
        return this;
      }
      function mod(n, x) {
        return (n % x + x) % x;
      }
      var indexOf;
      if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
      } else {
        indexOf = function(o) {
          var i;
          for (i = 0; i < this.length; ++i) {
            if (this[i] === o) {
              return i;
            }
          }
          return -1;
        };
      }
      function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
          return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
      }
      addFormatToken("M", ["MM", 2], "Mo", function() {
        return this.month() + 1;
      });
      addFormatToken("MMM", 0, 0, function(format2) {
        return this.localeData().monthsShort(this, format2);
      });
      addFormatToken("MMMM", 0, 0, function(format2) {
        return this.localeData().months(this, format2);
      });
      addRegexToken("M", match1to2, match1to2NoLeadingZero);
      addRegexToken("MM", match1to2, match2);
      addRegexToken("MMM", function(isStrict, locale2) {
        return locale2.monthsShortRegex(isStrict);
      });
      addRegexToken("MMMM", function(isStrict, locale2) {
        return locale2.monthsRegex(isStrict);
      });
      addParseToken(["M", "MM"], function(input, array) {
        array[MONTH] = toInt(input) - 1;
      });
      addParseToken(["MMM", "MMMM"], function(input, array, config, token2) {
        var month = config._locale.monthsParse(input, token2, config._strict);
        if (month != null) {
          array[MONTH] = month;
        } else {
          getParsingFlags(config).invalidMonth = input;
        }
      });
      var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split(
        "_"
      ), defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;
      function localeMonths(m, format2) {
        if (!m) {
          return isArray(this._months) ? this._months : this._months["standalone"];
        }
        return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format2) ? "format" : "standalone"][m.month()];
      }
      function localeMonthsShort(m, format2) {
        if (!m) {
          return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format2) ? "format" : "standalone"][m.month()];
      }
      function handleStrictParse(monthName, format2, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
          for (i = 0; i < 12; ++i) {
            mom = createUTC([2e3, i]);
            this._shortMonthsParse[i] = this.monthsShort(
              mom,
              ""
            ).toLocaleLowerCase();
            this._longMonthsParse[i] = this.months(mom, "").toLocaleLowerCase();
          }
        }
        if (strict) {
          if (format2 === "MMM") {
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
          }
        } else {
          if (format2 === "MMM") {
            ii = indexOf.call(this._shortMonthsParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
          }
        }
      }
      function localeMonthsParse(monthName, format2, strict) {
        var i, mom, regex;
        if (this._monthsParseExact) {
          return handleStrictParse.call(this, monthName, format2, strict);
        }
        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
        }
        for (i = 0; i < 12; i++) {
          mom = createUTC([2e3, i]);
          if (strict && !this._longMonthsParse[i]) {
            this._longMonthsParse[i] = new RegExp(
              "^" + this.months(mom, "").replace(".", "") + "$",
              "i"
            );
            this._shortMonthsParse[i] = new RegExp(
              "^" + this.monthsShort(mom, "").replace(".", "") + "$",
              "i"
            );
          }
          if (!strict && !this._monthsParse[i]) {
            regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
            this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i");
          }
          if (strict && format2 === "MMMM" && this._longMonthsParse[i].test(monthName)) {
            return i;
          } else if (strict && format2 === "MMM" && this._shortMonthsParse[i].test(monthName)) {
            return i;
          } else if (!strict && this._monthsParse[i].test(monthName)) {
            return i;
          }
        }
      }
      function setMonth(mom, value) {
        if (!mom.isValid()) {
          return mom;
        }
        if (typeof value === "string") {
          if (/^\d+$/.test(value)) {
            value = toInt(value);
          } else {
            value = mom.localeData().monthsParse(value);
            if (!isNumber(value)) {
              return mom;
            }
          }
        }
        var month = value, date = mom.date();
        date = date < 29 ? date : Math.min(date, daysInMonth(mom.year(), month));
        void (mom._isUTC ? mom._d.setUTCMonth(month, date) : mom._d.setMonth(month, date));
        return mom;
      }
      function getSetMonth(value) {
        if (value != null) {
          setMonth(this, value);
          hooks.updateOffset(this, true);
          return this;
        } else {
          return get(this, "Month");
        }
      }
      function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
      }
      function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, "_monthsRegex")) {
            computeMonthsParse.call(this);
          }
          if (isStrict) {
            return this._monthsShortStrictRegex;
          } else {
            return this._monthsShortRegex;
          }
        } else {
          if (!hasOwnProp(this, "_monthsShortRegex")) {
            this._monthsShortRegex = defaultMonthsShortRegex;
          }
          return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
        }
      }
      function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, "_monthsRegex")) {
            computeMonthsParse.call(this);
          }
          if (isStrict) {
            return this._monthsStrictRegex;
          } else {
            return this._monthsRegex;
          }
        } else {
          if (!hasOwnProp(this, "_monthsRegex")) {
            this._monthsRegex = defaultMonthsRegex;
          }
          return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
        }
      }
      function computeMonthsParse() {
        function cmpLenRev(a, b) {
          return b.length - a.length;
        }
        var shortPieces = [], longPieces = [], mixedPieces = [], i, mom, shortP, longP;
        for (i = 0; i < 12; i++) {
          mom = createUTC([2e3, i]);
          shortP = regexEscape(this.monthsShort(mom, ""));
          longP = regexEscape(this.months(mom, ""));
          shortPieces.push(shortP);
          longPieces.push(longP);
          mixedPieces.push(longP);
          mixedPieces.push(shortP);
        }
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
          "^(" + longPieces.join("|") + ")",
          "i"
        );
        this._monthsShortStrictRegex = new RegExp(
          "^(" + shortPieces.join("|") + ")",
          "i"
        );
      }
      function createDate(y, m, d, h, M, s, ms) {
        var date;
        if (y < 100 && y >= 0) {
          date = new Date(y + 400, m, d, h, M, s, ms);
          if (isFinite(date.getFullYear())) {
            date.setFullYear(y);
          }
        } else {
          date = new Date(y, m, d, h, M, s, ms);
        }
        return date;
      }
      function createUTCDate(y) {
        var date, args;
        if (y < 100 && y >= 0) {
          args = Array.prototype.slice.call(arguments);
          args[0] = y + 400;
          date = new Date(Date.UTC.apply(null, args));
          if (isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y);
          }
        } else {
          date = new Date(Date.UTC.apply(null, arguments));
        }
        return date;
      }
      function firstWeekOffset(year, dow, doy) {
        var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
        return -fwdlw + fwd - 1;
      }
      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
        if (dayOfYear <= 0) {
          resYear = year - 1;
          resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
          resYear = year + 1;
          resDayOfYear = dayOfYear - daysInYear(year);
        } else {
          resYear = year;
          resDayOfYear = dayOfYear;
        }
        return {
          year: resYear,
          dayOfYear: resDayOfYear
        };
      }
      function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
        if (week < 1) {
          resYear = mom.year() - 1;
          resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
          resWeek = week - weeksInYear(mom.year(), dow, doy);
          resYear = mom.year() + 1;
        } else {
          resYear = mom.year();
          resWeek = week;
        }
        return {
          week: resWeek,
          year: resYear
        };
      }
      function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
      }
      addFormatToken("w", ["ww", 2], "wo", "week");
      addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
      addRegexToken("w", match1to2, match1to2NoLeadingZero);
      addRegexToken("ww", match1to2, match2);
      addRegexToken("W", match1to2, match1to2NoLeadingZero);
      addRegexToken("WW", match1to2, match2);
      addWeekParseToken(
        ["w", "ww", "W", "WW"],
        function(input, week, config, token2) {
          week[token2.substr(0, 1)] = toInt(input);
        }
      );
      function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
      }
      var defaultLocaleWeek = {
        dow: 0,
        // Sunday is the first day of the week.
        doy: 6
        // The week that contains Jan 6th is the first week of the year.
      };
      function localeFirstDayOfWeek() {
        return this._week.dow;
      }
      function localeFirstDayOfYear() {
        return this._week.doy;
      }
      function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, "d");
      }
      function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, "d");
      }
      addFormatToken("d", 0, "do", "day");
      addFormatToken("dd", 0, 0, function(format2) {
        return this.localeData().weekdaysMin(this, format2);
      });
      addFormatToken("ddd", 0, 0, function(format2) {
        return this.localeData().weekdaysShort(this, format2);
      });
      addFormatToken("dddd", 0, 0, function(format2) {
        return this.localeData().weekdays(this, format2);
      });
      addFormatToken("e", 0, 0, "weekday");
      addFormatToken("E", 0, 0, "isoWeekday");
      addRegexToken("d", match1to2);
      addRegexToken("e", match1to2);
      addRegexToken("E", match1to2);
      addRegexToken("dd", function(isStrict, locale2) {
        return locale2.weekdaysMinRegex(isStrict);
      });
      addRegexToken("ddd", function(isStrict, locale2) {
        return locale2.weekdaysShortRegex(isStrict);
      });
      addRegexToken("dddd", function(isStrict, locale2) {
        return locale2.weekdaysRegex(isStrict);
      });
      addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config, token2) {
        var weekday = config._locale.weekdaysParse(input, token2, config._strict);
        if (weekday != null) {
          week.d = weekday;
        } else {
          getParsingFlags(config).invalidWeekday = input;
        }
      });
      addWeekParseToken(["d", "e", "E"], function(input, week, config, token2) {
        week[token2] = toInt(input);
      });
      function parseWeekday(input, locale2) {
        if (typeof input !== "string") {
          return input;
        }
        if (!isNaN(input)) {
          return parseInt(input, 10);
        }
        input = locale2.weekdaysParse(input);
        if (typeof input === "number") {
          return input;
        }
        return null;
      }
      function parseIsoWeekday(input, locale2) {
        if (typeof input === "string") {
          return locale2.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
      }
      function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
      }
      var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;
      function localeWeekdays(m, format2) {
        var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format2) ? "format" : "standalone"];
        return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;
      }
      function localeWeekdaysShort(m) {
        return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
      }
      function localeWeekdaysMin(m) {
        return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
      }
      function handleStrictParse$1(weekdayName, format2, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._minWeekdaysParse = [];
          for (i = 0; i < 7; ++i) {
            mom = createUTC([2e3, 1]).day(i);
            this._minWeekdaysParse[i] = this.weekdaysMin(
              mom,
              ""
            ).toLocaleLowerCase();
            this._shortWeekdaysParse[i] = this.weekdaysShort(
              mom,
              ""
            ).toLocaleLowerCase();
            this._weekdaysParse[i] = this.weekdays(mom, "").toLocaleLowerCase();
          }
        }
        if (strict) {
          if (format2 === "dddd") {
            ii = indexOf.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else if (format2 === "ddd") {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          }
        } else {
          if (format2 === "dddd") {
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else if (format2 === "ddd") {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
              return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          }
        }
      }
      function localeWeekdaysParse(weekdayName, format2, strict) {
        var i, mom, regex;
        if (this._weekdaysParseExact) {
          return handleStrictParse$1.call(this, weekdayName, format2, strict);
        }
        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._minWeekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._fullWeekdaysParse = [];
        }
        for (i = 0; i < 7; i++) {
          mom = createUTC([2e3, 1]).day(i);
          if (strict && !this._fullWeekdaysParse[i]) {
            this._fullWeekdaysParse[i] = new RegExp(
              "^" + this.weekdays(mom, "").replace(".", "\\.?") + "$",
              "i"
            );
            this._shortWeekdaysParse[i] = new RegExp(
              "^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$",
              "i"
            );
            this._minWeekdaysParse[i] = new RegExp(
              "^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$",
              "i"
            );
          }
          if (!this._weekdaysParse[i]) {
            regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
            this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i");
          }
          if (strict && format2 === "dddd" && this._fullWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (strict && format2 === "ddd" && this._shortWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (strict && format2 === "dd" && this._minWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
            return i;
          }
        }
      }
      function getSetDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        var day = get(this, "Day");
        if (input != null) {
          input = parseWeekday(input, this.localeData());
          return this.add(input - day, "d");
        } else {
          return day;
        }
      }
      function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, "d");
      }
      function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        if (input != null) {
          var weekday = parseIsoWeekday(input, this.localeData());
          return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
          return this.day() || 7;
        }
      }
      function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysStrictRegex;
          } else {
            return this._weekdaysRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            this._weekdaysRegex = defaultWeekdaysRegex;
          }
          return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
        }
      }
      function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysShortStrictRegex;
          } else {
            return this._weekdaysShortRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysShortRegex")) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
          }
          return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
      }
      function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysMinStrictRegex;
          } else {
            return this._weekdaysMinRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysMinRegex")) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
          }
          return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
      }
      function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
          return b.length - a.length;
        }
        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
          mom = createUTC([2e3, 1]).day(i);
          minp = regexEscape(this.weekdaysMin(mom, ""));
          shortp = regexEscape(this.weekdaysShort(mom, ""));
          longp = regexEscape(this.weekdays(mom, ""));
          minPieces.push(minp);
          shortPieces.push(shortp);
          longPieces.push(longp);
          mixedPieces.push(minp);
          mixedPieces.push(shortp);
          mixedPieces.push(longp);
        }
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp(
          "^(" + longPieces.join("|") + ")",
          "i"
        );
        this._weekdaysShortStrictRegex = new RegExp(
          "^(" + shortPieces.join("|") + ")",
          "i"
        );
        this._weekdaysMinStrictRegex = new RegExp(
          "^(" + minPieces.join("|") + ")",
          "i"
        );
      }
      function hFormat() {
        return this.hours() % 12 || 12;
      }
      function kFormat() {
        return this.hours() || 24;
      }
      addFormatToken("H", ["HH", 2], 0, "hour");
      addFormatToken("h", ["hh", 2], 0, hFormat);
      addFormatToken("k", ["kk", 2], 0, kFormat);
      addFormatToken("hmm", 0, 0, function() {
        return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
      });
      addFormatToken("hmmss", 0, 0, function() {
        return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });
      addFormatToken("Hmm", 0, 0, function() {
        return "" + this.hours() + zeroFill(this.minutes(), 2);
      });
      addFormatToken("Hmmss", 0, 0, function() {
        return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });
      function meridiem(token2, lowercase) {
        addFormatToken(token2, 0, 0, function() {
          return this.localeData().meridiem(
            this.hours(),
            this.minutes(),
            lowercase
          );
        });
      }
      meridiem("a", true);
      meridiem("A", false);
      function matchMeridiem(isStrict, locale2) {
        return locale2._meridiemParse;
      }
      addRegexToken("a", matchMeridiem);
      addRegexToken("A", matchMeridiem);
      addRegexToken("H", match1to2, match1to2HasZero);
      addRegexToken("h", match1to2, match1to2NoLeadingZero);
      addRegexToken("k", match1to2, match1to2NoLeadingZero);
      addRegexToken("HH", match1to2, match2);
      addRegexToken("hh", match1to2, match2);
      addRegexToken("kk", match1to2, match2);
      addRegexToken("hmm", match3to4);
      addRegexToken("hmmss", match5to6);
      addRegexToken("Hmm", match3to4);
      addRegexToken("Hmmss", match5to6);
      addParseToken(["H", "HH"], HOUR);
      addParseToken(["k", "kk"], function(input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
      });
      addParseToken(["a", "A"], function(input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
      });
      addParseToken(["h", "hh"], function(input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
      });
      addParseToken("hmm", function(input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
      });
      addParseToken("hmmss", function(input, array, config) {
        var pos1 = input.length - 4, pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
      });
      addParseToken("Hmm", function(input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
      });
      addParseToken("Hmmss", function(input, array, config) {
        var pos1 = input.length - 4, pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
      });
      function localeIsPM(input) {
        return (input + "").toLowerCase().charAt(0) === "p";
      }
      var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet("Hours", true);
      function localeMeridiem(hours2, minutes2, isLower) {
        if (hours2 > 11) {
          return isLower ? "pm" : "PM";
        } else {
          return isLower ? "am" : "AM";
        }
      }
      var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,
        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,
        week: defaultLocaleWeek,
        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,
        meridiemParse: defaultLocaleMeridiemParse
      };
      var locales2 = {}, localeFamilies = {}, globalLocale;
      function commonPrefix(arr1, arr2) {
        var i, minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
          if (arr1[i] !== arr2[i]) {
            return i;
          }
        }
        return minl;
      }
      function normalizeLocale(key) {
        return key ? key.toLowerCase().replace("_", "-") : key;
      }
      function chooseLocale(names) {
        var i = 0, j, next, locale2, split;
        while (i < names.length) {
          split = normalizeLocale(names[i]).split("-");
          j = split.length;
          next = normalizeLocale(names[i + 1]);
          next = next ? next.split("-") : null;
          while (j > 0) {
            locale2 = loadLocale(split.slice(0, j).join("-"));
            if (locale2) {
              return locale2;
            }
            if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {
              break;
            }
            j--;
          }
          i++;
        }
        return globalLocale;
      }
      function isLocaleNameSane(name) {
        return !!(name && name.match("^[^/\\\\]*$"));
      }
      function loadLocale(name) {
        var oldLocale = null, aliasedRequire;
        if (locales2[name] === void 0 && typeof module2 !== "undefined" && module2 && module2.exports && isLocaleNameSane(name)) {
          try {
            oldLocale = globalLocale._abbr;
            aliasedRequire = require;
            aliasedRequire("./locale/" + name);
            getSetGlobalLocale(oldLocale);
          } catch (e) {
            locales2[name] = null;
          }
        }
        return locales2[name];
      }
      function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
          if (isUndefined(values)) {
            data = getLocale(key);
          } else {
            data = defineLocale(key, values);
          }
          if (data) {
            globalLocale = data;
          } else {
            if (typeof console !== "undefined" && console.warn) {
              console.warn(
                "Locale " + key + " not found. Did you forget to load it?"
              );
            }
          }
        }
        return globalLocale._abbr;
      }
      function defineLocale(name, config) {
        if (config !== null) {
          var locale2, parentConfig = baseConfig;
          config.abbr = name;
          if (locales2[name] != null) {
            deprecateSimple(
              "defineLocaleOverride",
              "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
            );
            parentConfig = locales2[name]._config;
          } else if (config.parentLocale != null) {
            if (locales2[config.parentLocale] != null) {
              parentConfig = locales2[config.parentLocale]._config;
            } else {
              locale2 = loadLocale(config.parentLocale);
              if (locale2 != null) {
                parentConfig = locale2._config;
              } else {
                if (!localeFamilies[config.parentLocale]) {
                  localeFamilies[config.parentLocale] = [];
                }
                localeFamilies[config.parentLocale].push({
                  name,
                  config
                });
                return null;
              }
            }
          }
          locales2[name] = new Locale(mergeConfigs(parentConfig, config));
          if (localeFamilies[name]) {
            localeFamilies[name].forEach(function(x) {
              defineLocale(x.name, x.config);
            });
          }
          getSetGlobalLocale(name);
          return locales2[name];
        } else {
          delete locales2[name];
          return null;
        }
      }
      function updateLocale2(name, config) {
        if (config != null) {
          var locale2, tmpLocale, parentConfig = baseConfig;
          if (locales2[name] != null && locales2[name].parentLocale != null) {
            locales2[name].set(mergeConfigs(locales2[name]._config, config));
          } else {
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
              parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            if (tmpLocale == null) {
              config.abbr = name;
            }
            locale2 = new Locale(config);
            locale2.parentLocale = locales2[name];
            locales2[name] = locale2;
          }
          getSetGlobalLocale(name);
        } else {
          if (locales2[name] != null) {
            if (locales2[name].parentLocale != null) {
              locales2[name] = locales2[name].parentLocale;
              if (name === getSetGlobalLocale()) {
                getSetGlobalLocale(name);
              }
            } else if (locales2[name] != null) {
              delete locales2[name];
            }
          }
        }
        return locales2[name];
      }
      function getLocale(key) {
        var locale2;
        if (key && key._locale && key._locale._abbr) {
          key = key._locale._abbr;
        }
        if (!key) {
          return globalLocale;
        }
        if (!isArray(key)) {
          locale2 = loadLocale(key);
          if (locale2) {
            return locale2;
          }
          key = [key];
        }
        return chooseLocale(key);
      }
      function listLocales() {
        return keys(locales2);
      }
      function checkOverflow(m) {
        var overflow, a = m._a;
        if (a && getParsingFlags(m).overflow === -2) {
          overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
          if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
          }
          if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
          }
          if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
          }
          getParsingFlags(m).overflow = overflow;
        }
        return m;
      }
      var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, tzRegex = /Z|[+-]\d\d(?::?\d\d)?/, isoDates = [
        ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
        ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
        ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
        ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
        ["YYYY-DDD", /\d{4}-\d{3}/],
        ["YYYY-MM", /\d{4}-\d\d/, false],
        ["YYYYYYMMDD", /[+-]\d{10}/],
        ["YYYYMMDD", /\d{8}/],
        ["GGGG[W]WWE", /\d{4}W\d{3}/],
        ["GGGG[W]WW", /\d{4}W\d{2}/, false],
        ["YYYYDDD", /\d{7}/],
        ["YYYYMM", /\d{6}/, false],
        ["YYYY", /\d{4}/, false]
      ], isoTimes = [
        ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
        ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
        ["HH:mm:ss", /\d\d:\d\d:\d\d/],
        ["HH:mm", /\d\d:\d\d/],
        ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
        ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
        ["HHmmss", /\d\d\d\d\d\d/],
        ["HHmm", /\d\d\d\d/],
        ["HH", /\d\d/]
      ], aspNetJsonRegex = /^\/?Date\((-?\d+)/i, rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
      };
      function configFromISO(config) {
        var i, l, string = config._i, match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
        if (match) {
          getParsingFlags(config).iso = true;
          for (i = 0, l = isoDatesLen; i < l; i++) {
            if (isoDates[i][1].exec(match[1])) {
              dateFormat = isoDates[i][0];
              allowTime = isoDates[i][2] !== false;
              break;
            }
          }
          if (dateFormat == null) {
            config._isValid = false;
            return;
          }
          if (match[3]) {
            for (i = 0, l = isoTimesLen; i < l; i++) {
              if (isoTimes[i][1].exec(match[3])) {
                timeFormat = (match[2] || " ") + isoTimes[i][0];
                break;
              }
            }
            if (timeFormat == null) {
              config._isValid = false;
              return;
            }
          }
          if (!allowTime && timeFormat != null) {
            config._isValid = false;
            return;
          }
          if (match[4]) {
            if (tzRegex.exec(match[4])) {
              tzFormat = "Z";
            } else {
              config._isValid = false;
              return;
            }
          }
          config._f = dateFormat + (timeFormat || "") + (tzFormat || "");
          configFromStringAndFormat(config);
        } else {
          config._isValid = false;
        }
      }
      function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result2 = [
          untruncateYear(yearStr),
          defaultLocaleMonthsShort.indexOf(monthStr),
          parseInt(dayStr, 10),
          parseInt(hourStr, 10),
          parseInt(minuteStr, 10)
        ];
        if (secondStr) {
          result2.push(parseInt(secondStr, 10));
        }
        return result2;
      }
      function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
          return 2e3 + year;
        } else if (year <= 999) {
          return 1900 + year;
        }
        return year;
      }
      function preprocessRFC2822(s) {
        return s.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
      }
      function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
          var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(
            parsedInput[0],
            parsedInput[1],
            parsedInput[2]
          ).getDay();
          if (weekdayProvided !== weekdayActual) {
            getParsingFlags(config).weekdayMismatch = true;
            config._isValid = false;
            return false;
          }
        }
        return true;
      }
      function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
          return obsOffsets[obsOffset];
        } else if (militaryOffset) {
          return 0;
        } else {
          var hm = parseInt(numOffset, 10), m = hm % 100, h = (hm - m) / 100;
          return h * 60 + m;
        }
      }
      function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)), parsedArray;
        if (match) {
          parsedArray = extractFromRFC2822Strings(
            match[4],
            match[3],
            match[2],
            match[5],
            match[6],
            match[7]
          );
          if (!checkWeekday(match[1], parsedArray, config)) {
            return;
          }
          config._a = parsedArray;
          config._tzm = calculateOffset(match[8], match[9], match[10]);
          config._d = createUTCDate.apply(null, config._a);
          config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
          getParsingFlags(config).rfc2822 = true;
        } else {
          config._isValid = false;
        }
      }
      function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
          config._d = /* @__PURE__ */ new Date(+matched[1]);
          return;
        }
        configFromISO(config);
        if (config._isValid === false) {
          delete config._isValid;
        } else {
          return;
        }
        configFromRFC2822(config);
        if (config._isValid === false) {
          delete config._isValid;
        } else {
          return;
        }
        if (config._strict) {
          config._isValid = false;
        } else {
          hooks.createFromInputFallback(config);
        }
      }
      hooks.createFromInputFallback = deprecate(
        "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
        function(config) {
          config._d = /* @__PURE__ */ new Date(config._i + (config._useUTC ? " UTC" : ""));
        }
      );
      function defaults(a, b, c) {
        if (a != null) {
          return a;
        }
        if (b != null) {
          return b;
        }
        return c;
      }
      function currentDateArray(config) {
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
          return [
            nowValue.getUTCFullYear(),
            nowValue.getUTCMonth(),
            nowValue.getUTCDate()
          ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
      }
      function configFromArray(config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;
        if (config._d) {
          return;
        }
        currentDate = currentDateArray(config);
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
          dayOfYearFromWeekInfo(config);
        }
        if (config._dayOfYear != null) {
          yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
          if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
            getParsingFlags(config)._overflowDayOfYear = true;
          }
          date = createUTCDate(yearToUse, 0, config._dayOfYear);
          config._a[MONTH] = date.getUTCMonth();
          config._a[DATE] = date.getUTCDate();
        }
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
          config._a[i] = input[i] = currentDate[i];
        }
        for (; i < 7; i++) {
          config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
        }
        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
          config._nextDay = true;
          config._a[HOUR] = 0;
        }
        config._d = (config._useUTC ? createUTCDate : createDate).apply(
          null,
          input
        );
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
        if (config._tzm != null) {
          config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }
        if (config._nextDay) {
          config._a[HOUR] = 24;
        }
        if (config._w && typeof config._w.d !== "undefined" && config._w.d !== expectedWeekday) {
          getParsingFlags(config).weekdayMismatch = true;
        }
      }
      function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
          dow = 1;
          doy = 4;
          weekYear = defaults(
            w.GG,
            config._a[YEAR],
            weekOfYear(createLocal(), 1, 4).year
          );
          week = defaults(w.W, 1);
          weekday = defaults(w.E, 1);
          if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
          }
        } else {
          dow = config._locale._week.dow;
          doy = config._locale._week.doy;
          curWeek = weekOfYear(createLocal(), dow, doy);
          weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
          week = defaults(w.w, curWeek.week);
          if (w.d != null) {
            weekday = w.d;
            if (weekday < 0 || weekday > 6) {
              weekdayOverflow = true;
            }
          } else if (w.e != null) {
            weekday = w.e + dow;
            if (w.e < 0 || w.e > 6) {
              weekdayOverflow = true;
            }
          } else {
            weekday = dow;
          }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
          getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
          getParsingFlags(config)._overflowWeekday = true;
        } else {
          temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
          config._a[YEAR] = temp.year;
          config._dayOfYear = temp.dayOfYear;
        }
      }
      hooks.ISO_8601 = function() {
      };
      hooks.RFC_2822 = function() {
      };
      function configFromStringAndFormat(config) {
        if (config._f === hooks.ISO_8601) {
          configFromISO(config);
          return;
        }
        if (config._f === hooks.RFC_2822) {
          configFromRFC2822(config);
          return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;
        var string = "" + config._i, i, parsedInput, tokens2, token2, skipped, stringLength = string.length, totalParsedInputLength = 0, era, tokenLen;
        tokens2 = expandFormat(config._f, config._locale).match(formattingTokens) || [];
        tokenLen = tokens2.length;
        for (i = 0; i < tokenLen; i++) {
          token2 = tokens2[i];
          parsedInput = (string.match(getParseRegexForToken(token2, config)) || [])[0];
          if (parsedInput) {
            skipped = string.substr(0, string.indexOf(parsedInput));
            if (skipped.length > 0) {
              getParsingFlags(config).unusedInput.push(skipped);
            }
            string = string.slice(
              string.indexOf(parsedInput) + parsedInput.length
            );
            totalParsedInputLength += parsedInput.length;
          }
          if (formatTokenFunctions[token2]) {
            if (parsedInput) {
              getParsingFlags(config).empty = false;
            } else {
              getParsingFlags(config).unusedTokens.push(token2);
            }
            addTimeToArrayFromToken(token2, parsedInput, config);
          } else if (config._strict && !parsedInput) {
            getParsingFlags(config).unusedTokens.push(token2);
          }
        }
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
          getParsingFlags(config).unusedInput.push(string);
        }
        if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
          getParsingFlags(config).bigHour = void 0;
        }
        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        config._a[HOUR] = meridiemFixWrap(
          config._locale,
          config._a[HOUR],
          config._meridiem
        );
        era = getParsingFlags(config).era;
        if (era !== null) {
          config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }
        configFromArray(config);
        checkOverflow(config);
      }
      function meridiemFixWrap(locale2, hour, meridiem2) {
        var isPm;
        if (meridiem2 == null) {
          return hour;
        }
        if (locale2.meridiemHour != null) {
          return locale2.meridiemHour(hour, meridiem2);
        } else if (locale2.isPM != null) {
          isPm = locale2.isPM(meridiem2);
          if (isPm && hour < 12) {
            hour += 12;
          }
          if (!isPm && hour === 12) {
            hour = 0;
          }
          return hour;
        } else {
          return hour;
        }
      }
      function configFromStringAndArray(config) {
        var tempConfig, bestMoment, scoreToBeat, i, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config._f.length;
        if (configfLen === 0) {
          getParsingFlags(config).invalidFormat = true;
          config._d = /* @__PURE__ */ new Date(NaN);
          return;
        }
        for (i = 0; i < configfLen; i++) {
          currentScore = 0;
          validFormatFound = false;
          tempConfig = copyConfig({}, config);
          if (config._useUTC != null) {
            tempConfig._useUTC = config._useUTC;
          }
          tempConfig._f = config._f[i];
          configFromStringAndFormat(tempConfig);
          if (isValid(tempConfig)) {
            validFormatFound = true;
          }
          currentScore += getParsingFlags(tempConfig).charsLeftOver;
          currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
          getParsingFlags(tempConfig).score = currentScore;
          if (!bestFormatIsValid) {
            if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
              scoreToBeat = currentScore;
              bestMoment = tempConfig;
              if (validFormatFound) {
                bestFormatIsValid = true;
              }
            }
          } else {
            if (currentScore < scoreToBeat) {
              scoreToBeat = currentScore;
              bestMoment = tempConfig;
            }
          }
        }
        extend(config, bestMoment || tempConfig);
      }
      function configFromObject(config) {
        if (config._d) {
          return;
        }
        var i = normalizeObjectUnits(config._i), dayOrDate = i.day === void 0 ? i.date : i.day;
        config._a = map(
          [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
          function(obj) {
            return obj && parseInt(obj, 10);
          }
        );
        configFromArray(config);
      }
      function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
          res.add(1, "d");
          res._nextDay = void 0;
        }
        return res;
      }
      function prepareConfig(config) {
        var input = config._i, format2 = config._f;
        config._locale = config._locale || getLocale(config._l);
        if (input === null || format2 === void 0 && input === "") {
          return createInvalid({ nullInput: true });
        }
        if (typeof input === "string") {
          config._i = input = config._locale.preparse(input);
        }
        if (isMoment(input)) {
          return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
          config._d = input;
        } else if (isArray(format2)) {
          configFromStringAndArray(config);
        } else if (format2) {
          configFromStringAndFormat(config);
        } else {
          configFromInput(config);
        }
        if (!isValid(config)) {
          config._d = null;
        }
        return config;
      }
      function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
          config._d = new Date(hooks.now());
        } else if (isDate(input)) {
          config._d = new Date(input.valueOf());
        } else if (typeof input === "string") {
          configFromString(config);
        } else if (isArray(input)) {
          config._a = map(input.slice(0), function(obj) {
            return parseInt(obj, 10);
          });
          configFromArray(config);
        } else if (isObject(input)) {
          configFromObject(config);
        } else if (isNumber(input)) {
          config._d = new Date(input);
        } else {
          hooks.createFromInputFallback(config);
        }
      }
      function createLocalOrUTC(input, format2, locale2, strict, isUTC) {
        var c = {};
        if (format2 === true || format2 === false) {
          strict = format2;
          format2 = void 0;
        }
        if (locale2 === true || locale2 === false) {
          strict = locale2;
          locale2 = void 0;
        }
        if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
          input = void 0;
        }
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale2;
        c._i = input;
        c._f = format2;
        c._strict = strict;
        return createFromConfig(c);
      }
      function createLocal(input, format2, locale2, strict) {
        return createLocalOrUTC(input, format2, locale2, strict, false);
      }
      var prototypeMin = deprecate(
        "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
        function() {
          var other = createLocal.apply(null, arguments);
          if (this.isValid() && other.isValid()) {
            return other < this ? this : other;
          } else {
            return createInvalid();
          }
        }
      ), prototypeMax = deprecate(
        "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
        function() {
          var other = createLocal.apply(null, arguments);
          if (this.isValid() && other.isValid()) {
            return other > this ? this : other;
          } else {
            return createInvalid();
          }
        }
      );
      function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
          moments = moments[0];
        }
        if (!moments.length) {
          return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
          if (!moments[i].isValid() || moments[i][fn](res)) {
            res = moments[i];
          }
        }
        return res;
      }
      function min2() {
        var args = [].slice.call(arguments, 0);
        return pickBy("isBefore", args);
      }
      function max2() {
        var args = [].slice.call(arguments, 0);
        return pickBy("isAfter", args);
      }
      var now2 = function() {
        return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
      };
      var ordering = [
        "year",
        "quarter",
        "month",
        "week",
        "day",
        "hour",
        "minute",
        "second",
        "millisecond"
      ];
      function isDurationValid(m) {
        var key, unitHasDecimal = false, i, orderLen = ordering.length;
        for (key in m) {
          if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
            return false;
          }
        }
        for (i = 0; i < orderLen; ++i) {
          if (m[ordering[i]]) {
            if (unitHasDecimal) {
              return false;
            }
            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
              unitHasDecimal = true;
            }
          }
        }
        return true;
      }
      function isValid$1() {
        return this._isValid;
      }
      function createInvalid$1() {
        return createDuration(NaN);
      }
      function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration), years2 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months2 = normalizedInput.month || 0, weeks2 = normalizedInput.week || normalizedInput.isoWeek || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
        this._isValid = isDurationValid(normalizedInput);
        this._milliseconds = +milliseconds2 + seconds2 * 1e3 + // 1000
        minutes2 * 6e4 + // 1000 * 60
        hours2 * 1e3 * 60 * 60;
        this._days = +days2 + weeks2 * 7;
        this._months = +months2 + quarters * 3 + years2 * 12;
        this._data = {};
        this._locale = getLocale();
        this._bubble();
      }
      function isDuration(obj) {
        return obj instanceof Duration;
      }
      function absRound(number) {
        if (number < 0) {
          return Math.round(-1 * number) * -1;
        } else {
          return Math.round(number);
        }
      }
      function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;
        for (i = 0; i < len; i++) {
          if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
            diffs++;
          }
        }
        return diffs + lengthDiff;
      }
      function offset2(token2, separator) {
        addFormatToken(token2, 0, 0, function() {
          var offset3 = this.utcOffset(), sign2 = "+";
          if (offset3 < 0) {
            offset3 = -offset3;
            sign2 = "-";
          }
          return sign2 + zeroFill(~~(offset3 / 60), 2) + separator + zeroFill(~~offset3 % 60, 2);
        });
      }
      offset2("Z", ":");
      offset2("ZZ", "");
      addRegexToken("Z", matchShortOffset);
      addRegexToken("ZZ", matchShortOffset);
      addParseToken(["Z", "ZZ"], function(input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
      });
      var chunkOffset = /([\+\-]|\d\d)/gi;
      function offsetFromString(matcher, string) {
        var matches = (string || "").match(matcher), chunk, parts, minutes2;
        if (matches === null) {
          return null;
        }
        chunk = matches[matches.length - 1] || [];
        parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
        minutes2 = +(parts[1] * 60) + toInt(parts[2]);
        return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
      }
      function cloneWithOffset(input, model) {
        var res, diff2;
        if (model._isUTC) {
          res = model.clone();
          diff2 = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
          res._d.setTime(res._d.valueOf() + diff2);
          hooks.updateOffset(res, false);
          return res;
        } else {
          return createLocal(input).local();
        }
      }
      function getDateOffset(m) {
        return -Math.round(m._d.getTimezoneOffset());
      }
      hooks.updateOffset = function() {
      };
      function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset3 = this._offset || 0, localAdjust;
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        if (input != null) {
          if (typeof input === "string") {
            input = offsetFromString(matchShortOffset, input);
            if (input === null) {
              return this;
            }
          } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
          }
          if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
          }
          this._offset = input;
          this._isUTC = true;
          if (localAdjust != null) {
            this.add(localAdjust, "m");
          }
          if (offset3 !== input) {
            if (!keepLocalTime || this._changeInProgress) {
              addSubtract(
                this,
                createDuration(input - offset3, "m"),
                1,
                false
              );
            } else if (!this._changeInProgress) {
              this._changeInProgress = true;
              hooks.updateOffset(this, true);
              this._changeInProgress = null;
            }
          }
          return this;
        } else {
          return this._isUTC ? offset3 : getDateOffset(this);
        }
      }
      function getSetZone(input, keepLocalTime) {
        if (input != null) {
          if (typeof input !== "string") {
            input = -input;
          }
          this.utcOffset(input, keepLocalTime);
          return this;
        } else {
          return -this.utcOffset();
        }
      }
      function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
      }
      function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
          this.utcOffset(0, keepLocalTime);
          this._isUTC = false;
          if (keepLocalTime) {
            this.subtract(getDateOffset(this), "m");
          }
        }
        return this;
      }
      function setOffsetToParsedOffset() {
        if (this._tzm != null) {
          this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === "string") {
          var tZone = offsetFromString(matchOffset, this._i);
          if (tZone != null) {
            this.utcOffset(tZone);
          } else {
            this.utcOffset(0, true);
          }
        }
        return this;
      }
      function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
          return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;
        return (this.utcOffset() - input) % 60 === 0;
      }
      function isDaylightSavingTime() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
      }
      function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
          return this._isDSTShifted;
        }
        var c = {}, other;
        copyConfig(c, this);
        c = prepareConfig(c);
        if (c._a) {
          other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
          this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
          this._isDSTShifted = false;
        }
        return this._isDSTShifted;
      }
      function isLocal() {
        return this.isValid() ? !this._isUTC : false;
      }
      function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
      }
      function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
      }
      var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
      function createDuration(input, key) {
        var duration = input, match = null, sign2, ret, diffRes;
        if (isDuration(input)) {
          duration = {
            ms: input._milliseconds,
            d: input._days,
            M: input._months
          };
        } else if (isNumber(input) || !isNaN(+input)) {
          duration = {};
          if (key) {
            duration[key] = +input;
          } else {
            duration.milliseconds = +input;
          }
        } else if (match = aspNetRegex.exec(input)) {
          sign2 = match[1] === "-" ? -1 : 1;
          duration = {
            y: 0,
            d: toInt(match[DATE]) * sign2,
            h: toInt(match[HOUR]) * sign2,
            m: toInt(match[MINUTE]) * sign2,
            s: toInt(match[SECOND]) * sign2,
            ms: toInt(absRound(match[MILLISECOND] * 1e3)) * sign2
            // the millisecond decimal point is included in the match
          };
        } else if (match = isoRegex.exec(input)) {
          sign2 = match[1] === "-" ? -1 : 1;
          duration = {
            y: parseIso(match[2], sign2),
            M: parseIso(match[3], sign2),
            w: parseIso(match[4], sign2),
            d: parseIso(match[5], sign2),
            h: parseIso(match[6], sign2),
            m: parseIso(match[7], sign2),
            s: parseIso(match[8], sign2)
          };
        } else if (duration == null) {
          duration = {};
        } else if (typeof duration === "object" && ("from" in duration || "to" in duration)) {
          diffRes = momentsDifference(
            createLocal(duration.from),
            createLocal(duration.to)
          );
          duration = {};
          duration.ms = diffRes.milliseconds;
          duration.M = diffRes.months;
        }
        ret = new Duration(duration);
        if (isDuration(input) && hasOwnProp(input, "_locale")) {
          ret._locale = input._locale;
        }
        if (isDuration(input) && hasOwnProp(input, "_isValid")) {
          ret._isValid = input._isValid;
        }
        return ret;
      }
      createDuration.fn = Duration.prototype;
      createDuration.invalid = createInvalid$1;
      function parseIso(inp, sign2) {
        var res = inp && parseFloat(inp.replace(",", "."));
        return (isNaN(res) ? 0 : res) * sign2;
      }
      function positiveMomentsDifference(base, other) {
        var res = {};
        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, "M").isAfter(other)) {
          --res.months;
        }
        res.milliseconds = +other - +base.clone().add(res.months, "M");
        return res;
      }
      function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
          return { milliseconds: 0, months: 0 };
        }
        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
          res = positiveMomentsDifference(base, other);
        } else {
          res = positiveMomentsDifference(other, base);
          res.milliseconds = -res.milliseconds;
          res.months = -res.months;
        }
        return res;
      }
      function createAdder(direction, name) {
        return function(val, period) {
          var dur, tmp;
          if (period !== null && !isNaN(+period)) {
            deprecateSimple(
              name,
              "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
            );
            tmp = val;
            val = period;
            period = tmp;
          }
          dur = createDuration(val, period);
          addSubtract(this, dur, direction);
          return this;
        };
      }
      function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds2 = duration._milliseconds, days2 = absRound(duration._days), months2 = absRound(duration._months);
        if (!mom.isValid()) {
          return;
        }
        updateOffset = updateOffset == null ? true : updateOffset;
        if (months2) {
          setMonth(mom, get(mom, "Month") + months2 * isAdding);
        }
        if (days2) {
          set$1(mom, "Date", get(mom, "Date") + days2 * isAdding);
        }
        if (milliseconds2) {
          mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
        }
        if (updateOffset) {
          hooks.updateOffset(mom, days2 || months2);
        }
      }
      var add = createAdder(1, "add"), subtract = createAdder(-1, "subtract");
      function isString(input) {
        return typeof input === "string" || input instanceof String;
      }
      function isMomentInput(input) {
        return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === void 0;
      }
      function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
          "years",
          "year",
          "y",
          "months",
          "month",
          "M",
          "days",
          "day",
          "d",
          "dates",
          "date",
          "D",
          "hours",
          "hour",
          "h",
          "minutes",
          "minute",
          "m",
          "seconds",
          "second",
          "s",
          "milliseconds",
          "millisecond",
          "ms"
        ], i, property, propertyLen = properties.length;
        for (i = 0; i < propertyLen; i += 1) {
          property = properties[i];
          propertyTest = propertyTest || hasOwnProp(input, property);
        }
        return objectTest && propertyTest;
      }
      function isNumberOrStringArray(input) {
        var arrayTest = isArray(input), dataTypeTest = false;
        if (arrayTest) {
          dataTypeTest = input.filter(function(item) {
            return !isNumber(item) && isString(input);
          }).length === 0;
        }
        return arrayTest && dataTypeTest;
      }
      function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
          "sameDay",
          "nextDay",
          "lastDay",
          "nextWeek",
          "lastWeek",
          "sameElse"
        ], i, property;
        for (i = 0; i < properties.length; i += 1) {
          property = properties[i];
          propertyTest = propertyTest || hasOwnProp(input, property);
        }
        return objectTest && propertyTest;
      }
      function getCalendarFormat(myMoment, now3) {
        var diff2 = myMoment.diff(now3, "days", true);
        return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
      }
      function calendar$1(time, formats) {
        if (arguments.length === 1) {
          if (!arguments[0]) {
            time = void 0;
            formats = void 0;
          } else if (isMomentInput(arguments[0])) {
            time = arguments[0];
            formats = void 0;
          } else if (isCalendarSpec(arguments[0])) {
            formats = arguments[0];
            time = void 0;
          }
        }
        var now3 = time || createLocal(), sod = cloneWithOffset(now3, this).startOf("day"), format2 = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction(formats[format2]) ? formats[format2].call(this, now3) : formats[format2]);
        return this.format(
          output || this.localeData().calendar(format2, this, createLocal(now3))
        );
      }
      function clone() {
        return new Moment(this);
      }
      function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units = normalizeUnits(units) || "millisecond";
        if (units === "millisecond") {
          return this.valueOf() > localInput.valueOf();
        } else {
          return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
      }
      function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units = normalizeUnits(units) || "millisecond";
        if (units === "millisecond") {
          return this.valueOf() < localInput.valueOf();
        } else {
          return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
      }
      function isBetween(from2, to2, units, inclusivity) {
        var localFrom = isMoment(from2) ? from2 : createLocal(from2), localTo = isMoment(to2) ? to2 : createLocal(to2);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
          return false;
        }
        inclusivity = inclusivity || "()";
        return (inclusivity[0] === "(" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
      }
      function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input), inputMs;
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units = normalizeUnits(units) || "millisecond";
        if (units === "millisecond") {
          return this.valueOf() === localInput.valueOf();
        } else {
          inputMs = localInput.valueOf();
          return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
      }
      function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
      }
      function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
      }
      function diff(input, units, asFloat) {
        var that, zoneDelta, output;
        if (!this.isValid()) {
          return NaN;
        }
        that = cloneWithOffset(input, this);
        if (!that.isValid()) {
          return NaN;
        }
        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
        units = normalizeUnits(units);
        switch (units) {
          case "year":
            output = monthDiff(this, that) / 12;
            break;
          case "month":
            output = monthDiff(this, that);
            break;
          case "quarter":
            output = monthDiff(this, that) / 3;
            break;
          case "second":
            output = (this - that) / 1e3;
            break;
          // 1000
          case "minute":
            output = (this - that) / 6e4;
            break;
          // 1000 * 60
          case "hour":
            output = (this - that) / 36e5;
            break;
          // 1000 * 60 * 60
          case "day":
            output = (this - that - zoneDelta) / 864e5;
            break;
          // 1000 * 60 * 60 * 24, negate dst
          case "week":
            output = (this - that - zoneDelta) / 6048e5;
            break;
          // 1000 * 60 * 60 * 24 * 7, negate dst
          default:
            output = this - that;
        }
        return asFloat ? output : absFloor(output);
      }
      function monthDiff(a, b) {
        if (a.date() < b.date()) {
          return -monthDiff(b, a);
        }
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()), anchor = a.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
        if (b - anchor < 0) {
          anchor2 = a.clone().add(wholeMonthDiff - 1, "months");
          adjust = (b - anchor) / (anchor - anchor2);
        } else {
          anchor2 = a.clone().add(wholeMonthDiff + 1, "months");
          adjust = (b - anchor) / (anchor2 - anchor);
        }
        return -(wholeMonthDiff + adjust) || 0;
      }
      hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
      hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
      function toString() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
      }
      function toISOString(keepOffset) {
        if (!this.isValid()) {
          return null;
        }
        var utc = keepOffset !== true, m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
          return formatMoment(
            m,
            utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
          );
        }
        if (isFunction(Date.prototype.toISOString)) {
          if (utc) {
            return this.toDate().toISOString();
          } else {
            return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m, "Z"));
          }
        }
        return formatMoment(
          m,
          utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
        );
      }
      function inspect() {
        if (!this.isValid()) {
          return "moment.invalid(/* " + this._i + " */)";
        }
        var func = "moment", zone = "", prefix, year, datetime, suffix;
        if (!this.isLocal()) {
          func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
          zone = "Z";
        }
        prefix = "[" + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
        datetime = "-MM-DD[T]HH:mm:ss.SSS";
        suffix = zone + '[")]';
        return this.format(prefix + year + datetime + suffix);
      }
      function format(inputString) {
        if (!inputString) {
          inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
      }
      function from(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }
      function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
      }
      function to(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }
      function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
      }
      function locale(key) {
        var newLocaleData;
        if (key === void 0) {
          return this._locale._abbr;
        } else {
          newLocaleData = getLocale(key);
          if (newLocaleData != null) {
            this._locale = newLocaleData;
          }
          return this;
        }
      }
      var lang = deprecate(
        "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
        function(key) {
          if (key === void 0) {
            return this.localeData();
          } else {
            return this.locale(key);
          }
        }
      );
      function localeData() {
        return this._locale;
      }
      var MS_PER_SECOND = 1e3, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
      function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
      }
      function localStartOfDate(y, m, d) {
        if (y < 100 && y >= 0) {
          return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
          return new Date(y, m, d).valueOf();
        }
      }
      function utcStartOfDate(y, m, d) {
        if (y < 100 && y >= 0) {
          return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
          return Date.UTC(y, m, d);
        }
      }
      function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === void 0 || units === "millisecond" || !this.isValid()) {
          return this;
        }
        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
        switch (units) {
          case "year":
            time = startOfDate(this.year(), 0, 1);
            break;
          case "quarter":
            time = startOfDate(
              this.year(),
              this.month() - this.month() % 3,
              1
            );
            break;
          case "month":
            time = startOfDate(this.year(), this.month(), 1);
            break;
          case "week":
            time = startOfDate(
              this.year(),
              this.month(),
              this.date() - this.weekday()
            );
            break;
          case "isoWeek":
            time = startOfDate(
              this.year(),
              this.month(),
              this.date() - (this.isoWeekday() - 1)
            );
            break;
          case "day":
          case "date":
            time = startOfDate(this.year(), this.month(), this.date());
            break;
          case "hour":
            time = this._d.valueOf();
            time -= mod$1(
              time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
              MS_PER_HOUR
            );
            break;
          case "minute":
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_MINUTE);
            break;
          case "second":
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_SECOND);
            break;
        }
        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
      }
      function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === void 0 || units === "millisecond" || !this.isValid()) {
          return this;
        }
        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
        switch (units) {
          case "year":
            time = startOfDate(this.year() + 1, 0, 1) - 1;
            break;
          case "quarter":
            time = startOfDate(
              this.year(),
              this.month() - this.month() % 3 + 3,
              1
            ) - 1;
            break;
          case "month":
            time = startOfDate(this.year(), this.month() + 1, 1) - 1;
            break;
          case "week":
            time = startOfDate(
              this.year(),
              this.month(),
              this.date() - this.weekday() + 7
            ) - 1;
            break;
          case "isoWeek":
            time = startOfDate(
              this.year(),
              this.month(),
              this.date() - (this.isoWeekday() - 1) + 7
            ) - 1;
            break;
          case "day":
          case "date":
            time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
            break;
          case "hour":
            time = this._d.valueOf();
            time += MS_PER_HOUR - mod$1(
              time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
              MS_PER_HOUR
            ) - 1;
            break;
          case "minute":
            time = this._d.valueOf();
            time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
            break;
          case "second":
            time = this._d.valueOf();
            time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
            break;
        }
        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
      }
      function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 6e4;
      }
      function unix() {
        return Math.floor(this.valueOf() / 1e3);
      }
      function toDate() {
        return new Date(this.valueOf());
      }
      function toArray() {
        var m = this;
        return [
          m.year(),
          m.month(),
          m.date(),
          m.hour(),
          m.minute(),
          m.second(),
          m.millisecond()
        ];
      }
      function toObject() {
        var m = this;
        return {
          years: m.year(),
          months: m.month(),
          date: m.date(),
          hours: m.hours(),
          minutes: m.minutes(),
          seconds: m.seconds(),
          milliseconds: m.milliseconds()
        };
      }
      function toJSON() {
        return this.isValid() ? this.toISOString() : null;
      }
      function isValid$2() {
        return isValid(this);
      }
      function parsingFlags() {
        return extend({}, getParsingFlags(this));
      }
      function invalidAt() {
        return getParsingFlags(this).overflow;
      }
      function creationData() {
        return {
          input: this._i,
          format: this._f,
          locale: this._locale,
          isUTC: this._isUTC,
          strict: this._strict
        };
      }
      addFormatToken("N", 0, 0, "eraAbbr");
      addFormatToken("NN", 0, 0, "eraAbbr");
      addFormatToken("NNN", 0, 0, "eraAbbr");
      addFormatToken("NNNN", 0, 0, "eraName");
      addFormatToken("NNNNN", 0, 0, "eraNarrow");
      addFormatToken("y", ["y", 1], "yo", "eraYear");
      addFormatToken("y", ["yy", 2], 0, "eraYear");
      addFormatToken("y", ["yyy", 3], 0, "eraYear");
      addFormatToken("y", ["yyyy", 4], 0, "eraYear");
      addRegexToken("N", matchEraAbbr);
      addRegexToken("NN", matchEraAbbr);
      addRegexToken("NNN", matchEraAbbr);
      addRegexToken("NNNN", matchEraName);
      addRegexToken("NNNNN", matchEraNarrow);
      addParseToken(
        ["N", "NN", "NNN", "NNNN", "NNNNN"],
        function(input, array, config, token2) {
          var era = config._locale.erasParse(input, token2, config._strict);
          if (era) {
            getParsingFlags(config).era = era;
          } else {
            getParsingFlags(config).invalidEra = input;
          }
        }
      );
      addRegexToken("y", matchUnsigned);
      addRegexToken("yy", matchUnsigned);
      addRegexToken("yyy", matchUnsigned);
      addRegexToken("yyyy", matchUnsigned);
      addRegexToken("yo", matchEraYearOrdinal);
      addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
      addParseToken(["yo"], function(input, array, config, token2) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
          match = input.match(config._locale._eraYearOrdinalRegex);
        }
        if (config._locale.eraYearOrdinalParse) {
          array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
          array[YEAR] = parseInt(input, 10);
        }
      });
      function localeEras(m, format2) {
        var i, l, date, eras = this._eras || getLocale("en")._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
          switch (typeof eras[i].since) {
            case "string":
              date = hooks(eras[i].since).startOf("day");
              eras[i].since = date.valueOf();
              break;
          }
          switch (typeof eras[i].until) {
            case "undefined":
              eras[i].until = Infinity;
              break;
            case "string":
              date = hooks(eras[i].until).startOf("day").valueOf();
              eras[i].until = date.valueOf();
              break;
          }
        }
        return eras;
      }
      function localeErasParse(eraName, format2, strict) {
        var i, l, eras = this.eras(), name, abbr, narrow;
        eraName = eraName.toUpperCase();
        for (i = 0, l = eras.length; i < l; ++i) {
          name = eras[i].name.toUpperCase();
          abbr = eras[i].abbr.toUpperCase();
          narrow = eras[i].narrow.toUpperCase();
          if (strict) {
            switch (format2) {
              case "N":
              case "NN":
              case "NNN":
                if (abbr === eraName) {
                  return eras[i];
                }
                break;
              case "NNNN":
                if (name === eraName) {
                  return eras[i];
                }
                break;
              case "NNNNN":
                if (narrow === eraName) {
                  return eras[i];
                }
                break;
            }
          } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
            return eras[i];
          }
        }
      }
      function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? 1 : -1;
        if (year === void 0) {
          return hooks(era.since).year();
        } else {
          return hooks(era.since).year() + (year - era.offset) * dir;
        }
      }
      function getEraName() {
        var i, l, val, eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i].since <= val && val <= eras[i].until) {
            return eras[i].name;
          }
          if (eras[i].until <= val && val <= eras[i].since) {
            return eras[i].name;
          }
        }
        return "";
      }
      function getEraNarrow() {
        var i, l, val, eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i].since <= val && val <= eras[i].until) {
            return eras[i].narrow;
          }
          if (eras[i].until <= val && val <= eras[i].since) {
            return eras[i].narrow;
          }
        }
        return "";
      }
      function getEraAbbr() {
        var i, l, val, eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i].since <= val && val <= eras[i].until) {
            return eras[i].abbr;
          }
          if (eras[i].until <= val && val <= eras[i].since) {
            return eras[i].abbr;
          }
        }
        return "";
      }
      function getEraYear() {
        var i, l, dir, val, eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
          dir = eras[i].since <= eras[i].until ? 1 : -1;
          val = this.clone().startOf("day").valueOf();
          if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {
            return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;
          }
        }
        return this.year();
      }
      function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, "_erasNameRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
      }
      function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, "_erasAbbrRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
      }
      function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, "_erasNarrowRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
      }
      function matchEraAbbr(isStrict, locale2) {
        return locale2.erasAbbrRegex(isStrict);
      }
      function matchEraName(isStrict, locale2) {
        return locale2.erasNameRegex(isStrict);
      }
      function matchEraNarrow(isStrict, locale2) {
        return locale2.erasNarrowRegex(isStrict);
      }
      function matchEraYearOrdinal(isStrict, locale2) {
        return locale2._eraYearOrdinalRegex || matchUnsigned;
      }
      function computeErasParse() {
        var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i, l, erasName, erasAbbr, erasNarrow, eras = this.eras();
        for (i = 0, l = eras.length; i < l; ++i) {
          erasName = regexEscape(eras[i].name);
          erasAbbr = regexEscape(eras[i].abbr);
          erasNarrow = regexEscape(eras[i].narrow);
          namePieces.push(erasName);
          abbrPieces.push(erasAbbr);
          narrowPieces.push(erasNarrow);
          mixedPieces.push(erasName);
          mixedPieces.push(erasAbbr);
          mixedPieces.push(erasNarrow);
        }
        this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
        this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
        this._erasNarrowRegex = new RegExp(
          "^(" + narrowPieces.join("|") + ")",
          "i"
        );
      }
      addFormatToken(0, ["gg", 2], 0, function() {
        return this.weekYear() % 100;
      });
      addFormatToken(0, ["GG", 2], 0, function() {
        return this.isoWeekYear() % 100;
      });
      function addWeekYearFormatToken(token2, getter) {
        addFormatToken(0, [token2, token2.length], 0, getter);
      }
      addWeekYearFormatToken("gggg", "weekYear");
      addWeekYearFormatToken("ggggg", "weekYear");
      addWeekYearFormatToken("GGGG", "isoWeekYear");
      addWeekYearFormatToken("GGGGG", "isoWeekYear");
      addRegexToken("G", matchSigned);
      addRegexToken("g", matchSigned);
      addRegexToken("GG", match1to2, match2);
      addRegexToken("gg", match1to2, match2);
      addRegexToken("GGGG", match1to4, match4);
      addRegexToken("gggg", match1to4, match4);
      addRegexToken("GGGGG", match1to6, match6);
      addRegexToken("ggggg", match1to6, match6);
      addWeekParseToken(
        ["gggg", "ggggg", "GGGG", "GGGGG"],
        function(input, week, config, token2) {
          week[token2.substr(0, 2)] = toInt(input);
        }
      );
      addWeekParseToken(["gg", "GG"], function(input, week, config, token2) {
        week[token2] = hooks.parseTwoDigitYear(input);
      });
      function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
          this,
          input,
          this.week(),
          this.weekday() + this.localeData()._week.dow,
          this.localeData()._week.dow,
          this.localeData()._week.doy
        );
      }
      function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
          this,
          input,
          this.isoWeek(),
          this.isoWeekday(),
          1,
          4
        );
      }
      function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
      }
      function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
      }
      function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
      }
      function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
      }
      function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
          return weekOfYear(this, dow, doy).year;
        } else {
          weeksTarget = weeksInYear(input, dow, doy);
          if (week > weeksTarget) {
            week = weeksTarget;
          }
          return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
      }
      function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
      }
      addFormatToken("Q", 0, "Qo", "quarter");
      addRegexToken("Q", match1);
      addParseToken("Q", function(input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
      });
      function getSetQuarter(input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
      }
      addFormatToken("D", ["DD", 2], "Do", "date");
      addRegexToken("D", match1to2, match1to2NoLeadingZero);
      addRegexToken("DD", match1to2, match2);
      addRegexToken("Do", function(isStrict, locale2) {
        return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
      });
      addParseToken(["D", "DD"], DATE);
      addParseToken("Do", function(input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
      });
      var getSetDayOfMonth = makeGetSet("Date", true);
      addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
      addRegexToken("DDD", match1to3);
      addRegexToken("DDDD", match3);
      addParseToken(["DDD", "DDDD"], function(input, array, config) {
        config._dayOfYear = toInt(input);
      });
      function getSetDayOfYear(input) {
        var dayOfYear = Math.round(
          (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
        ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
      }
      addFormatToken("m", ["mm", 2], 0, "minute");
      addRegexToken("m", match1to2, match1to2HasZero);
      addRegexToken("mm", match1to2, match2);
      addParseToken(["m", "mm"], MINUTE);
      var getSetMinute = makeGetSet("Minutes", false);
      addFormatToken("s", ["ss", 2], 0, "second");
      addRegexToken("s", match1to2, match1to2HasZero);
      addRegexToken("ss", match1to2, match2);
      addParseToken(["s", "ss"], SECOND);
      var getSetSecond = makeGetSet("Seconds", false);
      addFormatToken("S", 0, 0, function() {
        return ~~(this.millisecond() / 100);
      });
      addFormatToken(0, ["SS", 2], 0, function() {
        return ~~(this.millisecond() / 10);
      });
      addFormatToken(0, ["SSS", 3], 0, "millisecond");
      addFormatToken(0, ["SSSS", 4], 0, function() {
        return this.millisecond() * 10;
      });
      addFormatToken(0, ["SSSSS", 5], 0, function() {
        return this.millisecond() * 100;
      });
      addFormatToken(0, ["SSSSSS", 6], 0, function() {
        return this.millisecond() * 1e3;
      });
      addFormatToken(0, ["SSSSSSS", 7], 0, function() {
        return this.millisecond() * 1e4;
      });
      addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
        return this.millisecond() * 1e5;
      });
      addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
        return this.millisecond() * 1e6;
      });
      addRegexToken("S", match1to3, match1);
      addRegexToken("SS", match1to3, match2);
      addRegexToken("SSS", match1to3, match3);
      var token, getSetMillisecond;
      for (token = "SSSS"; token.length <= 9; token += "S") {
        addRegexToken(token, matchUnsigned);
      }
      function parseMs(input, array) {
        array[MILLISECOND] = toInt(("0." + input) * 1e3);
      }
      for (token = "S"; token.length <= 9; token += "S") {
        addParseToken(token, parseMs);
      }
      getSetMillisecond = makeGetSet("Milliseconds", false);
      addFormatToken("z", 0, 0, "zoneAbbr");
      addFormatToken("zz", 0, 0, "zoneName");
      function getZoneAbbr() {
        return this._isUTC ? "UTC" : "";
      }
      function getZoneName() {
        return this._isUTC ? "Coordinated Universal Time" : "";
      }
      var proto = Moment.prototype;
      proto.add = add;
      proto.calendar = calendar$1;
      proto.clone = clone;
      proto.diff = diff;
      proto.endOf = endOf;
      proto.format = format;
      proto.from = from;
      proto.fromNow = fromNow;
      proto.to = to;
      proto.toNow = toNow;
      proto.get = stringGet;
      proto.invalidAt = invalidAt;
      proto.isAfter = isAfter;
      proto.isBefore = isBefore;
      proto.isBetween = isBetween;
      proto.isSame = isSame;
      proto.isSameOrAfter = isSameOrAfter;
      proto.isSameOrBefore = isSameOrBefore;
      proto.isValid = isValid$2;
      proto.lang = lang;
      proto.locale = locale;
      proto.localeData = localeData;
      proto.max = prototypeMax;
      proto.min = prototypeMin;
      proto.parsingFlags = parsingFlags;
      proto.set = stringSet;
      proto.startOf = startOf;
      proto.subtract = subtract;
      proto.toArray = toArray;
      proto.toObject = toObject;
      proto.toDate = toDate;
      proto.toISOString = toISOString;
      proto.inspect = inspect;
      if (typeof Symbol !== "undefined" && Symbol.for != null) {
        proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
          return "Moment<" + this.format() + ">";
        };
      }
      proto.toJSON = toJSON;
      proto.toString = toString;
      proto.unix = unix;
      proto.valueOf = valueOf;
      proto.creationData = creationData;
      proto.eraName = getEraName;
      proto.eraNarrow = getEraNarrow;
      proto.eraAbbr = getEraAbbr;
      proto.eraYear = getEraYear;
      proto.year = getSetYear;
      proto.isLeapYear = getIsLeapYear;
      proto.weekYear = getSetWeekYear;
      proto.isoWeekYear = getSetISOWeekYear;
      proto.quarter = proto.quarters = getSetQuarter;
      proto.month = getSetMonth;
      proto.daysInMonth = getDaysInMonth;
      proto.week = proto.weeks = getSetWeek;
      proto.isoWeek = proto.isoWeeks = getSetISOWeek;
      proto.weeksInYear = getWeeksInYear;
      proto.weeksInWeekYear = getWeeksInWeekYear;
      proto.isoWeeksInYear = getISOWeeksInYear;
      proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
      proto.date = getSetDayOfMonth;
      proto.day = proto.days = getSetDayOfWeek;
      proto.weekday = getSetLocaleDayOfWeek;
      proto.isoWeekday = getSetISODayOfWeek;
      proto.dayOfYear = getSetDayOfYear;
      proto.hour = proto.hours = getSetHour;
      proto.minute = proto.minutes = getSetMinute;
      proto.second = proto.seconds = getSetSecond;
      proto.millisecond = proto.milliseconds = getSetMillisecond;
      proto.utcOffset = getSetOffset;
      proto.utc = setOffsetToUTC;
      proto.local = setOffsetToLocal;
      proto.parseZone = setOffsetToParsedOffset;
      proto.hasAlignedHourOffset = hasAlignedHourOffset;
      proto.isDST = isDaylightSavingTime;
      proto.isLocal = isLocal;
      proto.isUtcOffset = isUtcOffset;
      proto.isUtc = isUtc;
      proto.isUTC = isUtc;
      proto.zoneAbbr = getZoneAbbr;
      proto.zoneName = getZoneName;
      proto.dates = deprecate(
        "dates accessor is deprecated. Use date instead.",
        getSetDayOfMonth
      );
      proto.months = deprecate(
        "months accessor is deprecated. Use month instead",
        getSetMonth
      );
      proto.years = deprecate(
        "years accessor is deprecated. Use year instead",
        getSetYear
      );
      proto.zone = deprecate(
        "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
        getSetZone
      );
      proto.isDSTShifted = deprecate(
        "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
        isDaylightSavingTimeShifted
      );
      function createUnix(input) {
        return createLocal(input * 1e3);
      }
      function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
      }
      function preParsePostFormat(string) {
        return string;
      }
      var proto$1 = Locale.prototype;
      proto$1.calendar = calendar;
      proto$1.longDateFormat = longDateFormat;
      proto$1.invalidDate = invalidDate;
      proto$1.ordinal = ordinal;
      proto$1.preparse = preParsePostFormat;
      proto$1.postformat = preParsePostFormat;
      proto$1.relativeTime = relativeTime;
      proto$1.pastFuture = pastFuture;
      proto$1.set = set;
      proto$1.eras = localeEras;
      proto$1.erasParse = localeErasParse;
      proto$1.erasConvertYear = localeErasConvertYear;
      proto$1.erasAbbrRegex = erasAbbrRegex;
      proto$1.erasNameRegex = erasNameRegex;
      proto$1.erasNarrowRegex = erasNarrowRegex;
      proto$1.months = localeMonths;
      proto$1.monthsShort = localeMonthsShort;
      proto$1.monthsParse = localeMonthsParse;
      proto$1.monthsRegex = monthsRegex;
      proto$1.monthsShortRegex = monthsShortRegex;
      proto$1.week = localeWeek;
      proto$1.firstDayOfYear = localeFirstDayOfYear;
      proto$1.firstDayOfWeek = localeFirstDayOfWeek;
      proto$1.weekdays = localeWeekdays;
      proto$1.weekdaysMin = localeWeekdaysMin;
      proto$1.weekdaysShort = localeWeekdaysShort;
      proto$1.weekdaysParse = localeWeekdaysParse;
      proto$1.weekdaysRegex = weekdaysRegex;
      proto$1.weekdaysShortRegex = weekdaysShortRegex;
      proto$1.weekdaysMinRegex = weekdaysMinRegex;
      proto$1.isPM = localeIsPM;
      proto$1.meridiem = localeMeridiem;
      function get$1(format2, index, field, setter) {
        var locale2 = getLocale(), utc = createUTC().set(setter, index);
        return locale2[field](utc, format2);
      }
      function listMonthsImpl(format2, index, field) {
        if (isNumber(format2)) {
          index = format2;
          format2 = void 0;
        }
        format2 = format2 || "";
        if (index != null) {
          return get$1(format2, index, field, "month");
        }
        var i, out = [];
        for (i = 0; i < 12; i++) {
          out[i] = get$1(format2, i, field, "month");
        }
        return out;
      }
      function listWeekdaysImpl(localeSorted, format2, index, field) {
        if (typeof localeSorted === "boolean") {
          if (isNumber(format2)) {
            index = format2;
            format2 = void 0;
          }
          format2 = format2 || "";
        } else {
          format2 = localeSorted;
          index = format2;
          localeSorted = false;
          if (isNumber(format2)) {
            index = format2;
            format2 = void 0;
          }
          format2 = format2 || "";
        }
        var locale2 = getLocale(), shift2 = localeSorted ? locale2._week.dow : 0, i, out = [];
        if (index != null) {
          return get$1(format2, (index + shift2) % 7, field, "day");
        }
        for (i = 0; i < 7; i++) {
          out[i] = get$1(format2, (i + shift2) % 7, field, "day");
        }
        return out;
      }
      function listMonths(format2, index) {
        return listMonthsImpl(format2, index, "months");
      }
      function listMonthsShort(format2, index) {
        return listMonthsImpl(format2, index, "monthsShort");
      }
      function listWeekdays(localeSorted, format2, index) {
        return listWeekdaysImpl(localeSorted, format2, index, "weekdays");
      }
      function listWeekdaysShort(localeSorted, format2, index) {
        return listWeekdaysImpl(localeSorted, format2, index, "weekdaysShort");
      }
      function listWeekdaysMin(localeSorted, format2, index) {
        return listWeekdaysImpl(localeSorted, format2, index, "weekdaysMin");
      }
      getSetGlobalLocale("en", {
        eras: [
          {
            since: "0001-01-01",
            until: Infinity,
            offset: 1,
            name: "Anno Domini",
            narrow: "AD",
            abbr: "AD"
          },
          {
            since: "0000-12-31",
            until: -Infinity,
            offset: 1,
            name: "Before Christ",
            narrow: "BC",
            abbr: "BC"
          }
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(number) {
          var b = number % 10, output = toInt(number % 100 / 10) === 1 ? "th" : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
          return number + output;
        }
      });
      hooks.lang = deprecate(
        "moment.lang is deprecated. Use moment.locale instead.",
        getSetGlobalLocale
      );
      hooks.langData = deprecate(
        "moment.langData is deprecated. Use moment.localeData instead.",
        getLocale
      );
      var mathAbs = Math.abs;
      function abs() {
        var data = this._data;
        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);
        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);
        return this;
      }
      function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);
        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;
        return duration._bubble();
      }
      function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
      }
      function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
      }
      function absCeil(number) {
        if (number < 0) {
          return Math.floor(number);
        } else {
          return Math.ceil(number);
        }
      }
      function bubble2() {
        var milliseconds2 = this._milliseconds, days2 = this._days, months2 = this._months, data = this._data, seconds2, minutes2, hours2, years2, monthsFromDays;
        if (!(milliseconds2 >= 0 && days2 >= 0 && months2 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months2 <= 0)) {
          milliseconds2 += absCeil(monthsToDays(months2) + days2) * 864e5;
          days2 = 0;
          months2 = 0;
        }
        data.milliseconds = milliseconds2 % 1e3;
        seconds2 = absFloor(milliseconds2 / 1e3);
        data.seconds = seconds2 % 60;
        minutes2 = absFloor(seconds2 / 60);
        data.minutes = minutes2 % 60;
        hours2 = absFloor(minutes2 / 60);
        data.hours = hours2 % 24;
        days2 += absFloor(hours2 / 24);
        monthsFromDays = absFloor(daysToMonths(days2));
        months2 += monthsFromDays;
        days2 -= absCeil(monthsToDays(monthsFromDays));
        years2 = absFloor(months2 / 12);
        months2 %= 12;
        data.days = days2;
        data.months = months2;
        data.years = years2;
        return this;
      }
      function daysToMonths(days2) {
        return days2 * 4800 / 146097;
      }
      function monthsToDays(months2) {
        return months2 * 146097 / 4800;
      }
      function as(units) {
        if (!this.isValid()) {
          return NaN;
        }
        var days2, months2, milliseconds2 = this._milliseconds;
        units = normalizeUnits(units);
        if (units === "month" || units === "quarter" || units === "year") {
          days2 = this._days + milliseconds2 / 864e5;
          months2 = this._months + daysToMonths(days2);
          switch (units) {
            case "month":
              return months2;
            case "quarter":
              return months2 / 3;
            case "year":
              return months2 / 12;
          }
        } else {
          days2 = this._days + Math.round(monthsToDays(this._months));
          switch (units) {
            case "week":
              return days2 / 7 + milliseconds2 / 6048e5;
            case "day":
              return days2 + milliseconds2 / 864e5;
            case "hour":
              return days2 * 24 + milliseconds2 / 36e5;
            case "minute":
              return days2 * 1440 + milliseconds2 / 6e4;
            case "second":
              return days2 * 86400 + milliseconds2 / 1e3;
            // Math.floor prevents floating point math errors here
            case "millisecond":
              return Math.floor(days2 * 864e5) + milliseconds2;
            default:
              throw new Error("Unknown unit " + units);
          }
        }
      }
      function makeAs(alias) {
        return function() {
          return this.as(alias);
        };
      }
      var asMilliseconds = makeAs("ms"), asSeconds = makeAs("s"), asMinutes = makeAs("m"), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"), asMonths = makeAs("M"), asQuarters = makeAs("Q"), asYears = makeAs("y"), valueOf$1 = asMilliseconds;
      function clone$1() {
        return createDuration(this);
      }
      function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + "s"]() : NaN;
      }
      function makeGetter(name) {
        return function() {
          return this.isValid() ? this._data[name] : NaN;
        };
      }
      var milliseconds = makeGetter("milliseconds"), seconds = makeGetter("seconds"), minutes = makeGetter("minutes"), hours = makeGetter("hours"), days = makeGetter("days"), months = makeGetter("months"), years = makeGetter("years");
      function weeks() {
        return absFloor(this.days() / 7);
      }
      var round2 = Math.round, thresholds = {
        ss: 44,
        // a few seconds to seconds
        s: 45,
        // seconds to minute
        m: 45,
        // minutes to hour
        h: 22,
        // hours to day
        d: 26,
        // days to month/week
        w: null,
        // weeks to month
        M: 11
        // months to year
      };
      function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale2) {
        return locale2.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
      }
      function relativeTime$1(posNegDuration, withoutSuffix, thresholds2, locale2) {
        var duration = createDuration(posNegDuration).abs(), seconds2 = round2(duration.as("s")), minutes2 = round2(duration.as("m")), hours2 = round2(duration.as("h")), days2 = round2(duration.as("d")), months2 = round2(duration.as("M")), weeks2 = round2(duration.as("w")), years2 = round2(duration.as("y")), a = seconds2 <= thresholds2.ss && ["s", seconds2] || seconds2 < thresholds2.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds2.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds2.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds2.d && ["dd", days2];
        if (thresholds2.w != null) {
          a = a || weeks2 <= 1 && ["w"] || weeks2 < thresholds2.w && ["ww", weeks2];
        }
        a = a || months2 <= 1 && ["M"] || months2 < thresholds2.M && ["MM", months2] || years2 <= 1 && ["y"] || ["yy", years2];
        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale2;
        return substituteTimeAgo.apply(null, a);
      }
      function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === void 0) {
          return round2;
        }
        if (typeof roundingFunction === "function") {
          round2 = roundingFunction;
          return true;
        }
        return false;
      }
      function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === void 0) {
          return false;
        }
        if (limit === void 0) {
          return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === "s") {
          thresholds.ss = limit - 1;
        }
        return true;
      }
      function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }
        var withSuffix = false, th = thresholds, locale2, output;
        if (typeof argWithSuffix === "object") {
          argThresholds = argWithSuffix;
          argWithSuffix = false;
        }
        if (typeof argWithSuffix === "boolean") {
          withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === "object") {
          th = Object.assign({}, thresholds, argThresholds);
          if (argThresholds.s != null && argThresholds.ss == null) {
            th.ss = argThresholds.s - 1;
          }
        }
        locale2 = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale2);
        if (withSuffix) {
          output = locale2.pastFuture(+this, output);
        }
        return locale2.postformat(output);
      }
      var abs$1 = Math.abs;
      function sign(x) {
        return (x > 0) - (x < 0) || +x;
      }
      function toISOString$1() {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }
        var seconds2 = abs$1(this._milliseconds) / 1e3, days2 = abs$1(this._days), months2 = abs$1(this._months), minutes2, hours2, years2, s, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
        if (!total) {
          return "P0D";
        }
        minutes2 = absFloor(seconds2 / 60);
        hours2 = absFloor(minutes2 / 60);
        seconds2 %= 60;
        minutes2 %= 60;
        years2 = absFloor(months2 / 12);
        months2 %= 12;
        s = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
        totalSign = total < 0 ? "-" : "";
        ymSign = sign(this._months) !== sign(total) ? "-" : "";
        daysSign = sign(this._days) !== sign(total) ? "-" : "";
        hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
        return totalSign + "P" + (years2 ? ymSign + years2 + "Y" : "") + (months2 ? ymSign + months2 + "M" : "") + (days2 ? daysSign + days2 + "D" : "") + (hours2 || minutes2 || seconds2 ? "T" : "") + (hours2 ? hmsSign + hours2 + "H" : "") + (minutes2 ? hmsSign + minutes2 + "M" : "") + (seconds2 ? hmsSign + s + "S" : "");
      }
      var proto$2 = Duration.prototype;
      proto$2.isValid = isValid$1;
      proto$2.abs = abs;
      proto$2.add = add$1;
      proto$2.subtract = subtract$1;
      proto$2.as = as;
      proto$2.asMilliseconds = asMilliseconds;
      proto$2.asSeconds = asSeconds;
      proto$2.asMinutes = asMinutes;
      proto$2.asHours = asHours;
      proto$2.asDays = asDays;
      proto$2.asWeeks = asWeeks;
      proto$2.asMonths = asMonths;
      proto$2.asQuarters = asQuarters;
      proto$2.asYears = asYears;
      proto$2.valueOf = valueOf$1;
      proto$2._bubble = bubble2;
      proto$2.clone = clone$1;
      proto$2.get = get$2;
      proto$2.milliseconds = milliseconds;
      proto$2.seconds = seconds;
      proto$2.minutes = minutes;
      proto$2.hours = hours;
      proto$2.days = days;
      proto$2.weeks = weeks;
      proto$2.months = months;
      proto$2.years = years;
      proto$2.humanize = humanize;
      proto$2.toISOString = toISOString$1;
      proto$2.toString = toISOString$1;
      proto$2.toJSON = toISOString$1;
      proto$2.locale = locale;
      proto$2.localeData = localeData;
      proto$2.toIsoString = deprecate(
        "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
        toISOString$1
      );
      proto$2.lang = lang;
      addFormatToken("X", 0, 0, "unix");
      addFormatToken("x", 0, 0, "valueOf");
      addRegexToken("x", matchSigned);
      addRegexToken("X", matchTimestamp);
      addParseToken("X", function(input, array, config) {
        config._d = new Date(parseFloat(input) * 1e3);
      });
      addParseToken("x", function(input, array, config) {
        config._d = new Date(toInt(input));
      });
      hooks.version = "2.30.1";
      setHookCallback(createLocal);
      hooks.fn = proto;
      hooks.min = min2;
      hooks.max = max2;
      hooks.now = now2;
      hooks.utc = createUTC;
      hooks.unix = createUnix;
      hooks.months = listMonths;
      hooks.isDate = isDate;
      hooks.locale = getSetGlobalLocale;
      hooks.invalid = createInvalid;
      hooks.duration = createDuration;
      hooks.isMoment = isMoment;
      hooks.weekdays = listWeekdays;
      hooks.parseZone = createInZone;
      hooks.localeData = getLocale;
      hooks.isDuration = isDuration;
      hooks.monthsShort = listMonthsShort;
      hooks.weekdaysMin = listWeekdaysMin;
      hooks.defineLocale = defineLocale;
      hooks.updateLocale = updateLocale2;
      hooks.locales = listLocales;
      hooks.weekdaysShort = listWeekdaysShort;
      hooks.normalizeUnits = normalizeUnits;
      hooks.relativeTimeRounding = getSetRelativeTimeRounding;
      hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
      hooks.calendarFormat = getCalendarFormat;
      hooks.prototype = proto;
      hooks.HTML5_FMT = {
        DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
        // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
        // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
        // <input type="datetime-local" step="0.001" />
        DATE: "YYYY-MM-DD",
        // <input type="date" />
        TIME: "HH:mm",
        // <input type="time" />
        TIME_SECONDS: "HH:mm:ss",
        // <input type="time" step="1" />
        TIME_MS: "HH:mm:ss.SSS",
        // <input type="time" step="0.001" />
        WEEK: "GGGG-[W]WW",
        // <input type="week" />
        MONTH: "YYYY-MM"
        // <input type="month" />
      };
      return hooks;
    });
  }
});

// src/main.ts
var main_exports = {};
__export(main_exports, {
  default: () => PeriodicNotesCalendarPlugin
});
module.exports = __toCommonJS(main_exports);

// src/locales.ts
var localesMap = /* @__PURE__ */ new Map();
var locales = [
  { key: "af", name: "Afrikaans" },
  { key: "am", name: "Amharic" },
  { key: "ar-dz", name: "Arabic (Algeria)" },
  { key: "ar-iq", name: " Arabic (Iraq)" },
  { key: "ar-kw", name: "Arabic (Kuwait)" },
  { key: "ar-ly", name: "Arabic (Lybia)" },
  { key: "ar-ma", name: "Arabic (Morocco)" },
  { key: "ar-sa", name: "Arabic (Saudi Arabia)" },
  { key: "ar-tn", name: " Arabic (Tunisia)" },
  { key: "ar", name: "Arabic" },
  { key: "az", name: "Azerbaijani" },
  { key: "be", name: "Belarusian" },
  { key: "bg", name: "Bulgarian" },
  { key: "bi", name: "Bislama" },
  { key: "bm", name: "Bambara" },
  { key: "bn-bd", name: "Bengali (Bangladesh)" },
  { key: "bn", name: "Bengali" },
  { key: "bo", name: "Tibetan" },
  { key: "br", name: "Breton" },
  { key: "bs", name: "Bosnian" },
  { key: "ca", name: "Catalan" },
  { key: "cs", name: "Czech" },
  { key: "cv", name: "Chuvash" },
  { key: "cy", name: "Welsh" },
  { key: "da", name: "Danish" },
  { key: "de-at", name: "German (Austria)" },
  { key: "de-ch", name: "German (Switzerland)" },
  { key: "de", name: "German" },
  { key: "dv", name: "Maldivian" },
  { key: "el", name: "Greek" },
  { key: "en-au", name: "English (Australia)" },
  { key: "en-ca", name: "English (Canada)" },
  { key: "en-gb", name: "English (United Kingdom)" },
  { key: "en-ie", name: "English (Ireland)" },
  { key: "en-il", name: "English (Israel)" },
  { key: "en-in", name: "English (India)" },
  { key: "en-nz", name: "English (New Zealand)" },
  { key: "en-sg", name: "English (Singapore)" },
  { key: "en-tt", name: "English (Trinidad & Tobago)" },
  { key: "en", name: "English" },
  { key: "eo", name: "Esperanto" },
  { key: "es-do", name: "Spanish (Dominican Republic)" },
  { key: "es-mx", name: "Spanish (Mexico)" },
  { key: "es-pr", name: "Spanish (Puerto Rico)" },
  { key: "es-us", name: "Spanish (United States)" },
  { key: "es", name: "Spanish" },
  { key: "et", name: "Estonian" },
  { key: "eu", name: "Basque" },
  { key: "fa", name: "Persian" },
  { key: "fi", name: "Finnish" },
  { key: "fo", name: "Faroese" },
  { key: "fr-ca", name: "French (Canada)" },
  { key: "fr-ch", name: "French (Switzerland)" },
  { key: "fr", name: "French" },
  { key: "fy", name: "Frisian" },
  { key: "ga", name: "Irish or Irish Gaelic" },
  { key: "gd", name: "Scottish Gaelic" },
  { key: "gl", name: "Galician" },
  { key: "gom-latn", name: "Konkani Latin script" },
  { key: "gu", name: "Gujarati" },
  { key: "he", name: "Hebrew" },
  { key: "hi", name: "Hindi" },
  { key: "hr", name: "Croatian" },
  { key: "ht", name: "Haitian Creole (Haiti)" },
  { key: "hu", name: "Hungarian" },
  { key: "hy-am", name: "Armenian" },
  { key: "id", name: "Indonesian" },
  { key: "is", name: "Icelandic" },
  { key: "it-ch", name: "Italian (Switzerland)" },
  { key: "it", name: "Italian" },
  { key: "ja", name: "Japanese" },
  { key: "jv", name: "Javanese" },
  { key: "ka", name: "Georgian" },
  { key: "kk", name: "Kazakh" },
  { key: "km", name: "Cambodian" },
  { key: "kn", name: "Kannada" },
  { key: "ko", name: "Korean" },
  { key: "ku", name: "Kurdish" },
  { key: "ky", name: "Kyrgyz" },
  { key: "lb", name: "Luxembourgish" },
  { key: "lo", name: "Lao" },
  { key: "lt", name: "Lithuanian" },
  { key: "lv", name: "Latvian" },
  { key: "me", name: "Montenegrin" },
  { key: "mi", name: "Maori" },
  { key: "mk", name: "Macedonian" },
  { key: "ml", name: "Malayalam" },
  { key: "mn", name: "Mongolian" },
  { key: "mr", name: "Marathi" },
  { key: "ms-my", name: "Malay" },
  { key: "ms", name: "Malay" },
  { key: "mt", name: "Maltese (Malta)" },
  { key: "my", name: "Burmese" },
  { key: "nb", name: "Norwegian Bokm\xE5l" },
  { key: "ne", name: "Nepalese" },
  { key: "nl-be", name: "Dutch (Belgium)" },
  { key: "nl", name: "Dutch" },
  { key: "nn", name: "Nynorsk" },
  { key: "oc-lnc", name: "Occitan, lengadocian dialecte" },
  { key: "pa-in", name: "Punjabi (India)" },
  { key: "pl", name: "Polish" },
  { key: "pt-br", name: "Portuguese (Brazil)" },
  { key: "pt", name: "Portuguese" },
  { key: "rn", name: "Kirundi" },
  { key: "sd", name: "Sindhi" },
  { key: "se", name: "Northern Sami" },
  { key: "si", name: "Sinhalese" },
  { key: "sk", name: "Slovak" },
  { key: "sl", name: "Slovenian" },
  { key: "sq", name: "Albanian" },
  { key: "sr-cyrl", name: "Serbian Cyrillic" },
  { key: "sr", name: "Serbian" },
  { key: "ss", name: "siSwati" },
  { key: "sv-fi", name: "Finland Swedish" },
  { key: "sv", name: "Swedish" },
  { key: "sw", name: "Swahili" },
  { key: "ta", name: "Tamil" },
  { key: "te", name: "Telugu" },
  { key: "tet", name: "Tetun Dili (East Timor)" },
  { key: "tg", name: "Tajik" },
  { key: "th", name: "Thai" },
  { key: "tk", name: "Turkmen" },
  { key: "tl-ph", name: "Tagalog (Philippines)" },
  { key: "tlh", name: "Klingon" },
  { key: "tr", name: "Turkish" },
  { key: "tzl", name: "Talossan" },
  { key: "tzm-latn", name: "Central Atlas Tamazight Latin" },
  { key: "tzm", name: "Central Atlas Tamazight" },
  { key: "ug-cn", name: "Uyghur (China)" },
  { key: "uk", name: "Ukrainian" },
  { key: "ur", name: "Urdu" },
  { key: "uz-latn", name: "Uzbek Latin" },
  { key: "uz", name: "Uzbek" },
  { key: "vi", name: "Vietnamese" },
  { key: "x-pseudo", name: "Pseudo" },
  { key: "yo", name: "Yoruba Nigeria" },
  { key: "zh-cn", name: "Chinese (China)" },
  { key: "zh-hk", name: "Chinese (Hong Kong)" },
  { key: "zh-tw", name: "Chinese (Taiwan)" },
  { key: "zh", name: "Chinese" },
  { key: "rw", name: "Kinyarwanda (Rwanda)" },
  { key: "ru", name: "Russian" },
  { key: "ro", name: "Romanian" }
];
locales.forEach((obj) => {
  localesMap.set(obj.key, obj.name);
});
var locales_default = localesMap;

// src/localization.ts
var defaultWeekdays = [
  "Sunday",
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday"
];
var defaultWeekdaysShort = ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"];
var sysLocaleKey = navigator.languages.find((locale) => locales_default.has(locale.toLocaleLowerCase())) || navigator.languages[0];
var sysLocaleMoment = window.moment().clone().locale(sysLocaleKey);
var sysWeekStartId = sysLocaleMoment.localeData().firstDayOfWeek();
var sysWeekStartName = defaultWeekdays[sysWeekStartId];

// src/constants.ts
var VIEW_TYPE = "periodic-notes-calendar-view";
var granularities = ["day", "week", "month", "quarter", "year"];
var togglePeriods = ["days", "months", "years"];
var monthsIndexesInQuarters = [
  [0, 1, 2],
  [3, 4, 5],
  [6, 7, 8],
  [9, 10, 11]
];
var YEARS_RANGE_SIZE = 12;
var CALENDAR_POPOVER_ID = "calendar-popover";
var STICKER_POPOVER_ID = "sticker-popover";
var FILE_MENU_POPOVER_ID = "file-menu-popover";
var MODAL_CLASS = "modal";
var DEFAULT_DAILY_NOTE_FORMAT = "YYYY-MM-DD";
var DEFAULT_WEEKLY_NOTE_FORMAT = "gggg-[W]ww";
var DEFAULT_MONTHLY_NOTE_FORMAT = "YYYY-MM";
var DEFAULT_QUARTERLY_NOTE_FORMAT = "YYYY-[Q]Q";
var DEFAULT_YEARLY_NOTE_FORMAT = "YYYY";
var DEFAULT_FORMATS = {
  daily: DEFAULT_DAILY_NOTE_FORMAT,
  weekly: DEFAULT_WEEKLY_NOTE_FORMAT,
  monthly: DEFAULT_MONTHLY_NOTE_FORMAT,
  quarterly: DEFAULT_QUARTERLY_NOTE_FORMAT,
  yearly: DEFAULT_YEARLY_NOTE_FORMAT
};
var DEFAULT_FORMATS_PER_GRANULARITY = {
  day: DEFAULT_DAILY_NOTE_FORMAT,
  week: DEFAULT_WEEKLY_NOTE_FORMAT,
  month: DEFAULT_MONTHLY_NOTE_FORMAT,
  quarter: DEFAULT_QUARTERLY_NOTE_FORMAT,
  year: DEFAULT_YEARLY_NOTE_FORMAT
};
var PERIODIC_NOTES_PLUGIN_ID = "periodic-notes";
var DAILY_NOTES_PLUGIN_ID = "daily-notes";
var NLDATES_PLUGIN_ID = "nldates-obsidian";

// src/settings/constants.ts
var DEFAULT_PERIODIC_CONFIG = Object.freeze({
  enabled: false,
  openAtStartup: false,
  format: "",
  templatePath: "",
  folder: ""
});
var DEFAULT_SETTINGS = Object.freeze({
  notes: Object.fromEntries(
    granularities.map(
      (granularity) => [granularity, DEFAULT_PERIODIC_CONFIG]
    )
  ),
  viewLeafPosition: "left",
  viewMode: "dedicated-panel",
  shouldConfirmBeforeCreate: true,
  yearsRangesStart: 2020,
  autoHoverPreview: false,
  openPopoverOnRibbonHover: false,
  crrNldModalGranularity: "day",
  localeSettings: {
    showWeekNums: false,
    showQuarterNums: false,
    localeOverride: sysLocaleKey,
    weekStartId: sysWeekStartId
  },
  popoversClosing: {
    closePopoversOneByOneOnClickOut: false,
    closePopoversOneByOneOnEscKeydown: true,
    closeOnEscStickerSearchInput: true
  },
  validFormats: {
    day: [DEFAULT_FORMATS.daily],
    week: [DEFAULT_FORMATS.weekly],
    month: [DEFAULT_FORMATS.monthly],
    quarter: [DEFAULT_FORMATS.quarterly],
    year: [DEFAULT_FORMATS.yearly]
  },
  allowLocalesSwitchFromCommandPalette: false
});

// node_modules/svelte/src/runtime/internal/utils.js
function noop() {
}
var identity = (x) => x;
function assign(tar, src) {
  for (const k in src) tar[k] = src[k];
  return (
    /** @type {T & S} */
    tar
  );
}
function run(fn) {
  return fn();
}
function blank_object() {
  return /* @__PURE__ */ Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === "function";
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || a && typeof a === "object" || typeof a === "function";
}
function not_equal(a, b) {
  return a != a ? b == b : a !== b;
}
function is_empty(obj) {
  return Object.keys(obj).length === 0;
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    for (const callback of callbacks) {
      callback(void 0);
    }
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function get_store_value(store) {
  let value;
  subscribe(store, (_) => value = _)();
  return value;
}
function component_subscribe(component, store, callback) {
  component.$$.on_destroy.push(subscribe(store, callback));
}
function create_slot(definition, ctx, $$scope, fn) {
  if (definition) {
    const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);
    return definition[0](slot_ctx);
  }
}
function get_slot_context(definition, ctx, $$scope, fn) {
  return definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;
}
function get_slot_changes(definition, $$scope, dirty, fn) {
  if (definition[2] && fn) {
    const lets = definition[2](fn(dirty));
    if ($$scope.dirty === void 0) {
      return lets;
    }
    if (typeof lets === "object") {
      const merged = [];
      const len = Math.max($$scope.dirty.length, lets.length);
      for (let i = 0; i < len; i += 1) {
        merged[i] = $$scope.dirty[i] | lets[i];
      }
      return merged;
    }
    return $$scope.dirty | lets;
  }
  return $$scope.dirty;
}
function update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {
  if (slot_changes) {
    const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);
    slot.p(slot_context, slot_changes);
  }
}
function get_all_dirty_from_scope($$scope) {
  if ($$scope.ctx.length > 32) {
    const dirty = [];
    const length = $$scope.ctx.length / 32;
    for (let i = 0; i < length; i++) {
      dirty[i] = -1;
    }
    return dirty;
  }
  return -1;
}
function null_to_empty(value) {
  return value == null ? "" : value;
}
function set_store_value(store, ret, value) {
  store.set(value);
  return ret;
}

// node_modules/svelte/src/runtime/internal/environment.js
var is_client = typeof window !== "undefined";
var now = is_client ? () => window.performance.now() : () => Date.now();
var raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;

// node_modules/svelte/src/runtime/internal/loop.js
var tasks = /* @__PURE__ */ new Set();
function run_tasks(now2) {
  tasks.forEach((task) => {
    if (!task.c(now2)) {
      tasks.delete(task);
      task.f();
    }
  });
  if (tasks.size !== 0) raf(run_tasks);
}
function loop(callback) {
  let task;
  if (tasks.size === 0) raf(run_tasks);
  return {
    promise: new Promise((fulfill) => {
      tasks.add(task = { c: callback, f: fulfill });
    }),
    abort() {
      tasks.delete(task);
    }
  };
}

// node_modules/svelte/src/runtime/internal/globals.js
var globals = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : (
  // @ts-ignore Node typings have this
  global
);

// node_modules/svelte/src/runtime/internal/ResizeObserverSingleton.js
var ResizeObserverSingleton = class _ResizeObserverSingleton {
  /**
   * @private
   * @readonly
   * @type {WeakMap<Element, import('./private.js').Listener>}
   */
  _listeners = "WeakMap" in globals ? /* @__PURE__ */ new WeakMap() : void 0;
  /**
   * @private
   * @type {ResizeObserver}
   */
  _observer = void 0;
  /** @type {ResizeObserverOptions} */
  options;
  /** @param {ResizeObserverOptions} options */
  constructor(options) {
    this.options = options;
  }
  /**
   * @param {Element} element
   * @param {import('./private.js').Listener} listener
   * @returns {() => void}
   */
  observe(element2, listener) {
    this._listeners.set(element2, listener);
    this._getObserver().observe(element2, this.options);
    return () => {
      this._listeners.delete(element2);
      this._observer.unobserve(element2);
    };
  }
  /**
   * @private
   */
  _getObserver() {
    return this._observer ?? (this._observer = new ResizeObserver((entries) => {
      for (const entry of entries) {
        _ResizeObserverSingleton.entries.set(entry.target, entry);
        this._listeners.get(entry.target)?.(entry);
      }
    }));
  }
};
ResizeObserverSingleton.entries = "WeakMap" in globals ? /* @__PURE__ */ new WeakMap() : void 0;

// node_modules/svelte/src/runtime/internal/dom.js
var is_hydrating = false;
function start_hydrating() {
  is_hydrating = true;
}
function end_hydrating() {
  is_hydrating = false;
}
function append(target, node) {
  target.appendChild(node);
}
function append_styles(target, style_sheet_id, styles) {
  const append_styles_to = get_root_for_style(target);
  if (!append_styles_to.getElementById(style_sheet_id)) {
    const style = element("style");
    style.id = style_sheet_id;
    style.textContent = styles;
    append_stylesheet(append_styles_to, style);
  }
}
function get_root_for_style(node) {
  if (!node) return document;
  const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;
  if (root && /** @type {ShadowRoot} */
  root.host) {
    return (
      /** @type {ShadowRoot} */
      root
    );
  }
  return node.ownerDocument;
}
function append_empty_stylesheet(node) {
  const style_element = element("style");
  style_element.textContent = "/* empty */";
  append_stylesheet(get_root_for_style(node), style_element);
  return style_element.sheet;
}
function append_stylesheet(node, style) {
  append(
    /** @type {Document} */
    node.head || node,
    style
  );
  return style.sheet;
}
function insert(target, node, anchor) {
  target.insertBefore(node, anchor || null);
}
function detach(node) {
  if (node.parentNode) {
    node.parentNode.removeChild(node);
  }
}
function destroy_each(iterations, detaching) {
  for (let i = 0; i < iterations.length; i += 1) {
    if (iterations[i]) iterations[i].d(detaching);
  }
}
function element(name) {
  return document.createElement(name);
}
function svg_element(name) {
  return document.createElementNS("http://www.w3.org/2000/svg", name);
}
function text(data) {
  return document.createTextNode(data);
}
function space() {
  return text(" ");
}
function empty() {
  return text("");
}
function listen(node, event, handler, options) {
  node.addEventListener(event, handler, options);
  return () => node.removeEventListener(event, handler, options);
}
function stop_propagation(fn) {
  return function(event) {
    event.stopPropagation();
    return fn.call(this, event);
  };
}
function attr(node, attribute, value) {
  if (value == null) node.removeAttribute(attribute);
  else if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);
}
function children(element2) {
  return Array.from(element2.childNodes);
}
function set_data(text2, data) {
  data = "" + data;
  if (text2.data === data) return;
  text2.data = /** @type {string} */
  data;
}
function set_input_value(input, value) {
  input.value = value == null ? "" : value;
}
function select_option(select, value, mounting) {
  for (let i = 0; i < select.options.length; i += 1) {
    const option = select.options[i];
    if (option.__value === value) {
      option.selected = true;
      return;
    }
  }
  if (!mounting || value !== void 0) {
    select.selectedIndex = -1;
  }
}
function select_value(select) {
  const selected_option = select.querySelector(":checked");
  return selected_option && selected_option.__value;
}
function toggle_class(element2, name, toggle) {
  element2.classList.toggle(name, !!toggle);
}
function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
  return new CustomEvent(type, { detail, bubbles, cancelable });
}
function get_custom_elements_slots(element2) {
  const result2 = {};
  element2.childNodes.forEach(
    /** @param {Element} node */
    (node) => {
      result2[node.slot || "default"] = true;
    }
  );
  return result2;
}

// node_modules/svelte/src/runtime/internal/style_manager.js
var managed_styles = /* @__PURE__ */ new Map();
var active = 0;
function hash(str) {
  let hash2 = 5381;
  let i = str.length;
  while (i--) hash2 = (hash2 << 5) - hash2 ^ str.charCodeAt(i);
  return hash2 >>> 0;
}
function create_style_information(doc, node) {
  const info = { stylesheet: append_empty_stylesheet(node), rules: {} };
  managed_styles.set(doc, info);
  return info;
}
function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {
  const step = 16.666 / duration;
  let keyframes = "{\n";
  for (let p = 0; p <= 1; p += step) {
    const t = a + (b - a) * ease(p);
    keyframes += p * 100 + `%{${fn(t, 1 - t)}}
`;
  }
  const rule = keyframes + `100% {${fn(b, 1 - b)}}
}`;
  const name = `__svelte_${hash(rule)}_${uid}`;
  const doc = get_root_for_style(node);
  const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);
  if (!rules[name]) {
    rules[name] = true;
    stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);
  }
  const animation = node.style.animation || "";
  node.style.animation = `${animation ? `${animation}, ` : ""}${name} ${duration}ms linear ${delay}ms 1 both`;
  active += 1;
  return name;
}
function delete_rule(node, name) {
  const previous = (node.style.animation || "").split(", ");
  const next = previous.filter(
    name ? (anim) => anim.indexOf(name) < 0 : (anim) => anim.indexOf("__svelte") === -1
    // remove all Svelte animations
  );
  const deleted = previous.length - next.length;
  if (deleted) {
    node.style.animation = next.join(", ");
    active -= deleted;
    if (!active) clear_rules();
  }
}
function clear_rules() {
  raf(() => {
    if (active) return;
    managed_styles.forEach((info) => {
      const { ownerNode } = info.stylesheet;
      if (ownerNode) detach(ownerNode);
    });
    managed_styles.clear();
  });
}

// node_modules/svelte/src/runtime/internal/lifecycle.js
var current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component) throw new Error("Function called outside component initialization");
  return current_component;
}
function onMount(fn) {
  get_current_component().$$.on_mount.push(fn);
}
function onDestroy(fn) {
  get_current_component().$$.on_destroy.push(fn);
}
function bubble(component, event) {
  const callbacks = component.$$.callbacks[event.type];
  if (callbacks) {
    callbacks.slice().forEach((fn) => fn.call(this, event));
  }
}

// node_modules/svelte/src/runtime/internal/scheduler.js
var dirty_components = [];
var binding_callbacks = [];
var render_callbacks = [];
var flush_callbacks = [];
var resolved_promise = /* @__PURE__ */ Promise.resolve();
var update_scheduled = false;
function schedule_update() {
  if (!update_scheduled) {
    update_scheduled = true;
    resolved_promise.then(flush);
  }
}
function add_render_callback(fn) {
  render_callbacks.push(fn);
}
function add_flush_callback(fn) {
  flush_callbacks.push(fn);
}
var seen_callbacks = /* @__PURE__ */ new Set();
var flushidx = 0;
function flush() {
  if (flushidx !== 0) {
    return;
  }
  const saved_component = current_component;
  do {
    try {
      while (flushidx < dirty_components.length) {
        const component = dirty_components[flushidx];
        flushidx++;
        set_current_component(component);
        update(component.$$);
      }
    } catch (e) {
      dirty_components.length = 0;
      flushidx = 0;
      throw e;
    }
    set_current_component(null);
    dirty_components.length = 0;
    flushidx = 0;
    while (binding_callbacks.length) binding_callbacks.pop()();
    for (let i = 0; i < render_callbacks.length; i += 1) {
      const callback = render_callbacks[i];
      if (!seen_callbacks.has(callback)) {
        seen_callbacks.add(callback);
        callback();
      }
    }
    render_callbacks.length = 0;
  } while (dirty_components.length);
  while (flush_callbacks.length) {
    flush_callbacks.pop()();
  }
  update_scheduled = false;
  seen_callbacks.clear();
  set_current_component(saved_component);
}
function update($$) {
  if ($$.fragment !== null) {
    $$.update();
    run_all($$.before_update);
    const dirty = $$.dirty;
    $$.dirty = [-1];
    $$.fragment && $$.fragment.p($$.ctx, dirty);
    $$.after_update.forEach(add_render_callback);
  }
}
function flush_render_callbacks(fns) {
  const filtered = [];
  const targets = [];
  render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));
  targets.forEach((c) => c());
  render_callbacks = filtered;
}

// node_modules/svelte/src/runtime/internal/transitions.js
var promise;
function wait() {
  if (!promise) {
    promise = Promise.resolve();
    promise.then(() => {
      promise = null;
    });
  }
  return promise;
}
function dispatch(node, direction, kind) {
  node.dispatchEvent(custom_event(`${direction ? "intro" : "outro"}${kind}`));
}
var outroing = /* @__PURE__ */ new Set();
var outros;
function group_outros() {
  outros = {
    r: 0,
    c: [],
    p: outros
    // parent group
  };
}
function check_outros() {
  if (!outros.r) {
    run_all(outros.c);
  }
  outros = outros.p;
}
function transition_in(block, local) {
  if (block && block.i) {
    outroing.delete(block);
    block.i(local);
  }
}
function transition_out(block, local, detach2, callback) {
  if (block && block.o) {
    if (outroing.has(block)) return;
    outroing.add(block);
    outros.c.push(() => {
      outroing.delete(block);
      if (callback) {
        if (detach2) block.d(1);
        callback();
      }
    });
    block.o(local);
  } else if (callback) {
    callback();
  }
}
var null_transition = { duration: 0 };
function create_in_transition(node, fn, params) {
  const options = { direction: "in" };
  let config = fn(node, params, options);
  let running = false;
  let animation_name;
  let task;
  let uid = 0;
  function cleanup() {
    if (animation_name) delete_rule(node, animation_name);
  }
  function go() {
    const {
      delay = 0,
      duration = 300,
      easing = identity,
      tick: tick2 = noop,
      css
    } = config || null_transition;
    if (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);
    tick2(0, 1);
    const start_time = now() + delay;
    const end_time = start_time + duration;
    if (task) task.abort();
    running = true;
    add_render_callback(() => dispatch(node, true, "start"));
    task = loop((now2) => {
      if (running) {
        if (now2 >= end_time) {
          tick2(1, 0);
          dispatch(node, true, "end");
          cleanup();
          return running = false;
        }
        if (now2 >= start_time) {
          const t = easing((now2 - start_time) / duration);
          tick2(t, 1 - t);
        }
      }
      return running;
    });
  }
  let started = false;
  return {
    start() {
      if (started) return;
      started = true;
      delete_rule(node);
      if (is_function(config)) {
        config = config(options);
        wait().then(go);
      } else {
        go();
      }
    },
    invalidate() {
      started = false;
    },
    end() {
      if (running) {
        cleanup();
        running = false;
      }
    }
  };
}
function create_out_transition(node, fn, params) {
  const options = { direction: "out" };
  let config = fn(node, params, options);
  let running = true;
  let animation_name;
  const group = outros;
  group.r += 1;
  let original_inert_value;
  function go() {
    const {
      delay = 0,
      duration = 300,
      easing = identity,
      tick: tick2 = noop,
      css
    } = config || null_transition;
    if (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);
    const start_time = now() + delay;
    const end_time = start_time + duration;
    add_render_callback(() => dispatch(node, false, "start"));
    if ("inert" in node) {
      original_inert_value = /** @type {HTMLElement} */
      node.inert;
      node.inert = true;
    }
    loop((now2) => {
      if (running) {
        if (now2 >= end_time) {
          tick2(0, 1);
          dispatch(node, false, "end");
          if (!--group.r) {
            run_all(group.c);
          }
          return false;
        }
        if (now2 >= start_time) {
          const t = easing((now2 - start_time) / duration);
          tick2(1 - t, t);
        }
      }
      return running;
    });
  }
  if (is_function(config)) {
    wait().then(() => {
      config = config(options);
      go();
    });
  } else {
    go();
  }
  return {
    end(reset) {
      if (reset && "inert" in node) {
        node.inert = original_inert_value;
      }
      if (reset && config.tick) {
        config.tick(1, 0);
      }
      if (running) {
        if (animation_name) delete_rule(node, animation_name);
        running = false;
      }
    }
  };
}
function create_bidirectional_transition(node, fn, params, intro) {
  const options = { direction: "both" };
  let config = fn(node, params, options);
  let t = intro ? 0 : 1;
  let running_program = null;
  let pending_program = null;
  let animation_name = null;
  let original_inert_value;
  function clear_animation() {
    if (animation_name) delete_rule(node, animation_name);
  }
  function init2(program, duration) {
    const d = (
      /** @type {Program['d']} */
      program.b - t
    );
    duration *= Math.abs(d);
    return {
      a: t,
      b: program.b,
      d,
      duration,
      start: program.start,
      end: program.start + duration,
      group: program.group
    };
  }
  function go(b) {
    const {
      delay = 0,
      duration = 300,
      easing = identity,
      tick: tick2 = noop,
      css
    } = config || null_transition;
    const program = {
      start: now() + delay,
      b
    };
    if (!b) {
      program.group = outros;
      outros.r += 1;
    }
    if ("inert" in node) {
      if (b) {
        if (original_inert_value !== void 0) {
          node.inert = original_inert_value;
        }
      } else {
        original_inert_value = /** @type {HTMLElement} */
        node.inert;
        node.inert = true;
      }
    }
    if (running_program || pending_program) {
      pending_program = program;
    } else {
      if (css) {
        clear_animation();
        animation_name = create_rule(node, t, b, duration, delay, easing, css);
      }
      if (b) tick2(0, 1);
      running_program = init2(program, duration);
      add_render_callback(() => dispatch(node, b, "start"));
      loop((now2) => {
        if (pending_program && now2 > pending_program.start) {
          running_program = init2(pending_program, duration);
          pending_program = null;
          dispatch(node, running_program.b, "start");
          if (css) {
            clear_animation();
            animation_name = create_rule(
              node,
              t,
              running_program.b,
              running_program.duration,
              0,
              easing,
              config.css
            );
          }
        }
        if (running_program) {
          if (now2 >= running_program.end) {
            tick2(t = running_program.b, 1 - t);
            dispatch(node, running_program.b, "end");
            if (!pending_program) {
              if (running_program.b) {
                clear_animation();
              } else {
                if (!--running_program.group.r) run_all(running_program.group.c);
              }
            }
            running_program = null;
          } else if (now2 >= running_program.start) {
            const p = now2 - running_program.start;
            t = running_program.a + running_program.d * easing(p / running_program.duration);
            tick2(t, 1 - t);
          }
        }
        return !!(running_program || pending_program);
      });
    }
  }
  return {
    run(b) {
      if (is_function(config)) {
        wait().then(() => {
          const opts = { direction: b ? "in" : "out" };
          config = config(opts);
          go(b);
        });
      } else {
        go(b);
      }
    },
    end() {
      clear_animation();
      running_program = pending_program = null;
    }
  };
}

// node_modules/svelte/src/runtime/internal/each.js
function ensure_array_like(array_like_or_iterator) {
  return array_like_or_iterator?.length !== void 0 ? array_like_or_iterator : Array.from(array_like_or_iterator);
}
function outro_and_destroy_block(block, lookup) {
  transition_out(block, 1, 1, () => {
    lookup.delete(block.key);
  });
}
function update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block6, next, get_context) {
  let o = old_blocks.length;
  let n = list.length;
  let i = o;
  const old_indexes = {};
  while (i--) old_indexes[old_blocks[i].key] = i;
  const new_blocks = [];
  const new_lookup = /* @__PURE__ */ new Map();
  const deltas = /* @__PURE__ */ new Map();
  const updates = [];
  i = n;
  while (i--) {
    const child_ctx = get_context(ctx, list, i);
    const key = get_key(child_ctx);
    let block = lookup.get(key);
    if (!block) {
      block = create_each_block6(key, child_ctx);
      block.c();
    } else if (dynamic) {
      updates.push(() => block.p(child_ctx, dirty));
    }
    new_lookup.set(key, new_blocks[i] = block);
    if (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));
  }
  const will_move = /* @__PURE__ */ new Set();
  const did_move = /* @__PURE__ */ new Set();
  function insert2(block) {
    transition_in(block, 1);
    block.m(node, next);
    lookup.set(block.key, block);
    next = block.first;
    n--;
  }
  while (o && n) {
    const new_block = new_blocks[n - 1];
    const old_block = old_blocks[o - 1];
    const new_key = new_block.key;
    const old_key = old_block.key;
    if (new_block === old_block) {
      next = new_block.first;
      o--;
      n--;
    } else if (!new_lookup.has(old_key)) {
      destroy(old_block, lookup);
      o--;
    } else if (!lookup.has(new_key) || will_move.has(new_key)) {
      insert2(new_block);
    } else if (did_move.has(old_key)) {
      o--;
    } else if (deltas.get(new_key) > deltas.get(old_key)) {
      did_move.add(new_key);
      insert2(new_block);
    } else {
      will_move.add(old_key);
      o--;
    }
  }
  while (o--) {
    const old_block = old_blocks[o];
    if (!new_lookup.has(old_block.key)) destroy(old_block, lookup);
  }
  while (n) insert2(new_blocks[n - 1]);
  run_all(updates);
  return new_blocks;
}

// node_modules/svelte/src/shared/boolean_attributes.js
var _boolean_attributes = (
  /** @type {const} */
  [
    "allowfullscreen",
    "allowpaymentrequest",
    "async",
    "autofocus",
    "autoplay",
    "checked",
    "controls",
    "default",
    "defer",
    "disabled",
    "formnovalidate",
    "hidden",
    "inert",
    "ismap",
    "loop",
    "multiple",
    "muted",
    "nomodule",
    "novalidate",
    "open",
    "playsinline",
    "readonly",
    "required",
    "reversed",
    "selected"
  ]
);
var boolean_attributes = /* @__PURE__ */ new Set([..._boolean_attributes]);

// node_modules/svelte/src/runtime/internal/Component.js
function bind(component, name, callback) {
  const index = component.$$.props[name];
  if (index !== void 0) {
    component.$$.bound[index] = callback;
    callback(component.$$.ctx[index]);
  }
}
function create_component(block) {
  block && block.c();
}
function mount_component(component, target, anchor) {
  const { fragment, after_update } = component.$$;
  fragment && fragment.m(target, anchor);
  add_render_callback(() => {
    const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);
    if (component.$$.on_destroy) {
      component.$$.on_destroy.push(...new_on_destroy);
    } else {
      run_all(new_on_destroy);
    }
    component.$$.on_mount = [];
  });
  after_update.forEach(add_render_callback);
}
function destroy_component(component, detaching) {
  const $$ = component.$$;
  if ($$.fragment !== null) {
    flush_render_callbacks($$.after_update);
    run_all($$.on_destroy);
    $$.fragment && $$.fragment.d(detaching);
    $$.on_destroy = $$.fragment = null;
    $$.ctx = [];
  }
}
function make_dirty(component, i) {
  if (component.$$.dirty[0] === -1) {
    dirty_components.push(component);
    schedule_update();
    component.$$.dirty.fill(0);
  }
  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;
}
function init(component, options, instance29, create_fragment30, not_equal2, props, append_styles2 = null, dirty = [-1]) {
  const parent_component = current_component;
  set_current_component(component);
  const $$ = component.$$ = {
    fragment: null,
    ctx: [],
    // state
    props,
    update: noop,
    not_equal: not_equal2,
    bound: blank_object(),
    // lifecycle
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),
    // everything else
    callbacks: blank_object(),
    dirty,
    skip_bound: false,
    root: options.target || parent_component.$$.root
  };
  append_styles2 && append_styles2($$.root);
  let ready = false;
  $$.ctx = instance29 ? instance29(component, options.props || {}, (i, ret, ...rest) => {
    const value = rest.length ? rest[0] : ret;
    if ($$.ctx && not_equal2($$.ctx[i], $$.ctx[i] = value)) {
      if (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);
      if (ready) make_dirty(component, i);
    }
    return ret;
  }) : [];
  $$.update();
  ready = true;
  run_all($$.before_update);
  $$.fragment = create_fragment30 ? create_fragment30($$.ctx) : false;
  if (options.target) {
    if (options.hydrate) {
      start_hydrating();
      const nodes = children(options.target);
      $$.fragment && $$.fragment.l(nodes);
      nodes.forEach(detach);
    } else {
      $$.fragment && $$.fragment.c();
    }
    if (options.intro) transition_in(component.$$.fragment);
    mount_component(component, options.target, options.anchor);
    end_hydrating();
    flush();
  }
  set_current_component(parent_component);
}
var SvelteElement;
if (typeof HTMLElement === "function") {
  SvelteElement = class extends HTMLElement {
    /** The Svelte component constructor */
    $$ctor;
    /** Slots */
    $$s;
    /** The Svelte component instance */
    $$c;
    /** Whether or not the custom element is connected */
    $$cn = false;
    /** Component props data */
    $$d = {};
    /** `true` if currently in the process of reflecting component props back to attributes */
    $$r = false;
    /** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */
    $$p_d = {};
    /** @type {Record<string, Function[]>} Event listeners */
    $$l = {};
    /** @type {Map<Function, Function>} Event listener unsubscribe functions */
    $$l_u = /* @__PURE__ */ new Map();
    constructor($$componentCtor, $$slots, use_shadow_dom) {
      super();
      this.$$ctor = $$componentCtor;
      this.$$s = $$slots;
      if (use_shadow_dom) {
        this.attachShadow({ mode: "open" });
      }
    }
    addEventListener(type, listener, options) {
      this.$$l[type] = this.$$l[type] || [];
      this.$$l[type].push(listener);
      if (this.$$c) {
        const unsub = this.$$c.$on(type, listener);
        this.$$l_u.set(listener, unsub);
      }
      super.addEventListener(type, listener, options);
    }
    removeEventListener(type, listener, options) {
      super.removeEventListener(type, listener, options);
      if (this.$$c) {
        const unsub = this.$$l_u.get(listener);
        if (unsub) {
          unsub();
          this.$$l_u.delete(listener);
        }
      }
    }
    async connectedCallback() {
      this.$$cn = true;
      if (!this.$$c) {
        let create_slot2 = function(name) {
          return () => {
            let node;
            const obj = {
              c: function create() {
                node = element("slot");
                if (name !== "default") {
                  attr(node, "name", name);
                }
              },
              /**
               * @param {HTMLElement} target
               * @param {HTMLElement} [anchor]
               */
              m: function mount(target, anchor) {
                insert(target, node, anchor);
              },
              d: function destroy(detaching) {
                if (detaching) {
                  detach(node);
                }
              }
            };
            return obj;
          };
        };
        await Promise.resolve();
        if (!this.$$cn || this.$$c) {
          return;
        }
        const $$slots = {};
        const existing_slots = get_custom_elements_slots(this);
        for (const name of this.$$s) {
          if (name in existing_slots) {
            $$slots[name] = [create_slot2(name)];
          }
        }
        for (const attribute of this.attributes) {
          const name = this.$$g_p(attribute.name);
          if (!(name in this.$$d)) {
            this.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, "toProp");
          }
        }
        for (const key in this.$$p_d) {
          if (!(key in this.$$d) && this[key] !== void 0) {
            this.$$d[key] = this[key];
            delete this[key];
          }
        }
        this.$$c = new this.$$ctor({
          target: this.shadowRoot || this,
          props: {
            ...this.$$d,
            $$slots,
            $$scope: {
              ctx: []
            }
          }
        });
        const reflect_attributes = () => {
          this.$$r = true;
          for (const key in this.$$p_d) {
            this.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];
            if (this.$$p_d[key].reflect) {
              const attribute_value = get_custom_element_value(
                key,
                this.$$d[key],
                this.$$p_d,
                "toAttribute"
              );
              if (attribute_value == null) {
                this.removeAttribute(this.$$p_d[key].attribute || key);
              } else {
                this.setAttribute(this.$$p_d[key].attribute || key, attribute_value);
              }
            }
          }
          this.$$r = false;
        };
        this.$$c.$$.after_update.push(reflect_attributes);
        reflect_attributes();
        for (const type in this.$$l) {
          for (const listener of this.$$l[type]) {
            const unsub = this.$$c.$on(type, listener);
            this.$$l_u.set(listener, unsub);
          }
        }
        this.$$l = {};
      }
    }
    // We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte
    // and setting attributes through setAttribute etc, this is helpful
    attributeChangedCallback(attr2, _oldValue, newValue) {
      if (this.$$r) return;
      attr2 = this.$$g_p(attr2);
      this.$$d[attr2] = get_custom_element_value(attr2, newValue, this.$$p_d, "toProp");
      this.$$c?.$set({ [attr2]: this.$$d[attr2] });
    }
    disconnectedCallback() {
      this.$$cn = false;
      Promise.resolve().then(() => {
        if (!this.$$cn && this.$$c) {
          this.$$c.$destroy();
          this.$$c = void 0;
        }
      });
    }
    $$g_p(attribute_name) {
      return Object.keys(this.$$p_d).find(
        (key) => this.$$p_d[key].attribute === attribute_name || !this.$$p_d[key].attribute && key.toLowerCase() === attribute_name
      ) || attribute_name;
    }
  };
}
function get_custom_element_value(prop, value, props_definition, transform) {
  const type = props_definition[prop]?.type;
  value = type === "Boolean" && typeof value !== "boolean" ? value != null : value;
  if (!transform || !props_definition[prop]) {
    return value;
  } else if (transform === "toAttribute") {
    switch (type) {
      case "Object":
      case "Array":
        return value == null ? null : JSON.stringify(value);
      case "Boolean":
        return value ? "" : null;
      case "Number":
        return value == null ? null : value;
      default:
        return value;
    }
  } else {
    switch (type) {
      case "Object":
      case "Array":
        return value && JSON.parse(value);
      case "Boolean":
        return value;
      // conversion already handled above
      case "Number":
        return value != null ? +value : value;
      default:
        return value;
    }
  }
}
var SvelteComponent = class {
  /**
   * ### PRIVATE API
   *
   * Do not use, may change at any time
   *
   * @type {any}
   */
  $$ = void 0;
  /**
   * ### PRIVATE API
   *
   * Do not use, may change at any time
   *
   * @type {any}
   */
  $$set = void 0;
  /** @returns {void} */
  $destroy() {
    destroy_component(this, 1);
    this.$destroy = noop;
  }
  /**
   * @template {Extract<keyof Events, string>} K
   * @param {K} type
   * @param {((e: Events[K]) => void) | null | undefined} callback
   * @returns {() => void}
   */
  $on(type, callback) {
    if (!is_function(callback)) {
      return noop;
    }
    const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);
    callbacks.push(callback);
    return () => {
      const index = callbacks.indexOf(callback);
      if (index !== -1) callbacks.splice(index, 1);
    };
  }
  /**
   * @param {Partial<Props>} props
   * @returns {void}
   */
  $set(props) {
    if (this.$$set && !is_empty(props)) {
      this.$$.skip_bound = true;
      this.$$set(props);
      this.$$.skip_bound = false;
    }
  }
};

// node_modules/svelte/src/shared/version.js
var PUBLIC_VERSION = "4";

// node_modules/svelte/src/runtime/internal/disclose-version/index.js
if (typeof window !== "undefined")
  (window.__svelte || (window.__svelte = { v: /* @__PURE__ */ new Set() })).v.add(PUBLIC_VERSION);

// node_modules/clsx/dist/clsx.mjs
function r(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e) n += e;
  else if ("object" == typeof e) if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
  } else for (f in e) e[f] && (n && (n += " "), n += f);
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = "", o = arguments.length; f < o; f++) (e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_default = clsx;

// src/utils.ts
var import_obsidian = require("obsidian");

// src/io/parse.ts
function getNoteDateUID({
  date,
  granularity,
  localeAware
}) {
  return `${granularity}-${date.startOf(granularity || "day").clone().locale(localeAware ? window.moment.locale() : "en").format()}`;
}
function getPeriodicityFromGranularity(granularity) {
  return granularity === "day" ? "daily" : `${granularity}ly`;
}

// src/utils.ts
function capitalize(string) {
  return string[0].toUpperCase() + string.slice(1).toLowerCase();
}
function getOnCreateNoteDialogNoteFromGranularity(granularity) {
  const periodicity = getPeriodicityFromGranularity(granularity);
  const periodicNotesPlugin = window.app.plugins.getPlugin(PERIODIC_NOTES_PLUGIN_ID);
  const noteSettingsFromPeriodicNotesPlugin = periodicNotesPlugin?.settings[periodicity].enabled;
  if (granularity === "day") {
    const dailyNotesPlugin = window.app.internalPlugins.plugins[DAILY_NOTES_PLUGIN_ID]?.enabled;
    if (periodicNotesPlugin) {
      if (noteSettingsFromPeriodicNotesPlugin) {
        return "Note: Using Daily notes config from Periodic Notes plugin.";
      } else {
        if (dailyNotesPlugin) {
          return "Note: Daily notes from Periodic Notes plugin are disabled. Using Daily Notes plugin config for now.";
        } else {
          return "Note: Daily notes from Periodic Notes plugin and Daily Notes plugin are disabled. Using default config for now.";
        }
      }
    } else {
      if (dailyNotesPlugin) {
        return "Note: Missing Periodic Notes plugin! Please install or activate. Using Daily Notes plugin config for now.";
      } else {
        return "Note: Missing Periodic Notes and Daily Notes plugin! Please install or activate. Using default config for now.";
      }
    }
  }
  if (periodicNotesPlugin) {
    if (noteSettingsFromPeriodicNotesPlugin) {
      return `Note: Using ${capitalize(periodicity)} notes config from Periodic Notes plugin.`;
    } else {
      return `Note: ${capitalize(
        periodicity
      )} notes from Periodic Notes plugin are disabled. Using default config for now.`;
    }
  } else {
    return "Note: Missing Periodic Notes plugin! Please install or activate. Defaults will be used for now.";
  }
}
function logger(module2, ...messages) {
  const prefix = `[${module2}]`;
  messages.forEach((message) => {
    console.log(prefix, " ", message);
    console.log("-".repeat(20));
  });
}
async function getPlugin(pluginId) {
  const plugins = window.app.plugins;
  const enabledPlugins = plugins?.enabledPlugins;
  if (!enabledPlugins.has(pluginId)) {
    await plugins?.enablePluginAndSave(pluginId);
  }
  return plugins?.getPlugin(pluginId);
}
async function getDailyNotesPlugin() {
  const internalPlugins = window.app.internalPlugins;
  const dailyNotesPlugin = internalPlugins?.getPluginById(DAILY_NOTES_PLUGIN_ID);
  if (!dailyNotesPlugin?.enabled) {
    await dailyNotesPlugin.enable();
  }
}

// src/ui/components/Tabs.svelte
function add_css(target) {
  append_styles(target, "svelte-1iwyr36", `.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36,.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::before,.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::before,.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{text-transform:none}button.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:-moz-focusring{outline:auto}.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:-moz-ui-invalid{box-shadow:none}.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::-webkit-inner-spin-button,.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::-webkit-outer-spin-button{height:auto}.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::-webkit-search-decoration{-webkit-appearance:none}.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{cursor:pointer}.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:disabled{cursor:default}.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36,.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::before,.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.container.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{width:100%}@media(min-width: 640px){.container.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{max-width:640px}}@media(min-width: 768px){.container.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{max-width:768px}}@media(min-width: 1024px){.container.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{max-width:1024px}}@media(min-width: 1280px){.container.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{max-width:1280px}}@media(min-width: 1536px){.container.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{max-width:1536px}}.pointer-events-none.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{pointer-events:none}.visible.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{visibility:visible}.invisible.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{visibility:hidden}.collapse.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{visibility:collapse}.static.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{position:static}.absolute.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{position:absolute}.relative.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{position:relative}.sticky.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{position:sticky}.bottom-1.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{bottom:0.25rem}.left-0.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{left:0px}.left-full.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{left:100%}.top-0.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{top:0px}.z-10.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{z-index:10}.z-20.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{z-index:20}.m-0.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin:0px}.mx-auto.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-left:auto;margin-right:auto}.-ml-1.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-left:-0.25rem}.mb-1\\.5.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-bottom:0.375rem}.mb-6.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-bottom:1.5rem}.ml-2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-left:0.5rem}.ml-4.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-left:1rem}.ml-\\[5px\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-left:5px}.mr-2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-right:0.5rem}.mt-1.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-top:0.25rem}.mt-2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-top:0.5rem}.mt-2\\.5.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-top:0.625rem}.mt-3.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-top:0.75rem}.mt-6.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-top:1.5rem}.mt-7.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{margin-top:1.75rem}.block.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{display:block}.flex.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{display:flex}.table.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{display:table}.contents.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{display:contents}.hidden.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{display:none}.\\!h-auto.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{height:auto !important}.h-2\\.5.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{height:0.625rem}.h-4.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{height:1rem}.h-\\[8px\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{height:8px}.h-auto.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{height:auto}.w-2\\.5.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{width:0.625rem}.w-4.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{width:1rem}.w-6.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{width:1.5rem}.w-8.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{width:2rem}.w-\\[8px\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{width:8px}.w-full.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{width:100%}.w-max.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{width:-moz-max-content;width:max-content}.max-w-xs.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{max-width:20rem}.flex-grow.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{flex-grow:1}.border-collapse.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-collapse:collapse}.-translate-x-1\\/2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\/2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-12.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-180.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-rotate:180deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-45.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-rotate:45deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-90.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-rotate:90deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-not-allowed.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{cursor:not-allowed}.cursor-pointer.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{cursor:pointer}.flex-col.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{flex-direction:column}.items-end.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{align-items:flex-end}.items-center.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{align-items:center}.justify-between.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{justify-content:space-between}.space-x-1.svelte-1iwyr36>.svelte-1iwyr36:not([hidden])~.svelte-1iwyr36:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(0.25rem * var(--tw-space-x-reverse));margin-left:calc(0.25rem * calc(1 - var(--tw-space-x-reverse)))}.rounded-2xl.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-radius:1rem}.rounded-\\[--radius-s\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-radius:var(--radius-s)}.rounded-\\[--tab-curve\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-radius:var(--tab-curve)}.rounded-sm.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-radius:0.125rem}.border.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-width:1px}.border-0.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-width:0px}.border-solid.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-style:solid}.border-\\[var\\(--background-modifier-border\\)\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{border-color:var(--background-modifier-border)}.bg-\\[--background-modifier-hover\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{background-color:var(--background-modifier-hover)}.bg-\\[--interactive-accent\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{background-color:var(--interactive-accent)}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{background-color:var(--background-primary-alt)}.bg-slate-500.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-bg-opacity:1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))}.bg-transparent.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{background-color:transparent}.p-1.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding:0.25rem}.p-2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding:0.5rem}.p-6.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding:1.5rem}.px-1.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding-left:0.25rem;padding-right:0.25rem}.px-2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding-left:0.5rem;padding-right:0.5rem}.px-4.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding-left:1rem;padding-right:1rem}.py-2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding-top:0.5rem;padding-bottom:0.5rem}.py-3.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding-top:0.75rem;padding-bottom:0.75rem}.\\!pt-2.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding-top:0.5rem !important}.pt-4.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{padding-top:1rem}.text-center.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{text-align:center}.text-7xl.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{font-size:4.5rem;line-height:1}.text-lg.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{font-size:1.125rem;line-height:1.75rem}.text-sm.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{font-size:0.875rem;line-height:1.25rem}.text-xs.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{font-size:0.75rem;line-height:1rem}.font-medium.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{font-weight:500}.font-semibold.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{font-weight:600}.uppercase.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{text-transform:uppercase}.capitalize.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{text-transform:capitalize}.italic.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{font-style:italic}.tabular-nums.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.text-\\[--color-arrow\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--color-arrow)}.text-\\[--color-text-title\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--color-text-title)}.text-\\[--color-text-today\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--color-text-today)}.text-\\[--icon-color\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--icon-color)}.text-\\[--interactive-accent\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--interactive-accent)}.text-\\[--text-muted\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--text-muted)}.text-\\[--text-normal\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--text-normal)}.text-\\[--text-on-accent\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--text-on-accent)}.text-\\[var\\(--text-muted\\)\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:var(--text-muted)}.text-transparent.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{color:transparent}.opacity-0.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{opacity:0}.opacity-100.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{opacity:1}.opacity-50.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{opacity:0.5}.opacity-60.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{opacity:0.6}.opacity-\\[--icon-opacity\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{opacity:var(--icon-opacity)}.shadow.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.blur.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.transition-colors.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.transition-transform.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-200.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{transition-duration:200ms}.ease-in.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36{transition-timing-function:cubic-bezier(0.4, 0, 1, 1)}.last\\:mb-0.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:last-child{margin-bottom:0px}.hover\\:cursor-pointer.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:hover{cursor:pointer}.hover\\:bg-\\[--background-modifier-hover\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:hover{background-color:var(--background-modifier-hover)}.hover\\:bg-\\[--interactive-accent-hover\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:hover{background-color:var(--interactive-accent-hover)}.hover\\:bg-\\[--interactive-hover\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:hover{background-color:var(--interactive-hover)}.hover\\:text-\\[--icon-color-hover\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:hover{color:var(--icon-color-hover)}.hover\\:opacity-\\[--icon-opacity-hover\\].svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:hover{opacity:var(--icon-opacity-hover)}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-1iwyr36.svelte-1iwyr36.svelte-1iwyr36:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}`);
}
function get_each_context(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[5] = list[i];
  return child_ctx;
}
function create_each_block(ctx) {
  let button;
  let t_value = capitalize(
    /*tab*/
    ctx[5]
  ) + "";
  let t;
  let button_class_value;
  let mounted;
  let dispose;
  function click_handler() {
    return (
      /*click_handler*/
      ctx[4](
        /*tab*/
        ctx[5]
      )
    );
  }
  return {
    c() {
      button = element("button");
      t = text(t_value);
      attr(button, "class", button_class_value = null_to_empty(clsx_default(
        "[&:not(:focus-visible)]:shadow-none w-full rounded-[--radius-s] py-2 transition",
        /*selectedTab*/
        ctx[0] === /*tab*/
        ctx[5] ? "text-[--text-on-accent] bg-[--interactive-accent] hover:bg-[--interactive-accent-hover]" : "text-[--icon-color] opacity-[--icon-opacity] hover:opacity-[--icon-opacity-hover] hover:text-[--icon-color-hover] hover:bg-[--background-modifier-hover]"
      )) + " svelte-1iwyr36");
      attr(
        button,
        "id",
        /*tabId*/
        ctx[3]
      );
    },
    m(target, anchor) {
      insert(target, button, anchor);
      append(button, t);
      if (!mounted) {
        dispose = listen(button, "click", click_handler);
        mounted = true;
      }
    },
    p(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty & /*tabs*/
      2 && t_value !== (t_value = capitalize(
        /*tab*/
        ctx[5]
      ) + "")) set_data(t, t_value);
      if (dirty & /*selectedTab, tabs*/
      3 && button_class_value !== (button_class_value = null_to_empty(clsx_default(
        "[&:not(:focus-visible)]:shadow-none w-full rounded-[--radius-s] py-2 transition",
        /*selectedTab*/
        ctx[0] === /*tab*/
        ctx[5] ? "text-[--text-on-accent] bg-[--interactive-accent] hover:bg-[--interactive-accent-hover]" : "text-[--icon-color] opacity-[--icon-opacity] hover:opacity-[--icon-opacity-hover] hover:text-[--icon-color-hover] hover:bg-[--background-modifier-hover]"
      )) + " svelte-1iwyr36")) {
        attr(button, "class", button_class_value);
      }
      if (dirty & /*tabId*/
      8) {
        attr(
          button,
          "id",
          /*tabId*/
          ctx[3]
        );
      }
    },
    d(detaching) {
      if (detaching) {
        detach(button);
      }
      mounted = false;
      dispose();
    }
  };
}
function create_fragment(ctx) {
  let div;
  let each_value = ensure_array_like(
    /*tabs*/
    ctx[1]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
  }
  return {
    c() {
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr(div, "class", "flex rounded-[--tab-curve] mx-auto w-full max-w-xs space-x-1 p-1 bg-[--background-modifier-hover] svelte-1iwyr36");
      attr(
        div,
        "id",
        /*id*/
        ctx[2]
      );
    },
    m(target, anchor) {
      insert(target, div, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & /*selectedTab, tabs, tabId*/
      11) {
        each_value = ensure_array_like(
          /*tabs*/
          ctx2[1]
        );
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(div, null);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value.length;
      }
      if (dirty & /*id*/
      4) {
        attr(
          div,
          "id",
          /*id*/
          ctx2[2]
        );
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(div);
      }
      destroy_each(each_blocks, detaching);
    }
  };
}
function instance($$self, $$props, $$invalidate) {
  let { tabs = [] } = $$props;
  let { selectedTab } = $$props;
  let { id = void 0 } = $$props;
  let { tabId = void 0 } = $$props;
  const click_handler = (tab) => $$invalidate(0, selectedTab = tab);
  $$self.$$set = ($$props2) => {
    if ("tabs" in $$props2) $$invalidate(1, tabs = $$props2.tabs);
    if ("selectedTab" in $$props2) $$invalidate(0, selectedTab = $$props2.selectedTab);
    if ("id" in $$props2) $$invalidate(2, id = $$props2.id);
    if ("tabId" in $$props2) $$invalidate(3, tabId = $$props2.tabId);
  };
  return [selectedTab, tabs, id, tabId, click_handler];
}
var Tabs = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance, create_fragment, safe_not_equal, { tabs: 1, selectedTab: 0, id: 2, tabId: 3 }, add_css);
  }
};
var Tabs_default = Tabs;

// src/settings/ui/core/Arrow.svelte
var import_obsidian2 = require("obsidian");

// node_modules/svelte/src/runtime/easing/index.js
function cubicOut(t) {
  const f = t - 1;
  return f * f * f + 1;
}

// node_modules/svelte/src/runtime/transition/index.js
function fade(node, { delay = 0, duration = 400, easing = identity } = {}) {
  const o = +getComputedStyle(node).opacity;
  return {
    delay,
    duration,
    easing,
    css: (t) => `opacity: ${t * o}`
  };
}
function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = "y" } = {}) {
  const style = getComputedStyle(node);
  const opacity = +style.opacity;
  const primary_property = axis === "y" ? "height" : "width";
  const primary_property_value = parseFloat(style[primary_property]);
  const secondary_properties = axis === "y" ? ["top", "bottom"] : ["left", "right"];
  const capitalized_secondary_properties = secondary_properties.map(
    (e) => `${e[0].toUpperCase()}${e.slice(1)}`
  );
  const padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);
  const padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);
  const margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);
  const margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);
  const border_width_start_value = parseFloat(
    style[`border${capitalized_secondary_properties[0]}Width`]
  );
  const border_width_end_value = parseFloat(
    style[`border${capitalized_secondary_properties[1]}Width`]
  );
  return {
    delay,
    duration,
    easing,
    css: (t) => `overflow: hidden;opacity: ${Math.min(t * 20, 1) * opacity};${primary_property}: ${t * primary_property_value}px;padding-${secondary_properties[0]}: ${t * padding_start_value}px;padding-${secondary_properties[1]}: ${t * padding_end_value}px;margin-${secondary_properties[0]}: ${t * margin_start_value}px;margin-${secondary_properties[1]}: ${t * margin_end_value}px;border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`
  };
}

// src/settings/ui/core/Arrow.svelte
function add_css2(target) {
  append_styles(target, "svelte-g9sw5t", ".pointer-events-none.svelte-g9sw5t{pointer-events:none\n}.visible.svelte-g9sw5t{visibility:visible\n}.invisible.svelte-g9sw5t{visibility:hidden\n}.collapse.svelte-g9sw5t{visibility:collapse\n}.static.svelte-g9sw5t{position:static\n}.absolute.svelte-g9sw5t{position:absolute\n}.relative.svelte-g9sw5t{position:relative\n}.sticky.svelte-g9sw5t{position:sticky\n}.bottom-1.svelte-g9sw5t{bottom:0.25rem\n}.left-0.svelte-g9sw5t{left:0px\n}.left-full.svelte-g9sw5t{left:100%\n}.top-0.svelte-g9sw5t{top:0px\n}.z-10.svelte-g9sw5t{z-index:10\n}.z-20.svelte-g9sw5t{z-index:20\n}.m-0.svelte-g9sw5t{margin:0px\n}.mx-auto.svelte-g9sw5t{margin-left:auto;margin-right:auto\n}.-ml-1.svelte-g9sw5t{margin-left:-0.25rem\n}.mb-1\\.5.svelte-g9sw5t{margin-bottom:0.375rem\n}.mb-6.svelte-g9sw5t{margin-bottom:1.5rem\n}.ml-2.svelte-g9sw5t{margin-left:0.5rem\n}.ml-4.svelte-g9sw5t{margin-left:1rem\n}.ml-\\[5px\\].svelte-g9sw5t{margin-left:5px\n}.mr-2.svelte-g9sw5t{margin-right:0.5rem\n}.mt-1.svelte-g9sw5t{margin-top:0.25rem\n}.mt-2.svelte-g9sw5t{margin-top:0.5rem\n}.mt-2\\.5.svelte-g9sw5t{margin-top:0.625rem\n}.mt-3.svelte-g9sw5t{margin-top:0.75rem\n}.mt-6.svelte-g9sw5t{margin-top:1.5rem\n}.mt-7.svelte-g9sw5t{margin-top:1.75rem\n}.block.svelte-g9sw5t{display:block\n}.flex.svelte-g9sw5t{display:flex\n}.table.svelte-g9sw5t{display:table\n}.contents.svelte-g9sw5t{display:contents\n}.hidden.svelte-g9sw5t{display:none\n}.\\!h-auto.svelte-g9sw5t{height:auto !important\n}.h-2\\.5.svelte-g9sw5t{height:0.625rem\n}.h-4.svelte-g9sw5t{height:1rem\n}.h-\\[8px\\].svelte-g9sw5t{height:8px\n}.h-auto.svelte-g9sw5t{height:auto\n}.w-2\\.5.svelte-g9sw5t{width:0.625rem\n}.w-4.svelte-g9sw5t{width:1rem\n}.w-6.svelte-g9sw5t{width:1.5rem\n}.w-8.svelte-g9sw5t{width:2rem\n}.w-\\[8px\\].svelte-g9sw5t{width:8px\n}.w-full.svelte-g9sw5t{width:100%\n}.w-max.svelte-g9sw5t{width:-moz-max-content;width:max-content\n}.max-w-xs.svelte-g9sw5t{max-width:20rem\n}.flex-grow.svelte-g9sw5t{flex-grow:1\n}.border-collapse.svelte-g9sw5t{border-collapse:collapse\n}.-translate-x-1\\/2.svelte-g9sw5t{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.-translate-y-1\\/2.svelte-g9sw5t{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-12.svelte-g9sw5t{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-180.svelte-g9sw5t{--tw-rotate:180deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-45.svelte-g9sw5t{--tw-rotate:45deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-90.svelte-g9sw5t{--tw-rotate:90deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.cursor-not-allowed.svelte-g9sw5t{cursor:not-allowed\n}.cursor-pointer.svelte-g9sw5t{cursor:pointer\n}.flex-col.svelte-g9sw5t{flex-direction:column\n}.items-end.svelte-g9sw5t{align-items:flex-end\n}.items-center.svelte-g9sw5t{align-items:center\n}.justify-between.svelte-g9sw5t{justify-content:space-between\n}.rounded-2xl.svelte-g9sw5t{border-radius:1rem\n}.rounded-\\[--radius-s\\].svelte-g9sw5t{border-radius:var(--radius-s)\n}.rounded-\\[--tab-curve\\].svelte-g9sw5t{border-radius:var(--tab-curve)\n}.rounded-sm.svelte-g9sw5t{border-radius:0.125rem\n}.border.svelte-g9sw5t{border-width:1px\n}.border-0.svelte-g9sw5t{border-width:0px\n}.border-solid.svelte-g9sw5t{border-style:solid\n}.border-\\[var\\(--background-modifier-border\\)\\].svelte-g9sw5t{border-color:var(--background-modifier-border)\n}.bg-\\[--background-modifier-hover\\].svelte-g9sw5t{background-color:var(--background-modifier-hover)\n}.bg-\\[--interactive-accent\\].svelte-g9sw5t{background-color:var(--interactive-accent)\n}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-g9sw5t{background-color:var(--background-primary-alt)\n}.bg-slate-500.svelte-g9sw5t{--tw-bg-opacity:1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))\n}.bg-transparent.svelte-g9sw5t{background-color:transparent\n}.p-1.svelte-g9sw5t{padding:0.25rem\n}.p-2.svelte-g9sw5t{padding:0.5rem\n}.p-6.svelte-g9sw5t{padding:1.5rem\n}.px-1.svelte-g9sw5t{padding-left:0.25rem;padding-right:0.25rem\n}.px-2.svelte-g9sw5t{padding-left:0.5rem;padding-right:0.5rem\n}.px-4.svelte-g9sw5t{padding-left:1rem;padding-right:1rem\n}.py-2.svelte-g9sw5t{padding-top:0.5rem;padding-bottom:0.5rem\n}.py-3.svelte-g9sw5t{padding-top:0.75rem;padding-bottom:0.75rem\n}.\\!pt-2.svelte-g9sw5t{padding-top:0.5rem !important\n}.pt-4.svelte-g9sw5t{padding-top:1rem\n}.text-center.svelte-g9sw5t{text-align:center\n}.text-7xl.svelte-g9sw5t{font-size:4.5rem;line-height:1\n}.text-lg.svelte-g9sw5t{font-size:1.125rem;line-height:1.75rem\n}.text-sm.svelte-g9sw5t{font-size:0.875rem;line-height:1.25rem\n}.text-xs.svelte-g9sw5t{font-size:0.75rem;line-height:1rem\n}.font-medium.svelte-g9sw5t{font-weight:500\n}.font-semibold.svelte-g9sw5t{font-weight:600\n}.uppercase.svelte-g9sw5t{text-transform:uppercase\n}.capitalize.svelte-g9sw5t{text-transform:capitalize\n}.italic.svelte-g9sw5t{font-style:italic\n}.tabular-nums.svelte-g9sw5t{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)\n}.text-\\[--color-arrow\\].svelte-g9sw5t{color:var(--color-arrow)\n}.text-\\[--color-text-title\\].svelte-g9sw5t{color:var(--color-text-title)\n}.text-\\[--color-text-today\\].svelte-g9sw5t{color:var(--color-text-today)\n}.text-\\[--icon-color\\].svelte-g9sw5t{color:var(--icon-color)\n}.text-\\[--interactive-accent\\].svelte-g9sw5t{color:var(--interactive-accent)\n}.text-\\[--text-muted\\].svelte-g9sw5t{color:var(--text-muted)\n}.text-\\[--text-normal\\].svelte-g9sw5t{color:var(--text-normal)\n}.text-\\[--text-on-accent\\].svelte-g9sw5t{color:var(--text-on-accent)\n}.text-\\[var\\(--text-muted\\)\\].svelte-g9sw5t{color:var(--text-muted)\n}.text-transparent.svelte-g9sw5t{color:transparent\n}.opacity-0.svelte-g9sw5t{opacity:0\n}.opacity-100.svelte-g9sw5t{opacity:1\n}.opacity-50.svelte-g9sw5t{opacity:0.5\n}.opacity-60.svelte-g9sw5t{opacity:0.6\n}.opacity-\\[--icon-opacity\\].svelte-g9sw5t{opacity:var(--icon-opacity)\n}.shadow.svelte-g9sw5t{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}.blur.svelte-g9sw5t{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\n}.transition.svelte-g9sw5t{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-colors.svelte-g9sw5t{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-transform.svelte-g9sw5t{transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.duration-200.svelte-g9sw5t{transition-duration:200ms\n}.ease-in.svelte-g9sw5t{transition-timing-function:cubic-bezier(0.4, 0, 1, 1)\n}.last\\:mb-0.svelte-g9sw5t:last-child{margin-bottom:0px\n}.hover\\:cursor-pointer.svelte-g9sw5t:hover{cursor:pointer\n}.hover\\:bg-\\[--background-modifier-hover\\].svelte-g9sw5t:hover{background-color:var(--background-modifier-hover)\n}.hover\\:bg-\\[--interactive-accent-hover\\].svelte-g9sw5t:hover{background-color:var(--interactive-accent-hover)\n}.hover\\:bg-\\[--interactive-hover\\].svelte-g9sw5t:hover{background-color:var(--interactive-hover)\n}.hover\\:text-\\[--icon-color-hover\\].svelte-g9sw5t:hover{color:var(--icon-color-hover)\n}.hover\\:opacity-\\[--icon-opacity-hover\\].svelte-g9sw5t:hover{opacity:var(--icon-opacity-hover)\n}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-g9sw5t:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}");
}
function create_fragment2(ctx) {
  let div;
  let div_class_value;
  let div_transition;
  let current;
  return {
    c() {
      div = element("div");
      attr(div, "class", div_class_value = null_to_empty(`flex items-center mr-2 transition-transform duration-200 ease-in ${/*isExpanded*/
      ctx[0] ? "rotate-90" : ""}`) + " svelte-g9sw5t");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      ctx[2](div);
      current = true;
    },
    p(ctx2, [dirty]) {
      if (!current || dirty & /*isExpanded*/
      1 && div_class_value !== (div_class_value = null_to_empty(`flex items-center mr-2 transition-transform duration-200 ease-in ${/*isExpanded*/
      ctx2[0] ? "rotate-90" : ""}`) + " svelte-g9sw5t")) {
        attr(div, "class", div_class_value);
      }
    },
    i(local) {
      if (current) return;
      if (local) {
        add_render_callback(() => {
          if (!current) return;
          if (!div_transition) div_transition = create_bidirectional_transition(div, fade, {}, true);
          div_transition.run(1);
        });
      }
      current = true;
    },
    o(local) {
      if (local) {
        if (!div_transition) div_transition = create_bidirectional_transition(div, fade, {}, false);
        div_transition.run(0);
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div);
      }
      ctx[2](null);
      if (detaching && div_transition) div_transition.end();
    }
  };
}
function instance2($$self, $$props, $$invalidate) {
  let { isExpanded } = $$props;
  let arrowEl;
  onMount(() => {
    (0, import_obsidian2.setIcon)(arrowEl, "chevron-right");
  });
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      arrowEl = $$value;
      $$invalidate(1, arrowEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("isExpanded" in $$props2) $$invalidate(0, isExpanded = $$props2.isExpanded);
  };
  return [isExpanded, arrowEl, div_binding];
}
var Arrow = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance2, create_fragment2, safe_not_equal, { isExpanded: 0 }, add_css2);
  }
};
var Arrow_default = Arrow;

// src/settings/ui/core/Dropdown.svelte
function get_each_context2(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[4] = list[i].label;
  child_ctx[2] = list[i].value;
  return child_ctx;
}
function create_each_block2(ctx) {
  let option;
  let t_value = (
    /*label*/
    ctx[4] + ""
  );
  let t;
  let option_value_value;
  return {
    c() {
      option = element("option");
      t = text(t_value);
      option.__value = option_value_value = /*value*/
      ctx[2];
      set_input_value(option, option.__value);
    },
    m(target, anchor) {
      insert(target, option, anchor);
      append(option, t);
    },
    p(ctx2, dirty) {
      if (dirty & /*options*/
      2 && t_value !== (t_value = /*label*/
      ctx2[4] + "")) set_data(t, t_value);
      if (dirty & /*options*/
      2 && option_value_value !== (option_value_value = /*value*/
      ctx2[2])) {
        option.__value = option_value_value;
        set_input_value(option, option.__value);
      }
    },
    d(detaching) {
      if (detaching) {
        detach(option);
      }
    }
  };
}
function create_fragment3(ctx) {
  let select;
  let mounted;
  let dispose;
  let each_value = ensure_array_like(
    /*options*/
    ctx[1]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block2(get_each_context2(ctx, each_value, i));
  }
  return {
    c() {
      select = element("select");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr(select, "class", "dropdown");
    },
    m(target, anchor) {
      insert(target, select, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(select, null);
        }
      }
      select_option(
        select,
        /*value*/
        ctx[2]
      );
      if (!mounted) {
        dispose = listen(
          select,
          "change",
          /*change_handler*/
          ctx[3]
        );
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & /*options*/
      2) {
        each_value = ensure_array_like(
          /*options*/
          ctx2[1]
        );
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context2(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block2(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(select, null);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value.length;
      }
      if (dirty & /*value, options*/
      6) {
        select_option(
          select,
          /*value*/
          ctx2[2]
        );
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(select);
      }
      destroy_each(each_blocks, detaching);
      mounted = false;
      dispose();
    }
  };
}
function instance3($$self, $$props, $$invalidate) {
  let { onChange } = $$props;
  let { options = [] } = $$props;
  let { value } = $$props;
  const change_handler = (event) => {
    onChange(event.target?.value);
  };
  $$self.$$set = ($$props2) => {
    if ("onChange" in $$props2) $$invalidate(0, onChange = $$props2.onChange);
    if ("options" in $$props2) $$invalidate(1, options = $$props2.options);
    if ("value" in $$props2) $$invalidate(2, value = $$props2.value);
  };
  return [onChange, options, value, change_handler];
}
var Dropdown = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance3, create_fragment3, safe_not_equal, { onChange: 0, options: 1, value: 2 });
  }
};
var Dropdown_default = Dropdown;

// src/settings/ui/core/SettingItem.svelte
var get_control_slot_changes = (dirty) => ({});
var get_control_slot_context = (ctx) => ({});
function create_if_block(ctx) {
  let div;
  let t;
  return {
    c() {
      div = element("div");
      t = text(
        /*description*/
        ctx[1]
      );
      attr(div, "class", "setting-item-description");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      append(div, t);
    },
    p(ctx2, dirty) {
      if (dirty & /*description*/
      2) set_data(
        t,
        /*description*/
        ctx2[1]
      );
    },
    d(detaching) {
      if (detaching) {
        detach(div);
      }
    }
  };
}
function create_fragment4(ctx) {
  let div4;
  let div2;
  let div1;
  let div0;
  let t0;
  let t1;
  let t2;
  let div3;
  let current;
  let if_block = (
    /*description*/
    ctx[1] && create_if_block(ctx)
  );
  const control_slot_template = (
    /*#slots*/
    ctx[5].control
  );
  const control_slot = create_slot(
    control_slot_template,
    ctx,
    /*$$scope*/
    ctx[4],
    get_control_slot_context
  );
  return {
    c() {
      div4 = element("div");
      div2 = element("div");
      div1 = element("div");
      div0 = element("div");
      t0 = text(
        /*name*/
        ctx[0]
      );
      t1 = space();
      if (if_block) if_block.c();
      t2 = space();
      div3 = element("div");
      if (control_slot) control_slot.c();
      attr(div1, "class", "setting-item-name");
      attr(div2, "class", "setting-item-info");
      attr(div3, "class", "setting-item-control");
      attr(div4, "class", "setting-item");
      toggle_class(
        div4,
        "setting-item-heading",
        /*isHeading*/
        ctx[2]
      );
      toggle_class(
        div4,
        "mod-dropdown",
        /*type*/
        ctx[3] === "dropdown"
      );
    },
    m(target, anchor) {
      insert(target, div4, anchor);
      append(div4, div2);
      append(div2, div1);
      append(div1, div0);
      append(div0, t0);
      append(div2, t1);
      if (if_block) if_block.m(div2, null);
      append(div4, t2);
      append(div4, div3);
      if (control_slot) {
        control_slot.m(div3, null);
      }
      current = true;
    },
    p(ctx2, [dirty]) {
      if (!current || dirty & /*name*/
      1) set_data(
        t0,
        /*name*/
        ctx2[0]
      );
      if (
        /*description*/
        ctx2[1]
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block(ctx2);
          if_block.c();
          if_block.m(div2, null);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
      if (control_slot) {
        if (control_slot.p && (!current || dirty & /*$$scope*/
        16)) {
          update_slot_base(
            control_slot,
            control_slot_template,
            ctx2,
            /*$$scope*/
            ctx2[4],
            !current ? get_all_dirty_from_scope(
              /*$$scope*/
              ctx2[4]
            ) : get_slot_changes(
              control_slot_template,
              /*$$scope*/
              ctx2[4],
              dirty,
              get_control_slot_changes
            ),
            get_control_slot_context
          );
        }
      }
      if (!current || dirty & /*isHeading*/
      4) {
        toggle_class(
          div4,
          "setting-item-heading",
          /*isHeading*/
          ctx2[2]
        );
      }
      if (!current || dirty & /*type*/
      8) {
        toggle_class(
          div4,
          "mod-dropdown",
          /*type*/
          ctx2[3] === "dropdown"
        );
      }
    },
    i(local) {
      if (current) return;
      transition_in(control_slot, local);
      current = true;
    },
    o(local) {
      transition_out(control_slot, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div4);
      }
      if (if_block) if_block.d();
      if (control_slot) control_slot.d(detaching);
    }
  };
}
function instance4($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  let { name } = $$props;
  let { description } = $$props;
  let { isHeading = false } = $$props;
  let { type = void 0 } = $$props;
  $$self.$$set = ($$props2) => {
    if ("name" in $$props2) $$invalidate(0, name = $$props2.name);
    if ("description" in $$props2) $$invalidate(1, description = $$props2.description);
    if ("isHeading" in $$props2) $$invalidate(2, isHeading = $$props2.isHeading);
    if ("type" in $$props2) $$invalidate(3, type = $$props2.type);
    if ("$$scope" in $$props2) $$invalidate(4, $$scope = $$props2.$$scope);
  };
  return [name, description, isHeading, type, $$scope, slots];
}
var SettingItem = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance4, create_fragment4, safe_not_equal, {
      name: 0,
      description: 1,
      isHeading: 2,
      type: 3
    });
  }
};
var SettingItem_default = SettingItem;

// src/settings/ui/core/Toggle.svelte
function create_fragment5(ctx) {
  let div;
  let mounted;
  let dispose;
  return {
    c() {
      div = element("div");
      attr(div, "class", "checkbox-container");
      toggle_class(
        div,
        "is-enabled",
        /*isEnabled*/
        ctx[0]
      );
    },
    m(target, anchor) {
      insert(target, div, anchor);
      if (!mounted) {
        dispose = listen(
          div,
          "click",
          /*click_handler*/
          ctx[2]
        );
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & /*isEnabled*/
      1) {
        toggle_class(
          div,
          "is-enabled",
          /*isEnabled*/
          ctx2[0]
        );
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(div);
      }
      mounted = false;
      dispose();
    }
  };
}
function instance5($$self, $$props, $$invalidate) {
  let { isEnabled } = $$props;
  let { onChange } = $$props;
  const click_handler = () => onChange(!isEnabled);
  $$self.$$set = ($$props2) => {
    if ("isEnabled" in $$props2) $$invalidate(0, isEnabled = $$props2.isEnabled);
    if ("onChange" in $$props2) $$invalidate(1, onChange = $$props2.onChange);
  };
  return [isEnabled, onChange, click_handler];
}
var Toggle = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance5, create_fragment5, safe_not_equal, { isEnabled: 0, onChange: 1 });
  }
};
var Toggle_default = Toggle;

// node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
var min = Math.min;
var max = Math.max;
var round = Math.round;
var floor = Math.floor;
var createCoords = (v) => ({
  x: v,
  y: v
});
var oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
var oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl = ["right", "left"];
  const tb = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list = list.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  const {
    x,
    y,
    width,
    height
  } = rect;
  return {
    width,
    height,
    top: y,
    left: x,
    right: x + width,
    bottom: y + height,
    x,
    y
  };
}

// node_modules/@floating-ui/core/dist/floating-ui.core.mjs
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options, state);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element2 = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element2))) != null ? _await$platform$isEle : true) ? element2 : element2.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    x,
    y,
    width: rects.floating.width,
    height: rects.floating.height
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements,
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    const {
      x,
      y,
      placement,
      rects,
      platform: platform2,
      elements,
      middlewareData
    } = state;
    const {
      element: element2,
      padding = 0
    } = evaluate(options, state) || {};
    if (element2 == null) {
      return {};
    }
    const paddingObject = getPaddingObject(padding);
    const coords = {
      x,
      y
    };
    const axis = getAlignmentAxis(placement);
    const length = getAxisLength(axis);
    const arrowDimensions = await platform2.getDimensions(element2);
    const isYAxis = axis === "y";
    const minProp = isYAxis ? "top" : "left";
    const maxProp = isYAxis ? "bottom" : "right";
    const clientProp = isYAxis ? "clientHeight" : "clientWidth";
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element2));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
      clientSize = elements.floating[clientProp] || rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
    const minPadding = min(paddingObject[minProp], largestPossiblePadding);
    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);
    const min$1 = minPadding;
    const max2 = clientSize - arrowDimensions[length] - maxPadding;
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset2 = clamp(min$1, center, max2);
    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset2 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;
    return {
      [axis]: coords[axis] + alignmentOffset,
      data: {
        [axis]: offset2,
        centerOffset: center - offset2 - alignmentOffset,
        ...shouldAddOffset && {
          alignmentOffset
        }
      },
      reset: shouldAddOffset
    };
  }
});
var flip = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options, state);
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      const side = getSide(placement);
      const initialSideAxis = getSideAxis(initialPlacement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== "none";
      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements2 = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides2 = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements2[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$filter2;
              const placement2 = (_overflowsData$filter2 = overflowsData.filter((d) => {
                if (hasFallbackAxisSideDirection) {
                  const currentSideAxis = getSideAxis(d.placement);
                  return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  currentSideAxis === "y";
                }
                return true;
              }).map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};

// node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element2) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle2(element2);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element2) {
  return ["table", "td", "th"].includes(getNodeName(element2));
}
function isTopLayer(element2) {
  return [":popover-open", ":modal"].some((selector) => {
    try {
      return element2.matches(selector);
    } catch (e) {
      return false;
    }
  });
}
function isContainingBlock(elementOrCss) {
  const webkit = isWebKit();
  const css = isElement(elementOrCss) ? getComputedStyle2(elementOrCss) : elementOrCss;
  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element2) {
  let currentNode = getParentNode(element2);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else if (isTopLayer(currentNode)) {
      return null;
    }
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports) return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle2(element2) {
  return getWindow(element2).getComputedStyle(element2);
}
function getNodeScroll(element2) {
  if (isElement(element2)) {
    return {
      scrollLeft: element2.scrollLeft,
      scrollTop: element2.scrollTop
    };
  }
  return {
    scrollLeft: element2.scrollX,
    scrollTop: element2.scrollY
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result2 = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result2) ? result2.host : result2;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    const frameElement = getFrameElement(win);
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}

// node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
function getCssDimensions(element2) {
  const css = getComputedStyle2(element2);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement(element2);
  const offsetWidth = hasOffset ? element2.offsetWidth : width;
  const offsetHeight = hasOffset ? element2.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element2) {
  return !isElement(element2) ? element2.contextElement : element2;
}
function getScale(element2) {
  const domElement = unwrapElement(element2);
  if (!isHTMLElement(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x = ($ ? round(rect.width) : rect.width) / width;
  let y = ($ ? round(rect.height) : rect.height) / height;
  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}
var noOffsets = /* @__PURE__ */ createCoords(0);
function getVisualOffsets(element2) {
  const win = getWindow(element2);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element2, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element2)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element2, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element2.getBoundingClientRect();
  const domElement = unwrapElement(element2);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element2);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow(domElement);
    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentWin = win;
    let currentIFrame = getFrameElement(currentWin);
    while (currentIFrame && offsetParent && offsetWin !== currentWin) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle2(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += left;
      y += top;
      currentWin = getWindow(currentIFrame);
      currentIFrame = getFrameElement(currentWin);
    }
  }
  return rectToClientRect({
    width,
    height,
    x,
    y
  });
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    elements,
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isFixed = strategy === "fixed";
  const documentElement = getDocumentElement(offsetParent);
  const topLayer = elements ? isTopLayer(elements.floating) : false;
  if (offsetParent === documentElement || topLayer && isFixed) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}
function getClientRects(element2) {
  return Array.from(element2.getClientRects());
}
function getWindowScrollBarX(element2) {
  return getBoundingClientRect(getDocumentElement(element2)).left + getNodeScroll(element2).scrollLeft;
}
function getDocumentRect(element2) {
  const html = getDocumentElement(element2);
  const scroll = getNodeScroll(element2);
  const body = element2.ownerDocument.body;
  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element2);
  const y = -scroll.scrollTop;
  if (getComputedStyle2(body).direction === "rtl") {
    x += max(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getViewportRect(element2, strategy) {
  const win = getWindow(element2);
  const html = getDocumentElement(element2);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getInnerBoundingClientRect(element2, strategy) {
  const clientRect = getBoundingClientRect(element2, true, strategy === "fixed");
  const top = clientRect.top + element2.clientTop;
  const left = clientRect.left + element2.clientLeft;
  const scale = isHTMLElement(element2) ? getScale(element2) : createCoords(1);
  const width = element2.clientWidth * scale.x;
  const height = element2.clientHeight * scale.y;
  const x = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element2, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element2, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element2));
  } else if (isElement(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element2);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element2, stopNode) {
  const parentNode = getParentNode(element2);
  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element2, cache) {
  const cachedResult = cache.get(element2);
  if (cachedResult) {
    return cachedResult;
  }
  let result2 = getOverflowAncestors(element2, [], false).filter((el) => isElement(el) && getNodeName(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle2(element2).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element2) : element2;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle2(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element2, currentNode);
    if (shouldDropCurrentNode) {
      result2 = result2.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element2, result2);
  return result2;
}
function getClippingRect(_ref) {
  let {
    element: element2,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? isTopLayer(element2) ? [] : getClippingElementAncestors(element2, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element2, clippingAncestor, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element2, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element2) {
  const {
    width,
    height
  } = getCssDimensions(element2);
  return {
    width,
    height
  };
}
function getRectRelativeToOffsetParent(element2, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element2, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  const x = rect.left + scroll.scrollLeft - offsets.x;
  const y = rect.top + scroll.scrollTop - offsets.y;
  return {
    x,
    y,
    width: rect.width,
    height: rect.height
  };
}
function isStaticPositioned(element2) {
  return getComputedStyle2(element2).position === "static";
}
function getTrueOffsetParent(element2, polyfill) {
  if (!isHTMLElement(element2) || getComputedStyle2(element2).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element2);
  }
  return element2.offsetParent;
}
function getOffsetParent(element2, polyfill) {
  const win = getWindow(element2);
  if (isTopLayer(element2)) {
    return win;
  }
  if (!isHTMLElement(element2)) {
    let svgOffsetParent = getParentNode(element2);
    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {
      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {
        return svgOffsetParent;
      }
      svgOffsetParent = getParentNode(svgOffsetParent);
    }
    return win;
  }
  let offsetParent = getTrueOffsetParent(element2, polyfill);
  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
    return win;
  }
  return offsetParent || getContainingBlock(element2) || win;
}
var getElementRects = async function(data) {
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  const floatingDimensions = await getDimensionsFn(data.floating);
  return {
    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
    floating: {
      x: 0,
      y: 0,
      width: floatingDimensions.width,
      height: floatingDimensions.height
    }
  };
};
function isRTL(element2) {
  return getComputedStyle2(element2).direction === "rtl";
}
var platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement,
  isRTL
};
function observeMove(element2, onMove) {
  let io = null;
  let timeoutId;
  const root = getDocumentElement(element2);
  function cleanup() {
    var _io;
    clearTimeout(timeoutId);
    (_io = io) == null || _io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const {
      left,
      top,
      width,
      height
    } = element2.getBoundingClientRect();
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor(top);
    const insetRight = floor(root.clientWidth - (left + width));
    const insetBottom = floor(root.clientHeight - (top + height));
    const insetLeft = floor(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: max(0, min(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 1e3);
        } else {
          refresh(false, ratio);
        }
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (e) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element2);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference, floating, update2, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update2, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update2);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update2) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref) => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          var _resizeObserver;
          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
        });
      }
      update2();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update2();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update2();
  return () => {
    var _resizeObserver2;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update2);
      ancestorResize && ancestor.removeEventListener("resize", update2);
    });
    cleanupIo == null || cleanupIo();
    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var flip2 = flip;
var arrow2 = arrow;
var computePosition2 = (reference, floating, options) => {
  const cache = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// src/settings/ui/suggest.ts
var import_obsidian3 = require("obsidian");
var BaseSuggest = class extends import_obsidian3.PopoverSuggest {
  suggestionContainerEl;
  suggestionItemsContainerEl;
  suggestionsContainerCreated;
  inputEl;
  suggestions = [];
  selectedSuggestionIdx;
  suggestionSelected = false;
  inputEvHandlers = null;
  autoUpdateCleanup = null;
  constructor(inputEl) {
    super(window.app);
    this.inputEl = inputEl;
    this.selectedSuggestionIdx = 0;
    this.scope = new import_obsidian3.Scope();
    this.suggestionContainerEl = createDiv({
      cls: "suggestion-container"
    });
    this.suggestionItemsContainerEl = this.suggestionContainerEl.createDiv({
      cls: "suggestion"
    });
    this.suggestionsContainerCreated = true;
    this.setupEventListeners();
  }
  open() {
    const suggestionValues = this.getSuggestions(this.inputEl.value);
    if (suggestionValues.length > 0) {
      this.clear();
      window.app.keymap.pushScope(this.scope);
      window.app.workspace.containerEl.appendChild(this.suggestionContainerEl);
      const position = () => computePosition2(this.inputEl, this.suggestionContainerEl, {
        placement: "bottom-start",
        middleware: [flip2()]
      }).then(({ x, y }) => {
        Object.assign(this.suggestionContainerEl.style, {
          left: `${x}px`,
          top: `${y + 5}px`
        });
      });
      this.autoUpdateCleanup = autoUpdate(this.inputEl, this.suggestionContainerEl, () => {
        position();
      });
      this.renderSuggestions(suggestionValues);
    }
  }
  close() {
    window.app.keymap.popScope(this.scope);
    this.clear();
    this.suggestionContainerEl.detach();
    this.autoUpdateCleanup?.();
    this.autoUpdateCleanup = null;
  }
  destroy() {
    console.log("\u{1F389} destroy");
    this.suggestionContainerEl.remove();
    this.inputEvHandlers && Object.entries(this.inputEvHandlers).forEach(
      ([event, handler]) => this.inputEl.removeEventListener(event, handler)
    );
    this.inputEvHandlers = null;
  }
  clear() {
    this.suggestionItemsContainerEl.empty();
    this.suggestions = [];
  }
  setupEventListeners() {
    this.inputEvHandlers = {
      click: () => this.open(),
      input: (0, import_obsidian3.debounce)(() => {
        if (!this.suggestionSelected) {
          this.open();
        } else {
          this.suggestionSelected = false;
        }
      }, 200, true),
      focus: () => this.open(),
      blur: () => this.close()
    };
    Object.entries(this.inputEvHandlers).forEach(
      ([event, handler]) => this.inputEl.addEventListener(event, handler)
    );
    this.scope.register([], "ArrowUp", (ev) => {
      ev.preventDefault();
      this.highlightSuggestion(this.selectedSuggestionIdx - 1, true);
    });
    this.scope.register([], "ArrowDown", (ev) => {
      ev.preventDefault();
      this.highlightSuggestion(this.selectedSuggestionIdx + 1, true);
    });
    this.scope.register([], "Enter", (ev) => {
      ev.preventDefault();
      const suggestion = this.suggestions[this.selectedSuggestionIdx];
      this.selectSuggestion(suggestion.value, ev);
    });
    this.scope.register([], "Escape", () => this.close());
    this.suggestionItemsContainerEl.on("click", ".suggestion-item", (ev) => {
      ev.preventDefault();
      const suggestion = this.suggestions[this.selectedSuggestionIdx];
      if (this.selectedSuggestionIdx !== -1 && suggestion) {
        this.highlightSuggestion(this.selectedSuggestionIdx, false);
        this.selectSuggestion(suggestion.value, ev);
      }
    });
    this.suggestionItemsContainerEl.on("mousemove", ".suggestion-item", (ev, target) => {
      ev.preventDefault();
      const suggestionIdx = this.suggestions.findIndex((s) => s.el === target);
      if (suggestionIdx !== -1) {
        this.highlightSuggestion(suggestionIdx, false);
      }
    });
    this.suggestionItemsContainerEl.on("mousedown", ".suggestion-item", (ev) => ev.preventDefault());
  }
  /**
      * Get suggestions based on input string and add them inside suggestionContainerEl,
      * they will only be visible to the user after opening the popover on this.open()
      */
  renderSuggestions(values) {
    values.forEach((value) => {
      const el = this.suggestionItemsContainerEl.createDiv({ cls: "suggestion-item" });
      el.style.cursor = "pointer";
      if (el) {
        this.renderSuggestion(value, el);
        this.suggestions.push({ value, el });
      }
    });
    this.selectedSuggestionIdx = 0;
    this.highlightSuggestion(0, false);
  }
  /**
      * update a suggestion element's classes to make it look selected
  */
  highlightSuggestion(selectedIndex, scrollIntoView) {
    const normalizedIndex = wrapAround(selectedIndex, this.suggestions.length);
    const oldSelectedSuggestion = this.suggestions[this.selectedSuggestionIdx];
    const newSelectedSuggestion = this.suggestions[normalizedIndex];
    oldSelectedSuggestion.el.removeClass("is-selected");
    newSelectedSuggestion.el.addClass("is-selected");
    this.selectedSuggestionIdx = normalizedIndex;
    if (scrollIntoView) {
      newSelectedSuggestion.el.scrollIntoView(false);
    }
  }
};
var FolderSuggest = class extends BaseSuggest {
  getSuggestions(inputVal) {
    const allVaultFiles = window.app.vault.getAllLoadedFiles();
    const folders = [];
    allVaultFiles.forEach((file) => {
      if (file instanceof import_obsidian3.TFolder && file.path.toLowerCase().contains(inputVal.toLowerCase())) {
        folders.push(file);
      }
    });
    return folders;
  }
  /**
      * Set content of each individual suggestion div element
      *
      * called for each suggestion item from getSuggestions() in renderSuggestions()
  */
  renderSuggestion(file, el) {
    el.setText(file.path);
  }
  selectSuggestion(value, _) {
    this.inputEl.value = value.path;
    this.inputEl.trigger("input");
    this.suggestionSelected = true;
    this.close();
  }
};
var FileSuggest = class extends BaseSuggest {
  getSuggestions(inputVal) {
    const allVaultFiles = window.app.vault.getAllLoadedFiles();
    const files = [];
    allVaultFiles.forEach((file) => {
      if (file instanceof import_obsidian3.TFile && file.extension === "md" && file.path.toLowerCase().contains(inputVal.toLowerCase())) {
        files.push(file);
      }
    });
    return files;
  }
  /**
      * Set content of each individual suggestion div element
      *
      * called for each suggestion item from getSuggestions() in renderSuggestions()
  */
  renderSuggestion(file, el) {
    el.setText(file.path);
  }
  selectSuggestion(value, _) {
    this.inputEl.value = value.path;
    this.inputEl.trigger("input");
    this.suggestionSelected = true;
    this.close();
  }
};
function wrapAround(value, size2) {
  if (value < 0) {
    return size2 - 1;
  }
  if (value >= size2) {
    return 0;
  }
  return value;
}

// node_modules/svelte/src/runtime/store/index.js
var subscriber_queue = [];
function readable(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
function writable(value, start = noop) {
  let stop;
  const subscribers = /* @__PURE__ */ new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update2(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set, update2) || noop;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0 && stop) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update: update2, subscribe: subscribe2 };
}
function derived(stores, fn, initial_value) {
  const single = !Array.isArray(stores);
  const stores_array = single ? [stores] : stores;
  if (!stores_array.every(Boolean)) {
    throw new Error("derived() expects stores as input, got a falsy value");
  }
  const auto = fn.length < 2;
  return readable(initial_value, (set, update2) => {
    let started = false;
    const values = [];
    let pending = 0;
    let cleanup = noop;
    const sync = () => {
      if (pending) {
        return;
      }
      cleanup();
      const result2 = fn(single ? values[0] : values, set, update2);
      if (auto) {
        set(result2);
      } else {
        cleanup = is_function(result2) ? result2 : noop;
      }
    };
    const unsubscribers = stores_array.map(
      (store, i) => subscribe(
        store,
        (value) => {
          values[i] = value;
          pending &= ~(1 << i);
          if (started) {
            sync();
          }
        },
        () => {
          pending |= 1 << i;
        }
      )
    );
    started = true;
    sync();
    return function stop() {
      run_all(unsubscribers);
      cleanup();
      started = false;
    };
  });
}

// src/stores/dates.ts
function createYearsRangesStore() {
  const defaultRange = `${DEFAULT_SETTINGS.yearsRangesStart}-${DEFAULT_SETTINGS.yearsRangesStart + YEARS_RANGE_SIZE - 1}`;
  const store = writable({
    ranges: [defaultRange],
    todayRange: defaultRange,
    crrRangeIndex: 0
  });
  const addNewRange = ({
    startYear,
    action
  }) => {
    store.update((values) => {
      const newRanges = values.ranges;
      newRanges[action === "increment" ? "push" : "unshift"](
        `${startYear}-${startYear + YEARS_RANGE_SIZE - 1}`
      );
      return {
        ...values,
        ranges: newRanges
      };
    });
  };
  const updateRanges = ({
    action,
    displayedDateModifier
  }) => {
    const { ranges, crrRangeIndex } = get_store_value(store);
    const crrRange = ranges[crrRangeIndex];
    const [crrRangeStartYear, crrRangeEndYear] = crrRange.split("-");
    const todayMoment = window.moment().clone();
    if (action === "decrement") {
      const prevRange = ranges[crrRangeIndex - 1];
      displayedDateStore.set(
        todayMoment.year(+crrRangeStartYear + (displayedDateModifier || -1)).startOf("year")
      );
      !prevRange && addNewRange({
        startYear: +crrRangeStartYear - YEARS_RANGE_SIZE,
        action: "decrement"
      });
      if (crrRangeIndex > 0) {
        updateCrrRangeIndex({ modifier: -1 });
      }
    }
    if (action === "increment") {
      const nextRange = ranges[crrRangeIndex + 1];
      displayedDateStore.set(todayMoment.year(+crrRangeEndYear + 1).startOf("year"));
      !nextRange && addNewRange({ startYear: +crrRangeEndYear + 1, action: "increment" });
      updateCrrRangeIndex({ modifier: 1 });
    }
  };
  const updateCrrRangeIndex = ({ modifier }) => {
    store.update((values) => ({
      ...values,
      crrRangeIndex: values.crrRangeIndex + modifier
    }));
  };
  const selectOrCreateRanges = () => {
    const { ranges, crrRangeIndex, todayRange } = get_store_value(store);
    const crrDisplayedYear = get_store_value(displayedDateStore).year();
    const todayYear = window.moment().clone().year();
    console.log("selectOrCreateRnages(), todayRange: ", todayRange);
    const firstRange = ranges[0];
    const lastRange = ranges[ranges.length - 1];
    const firstRangeStartYear = firstRange.split("-")[0];
    const lastRangeEndYear = lastRange.split("-")[1];
    const newRanges = [...ranges];
    let newCrrRangeIndex = crrRangeIndex;
    let newTodayRange = todayRange;
    if (+firstRangeStartYear > crrDisplayedYear) {
      let newFirstRangeStartYear = +firstRangeStartYear;
      while (+newFirstRangeStartYear > crrDisplayedYear) {
        newRanges.unshift(
          `${newFirstRangeStartYear - YEARS_RANGE_SIZE}-${newFirstRangeStartYear - 1}`
        );
        newFirstRangeStartYear -= YEARS_RANGE_SIZE;
      }
      newCrrRangeIndex = 0;
    }
    if (+lastRangeEndYear < crrDisplayedYear) {
      let newLastRangeEndYear = +lastRangeEndYear;
      while (+newLastRangeEndYear < crrDisplayedYear) {
        newRanges.push(`${+newLastRangeEndYear + 1}-${newLastRangeEndYear + YEARS_RANGE_SIZE}`);
        newLastRangeEndYear += YEARS_RANGE_SIZE;
      }
      newCrrRangeIndex = newRanges.length - 1;
    }
    if (crrDisplayedYear >= +firstRangeStartYear && crrDisplayedYear <= +lastRangeEndYear) {
      for (const [i, range] of newRanges.entries()) {
        const [start, end] = range.split("-");
        if (crrDisplayedYear >= +start && crrDisplayedYear <= +end) {
          newCrrRangeIndex = i;
          break;
        }
      }
    }
    const [todayRangeStartYear, todayRangeEndYear] = todayRange.split("-");
    if (!(todayYear >= +todayRangeStartYear && todayYear <= +todayRangeEndYear)) {
      for (const [_, range] of newRanges.entries()) {
        const [start, end] = range.split("-");
        if (todayYear >= +start && todayYear <= +end) {
          newTodayRange = range;
          break;
        }
      }
    }
    store.update((values) => ({
      ...values,
      ranges: newRanges,
      crrRangeIndex: newCrrRangeIndex,
      todayRange: newTodayRange
    }));
  };
  return {
    addNewRange,
    updateRanges,
    updateCrrRangeIndex,
    selectOrCreateRanges,
    ...store
  };
}
var displayedDateStore = writable(window.moment());
var yearsRanges = createYearsRangesStore();

// src/stores/locale.ts
var localeDataStore = writable({
  weekdays: defaultWeekdays,
  weekdaysShort: defaultWeekdaysShort
});
function updateLocale(localeKey) {
  window.moment.locale(localeKey);
  settingsStore.update((settings) => ({
    ...settings,
    localeSettings: {
      ...settings.localeSettings,
      localeOverride: localeKey
    }
  }));
  displayedDateStore.set(window.moment());
}
function updateWeekStart(weekStartId = window.moment.localeData().firstDayOfWeek()) {
  settingsStore.update((settings) => ({
    ...settings,
    localeSettings: {
      ...settings.localeSettings,
      weekStartId
    }
  }));
  displayedDateStore.set(window.moment());
}
function updateWeekdays() {
  const weekStartId = get_store_value(settingsStore).localeSettings.weekStartId;
  const localizedWeekdays = window.moment.localeData().weekdays();
  const localizedWeekdaysShort = window.moment.localeData().weekdaysMin();
  const weekdays = [
    ...localizedWeekdays.slice(weekStartId),
    ...localizedWeekdays.slice(0, weekStartId)
  ];
  const weekdaysShort = [
    ...localizedWeekdaysShort.slice(weekStartId),
    ...localizedWeekdaysShort.slice(0, weekStartId)
  ];
  localeDataStore.update((data) => ({
    ...data,
    weekdays,
    weekdaysShort
  }));
  displayedDateStore.set(window.moment());
}
function setupLocale() {
  window.moment.locale(get_store_value(settingsStore).localeSettings.localeOverride);
  updateWeekdays();
}

// src/stores/notes.ts
var notesStores = {
  day: writable({}),
  week: writable({}),
  month: writable({}),
  quarter: writable({}),
  year: writable({})
};
var activeFileIdStore = writable(null);

// src/stores/popovers.ts
var stickerComponentPropsStore = writable({
  note: null,
  date: null,
  granularity: null
});

// src/stores/index.ts
var pluginClassStore2 = writable();
var crrFileMenu = writable(null);
var rerenderStore = writable({ rerender: false });
var themeStore = writable(null);

// src/ui/modals/confirmation.ts
var import_obsidian4 = require("obsidian");

// src/ui/components/ConfirmationModal.svelte
function add_css3(target) {
  append_styles(target, "svelte-v1ofz9", "@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.m-0.svelte-v1ofz9{margin:0px\n}.mt-2.svelte-v1ofz9{margin-top:0.5rem\n}.mt-3.svelte-v1ofz9{margin-top:0.75rem\n}.mt-7.svelte-v1ofz9{margin-top:1.75rem\n}.flex.svelte-v1ofz9{display:flex\n}.items-center.svelte-v1ofz9{align-items:center\n}.text-sm.svelte-v1ofz9{font-size:0.875rem;line-height:1.25rem\n}.text-xs.svelte-v1ofz9{font-size:0.75rem;line-height:1rem\n}.text-\\[--text-muted\\].svelte-v1ofz9{color:var(--text-muted)\n}.hover\\:cursor-pointer.svelte-v1ofz9:hover{cursor:pointer\n}");
}
function create_if_block2(ctx) {
  let p;
  return {
    c() {
      p = element("p");
      p.textContent = `${/*note*/
      ctx[3]}`;
      attr(p, "class", "m-0 mt-2 text-xs text-[--text-muted] svelte-v1ofz9");
    },
    m(target, anchor) {
      insert(target, p, anchor);
    },
    p: noop,
    d(detaching) {
      if (detaching) {
        detach(p);
      }
    }
  };
}
function create_fragment6(ctx) {
  let div1;
  let h2;
  let t1;
  let p;
  let t3;
  let label;
  let input;
  let t4;
  let t5;
  let t6;
  let div0;
  let button0;
  let t8;
  let button1;
  let mounted;
  let dispose;
  let if_block = (
    /*note*/
    ctx[3] && create_if_block2(ctx)
  );
  return {
    c() {
      div1 = element("div");
      h2 = element("h2");
      h2.textContent = `${/*title*/
      ctx[1]}`;
      t1 = space();
      p = element("p");
      p.textContent = `${/*text*/
      ctx[2]}`;
      t3 = space();
      label = element("label");
      input = element("input");
      t4 = text(" Don't show\n		again");
      t5 = space();
      if (if_block) if_block.c();
      t6 = space();
      div0 = element("div");
      button0 = element("button");
      button0.textContent = "Never mind";
      t8 = space();
      button1 = element("button");
      button1.textContent = `${/*cta*/
      ctx[4]}`;
      attr(input, "type", "checkbox");
      attr(input, "class", "hover:cursor-pointer svelte-v1ofz9");
      attr(label, "class", "flex items-center hover:cursor-pointer text-sm mt-7 svelte-v1ofz9");
      attr(button1, "class", "mod-cta");
      attr(div0, "class", "modal-button-container mt-3 svelte-v1ofz9");
    },
    m(target, anchor) {
      insert(target, div1, anchor);
      append(div1, h2);
      append(div1, t1);
      append(div1, p);
      append(div1, t3);
      append(div1, label);
      append(label, input);
      input.checked = /*dontConfirmAgain*/
      ctx[0];
      append(label, t4);
      append(div1, t5);
      if (if_block) if_block.m(div1, null);
      append(div1, t6);
      append(div1, div0);
      append(div0, button0);
      append(div0, t8);
      append(div0, button1);
      if (!mounted) {
        dispose = [
          listen(
            input,
            "change",
            /*input_change_handler*/
            ctx[9]
          ),
          listen(
            button0,
            "click",
            /*handleCancel*/
            ctx[5]
          ),
          listen(
            button1,
            "click",
            /*handleAccept*/
            ctx[6]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & /*dontConfirmAgain*/
      1) {
        input.checked = /*dontConfirmAgain*/
        ctx2[0];
      }
      if (
        /*note*/
        ctx2[3]
      ) if_block.p(ctx2, dirty);
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(div1);
      }
      if (if_block) if_block.d();
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance6($$self, $$props, $$invalidate) {
  let $pluginClassStore;
  component_subscribe($$self, pluginClassStore2, ($$value) => $$invalidate(10, $pluginClassStore = $$value));
  let { config } = $$props;
  let { modalClass } = $$props;
  const { title, text: text2, note, cta, onAccept } = config;
  let dontConfirmAgain = false;
  const shouldConfirmBeforeCreate = () => {
    if (dontConfirmAgain && $pluginClassStore) {
      settingsStore.update((oldSettings) => {
        const newSettings = {
          ...oldSettings,
          shouldConfirmBeforeCreate: false
        };
        return newSettings;
      });
    }
  };
  const handleCancel = async () => {
    modalClass.close();
  };
  const handleAccept = async () => {
    modalClass.close();
    await onAccept();
    await shouldConfirmBeforeCreate();
  };
  function input_change_handler() {
    dontConfirmAgain = this.checked;
    $$invalidate(0, dontConfirmAgain);
  }
  $$self.$$set = ($$props2) => {
    if ("config" in $$props2) $$invalidate(7, config = $$props2.config);
    if ("modalClass" in $$props2) $$invalidate(8, modalClass = $$props2.modalClass);
  };
  return [
    dontConfirmAgain,
    title,
    text2,
    note,
    cta,
    handleCancel,
    handleAccept,
    config,
    modalClass,
    input_change_handler
  ];
}
var ConfirmationModal = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance6, create_fragment6, safe_not_equal, { config: 7, modalClass: 8 }, add_css3);
  }
};
var ConfirmationModal_default = ConfirmationModal;

// src/ui/modals/confirmation.ts
var ConfirmationModal2 = class extends import_obsidian4.Modal {
  constructor(config) {
    super(window.app);
    const { contentEl } = this;
    const svelteContainer = contentEl.createDiv();
    new ConfirmationModal_default({
      target: svelteContainer,
      props: {
        config,
        modalClass: this
      }
    });
  }
};
function createConfirmationDialog(params) {
  new ConfirmationModal2(params).open();
}

// src/io/create-or-open-note.ts
var import_moment = __toESM(require_moment(), 1);
var import_obsidian6 = require("obsidian");

// src/io/settings.ts
function getNoteSettings() {
  const internalPlugins = window.app.internalPlugins;
  const pnSettings = get_store_value(settingsStore).notes;
  const dnSettings = internalPlugins?.getPluginById(DAILY_NOTES_PLUGIN_ID)?.instance?.options;
  return Object.fromEntries(granularities.map((granularity) => {
    const granularitySettings = pnSettings[granularity].enabled ? pnSettings[granularity] : granularity === "day" ? dnSettings : {};
    const validGranularitySettings = {
      format: granularitySettings.format?.trim() || DEFAULT_FORMATS_PER_GRANULARITY[granularity],
      folder: granularitySettings.folder?.trim() || "/",
      template: granularitySettings.template?.trim() || ""
    };
    return [granularity, validGranularitySettings];
  }));
}

// src/io/vault.ts
var import_obsidian5 = require("obsidian");
function join(...partSegments) {
  let parts = [];
  for (let i = 0, l = partSegments.length; i < l; i++) {
    parts = parts.concat(partSegments[i].split("/"));
  }
  const newParts = [];
  for (let i = 0, l = parts.length; i < l; i++) {
    const part = parts[i];
    if (!part || part === ".") continue;
    else newParts.push(part);
  }
  if (parts[0] === "") newParts.unshift("");
  return newParts.join("/");
}
function basename(fullPath) {
  let base = fullPath.substring(fullPath.lastIndexOf("/") + 1);
  if (base.lastIndexOf(".") != -1)
    base = base.substring(0, base.lastIndexOf("."));
  return base;
}
async function ensureFolderExists(path) {
  const dirs = path.replace(/\\/g, "/").split("/");
  dirs.pop();
  if (dirs.length) {
    const dir = join(...dirs);
    if (!window.app.vault.getAbstractFileByPath(dir)) {
      await window.app.vault.createFolder(dir);
    }
  }
}
async function ensureTemplateExists(path) {
  await ensureFolderExists(path);
  if (!window.app.vault.getAbstractFileByPath(path)) {
    await window.app.vault.create(path, "");
  }
}
async function getNotePath(directory, filename) {
  if (!filename.endsWith(".md")) {
    filename += ".md";
  }
  const path = (0, import_obsidian5.normalizePath)(join(directory, filename));
  await ensureFolderExists(path);
  return path;
}
async function getTemplateInfo(template2) {
  const { metadataCache, vault } = window.app;
  if (!template2.endsWith(".md")) {
    template2 += ".md";
  }
  const normalizedPath = (0, import_obsidian5.normalizePath)(template2);
  if (normalizedPath === "/") {
    return Promise.resolve(["", null]);
  }
  await ensureTemplateExists(normalizedPath);
  try {
    const templateFile = metadataCache.getFirstLinkpathDest(normalizedPath, "");
    const contents = await vault.cachedRead(templateFile);
    const IFoldInfo = window.app.foldManager.load(templateFile);
    return [contents, IFoldInfo];
  } catch (err) {
    console.error(
      `Failed to read the daily note template '${normalizedPath}'`,
      err
    );
    new import_obsidian5.Notice("Failed to read the daily note template");
    return ["", null];
  }
}

// src/io/create-or-open-note.ts
var REGEX = function generateRegex() {
  const staticParts = ["title", "date", "time", "currentdate", "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"];
  const dynamicParts = granularities.flatMap((granularity) => {
    if (granularity === "day") {
      return ["yesterday", "tomorrow"];
    } else {
      return [`prev-${granularity}`, `next-${granularity}`];
    }
  });
  const allParts = [...staticParts, ...dynamicParts].join("|");
  const pattern = `{{\\s*(${allParts})(([+-]\\d+)([yQMwWdhms]))?:?(.*?)?\\s*}}`;
  return new RegExp(pattern, "gi");
}();
async function createOrOpenNote({
  leaf,
  date,
  granularity,
  confirmBeforeCreateOverride = get_store_value(settingsStore).shouldConfirmBeforeCreate
}) {
  const { format, folder } = getNoteSettings()[granularity];
  const filename = date.format(format);
  const normalizedPath = await getNotePath(folder, filename);
  console.log("[createOrOpenNote()] > normalizedPath: ", normalizedPath);
  let file = window.app.metadataCache.getFirstLinkpathDest(normalizedPath, "");
  console.log("[createOrOpenNote()] > file: ", file);
  async function openFile(file2) {
    if (file2) {
      file2 && await leaf.openFile(file2);
      activeFileIdStore.set(getNoteDateUID({ date, granularity }));
    }
  }
  if (file) {
    await openFile(file);
  } else {
    const periodicity = capitalize(getPeriodicityFromGranularity(granularity));
    console.log("[io-create-or-open-note]", granularity, format, date, filename);
    if (confirmBeforeCreateOverride) {
      createConfirmationDialog({
        title: `New ${periodicity} Note`,
        text: `File ${filename} does not exist. Would you like to create it?`,
        note: getOnCreateNoteDialogNoteFromGranularity(granularity),
        cta: "Create",
        onAccept: async () => {
          file = await createNote(granularity, date);
          console.log("createOrOpenNote() > onAccept() > file: ", file);
          await openFile(file);
          return file;
        }
      });
    } else {
      file = await createNote(granularity, date);
      console.log("\u{1F92F}\u{1F525}\u{1F92F} createOrOpenNote() > file: \u{1F92F}\u{1F525}\u{1F92F}", file);
      await openFile(file);
      console.log("createOrOpenNote() > notesStore: ", get_store_value(notesStores[granularity]));
    }
  }
}
async function createNote(granularity, date) {
  const { template: template2, format, folder } = getNoteSettings()[granularity];
  logger("[io-create--note]", granularity, format);
  const filename = date.format(format);
  const normalizedPath = await getNotePath(folder, filename);
  const [templateContents, IFoldInfo] = await getTemplateInfo(template2);
  try {
    const createdFile = await window.app.vault.create(
      normalizedPath,
      replaceTemplateContents(date, format, templateContents)
    );
    window.app.foldManager.save(createdFile, IFoldInfo);
    return createdFile;
  } catch (err) {
    console.error(`Failed to create file: '${normalizedPath}'`, err);
    new import_obsidian6.Notice(`Failed to create file: '${normalizedPath}'`);
    return null;
  }
}
function replaceTemplateContents(date, defaultFormat, template2) {
  const now2 = (0, import_moment.default)();
  const localeWeekdays = function getLocaleWeekdays() {
    const { moment: moment2 } = window;
    let weekStart = moment2.localeData()._week.dow;
    const weekdays = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"];
    while (weekStart) {
      weekdays.push(weekdays.shift());
      weekStart--;
    }
    return weekdays;
  }();
  return template2.replace(
    REGEX,
    (match, type, adjustment, delta, unit, format) => {
      let momentDate;
      let modifiedDefaultFormat = defaultFormat;
      switch (type.toLowerCase()) {
        case "title":
        case "date":
          momentDate = date.clone();
          break;
        case "time":
          momentDate = now2.clone();
          modifiedDefaultFormat = "HH:mm";
          break;
        case "currentdate":
          momentDate = now2.clone();
          break;
        case "yesterday":
          momentDate = date.clone().subtract(1, "day");
          break;
        case "tomorrow":
          momentDate = date.clone().add(1, "day");
          break;
        default:
          if (localeWeekdays.includes(type.toLowerCase())) {
            momentDate = date.clone().weekday(localeWeekdays.indexOf(type.toLowerCase()));
          } else if (type.includes("prev")) {
            const granularity = type.split("-")[1];
            momentDate = date.clone().subtract(1, granularity);
          } else if (type.includes("next")) {
            const granularity = type.split("-")[1];
            momentDate = date.clone().add(1, granularity);
          } else {
            return match;
          }
          break;
      }
      if (adjustment) {
        momentDate.add(parseInt(delta, 10), unit);
      }
      return momentDate.format(
        format || modifiedDefaultFormat
      );
    }
  );
}
var template = `
Title: {{title}}
Date: {{date}}
Current time: {{time}}
Current date: {{currentDAte:LLLL}}
Sunday: {{sunday}}
Tomorrow: {{tomorrow:dddd, MMMM Do YYYY}}
Crr Week: {{date:w}}
Next Week: {{next-week:[locale week]-w, [ISO Week]-W}}
Prev Monday: {{monday-1w:LLLL}}
Next Quarter: {{next-quarter:}}

Wrong: {{wrong:W}}
`;
var result = replaceTemplateContents((0, import_moment.default)(), "YYYY-MM-DD", template);
console.log(result);

// node_modules/@emoji-mart/data/sets/15/native.json
var native_default = { categories: [{ id: "people", emojis: ["grinning", "smiley", "smile", "grin", "laughing", "sweat_smile", "rolling_on_the_floor_laughing", "joy", "slightly_smiling_face", "upside_down_face", "melting_face", "wink", "blush", "innocent", "smiling_face_with_3_hearts", "heart_eyes", "star-struck", "kissing_heart", "kissing", "relaxed", "kissing_closed_eyes", "kissing_smiling_eyes", "smiling_face_with_tear", "yum", "stuck_out_tongue", "stuck_out_tongue_winking_eye", "zany_face", "stuck_out_tongue_closed_eyes", "money_mouth_face", "hugging_face", "face_with_hand_over_mouth", "face_with_open_eyes_and_hand_over_mouth", "face_with_peeking_eye", "shushing_face", "thinking_face", "saluting_face", "zipper_mouth_face", "face_with_raised_eyebrow", "neutral_face", "expressionless", "no_mouth", "dotted_line_face", "face_in_clouds", "smirk", "unamused", "face_with_rolling_eyes", "grimacing", "face_exhaling", "lying_face", "shaking_face", "relieved", "pensive", "sleepy", "drooling_face", "sleeping", "mask", "face_with_thermometer", "face_with_head_bandage", "nauseated_face", "face_vomiting", "sneezing_face", "hot_face", "cold_face", "woozy_face", "dizzy_face", "face_with_spiral_eyes", "exploding_head", "face_with_cowboy_hat", "partying_face", "disguised_face", "sunglasses", "nerd_face", "face_with_monocle", "confused", "face_with_diagonal_mouth", "worried", "slightly_frowning_face", "white_frowning_face", "open_mouth", "hushed", "astonished", "flushed", "pleading_face", "face_holding_back_tears", "frowning", "anguished", "fearful", "cold_sweat", "disappointed_relieved", "cry", "sob", "scream", "confounded", "persevere", "disappointed", "sweat", "weary", "tired_face", "yawning_face", "triumph", "rage", "angry", "face_with_symbols_on_mouth", "smiling_imp", "imp", "skull", "skull_and_crossbones", "hankey", "clown_face", "japanese_ogre", "japanese_goblin", "ghost", "alien", "space_invader", "wave", "raised_back_of_hand", "raised_hand_with_fingers_splayed", "hand", "spock-hand", "rightwards_hand", "leftwards_hand", "palm_down_hand", "palm_up_hand", "leftwards_pushing_hand", "rightwards_pushing_hand", "ok_hand", "pinched_fingers", "pinching_hand", "v", "crossed_fingers", "hand_with_index_finger_and_thumb_crossed", "i_love_you_hand_sign", "the_horns", "call_me_hand", "point_left", "point_right", "point_up_2", "middle_finger", "point_down", "point_up", "index_pointing_at_the_viewer", "+1", "-1", "fist", "facepunch", "left-facing_fist", "right-facing_fist", "clap", "raised_hands", "heart_hands", "open_hands", "palms_up_together", "handshake", "pray", "writing_hand", "nail_care", "selfie", "muscle", "mechanical_arm", "mechanical_leg", "leg", "foot", "ear", "ear_with_hearing_aid", "nose", "brain", "anatomical_heart", "lungs", "tooth", "bone", "eyes", "eye", "tongue", "lips", "biting_lip", "baby", "child", "boy", "girl", "adult", "person_with_blond_hair", "man", "bearded_person", "man_with_beard", "woman_with_beard", "red_haired_man", "curly_haired_man", "white_haired_man", "bald_man", "woman", "red_haired_woman", "red_haired_person", "curly_haired_woman", "curly_haired_person", "white_haired_woman", "white_haired_person", "bald_woman", "bald_person", "blond-haired-woman", "blond-haired-man", "older_adult", "older_man", "older_woman", "person_frowning", "man-frowning", "woman-frowning", "person_with_pouting_face", "man-pouting", "woman-pouting", "no_good", "man-gesturing-no", "woman-gesturing-no", "ok_woman", "man-gesturing-ok", "woman-gesturing-ok", "information_desk_person", "man-tipping-hand", "woman-tipping-hand", "raising_hand", "man-raising-hand", "woman-raising-hand", "deaf_person", "deaf_man", "deaf_woman", "bow", "man-bowing", "woman-bowing", "face_palm", "man-facepalming", "woman-facepalming", "shrug", "man-shrugging", "woman-shrugging", "health_worker", "male-doctor", "female-doctor", "student", "male-student", "female-student", "teacher", "male-teacher", "female-teacher", "judge", "male-judge", "female-judge", "farmer", "male-farmer", "female-farmer", "cook", "male-cook", "female-cook", "mechanic", "male-mechanic", "female-mechanic", "factory_worker", "male-factory-worker", "female-factory-worker", "office_worker", "male-office-worker", "female-office-worker", "scientist", "male-scientist", "female-scientist", "technologist", "male-technologist", "female-technologist", "singer", "male-singer", "female-singer", "artist", "male-artist", "female-artist", "pilot", "male-pilot", "female-pilot", "astronaut", "male-astronaut", "female-astronaut", "firefighter", "male-firefighter", "female-firefighter", "cop", "male-police-officer", "female-police-officer", "sleuth_or_spy", "male-detective", "female-detective", "guardsman", "male-guard", "female-guard", "ninja", "construction_worker", "male-construction-worker", "female-construction-worker", "person_with_crown", "prince", "princess", "man_with_turban", "man-wearing-turban", "woman-wearing-turban", "man_with_gua_pi_mao", "person_with_headscarf", "person_in_tuxedo", "man_in_tuxedo", "woman_in_tuxedo", "bride_with_veil", "man_with_veil", "woman_with_veil", "pregnant_woman", "pregnant_man", "pregnant_person", "breast-feeding", "woman_feeding_baby", "man_feeding_baby", "person_feeding_baby", "angel", "santa", "mrs_claus", "mx_claus", "superhero", "male_superhero", "female_superhero", "supervillain", "male_supervillain", "female_supervillain", "mage", "male_mage", "female_mage", "fairy", "male_fairy", "female_fairy", "vampire", "male_vampire", "female_vampire", "merperson", "merman", "mermaid", "elf", "male_elf", "female_elf", "genie", "male_genie", "female_genie", "zombie", "male_zombie", "female_zombie", "troll", "massage", "man-getting-massage", "woman-getting-massage", "haircut", "man-getting-haircut", "woman-getting-haircut", "walking", "man-walking", "woman-walking", "standing_person", "man_standing", "woman_standing", "kneeling_person", "man_kneeling", "woman_kneeling", "person_with_probing_cane", "man_with_probing_cane", "woman_with_probing_cane", "person_in_motorized_wheelchair", "man_in_motorized_wheelchair", "woman_in_motorized_wheelchair", "person_in_manual_wheelchair", "man_in_manual_wheelchair", "woman_in_manual_wheelchair", "runner", "man-running", "woman-running", "dancer", "man_dancing", "man_in_business_suit_levitating", "dancers", "men-with-bunny-ears-partying", "women-with-bunny-ears-partying", "person_in_steamy_room", "man_in_steamy_room", "woman_in_steamy_room", "person_climbing", "man_climbing", "woman_climbing", "fencer", "horse_racing", "skier", "snowboarder", "golfer", "man-golfing", "woman-golfing", "surfer", "man-surfing", "woman-surfing", "rowboat", "man-rowing-boat", "woman-rowing-boat", "swimmer", "man-swimming", "woman-swimming", "person_with_ball", "man-bouncing-ball", "woman-bouncing-ball", "weight_lifter", "man-lifting-weights", "woman-lifting-weights", "bicyclist", "man-biking", "woman-biking", "mountain_bicyclist", "man-mountain-biking", "woman-mountain-biking", "person_doing_cartwheel", "man-cartwheeling", "woman-cartwheeling", "wrestlers", "man-wrestling", "woman-wrestling", "water_polo", "man-playing-water-polo", "woman-playing-water-polo", "handball", "man-playing-handball", "woman-playing-handball", "juggling", "man-juggling", "woman-juggling", "person_in_lotus_position", "man_in_lotus_position", "woman_in_lotus_position", "bath", "sleeping_accommodation", "people_holding_hands", "two_women_holding_hands", "man_and_woman_holding_hands", "two_men_holding_hands", "couplekiss", "woman-kiss-man", "man-kiss-man", "woman-kiss-woman", "couple_with_heart", "woman-heart-man", "man-heart-man", "woman-heart-woman", "family", "man-woman-boy", "man-woman-girl", "man-woman-girl-boy", "man-woman-boy-boy", "man-woman-girl-girl", "man-man-boy", "man-man-girl", "man-man-girl-boy", "man-man-boy-boy", "man-man-girl-girl", "woman-woman-boy", "woman-woman-girl", "woman-woman-girl-boy", "woman-woman-boy-boy", "woman-woman-girl-girl", "man-boy", "man-boy-boy", "man-girl", "man-girl-boy", "man-girl-girl", "woman-boy", "woman-boy-boy", "woman-girl", "woman-girl-boy", "woman-girl-girl", "speaking_head_in_silhouette", "bust_in_silhouette", "busts_in_silhouette", "people_hugging", "footprints", "robot_face", "smiley_cat", "smile_cat", "joy_cat", "heart_eyes_cat", "smirk_cat", "kissing_cat", "scream_cat", "crying_cat_face", "pouting_cat", "see_no_evil", "hear_no_evil", "speak_no_evil", "love_letter", "cupid", "gift_heart", "sparkling_heart", "heartpulse", "heartbeat", "revolving_hearts", "two_hearts", "heart_decoration", "heavy_heart_exclamation_mark_ornament", "broken_heart", "heart_on_fire", "mending_heart", "heart", "pink_heart", "orange_heart", "yellow_heart", "green_heart", "blue_heart", "light_blue_heart", "purple_heart", "brown_heart", "black_heart", "grey_heart", "white_heart", "kiss", "100", "anger", "boom", "dizzy", "sweat_drops", "dash", "hole", "speech_balloon", "eye-in-speech-bubble", "left_speech_bubble", "right_anger_bubble", "thought_balloon", "zzz"] }, { id: "nature", emojis: ["monkey_face", "monkey", "gorilla", "orangutan", "dog", "dog2", "guide_dog", "service_dog", "poodle", "wolf", "fox_face", "raccoon", "cat", "cat2", "black_cat", "lion_face", "tiger", "tiger2", "leopard", "horse", "moose", "donkey", "racehorse", "unicorn_face", "zebra_face", "deer", "bison", "cow", "ox", "water_buffalo", "cow2", "pig", "pig2", "boar", "pig_nose", "ram", "sheep", "goat", "dromedary_camel", "camel", "llama", "giraffe_face", "elephant", "mammoth", "rhinoceros", "hippopotamus", "mouse", "mouse2", "rat", "hamster", "rabbit", "rabbit2", "chipmunk", "beaver", "hedgehog", "bat", "bear", "polar_bear", "koala", "panda_face", "sloth", "otter", "skunk", "kangaroo", "badger", "feet", "turkey", "chicken", "rooster", "hatching_chick", "baby_chick", "hatched_chick", "bird", "penguin", "dove_of_peace", "eagle", "duck", "swan", "owl", "dodo", "feather", "flamingo", "peacock", "parrot", "wing", "black_bird", "goose", "frog", "crocodile", "turtle", "lizard", "snake", "dragon_face", "dragon", "sauropod", "t-rex", "whale", "whale2", "dolphin", "seal", "fish", "tropical_fish", "blowfish", "shark", "octopus", "shell", "coral", "jellyfish", "snail", "butterfly", "bug", "ant", "bee", "beetle", "ladybug", "cricket", "cockroach", "spider", "spider_web", "scorpion", "mosquito", "fly", "worm", "microbe", "bouquet", "cherry_blossom", "white_flower", "lotus", "rosette", "rose", "wilted_flower", "hibiscus", "sunflower", "blossom", "tulip", "hyacinth", "seedling", "potted_plant", "evergreen_tree", "deciduous_tree", "palm_tree", "cactus", "ear_of_rice", "herb", "shamrock", "four_leaf_clover", "maple_leaf", "fallen_leaf", "leaves", "empty_nest", "nest_with_eggs", "mushroom"] }, { id: "foods", emojis: ["grapes", "melon", "watermelon", "tangerine", "lemon", "banana", "pineapple", "mango", "apple", "green_apple", "pear", "peach", "cherries", "strawberry", "blueberries", "kiwifruit", "tomato", "olive", "coconut", "avocado", "eggplant", "potato", "carrot", "corn", "hot_pepper", "bell_pepper", "cucumber", "leafy_green", "broccoli", "garlic", "onion", "peanuts", "beans", "chestnut", "ginger_root", "pea_pod", "bread", "croissant", "baguette_bread", "flatbread", "pretzel", "bagel", "pancakes", "waffle", "cheese_wedge", "meat_on_bone", "poultry_leg", "cut_of_meat", "bacon", "hamburger", "fries", "pizza", "hotdog", "sandwich", "taco", "burrito", "tamale", "stuffed_flatbread", "falafel", "egg", "fried_egg", "shallow_pan_of_food", "stew", "fondue", "bowl_with_spoon", "green_salad", "popcorn", "butter", "salt", "canned_food", "bento", "rice_cracker", "rice_ball", "rice", "curry", "ramen", "spaghetti", "sweet_potato", "oden", "sushi", "fried_shrimp", "fish_cake", "moon_cake", "dango", "dumpling", "fortune_cookie", "takeout_box", "crab", "lobster", "shrimp", "squid", "oyster", "icecream", "shaved_ice", "ice_cream", "doughnut", "cookie", "birthday", "cake", "cupcake", "pie", "chocolate_bar", "candy", "lollipop", "custard", "honey_pot", "baby_bottle", "glass_of_milk", "coffee", "teapot", "tea", "sake", "champagne", "wine_glass", "cocktail", "tropical_drink", "beer", "beers", "clinking_glasses", "tumbler_glass", "pouring_liquid", "cup_with_straw", "bubble_tea", "beverage_box", "mate_drink", "ice_cube", "chopsticks", "knife_fork_plate", "fork_and_knife", "spoon", "hocho", "jar", "amphora"] }, { id: "activity", emojis: ["jack_o_lantern", "christmas_tree", "fireworks", "sparkler", "firecracker", "sparkles", "balloon", "tada", "confetti_ball", "tanabata_tree", "bamboo", "dolls", "flags", "wind_chime", "rice_scene", "red_envelope", "ribbon", "gift", "reminder_ribbon", "admission_tickets", "ticket", "medal", "trophy", "sports_medal", "first_place_medal", "second_place_medal", "third_place_medal", "soccer", "baseball", "softball", "basketball", "volleyball", "football", "rugby_football", "tennis", "flying_disc", "bowling", "cricket_bat_and_ball", "field_hockey_stick_and_ball", "ice_hockey_stick_and_puck", "lacrosse", "table_tennis_paddle_and_ball", "badminton_racquet_and_shuttlecock", "boxing_glove", "martial_arts_uniform", "goal_net", "golf", "ice_skate", "fishing_pole_and_fish", "diving_mask", "running_shirt_with_sash", "ski", "sled", "curling_stone", "dart", "yo-yo", "kite", "gun", "8ball", "crystal_ball", "magic_wand", "video_game", "joystick", "slot_machine", "game_die", "jigsaw", "teddy_bear", "pinata", "mirror_ball", "nesting_dolls", "spades", "hearts", "diamonds", "clubs", "chess_pawn", "black_joker", "mahjong", "flower_playing_cards", "performing_arts", "frame_with_picture", "art", "thread", "sewing_needle", "yarn", "knot"] }, { id: "places", emojis: ["earth_africa", "earth_americas", "earth_asia", "globe_with_meridians", "world_map", "japan", "compass", "snow_capped_mountain", "mountain", "volcano", "mount_fuji", "camping", "beach_with_umbrella", "desert", "desert_island", "national_park", "stadium", "classical_building", "building_construction", "bricks", "rock", "wood", "hut", "house_buildings", "derelict_house_building", "house", "house_with_garden", "office", "post_office", "european_post_office", "hospital", "bank", "hotel", "love_hotel", "convenience_store", "school", "department_store", "factory", "japanese_castle", "european_castle", "wedding", "tokyo_tower", "statue_of_liberty", "church", "mosque", "hindu_temple", "synagogue", "shinto_shrine", "kaaba", "fountain", "tent", "foggy", "night_with_stars", "cityscape", "sunrise_over_mountains", "sunrise", "city_sunset", "city_sunrise", "bridge_at_night", "hotsprings", "carousel_horse", "playground_slide", "ferris_wheel", "roller_coaster", "barber", "circus_tent", "steam_locomotive", "railway_car", "bullettrain_side", "bullettrain_front", "train2", "metro", "light_rail", "station", "tram", "monorail", "mountain_railway", "train", "bus", "oncoming_bus", "trolleybus", "minibus", "ambulance", "fire_engine", "police_car", "oncoming_police_car", "taxi", "oncoming_taxi", "car", "oncoming_automobile", "blue_car", "pickup_truck", "truck", "articulated_lorry", "tractor", "racing_car", "racing_motorcycle", "motor_scooter", "manual_wheelchair", "motorized_wheelchair", "auto_rickshaw", "bike", "scooter", "skateboard", "roller_skate", "busstop", "motorway", "railway_track", "oil_drum", "fuelpump", "wheel", "rotating_light", "traffic_light", "vertical_traffic_light", "octagonal_sign", "construction", "anchor", "ring_buoy", "boat", "canoe", "speedboat", "passenger_ship", "ferry", "motor_boat", "ship", "airplane", "small_airplane", "airplane_departure", "airplane_arriving", "parachute", "seat", "helicopter", "suspension_railway", "mountain_cableway", "aerial_tramway", "satellite", "rocket", "flying_saucer", "bellhop_bell", "luggage", "hourglass", "hourglass_flowing_sand", "watch", "alarm_clock", "stopwatch", "timer_clock", "mantelpiece_clock", "clock12", "clock1230", "clock1", "clock130", "clock2", "clock230", "clock3", "clock330", "clock4", "clock430", "clock5", "clock530", "clock6", "clock630", "clock7", "clock730", "clock8", "clock830", "clock9", "clock930", "clock10", "clock1030", "clock11", "clock1130", "new_moon", "waxing_crescent_moon", "first_quarter_moon", "moon", "full_moon", "waning_gibbous_moon", "last_quarter_moon", "waning_crescent_moon", "crescent_moon", "new_moon_with_face", "first_quarter_moon_with_face", "last_quarter_moon_with_face", "thermometer", "sunny", "full_moon_with_face", "sun_with_face", "ringed_planet", "star", "star2", "stars", "milky_way", "cloud", "partly_sunny", "thunder_cloud_and_rain", "mostly_sunny", "barely_sunny", "partly_sunny_rain", "rain_cloud", "snow_cloud", "lightning", "tornado", "fog", "wind_blowing_face", "cyclone", "rainbow", "closed_umbrella", "umbrella", "umbrella_with_rain_drops", "umbrella_on_ground", "zap", "snowflake", "snowman", "snowman_without_snow", "comet", "fire", "droplet", "ocean"] }, { id: "objects", emojis: ["eyeglasses", "dark_sunglasses", "goggles", "lab_coat", "safety_vest", "necktie", "shirt", "jeans", "scarf", "gloves", "coat", "socks", "dress", "kimono", "sari", "one-piece_swimsuit", "briefs", "shorts", "bikini", "womans_clothes", "folding_hand_fan", "purse", "handbag", "pouch", "shopping_bags", "school_satchel", "thong_sandal", "mans_shoe", "athletic_shoe", "hiking_boot", "womans_flat_shoe", "high_heel", "sandal", "ballet_shoes", "boot", "hair_pick", "crown", "womans_hat", "tophat", "mortar_board", "billed_cap", "military_helmet", "helmet_with_white_cross", "prayer_beads", "lipstick", "ring", "gem", "mute", "speaker", "sound", "loud_sound", "loudspeaker", "mega", "postal_horn", "bell", "no_bell", "musical_score", "musical_note", "notes", "studio_microphone", "level_slider", "control_knobs", "microphone", "headphones", "radio", "saxophone", "accordion", "guitar", "musical_keyboard", "trumpet", "violin", "banjo", "drum_with_drumsticks", "long_drum", "maracas", "flute", "iphone", "calling", "phone", "telephone_receiver", "pager", "fax", "battery", "low_battery", "electric_plug", "computer", "desktop_computer", "printer", "keyboard", "three_button_mouse", "trackball", "minidisc", "floppy_disk", "cd", "dvd", "abacus", "movie_camera", "film_frames", "film_projector", "clapper", "tv", "camera", "camera_with_flash", "video_camera", "vhs", "mag", "mag_right", "candle", "bulb", "flashlight", "izakaya_lantern", "diya_lamp", "notebook_with_decorative_cover", "closed_book", "book", "green_book", "blue_book", "orange_book", "books", "notebook", "ledger", "page_with_curl", "scroll", "page_facing_up", "newspaper", "rolled_up_newspaper", "bookmark_tabs", "bookmark", "label", "moneybag", "coin", "yen", "dollar", "euro", "pound", "money_with_wings", "credit_card", "receipt", "chart", "email", "e-mail", "incoming_envelope", "envelope_with_arrow", "outbox_tray", "inbox_tray", "package", "mailbox", "mailbox_closed", "mailbox_with_mail", "mailbox_with_no_mail", "postbox", "ballot_box_with_ballot", "pencil2", "black_nib", "lower_left_fountain_pen", "lower_left_ballpoint_pen", "lower_left_paintbrush", "lower_left_crayon", "memo", "briefcase", "file_folder", "open_file_folder", "card_index_dividers", "date", "calendar", "spiral_note_pad", "spiral_calendar_pad", "card_index", "chart_with_upwards_trend", "chart_with_downwards_trend", "bar_chart", "clipboard", "pushpin", "round_pushpin", "paperclip", "linked_paperclips", "straight_ruler", "triangular_ruler", "scissors", "card_file_box", "file_cabinet", "wastebasket", "lock", "unlock", "lock_with_ink_pen", "closed_lock_with_key", "key", "old_key", "hammer", "axe", "pick", "hammer_and_pick", "hammer_and_wrench", "dagger_knife", "crossed_swords", "bomb", "boomerang", "bow_and_arrow", "shield", "carpentry_saw", "wrench", "screwdriver", "nut_and_bolt", "gear", "compression", "scales", "probing_cane", "link", "chains", "hook", "toolbox", "magnet", "ladder", "alembic", "test_tube", "petri_dish", "dna", "microscope", "telescope", "satellite_antenna", "syringe", "drop_of_blood", "pill", "adhesive_bandage", "crutch", "stethoscope", "x-ray", "door", "elevator", "mirror", "window", "bed", "couch_and_lamp", "chair", "toilet", "plunger", "shower", "bathtub", "mouse_trap", "razor", "lotion_bottle", "safety_pin", "broom", "basket", "roll_of_paper", "bucket", "soap", "bubbles", "toothbrush", "sponge", "fire_extinguisher", "shopping_trolley", "smoking", "coffin", "headstone", "funeral_urn", "nazar_amulet", "hamsa", "moyai", "placard", "identification_card"] }, { id: "symbols", emojis: ["atm", "put_litter_in_its_place", "potable_water", "wheelchair", "mens", "womens", "restroom", "baby_symbol", "wc", "passport_control", "customs", "baggage_claim", "left_luggage", "warning", "children_crossing", "no_entry", "no_entry_sign", "no_bicycles", "no_smoking", "do_not_litter", "non-potable_water", "no_pedestrians", "no_mobile_phones", "underage", "radioactive_sign", "biohazard_sign", "arrow_up", "arrow_upper_right", "arrow_right", "arrow_lower_right", "arrow_down", "arrow_lower_left", "arrow_left", "arrow_upper_left", "arrow_up_down", "left_right_arrow", "leftwards_arrow_with_hook", "arrow_right_hook", "arrow_heading_up", "arrow_heading_down", "arrows_clockwise", "arrows_counterclockwise", "back", "end", "on", "soon", "top", "place_of_worship", "atom_symbol", "om_symbol", "star_of_david", "wheel_of_dharma", "yin_yang", "latin_cross", "orthodox_cross", "star_and_crescent", "peace_symbol", "menorah_with_nine_branches", "six_pointed_star", "khanda", "aries", "taurus", "gemini", "cancer", "leo", "virgo", "libra", "scorpius", "sagittarius", "capricorn", "aquarius", "pisces", "ophiuchus", "twisted_rightwards_arrows", "repeat", "repeat_one", "arrow_forward", "fast_forward", "black_right_pointing_double_triangle_with_vertical_bar", "black_right_pointing_triangle_with_double_vertical_bar", "arrow_backward", "rewind", "black_left_pointing_double_triangle_with_vertical_bar", "arrow_up_small", "arrow_double_up", "arrow_down_small", "arrow_double_down", "double_vertical_bar", "black_square_for_stop", "black_circle_for_record", "eject", "cinema", "low_brightness", "high_brightness", "signal_strength", "wireless", "vibration_mode", "mobile_phone_off", "female_sign", "male_sign", "transgender_symbol", "heavy_multiplication_x", "heavy_plus_sign", "heavy_minus_sign", "heavy_division_sign", "heavy_equals_sign", "infinity", "bangbang", "interrobang", "question", "grey_question", "grey_exclamation", "exclamation", "wavy_dash", "currency_exchange", "heavy_dollar_sign", "medical_symbol", "recycle", "fleur_de_lis", "trident", "name_badge", "beginner", "o", "white_check_mark", "ballot_box_with_check", "heavy_check_mark", "x", "negative_squared_cross_mark", "curly_loop", "loop", "part_alternation_mark", "eight_spoked_asterisk", "eight_pointed_black_star", "sparkle", "copyright", "registered", "tm", "hash", "keycap_star", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "keycap_ten", "capital_abcd", "abcd", "1234", "symbols", "abc", "a", "ab", "b", "cl", "cool", "free", "information_source", "id", "m", "new", "ng", "o2", "ok", "parking", "sos", "up", "vs", "koko", "sa", "u6708", "u6709", "u6307", "ideograph_advantage", "u5272", "u7121", "u7981", "accept", "u7533", "u5408", "u7a7a", "congratulations", "secret", "u55b6", "u6e80", "red_circle", "large_orange_circle", "large_yellow_circle", "large_green_circle", "large_blue_circle", "large_purple_circle", "large_brown_circle", "black_circle", "white_circle", "large_red_square", "large_orange_square", "large_yellow_square", "large_green_square", "large_blue_square", "large_purple_square", "large_brown_square", "black_large_square", "white_large_square", "black_medium_square", "white_medium_square", "black_medium_small_square", "white_medium_small_square", "black_small_square", "white_small_square", "large_orange_diamond", "large_blue_diamond", "small_orange_diamond", "small_blue_diamond", "small_red_triangle", "small_red_triangle_down", "diamond_shape_with_a_dot_inside", "radio_button", "white_square_button", "black_square_button"] }, { id: "flags", emojis: ["checkered_flag", "cn", "crossed_flags", "de", "es", "flag-ac", "flag-ad", "flag-ae", "flag-af", "flag-ag", "flag-ai", "flag-al", "flag-am", "flag-ao", "flag-aq", "flag-ar", "flag-as", "flag-at", "flag-au", "flag-aw", "flag-ax", "flag-az", "flag-ba", "flag-bb", "flag-bd", "flag-be", "flag-bf", "flag-bg", "flag-bh", "flag-bi", "flag-bj", "flag-bl", "flag-bm", "flag-bn", "flag-bo", "flag-bq", "flag-br", "flag-bs", "flag-bt", "flag-bv", "flag-bw", "flag-by", "flag-bz", "flag-ca", "flag-cc", "flag-cd", "flag-cf", "flag-cg", "flag-ch", "flag-ci", "flag-ck", "flag-cl", "flag-cm", "flag-co", "flag-cp", "flag-cr", "flag-cu", "flag-cv", "flag-cw", "flag-cx", "flag-cy", "flag-cz", "flag-dg", "flag-dj", "flag-dk", "flag-dm", "flag-do", "flag-dz", "flag-ea", "flag-ec", "flag-ee", "flag-eg", "flag-eh", "flag-england", "flag-er", "flag-et", "flag-eu", "flag-fi", "flag-fj", "flag-fk", "flag-fm", "flag-fo", "flag-ga", "flag-gd", "flag-ge", "flag-gf", "flag-gg", "flag-gh", "flag-gi", "flag-gl", "flag-gm", "flag-gn", "flag-gp", "flag-gq", "flag-gr", "flag-gs", "flag-gt", "flag-gu", "flag-gw", "flag-gy", "flag-hk", "flag-hm", "flag-hn", "flag-hr", "flag-ht", "flag-hu", "flag-ic", "flag-id", "flag-ie", "flag-il", "flag-im", "flag-in", "flag-io", "flag-iq", "flag-ir", "flag-is", "flag-je", "flag-jm", "flag-jo", "flag-ke", "flag-kg", "flag-kh", "flag-ki", "flag-km", "flag-kn", "flag-kp", "flag-kw", "flag-ky", "flag-kz", "flag-la", "flag-lb", "flag-lc", "flag-li", "flag-lk", "flag-lr", "flag-ls", "flag-lt", "flag-lu", "flag-lv", "flag-ly", "flag-ma", "flag-mc", "flag-md", "flag-me", "flag-mf", "flag-mg", "flag-mh", "flag-mk", "flag-ml", "flag-mm", "flag-mn", "flag-mo", "flag-mp", "flag-mq", "flag-mr", "flag-ms", "flag-mt", "flag-mu", "flag-mv", "flag-mw", "flag-mx", "flag-my", "flag-mz", "flag-na", "flag-nc", "flag-ne", "flag-nf", "flag-ng", "flag-ni", "flag-nl", "flag-no", "flag-np", "flag-nr", "flag-nu", "flag-nz", "flag-om", "flag-pa", "flag-pe", "flag-pf", "flag-pg", "flag-ph", "flag-pk", "flag-pl", "flag-pm", "flag-pn", "flag-pr", "flag-ps", "flag-pt", "flag-pw", "flag-py", "flag-qa", "flag-re", "flag-ro", "flag-rs", "flag-rw", "flag-sa", "flag-sb", "flag-sc", "flag-scotland", "flag-sd", "flag-se", "flag-sg", "flag-sh", "flag-si", "flag-sj", "flag-sk", "flag-sl", "flag-sm", "flag-sn", "flag-so", "flag-sr", "flag-ss", "flag-st", "flag-sv", "flag-sx", "flag-sy", "flag-sz", "flag-ta", "flag-tc", "flag-td", "flag-tf", "flag-tg", "flag-th", "flag-tj", "flag-tk", "flag-tl", "flag-tm", "flag-tn", "flag-to", "flag-tr", "flag-tt", "flag-tv", "flag-tw", "flag-tz", "flag-ua", "flag-ug", "flag-um", "flag-un", "flag-uy", "flag-uz", "flag-va", "flag-vc", "flag-ve", "flag-vg", "flag-vi", "flag-vn", "flag-vu", "flag-wales", "flag-wf", "flag-ws", "flag-xk", "flag-ye", "flag-yt", "flag-za", "flag-zm", "flag-zw", "fr", "gb", "it", "jp", "kr", "pirate_flag", "rainbow-flag", "ru", "transgender_flag", "triangular_flag_on_post", "us", "waving_black_flag", "waving_white_flag"] }], emojis: { "100": { id: "100", name: "Hundred Points", keywords: ["100", "score", "perfect", "numbers", "century", "exam", "quiz", "test", "pass"], skins: [{ unified: "1f4af", native: "\u{1F4AF}" }], version: 1 }, "1234": { id: "1234", name: "Input Numbers", keywords: ["1234", "blue", "square", "1", "2", "3", "4"], skins: [{ unified: "1f522", native: "\u{1F522}" }], version: 1 }, grinning: { id: "grinning", name: "Grinning Face", emoticons: [":D"], keywords: ["smile", "happy", "joy", ":D", "grin"], skins: [{ unified: "1f600", native: "\u{1F600}" }], version: 1 }, smiley: { id: "smiley", name: "Grinning Face with Big Eyes", emoticons: [":)", "=)", "=-)"], keywords: ["smiley", "happy", "joy", "haha", ":D", ":)", "smile", "funny"], skins: [{ unified: "1f603", native: "\u{1F603}" }], version: 1 }, smile: { id: "smile", name: "Grinning Face with Smiling Eyes", emoticons: [":)", "C:", "c:", ":D", ":-D"], keywords: ["smile", "happy", "joy", "funny", "haha", "laugh", "like", ":D", ":)"], skins: [{ unified: "1f604", native: "\u{1F604}" }], version: 1 }, grin: { id: "grin", name: "Beaming Face with Smiling Eyes", keywords: ["grin", "happy", "smile", "joy", "kawaii"], skins: [{ unified: "1f601", native: "\u{1F601}" }], version: 1 }, laughing: { id: "laughing", name: "Grinning Squinting Face", emoticons: [":>", ":->"], keywords: ["laughing", "satisfied", "happy", "joy", "lol", "haha", "glad", "XD", "laugh"], skins: [{ unified: "1f606", native: "\u{1F606}" }], version: 1 }, sweat_smile: { id: "sweat_smile", name: "Grinning Face with Sweat", keywords: ["smile", "hot", "happy", "laugh", "relief"], skins: [{ unified: "1f605", native: "\u{1F605}" }], version: 1 }, rolling_on_the_floor_laughing: { id: "rolling_on_the_floor_laughing", name: "Rolling on the Floor Laughing", keywords: ["face", "lol", "haha", "rofl"], skins: [{ unified: "1f923", native: "\u{1F923}" }], version: 3 }, joy: { id: "joy", name: "Face with Tears of Joy", keywords: ["cry", "weep", "happy", "happytears", "haha"], skins: [{ unified: "1f602", native: "\u{1F602}" }], version: 1 }, slightly_smiling_face: { id: "slightly_smiling_face", name: "Slightly Smiling Face", emoticons: [":)", "(:", ":-)"], keywords: ["smile"], skins: [{ unified: "1f642", native: "\u{1F642}" }], version: 1 }, upside_down_face: { id: "upside_down_face", name: "Upside-Down Face", keywords: ["upside", "down", "flipped", "silly", "smile"], skins: [{ unified: "1f643", native: "\u{1F643}" }], version: 1 }, melting_face: { id: "melting_face", name: "Melting Face", keywords: ["hot", "heat"], skins: [{ unified: "1fae0", native: "\u{1FAE0}" }], version: 14 }, wink: { id: "wink", name: "Winking Face", emoticons: [";)", ";-)"], keywords: ["wink", "happy", "mischievous", "secret", ";)", "smile", "eye"], skins: [{ unified: "1f609", native: "\u{1F609}" }], version: 1 }, blush: { id: "blush", name: "Smiling Face with Smiling Eyes", emoticons: [":)"], keywords: ["blush", "smile", "happy", "flushed", "crush", "embarrassed", "shy", "joy"], skins: [{ unified: "1f60a", native: "\u{1F60A}" }], version: 1 }, innocent: { id: "innocent", name: "Smiling Face with Halo", keywords: ["innocent", "angel", "heaven"], skins: [{ unified: "1f607", native: "\u{1F607}" }], version: 1 }, smiling_face_with_3_hearts: { id: "smiling_face_with_3_hearts", name: "Smiling Face with Hearts", keywords: ["3", "love", "like", "affection", "valentines", "infatuation", "crush", "adore"], skins: [{ unified: "1f970", native: "\u{1F970}" }], version: 11 }, heart_eyes: { id: "heart_eyes", name: "Smiling Face with Heart-Eyes", keywords: ["heart", "eyes", "love", "like", "affection", "valentines", "infatuation", "crush"], skins: [{ unified: "1f60d", native: "\u{1F60D}" }], version: 1 }, "star-struck": { id: "star-struck", name: "Star-Struck", keywords: ["star", "struck", "grinning", "face", "with", "eyes", "smile", "starry"], skins: [{ unified: "1f929", native: "\u{1F929}" }], version: 5 }, kissing_heart: { id: "kissing_heart", name: "Face Blowing a Kiss", emoticons: [":*", ":-*"], keywords: ["kissing", "heart", "love", "like", "affection", "valentines", "infatuation"], skins: [{ unified: "1f618", native: "\u{1F618}" }], version: 1 }, kissing: { id: "kissing", name: "Kissing Face", keywords: ["love", "like", "3", "valentines", "infatuation", "kiss"], skins: [{ unified: "1f617", native: "\u{1F617}" }], version: 1 }, relaxed: { id: "relaxed", name: "Smiling Face", keywords: ["relaxed", "blush", "massage", "happiness"], skins: [{ unified: "263a-fe0f", native: "\u263A\uFE0F" }], version: 1 }, kissing_closed_eyes: { id: "kissing_closed_eyes", name: "Kissing Face with Closed Eyes", keywords: ["love", "like", "affection", "valentines", "infatuation", "kiss"], skins: [{ unified: "1f61a", native: "\u{1F61A}" }], version: 1 }, kissing_smiling_eyes: { id: "kissing_smiling_eyes", name: "Kissing Face with Smiling Eyes", keywords: ["affection", "valentines", "infatuation", "kiss"], skins: [{ unified: "1f619", native: "\u{1F619}" }], version: 1 }, smiling_face_with_tear: { id: "smiling_face_with_tear", name: "Smiling Face with Tear", keywords: ["sad", "cry", "pretend"], skins: [{ unified: "1f972", native: "\u{1F972}" }], version: 13 }, yum: { id: "yum", name: "Face Savoring Food", keywords: ["yum", "happy", "joy", "tongue", "smile", "silly", "yummy", "nom", "delicious", "savouring"], skins: [{ unified: "1f60b", native: "\u{1F60B}" }], version: 1 }, stuck_out_tongue: { id: "stuck_out_tongue", name: "Face with Tongue", emoticons: [":p", ":-p", ":P", ":-P", ":b", ":-b"], keywords: ["stuck", "out", "prank", "childish", "playful", "mischievous", "smile"], skins: [{ unified: "1f61b", native: "\u{1F61B}" }], version: 1 }, stuck_out_tongue_winking_eye: { id: "stuck_out_tongue_winking_eye", name: "Winking Face with Tongue", emoticons: [";p", ";-p", ";b", ";-b", ";P", ";-P"], keywords: ["stuck", "out", "eye", "prank", "childish", "playful", "mischievous", "smile", "wink"], skins: [{ unified: "1f61c", native: "\u{1F61C}" }], version: 1 }, zany_face: { id: "zany_face", name: "Zany Face", keywords: ["grinning", "with", "one", "large", "and", "small", "eye", "goofy", "crazy"], skins: [{ unified: "1f92a", native: "\u{1F92A}" }], version: 5 }, stuck_out_tongue_closed_eyes: { id: "stuck_out_tongue_closed_eyes", name: "Squinting Face with Tongue", keywords: ["stuck", "out", "closed", "eyes", "prank", "playful", "mischievous", "smile"], skins: [{ unified: "1f61d", native: "\u{1F61D}" }], version: 1 }, money_mouth_face: { id: "money_mouth_face", name: "Money-Mouth Face", keywords: ["money", "mouth", "rich", "dollar"], skins: [{ unified: "1f911", native: "\u{1F911}" }], version: 1 }, hugging_face: { id: "hugging_face", name: "Hugging Face", keywords: ["smile", "hug"], skins: [{ unified: "1f917", native: "\u{1F917}" }], version: 1 }, face_with_hand_over_mouth: { id: "face_with_hand_over_mouth", name: "Face with Hand over Mouth", keywords: ["smiling", "eyes", "and", "covering", "whoops", "shock", "surprise"], skins: [{ unified: "1f92d", native: "\u{1F92D}" }], version: 5 }, face_with_open_eyes_and_hand_over_mouth: { id: "face_with_open_eyes_and_hand_over_mouth", name: "Face with Open Eyes and Hand over Mouth", keywords: ["silence", "secret", "shock", "surprise"], skins: [{ unified: "1fae2", native: "\u{1FAE2}" }], version: 14 }, face_with_peeking_eye: { id: "face_with_peeking_eye", name: "Face with Peeking Eye", keywords: ["scared", "frightening", "embarrassing", "shy"], skins: [{ unified: "1fae3", native: "\u{1FAE3}" }], version: 14 }, shushing_face: { id: "shushing_face", name: "Shushing Face", keywords: ["with", "finger", "covering", "closed", "lips", "quiet", "shhh"], skins: [{ unified: "1f92b", native: "\u{1F92B}" }], version: 5 }, thinking_face: { id: "thinking_face", name: "Thinking Face", keywords: ["hmmm", "think", "consider"], skins: [{ unified: "1f914", native: "\u{1F914}" }], version: 1 }, saluting_face: { id: "saluting_face", name: "Saluting Face", keywords: ["respect", "salute"], skins: [{ unified: "1fae1", native: "\u{1FAE1}" }], version: 14 }, zipper_mouth_face: { id: "zipper_mouth_face", name: "Zipper-Mouth Face", keywords: ["zipper", "mouth", "sealed", "secret"], skins: [{ unified: "1f910", native: "\u{1F910}" }], version: 1 }, face_with_raised_eyebrow: { id: "face_with_raised_eyebrow", name: "Face with Raised Eyebrow", keywords: ["one", "distrust", "scepticism", "disapproval", "disbelief", "surprise"], skins: [{ unified: "1f928", native: "\u{1F928}" }], version: 5 }, neutral_face: { id: "neutral_face", name: "Neutral Face", emoticons: [":|", ":-|"], keywords: ["indifference", "meh", ":", ""], skins: [{ unified: "1f610", native: "\u{1F610}" }], version: 1 }, expressionless: { id: "expressionless", name: "Expressionless Face", emoticons: ["-_-"], keywords: ["indifferent", "-", "", "meh", "deadpan"], skins: [{ unified: "1f611", native: "\u{1F611}" }], version: 1 }, no_mouth: { id: "no_mouth", name: "Face Without Mouth", keywords: ["no", "hellokitty"], skins: [{ unified: "1f636", native: "\u{1F636}" }], version: 1 }, dotted_line_face: { id: "dotted_line_face", name: "Dotted Line Face", keywords: ["invisible", "lonely", "isolation", "depression"], skins: [{ unified: "1fae5", native: "\u{1FAE5}" }], version: 14 }, face_in_clouds: { id: "face_in_clouds", name: "Face in Clouds", keywords: ["shower", "steam", "dream"], skins: [{ unified: "1f636-200d-1f32b-fe0f", native: "\u{1F636}\u200D\u{1F32B}\uFE0F" }], version: 13.1 }, smirk: { id: "smirk", name: "Smirking Face", keywords: ["smirk", "smile", "mean", "prank", "smug", "sarcasm"], skins: [{ unified: "1f60f", native: "\u{1F60F}" }], version: 1 }, unamused: { id: "unamused", name: "Unamused Face", emoticons: [":("], keywords: ["indifference", "bored", "straight", "serious", "sarcasm", "unimpressed", "skeptical", "dubious", "side", "eye"], skins: [{ unified: "1f612", native: "\u{1F612}" }], version: 1 }, face_with_rolling_eyes: { id: "face_with_rolling_eyes", name: "Face with Rolling Eyes", keywords: ["eyeroll", "frustrated"], skins: [{ unified: "1f644", native: "\u{1F644}" }], version: 1 }, grimacing: { id: "grimacing", name: "Grimacing Face", keywords: ["grimace", "teeth"], skins: [{ unified: "1f62c", native: "\u{1F62C}" }], version: 1 }, face_exhaling: { id: "face_exhaling", name: "Face Exhaling", keywords: ["relieve", "relief", "tired", "sigh"], skins: [{ unified: "1f62e-200d-1f4a8", native: "\u{1F62E}\u200D\u{1F4A8}" }], version: 13.1 }, lying_face: { id: "lying_face", name: "Lying Face", keywords: ["lie", "pinocchio"], skins: [{ unified: "1f925", native: "\u{1F925}" }], version: 3 }, shaking_face: { id: "shaking_face", name: "Shaking Face", keywords: ["dizzy", "shock", "blurry", "earthquake"], skins: [{ unified: "1fae8", native: "\u{1FAE8}" }], version: 15 }, relieved: { id: "relieved", name: "Relieved Face", keywords: ["relaxed", "phew", "massage", "happiness"], skins: [{ unified: "1f60c", native: "\u{1F60C}" }], version: 1 }, pensive: { id: "pensive", name: "Pensive Face", keywords: ["sad", "depressed", "upset"], skins: [{ unified: "1f614", native: "\u{1F614}" }], version: 1 }, sleepy: { id: "sleepy", name: "Sleepy Face", keywords: ["tired", "rest", "nap"], skins: [{ unified: "1f62a", native: "\u{1F62A}" }], version: 1 }, drooling_face: { id: "drooling_face", name: "Drooling Face", keywords: [], skins: [{ unified: "1f924", native: "\u{1F924}" }], version: 3 }, sleeping: { id: "sleeping", name: "Sleeping Face", keywords: ["tired", "sleepy", "night", "zzz"], skins: [{ unified: "1f634", native: "\u{1F634}" }], version: 1 }, mask: { id: "mask", name: "Face with Medical Mask", keywords: ["sick", "ill", "disease", "covid"], skins: [{ unified: "1f637", native: "\u{1F637}" }], version: 1 }, face_with_thermometer: { id: "face_with_thermometer", name: "Face with Thermometer", keywords: ["sick", "temperature", "cold", "fever", "covid"], skins: [{ unified: "1f912", native: "\u{1F912}" }], version: 1 }, face_with_head_bandage: { id: "face_with_head_bandage", name: "Face with Head-Bandage", keywords: ["head", "bandage", "injured", "clumsy", "hurt"], skins: [{ unified: "1f915", native: "\u{1F915}" }], version: 1 }, nauseated_face: { id: "nauseated_face", name: "Nauseated Face", keywords: ["vomit", "gross", "green", "sick", "throw", "up", "ill"], skins: [{ unified: "1f922", native: "\u{1F922}" }], version: 3 }, face_vomiting: { id: "face_vomiting", name: "Face Vomiting", keywords: ["with", "open", "mouth", "sick"], skins: [{ unified: "1f92e", native: "\u{1F92E}" }], version: 5 }, sneezing_face: { id: "sneezing_face", name: "Sneezing Face", keywords: ["gesundheit", "sneeze", "sick", "allergy"], skins: [{ unified: "1f927", native: "\u{1F927}" }], version: 3 }, hot_face: { id: "hot_face", name: "Hot Face", keywords: ["feverish", "heat", "red", "sweating"], skins: [{ unified: "1f975", native: "\u{1F975}" }], version: 11 }, cold_face: { id: "cold_face", name: "Cold Face", keywords: ["blue", "freezing", "frozen", "frostbite", "icicles"], skins: [{ unified: "1f976", native: "\u{1F976}" }], version: 11 }, woozy_face: { id: "woozy_face", name: "Woozy Face", keywords: ["dizzy", "intoxicated", "tipsy", "wavy"], skins: [{ unified: "1f974", native: "\u{1F974}" }], version: 11 }, dizzy_face: { id: "dizzy_face", name: "Dizzy Face", keywords: ["spent", "unconscious", "xox"], skins: [{ unified: "1f635", native: "\u{1F635}" }], version: 1 }, face_with_spiral_eyes: { id: "face_with_spiral_eyes", name: "Face with Spiral Eyes", keywords: ["sick", "ill", "confused", "nauseous", "nausea"], skins: [{ unified: "1f635-200d-1f4ab", native: "\u{1F635}\u200D\u{1F4AB}" }], version: 13.1 }, exploding_head: { id: "exploding_head", name: "Exploding Head", keywords: ["shocked", "face", "with", "mind", "blown"], skins: [{ unified: "1f92f", native: "\u{1F92F}" }], version: 5 }, face_with_cowboy_hat: { id: "face_with_cowboy_hat", name: "Cowboy Hat Face", keywords: ["with", "cowgirl"], skins: [{ unified: "1f920", native: "\u{1F920}" }], version: 3 }, partying_face: { id: "partying_face", name: "Partying Face", keywords: ["celebration", "woohoo"], skins: [{ unified: "1f973", native: "\u{1F973}" }], version: 11 }, disguised_face: { id: "disguised_face", name: "Disguised Face", keywords: ["pretent", "brows", "glasses", "moustache"], skins: [{ unified: "1f978", native: "\u{1F978}" }], version: 13 }, sunglasses: { id: "sunglasses", name: "Smiling Face with Sunglasses", emoticons: ["8)"], keywords: ["cool", "smile", "summer", "beach", "sunglass"], skins: [{ unified: "1f60e", native: "\u{1F60E}" }], version: 1 }, nerd_face: { id: "nerd_face", name: "Nerd Face", keywords: ["nerdy", "geek", "dork"], skins: [{ unified: "1f913", native: "\u{1F913}" }], version: 1 }, face_with_monocle: { id: "face_with_monocle", name: "Face with Monocle", keywords: ["stuffy", "wealthy"], skins: [{ unified: "1f9d0", native: "\u{1F9D0}" }], version: 5 }, confused: { id: "confused", name: "Confused Face", emoticons: [":\\", ":-\\", ":/", ":-/"], keywords: ["indifference", "huh", "weird", "hmmm", ":/"], skins: [{ unified: "1f615", native: "\u{1F615}" }], version: 1 }, face_with_diagonal_mouth: { id: "face_with_diagonal_mouth", name: "Face with Diagonal Mouth", keywords: ["skeptic", "confuse", "frustrated", "indifferent"], skins: [{ unified: "1fae4", native: "\u{1FAE4}" }], version: 14 }, worried: { id: "worried", name: "Worried Face", keywords: ["concern", "nervous", ":("], skins: [{ unified: "1f61f", native: "\u{1F61F}" }], version: 1 }, slightly_frowning_face: { id: "slightly_frowning_face", name: "Slightly Frowning Face", keywords: ["disappointed", "sad", "upset"], skins: [{ unified: "1f641", native: "\u{1F641}" }], version: 1 }, white_frowning_face: { id: "white_frowning_face", name: "Frowning Face", keywords: ["white", "sad", "upset", "frown"], skins: [{ unified: "2639-fe0f", native: "\u2639\uFE0F" }], version: 1 }, open_mouth: { id: "open_mouth", name: "Face with Open Mouth", emoticons: [":o", ":-o", ":O", ":-O"], keywords: ["surprise", "impressed", "wow", "whoa", ":O"], skins: [{ unified: "1f62e", native: "\u{1F62E}" }], version: 1 }, hushed: { id: "hushed", name: "Hushed Face", keywords: ["woo", "shh"], skins: [{ unified: "1f62f", native: "\u{1F62F}" }], version: 1 }, astonished: { id: "astonished", name: "Astonished Face", keywords: ["xox", "surprised", "poisoned"], skins: [{ unified: "1f632", native: "\u{1F632}" }], version: 1 }, flushed: { id: "flushed", name: "Flushed Face", keywords: ["blush", "shy", "flattered"], skins: [{ unified: "1f633", native: "\u{1F633}" }], version: 1 }, pleading_face: { id: "pleading_face", name: "Pleading Face", keywords: ["begging", "mercy", "cry", "tears", "sad", "grievance"], skins: [{ unified: "1f97a", native: "\u{1F97A}" }], version: 11 }, face_holding_back_tears: { id: "face_holding_back_tears", name: "Face Holding Back Tears", keywords: ["touched", "gratitude", "cry"], skins: [{ unified: "1f979", native: "\u{1F979}" }], version: 14 }, frowning: { id: "frowning", name: "Frowning Face with Open Mouth", keywords: ["aw", "what"], skins: [{ unified: "1f626", native: "\u{1F626}" }], version: 1 }, anguished: { id: "anguished", name: "Anguished Face", emoticons: ["D:"], keywords: ["stunned", "nervous"], skins: [{ unified: "1f627", native: "\u{1F627}" }], version: 1 }, fearful: { id: "fearful", name: "Fearful Face", keywords: ["scared", "terrified", "nervous"], skins: [{ unified: "1f628", native: "\u{1F628}" }], version: 1 }, cold_sweat: { id: "cold_sweat", name: "Anxious Face with Sweat", keywords: ["cold", "nervous"], skins: [{ unified: "1f630", native: "\u{1F630}" }], version: 1 }, disappointed_relieved: { id: "disappointed_relieved", name: "Sad but Relieved Face", keywords: ["disappointed", "phew", "sweat", "nervous"], skins: [{ unified: "1f625", native: "\u{1F625}" }], version: 1 }, cry: { id: "cry", name: "Crying Face", emoticons: [":'("], keywords: ["cry", "tears", "sad", "depressed", "upset", ":'("], skins: [{ unified: "1f622", native: "\u{1F622}" }], version: 1 }, sob: { id: "sob", name: "Loudly Crying Face", emoticons: [":'("], keywords: ["sob", "cry", "tears", "sad", "upset", "depressed"], skins: [{ unified: "1f62d", native: "\u{1F62D}" }], version: 1 }, scream: { id: "scream", name: "Face Screaming in Fear", keywords: ["scream", "munch", "scared", "omg"], skins: [{ unified: "1f631", native: "\u{1F631}" }], version: 1 }, confounded: { id: "confounded", name: "Confounded Face", keywords: ["confused", "sick", "unwell", "oops", ":S"], skins: [{ unified: "1f616", native: "\u{1F616}" }], version: 1 }, persevere: { id: "persevere", name: "Persevering Face", keywords: ["persevere", "sick", "no", "upset", "oops"], skins: [{ unified: "1f623", native: "\u{1F623}" }], version: 1 }, disappointed: { id: "disappointed", name: "Disappointed Face", emoticons: ["):", ":(", ":-("], keywords: ["sad", "upset", "depressed", ":("], skins: [{ unified: "1f61e", native: "\u{1F61E}" }], version: 1 }, sweat: { id: "sweat", name: "Face with Cold Sweat", keywords: ["downcast", "hot", "sad", "tired", "exercise"], skins: [{ unified: "1f613", native: "\u{1F613}" }], version: 1 }, weary: { id: "weary", name: "Weary Face", keywords: ["tired", "sleepy", "sad", "frustrated", "upset"], skins: [{ unified: "1f629", native: "\u{1F629}" }], version: 1 }, tired_face: { id: "tired_face", name: "Tired Face", keywords: ["sick", "whine", "upset", "frustrated"], skins: [{ unified: "1f62b", native: "\u{1F62B}" }], version: 1 }, yawning_face: { id: "yawning_face", name: "Yawning Face", keywords: ["tired", "sleepy"], skins: [{ unified: "1f971", native: "\u{1F971}" }], version: 12 }, triumph: { id: "triumph", name: "Face with Look of Triumph", keywords: ["steam", "from", "nose", "gas", "phew", "proud", "pride"], skins: [{ unified: "1f624", native: "\u{1F624}" }], version: 1 }, rage: { id: "rage", name: "Pouting Face", keywords: ["rage", "angry", "mad", "hate", "despise"], skins: [{ unified: "1f621", native: "\u{1F621}" }], version: 1 }, angry: { id: "angry", name: "Angry Face", emoticons: [">:(", ">:-("], keywords: ["mad", "annoyed", "frustrated"], skins: [{ unified: "1f620", native: "\u{1F620}" }], version: 1 }, face_with_symbols_on_mouth: { id: "face_with_symbols_on_mouth", name: "Face with Symbols on Mouth", keywords: ["serious", "covering", "swearing", "cursing", "cussing", "profanity", "expletive"], skins: [{ unified: "1f92c", native: "\u{1F92C}" }], version: 5 }, smiling_imp: { id: "smiling_imp", name: "Smiling Face with Horns", keywords: ["imp", "devil"], skins: [{ unified: "1f608", native: "\u{1F608}" }], version: 1 }, imp: { id: "imp", name: "Imp", keywords: ["angry", "face", "with", "horns", "devil"], skins: [{ unified: "1f47f", native: "\u{1F47F}" }], version: 1 }, skull: { id: "skull", name: "Skull", keywords: ["dead", "skeleton", "creepy", "death"], skins: [{ unified: "1f480", native: "\u{1F480}" }], version: 1 }, skull_and_crossbones: { id: "skull_and_crossbones", name: "Skull and Crossbones", keywords: ["poison", "danger", "deadly", "scary", "death", "pirate", "evil"], skins: [{ unified: "2620-fe0f", native: "\u2620\uFE0F" }], version: 1 }, hankey: { id: "hankey", name: "Pile of Poo", keywords: ["hankey", "poop", "shit", "shitface", "fail", "turd"], skins: [{ unified: "1f4a9", native: "\u{1F4A9}" }], version: 1 }, clown_face: { id: "clown_face", name: "Clown Face", keywords: [], skins: [{ unified: "1f921", native: "\u{1F921}" }], version: 3 }, japanese_ogre: { id: "japanese_ogre", name: "Ogre", keywords: ["japanese", "monster", "red", "mask", "halloween", "scary", "creepy", "devil", "demon"], skins: [{ unified: "1f479", native: "\u{1F479}" }], version: 1 }, japanese_goblin: { id: "japanese_goblin", name: "Goblin", keywords: ["japanese", "red", "evil", "mask", "monster", "scary", "creepy"], skins: [{ unified: "1f47a", native: "\u{1F47A}" }], version: 1 }, ghost: { id: "ghost", name: "Ghost", keywords: ["halloween", "spooky", "scary"], skins: [{ unified: "1f47b", native: "\u{1F47B}" }], version: 1 }, alien: { id: "alien", name: "Alien", keywords: ["UFO", "paul", "weird", "outer", "space"], skins: [{ unified: "1f47d", native: "\u{1F47D}" }], version: 1 }, space_invader: { id: "space_invader", name: "Alien Monster", keywords: ["space", "invader", "game", "arcade", "play"], skins: [{ unified: "1f47e", native: "\u{1F47E}" }], version: 1 }, robot_face: { id: "robot_face", name: "Robot", keywords: ["face", "computer", "machine", "bot"], skins: [{ unified: "1f916", native: "\u{1F916}" }], version: 1 }, smiley_cat: { id: "smiley_cat", name: "Grinning Cat", keywords: ["smiley", "animal", "cats", "happy", "smile"], skins: [{ unified: "1f63a", native: "\u{1F63A}" }], version: 1 }, smile_cat: { id: "smile_cat", name: "Grinning Cat with Smiling Eyes", keywords: ["smile", "animal", "cats"], skins: [{ unified: "1f638", native: "\u{1F638}" }], version: 1 }, joy_cat: { id: "joy_cat", name: "Cat with Tears of Joy", keywords: ["animal", "cats", "haha", "happy"], skins: [{ unified: "1f639", native: "\u{1F639}" }], version: 1 }, heart_eyes_cat: { id: "heart_eyes_cat", name: "Smiling Cat with Heart-Eyes", keywords: ["heart", "eyes", "animal", "love", "like", "affection", "cats", "valentines"], skins: [{ unified: "1f63b", native: "\u{1F63B}" }], version: 1 }, smirk_cat: { id: "smirk_cat", name: "Cat with Wry Smile", keywords: ["smirk", "animal", "cats"], skins: [{ unified: "1f63c", native: "\u{1F63C}" }], version: 1 }, kissing_cat: { id: "kissing_cat", name: "Kissing Cat", keywords: ["animal", "cats", "kiss"], skins: [{ unified: "1f63d", native: "\u{1F63D}" }], version: 1 }, scream_cat: { id: "scream_cat", name: "Weary Cat", keywords: ["scream", "animal", "cats", "munch", "scared"], skins: [{ unified: "1f640", native: "\u{1F640}" }], version: 1 }, crying_cat_face: { id: "crying_cat_face", name: "Crying Cat", keywords: ["face", "animal", "tears", "weep", "sad", "cats", "upset", "cry"], skins: [{ unified: "1f63f", native: "\u{1F63F}" }], version: 1 }, pouting_cat: { id: "pouting_cat", name: "Pouting Cat", keywords: ["animal", "cats"], skins: [{ unified: "1f63e", native: "\u{1F63E}" }], version: 1 }, see_no_evil: { id: "see_no_evil", name: "See-No-Evil Monkey", keywords: ["see", "no", "evil", "animal", "nature", "haha"], skins: [{ unified: "1f648", native: "\u{1F648}" }], version: 1 }, hear_no_evil: { id: "hear_no_evil", name: "Hear-No-Evil Monkey", keywords: ["hear", "no", "evil", "animal", "nature"], skins: [{ unified: "1f649", native: "\u{1F649}" }], version: 1 }, speak_no_evil: { id: "speak_no_evil", name: "Speak-No-Evil Monkey", keywords: ["speak", "no", "evil", "animal", "nature", "omg"], skins: [{ unified: "1f64a", native: "\u{1F64A}" }], version: 1 }, love_letter: { id: "love_letter", name: "Love Letter", keywords: ["email", "like", "affection", "envelope", "valentines"], skins: [{ unified: "1f48c", native: "\u{1F48C}" }], version: 1 }, cupid: { id: "cupid", name: "Heart with Arrow", keywords: ["cupid", "love", "like", "affection", "valentines"], skins: [{ unified: "1f498", native: "\u{1F498}" }], version: 1 }, gift_heart: { id: "gift_heart", name: "Heart with Ribbon", keywords: ["gift", "love", "valentines"], skins: [{ unified: "1f49d", native: "\u{1F49D}" }], version: 1 }, sparkling_heart: { id: "sparkling_heart", name: "Sparkling Heart", keywords: ["love", "like", "affection", "valentines"], skins: [{ unified: "1f496", native: "\u{1F496}" }], version: 1 }, heartpulse: { id: "heartpulse", name: "Growing Heart", keywords: ["heartpulse", "like", "love", "affection", "valentines", "pink"], skins: [{ unified: "1f497", native: "\u{1F497}" }], version: 1 }, heartbeat: { id: "heartbeat", name: "Beating Heart", keywords: ["heartbeat", "love", "like", "affection", "valentines", "pink"], skins: [{ unified: "1f493", native: "\u{1F493}" }], version: 1 }, revolving_hearts: { id: "revolving_hearts", name: "Revolving Hearts", keywords: ["love", "like", "affection", "valentines"], skins: [{ unified: "1f49e", native: "\u{1F49E}" }], version: 1 }, two_hearts: { id: "two_hearts", name: "Two Hearts", keywords: ["love", "like", "affection", "valentines", "heart"], skins: [{ unified: "1f495", native: "\u{1F495}" }], version: 1 }, heart_decoration: { id: "heart_decoration", name: "Heart Decoration", keywords: ["purple", "square", "love", "like"], skins: [{ unified: "1f49f", native: "\u{1F49F}" }], version: 1 }, heavy_heart_exclamation_mark_ornament: { id: "heavy_heart_exclamation_mark_ornament", name: "Heart Exclamation", keywords: ["heavy", "mark", "ornament", "decoration", "love"], skins: [{ unified: "2763-fe0f", native: "\u2763\uFE0F" }], version: 1 }, broken_heart: { id: "broken_heart", name: "Broken Heart", emoticons: ["</3"], keywords: ["sad", "sorry", "break", "heartbreak"], skins: [{ unified: "1f494", native: "\u{1F494}" }], version: 1 }, heart_on_fire: { id: "heart_on_fire", name: "Heart on Fire", keywords: ["passionate", "enthusiastic"], skins: [{ unified: "2764-fe0f-200d-1f525", native: "\u2764\uFE0F\u200D\u{1F525}" }], version: 13.1 }, mending_heart: { id: "mending_heart", name: "Mending Heart", keywords: ["broken", "bandage", "wounded"], skins: [{ unified: "2764-fe0f-200d-1fa79", native: "\u2764\uFE0F\u200D\u{1FA79}" }], version: 13.1 }, heart: { id: "heart", name: "Red Heart", emoticons: ["<3"], keywords: ["love", "like", "valentines"], skins: [{ unified: "2764-fe0f", native: "\u2764\uFE0F" }], version: 1 }, pink_heart: { id: "pink_heart", name: "Pink Heart", keywords: ["valentines"], skins: [{ unified: "1fa77", native: "\u{1FA77}" }], version: 15 }, orange_heart: { id: "orange_heart", name: "Orange Heart", keywords: ["love", "like", "affection", "valentines"], skins: [{ unified: "1f9e1", native: "\u{1F9E1}" }], version: 5 }, yellow_heart: { id: "yellow_heart", name: "Yellow Heart", emoticons: ["<3"], keywords: ["love", "like", "affection", "valentines"], skins: [{ unified: "1f49b", native: "\u{1F49B}" }], version: 1 }, green_heart: { id: "green_heart", name: "Green Heart", emoticons: ["<3"], keywords: ["love", "like", "affection", "valentines"], skins: [{ unified: "1f49a", native: "\u{1F49A}" }], version: 1 }, blue_heart: { id: "blue_heart", name: "Blue Heart", emoticons: ["<3"], keywords: ["love", "like", "affection", "valentines"], skins: [{ unified: "1f499", native: "\u{1F499}" }], version: 1 }, light_blue_heart: { id: "light_blue_heart", name: "Light Blue Heart", keywords: ["ice", "baby"], skins: [{ unified: "1fa75", native: "\u{1FA75}" }], version: 15 }, purple_heart: { id: "purple_heart", name: "Purple Heart", emoticons: ["<3"], keywords: ["love", "like", "affection", "valentines"], skins: [{ unified: "1f49c", native: "\u{1F49C}" }], version: 1 }, brown_heart: { id: "brown_heart", name: "Brown Heart", keywords: ["coffee"], skins: [{ unified: "1f90e", native: "\u{1F90E}" }], version: 12 }, black_heart: { id: "black_heart", name: "Black Heart", keywords: ["evil"], skins: [{ unified: "1f5a4", native: "\u{1F5A4}" }], version: 3 }, grey_heart: { id: "grey_heart", name: "Grey Heart", keywords: ["silver", "monochrome"], skins: [{ unified: "1fa76", native: "\u{1FA76}" }], version: 15 }, white_heart: { id: "white_heart", name: "White Heart", keywords: ["pure"], skins: [{ unified: "1f90d", native: "\u{1F90D}" }], version: 12 }, kiss: { id: "kiss", name: "Kiss Mark", keywords: ["face", "lips", "love", "like", "affection", "valentines"], skins: [{ unified: "1f48b", native: "\u{1F48B}" }], version: 1 }, anger: { id: "anger", name: "Anger Symbol", keywords: ["angry", "mad"], skins: [{ unified: "1f4a2", native: "\u{1F4A2}" }], version: 1 }, boom: { id: "boom", name: "Collision", keywords: ["boom", "bomb", "explode", "explosion", "blown"], skins: [{ unified: "1f4a5", native: "\u{1F4A5}" }], version: 1 }, dizzy: { id: "dizzy", name: "Dizzy", keywords: ["star", "sparkle", "shoot", "magic"], skins: [{ unified: "1f4ab", native: "\u{1F4AB}" }], version: 1 }, sweat_drops: { id: "sweat_drops", name: "Sweat Droplets", keywords: ["drops", "water", "drip", "oops"], skins: [{ unified: "1f4a6", native: "\u{1F4A6}" }], version: 1 }, dash: { id: "dash", name: "Dash Symbol", keywords: ["dashing", "away", "wind", "air", "fast", "shoo", "fart", "smoke", "puff"], skins: [{ unified: "1f4a8", native: "\u{1F4A8}" }], version: 1 }, hole: { id: "hole", name: "Hole", keywords: ["embarrassing"], skins: [{ unified: "1f573-fe0f", native: "\u{1F573}\uFE0F" }], version: 1 }, speech_balloon: { id: "speech_balloon", name: "Speech Balloon", keywords: ["bubble", "words", "message", "talk", "chatting"], skins: [{ unified: "1f4ac", native: "\u{1F4AC}" }], version: 1 }, "eye-in-speech-bubble": { id: "eye-in-speech-bubble", name: "Eye in Speech Bubble", keywords: ["in-speech-bubble", "info"], skins: [{ unified: "1f441-fe0f-200d-1f5e8-fe0f", native: "\u{1F441}\uFE0F\u200D\u{1F5E8}\uFE0F" }], version: 2 }, left_speech_bubble: { id: "left_speech_bubble", name: "Left Speech Bubble", keywords: ["words", "message", "talk", "chatting"], skins: [{ unified: "1f5e8-fe0f", native: "\u{1F5E8}\uFE0F" }], version: 2 }, right_anger_bubble: { id: "right_anger_bubble", name: "Right Anger Bubble", keywords: ["caption", "speech", "thinking", "mad"], skins: [{ unified: "1f5ef-fe0f", native: "\u{1F5EF}\uFE0F" }], version: 1 }, thought_balloon: { id: "thought_balloon", name: "Thought Balloon", keywords: ["bubble", "cloud", "speech", "thinking", "dream"], skins: [{ unified: "1f4ad", native: "\u{1F4AD}" }], version: 1 }, zzz: { id: "zzz", name: "Zzz", keywords: ["sleepy", "tired", "dream"], skins: [{ unified: "1f4a4", native: "\u{1F4A4}" }], version: 1 }, wave: { id: "wave", name: "Waving Hand", keywords: ["wave", "hands", "gesture", "goodbye", "solong", "farewell", "hello", "hi", "palm"], skins: [{ unified: "1f44b", native: "\u{1F44B}" }, { unified: "1f44b-1f3fb", native: "\u{1F44B}\u{1F3FB}" }, { unified: "1f44b-1f3fc", native: "\u{1F44B}\u{1F3FC}" }, { unified: "1f44b-1f3fd", native: "\u{1F44B}\u{1F3FD}" }, { unified: "1f44b-1f3fe", native: "\u{1F44B}\u{1F3FE}" }, { unified: "1f44b-1f3ff", native: "\u{1F44B}\u{1F3FF}" }], version: 1 }, raised_back_of_hand: { id: "raised_back_of_hand", name: "Raised Back of Hand", keywords: ["fingers", "backhand"], skins: [{ unified: "1f91a", native: "\u{1F91A}" }, { unified: "1f91a-1f3fb", native: "\u{1F91A}\u{1F3FB}" }, { unified: "1f91a-1f3fc", native: "\u{1F91A}\u{1F3FC}" }, { unified: "1f91a-1f3fd", native: "\u{1F91A}\u{1F3FD}" }, { unified: "1f91a-1f3fe", native: "\u{1F91A}\u{1F3FE}" }, { unified: "1f91a-1f3ff", native: "\u{1F91A}\u{1F3FF}" }], version: 3 }, raised_hand_with_fingers_splayed: { id: "raised_hand_with_fingers_splayed", name: "Hand with Fingers Splayed", keywords: ["raised", "palm"], skins: [{ unified: "1f590-fe0f", native: "\u{1F590}\uFE0F" }, { unified: "1f590-1f3fb", native: "\u{1F590}\u{1F3FB}" }, { unified: "1f590-1f3fc", native: "\u{1F590}\u{1F3FC}" }, { unified: "1f590-1f3fd", native: "\u{1F590}\u{1F3FD}" }, { unified: "1f590-1f3fe", native: "\u{1F590}\u{1F3FE}" }, { unified: "1f590-1f3ff", native: "\u{1F590}\u{1F3FF}" }], version: 1 }, hand: { id: "hand", name: "Raised Hand", keywords: ["fingers", "stop", "highfive", "high", "five", "palm", "ban"], skins: [{ unified: "270b", native: "\u270B" }, { unified: "270b-1f3fb", native: "\u270B\u{1F3FB}" }, { unified: "270b-1f3fc", native: "\u270B\u{1F3FC}" }, { unified: "270b-1f3fd", native: "\u270B\u{1F3FD}" }, { unified: "270b-1f3fe", native: "\u270B\u{1F3FE}" }, { unified: "270b-1f3ff", native: "\u270B\u{1F3FF}" }], version: 1 }, "spock-hand": { id: "spock-hand", name: "Vulcan Salute", keywords: ["spock", "hand", "fingers", "star", "trek"], skins: [{ unified: "1f596", native: "\u{1F596}" }, { unified: "1f596-1f3fb", native: "\u{1F596}\u{1F3FB}" }, { unified: "1f596-1f3fc", native: "\u{1F596}\u{1F3FC}" }, { unified: "1f596-1f3fd", native: "\u{1F596}\u{1F3FD}" }, { unified: "1f596-1f3fe", native: "\u{1F596}\u{1F3FE}" }, { unified: "1f596-1f3ff", native: "\u{1F596}\u{1F3FF}" }], version: 1 }, rightwards_hand: { id: "rightwards_hand", name: "Rightwards Hand", keywords: ["palm", "offer"], skins: [{ unified: "1faf1", native: "\u{1FAF1}" }, { unified: "1faf1-1f3fb", native: "\u{1FAF1}\u{1F3FB}" }, { unified: "1faf1-1f3fc", native: "\u{1FAF1}\u{1F3FC}" }, { unified: "1faf1-1f3fd", native: "\u{1FAF1}\u{1F3FD}" }, { unified: "1faf1-1f3fe", native: "\u{1FAF1}\u{1F3FE}" }, { unified: "1faf1-1f3ff", native: "\u{1FAF1}\u{1F3FF}" }], version: 14 }, leftwards_hand: { id: "leftwards_hand", name: "Leftwards Hand", keywords: ["palm", "offer"], skins: [{ unified: "1faf2", native: "\u{1FAF2}" }, { unified: "1faf2-1f3fb", native: "\u{1FAF2}\u{1F3FB}" }, { unified: "1faf2-1f3fc", native: "\u{1FAF2}\u{1F3FC}" }, { unified: "1faf2-1f3fd", native: "\u{1FAF2}\u{1F3FD}" }, { unified: "1faf2-1f3fe", native: "\u{1FAF2}\u{1F3FE}" }, { unified: "1faf2-1f3ff", native: "\u{1FAF2}\u{1F3FF}" }], version: 14 }, palm_down_hand: { id: "palm_down_hand", name: "Palm Down Hand", keywords: ["drop"], skins: [{ unified: "1faf3", native: "\u{1FAF3}" }, { unified: "1faf3-1f3fb", native: "\u{1FAF3}\u{1F3FB}" }, { unified: "1faf3-1f3fc", native: "\u{1FAF3}\u{1F3FC}" }, { unified: "1faf3-1f3fd", native: "\u{1FAF3}\u{1F3FD}" }, { unified: "1faf3-1f3fe", native: "\u{1FAF3}\u{1F3FE}" }, { unified: "1faf3-1f3ff", native: "\u{1FAF3}\u{1F3FF}" }], version: 14 }, palm_up_hand: { id: "palm_up_hand", name: "Palm Up Hand", keywords: ["lift", "offer", "demand"], skins: [{ unified: "1faf4", native: "\u{1FAF4}" }, { unified: "1faf4-1f3fb", native: "\u{1FAF4}\u{1F3FB}" }, { unified: "1faf4-1f3fc", native: "\u{1FAF4}\u{1F3FC}" }, { unified: "1faf4-1f3fd", native: "\u{1FAF4}\u{1F3FD}" }, { unified: "1faf4-1f3fe", native: "\u{1FAF4}\u{1F3FE}" }, { unified: "1faf4-1f3ff", native: "\u{1FAF4}\u{1F3FF}" }], version: 14 }, leftwards_pushing_hand: { id: "leftwards_pushing_hand", name: "Leftwards Pushing Hand", keywords: ["highfive", "high", "five", "pressing", "stop"], skins: [{ unified: "1faf7", native: "\u{1FAF7}" }, { unified: "1faf7-1f3fb", native: "\u{1FAF7}\u{1F3FB}" }, { unified: "1faf7-1f3fc", native: "\u{1FAF7}\u{1F3FC}" }, { unified: "1faf7-1f3fd", native: "\u{1FAF7}\u{1F3FD}" }, { unified: "1faf7-1f3fe", native: "\u{1FAF7}\u{1F3FE}" }, { unified: "1faf7-1f3ff", native: "\u{1FAF7}\u{1F3FF}" }], version: 15 }, rightwards_pushing_hand: { id: "rightwards_pushing_hand", name: "Rightwards Pushing Hand", keywords: ["highfive", "high", "five", "pressing", "stop"], skins: [{ unified: "1faf8", native: "\u{1FAF8}" }, { unified: "1faf8-1f3fb", native: "\u{1FAF8}\u{1F3FB}" }, { unified: "1faf8-1f3fc", native: "\u{1FAF8}\u{1F3FC}" }, { unified: "1faf8-1f3fd", native: "\u{1FAF8}\u{1F3FD}" }, { unified: "1faf8-1f3fe", native: "\u{1FAF8}\u{1F3FE}" }, { unified: "1faf8-1f3ff", native: "\u{1FAF8}\u{1F3FF}" }], version: 15 }, ok_hand: { id: "ok_hand", name: "Ok Hand", keywords: ["fingers", "limbs", "perfect", "okay"], skins: [{ unified: "1f44c", native: "\u{1F44C}" }, { unified: "1f44c-1f3fb", native: "\u{1F44C}\u{1F3FB}" }, { unified: "1f44c-1f3fc", native: "\u{1F44C}\u{1F3FC}" }, { unified: "1f44c-1f3fd", native: "\u{1F44C}\u{1F3FD}" }, { unified: "1f44c-1f3fe", native: "\u{1F44C}\u{1F3FE}" }, { unified: "1f44c-1f3ff", native: "\u{1F44C}\u{1F3FF}" }], version: 1 }, pinched_fingers: { id: "pinched_fingers", name: "Pinched Fingers", keywords: ["size", "tiny", "small"], skins: [{ unified: "1f90c", native: "\u{1F90C}" }, { unified: "1f90c-1f3fb", native: "\u{1F90C}\u{1F3FB}" }, { unified: "1f90c-1f3fc", native: "\u{1F90C}\u{1F3FC}" }, { unified: "1f90c-1f3fd", native: "\u{1F90C}\u{1F3FD}" }, { unified: "1f90c-1f3fe", native: "\u{1F90C}\u{1F3FE}" }, { unified: "1f90c-1f3ff", native: "\u{1F90C}\u{1F3FF}" }], version: 13 }, pinching_hand: { id: "pinching_hand", name: "Pinching Hand", keywords: ["tiny", "small", "size"], skins: [{ unified: "1f90f", native: "\u{1F90F}" }, { unified: "1f90f-1f3fb", native: "\u{1F90F}\u{1F3FB}" }, { unified: "1f90f-1f3fc", native: "\u{1F90F}\u{1F3FC}" }, { unified: "1f90f-1f3fd", native: "\u{1F90F}\u{1F3FD}" }, { unified: "1f90f-1f3fe", native: "\u{1F90F}\u{1F3FE}" }, { unified: "1f90f-1f3ff", native: "\u{1F90F}\u{1F3FF}" }], version: 12 }, v: { id: "v", name: "Victory Hand", keywords: ["v", "fingers", "ohyeah", "peace", "two"], skins: [{ unified: "270c-fe0f", native: "\u270C\uFE0F" }, { unified: "270c-1f3fb", native: "\u270C\u{1F3FB}" }, { unified: "270c-1f3fc", native: "\u270C\u{1F3FC}" }, { unified: "270c-1f3fd", native: "\u270C\u{1F3FD}" }, { unified: "270c-1f3fe", native: "\u270C\u{1F3FE}" }, { unified: "270c-1f3ff", native: "\u270C\u{1F3FF}" }], version: 1 }, crossed_fingers: { id: "crossed_fingers", name: "Crossed Fingers", keywords: ["hand", "with", "index", "and", "middle", "good", "lucky"], skins: [{ unified: "1f91e", native: "\u{1F91E}" }, { unified: "1f91e-1f3fb", native: "\u{1F91E}\u{1F3FB}" }, { unified: "1f91e-1f3fc", native: "\u{1F91E}\u{1F3FC}" }, { unified: "1f91e-1f3fd", native: "\u{1F91E}\u{1F3FD}" }, { unified: "1f91e-1f3fe", native: "\u{1F91E}\u{1F3FE}" }, { unified: "1f91e-1f3ff", native: "\u{1F91E}\u{1F3FF}" }], version: 3 }, hand_with_index_finger_and_thumb_crossed: { id: "hand_with_index_finger_and_thumb_crossed", name: "Hand with Index Finger and Thumb Crossed", keywords: ["heart", "love", "money", "expensive"], skins: [{ unified: "1faf0", native: "\u{1FAF0}" }, { unified: "1faf0-1f3fb", native: "\u{1FAF0}\u{1F3FB}" }, { unified: "1faf0-1f3fc", native: "\u{1FAF0}\u{1F3FC}" }, { unified: "1faf0-1f3fd", native: "\u{1FAF0}\u{1F3FD}" }, { unified: "1faf0-1f3fe", native: "\u{1FAF0}\u{1F3FE}" }, { unified: "1faf0-1f3ff", native: "\u{1FAF0}\u{1F3FF}" }], version: 14 }, i_love_you_hand_sign: { id: "i_love_you_hand_sign", name: "Love-You Gesture", keywords: ["i", "love", "you", "hand", "sign", "fingers"], skins: [{ unified: "1f91f", native: "\u{1F91F}" }, { unified: "1f91f-1f3fb", native: "\u{1F91F}\u{1F3FB}" }, { unified: "1f91f-1f3fc", native: "\u{1F91F}\u{1F3FC}" }, { unified: "1f91f-1f3fd", native: "\u{1F91F}\u{1F3FD}" }, { unified: "1f91f-1f3fe", native: "\u{1F91F}\u{1F3FE}" }, { unified: "1f91f-1f3ff", native: "\u{1F91F}\u{1F3FF}" }], version: 5 }, the_horns: { id: "the_horns", name: "Sign of the Horns", keywords: ["hand", "fingers", "evil", "eye", "rock", "on"], skins: [{ unified: "1f918", native: "\u{1F918}" }, { unified: "1f918-1f3fb", native: "\u{1F918}\u{1F3FB}" }, { unified: "1f918-1f3fc", native: "\u{1F918}\u{1F3FC}" }, { unified: "1f918-1f3fd", native: "\u{1F918}\u{1F3FD}" }, { unified: "1f918-1f3fe", native: "\u{1F918}\u{1F3FE}" }, { unified: "1f918-1f3ff", native: "\u{1F918}\u{1F3FF}" }], version: 1 }, call_me_hand: { id: "call_me_hand", name: "Call Me Hand", keywords: ["hands", "gesture", "shaka"], skins: [{ unified: "1f919", native: "\u{1F919}" }, { unified: "1f919-1f3fb", native: "\u{1F919}\u{1F3FB}" }, { unified: "1f919-1f3fc", native: "\u{1F919}\u{1F3FC}" }, { unified: "1f919-1f3fd", native: "\u{1F919}\u{1F3FD}" }, { unified: "1f919-1f3fe", native: "\u{1F919}\u{1F3FE}" }, { unified: "1f919-1f3ff", native: "\u{1F919}\u{1F3FF}" }], version: 3 }, point_left: { id: "point_left", name: "Backhand Index Pointing Left", keywords: ["point", "direction", "fingers", "hand"], skins: [{ unified: "1f448", native: "\u{1F448}" }, { unified: "1f448-1f3fb", native: "\u{1F448}\u{1F3FB}" }, { unified: "1f448-1f3fc", native: "\u{1F448}\u{1F3FC}" }, { unified: "1f448-1f3fd", native: "\u{1F448}\u{1F3FD}" }, { unified: "1f448-1f3fe", native: "\u{1F448}\u{1F3FE}" }, { unified: "1f448-1f3ff", native: "\u{1F448}\u{1F3FF}" }], version: 1 }, point_right: { id: "point_right", name: "Backhand Index Pointing Right", keywords: ["point", "fingers", "hand", "direction"], skins: [{ unified: "1f449", native: "\u{1F449}" }, { unified: "1f449-1f3fb", native: "\u{1F449}\u{1F3FB}" }, { unified: "1f449-1f3fc", native: "\u{1F449}\u{1F3FC}" }, { unified: "1f449-1f3fd", native: "\u{1F449}\u{1F3FD}" }, { unified: "1f449-1f3fe", native: "\u{1F449}\u{1F3FE}" }, { unified: "1f449-1f3ff", native: "\u{1F449}\u{1F3FF}" }], version: 1 }, point_up_2: { id: "point_up_2", name: "Backhand Index Pointing Up", keywords: ["point", "2", "fingers", "hand", "direction"], skins: [{ unified: "1f446", native: "\u{1F446}" }, { unified: "1f446-1f3fb", native: "\u{1F446}\u{1F3FB}" }, { unified: "1f446-1f3fc", native: "\u{1F446}\u{1F3FC}" }, { unified: "1f446-1f3fd", native: "\u{1F446}\u{1F3FD}" }, { unified: "1f446-1f3fe", native: "\u{1F446}\u{1F3FE}" }, { unified: "1f446-1f3ff", native: "\u{1F446}\u{1F3FF}" }], version: 1 }, middle_finger: { id: "middle_finger", name: "Middle Finger", keywords: ["reversed", "hand", "with", "extended", "fingers", "rude", "flipping"], skins: [{ unified: "1f595", native: "\u{1F595}" }, { unified: "1f595-1f3fb", native: "\u{1F595}\u{1F3FB}" }, { unified: "1f595-1f3fc", native: "\u{1F595}\u{1F3FC}" }, { unified: "1f595-1f3fd", native: "\u{1F595}\u{1F3FD}" }, { unified: "1f595-1f3fe", native: "\u{1F595}\u{1F3FE}" }, { unified: "1f595-1f3ff", native: "\u{1F595}\u{1F3FF}" }], version: 1 }, point_down: { id: "point_down", name: "Backhand Index Pointing Down", keywords: ["point", "fingers", "hand", "direction"], skins: [{ unified: "1f447", native: "\u{1F447}" }, { unified: "1f447-1f3fb", native: "\u{1F447}\u{1F3FB}" }, { unified: "1f447-1f3fc", native: "\u{1F447}\u{1F3FC}" }, { unified: "1f447-1f3fd", native: "\u{1F447}\u{1F3FD}" }, { unified: "1f447-1f3fe", native: "\u{1F447}\u{1F3FE}" }, { unified: "1f447-1f3ff", native: "\u{1F447}\u{1F3FF}" }], version: 1 }, point_up: { id: "point_up", name: "Index Pointing Up", keywords: ["point", "hand", "fingers", "direction"], skins: [{ unified: "261d-fe0f", native: "\u261D\uFE0F" }, { unified: "261d-1f3fb", native: "\u261D\u{1F3FB}" }, { unified: "261d-1f3fc", native: "\u261D\u{1F3FC}" }, { unified: "261d-1f3fd", native: "\u261D\u{1F3FD}" }, { unified: "261d-1f3fe", native: "\u261D\u{1F3FE}" }, { unified: "261d-1f3ff", native: "\u261D\u{1F3FF}" }], version: 1 }, index_pointing_at_the_viewer: { id: "index_pointing_at_the_viewer", name: "Index Pointing at the Viewer", keywords: ["you", "recruit"], skins: [{ unified: "1faf5", native: "\u{1FAF5}" }, { unified: "1faf5-1f3fb", native: "\u{1FAF5}\u{1F3FB}" }, { unified: "1faf5-1f3fc", native: "\u{1FAF5}\u{1F3FC}" }, { unified: "1faf5-1f3fd", native: "\u{1FAF5}\u{1F3FD}" }, { unified: "1faf5-1f3fe", native: "\u{1FAF5}\u{1F3FE}" }, { unified: "1faf5-1f3ff", native: "\u{1FAF5}\u{1F3FF}" }], version: 14 }, "+1": { id: "+1", name: "Thumbs Up", keywords: ["+1", "thumbsup", "yes", "awesome", "good", "agree", "accept", "cool", "hand", "like"], skins: [{ unified: "1f44d", native: "\u{1F44D}" }, { unified: "1f44d-1f3fb", native: "\u{1F44D}\u{1F3FB}" }, { unified: "1f44d-1f3fc", native: "\u{1F44D}\u{1F3FC}" }, { unified: "1f44d-1f3fd", native: "\u{1F44D}\u{1F3FD}" }, { unified: "1f44d-1f3fe", native: "\u{1F44D}\u{1F3FE}" }, { unified: "1f44d-1f3ff", native: "\u{1F44D}\u{1F3FF}" }], version: 1 }, "-1": { id: "-1", name: "Thumbs Down", keywords: ["-1", "thumbsdown", "no", "dislike", "hand"], skins: [{ unified: "1f44e", native: "\u{1F44E}" }, { unified: "1f44e-1f3fb", native: "\u{1F44E}\u{1F3FB}" }, { unified: "1f44e-1f3fc", native: "\u{1F44E}\u{1F3FC}" }, { unified: "1f44e-1f3fd", native: "\u{1F44E}\u{1F3FD}" }, { unified: "1f44e-1f3fe", native: "\u{1F44E}\u{1F3FE}" }, { unified: "1f44e-1f3ff", native: "\u{1F44E}\u{1F3FF}" }], version: 1 }, fist: { id: "fist", name: "Raised Fist", keywords: ["fingers", "hand", "grasp"], skins: [{ unified: "270a", native: "\u270A" }, { unified: "270a-1f3fb", native: "\u270A\u{1F3FB}" }, { unified: "270a-1f3fc", native: "\u270A\u{1F3FC}" }, { unified: "270a-1f3fd", native: "\u270A\u{1F3FD}" }, { unified: "270a-1f3fe", native: "\u270A\u{1F3FE}" }, { unified: "270a-1f3ff", native: "\u270A\u{1F3FF}" }], version: 1 }, facepunch: { id: "facepunch", name: "Oncoming Fist", keywords: ["facepunch", "punch", "angry", "violence", "hit", "attack", "hand"], skins: [{ unified: "1f44a", native: "\u{1F44A}" }, { unified: "1f44a-1f3fb", native: "\u{1F44A}\u{1F3FB}" }, { unified: "1f44a-1f3fc", native: "\u{1F44A}\u{1F3FC}" }, { unified: "1f44a-1f3fd", native: "\u{1F44A}\u{1F3FD}" }, { unified: "1f44a-1f3fe", native: "\u{1F44A}\u{1F3FE}" }, { unified: "1f44a-1f3ff", native: "\u{1F44A}\u{1F3FF}" }], version: 1 }, "left-facing_fist": { id: "left-facing_fist", name: "Left-Facing Fist", keywords: ["left", "facing", "hand", "fistbump"], skins: [{ unified: "1f91b", native: "\u{1F91B}" }, { unified: "1f91b-1f3fb", native: "\u{1F91B}\u{1F3FB}" }, { unified: "1f91b-1f3fc", native: "\u{1F91B}\u{1F3FC}" }, { unified: "1f91b-1f3fd", native: "\u{1F91B}\u{1F3FD}" }, { unified: "1f91b-1f3fe", native: "\u{1F91B}\u{1F3FE}" }, { unified: "1f91b-1f3ff", native: "\u{1F91B}\u{1F3FF}" }], version: 3 }, "right-facing_fist": { id: "right-facing_fist", name: "Right-Facing Fist", keywords: ["right", "facing", "hand", "fistbump"], skins: [{ unified: "1f91c", native: "\u{1F91C}" }, { unified: "1f91c-1f3fb", native: "\u{1F91C}\u{1F3FB}" }, { unified: "1f91c-1f3fc", native: "\u{1F91C}\u{1F3FC}" }, { unified: "1f91c-1f3fd", native: "\u{1F91C}\u{1F3FD}" }, { unified: "1f91c-1f3fe", native: "\u{1F91C}\u{1F3FE}" }, { unified: "1f91c-1f3ff", native: "\u{1F91C}\u{1F3FF}" }], version: 3 }, clap: { id: "clap", name: "Clapping Hands", keywords: ["clap", "praise", "applause", "congrats", "yay"], skins: [{ unified: "1f44f", native: "\u{1F44F}" }, { unified: "1f44f-1f3fb", native: "\u{1F44F}\u{1F3FB}" }, { unified: "1f44f-1f3fc", native: "\u{1F44F}\u{1F3FC}" }, { unified: "1f44f-1f3fd", native: "\u{1F44F}\u{1F3FD}" }, { unified: "1f44f-1f3fe", native: "\u{1F44F}\u{1F3FE}" }, { unified: "1f44f-1f3ff", native: "\u{1F44F}\u{1F3FF}" }], version: 1 }, raised_hands: { id: "raised_hands", name: "Raising Hands", keywords: ["raised", "gesture", "hooray", "yea", "celebration"], skins: [{ unified: "1f64c", native: "\u{1F64C}" }, { unified: "1f64c-1f3fb", native: "\u{1F64C}\u{1F3FB}" }, { unified: "1f64c-1f3fc", native: "\u{1F64C}\u{1F3FC}" }, { unified: "1f64c-1f3fd", native: "\u{1F64C}\u{1F3FD}" }, { unified: "1f64c-1f3fe", native: "\u{1F64C}\u{1F3FE}" }, { unified: "1f64c-1f3ff", native: "\u{1F64C}\u{1F3FF}" }], version: 1 }, heart_hands: { id: "heart_hands", name: "Heart Hands", keywords: ["love", "appreciation", "support"], skins: [{ unified: "1faf6", native: "\u{1FAF6}" }, { unified: "1faf6-1f3fb", native: "\u{1FAF6}\u{1F3FB}" }, { unified: "1faf6-1f3fc", native: "\u{1FAF6}\u{1F3FC}" }, { unified: "1faf6-1f3fd", native: "\u{1FAF6}\u{1F3FD}" }, { unified: "1faf6-1f3fe", native: "\u{1FAF6}\u{1F3FE}" }, { unified: "1faf6-1f3ff", native: "\u{1FAF6}\u{1F3FF}" }], version: 14 }, open_hands: { id: "open_hands", name: "Open Hands", keywords: ["fingers", "butterfly"], skins: [{ unified: "1f450", native: "\u{1F450}" }, { unified: "1f450-1f3fb", native: "\u{1F450}\u{1F3FB}" }, { unified: "1f450-1f3fc", native: "\u{1F450}\u{1F3FC}" }, { unified: "1f450-1f3fd", native: "\u{1F450}\u{1F3FD}" }, { unified: "1f450-1f3fe", native: "\u{1F450}\u{1F3FE}" }, { unified: "1f450-1f3ff", native: "\u{1F450}\u{1F3FF}" }], version: 1 }, palms_up_together: { id: "palms_up_together", name: "Palms Up Together", keywords: ["hands", "gesture", "cupped", "prayer"], skins: [{ unified: "1f932", native: "\u{1F932}" }, { unified: "1f932-1f3fb", native: "\u{1F932}\u{1F3FB}" }, { unified: "1f932-1f3fc", native: "\u{1F932}\u{1F3FC}" }, { unified: "1f932-1f3fd", native: "\u{1F932}\u{1F3FD}" }, { unified: "1f932-1f3fe", native: "\u{1F932}\u{1F3FE}" }, { unified: "1f932-1f3ff", native: "\u{1F932}\u{1F3FF}" }], version: 5 }, handshake: { id: "handshake", name: "Handshake", keywords: ["agreement", "shake"], skins: [{ unified: "1f91d", native: "\u{1F91D}" }, { unified: "1f91d-1f3fb", native: "\u{1F91D}\u{1F3FB}" }, { unified: "1f91d-1f3fc", native: "\u{1F91D}\u{1F3FC}" }, { unified: "1f91d-1f3fd", native: "\u{1F91D}\u{1F3FD}" }, { unified: "1f91d-1f3fe", native: "\u{1F91D}\u{1F3FE}" }, { unified: "1f91d-1f3ff", native: "\u{1F91D}\u{1F3FF}" }], version: 3 }, pray: { id: "pray", name: "Folded Hands", keywords: ["pray", "please", "hope", "wish", "namaste", "highfive", "high", "five", "thank", "you", "thanks", "appreciate"], skins: [{ unified: "1f64f", native: "\u{1F64F}" }, { unified: "1f64f-1f3fb", native: "\u{1F64F}\u{1F3FB}" }, { unified: "1f64f-1f3fc", native: "\u{1F64F}\u{1F3FC}" }, { unified: "1f64f-1f3fd", native: "\u{1F64F}\u{1F3FD}" }, { unified: "1f64f-1f3fe", native: "\u{1F64F}\u{1F3FE}" }, { unified: "1f64f-1f3ff", native: "\u{1F64F}\u{1F3FF}" }], version: 1 }, writing_hand: { id: "writing_hand", name: "Writing Hand", keywords: ["lower", "left", "ballpoint", "pen", "stationery", "write", "compose"], skins: [{ unified: "270d-fe0f", native: "\u270D\uFE0F" }, { unified: "270d-1f3fb", native: "\u270D\u{1F3FB}" }, { unified: "270d-1f3fc", native: "\u270D\u{1F3FC}" }, { unified: "270d-1f3fd", native: "\u270D\u{1F3FD}" }, { unified: "270d-1f3fe", native: "\u270D\u{1F3FE}" }, { unified: "270d-1f3ff", native: "\u270D\u{1F3FF}" }], version: 1 }, nail_care: { id: "nail_care", name: "Nail Polish", keywords: ["care", "beauty", "manicure", "finger", "fashion"], skins: [{ unified: "1f485", native: "\u{1F485}" }, { unified: "1f485-1f3fb", native: "\u{1F485}\u{1F3FB}" }, { unified: "1f485-1f3fc", native: "\u{1F485}\u{1F3FC}" }, { unified: "1f485-1f3fd", native: "\u{1F485}\u{1F3FD}" }, { unified: "1f485-1f3fe", native: "\u{1F485}\u{1F3FE}" }, { unified: "1f485-1f3ff", native: "\u{1F485}\u{1F3FF}" }], version: 1 }, selfie: { id: "selfie", name: "Selfie", keywords: ["camera", "phone"], skins: [{ unified: "1f933", native: "\u{1F933}" }, { unified: "1f933-1f3fb", native: "\u{1F933}\u{1F3FB}" }, { unified: "1f933-1f3fc", native: "\u{1F933}\u{1F3FC}" }, { unified: "1f933-1f3fd", native: "\u{1F933}\u{1F3FD}" }, { unified: "1f933-1f3fe", native: "\u{1F933}\u{1F3FE}" }, { unified: "1f933-1f3ff", native: "\u{1F933}\u{1F3FF}" }], version: 3 }, muscle: { id: "muscle", name: "Flexed Biceps", keywords: ["muscle", "arm", "flex", "hand", "summer", "strong"], skins: [{ unified: "1f4aa", native: "\u{1F4AA}" }, { unified: "1f4aa-1f3fb", native: "\u{1F4AA}\u{1F3FB}" }, { unified: "1f4aa-1f3fc", native: "\u{1F4AA}\u{1F3FC}" }, { unified: "1f4aa-1f3fd", native: "\u{1F4AA}\u{1F3FD}" }, { unified: "1f4aa-1f3fe", native: "\u{1F4AA}\u{1F3FE}" }, { unified: "1f4aa-1f3ff", native: "\u{1F4AA}\u{1F3FF}" }], version: 1 }, mechanical_arm: { id: "mechanical_arm", name: "Mechanical Arm", keywords: ["accessibility"], skins: [{ unified: "1f9be", native: "\u{1F9BE}" }], version: 12 }, mechanical_leg: { id: "mechanical_leg", name: "Mechanical Leg", keywords: ["accessibility"], skins: [{ unified: "1f9bf", native: "\u{1F9BF}" }], version: 12 }, leg: { id: "leg", name: "Leg", keywords: ["kick", "limb"], skins: [{ unified: "1f9b5", native: "\u{1F9B5}" }, { unified: "1f9b5-1f3fb", native: "\u{1F9B5}\u{1F3FB}" }, { unified: "1f9b5-1f3fc", native: "\u{1F9B5}\u{1F3FC}" }, { unified: "1f9b5-1f3fd", native: "\u{1F9B5}\u{1F3FD}" }, { unified: "1f9b5-1f3fe", native: "\u{1F9B5}\u{1F3FE}" }, { unified: "1f9b5-1f3ff", native: "\u{1F9B5}\u{1F3FF}" }], version: 11 }, foot: { id: "foot", name: "Foot", keywords: ["kick", "stomp"], skins: [{ unified: "1f9b6", native: "\u{1F9B6}" }, { unified: "1f9b6-1f3fb", native: "\u{1F9B6}\u{1F3FB}" }, { unified: "1f9b6-1f3fc", native: "\u{1F9B6}\u{1F3FC}" }, { unified: "1f9b6-1f3fd", native: "\u{1F9B6}\u{1F3FD}" }, { unified: "1f9b6-1f3fe", native: "\u{1F9B6}\u{1F3FE}" }, { unified: "1f9b6-1f3ff", native: "\u{1F9B6}\u{1F3FF}" }], version: 11 }, ear: { id: "ear", name: "Ear", keywords: ["face", "hear", "sound", "listen"], skins: [{ unified: "1f442", native: "\u{1F442}" }, { unified: "1f442-1f3fb", native: "\u{1F442}\u{1F3FB}" }, { unified: "1f442-1f3fc", native: "\u{1F442}\u{1F3FC}" }, { unified: "1f442-1f3fd", native: "\u{1F442}\u{1F3FD}" }, { unified: "1f442-1f3fe", native: "\u{1F442}\u{1F3FE}" }, { unified: "1f442-1f3ff", native: "\u{1F442}\u{1F3FF}" }], version: 1 }, ear_with_hearing_aid: { id: "ear_with_hearing_aid", name: "Ear with Hearing Aid", keywords: ["accessibility"], skins: [{ unified: "1f9bb", native: "\u{1F9BB}" }, { unified: "1f9bb-1f3fb", native: "\u{1F9BB}\u{1F3FB}" }, { unified: "1f9bb-1f3fc", native: "\u{1F9BB}\u{1F3FC}" }, { unified: "1f9bb-1f3fd", native: "\u{1F9BB}\u{1F3FD}" }, { unified: "1f9bb-1f3fe", native: "\u{1F9BB}\u{1F3FE}" }, { unified: "1f9bb-1f3ff", native: "\u{1F9BB}\u{1F3FF}" }], version: 12 }, nose: { id: "nose", name: "Nose", keywords: ["smell", "sniff"], skins: [{ unified: "1f443", native: "\u{1F443}" }, { unified: "1f443-1f3fb", native: "\u{1F443}\u{1F3FB}" }, { unified: "1f443-1f3fc", native: "\u{1F443}\u{1F3FC}" }, { unified: "1f443-1f3fd", native: "\u{1F443}\u{1F3FD}" }, { unified: "1f443-1f3fe", native: "\u{1F443}\u{1F3FE}" }, { unified: "1f443-1f3ff", native: "\u{1F443}\u{1F3FF}" }], version: 1 }, brain: { id: "brain", name: "Brain", keywords: ["smart", "intelligent"], skins: [{ unified: "1f9e0", native: "\u{1F9E0}" }], version: 5 }, anatomical_heart: { id: "anatomical_heart", name: "Anatomical Heart", keywords: ["health", "heartbeat"], skins: [{ unified: "1fac0", native: "\u{1FAC0}" }], version: 13 }, lungs: { id: "lungs", name: "Lungs", keywords: ["breathe"], skins: [{ unified: "1fac1", native: "\u{1FAC1}" }], version: 13 }, tooth: { id: "tooth", name: "Tooth", keywords: ["teeth", "dentist"], skins: [{ unified: "1f9b7", native: "\u{1F9B7}" }], version: 11 }, bone: { id: "bone", name: "Bone", keywords: ["skeleton"], skins: [{ unified: "1f9b4", native: "\u{1F9B4}" }], version: 11 }, eyes: { id: "eyes", name: "Eyes", keywords: ["look", "watch", "stalk", "peek", "see"], skins: [{ unified: "1f440", native: "\u{1F440}" }], version: 1 }, eye: { id: "eye", name: "Eye", keywords: ["face", "look", "see", "watch", "stare"], skins: [{ unified: "1f441-fe0f", native: "\u{1F441}\uFE0F" }], version: 1 }, tongue: { id: "tongue", name: "Tongue", keywords: ["mouth", "playful"], skins: [{ unified: "1f445", native: "\u{1F445}" }], version: 1 }, lips: { id: "lips", name: "Mouth", keywords: ["lips", "kiss"], skins: [{ unified: "1f444", native: "\u{1F444}" }], version: 1 }, biting_lip: { id: "biting_lip", name: "Biting Lip", keywords: ["flirt", "sexy", "pain", "worry"], skins: [{ unified: "1fae6", native: "\u{1FAE6}" }], version: 14 }, baby: { id: "baby", name: "Baby", keywords: ["child", "boy", "girl", "toddler"], skins: [{ unified: "1f476", native: "\u{1F476}" }, { unified: "1f476-1f3fb", native: "\u{1F476}\u{1F3FB}" }, { unified: "1f476-1f3fc", native: "\u{1F476}\u{1F3FC}" }, { unified: "1f476-1f3fd", native: "\u{1F476}\u{1F3FD}" }, { unified: "1f476-1f3fe", native: "\u{1F476}\u{1F3FE}" }, { unified: "1f476-1f3ff", native: "\u{1F476}\u{1F3FF}" }], version: 1 }, child: { id: "child", name: "Child", keywords: ["gender", "neutral", "young"], skins: [{ unified: "1f9d2", native: "\u{1F9D2}" }, { unified: "1f9d2-1f3fb", native: "\u{1F9D2}\u{1F3FB}" }, { unified: "1f9d2-1f3fc", native: "\u{1F9D2}\u{1F3FC}" }, { unified: "1f9d2-1f3fd", native: "\u{1F9D2}\u{1F3FD}" }, { unified: "1f9d2-1f3fe", native: "\u{1F9D2}\u{1F3FE}" }, { unified: "1f9d2-1f3ff", native: "\u{1F9D2}\u{1F3FF}" }], version: 5 }, boy: { id: "boy", name: "Boy", keywords: ["man", "male", "guy", "teenager"], skins: [{ unified: "1f466", native: "\u{1F466}" }, { unified: "1f466-1f3fb", native: "\u{1F466}\u{1F3FB}" }, { unified: "1f466-1f3fc", native: "\u{1F466}\u{1F3FC}" }, { unified: "1f466-1f3fd", native: "\u{1F466}\u{1F3FD}" }, { unified: "1f466-1f3fe", native: "\u{1F466}\u{1F3FE}" }, { unified: "1f466-1f3ff", native: "\u{1F466}\u{1F3FF}" }], version: 1 }, girl: { id: "girl", name: "Girl", keywords: ["female", "woman", "teenager"], skins: [{ unified: "1f467", native: "\u{1F467}" }, { unified: "1f467-1f3fb", native: "\u{1F467}\u{1F3FB}" }, { unified: "1f467-1f3fc", native: "\u{1F467}\u{1F3FC}" }, { unified: "1f467-1f3fd", native: "\u{1F467}\u{1F3FD}" }, { unified: "1f467-1f3fe", native: "\u{1F467}\u{1F3FE}" }, { unified: "1f467-1f3ff", native: "\u{1F467}\u{1F3FF}" }], version: 1 }, adult: { id: "adult", name: "Adult", keywords: ["person", "gender", "neutral"], skins: [{ unified: "1f9d1", native: "\u{1F9D1}" }, { unified: "1f9d1-1f3fb", native: "\u{1F9D1}\u{1F3FB}" }, { unified: "1f9d1-1f3fc", native: "\u{1F9D1}\u{1F3FC}" }, { unified: "1f9d1-1f3fd", native: "\u{1F9D1}\u{1F3FD}" }, { unified: "1f9d1-1f3fe", native: "\u{1F9D1}\u{1F3FE}" }, { unified: "1f9d1-1f3ff", native: "\u{1F9D1}\u{1F3FF}" }], version: 5 }, person_with_blond_hair: { id: "person_with_blond_hair", name: "Person Blond Hair", keywords: ["with", "hairstyle"], skins: [{ unified: "1f471", native: "\u{1F471}" }, { unified: "1f471-1f3fb", native: "\u{1F471}\u{1F3FB}" }, { unified: "1f471-1f3fc", native: "\u{1F471}\u{1F3FC}" }, { unified: "1f471-1f3fd", native: "\u{1F471}\u{1F3FD}" }, { unified: "1f471-1f3fe", native: "\u{1F471}\u{1F3FE}" }, { unified: "1f471-1f3ff", native: "\u{1F471}\u{1F3FF}" }], version: 1 }, man: { id: "man", name: "Man", keywords: ["mustache", "father", "dad", "guy", "classy", "sir", "moustache"], skins: [{ unified: "1f468", native: "\u{1F468}" }, { unified: "1f468-1f3fb", native: "\u{1F468}\u{1F3FB}" }, { unified: "1f468-1f3fc", native: "\u{1F468}\u{1F3FC}" }, { unified: "1f468-1f3fd", native: "\u{1F468}\u{1F3FD}" }, { unified: "1f468-1f3fe", native: "\u{1F468}\u{1F3FE}" }, { unified: "1f468-1f3ff", native: "\u{1F468}\u{1F3FF}" }], version: 1 }, bearded_person: { id: "bearded_person", name: "Person Beard", keywords: ["bearded", "man", "bewhiskered"], skins: [{ unified: "1f9d4", native: "\u{1F9D4}" }, { unified: "1f9d4-1f3fb", native: "\u{1F9D4}\u{1F3FB}" }, { unified: "1f9d4-1f3fc", native: "\u{1F9D4}\u{1F3FC}" }, { unified: "1f9d4-1f3fd", native: "\u{1F9D4}\u{1F3FD}" }, { unified: "1f9d4-1f3fe", native: "\u{1F9D4}\u{1F3FE}" }, { unified: "1f9d4-1f3ff", native: "\u{1F9D4}\u{1F3FF}" }], version: 5 }, man_with_beard: { id: "man_with_beard", name: "Man: Beard", keywords: ["man", "with", "facial", "hair"], skins: [{ unified: "1f9d4-200d-2642-fe0f", native: "\u{1F9D4}\u200D\u2642\uFE0F" }, { unified: "1f9d4-1f3fb-200d-2642-fe0f", native: "\u{1F9D4}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9d4-1f3fc-200d-2642-fe0f", native: "\u{1F9D4}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9d4-1f3fd-200d-2642-fe0f", native: "\u{1F9D4}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9d4-1f3fe-200d-2642-fe0f", native: "\u{1F9D4}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9d4-1f3ff-200d-2642-fe0f", native: "\u{1F9D4}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 13.1 }, woman_with_beard: { id: "woman_with_beard", name: "Woman: Beard", keywords: ["woman", "with", "facial", "hair"], skins: [{ unified: "1f9d4-200d-2640-fe0f", native: "\u{1F9D4}\u200D\u2640\uFE0F" }, { unified: "1f9d4-1f3fb-200d-2640-fe0f", native: "\u{1F9D4}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9d4-1f3fc-200d-2640-fe0f", native: "\u{1F9D4}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9d4-1f3fd-200d-2640-fe0f", native: "\u{1F9D4}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9d4-1f3fe-200d-2640-fe0f", native: "\u{1F9D4}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9d4-1f3ff-200d-2640-fe0f", native: "\u{1F9D4}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 13.1 }, red_haired_man: { id: "red_haired_man", name: "Man: Red Hair", keywords: ["haired", "man", "hairstyle"], skins: [{ unified: "1f468-200d-1f9b0", native: "\u{1F468}\u200D\u{1F9B0}" }, { unified: "1f468-1f3fb-200d-1f9b0", native: "\u{1F468}\u{1F3FB}\u200D\u{1F9B0}" }, { unified: "1f468-1f3fc-200d-1f9b0", native: "\u{1F468}\u{1F3FC}\u200D\u{1F9B0}" }, { unified: "1f468-1f3fd-200d-1f9b0", native: "\u{1F468}\u{1F3FD}\u200D\u{1F9B0}" }, { unified: "1f468-1f3fe-200d-1f9b0", native: "\u{1F468}\u{1F3FE}\u200D\u{1F9B0}" }, { unified: "1f468-1f3ff-200d-1f9b0", native: "\u{1F468}\u{1F3FF}\u200D\u{1F9B0}" }], version: 11 }, curly_haired_man: { id: "curly_haired_man", name: "Man: Curly Hair", keywords: ["haired", "man", "hairstyle"], skins: [{ unified: "1f468-200d-1f9b1", native: "\u{1F468}\u200D\u{1F9B1}" }, { unified: "1f468-1f3fb-200d-1f9b1", native: "\u{1F468}\u{1F3FB}\u200D\u{1F9B1}" }, { unified: "1f468-1f3fc-200d-1f9b1", native: "\u{1F468}\u{1F3FC}\u200D\u{1F9B1}" }, { unified: "1f468-1f3fd-200d-1f9b1", native: "\u{1F468}\u{1F3FD}\u200D\u{1F9B1}" }, { unified: "1f468-1f3fe-200d-1f9b1", native: "\u{1F468}\u{1F3FE}\u200D\u{1F9B1}" }, { unified: "1f468-1f3ff-200d-1f9b1", native: "\u{1F468}\u{1F3FF}\u200D\u{1F9B1}" }], version: 11 }, white_haired_man: { id: "white_haired_man", name: "Man: White Hair", keywords: ["haired", "man", "old", "elder"], skins: [{ unified: "1f468-200d-1f9b3", native: "\u{1F468}\u200D\u{1F9B3}" }, { unified: "1f468-1f3fb-200d-1f9b3", native: "\u{1F468}\u{1F3FB}\u200D\u{1F9B3}" }, { unified: "1f468-1f3fc-200d-1f9b3", native: "\u{1F468}\u{1F3FC}\u200D\u{1F9B3}" }, { unified: "1f468-1f3fd-200d-1f9b3", native: "\u{1F468}\u{1F3FD}\u200D\u{1F9B3}" }, { unified: "1f468-1f3fe-200d-1f9b3", native: "\u{1F468}\u{1F3FE}\u200D\u{1F9B3}" }, { unified: "1f468-1f3ff-200d-1f9b3", native: "\u{1F468}\u{1F3FF}\u200D\u{1F9B3}" }], version: 11 }, bald_man: { id: "bald_man", name: "Man: Bald", keywords: ["man", "hairless"], skins: [{ unified: "1f468-200d-1f9b2", native: "\u{1F468}\u200D\u{1F9B2}" }, { unified: "1f468-1f3fb-200d-1f9b2", native: "\u{1F468}\u{1F3FB}\u200D\u{1F9B2}" }, { unified: "1f468-1f3fc-200d-1f9b2", native: "\u{1F468}\u{1F3FC}\u200D\u{1F9B2}" }, { unified: "1f468-1f3fd-200d-1f9b2", native: "\u{1F468}\u{1F3FD}\u200D\u{1F9B2}" }, { unified: "1f468-1f3fe-200d-1f9b2", native: "\u{1F468}\u{1F3FE}\u200D\u{1F9B2}" }, { unified: "1f468-1f3ff-200d-1f9b2", native: "\u{1F468}\u{1F3FF}\u200D\u{1F9B2}" }], version: 11 }, woman: { id: "woman", name: "Woman", keywords: ["female", "girls", "lady"], skins: [{ unified: "1f469", native: "\u{1F469}" }, { unified: "1f469-1f3fb", native: "\u{1F469}\u{1F3FB}" }, { unified: "1f469-1f3fc", native: "\u{1F469}\u{1F3FC}" }, { unified: "1f469-1f3fd", native: "\u{1F469}\u{1F3FD}" }, { unified: "1f469-1f3fe", native: "\u{1F469}\u{1F3FE}" }, { unified: "1f469-1f3ff", native: "\u{1F469}\u{1F3FF}" }], version: 1 }, red_haired_woman: { id: "red_haired_woman", name: "Woman: Red Hair", keywords: ["haired", "woman", "hairstyle"], skins: [{ unified: "1f469-200d-1f9b0", native: "\u{1F469}\u200D\u{1F9B0}" }, { unified: "1f469-1f3fb-200d-1f9b0", native: "\u{1F469}\u{1F3FB}\u200D\u{1F9B0}" }, { unified: "1f469-1f3fc-200d-1f9b0", native: "\u{1F469}\u{1F3FC}\u200D\u{1F9B0}" }, { unified: "1f469-1f3fd-200d-1f9b0", native: "\u{1F469}\u{1F3FD}\u200D\u{1F9B0}" }, { unified: "1f469-1f3fe-200d-1f9b0", native: "\u{1F469}\u{1F3FE}\u200D\u{1F9B0}" }, { unified: "1f469-1f3ff-200d-1f9b0", native: "\u{1F469}\u{1F3FF}\u200D\u{1F9B0}" }], version: 11 }, red_haired_person: { id: "red_haired_person", name: "Person: Red Hair", keywords: ["haired", "person", "hairstyle"], skins: [{ unified: "1f9d1-200d-1f9b0", native: "\u{1F9D1}\u200D\u{1F9B0}" }, { unified: "1f9d1-1f3fb-200d-1f9b0", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F9B0}" }, { unified: "1f9d1-1f3fc-200d-1f9b0", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F9B0}" }, { unified: "1f9d1-1f3fd-200d-1f9b0", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F9B0}" }, { unified: "1f9d1-1f3fe-200d-1f9b0", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F9B0}" }, { unified: "1f9d1-1f3ff-200d-1f9b0", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F9B0}" }], version: 12.1 }, curly_haired_woman: { id: "curly_haired_woman", name: "Woman: Curly Hair", keywords: ["haired", "woman", "hairstyle"], skins: [{ unified: "1f469-200d-1f9b1", native: "\u{1F469}\u200D\u{1F9B1}" }, { unified: "1f469-1f3fb-200d-1f9b1", native: "\u{1F469}\u{1F3FB}\u200D\u{1F9B1}" }, { unified: "1f469-1f3fc-200d-1f9b1", native: "\u{1F469}\u{1F3FC}\u200D\u{1F9B1}" }, { unified: "1f469-1f3fd-200d-1f9b1", native: "\u{1F469}\u{1F3FD}\u200D\u{1F9B1}" }, { unified: "1f469-1f3fe-200d-1f9b1", native: "\u{1F469}\u{1F3FE}\u200D\u{1F9B1}" }, { unified: "1f469-1f3ff-200d-1f9b1", native: "\u{1F469}\u{1F3FF}\u200D\u{1F9B1}" }], version: 11 }, curly_haired_person: { id: "curly_haired_person", name: "Person: Curly Hair", keywords: ["haired", "person", "hairstyle"], skins: [{ unified: "1f9d1-200d-1f9b1", native: "\u{1F9D1}\u200D\u{1F9B1}" }, { unified: "1f9d1-1f3fb-200d-1f9b1", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F9B1}" }, { unified: "1f9d1-1f3fc-200d-1f9b1", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F9B1}" }, { unified: "1f9d1-1f3fd-200d-1f9b1", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F9B1}" }, { unified: "1f9d1-1f3fe-200d-1f9b1", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F9B1}" }, { unified: "1f9d1-1f3ff-200d-1f9b1", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F9B1}" }], version: 12.1 }, white_haired_woman: { id: "white_haired_woman", name: "Woman: White Hair", keywords: ["haired", "woman", "old", "elder"], skins: [{ unified: "1f469-200d-1f9b3", native: "\u{1F469}\u200D\u{1F9B3}" }, { unified: "1f469-1f3fb-200d-1f9b3", native: "\u{1F469}\u{1F3FB}\u200D\u{1F9B3}" }, { unified: "1f469-1f3fc-200d-1f9b3", native: "\u{1F469}\u{1F3FC}\u200D\u{1F9B3}" }, { unified: "1f469-1f3fd-200d-1f9b3", native: "\u{1F469}\u{1F3FD}\u200D\u{1F9B3}" }, { unified: "1f469-1f3fe-200d-1f9b3", native: "\u{1F469}\u{1F3FE}\u200D\u{1F9B3}" }, { unified: "1f469-1f3ff-200d-1f9b3", native: "\u{1F469}\u{1F3FF}\u200D\u{1F9B3}" }], version: 11 }, white_haired_person: { id: "white_haired_person", name: "Person: White Hair", keywords: ["haired", "person", "elder", "old"], skins: [{ unified: "1f9d1-200d-1f9b3", native: "\u{1F9D1}\u200D\u{1F9B3}" }, { unified: "1f9d1-1f3fb-200d-1f9b3", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F9B3}" }, { unified: "1f9d1-1f3fc-200d-1f9b3", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F9B3}" }, { unified: "1f9d1-1f3fd-200d-1f9b3", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F9B3}" }, { unified: "1f9d1-1f3fe-200d-1f9b3", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F9B3}" }, { unified: "1f9d1-1f3ff-200d-1f9b3", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F9B3}" }], version: 12.1 }, bald_woman: { id: "bald_woman", name: "Woman: Bald", keywords: ["woman", "hairless"], skins: [{ unified: "1f469-200d-1f9b2", native: "\u{1F469}\u200D\u{1F9B2}" }, { unified: "1f469-1f3fb-200d-1f9b2", native: "\u{1F469}\u{1F3FB}\u200D\u{1F9B2}" }, { unified: "1f469-1f3fc-200d-1f9b2", native: "\u{1F469}\u{1F3FC}\u200D\u{1F9B2}" }, { unified: "1f469-1f3fd-200d-1f9b2", native: "\u{1F469}\u{1F3FD}\u200D\u{1F9B2}" }, { unified: "1f469-1f3fe-200d-1f9b2", native: "\u{1F469}\u{1F3FE}\u200D\u{1F9B2}" }, { unified: "1f469-1f3ff-200d-1f9b2", native: "\u{1F469}\u{1F3FF}\u200D\u{1F9B2}" }], version: 11 }, bald_person: { id: "bald_person", name: "Person: Bald", keywords: ["person", "hairless"], skins: [{ unified: "1f9d1-200d-1f9b2", native: "\u{1F9D1}\u200D\u{1F9B2}" }, { unified: "1f9d1-1f3fb-200d-1f9b2", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F9B2}" }, { unified: "1f9d1-1f3fc-200d-1f9b2", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F9B2}" }, { unified: "1f9d1-1f3fd-200d-1f9b2", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F9B2}" }, { unified: "1f9d1-1f3fe-200d-1f9b2", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F9B2}" }, { unified: "1f9d1-1f3ff-200d-1f9b2", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F9B2}" }], version: 12.1 }, "blond-haired-woman": { id: "blond-haired-woman", name: "Woman: Blond Hair", keywords: ["haired-woman", "woman", "female", "girl", "blonde", "person"], skins: [{ unified: "1f471-200d-2640-fe0f", native: "\u{1F471}\u200D\u2640\uFE0F" }, { unified: "1f471-1f3fb-200d-2640-fe0f", native: "\u{1F471}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f471-1f3fc-200d-2640-fe0f", native: "\u{1F471}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f471-1f3fd-200d-2640-fe0f", native: "\u{1F471}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f471-1f3fe-200d-2640-fe0f", native: "\u{1F471}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f471-1f3ff-200d-2640-fe0f", native: "\u{1F471}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, "blond-haired-man": { id: "blond-haired-man", name: "Man: Blond Hair", keywords: ["haired-man", "man", "male", "boy", "blonde", "guy", "person"], skins: [{ unified: "1f471-200d-2642-fe0f", native: "\u{1F471}\u200D\u2642\uFE0F" }, { unified: "1f471-1f3fb-200d-2642-fe0f", native: "\u{1F471}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f471-1f3fc-200d-2642-fe0f", native: "\u{1F471}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f471-1f3fd-200d-2642-fe0f", native: "\u{1F471}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f471-1f3fe-200d-2642-fe0f", native: "\u{1F471}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f471-1f3ff-200d-2642-fe0f", native: "\u{1F471}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, older_adult: { id: "older_adult", name: "Older Adult", keywords: ["person", "human", "elder", "senior", "gender", "neutral"], skins: [{ unified: "1f9d3", native: "\u{1F9D3}" }, { unified: "1f9d3-1f3fb", native: "\u{1F9D3}\u{1F3FB}" }, { unified: "1f9d3-1f3fc", native: "\u{1F9D3}\u{1F3FC}" }, { unified: "1f9d3-1f3fd", native: "\u{1F9D3}\u{1F3FD}" }, { unified: "1f9d3-1f3fe", native: "\u{1F9D3}\u{1F3FE}" }, { unified: "1f9d3-1f3ff", native: "\u{1F9D3}\u{1F3FF}" }], version: 5 }, older_man: { id: "older_man", name: "Old Man", keywords: ["older", "human", "male", "men", "elder", "senior"], skins: [{ unified: "1f474", native: "\u{1F474}" }, { unified: "1f474-1f3fb", native: "\u{1F474}\u{1F3FB}" }, { unified: "1f474-1f3fc", native: "\u{1F474}\u{1F3FC}" }, { unified: "1f474-1f3fd", native: "\u{1F474}\u{1F3FD}" }, { unified: "1f474-1f3fe", native: "\u{1F474}\u{1F3FE}" }, { unified: "1f474-1f3ff", native: "\u{1F474}\u{1F3FF}" }], version: 1 }, older_woman: { id: "older_woman", name: "Old Woman", keywords: ["older", "human", "female", "women", "lady", "elder", "senior"], skins: [{ unified: "1f475", native: "\u{1F475}" }, { unified: "1f475-1f3fb", native: "\u{1F475}\u{1F3FB}" }, { unified: "1f475-1f3fc", native: "\u{1F475}\u{1F3FC}" }, { unified: "1f475-1f3fd", native: "\u{1F475}\u{1F3FD}" }, { unified: "1f475-1f3fe", native: "\u{1F475}\u{1F3FE}" }, { unified: "1f475-1f3ff", native: "\u{1F475}\u{1F3FF}" }], version: 1 }, person_frowning: { id: "person_frowning", name: "Person Frowning", keywords: ["worried"], skins: [{ unified: "1f64d", native: "\u{1F64D}" }, { unified: "1f64d-1f3fb", native: "\u{1F64D}\u{1F3FB}" }, { unified: "1f64d-1f3fc", native: "\u{1F64D}\u{1F3FC}" }, { unified: "1f64d-1f3fd", native: "\u{1F64D}\u{1F3FD}" }, { unified: "1f64d-1f3fe", native: "\u{1F64D}\u{1F3FE}" }, { unified: "1f64d-1f3ff", native: "\u{1F64D}\u{1F3FF}" }], version: 1 }, "man-frowning": { id: "man-frowning", name: "Man Frowning", keywords: ["male", "boy", "sad", "depressed", "discouraged", "unhappy"], skins: [{ unified: "1f64d-200d-2642-fe0f", native: "\u{1F64D}\u200D\u2642\uFE0F" }, { unified: "1f64d-1f3fb-200d-2642-fe0f", native: "\u{1F64D}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f64d-1f3fc-200d-2642-fe0f", native: "\u{1F64D}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f64d-1f3fd-200d-2642-fe0f", native: "\u{1F64D}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f64d-1f3fe-200d-2642-fe0f", native: "\u{1F64D}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f64d-1f3ff-200d-2642-fe0f", native: "\u{1F64D}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-frowning": { id: "woman-frowning", name: "Woman Frowning", keywords: ["female", "girl", "sad", "depressed", "discouraged", "unhappy"], skins: [{ unified: "1f64d-200d-2640-fe0f", native: "\u{1F64D}\u200D\u2640\uFE0F" }, { unified: "1f64d-1f3fb-200d-2640-fe0f", native: "\u{1F64D}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f64d-1f3fc-200d-2640-fe0f", native: "\u{1F64D}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f64d-1f3fd-200d-2640-fe0f", native: "\u{1F64D}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f64d-1f3fe-200d-2640-fe0f", native: "\u{1F64D}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f64d-1f3ff-200d-2640-fe0f", native: "\u{1F64D}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, person_with_pouting_face: { id: "person_with_pouting_face", name: "Person Pouting", keywords: ["with", "face", "upset"], skins: [{ unified: "1f64e", native: "\u{1F64E}" }, { unified: "1f64e-1f3fb", native: "\u{1F64E}\u{1F3FB}" }, { unified: "1f64e-1f3fc", native: "\u{1F64E}\u{1F3FC}" }, { unified: "1f64e-1f3fd", native: "\u{1F64E}\u{1F3FD}" }, { unified: "1f64e-1f3fe", native: "\u{1F64E}\u{1F3FE}" }, { unified: "1f64e-1f3ff", native: "\u{1F64E}\u{1F3FF}" }], version: 1 }, "man-pouting": { id: "man-pouting", name: "Man Pouting", keywords: ["male", "boy"], skins: [{ unified: "1f64e-200d-2642-fe0f", native: "\u{1F64E}\u200D\u2642\uFE0F" }, { unified: "1f64e-1f3fb-200d-2642-fe0f", native: "\u{1F64E}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f64e-1f3fc-200d-2642-fe0f", native: "\u{1F64E}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f64e-1f3fd-200d-2642-fe0f", native: "\u{1F64E}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f64e-1f3fe-200d-2642-fe0f", native: "\u{1F64E}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f64e-1f3ff-200d-2642-fe0f", native: "\u{1F64E}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-pouting": { id: "woman-pouting", name: "Woman Pouting", keywords: ["female", "girl"], skins: [{ unified: "1f64e-200d-2640-fe0f", native: "\u{1F64E}\u200D\u2640\uFE0F" }, { unified: "1f64e-1f3fb-200d-2640-fe0f", native: "\u{1F64E}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f64e-1f3fc-200d-2640-fe0f", native: "\u{1F64E}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f64e-1f3fd-200d-2640-fe0f", native: "\u{1F64E}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f64e-1f3fe-200d-2640-fe0f", native: "\u{1F64E}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f64e-1f3ff-200d-2640-fe0f", native: "\u{1F64E}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, no_good: { id: "no_good", name: "Person Gesturing No", keywords: ["good", "decline"], skins: [{ unified: "1f645", native: "\u{1F645}" }, { unified: "1f645-1f3fb", native: "\u{1F645}\u{1F3FB}" }, { unified: "1f645-1f3fc", native: "\u{1F645}\u{1F3FC}" }, { unified: "1f645-1f3fd", native: "\u{1F645}\u{1F3FD}" }, { unified: "1f645-1f3fe", native: "\u{1F645}\u{1F3FE}" }, { unified: "1f645-1f3ff", native: "\u{1F645}\u{1F3FF}" }], version: 1 }, "man-gesturing-no": { id: "man-gesturing-no", name: "Man Gesturing No", keywords: ["gesturing-no", "male", "boy", "nope"], skins: [{ unified: "1f645-200d-2642-fe0f", native: "\u{1F645}\u200D\u2642\uFE0F" }, { unified: "1f645-1f3fb-200d-2642-fe0f", native: "\u{1F645}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f645-1f3fc-200d-2642-fe0f", native: "\u{1F645}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f645-1f3fd-200d-2642-fe0f", native: "\u{1F645}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f645-1f3fe-200d-2642-fe0f", native: "\u{1F645}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f645-1f3ff-200d-2642-fe0f", native: "\u{1F645}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-gesturing-no": { id: "woman-gesturing-no", name: "Woman Gesturing No", keywords: ["gesturing-no", "female", "girl", "nope"], skins: [{ unified: "1f645-200d-2640-fe0f", native: "\u{1F645}\u200D\u2640\uFE0F" }, { unified: "1f645-1f3fb-200d-2640-fe0f", native: "\u{1F645}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f645-1f3fc-200d-2640-fe0f", native: "\u{1F645}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f645-1f3fd-200d-2640-fe0f", native: "\u{1F645}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f645-1f3fe-200d-2640-fe0f", native: "\u{1F645}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f645-1f3ff-200d-2640-fe0f", native: "\u{1F645}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, ok_woman: { id: "ok_woman", name: "Person Gesturing Ok", keywords: ["woman", "agree"], skins: [{ unified: "1f646", native: "\u{1F646}" }, { unified: "1f646-1f3fb", native: "\u{1F646}\u{1F3FB}" }, { unified: "1f646-1f3fc", native: "\u{1F646}\u{1F3FC}" }, { unified: "1f646-1f3fd", native: "\u{1F646}\u{1F3FD}" }, { unified: "1f646-1f3fe", native: "\u{1F646}\u{1F3FE}" }, { unified: "1f646-1f3ff", native: "\u{1F646}\u{1F3FF}" }], version: 1 }, "man-gesturing-ok": { id: "man-gesturing-ok", name: "Man Gesturing Ok", keywords: ["gesturing-ok", "men", "boy", "male", "blue", "human"], skins: [{ unified: "1f646-200d-2642-fe0f", native: "\u{1F646}\u200D\u2642\uFE0F" }, { unified: "1f646-1f3fb-200d-2642-fe0f", native: "\u{1F646}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f646-1f3fc-200d-2642-fe0f", native: "\u{1F646}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f646-1f3fd-200d-2642-fe0f", native: "\u{1F646}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f646-1f3fe-200d-2642-fe0f", native: "\u{1F646}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f646-1f3ff-200d-2642-fe0f", native: "\u{1F646}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-gesturing-ok": { id: "woman-gesturing-ok", name: "Woman Gesturing Ok", keywords: ["gesturing-ok", "women", "girl", "female", "pink", "human"], skins: [{ unified: "1f646-200d-2640-fe0f", native: "\u{1F646}\u200D\u2640\uFE0F" }, { unified: "1f646-1f3fb-200d-2640-fe0f", native: "\u{1F646}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f646-1f3fc-200d-2640-fe0f", native: "\u{1F646}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f646-1f3fd-200d-2640-fe0f", native: "\u{1F646}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f646-1f3fe-200d-2640-fe0f", native: "\u{1F646}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f646-1f3ff-200d-2640-fe0f", native: "\u{1F646}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, information_desk_person: { id: "information_desk_person", name: "Person Tipping Hand", keywords: ["information", "desk"], skins: [{ unified: "1f481", native: "\u{1F481}" }, { unified: "1f481-1f3fb", native: "\u{1F481}\u{1F3FB}" }, { unified: "1f481-1f3fc", native: "\u{1F481}\u{1F3FC}" }, { unified: "1f481-1f3fd", native: "\u{1F481}\u{1F3FD}" }, { unified: "1f481-1f3fe", native: "\u{1F481}\u{1F3FE}" }, { unified: "1f481-1f3ff", native: "\u{1F481}\u{1F3FF}" }], version: 1 }, "man-tipping-hand": { id: "man-tipping-hand", name: "Man Tipping Hand", keywords: ["tipping-hand", "male", "boy", "human", "information"], skins: [{ unified: "1f481-200d-2642-fe0f", native: "\u{1F481}\u200D\u2642\uFE0F" }, { unified: "1f481-1f3fb-200d-2642-fe0f", native: "\u{1F481}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f481-1f3fc-200d-2642-fe0f", native: "\u{1F481}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f481-1f3fd-200d-2642-fe0f", native: "\u{1F481}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f481-1f3fe-200d-2642-fe0f", native: "\u{1F481}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f481-1f3ff-200d-2642-fe0f", native: "\u{1F481}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-tipping-hand": { id: "woman-tipping-hand", name: "Woman Tipping Hand", keywords: ["tipping-hand", "female", "girl", "human", "information"], skins: [{ unified: "1f481-200d-2640-fe0f", native: "\u{1F481}\u200D\u2640\uFE0F" }, { unified: "1f481-1f3fb-200d-2640-fe0f", native: "\u{1F481}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f481-1f3fc-200d-2640-fe0f", native: "\u{1F481}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f481-1f3fd-200d-2640-fe0f", native: "\u{1F481}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f481-1f3fe-200d-2640-fe0f", native: "\u{1F481}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f481-1f3ff-200d-2640-fe0f", native: "\u{1F481}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, raising_hand: { id: "raising_hand", name: "Person Raising Hand", keywords: ["question"], skins: [{ unified: "1f64b", native: "\u{1F64B}" }, { unified: "1f64b-1f3fb", native: "\u{1F64B}\u{1F3FB}" }, { unified: "1f64b-1f3fc", native: "\u{1F64B}\u{1F3FC}" }, { unified: "1f64b-1f3fd", native: "\u{1F64B}\u{1F3FD}" }, { unified: "1f64b-1f3fe", native: "\u{1F64B}\u{1F3FE}" }, { unified: "1f64b-1f3ff", native: "\u{1F64B}\u{1F3FF}" }], version: 1 }, "man-raising-hand": { id: "man-raising-hand", name: "Man Raising Hand", keywords: ["raising-hand", "male", "boy"], skins: [{ unified: "1f64b-200d-2642-fe0f", native: "\u{1F64B}\u200D\u2642\uFE0F" }, { unified: "1f64b-1f3fb-200d-2642-fe0f", native: "\u{1F64B}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f64b-1f3fc-200d-2642-fe0f", native: "\u{1F64B}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f64b-1f3fd-200d-2642-fe0f", native: "\u{1F64B}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f64b-1f3fe-200d-2642-fe0f", native: "\u{1F64B}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f64b-1f3ff-200d-2642-fe0f", native: "\u{1F64B}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-raising-hand": { id: "woman-raising-hand", name: "Woman Raising Hand", keywords: ["raising-hand", "female", "girl"], skins: [{ unified: "1f64b-200d-2640-fe0f", native: "\u{1F64B}\u200D\u2640\uFE0F" }, { unified: "1f64b-1f3fb-200d-2640-fe0f", native: "\u{1F64B}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f64b-1f3fc-200d-2640-fe0f", native: "\u{1F64B}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f64b-1f3fd-200d-2640-fe0f", native: "\u{1F64B}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f64b-1f3fe-200d-2640-fe0f", native: "\u{1F64B}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f64b-1f3ff-200d-2640-fe0f", native: "\u{1F64B}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, deaf_person: { id: "deaf_person", name: "Deaf Person", keywords: ["accessibility"], skins: [{ unified: "1f9cf", native: "\u{1F9CF}" }, { unified: "1f9cf-1f3fb", native: "\u{1F9CF}\u{1F3FB}" }, { unified: "1f9cf-1f3fc", native: "\u{1F9CF}\u{1F3FC}" }, { unified: "1f9cf-1f3fd", native: "\u{1F9CF}\u{1F3FD}" }, { unified: "1f9cf-1f3fe", native: "\u{1F9CF}\u{1F3FE}" }, { unified: "1f9cf-1f3ff", native: "\u{1F9CF}\u{1F3FF}" }], version: 12 }, deaf_man: { id: "deaf_man", name: "Deaf Man", keywords: ["accessibility"], skins: [{ unified: "1f9cf-200d-2642-fe0f", native: "\u{1F9CF}\u200D\u2642\uFE0F" }, { unified: "1f9cf-1f3fb-200d-2642-fe0f", native: "\u{1F9CF}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9cf-1f3fc-200d-2642-fe0f", native: "\u{1F9CF}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9cf-1f3fd-200d-2642-fe0f", native: "\u{1F9CF}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9cf-1f3fe-200d-2642-fe0f", native: "\u{1F9CF}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9cf-1f3ff-200d-2642-fe0f", native: "\u{1F9CF}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 12 }, deaf_woman: { id: "deaf_woman", name: "Deaf Woman", keywords: ["accessibility"], skins: [{ unified: "1f9cf-200d-2640-fe0f", native: "\u{1F9CF}\u200D\u2640\uFE0F" }, { unified: "1f9cf-1f3fb-200d-2640-fe0f", native: "\u{1F9CF}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9cf-1f3fc-200d-2640-fe0f", native: "\u{1F9CF}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9cf-1f3fd-200d-2640-fe0f", native: "\u{1F9CF}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9cf-1f3fe-200d-2640-fe0f", native: "\u{1F9CF}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9cf-1f3ff-200d-2640-fe0f", native: "\u{1F9CF}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 12 }, bow: { id: "bow", name: "Person Bowing", keywords: ["bow", "respectiful"], skins: [{ unified: "1f647", native: "\u{1F647}" }, { unified: "1f647-1f3fb", native: "\u{1F647}\u{1F3FB}" }, { unified: "1f647-1f3fc", native: "\u{1F647}\u{1F3FC}" }, { unified: "1f647-1f3fd", native: "\u{1F647}\u{1F3FD}" }, { unified: "1f647-1f3fe", native: "\u{1F647}\u{1F3FE}" }, { unified: "1f647-1f3ff", native: "\u{1F647}\u{1F3FF}" }], version: 1 }, "man-bowing": { id: "man-bowing", name: "Man Bowing", keywords: ["male", "boy"], skins: [{ unified: "1f647-200d-2642-fe0f", native: "\u{1F647}\u200D\u2642\uFE0F" }, { unified: "1f647-1f3fb-200d-2642-fe0f", native: "\u{1F647}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f647-1f3fc-200d-2642-fe0f", native: "\u{1F647}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f647-1f3fd-200d-2642-fe0f", native: "\u{1F647}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f647-1f3fe-200d-2642-fe0f", native: "\u{1F647}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f647-1f3ff-200d-2642-fe0f", native: "\u{1F647}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-bowing": { id: "woman-bowing", name: "Woman Bowing", keywords: ["female", "girl"], skins: [{ unified: "1f647-200d-2640-fe0f", native: "\u{1F647}\u200D\u2640\uFE0F" }, { unified: "1f647-1f3fb-200d-2640-fe0f", native: "\u{1F647}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f647-1f3fc-200d-2640-fe0f", native: "\u{1F647}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f647-1f3fd-200d-2640-fe0f", native: "\u{1F647}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f647-1f3fe-200d-2640-fe0f", native: "\u{1F647}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f647-1f3ff-200d-2640-fe0f", native: "\u{1F647}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, face_palm: { id: "face_palm", name: "Face Palm", keywords: ["person", "facepalming", "disappointed"], skins: [{ unified: "1f926", native: "\u{1F926}" }, { unified: "1f926-1f3fb", native: "\u{1F926}\u{1F3FB}" }, { unified: "1f926-1f3fc", native: "\u{1F926}\u{1F3FC}" }, { unified: "1f926-1f3fd", native: "\u{1F926}\u{1F3FD}" }, { unified: "1f926-1f3fe", native: "\u{1F926}\u{1F3FE}" }, { unified: "1f926-1f3ff", native: "\u{1F926}\u{1F3FF}" }], version: 3 }, "man-facepalming": { id: "man-facepalming", name: "Man Facepalming", keywords: ["male", "boy", "disbelief"], skins: [{ unified: "1f926-200d-2642-fe0f", native: "\u{1F926}\u200D\u2642\uFE0F" }, { unified: "1f926-1f3fb-200d-2642-fe0f", native: "\u{1F926}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f926-1f3fc-200d-2642-fe0f", native: "\u{1F926}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f926-1f3fd-200d-2642-fe0f", native: "\u{1F926}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f926-1f3fe-200d-2642-fe0f", native: "\u{1F926}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f926-1f3ff-200d-2642-fe0f", native: "\u{1F926}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-facepalming": { id: "woman-facepalming", name: "Woman Facepalming", keywords: ["female", "girl", "disbelief"], skins: [{ unified: "1f926-200d-2640-fe0f", native: "\u{1F926}\u200D\u2640\uFE0F" }, { unified: "1f926-1f3fb-200d-2640-fe0f", native: "\u{1F926}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f926-1f3fc-200d-2640-fe0f", native: "\u{1F926}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f926-1f3fd-200d-2640-fe0f", native: "\u{1F926}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f926-1f3fe-200d-2640-fe0f", native: "\u{1F926}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f926-1f3ff-200d-2640-fe0f", native: "\u{1F926}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, shrug: { id: "shrug", name: "Shrug", keywords: ["person", "shrugging", "regardless"], skins: [{ unified: "1f937", native: "\u{1F937}" }, { unified: "1f937-1f3fb", native: "\u{1F937}\u{1F3FB}" }, { unified: "1f937-1f3fc", native: "\u{1F937}\u{1F3FC}" }, { unified: "1f937-1f3fd", native: "\u{1F937}\u{1F3FD}" }, { unified: "1f937-1f3fe", native: "\u{1F937}\u{1F3FE}" }, { unified: "1f937-1f3ff", native: "\u{1F937}\u{1F3FF}" }], version: 3 }, "man-shrugging": { id: "man-shrugging", name: "Man Shrugging", keywords: ["male", "boy", "confused", "indifferent", "doubt"], skins: [{ unified: "1f937-200d-2642-fe0f", native: "\u{1F937}\u200D\u2642\uFE0F" }, { unified: "1f937-1f3fb-200d-2642-fe0f", native: "\u{1F937}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f937-1f3fc-200d-2642-fe0f", native: "\u{1F937}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f937-1f3fd-200d-2642-fe0f", native: "\u{1F937}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f937-1f3fe-200d-2642-fe0f", native: "\u{1F937}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f937-1f3ff-200d-2642-fe0f", native: "\u{1F937}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-shrugging": { id: "woman-shrugging", name: "Woman Shrugging", keywords: ["female", "girl", "confused", "indifferent", "doubt"], skins: [{ unified: "1f937-200d-2640-fe0f", native: "\u{1F937}\u200D\u2640\uFE0F" }, { unified: "1f937-1f3fb-200d-2640-fe0f", native: "\u{1F937}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f937-1f3fc-200d-2640-fe0f", native: "\u{1F937}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f937-1f3fd-200d-2640-fe0f", native: "\u{1F937}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f937-1f3fe-200d-2640-fe0f", native: "\u{1F937}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f937-1f3ff-200d-2640-fe0f", native: "\u{1F937}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, health_worker: { id: "health_worker", name: "Health Worker", keywords: ["hospital"], skins: [{ unified: "1f9d1-200d-2695-fe0f", native: "\u{1F9D1}\u200D\u2695\uFE0F" }, { unified: "1f9d1-1f3fb-200d-2695-fe0f", native: "\u{1F9D1}\u{1F3FB}\u200D\u2695\uFE0F" }, { unified: "1f9d1-1f3fc-200d-2695-fe0f", native: "\u{1F9D1}\u{1F3FC}\u200D\u2695\uFE0F" }, { unified: "1f9d1-1f3fd-200d-2695-fe0f", native: "\u{1F9D1}\u{1F3FD}\u200D\u2695\uFE0F" }, { unified: "1f9d1-1f3fe-200d-2695-fe0f", native: "\u{1F9D1}\u{1F3FE}\u200D\u2695\uFE0F" }, { unified: "1f9d1-1f3ff-200d-2695-fe0f", native: "\u{1F9D1}\u{1F3FF}\u200D\u2695\uFE0F" }], version: 12.1 }, "male-doctor": { id: "male-doctor", name: "Man Health Worker", keywords: ["male", "doctor", "nurse", "therapist", "healthcare", "human"], skins: [{ unified: "1f468-200d-2695-fe0f", native: "\u{1F468}\u200D\u2695\uFE0F" }, { unified: "1f468-1f3fb-200d-2695-fe0f", native: "\u{1F468}\u{1F3FB}\u200D\u2695\uFE0F" }, { unified: "1f468-1f3fc-200d-2695-fe0f", native: "\u{1F468}\u{1F3FC}\u200D\u2695\uFE0F" }, { unified: "1f468-1f3fd-200d-2695-fe0f", native: "\u{1F468}\u{1F3FD}\u200D\u2695\uFE0F" }, { unified: "1f468-1f3fe-200d-2695-fe0f", native: "\u{1F468}\u{1F3FE}\u200D\u2695\uFE0F" }, { unified: "1f468-1f3ff-200d-2695-fe0f", native: "\u{1F468}\u{1F3FF}\u200D\u2695\uFE0F" }], version: 4 }, "female-doctor": { id: "female-doctor", name: "Woman Health Worker", keywords: ["female", "doctor", "nurse", "therapist", "healthcare", "human"], skins: [{ unified: "1f469-200d-2695-fe0f", native: "\u{1F469}\u200D\u2695\uFE0F" }, { unified: "1f469-1f3fb-200d-2695-fe0f", native: "\u{1F469}\u{1F3FB}\u200D\u2695\uFE0F" }, { unified: "1f469-1f3fc-200d-2695-fe0f", native: "\u{1F469}\u{1F3FC}\u200D\u2695\uFE0F" }, { unified: "1f469-1f3fd-200d-2695-fe0f", native: "\u{1F469}\u{1F3FD}\u200D\u2695\uFE0F" }, { unified: "1f469-1f3fe-200d-2695-fe0f", native: "\u{1F469}\u{1F3FE}\u200D\u2695\uFE0F" }, { unified: "1f469-1f3ff-200d-2695-fe0f", native: "\u{1F469}\u{1F3FF}\u200D\u2695\uFE0F" }], version: 4 }, student: { id: "student", name: "Student", keywords: ["learn"], skins: [{ unified: "1f9d1-200d-1f393", native: "\u{1F9D1}\u200D\u{1F393}" }, { unified: "1f9d1-1f3fb-200d-1f393", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F393}" }, { unified: "1f9d1-1f3fc-200d-1f393", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F393}" }, { unified: "1f9d1-1f3fd-200d-1f393", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F393}" }, { unified: "1f9d1-1f3fe-200d-1f393", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F393}" }, { unified: "1f9d1-1f3ff-200d-1f393", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F393}" }], version: 12.1 }, "male-student": { id: "male-student", name: "Man Student", keywords: ["male", "graduate", "human"], skins: [{ unified: "1f468-200d-1f393", native: "\u{1F468}\u200D\u{1F393}" }, { unified: "1f468-1f3fb-200d-1f393", native: "\u{1F468}\u{1F3FB}\u200D\u{1F393}" }, { unified: "1f468-1f3fc-200d-1f393", native: "\u{1F468}\u{1F3FC}\u200D\u{1F393}" }, { unified: "1f468-1f3fd-200d-1f393", native: "\u{1F468}\u{1F3FD}\u200D\u{1F393}" }, { unified: "1f468-1f3fe-200d-1f393", native: "\u{1F468}\u{1F3FE}\u200D\u{1F393}" }, { unified: "1f468-1f3ff-200d-1f393", native: "\u{1F468}\u{1F3FF}\u200D\u{1F393}" }], version: 4 }, "female-student": { id: "female-student", name: "Woman Student", keywords: ["female", "graduate", "human"], skins: [{ unified: "1f469-200d-1f393", native: "\u{1F469}\u200D\u{1F393}" }, { unified: "1f469-1f3fb-200d-1f393", native: "\u{1F469}\u{1F3FB}\u200D\u{1F393}" }, { unified: "1f469-1f3fc-200d-1f393", native: "\u{1F469}\u{1F3FC}\u200D\u{1F393}" }, { unified: "1f469-1f3fd-200d-1f393", native: "\u{1F469}\u{1F3FD}\u200D\u{1F393}" }, { unified: "1f469-1f3fe-200d-1f393", native: "\u{1F469}\u{1F3FE}\u200D\u{1F393}" }, { unified: "1f469-1f3ff-200d-1f393", native: "\u{1F469}\u{1F3FF}\u200D\u{1F393}" }], version: 4 }, teacher: { id: "teacher", name: "Teacher", keywords: ["professor"], skins: [{ unified: "1f9d1-200d-1f3eb", native: "\u{1F9D1}\u200D\u{1F3EB}" }, { unified: "1f9d1-1f3fb-200d-1f3eb", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F3EB}" }, { unified: "1f9d1-1f3fc-200d-1f3eb", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F3EB}" }, { unified: "1f9d1-1f3fd-200d-1f3eb", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F3EB}" }, { unified: "1f9d1-1f3fe-200d-1f3eb", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F3EB}" }, { unified: "1f9d1-1f3ff-200d-1f3eb", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F3EB}" }], version: 12.1 }, "male-teacher": { id: "male-teacher", name: "Man Teacher", keywords: ["male", "instructor", "professor", "human"], skins: [{ unified: "1f468-200d-1f3eb", native: "\u{1F468}\u200D\u{1F3EB}" }, { unified: "1f468-1f3fb-200d-1f3eb", native: "\u{1F468}\u{1F3FB}\u200D\u{1F3EB}" }, { unified: "1f468-1f3fc-200d-1f3eb", native: "\u{1F468}\u{1F3FC}\u200D\u{1F3EB}" }, { unified: "1f468-1f3fd-200d-1f3eb", native: "\u{1F468}\u{1F3FD}\u200D\u{1F3EB}" }, { unified: "1f468-1f3fe-200d-1f3eb", native: "\u{1F468}\u{1F3FE}\u200D\u{1F3EB}" }, { unified: "1f468-1f3ff-200d-1f3eb", native: "\u{1F468}\u{1F3FF}\u200D\u{1F3EB}" }], version: 4 }, "female-teacher": { id: "female-teacher", name: "Woman Teacher", keywords: ["female", "instructor", "professor", "human"], skins: [{ unified: "1f469-200d-1f3eb", native: "\u{1F469}\u200D\u{1F3EB}" }, { unified: "1f469-1f3fb-200d-1f3eb", native: "\u{1F469}\u{1F3FB}\u200D\u{1F3EB}" }, { unified: "1f469-1f3fc-200d-1f3eb", native: "\u{1F469}\u{1F3FC}\u200D\u{1F3EB}" }, { unified: "1f469-1f3fd-200d-1f3eb", native: "\u{1F469}\u{1F3FD}\u200D\u{1F3EB}" }, { unified: "1f469-1f3fe-200d-1f3eb", native: "\u{1F469}\u{1F3FE}\u200D\u{1F3EB}" }, { unified: "1f469-1f3ff-200d-1f3eb", native: "\u{1F469}\u{1F3FF}\u200D\u{1F3EB}" }], version: 4 }, judge: { id: "judge", name: "Judge", keywords: ["law"], skins: [{ unified: "1f9d1-200d-2696-fe0f", native: "\u{1F9D1}\u200D\u2696\uFE0F" }, { unified: "1f9d1-1f3fb-200d-2696-fe0f", native: "\u{1F9D1}\u{1F3FB}\u200D\u2696\uFE0F" }, { unified: "1f9d1-1f3fc-200d-2696-fe0f", native: "\u{1F9D1}\u{1F3FC}\u200D\u2696\uFE0F" }, { unified: "1f9d1-1f3fd-200d-2696-fe0f", native: "\u{1F9D1}\u{1F3FD}\u200D\u2696\uFE0F" }, { unified: "1f9d1-1f3fe-200d-2696-fe0f", native: "\u{1F9D1}\u{1F3FE}\u200D\u2696\uFE0F" }, { unified: "1f9d1-1f3ff-200d-2696-fe0f", native: "\u{1F9D1}\u{1F3FF}\u200D\u2696\uFE0F" }], version: 12.1 }, "male-judge": { id: "male-judge", name: "Man Judge", keywords: ["male", "justice", "court", "human"], skins: [{ unified: "1f468-200d-2696-fe0f", native: "\u{1F468}\u200D\u2696\uFE0F" }, { unified: "1f468-1f3fb-200d-2696-fe0f", native: "\u{1F468}\u{1F3FB}\u200D\u2696\uFE0F" }, { unified: "1f468-1f3fc-200d-2696-fe0f", native: "\u{1F468}\u{1F3FC}\u200D\u2696\uFE0F" }, { unified: "1f468-1f3fd-200d-2696-fe0f", native: "\u{1F468}\u{1F3FD}\u200D\u2696\uFE0F" }, { unified: "1f468-1f3fe-200d-2696-fe0f", native: "\u{1F468}\u{1F3FE}\u200D\u2696\uFE0F" }, { unified: "1f468-1f3ff-200d-2696-fe0f", native: "\u{1F468}\u{1F3FF}\u200D\u2696\uFE0F" }], version: 4 }, "female-judge": { id: "female-judge", name: "Woman Judge", keywords: ["female", "justice", "court", "human"], skins: [{ unified: "1f469-200d-2696-fe0f", native: "\u{1F469}\u200D\u2696\uFE0F" }, { unified: "1f469-1f3fb-200d-2696-fe0f", native: "\u{1F469}\u{1F3FB}\u200D\u2696\uFE0F" }, { unified: "1f469-1f3fc-200d-2696-fe0f", native: "\u{1F469}\u{1F3FC}\u200D\u2696\uFE0F" }, { unified: "1f469-1f3fd-200d-2696-fe0f", native: "\u{1F469}\u{1F3FD}\u200D\u2696\uFE0F" }, { unified: "1f469-1f3fe-200d-2696-fe0f", native: "\u{1F469}\u{1F3FE}\u200D\u2696\uFE0F" }, { unified: "1f469-1f3ff-200d-2696-fe0f", native: "\u{1F469}\u{1F3FF}\u200D\u2696\uFE0F" }], version: 4 }, farmer: { id: "farmer", name: "Farmer", keywords: ["crops"], skins: [{ unified: "1f9d1-200d-1f33e", native: "\u{1F9D1}\u200D\u{1F33E}" }, { unified: "1f9d1-1f3fb-200d-1f33e", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F33E}" }, { unified: "1f9d1-1f3fc-200d-1f33e", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F33E}" }, { unified: "1f9d1-1f3fd-200d-1f33e", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F33E}" }, { unified: "1f9d1-1f3fe-200d-1f33e", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F33E}" }, { unified: "1f9d1-1f3ff-200d-1f33e", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F33E}" }], version: 12.1 }, "male-farmer": { id: "male-farmer", name: "Man Farmer", keywords: ["male", "rancher", "gardener", "human"], skins: [{ unified: "1f468-200d-1f33e", native: "\u{1F468}\u200D\u{1F33E}" }, { unified: "1f468-1f3fb-200d-1f33e", native: "\u{1F468}\u{1F3FB}\u200D\u{1F33E}" }, { unified: "1f468-1f3fc-200d-1f33e", native: "\u{1F468}\u{1F3FC}\u200D\u{1F33E}" }, { unified: "1f468-1f3fd-200d-1f33e", native: "\u{1F468}\u{1F3FD}\u200D\u{1F33E}" }, { unified: "1f468-1f3fe-200d-1f33e", native: "\u{1F468}\u{1F3FE}\u200D\u{1F33E}" }, { unified: "1f468-1f3ff-200d-1f33e", native: "\u{1F468}\u{1F3FF}\u200D\u{1F33E}" }], version: 4 }, "female-farmer": { id: "female-farmer", name: "Woman Farmer", keywords: ["female", "rancher", "gardener", "human"], skins: [{ unified: "1f469-200d-1f33e", native: "\u{1F469}\u200D\u{1F33E}" }, { unified: "1f469-1f3fb-200d-1f33e", native: "\u{1F469}\u{1F3FB}\u200D\u{1F33E}" }, { unified: "1f469-1f3fc-200d-1f33e", native: "\u{1F469}\u{1F3FC}\u200D\u{1F33E}" }, { unified: "1f469-1f3fd-200d-1f33e", native: "\u{1F469}\u{1F3FD}\u200D\u{1F33E}" }, { unified: "1f469-1f3fe-200d-1f33e", native: "\u{1F469}\u{1F3FE}\u200D\u{1F33E}" }, { unified: "1f469-1f3ff-200d-1f33e", native: "\u{1F469}\u{1F3FF}\u200D\u{1F33E}" }], version: 4 }, cook: { id: "cook", name: "Cook", keywords: ["food", "kitchen", "culinary"], skins: [{ unified: "1f9d1-200d-1f373", native: "\u{1F9D1}\u200D\u{1F373}" }, { unified: "1f9d1-1f3fb-200d-1f373", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F373}" }, { unified: "1f9d1-1f3fc-200d-1f373", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F373}" }, { unified: "1f9d1-1f3fd-200d-1f373", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F373}" }, { unified: "1f9d1-1f3fe-200d-1f373", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F373}" }, { unified: "1f9d1-1f3ff-200d-1f373", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F373}" }], version: 12.1 }, "male-cook": { id: "male-cook", name: "Man Cook", keywords: ["male", "chef", "human"], skins: [{ unified: "1f468-200d-1f373", native: "\u{1F468}\u200D\u{1F373}" }, { unified: "1f468-1f3fb-200d-1f373", native: "\u{1F468}\u{1F3FB}\u200D\u{1F373}" }, { unified: "1f468-1f3fc-200d-1f373", native: "\u{1F468}\u{1F3FC}\u200D\u{1F373}" }, { unified: "1f468-1f3fd-200d-1f373", native: "\u{1F468}\u{1F3FD}\u200D\u{1F373}" }, { unified: "1f468-1f3fe-200d-1f373", native: "\u{1F468}\u{1F3FE}\u200D\u{1F373}" }, { unified: "1f468-1f3ff-200d-1f373", native: "\u{1F468}\u{1F3FF}\u200D\u{1F373}" }], version: 4 }, "female-cook": { id: "female-cook", name: "Woman Cook", keywords: ["female", "chef", "human"], skins: [{ unified: "1f469-200d-1f373", native: "\u{1F469}\u200D\u{1F373}" }, { unified: "1f469-1f3fb-200d-1f373", native: "\u{1F469}\u{1F3FB}\u200D\u{1F373}" }, { unified: "1f469-1f3fc-200d-1f373", native: "\u{1F469}\u{1F3FC}\u200D\u{1F373}" }, { unified: "1f469-1f3fd-200d-1f373", native: "\u{1F469}\u{1F3FD}\u200D\u{1F373}" }, { unified: "1f469-1f3fe-200d-1f373", native: "\u{1F469}\u{1F3FE}\u200D\u{1F373}" }, { unified: "1f469-1f3ff-200d-1f373", native: "\u{1F469}\u{1F3FF}\u200D\u{1F373}" }], version: 4 }, mechanic: { id: "mechanic", name: "Mechanic", keywords: ["worker", "technician"], skins: [{ unified: "1f9d1-200d-1f527", native: "\u{1F9D1}\u200D\u{1F527}" }, { unified: "1f9d1-1f3fb-200d-1f527", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F527}" }, { unified: "1f9d1-1f3fc-200d-1f527", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F527}" }, { unified: "1f9d1-1f3fd-200d-1f527", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F527}" }, { unified: "1f9d1-1f3fe-200d-1f527", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F527}" }, { unified: "1f9d1-1f3ff-200d-1f527", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F527}" }], version: 12.1 }, "male-mechanic": { id: "male-mechanic", name: "Man Mechanic", keywords: ["male", "plumber", "human", "wrench"], skins: [{ unified: "1f468-200d-1f527", native: "\u{1F468}\u200D\u{1F527}" }, { unified: "1f468-1f3fb-200d-1f527", native: "\u{1F468}\u{1F3FB}\u200D\u{1F527}" }, { unified: "1f468-1f3fc-200d-1f527", native: "\u{1F468}\u{1F3FC}\u200D\u{1F527}" }, { unified: "1f468-1f3fd-200d-1f527", native: "\u{1F468}\u{1F3FD}\u200D\u{1F527}" }, { unified: "1f468-1f3fe-200d-1f527", native: "\u{1F468}\u{1F3FE}\u200D\u{1F527}" }, { unified: "1f468-1f3ff-200d-1f527", native: "\u{1F468}\u{1F3FF}\u200D\u{1F527}" }], version: 4 }, "female-mechanic": { id: "female-mechanic", name: "Woman Mechanic", keywords: ["female", "plumber", "human", "wrench"], skins: [{ unified: "1f469-200d-1f527", native: "\u{1F469}\u200D\u{1F527}" }, { unified: "1f469-1f3fb-200d-1f527", native: "\u{1F469}\u{1F3FB}\u200D\u{1F527}" }, { unified: "1f469-1f3fc-200d-1f527", native: "\u{1F469}\u{1F3FC}\u200D\u{1F527}" }, { unified: "1f469-1f3fd-200d-1f527", native: "\u{1F469}\u{1F3FD}\u200D\u{1F527}" }, { unified: "1f469-1f3fe-200d-1f527", native: "\u{1F469}\u{1F3FE}\u200D\u{1F527}" }, { unified: "1f469-1f3ff-200d-1f527", native: "\u{1F469}\u{1F3FF}\u200D\u{1F527}" }], version: 4 }, factory_worker: { id: "factory_worker", name: "Factory Worker", keywords: ["labor"], skins: [{ unified: "1f9d1-200d-1f3ed", native: "\u{1F9D1}\u200D\u{1F3ED}" }, { unified: "1f9d1-1f3fb-200d-1f3ed", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F3ED}" }, { unified: "1f9d1-1f3fc-200d-1f3ed", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F3ED}" }, { unified: "1f9d1-1f3fd-200d-1f3ed", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F3ED}" }, { unified: "1f9d1-1f3fe-200d-1f3ed", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F3ED}" }, { unified: "1f9d1-1f3ff-200d-1f3ed", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F3ED}" }], version: 12.1 }, "male-factory-worker": { id: "male-factory-worker", name: "Man Factory Worker", keywords: ["male", "factory-worker", "assembly", "industrial", "human"], skins: [{ unified: "1f468-200d-1f3ed", native: "\u{1F468}\u200D\u{1F3ED}" }, { unified: "1f468-1f3fb-200d-1f3ed", native: "\u{1F468}\u{1F3FB}\u200D\u{1F3ED}" }, { unified: "1f468-1f3fc-200d-1f3ed", native: "\u{1F468}\u{1F3FC}\u200D\u{1F3ED}" }, { unified: "1f468-1f3fd-200d-1f3ed", native: "\u{1F468}\u{1F3FD}\u200D\u{1F3ED}" }, { unified: "1f468-1f3fe-200d-1f3ed", native: "\u{1F468}\u{1F3FE}\u200D\u{1F3ED}" }, { unified: "1f468-1f3ff-200d-1f3ed", native: "\u{1F468}\u{1F3FF}\u200D\u{1F3ED}" }], version: 4 }, "female-factory-worker": { id: "female-factory-worker", name: "Woman Factory Worker", keywords: ["female", "factory-worker", "assembly", "industrial", "human"], skins: [{ unified: "1f469-200d-1f3ed", native: "\u{1F469}\u200D\u{1F3ED}" }, { unified: "1f469-1f3fb-200d-1f3ed", native: "\u{1F469}\u{1F3FB}\u200D\u{1F3ED}" }, { unified: "1f469-1f3fc-200d-1f3ed", native: "\u{1F469}\u{1F3FC}\u200D\u{1F3ED}" }, { unified: "1f469-1f3fd-200d-1f3ed", native: "\u{1F469}\u{1F3FD}\u200D\u{1F3ED}" }, { unified: "1f469-1f3fe-200d-1f3ed", native: "\u{1F469}\u{1F3FE}\u200D\u{1F3ED}" }, { unified: "1f469-1f3ff-200d-1f3ed", native: "\u{1F469}\u{1F3FF}\u200D\u{1F3ED}" }], version: 4 }, office_worker: { id: "office_worker", name: "Office Worker", keywords: ["business"], skins: [{ unified: "1f9d1-200d-1f4bc", native: "\u{1F9D1}\u200D\u{1F4BC}" }, { unified: "1f9d1-1f3fb-200d-1f4bc", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F4BC}" }, { unified: "1f9d1-1f3fc-200d-1f4bc", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F4BC}" }, { unified: "1f9d1-1f3fd-200d-1f4bc", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F4BC}" }, { unified: "1f9d1-1f3fe-200d-1f4bc", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F4BC}" }, { unified: "1f9d1-1f3ff-200d-1f4bc", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F4BC}" }], version: 12.1 }, "male-office-worker": { id: "male-office-worker", name: "Man Office Worker", keywords: ["male", "office-worker", "business", "manager", "human"], skins: [{ unified: "1f468-200d-1f4bc", native: "\u{1F468}\u200D\u{1F4BC}" }, { unified: "1f468-1f3fb-200d-1f4bc", native: "\u{1F468}\u{1F3FB}\u200D\u{1F4BC}" }, { unified: "1f468-1f3fc-200d-1f4bc", native: "\u{1F468}\u{1F3FC}\u200D\u{1F4BC}" }, { unified: "1f468-1f3fd-200d-1f4bc", native: "\u{1F468}\u{1F3FD}\u200D\u{1F4BC}" }, { unified: "1f468-1f3fe-200d-1f4bc", native: "\u{1F468}\u{1F3FE}\u200D\u{1F4BC}" }, { unified: "1f468-1f3ff-200d-1f4bc", native: "\u{1F468}\u{1F3FF}\u200D\u{1F4BC}" }], version: 4 }, "female-office-worker": { id: "female-office-worker", name: "Woman Office Worker", keywords: ["female", "office-worker", "business", "manager", "human"], skins: [{ unified: "1f469-200d-1f4bc", native: "\u{1F469}\u200D\u{1F4BC}" }, { unified: "1f469-1f3fb-200d-1f4bc", native: "\u{1F469}\u{1F3FB}\u200D\u{1F4BC}" }, { unified: "1f469-1f3fc-200d-1f4bc", native: "\u{1F469}\u{1F3FC}\u200D\u{1F4BC}" }, { unified: "1f469-1f3fd-200d-1f4bc", native: "\u{1F469}\u{1F3FD}\u200D\u{1F4BC}" }, { unified: "1f469-1f3fe-200d-1f4bc", native: "\u{1F469}\u{1F3FE}\u200D\u{1F4BC}" }, { unified: "1f469-1f3ff-200d-1f4bc", native: "\u{1F469}\u{1F3FF}\u200D\u{1F4BC}" }], version: 4 }, scientist: { id: "scientist", name: "Scientist", keywords: ["chemistry"], skins: [{ unified: "1f9d1-200d-1f52c", native: "\u{1F9D1}\u200D\u{1F52C}" }, { unified: "1f9d1-1f3fb-200d-1f52c", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F52C}" }, { unified: "1f9d1-1f3fc-200d-1f52c", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F52C}" }, { unified: "1f9d1-1f3fd-200d-1f52c", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F52C}" }, { unified: "1f9d1-1f3fe-200d-1f52c", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F52C}" }, { unified: "1f9d1-1f3ff-200d-1f52c", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F52C}" }], version: 12.1 }, "male-scientist": { id: "male-scientist", name: "Man Scientist", keywords: ["male", "biologist", "chemist", "engineer", "physicist", "human"], skins: [{ unified: "1f468-200d-1f52c", native: "\u{1F468}\u200D\u{1F52C}" }, { unified: "1f468-1f3fb-200d-1f52c", native: "\u{1F468}\u{1F3FB}\u200D\u{1F52C}" }, { unified: "1f468-1f3fc-200d-1f52c", native: "\u{1F468}\u{1F3FC}\u200D\u{1F52C}" }, { unified: "1f468-1f3fd-200d-1f52c", native: "\u{1F468}\u{1F3FD}\u200D\u{1F52C}" }, { unified: "1f468-1f3fe-200d-1f52c", native: "\u{1F468}\u{1F3FE}\u200D\u{1F52C}" }, { unified: "1f468-1f3ff-200d-1f52c", native: "\u{1F468}\u{1F3FF}\u200D\u{1F52C}" }], version: 4 }, "female-scientist": { id: "female-scientist", name: "Woman Scientist", keywords: ["female", "biologist", "chemist", "engineer", "physicist", "human"], skins: [{ unified: "1f469-200d-1f52c", native: "\u{1F469}\u200D\u{1F52C}" }, { unified: "1f469-1f3fb-200d-1f52c", native: "\u{1F469}\u{1F3FB}\u200D\u{1F52C}" }, { unified: "1f469-1f3fc-200d-1f52c", native: "\u{1F469}\u{1F3FC}\u200D\u{1F52C}" }, { unified: "1f469-1f3fd-200d-1f52c", native: "\u{1F469}\u{1F3FD}\u200D\u{1F52C}" }, { unified: "1f469-1f3fe-200d-1f52c", native: "\u{1F469}\u{1F3FE}\u200D\u{1F52C}" }, { unified: "1f469-1f3ff-200d-1f52c", native: "\u{1F469}\u{1F3FF}\u200D\u{1F52C}" }], version: 4 }, technologist: { id: "technologist", name: "Technologist", keywords: ["computer"], skins: [{ unified: "1f9d1-200d-1f4bb", native: "\u{1F9D1}\u200D\u{1F4BB}" }, { unified: "1f9d1-1f3fb-200d-1f4bb", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F4BB}" }, { unified: "1f9d1-1f3fc-200d-1f4bb", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F4BB}" }, { unified: "1f9d1-1f3fd-200d-1f4bb", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F4BB}" }, { unified: "1f9d1-1f3fe-200d-1f4bb", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F4BB}" }, { unified: "1f9d1-1f3ff-200d-1f4bb", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F4BB}" }], version: 12.1 }, "male-technologist": { id: "male-technologist", name: "Man Technologist", keywords: ["male", "coder", "developer", "engineer", "programmer", "software", "human", "laptop", "computer"], skins: [{ unified: "1f468-200d-1f4bb", native: "\u{1F468}\u200D\u{1F4BB}" }, { unified: "1f468-1f3fb-200d-1f4bb", native: "\u{1F468}\u{1F3FB}\u200D\u{1F4BB}" }, { unified: "1f468-1f3fc-200d-1f4bb", native: "\u{1F468}\u{1F3FC}\u200D\u{1F4BB}" }, { unified: "1f468-1f3fd-200d-1f4bb", native: "\u{1F468}\u{1F3FD}\u200D\u{1F4BB}" }, { unified: "1f468-1f3fe-200d-1f4bb", native: "\u{1F468}\u{1F3FE}\u200D\u{1F4BB}" }, { unified: "1f468-1f3ff-200d-1f4bb", native: "\u{1F468}\u{1F3FF}\u200D\u{1F4BB}" }], version: 4 }, "female-technologist": { id: "female-technologist", name: "Woman Technologist", keywords: ["female", "coder", "developer", "engineer", "programmer", "software", "human", "laptop", "computer"], skins: [{ unified: "1f469-200d-1f4bb", native: "\u{1F469}\u200D\u{1F4BB}" }, { unified: "1f469-1f3fb-200d-1f4bb", native: "\u{1F469}\u{1F3FB}\u200D\u{1F4BB}" }, { unified: "1f469-1f3fc-200d-1f4bb", native: "\u{1F469}\u{1F3FC}\u200D\u{1F4BB}" }, { unified: "1f469-1f3fd-200d-1f4bb", native: "\u{1F469}\u{1F3FD}\u200D\u{1F4BB}" }, { unified: "1f469-1f3fe-200d-1f4bb", native: "\u{1F469}\u{1F3FE}\u200D\u{1F4BB}" }, { unified: "1f469-1f3ff-200d-1f4bb", native: "\u{1F469}\u{1F3FF}\u200D\u{1F4BB}" }], version: 4 }, singer: { id: "singer", name: "Singer", keywords: ["song", "artist", "performer"], skins: [{ unified: "1f9d1-200d-1f3a4", native: "\u{1F9D1}\u200D\u{1F3A4}" }, { unified: "1f9d1-1f3fb-200d-1f3a4", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F3A4}" }, { unified: "1f9d1-1f3fc-200d-1f3a4", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F3A4}" }, { unified: "1f9d1-1f3fd-200d-1f3a4", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F3A4}" }, { unified: "1f9d1-1f3fe-200d-1f3a4", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F3A4}" }, { unified: "1f9d1-1f3ff-200d-1f3a4", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F3A4}" }], version: 12.1 }, "male-singer": { id: "male-singer", name: "Man Singer", keywords: ["male", "rockstar", "entertainer", "human"], skins: [{ unified: "1f468-200d-1f3a4", native: "\u{1F468}\u200D\u{1F3A4}" }, { unified: "1f468-1f3fb-200d-1f3a4", native: "\u{1F468}\u{1F3FB}\u200D\u{1F3A4}" }, { unified: "1f468-1f3fc-200d-1f3a4", native: "\u{1F468}\u{1F3FC}\u200D\u{1F3A4}" }, { unified: "1f468-1f3fd-200d-1f3a4", native: "\u{1F468}\u{1F3FD}\u200D\u{1F3A4}" }, { unified: "1f468-1f3fe-200d-1f3a4", native: "\u{1F468}\u{1F3FE}\u200D\u{1F3A4}" }, { unified: "1f468-1f3ff-200d-1f3a4", native: "\u{1F468}\u{1F3FF}\u200D\u{1F3A4}" }], version: 4 }, "female-singer": { id: "female-singer", name: "Woman Singer", keywords: ["female", "rockstar", "entertainer", "human"], skins: [{ unified: "1f469-200d-1f3a4", native: "\u{1F469}\u200D\u{1F3A4}" }, { unified: "1f469-1f3fb-200d-1f3a4", native: "\u{1F469}\u{1F3FB}\u200D\u{1F3A4}" }, { unified: "1f469-1f3fc-200d-1f3a4", native: "\u{1F469}\u{1F3FC}\u200D\u{1F3A4}" }, { unified: "1f469-1f3fd-200d-1f3a4", native: "\u{1F469}\u{1F3FD}\u200D\u{1F3A4}" }, { unified: "1f469-1f3fe-200d-1f3a4", native: "\u{1F469}\u{1F3FE}\u200D\u{1F3A4}" }, { unified: "1f469-1f3ff-200d-1f3a4", native: "\u{1F469}\u{1F3FF}\u200D\u{1F3A4}" }], version: 4 }, artist: { id: "artist", name: "Artist", keywords: ["painting", "draw", "creativity"], skins: [{ unified: "1f9d1-200d-1f3a8", native: "\u{1F9D1}\u200D\u{1F3A8}" }, { unified: "1f9d1-1f3fb-200d-1f3a8", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F3A8}" }, { unified: "1f9d1-1f3fc-200d-1f3a8", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F3A8}" }, { unified: "1f9d1-1f3fd-200d-1f3a8", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F3A8}" }, { unified: "1f9d1-1f3fe-200d-1f3a8", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F3A8}" }, { unified: "1f9d1-1f3ff-200d-1f3a8", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F3A8}" }], version: 12.1 }, "male-artist": { id: "male-artist", name: "Man Artist", keywords: ["male", "painter", "human"], skins: [{ unified: "1f468-200d-1f3a8", native: "\u{1F468}\u200D\u{1F3A8}" }, { unified: "1f468-1f3fb-200d-1f3a8", native: "\u{1F468}\u{1F3FB}\u200D\u{1F3A8}" }, { unified: "1f468-1f3fc-200d-1f3a8", native: "\u{1F468}\u{1F3FC}\u200D\u{1F3A8}" }, { unified: "1f468-1f3fd-200d-1f3a8", native: "\u{1F468}\u{1F3FD}\u200D\u{1F3A8}" }, { unified: "1f468-1f3fe-200d-1f3a8", native: "\u{1F468}\u{1F3FE}\u200D\u{1F3A8}" }, { unified: "1f468-1f3ff-200d-1f3a8", native: "\u{1F468}\u{1F3FF}\u200D\u{1F3A8}" }], version: 4 }, "female-artist": { id: "female-artist", name: "Woman Artist", keywords: ["female", "painter", "human"], skins: [{ unified: "1f469-200d-1f3a8", native: "\u{1F469}\u200D\u{1F3A8}" }, { unified: "1f469-1f3fb-200d-1f3a8", native: "\u{1F469}\u{1F3FB}\u200D\u{1F3A8}" }, { unified: "1f469-1f3fc-200d-1f3a8", native: "\u{1F469}\u{1F3FC}\u200D\u{1F3A8}" }, { unified: "1f469-1f3fd-200d-1f3a8", native: "\u{1F469}\u{1F3FD}\u200D\u{1F3A8}" }, { unified: "1f469-1f3fe-200d-1f3a8", native: "\u{1F469}\u{1F3FE}\u200D\u{1F3A8}" }, { unified: "1f469-1f3ff-200d-1f3a8", native: "\u{1F469}\u{1F3FF}\u200D\u{1F3A8}" }], version: 4 }, pilot: { id: "pilot", name: "Pilot", keywords: ["fly", "plane", "airplane"], skins: [{ unified: "1f9d1-200d-2708-fe0f", native: "\u{1F9D1}\u200D\u2708\uFE0F" }, { unified: "1f9d1-1f3fb-200d-2708-fe0f", native: "\u{1F9D1}\u{1F3FB}\u200D\u2708\uFE0F" }, { unified: "1f9d1-1f3fc-200d-2708-fe0f", native: "\u{1F9D1}\u{1F3FC}\u200D\u2708\uFE0F" }, { unified: "1f9d1-1f3fd-200d-2708-fe0f", native: "\u{1F9D1}\u{1F3FD}\u200D\u2708\uFE0F" }, { unified: "1f9d1-1f3fe-200d-2708-fe0f", native: "\u{1F9D1}\u{1F3FE}\u200D\u2708\uFE0F" }, { unified: "1f9d1-1f3ff-200d-2708-fe0f", native: "\u{1F9D1}\u{1F3FF}\u200D\u2708\uFE0F" }], version: 12.1 }, "male-pilot": { id: "male-pilot", name: "Man Pilot", keywords: ["male", "aviator", "plane", "human"], skins: [{ unified: "1f468-200d-2708-fe0f", native: "\u{1F468}\u200D\u2708\uFE0F" }, { unified: "1f468-1f3fb-200d-2708-fe0f", native: "\u{1F468}\u{1F3FB}\u200D\u2708\uFE0F" }, { unified: "1f468-1f3fc-200d-2708-fe0f", native: "\u{1F468}\u{1F3FC}\u200D\u2708\uFE0F" }, { unified: "1f468-1f3fd-200d-2708-fe0f", native: "\u{1F468}\u{1F3FD}\u200D\u2708\uFE0F" }, { unified: "1f468-1f3fe-200d-2708-fe0f", native: "\u{1F468}\u{1F3FE}\u200D\u2708\uFE0F" }, { unified: "1f468-1f3ff-200d-2708-fe0f", native: "\u{1F468}\u{1F3FF}\u200D\u2708\uFE0F" }], version: 4 }, "female-pilot": { id: "female-pilot", name: "Woman Pilot", keywords: ["female", "aviator", "plane", "human"], skins: [{ unified: "1f469-200d-2708-fe0f", native: "\u{1F469}\u200D\u2708\uFE0F" }, { unified: "1f469-1f3fb-200d-2708-fe0f", native: "\u{1F469}\u{1F3FB}\u200D\u2708\uFE0F" }, { unified: "1f469-1f3fc-200d-2708-fe0f", native: "\u{1F469}\u{1F3FC}\u200D\u2708\uFE0F" }, { unified: "1f469-1f3fd-200d-2708-fe0f", native: "\u{1F469}\u{1F3FD}\u200D\u2708\uFE0F" }, { unified: "1f469-1f3fe-200d-2708-fe0f", native: "\u{1F469}\u{1F3FE}\u200D\u2708\uFE0F" }, { unified: "1f469-1f3ff-200d-2708-fe0f", native: "\u{1F469}\u{1F3FF}\u200D\u2708\uFE0F" }], version: 4 }, astronaut: { id: "astronaut", name: "Astronaut", keywords: ["outerspace"], skins: [{ unified: "1f9d1-200d-1f680", native: "\u{1F9D1}\u200D\u{1F680}" }, { unified: "1f9d1-1f3fb-200d-1f680", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F680}" }, { unified: "1f9d1-1f3fc-200d-1f680", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F680}" }, { unified: "1f9d1-1f3fd-200d-1f680", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F680}" }, { unified: "1f9d1-1f3fe-200d-1f680", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F680}" }, { unified: "1f9d1-1f3ff-200d-1f680", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F680}" }], version: 12.1 }, "male-astronaut": { id: "male-astronaut", name: "Man Astronaut", keywords: ["male", "space", "rocket", "human"], skins: [{ unified: "1f468-200d-1f680", native: "\u{1F468}\u200D\u{1F680}" }, { unified: "1f468-1f3fb-200d-1f680", native: "\u{1F468}\u{1F3FB}\u200D\u{1F680}" }, { unified: "1f468-1f3fc-200d-1f680", native: "\u{1F468}\u{1F3FC}\u200D\u{1F680}" }, { unified: "1f468-1f3fd-200d-1f680", native: "\u{1F468}\u{1F3FD}\u200D\u{1F680}" }, { unified: "1f468-1f3fe-200d-1f680", native: "\u{1F468}\u{1F3FE}\u200D\u{1F680}" }, { unified: "1f468-1f3ff-200d-1f680", native: "\u{1F468}\u{1F3FF}\u200D\u{1F680}" }], version: 4 }, "female-astronaut": { id: "female-astronaut", name: "Woman Astronaut", keywords: ["female", "space", "rocket", "human"], skins: [{ unified: "1f469-200d-1f680", native: "\u{1F469}\u200D\u{1F680}" }, { unified: "1f469-1f3fb-200d-1f680", native: "\u{1F469}\u{1F3FB}\u200D\u{1F680}" }, { unified: "1f469-1f3fc-200d-1f680", native: "\u{1F469}\u{1F3FC}\u200D\u{1F680}" }, { unified: "1f469-1f3fd-200d-1f680", native: "\u{1F469}\u{1F3FD}\u200D\u{1F680}" }, { unified: "1f469-1f3fe-200d-1f680", native: "\u{1F469}\u{1F3FE}\u200D\u{1F680}" }, { unified: "1f469-1f3ff-200d-1f680", native: "\u{1F469}\u{1F3FF}\u200D\u{1F680}" }], version: 4 }, firefighter: { id: "firefighter", name: "Firefighter", keywords: ["fire"], skins: [{ unified: "1f9d1-200d-1f692", native: "\u{1F9D1}\u200D\u{1F692}" }, { unified: "1f9d1-1f3fb-200d-1f692", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F692}" }, { unified: "1f9d1-1f3fc-200d-1f692", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F692}" }, { unified: "1f9d1-1f3fd-200d-1f692", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F692}" }, { unified: "1f9d1-1f3fe-200d-1f692", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F692}" }, { unified: "1f9d1-1f3ff-200d-1f692", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F692}" }], version: 12.1 }, "male-firefighter": { id: "male-firefighter", name: "Man Firefighter", keywords: ["male", "fireman", "human"], skins: [{ unified: "1f468-200d-1f692", native: "\u{1F468}\u200D\u{1F692}" }, { unified: "1f468-1f3fb-200d-1f692", native: "\u{1F468}\u{1F3FB}\u200D\u{1F692}" }, { unified: "1f468-1f3fc-200d-1f692", native: "\u{1F468}\u{1F3FC}\u200D\u{1F692}" }, { unified: "1f468-1f3fd-200d-1f692", native: "\u{1F468}\u{1F3FD}\u200D\u{1F692}" }, { unified: "1f468-1f3fe-200d-1f692", native: "\u{1F468}\u{1F3FE}\u200D\u{1F692}" }, { unified: "1f468-1f3ff-200d-1f692", native: "\u{1F468}\u{1F3FF}\u200D\u{1F692}" }], version: 4 }, "female-firefighter": { id: "female-firefighter", name: "Woman Firefighter", keywords: ["female", "fireman", "human"], skins: [{ unified: "1f469-200d-1f692", native: "\u{1F469}\u200D\u{1F692}" }, { unified: "1f469-1f3fb-200d-1f692", native: "\u{1F469}\u{1F3FB}\u200D\u{1F692}" }, { unified: "1f469-1f3fc-200d-1f692", native: "\u{1F469}\u{1F3FC}\u200D\u{1F692}" }, { unified: "1f469-1f3fd-200d-1f692", native: "\u{1F469}\u{1F3FD}\u200D\u{1F692}" }, { unified: "1f469-1f3fe-200d-1f692", native: "\u{1F469}\u{1F3FE}\u200D\u{1F692}" }, { unified: "1f469-1f3ff-200d-1f692", native: "\u{1F469}\u{1F3FF}\u200D\u{1F692}" }], version: 4 }, cop: { id: "cop", name: "Police Officer", keywords: ["cop"], skins: [{ unified: "1f46e", native: "\u{1F46E}" }, { unified: "1f46e-1f3fb", native: "\u{1F46E}\u{1F3FB}" }, { unified: "1f46e-1f3fc", native: "\u{1F46E}\u{1F3FC}" }, { unified: "1f46e-1f3fd", native: "\u{1F46E}\u{1F3FD}" }, { unified: "1f46e-1f3fe", native: "\u{1F46E}\u{1F3FE}" }, { unified: "1f46e-1f3ff", native: "\u{1F46E}\u{1F3FF}" }], version: 1 }, "male-police-officer": { id: "male-police-officer", name: "Man Police Officer", keywords: ["male", "police-officer", "law", "legal", "enforcement", "arrest", "911"], skins: [{ unified: "1f46e-200d-2642-fe0f", native: "\u{1F46E}\u200D\u2642\uFE0F" }, { unified: "1f46e-1f3fb-200d-2642-fe0f", native: "\u{1F46E}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f46e-1f3fc-200d-2642-fe0f", native: "\u{1F46E}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f46e-1f3fd-200d-2642-fe0f", native: "\u{1F46E}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f46e-1f3fe-200d-2642-fe0f", native: "\u{1F46E}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f46e-1f3ff-200d-2642-fe0f", native: "\u{1F46E}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "female-police-officer": { id: "female-police-officer", name: "Woman Police Officer", keywords: ["female", "police-officer", "law", "legal", "enforcement", "arrest", "911"], skins: [{ unified: "1f46e-200d-2640-fe0f", native: "\u{1F46E}\u200D\u2640\uFE0F" }, { unified: "1f46e-1f3fb-200d-2640-fe0f", native: "\u{1F46E}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f46e-1f3fc-200d-2640-fe0f", native: "\u{1F46E}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f46e-1f3fd-200d-2640-fe0f", native: "\u{1F46E}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f46e-1f3fe-200d-2640-fe0f", native: "\u{1F46E}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f46e-1f3ff-200d-2640-fe0f", native: "\u{1F46E}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, sleuth_or_spy: { id: "sleuth_or_spy", name: "Detective", keywords: ["sleuth", "or", "spy", "human"], skins: [{ unified: "1f575-fe0f", native: "\u{1F575}\uFE0F" }, { unified: "1f575-1f3fb", native: "\u{1F575}\u{1F3FB}" }, { unified: "1f575-1f3fc", native: "\u{1F575}\u{1F3FC}" }, { unified: "1f575-1f3fd", native: "\u{1F575}\u{1F3FD}" }, { unified: "1f575-1f3fe", native: "\u{1F575}\u{1F3FE}" }, { unified: "1f575-1f3ff", native: "\u{1F575}\u{1F3FF}" }], version: 1 }, "male-detective": { id: "male-detective", name: "Man Detective", keywords: ["male", "crime"], skins: [{ unified: "1f575-fe0f-200d-2642-fe0f", native: "\u{1F575}\uFE0F\u200D\u2642\uFE0F" }, { unified: "1f575-1f3fb-200d-2642-fe0f", native: "\u{1F575}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f575-1f3fc-200d-2642-fe0f", native: "\u{1F575}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f575-1f3fd-200d-2642-fe0f", native: "\u{1F575}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f575-1f3fe-200d-2642-fe0f", native: "\u{1F575}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f575-1f3ff-200d-2642-fe0f", native: "\u{1F575}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "female-detective": { id: "female-detective", name: "Woman Detective", keywords: ["female", "human", "spy"], skins: [{ unified: "1f575-fe0f-200d-2640-fe0f", native: "\u{1F575}\uFE0F\u200D\u2640\uFE0F" }, { unified: "1f575-1f3fb-200d-2640-fe0f", native: "\u{1F575}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f575-1f3fc-200d-2640-fe0f", native: "\u{1F575}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f575-1f3fd-200d-2640-fe0f", native: "\u{1F575}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f575-1f3fe-200d-2640-fe0f", native: "\u{1F575}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f575-1f3ff-200d-2640-fe0f", native: "\u{1F575}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, guardsman: { id: "guardsman", name: "Guard", keywords: ["guardsman", "protect"], skins: [{ unified: "1f482", native: "\u{1F482}" }, { unified: "1f482-1f3fb", native: "\u{1F482}\u{1F3FB}" }, { unified: "1f482-1f3fc", native: "\u{1F482}\u{1F3FC}" }, { unified: "1f482-1f3fd", native: "\u{1F482}\u{1F3FD}" }, { unified: "1f482-1f3fe", native: "\u{1F482}\u{1F3FE}" }, { unified: "1f482-1f3ff", native: "\u{1F482}\u{1F3FF}" }], version: 1 }, "male-guard": { id: "male-guard", name: "Man Guard", keywords: ["male", "uk", "gb", "british", "guy", "royal"], skins: [{ unified: "1f482-200d-2642-fe0f", native: "\u{1F482}\u200D\u2642\uFE0F" }, { unified: "1f482-1f3fb-200d-2642-fe0f", native: "\u{1F482}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f482-1f3fc-200d-2642-fe0f", native: "\u{1F482}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f482-1f3fd-200d-2642-fe0f", native: "\u{1F482}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f482-1f3fe-200d-2642-fe0f", native: "\u{1F482}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f482-1f3ff-200d-2642-fe0f", native: "\u{1F482}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "female-guard": { id: "female-guard", name: "Woman Guard", keywords: ["female", "uk", "gb", "british", "royal"], skins: [{ unified: "1f482-200d-2640-fe0f", native: "\u{1F482}\u200D\u2640\uFE0F" }, { unified: "1f482-1f3fb-200d-2640-fe0f", native: "\u{1F482}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f482-1f3fc-200d-2640-fe0f", native: "\u{1F482}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f482-1f3fd-200d-2640-fe0f", native: "\u{1F482}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f482-1f3fe-200d-2640-fe0f", native: "\u{1F482}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f482-1f3ff-200d-2640-fe0f", native: "\u{1F482}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, ninja: { id: "ninja", name: "Ninja", keywords: ["ninjutsu", "skills", "japanese"], skins: [{ unified: "1f977", native: "\u{1F977}" }, { unified: "1f977-1f3fb", native: "\u{1F977}\u{1F3FB}" }, { unified: "1f977-1f3fc", native: "\u{1F977}\u{1F3FC}" }, { unified: "1f977-1f3fd", native: "\u{1F977}\u{1F3FD}" }, { unified: "1f977-1f3fe", native: "\u{1F977}\u{1F3FE}" }, { unified: "1f977-1f3ff", native: "\u{1F977}\u{1F3FF}" }], version: 13 }, construction_worker: { id: "construction_worker", name: "Construction Worker", keywords: ["labor", "build"], skins: [{ unified: "1f477", native: "\u{1F477}" }, { unified: "1f477-1f3fb", native: "\u{1F477}\u{1F3FB}" }, { unified: "1f477-1f3fc", native: "\u{1F477}\u{1F3FC}" }, { unified: "1f477-1f3fd", native: "\u{1F477}\u{1F3FD}" }, { unified: "1f477-1f3fe", native: "\u{1F477}\u{1F3FE}" }, { unified: "1f477-1f3ff", native: "\u{1F477}\u{1F3FF}" }], version: 1 }, "male-construction-worker": { id: "male-construction-worker", name: "Man Construction Worker", keywords: ["male", "construction-worker", "human", "wip", "guy", "build", "labor"], skins: [{ unified: "1f477-200d-2642-fe0f", native: "\u{1F477}\u200D\u2642\uFE0F" }, { unified: "1f477-1f3fb-200d-2642-fe0f", native: "\u{1F477}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f477-1f3fc-200d-2642-fe0f", native: "\u{1F477}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f477-1f3fd-200d-2642-fe0f", native: "\u{1F477}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f477-1f3fe-200d-2642-fe0f", native: "\u{1F477}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f477-1f3ff-200d-2642-fe0f", native: "\u{1F477}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "female-construction-worker": { id: "female-construction-worker", name: "Woman Construction Worker", keywords: ["female", "construction-worker", "human", "wip", "build", "labor"], skins: [{ unified: "1f477-200d-2640-fe0f", native: "\u{1F477}\u200D\u2640\uFE0F" }, { unified: "1f477-1f3fb-200d-2640-fe0f", native: "\u{1F477}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f477-1f3fc-200d-2640-fe0f", native: "\u{1F477}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f477-1f3fd-200d-2640-fe0f", native: "\u{1F477}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f477-1f3fe-200d-2640-fe0f", native: "\u{1F477}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f477-1f3ff-200d-2640-fe0f", native: "\u{1F477}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, person_with_crown: { id: "person_with_crown", name: "Person with Crown", keywords: ["royalty", "power"], skins: [{ unified: "1fac5", native: "\u{1FAC5}" }, { unified: "1fac5-1f3fb", native: "\u{1FAC5}\u{1F3FB}" }, { unified: "1fac5-1f3fc", native: "\u{1FAC5}\u{1F3FC}" }, { unified: "1fac5-1f3fd", native: "\u{1FAC5}\u{1F3FD}" }, { unified: "1fac5-1f3fe", native: "\u{1FAC5}\u{1F3FE}" }, { unified: "1fac5-1f3ff", native: "\u{1FAC5}\u{1F3FF}" }], version: 14 }, prince: { id: "prince", name: "Prince", keywords: ["boy", "man", "male", "crown", "royal", "king"], skins: [{ unified: "1f934", native: "\u{1F934}" }, { unified: "1f934-1f3fb", native: "\u{1F934}\u{1F3FB}" }, { unified: "1f934-1f3fc", native: "\u{1F934}\u{1F3FC}" }, { unified: "1f934-1f3fd", native: "\u{1F934}\u{1F3FD}" }, { unified: "1f934-1f3fe", native: "\u{1F934}\u{1F3FE}" }, { unified: "1f934-1f3ff", native: "\u{1F934}\u{1F3FF}" }], version: 3 }, princess: { id: "princess", name: "Princess", keywords: ["girl", "woman", "female", "blond", "crown", "royal", "queen"], skins: [{ unified: "1f478", native: "\u{1F478}" }, { unified: "1f478-1f3fb", native: "\u{1F478}\u{1F3FB}" }, { unified: "1f478-1f3fc", native: "\u{1F478}\u{1F3FC}" }, { unified: "1f478-1f3fd", native: "\u{1F478}\u{1F3FD}" }, { unified: "1f478-1f3fe", native: "\u{1F478}\u{1F3FE}" }, { unified: "1f478-1f3ff", native: "\u{1F478}\u{1F3FF}" }], version: 1 }, man_with_turban: { id: "man_with_turban", name: "Man with Turban", keywords: ["person", "wearing", "headdress"], skins: [{ unified: "1f473", native: "\u{1F473}" }, { unified: "1f473-1f3fb", native: "\u{1F473}\u{1F3FB}" }, { unified: "1f473-1f3fc", native: "\u{1F473}\u{1F3FC}" }, { unified: "1f473-1f3fd", native: "\u{1F473}\u{1F3FD}" }, { unified: "1f473-1f3fe", native: "\u{1F473}\u{1F3FE}" }, { unified: "1f473-1f3ff", native: "\u{1F473}\u{1F3FF}" }], version: 1 }, "man-wearing-turban": { id: "man-wearing-turban", name: "Man Wearing Turban", keywords: ["wearing-turban", "male", "indian", "hinduism", "arabs"], skins: [{ unified: "1f473-200d-2642-fe0f", native: "\u{1F473}\u200D\u2642\uFE0F" }, { unified: "1f473-1f3fb-200d-2642-fe0f", native: "\u{1F473}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f473-1f3fc-200d-2642-fe0f", native: "\u{1F473}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f473-1f3fd-200d-2642-fe0f", native: "\u{1F473}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f473-1f3fe-200d-2642-fe0f", native: "\u{1F473}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f473-1f3ff-200d-2642-fe0f", native: "\u{1F473}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-wearing-turban": { id: "woman-wearing-turban", name: "Woman Wearing Turban", keywords: ["wearing-turban", "female", "indian", "hinduism", "arabs"], skins: [{ unified: "1f473-200d-2640-fe0f", native: "\u{1F473}\u200D\u2640\uFE0F" }, { unified: "1f473-1f3fb-200d-2640-fe0f", native: "\u{1F473}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f473-1f3fc-200d-2640-fe0f", native: "\u{1F473}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f473-1f3fd-200d-2640-fe0f", native: "\u{1F473}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f473-1f3fe-200d-2640-fe0f", native: "\u{1F473}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f473-1f3ff-200d-2640-fe0f", native: "\u{1F473}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, man_with_gua_pi_mao: { id: "man_with_gua_pi_mao", name: "Man with Gua Pi Mao", keywords: ["skullcap", "male", "boy", "chinese"], skins: [{ unified: "1f472", native: "\u{1F472}" }, { unified: "1f472-1f3fb", native: "\u{1F472}\u{1F3FB}" }, { unified: "1f472-1f3fc", native: "\u{1F472}\u{1F3FC}" }, { unified: "1f472-1f3fd", native: "\u{1F472}\u{1F3FD}" }, { unified: "1f472-1f3fe", native: "\u{1F472}\u{1F3FE}" }, { unified: "1f472-1f3ff", native: "\u{1F472}\u{1F3FF}" }], version: 1 }, person_with_headscarf: { id: "person_with_headscarf", name: "Woman with Headscarf", keywords: ["person", "female", "hijab", "mantilla", "tichel"], skins: [{ unified: "1f9d5", native: "\u{1F9D5}" }, { unified: "1f9d5-1f3fb", native: "\u{1F9D5}\u{1F3FB}" }, { unified: "1f9d5-1f3fc", native: "\u{1F9D5}\u{1F3FC}" }, { unified: "1f9d5-1f3fd", native: "\u{1F9D5}\u{1F3FD}" }, { unified: "1f9d5-1f3fe", native: "\u{1F9D5}\u{1F3FE}" }, { unified: "1f9d5-1f3ff", native: "\u{1F9D5}\u{1F3FF}" }], version: 5 }, person_in_tuxedo: { id: "person_in_tuxedo", name: "Man in Tuxedo", keywords: ["person", "couple", "marriage", "wedding", "groom"], skins: [{ unified: "1f935", native: "\u{1F935}" }, { unified: "1f935-1f3fb", native: "\u{1F935}\u{1F3FB}" }, { unified: "1f935-1f3fc", native: "\u{1F935}\u{1F3FC}" }, { unified: "1f935-1f3fd", native: "\u{1F935}\u{1F3FD}" }, { unified: "1f935-1f3fe", native: "\u{1F935}\u{1F3FE}" }, { unified: "1f935-1f3ff", native: "\u{1F935}\u{1F3FF}" }], version: 3 }, man_in_tuxedo: { id: "man_in_tuxedo", name: "Man in Tuxedo", keywords: ["formal", "fashion"], skins: [{ unified: "1f935-200d-2642-fe0f", native: "\u{1F935}\u200D\u2642\uFE0F" }, { unified: "1f935-1f3fb-200d-2642-fe0f", native: "\u{1F935}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f935-1f3fc-200d-2642-fe0f", native: "\u{1F935}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f935-1f3fd-200d-2642-fe0f", native: "\u{1F935}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f935-1f3fe-200d-2642-fe0f", native: "\u{1F935}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f935-1f3ff-200d-2642-fe0f", native: "\u{1F935}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 13 }, woman_in_tuxedo: { id: "woman_in_tuxedo", name: "Woman in Tuxedo", keywords: ["formal", "fashion"], skins: [{ unified: "1f935-200d-2640-fe0f", native: "\u{1F935}\u200D\u2640\uFE0F" }, { unified: "1f935-1f3fb-200d-2640-fe0f", native: "\u{1F935}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f935-1f3fc-200d-2640-fe0f", native: "\u{1F935}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f935-1f3fd-200d-2640-fe0f", native: "\u{1F935}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f935-1f3fe-200d-2640-fe0f", native: "\u{1F935}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f935-1f3ff-200d-2640-fe0f", native: "\u{1F935}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 13 }, bride_with_veil: { id: "bride_with_veil", name: "Bride with Veil", keywords: ["couple", "marriage", "wedding", "woman"], skins: [{ unified: "1f470", native: "\u{1F470}" }, { unified: "1f470-1f3fb", native: "\u{1F470}\u{1F3FB}" }, { unified: "1f470-1f3fc", native: "\u{1F470}\u{1F3FC}" }, { unified: "1f470-1f3fd", native: "\u{1F470}\u{1F3FD}" }, { unified: "1f470-1f3fe", native: "\u{1F470}\u{1F3FE}" }, { unified: "1f470-1f3ff", native: "\u{1F470}\u{1F3FF}" }], version: 1 }, man_with_veil: { id: "man_with_veil", name: "Man with Veil", keywords: ["wedding", "marriage"], skins: [{ unified: "1f470-200d-2642-fe0f", native: "\u{1F470}\u200D\u2642\uFE0F" }, { unified: "1f470-1f3fb-200d-2642-fe0f", native: "\u{1F470}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f470-1f3fc-200d-2642-fe0f", native: "\u{1F470}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f470-1f3fd-200d-2642-fe0f", native: "\u{1F470}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f470-1f3fe-200d-2642-fe0f", native: "\u{1F470}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f470-1f3ff-200d-2642-fe0f", native: "\u{1F470}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 13 }, woman_with_veil: { id: "woman_with_veil", name: "Woman with Veil", keywords: ["wedding", "marriage"], skins: [{ unified: "1f470-200d-2640-fe0f", native: "\u{1F470}\u200D\u2640\uFE0F" }, { unified: "1f470-1f3fb-200d-2640-fe0f", native: "\u{1F470}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f470-1f3fc-200d-2640-fe0f", native: "\u{1F470}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f470-1f3fd-200d-2640-fe0f", native: "\u{1F470}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f470-1f3fe-200d-2640-fe0f", native: "\u{1F470}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f470-1f3ff-200d-2640-fe0f", native: "\u{1F470}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 13 }, pregnant_woman: { id: "pregnant_woman", name: "Pregnant Woman", keywords: ["baby"], skins: [{ unified: "1f930", native: "\u{1F930}" }, { unified: "1f930-1f3fb", native: "\u{1F930}\u{1F3FB}" }, { unified: "1f930-1f3fc", native: "\u{1F930}\u{1F3FC}" }, { unified: "1f930-1f3fd", native: "\u{1F930}\u{1F3FD}" }, { unified: "1f930-1f3fe", native: "\u{1F930}\u{1F3FE}" }, { unified: "1f930-1f3ff", native: "\u{1F930}\u{1F3FF}" }], version: 3 }, pregnant_man: { id: "pregnant_man", name: "Pregnant Man", keywords: ["baby", "belly"], skins: [{ unified: "1fac3", native: "\u{1FAC3}" }, { unified: "1fac3-1f3fb", native: "\u{1FAC3}\u{1F3FB}" }, { unified: "1fac3-1f3fc", native: "\u{1FAC3}\u{1F3FC}" }, { unified: "1fac3-1f3fd", native: "\u{1FAC3}\u{1F3FD}" }, { unified: "1fac3-1f3fe", native: "\u{1FAC3}\u{1F3FE}" }, { unified: "1fac3-1f3ff", native: "\u{1FAC3}\u{1F3FF}" }], version: 14 }, pregnant_person: { id: "pregnant_person", name: "Pregnant Person", keywords: ["baby", "belly"], skins: [{ unified: "1fac4", native: "\u{1FAC4}" }, { unified: "1fac4-1f3fb", native: "\u{1FAC4}\u{1F3FB}" }, { unified: "1fac4-1f3fc", native: "\u{1FAC4}\u{1F3FC}" }, { unified: "1fac4-1f3fd", native: "\u{1FAC4}\u{1F3FD}" }, { unified: "1fac4-1f3fe", native: "\u{1FAC4}\u{1F3FE}" }, { unified: "1fac4-1f3ff", native: "\u{1FAC4}\u{1F3FF}" }], version: 14 }, "breast-feeding": { id: "breast-feeding", name: "Breast-Feeding", keywords: ["breast", "feeding", "nursing", "baby"], skins: [{ unified: "1f931", native: "\u{1F931}" }, { unified: "1f931-1f3fb", native: "\u{1F931}\u{1F3FB}" }, { unified: "1f931-1f3fc", native: "\u{1F931}\u{1F3FC}" }, { unified: "1f931-1f3fd", native: "\u{1F931}\u{1F3FD}" }, { unified: "1f931-1f3fe", native: "\u{1F931}\u{1F3FE}" }, { unified: "1f931-1f3ff", native: "\u{1F931}\u{1F3FF}" }], version: 5 }, woman_feeding_baby: { id: "woman_feeding_baby", name: "Woman Feeding Baby", keywords: ["birth", "food"], skins: [{ unified: "1f469-200d-1f37c", native: "\u{1F469}\u200D\u{1F37C}" }, { unified: "1f469-1f3fb-200d-1f37c", native: "\u{1F469}\u{1F3FB}\u200D\u{1F37C}" }, { unified: "1f469-1f3fc-200d-1f37c", native: "\u{1F469}\u{1F3FC}\u200D\u{1F37C}" }, { unified: "1f469-1f3fd-200d-1f37c", native: "\u{1F469}\u{1F3FD}\u200D\u{1F37C}" }, { unified: "1f469-1f3fe-200d-1f37c", native: "\u{1F469}\u{1F3FE}\u200D\u{1F37C}" }, { unified: "1f469-1f3ff-200d-1f37c", native: "\u{1F469}\u{1F3FF}\u200D\u{1F37C}" }], version: 13 }, man_feeding_baby: { id: "man_feeding_baby", name: "Man Feeding Baby", keywords: ["birth", "food"], skins: [{ unified: "1f468-200d-1f37c", native: "\u{1F468}\u200D\u{1F37C}" }, { unified: "1f468-1f3fb-200d-1f37c", native: "\u{1F468}\u{1F3FB}\u200D\u{1F37C}" }, { unified: "1f468-1f3fc-200d-1f37c", native: "\u{1F468}\u{1F3FC}\u200D\u{1F37C}" }, { unified: "1f468-1f3fd-200d-1f37c", native: "\u{1F468}\u{1F3FD}\u200D\u{1F37C}" }, { unified: "1f468-1f3fe-200d-1f37c", native: "\u{1F468}\u{1F3FE}\u200D\u{1F37C}" }, { unified: "1f468-1f3ff-200d-1f37c", native: "\u{1F468}\u{1F3FF}\u200D\u{1F37C}" }], version: 13 }, person_feeding_baby: { id: "person_feeding_baby", name: "Person Feeding Baby", keywords: ["birth", "food"], skins: [{ unified: "1f9d1-200d-1f37c", native: "\u{1F9D1}\u200D\u{1F37C}" }, { unified: "1f9d1-1f3fb-200d-1f37c", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F37C}" }, { unified: "1f9d1-1f3fc-200d-1f37c", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F37C}" }, { unified: "1f9d1-1f3fd-200d-1f37c", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F37C}" }, { unified: "1f9d1-1f3fe-200d-1f37c", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F37C}" }, { unified: "1f9d1-1f3ff-200d-1f37c", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F37C}" }], version: 13 }, angel: { id: "angel", name: "Baby Angel", keywords: ["heaven", "wings", "halo"], skins: [{ unified: "1f47c", native: "\u{1F47C}" }, { unified: "1f47c-1f3fb", native: "\u{1F47C}\u{1F3FB}" }, { unified: "1f47c-1f3fc", native: "\u{1F47C}\u{1F3FC}" }, { unified: "1f47c-1f3fd", native: "\u{1F47C}\u{1F3FD}" }, { unified: "1f47c-1f3fe", native: "\u{1F47C}\u{1F3FE}" }, { unified: "1f47c-1f3ff", native: "\u{1F47C}\u{1F3FF}" }], version: 1 }, santa: { id: "santa", name: "Santa Claus", keywords: ["festival", "man", "male", "xmas", "father", "christmas"], skins: [{ unified: "1f385", native: "\u{1F385}" }, { unified: "1f385-1f3fb", native: "\u{1F385}\u{1F3FB}" }, { unified: "1f385-1f3fc", native: "\u{1F385}\u{1F3FC}" }, { unified: "1f385-1f3fd", native: "\u{1F385}\u{1F3FD}" }, { unified: "1f385-1f3fe", native: "\u{1F385}\u{1F3FE}" }, { unified: "1f385-1f3ff", native: "\u{1F385}\u{1F3FF}" }], version: 1 }, mrs_claus: { id: "mrs_claus", name: "Mrs. Claus", keywords: ["mrs", "mother", "christmas", "woman", "female", "xmas"], skins: [{ unified: "1f936", native: "\u{1F936}" }, { unified: "1f936-1f3fb", native: "\u{1F936}\u{1F3FB}" }, { unified: "1f936-1f3fc", native: "\u{1F936}\u{1F3FC}" }, { unified: "1f936-1f3fd", native: "\u{1F936}\u{1F3FD}" }, { unified: "1f936-1f3fe", native: "\u{1F936}\u{1F3FE}" }, { unified: "1f936-1f3ff", native: "\u{1F936}\u{1F3FF}" }], version: 3 }, mx_claus: { id: "mx_claus", name: "Mx Claus", keywords: ["christmas"], skins: [{ unified: "1f9d1-200d-1f384", native: "\u{1F9D1}\u200D\u{1F384}" }, { unified: "1f9d1-1f3fb-200d-1f384", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F384}" }, { unified: "1f9d1-1f3fc-200d-1f384", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F384}" }, { unified: "1f9d1-1f3fd-200d-1f384", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F384}" }, { unified: "1f9d1-1f3fe-200d-1f384", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F384}" }, { unified: "1f9d1-1f3ff-200d-1f384", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F384}" }], version: 13 }, superhero: { id: "superhero", name: "Superhero", keywords: ["marvel"], skins: [{ unified: "1f9b8", native: "\u{1F9B8}" }, { unified: "1f9b8-1f3fb", native: "\u{1F9B8}\u{1F3FB}" }, { unified: "1f9b8-1f3fc", native: "\u{1F9B8}\u{1F3FC}" }, { unified: "1f9b8-1f3fd", native: "\u{1F9B8}\u{1F3FD}" }, { unified: "1f9b8-1f3fe", native: "\u{1F9B8}\u{1F3FE}" }, { unified: "1f9b8-1f3ff", native: "\u{1F9B8}\u{1F3FF}" }], version: 11 }, male_superhero: { id: "male_superhero", name: "Man Superhero", keywords: ["male", "good", "hero", "superpowers"], skins: [{ unified: "1f9b8-200d-2642-fe0f", native: "\u{1F9B8}\u200D\u2642\uFE0F" }, { unified: "1f9b8-1f3fb-200d-2642-fe0f", native: "\u{1F9B8}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9b8-1f3fc-200d-2642-fe0f", native: "\u{1F9B8}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9b8-1f3fd-200d-2642-fe0f", native: "\u{1F9B8}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9b8-1f3fe-200d-2642-fe0f", native: "\u{1F9B8}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9b8-1f3ff-200d-2642-fe0f", native: "\u{1F9B8}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 11 }, female_superhero: { id: "female_superhero", name: "Woman Superhero", keywords: ["female", "good", "heroine", "superpowers"], skins: [{ unified: "1f9b8-200d-2640-fe0f", native: "\u{1F9B8}\u200D\u2640\uFE0F" }, { unified: "1f9b8-1f3fb-200d-2640-fe0f", native: "\u{1F9B8}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9b8-1f3fc-200d-2640-fe0f", native: "\u{1F9B8}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9b8-1f3fd-200d-2640-fe0f", native: "\u{1F9B8}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9b8-1f3fe-200d-2640-fe0f", native: "\u{1F9B8}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9b8-1f3ff-200d-2640-fe0f", native: "\u{1F9B8}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 11 }, supervillain: { id: "supervillain", name: "Supervillain", keywords: ["marvel"], skins: [{ unified: "1f9b9", native: "\u{1F9B9}" }, { unified: "1f9b9-1f3fb", native: "\u{1F9B9}\u{1F3FB}" }, { unified: "1f9b9-1f3fc", native: "\u{1F9B9}\u{1F3FC}" }, { unified: "1f9b9-1f3fd", native: "\u{1F9B9}\u{1F3FD}" }, { unified: "1f9b9-1f3fe", native: "\u{1F9B9}\u{1F3FE}" }, { unified: "1f9b9-1f3ff", native: "\u{1F9B9}\u{1F3FF}" }], version: 11 }, male_supervillain: { id: "male_supervillain", name: "Man Supervillain", keywords: ["male", "evil", "bad", "criminal", "hero", "superpowers"], skins: [{ unified: "1f9b9-200d-2642-fe0f", native: "\u{1F9B9}\u200D\u2642\uFE0F" }, { unified: "1f9b9-1f3fb-200d-2642-fe0f", native: "\u{1F9B9}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9b9-1f3fc-200d-2642-fe0f", native: "\u{1F9B9}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9b9-1f3fd-200d-2642-fe0f", native: "\u{1F9B9}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9b9-1f3fe-200d-2642-fe0f", native: "\u{1F9B9}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9b9-1f3ff-200d-2642-fe0f", native: "\u{1F9B9}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 11 }, female_supervillain: { id: "female_supervillain", name: "Woman Supervillain", keywords: ["female", "evil", "bad", "criminal", "heroine", "superpowers"], skins: [{ unified: "1f9b9-200d-2640-fe0f", native: "\u{1F9B9}\u200D\u2640\uFE0F" }, { unified: "1f9b9-1f3fb-200d-2640-fe0f", native: "\u{1F9B9}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9b9-1f3fc-200d-2640-fe0f", native: "\u{1F9B9}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9b9-1f3fd-200d-2640-fe0f", native: "\u{1F9B9}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9b9-1f3fe-200d-2640-fe0f", native: "\u{1F9B9}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9b9-1f3ff-200d-2640-fe0f", native: "\u{1F9B9}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 11 }, mage: { id: "mage", name: "Mage", keywords: ["magic"], skins: [{ unified: "1f9d9", native: "\u{1F9D9}" }, { unified: "1f9d9-1f3fb", native: "\u{1F9D9}\u{1F3FB}" }, { unified: "1f9d9-1f3fc", native: "\u{1F9D9}\u{1F3FC}" }, { unified: "1f9d9-1f3fd", native: "\u{1F9D9}\u{1F3FD}" }, { unified: "1f9d9-1f3fe", native: "\u{1F9D9}\u{1F3FE}" }, { unified: "1f9d9-1f3ff", native: "\u{1F9D9}\u{1F3FF}" }], version: 5 }, male_mage: { id: "male_mage", name: "Man Mage", keywords: ["male", "sorcerer"], skins: [{ unified: "1f9d9-200d-2642-fe0f", native: "\u{1F9D9}\u200D\u2642\uFE0F" }, { unified: "1f9d9-1f3fb-200d-2642-fe0f", native: "\u{1F9D9}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9d9-1f3fc-200d-2642-fe0f", native: "\u{1F9D9}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9d9-1f3fd-200d-2642-fe0f", native: "\u{1F9D9}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9d9-1f3fe-200d-2642-fe0f", native: "\u{1F9D9}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9d9-1f3ff-200d-2642-fe0f", native: "\u{1F9D9}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 5 }, female_mage: { id: "female_mage", name: "Woman Mage", keywords: ["female", "witch"], skins: [{ unified: "1f9d9-200d-2640-fe0f", native: "\u{1F9D9}\u200D\u2640\uFE0F" }, { unified: "1f9d9-1f3fb-200d-2640-fe0f", native: "\u{1F9D9}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9d9-1f3fc-200d-2640-fe0f", native: "\u{1F9D9}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9d9-1f3fd-200d-2640-fe0f", native: "\u{1F9D9}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9d9-1f3fe-200d-2640-fe0f", native: "\u{1F9D9}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9d9-1f3ff-200d-2640-fe0f", native: "\u{1F9D9}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 5 }, fairy: { id: "fairy", name: "Fairy", keywords: ["wings", "magical"], skins: [{ unified: "1f9da", native: "\u{1F9DA}" }, { unified: "1f9da-1f3fb", native: "\u{1F9DA}\u{1F3FB}" }, { unified: "1f9da-1f3fc", native: "\u{1F9DA}\u{1F3FC}" }, { unified: "1f9da-1f3fd", native: "\u{1F9DA}\u{1F3FD}" }, { unified: "1f9da-1f3fe", native: "\u{1F9DA}\u{1F3FE}" }, { unified: "1f9da-1f3ff", native: "\u{1F9DA}\u{1F3FF}" }], version: 5 }, male_fairy: { id: "male_fairy", name: "Man Fairy", keywords: ["male"], skins: [{ unified: "1f9da-200d-2642-fe0f", native: "\u{1F9DA}\u200D\u2642\uFE0F" }, { unified: "1f9da-1f3fb-200d-2642-fe0f", native: "\u{1F9DA}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9da-1f3fc-200d-2642-fe0f", native: "\u{1F9DA}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9da-1f3fd-200d-2642-fe0f", native: "\u{1F9DA}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9da-1f3fe-200d-2642-fe0f", native: "\u{1F9DA}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9da-1f3ff-200d-2642-fe0f", native: "\u{1F9DA}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 5 }, female_fairy: { id: "female_fairy", name: "Woman Fairy", keywords: ["female"], skins: [{ unified: "1f9da-200d-2640-fe0f", native: "\u{1F9DA}\u200D\u2640\uFE0F" }, { unified: "1f9da-1f3fb-200d-2640-fe0f", native: "\u{1F9DA}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9da-1f3fc-200d-2640-fe0f", native: "\u{1F9DA}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9da-1f3fd-200d-2640-fe0f", native: "\u{1F9DA}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9da-1f3fe-200d-2640-fe0f", native: "\u{1F9DA}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9da-1f3ff-200d-2640-fe0f", native: "\u{1F9DA}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 5 }, vampire: { id: "vampire", name: "Vampire", keywords: ["blood", "twilight"], skins: [{ unified: "1f9db", native: "\u{1F9DB}" }, { unified: "1f9db-1f3fb", native: "\u{1F9DB}\u{1F3FB}" }, { unified: "1f9db-1f3fc", native: "\u{1F9DB}\u{1F3FC}" }, { unified: "1f9db-1f3fd", native: "\u{1F9DB}\u{1F3FD}" }, { unified: "1f9db-1f3fe", native: "\u{1F9DB}\u{1F3FE}" }, { unified: "1f9db-1f3ff", native: "\u{1F9DB}\u{1F3FF}" }], version: 5 }, male_vampire: { id: "male_vampire", name: "Man Vampire", keywords: ["male", "dracula"], skins: [{ unified: "1f9db-200d-2642-fe0f", native: "\u{1F9DB}\u200D\u2642\uFE0F" }, { unified: "1f9db-1f3fb-200d-2642-fe0f", native: "\u{1F9DB}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9db-1f3fc-200d-2642-fe0f", native: "\u{1F9DB}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9db-1f3fd-200d-2642-fe0f", native: "\u{1F9DB}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9db-1f3fe-200d-2642-fe0f", native: "\u{1F9DB}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9db-1f3ff-200d-2642-fe0f", native: "\u{1F9DB}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 5 }, female_vampire: { id: "female_vampire", name: "Woman Vampire", keywords: ["female"], skins: [{ unified: "1f9db-200d-2640-fe0f", native: "\u{1F9DB}\u200D\u2640\uFE0F" }, { unified: "1f9db-1f3fb-200d-2640-fe0f", native: "\u{1F9DB}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9db-1f3fc-200d-2640-fe0f", native: "\u{1F9DB}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9db-1f3fd-200d-2640-fe0f", native: "\u{1F9DB}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9db-1f3fe-200d-2640-fe0f", native: "\u{1F9DB}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9db-1f3ff-200d-2640-fe0f", native: "\u{1F9DB}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 5 }, merperson: { id: "merperson", name: "Merperson", keywords: ["sea"], skins: [{ unified: "1f9dc", native: "\u{1F9DC}" }, { unified: "1f9dc-1f3fb", native: "\u{1F9DC}\u{1F3FB}" }, { unified: "1f9dc-1f3fc", native: "\u{1F9DC}\u{1F3FC}" }, { unified: "1f9dc-1f3fd", native: "\u{1F9DC}\u{1F3FD}" }, { unified: "1f9dc-1f3fe", native: "\u{1F9DC}\u{1F3FE}" }, { unified: "1f9dc-1f3ff", native: "\u{1F9DC}\u{1F3FF}" }], version: 5 }, merman: { id: "merman", name: "Merman", keywords: ["man", "male", "triton"], skins: [{ unified: "1f9dc-200d-2642-fe0f", native: "\u{1F9DC}\u200D\u2642\uFE0F" }, { unified: "1f9dc-1f3fb-200d-2642-fe0f", native: "\u{1F9DC}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9dc-1f3fc-200d-2642-fe0f", native: "\u{1F9DC}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9dc-1f3fd-200d-2642-fe0f", native: "\u{1F9DC}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9dc-1f3fe-200d-2642-fe0f", native: "\u{1F9DC}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9dc-1f3ff-200d-2642-fe0f", native: "\u{1F9DC}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 5 }, mermaid: { id: "mermaid", name: "Mermaid", keywords: ["woman", "female", "merwoman", "ariel"], skins: [{ unified: "1f9dc-200d-2640-fe0f", native: "\u{1F9DC}\u200D\u2640\uFE0F" }, { unified: "1f9dc-1f3fb-200d-2640-fe0f", native: "\u{1F9DC}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9dc-1f3fc-200d-2640-fe0f", native: "\u{1F9DC}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9dc-1f3fd-200d-2640-fe0f", native: "\u{1F9DC}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9dc-1f3fe-200d-2640-fe0f", native: "\u{1F9DC}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9dc-1f3ff-200d-2640-fe0f", native: "\u{1F9DC}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 5 }, elf: { id: "elf", name: "Elf", keywords: ["magical"], skins: [{ unified: "1f9dd", native: "\u{1F9DD}" }, { unified: "1f9dd-1f3fb", native: "\u{1F9DD}\u{1F3FB}" }, { unified: "1f9dd-1f3fc", native: "\u{1F9DD}\u{1F3FC}" }, { unified: "1f9dd-1f3fd", native: "\u{1F9DD}\u{1F3FD}" }, { unified: "1f9dd-1f3fe", native: "\u{1F9DD}\u{1F3FE}" }, { unified: "1f9dd-1f3ff", native: "\u{1F9DD}\u{1F3FF}" }], version: 5 }, male_elf: { id: "male_elf", name: "Man Elf", keywords: ["male"], skins: [{ unified: "1f9dd-200d-2642-fe0f", native: "\u{1F9DD}\u200D\u2642\uFE0F" }, { unified: "1f9dd-1f3fb-200d-2642-fe0f", native: "\u{1F9DD}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9dd-1f3fc-200d-2642-fe0f", native: "\u{1F9DD}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9dd-1f3fd-200d-2642-fe0f", native: "\u{1F9DD}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9dd-1f3fe-200d-2642-fe0f", native: "\u{1F9DD}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9dd-1f3ff-200d-2642-fe0f", native: "\u{1F9DD}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 5 }, female_elf: { id: "female_elf", name: "Woman Elf", keywords: ["female"], skins: [{ unified: "1f9dd-200d-2640-fe0f", native: "\u{1F9DD}\u200D\u2640\uFE0F" }, { unified: "1f9dd-1f3fb-200d-2640-fe0f", native: "\u{1F9DD}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9dd-1f3fc-200d-2640-fe0f", native: "\u{1F9DD}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9dd-1f3fd-200d-2640-fe0f", native: "\u{1F9DD}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9dd-1f3fe-200d-2640-fe0f", native: "\u{1F9DD}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9dd-1f3ff-200d-2640-fe0f", native: "\u{1F9DD}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 5 }, genie: { id: "genie", name: "Genie", keywords: ["magical", "wishes"], skins: [{ unified: "1f9de", native: "\u{1F9DE}" }], version: 5 }, male_genie: { id: "male_genie", name: "Man Genie", keywords: ["male"], skins: [{ unified: "1f9de-200d-2642-fe0f", native: "\u{1F9DE}\u200D\u2642\uFE0F" }], version: 5 }, female_genie: { id: "female_genie", name: "Woman Genie", keywords: ["female"], skins: [{ unified: "1f9de-200d-2640-fe0f", native: "\u{1F9DE}\u200D\u2640\uFE0F" }], version: 5 }, zombie: { id: "zombie", name: "Zombie", keywords: ["dead"], skins: [{ unified: "1f9df", native: "\u{1F9DF}" }], version: 5 }, male_zombie: { id: "male_zombie", name: "Man Zombie", keywords: ["male", "dracula", "undead", "walking", "dead"], skins: [{ unified: "1f9df-200d-2642-fe0f", native: "\u{1F9DF}\u200D\u2642\uFE0F" }], version: 5 }, female_zombie: { id: "female_zombie", name: "Woman Zombie", keywords: ["female", "undead", "walking", "dead"], skins: [{ unified: "1f9df-200d-2640-fe0f", native: "\u{1F9DF}\u200D\u2640\uFE0F" }], version: 5 }, troll: { id: "troll", name: "Troll", keywords: ["mystical", "monster"], skins: [{ unified: "1f9cc", native: "\u{1F9CC}" }], version: 14 }, massage: { id: "massage", name: "Face Massage", keywords: ["person", "getting", "relax"], skins: [{ unified: "1f486", native: "\u{1F486}" }, { unified: "1f486-1f3fb", native: "\u{1F486}\u{1F3FB}" }, { unified: "1f486-1f3fc", native: "\u{1F486}\u{1F3FC}" }, { unified: "1f486-1f3fd", native: "\u{1F486}\u{1F3FD}" }, { unified: "1f486-1f3fe", native: "\u{1F486}\u{1F3FE}" }, { unified: "1f486-1f3ff", native: "\u{1F486}\u{1F3FF}" }], version: 1 }, "man-getting-massage": { id: "man-getting-massage", name: "Man Getting Massage", keywords: ["getting-massage", "male", "boy", "head"], skins: [{ unified: "1f486-200d-2642-fe0f", native: "\u{1F486}\u200D\u2642\uFE0F" }, { unified: "1f486-1f3fb-200d-2642-fe0f", native: "\u{1F486}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f486-1f3fc-200d-2642-fe0f", native: "\u{1F486}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f486-1f3fd-200d-2642-fe0f", native: "\u{1F486}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f486-1f3fe-200d-2642-fe0f", native: "\u{1F486}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f486-1f3ff-200d-2642-fe0f", native: "\u{1F486}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-getting-massage": { id: "woman-getting-massage", name: "Woman Getting Massage", keywords: ["getting-massage", "female", "girl", "head"], skins: [{ unified: "1f486-200d-2640-fe0f", native: "\u{1F486}\u200D\u2640\uFE0F" }, { unified: "1f486-1f3fb-200d-2640-fe0f", native: "\u{1F486}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f486-1f3fc-200d-2640-fe0f", native: "\u{1F486}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f486-1f3fd-200d-2640-fe0f", native: "\u{1F486}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f486-1f3fe-200d-2640-fe0f", native: "\u{1F486}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f486-1f3ff-200d-2640-fe0f", native: "\u{1F486}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, haircut: { id: "haircut", name: "Haircut", keywords: ["person", "getting", "hairstyle"], skins: [{ unified: "1f487", native: "\u{1F487}" }, { unified: "1f487-1f3fb", native: "\u{1F487}\u{1F3FB}" }, { unified: "1f487-1f3fc", native: "\u{1F487}\u{1F3FC}" }, { unified: "1f487-1f3fd", native: "\u{1F487}\u{1F3FD}" }, { unified: "1f487-1f3fe", native: "\u{1F487}\u{1F3FE}" }, { unified: "1f487-1f3ff", native: "\u{1F487}\u{1F3FF}" }], version: 1 }, "man-getting-haircut": { id: "man-getting-haircut", name: "Man Getting Haircut", keywords: ["getting-haircut", "male", "boy"], skins: [{ unified: "1f487-200d-2642-fe0f", native: "\u{1F487}\u200D\u2642\uFE0F" }, { unified: "1f487-1f3fb-200d-2642-fe0f", native: "\u{1F487}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f487-1f3fc-200d-2642-fe0f", native: "\u{1F487}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f487-1f3fd-200d-2642-fe0f", native: "\u{1F487}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f487-1f3fe-200d-2642-fe0f", native: "\u{1F487}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f487-1f3ff-200d-2642-fe0f", native: "\u{1F487}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-getting-haircut": { id: "woman-getting-haircut", name: "Woman Getting Haircut", keywords: ["getting-haircut", "female", "girl"], skins: [{ unified: "1f487-200d-2640-fe0f", native: "\u{1F487}\u200D\u2640\uFE0F" }, { unified: "1f487-1f3fb-200d-2640-fe0f", native: "\u{1F487}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f487-1f3fc-200d-2640-fe0f", native: "\u{1F487}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f487-1f3fd-200d-2640-fe0f", native: "\u{1F487}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f487-1f3fe-200d-2640-fe0f", native: "\u{1F487}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f487-1f3ff-200d-2640-fe0f", native: "\u{1F487}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, walking: { id: "walking", name: "Pedestrian", keywords: ["walking", "person", "move"], skins: [{ unified: "1f6b6", native: "\u{1F6B6}" }, { unified: "1f6b6-1f3fb", native: "\u{1F6B6}\u{1F3FB}" }, { unified: "1f6b6-1f3fc", native: "\u{1F6B6}\u{1F3FC}" }, { unified: "1f6b6-1f3fd", native: "\u{1F6B6}\u{1F3FD}" }, { unified: "1f6b6-1f3fe", native: "\u{1F6B6}\u{1F3FE}" }, { unified: "1f6b6-1f3ff", native: "\u{1F6B6}\u{1F3FF}" }], version: 1 }, "man-walking": { id: "man-walking", name: "Man Walking", keywords: ["human", "feet", "steps"], skins: [{ unified: "1f6b6-200d-2642-fe0f", native: "\u{1F6B6}\u200D\u2642\uFE0F" }, { unified: "1f6b6-1f3fb-200d-2642-fe0f", native: "\u{1F6B6}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f6b6-1f3fc-200d-2642-fe0f", native: "\u{1F6B6}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f6b6-1f3fd-200d-2642-fe0f", native: "\u{1F6B6}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f6b6-1f3fe-200d-2642-fe0f", native: "\u{1F6B6}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f6b6-1f3ff-200d-2642-fe0f", native: "\u{1F6B6}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-walking": { id: "woman-walking", name: "Woman Walking", keywords: ["human", "feet", "steps", "female"], skins: [{ unified: "1f6b6-200d-2640-fe0f", native: "\u{1F6B6}\u200D\u2640\uFE0F" }, { unified: "1f6b6-1f3fb-200d-2640-fe0f", native: "\u{1F6B6}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f6b6-1f3fc-200d-2640-fe0f", native: "\u{1F6B6}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f6b6-1f3fd-200d-2640-fe0f", native: "\u{1F6B6}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f6b6-1f3fe-200d-2640-fe0f", native: "\u{1F6B6}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f6b6-1f3ff-200d-2640-fe0f", native: "\u{1F6B6}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, standing_person: { id: "standing_person", name: "Standing Person", keywords: ["still"], skins: [{ unified: "1f9cd", native: "\u{1F9CD}" }, { unified: "1f9cd-1f3fb", native: "\u{1F9CD}\u{1F3FB}" }, { unified: "1f9cd-1f3fc", native: "\u{1F9CD}\u{1F3FC}" }, { unified: "1f9cd-1f3fd", native: "\u{1F9CD}\u{1F3FD}" }, { unified: "1f9cd-1f3fe", native: "\u{1F9CD}\u{1F3FE}" }, { unified: "1f9cd-1f3ff", native: "\u{1F9CD}\u{1F3FF}" }], version: 12 }, man_standing: { id: "man_standing", name: "Man Standing", keywords: ["still"], skins: [{ unified: "1f9cd-200d-2642-fe0f", native: "\u{1F9CD}\u200D\u2642\uFE0F" }, { unified: "1f9cd-1f3fb-200d-2642-fe0f", native: "\u{1F9CD}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9cd-1f3fc-200d-2642-fe0f", native: "\u{1F9CD}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9cd-1f3fd-200d-2642-fe0f", native: "\u{1F9CD}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9cd-1f3fe-200d-2642-fe0f", native: "\u{1F9CD}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9cd-1f3ff-200d-2642-fe0f", native: "\u{1F9CD}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 12 }, woman_standing: { id: "woman_standing", name: "Woman Standing", keywords: ["still"], skins: [{ unified: "1f9cd-200d-2640-fe0f", native: "\u{1F9CD}\u200D\u2640\uFE0F" }, { unified: "1f9cd-1f3fb-200d-2640-fe0f", native: "\u{1F9CD}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9cd-1f3fc-200d-2640-fe0f", native: "\u{1F9CD}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9cd-1f3fd-200d-2640-fe0f", native: "\u{1F9CD}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9cd-1f3fe-200d-2640-fe0f", native: "\u{1F9CD}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9cd-1f3ff-200d-2640-fe0f", native: "\u{1F9CD}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 12 }, kneeling_person: { id: "kneeling_person", name: "Kneeling Person", keywords: ["pray", "respectful"], skins: [{ unified: "1f9ce", native: "\u{1F9CE}" }, { unified: "1f9ce-1f3fb", native: "\u{1F9CE}\u{1F3FB}" }, { unified: "1f9ce-1f3fc", native: "\u{1F9CE}\u{1F3FC}" }, { unified: "1f9ce-1f3fd", native: "\u{1F9CE}\u{1F3FD}" }, { unified: "1f9ce-1f3fe", native: "\u{1F9CE}\u{1F3FE}" }, { unified: "1f9ce-1f3ff", native: "\u{1F9CE}\u{1F3FF}" }], version: 12 }, man_kneeling: { id: "man_kneeling", name: "Man Kneeling", keywords: ["pray", "respectful"], skins: [{ unified: "1f9ce-200d-2642-fe0f", native: "\u{1F9CE}\u200D\u2642\uFE0F" }, { unified: "1f9ce-1f3fb-200d-2642-fe0f", native: "\u{1F9CE}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9ce-1f3fc-200d-2642-fe0f", native: "\u{1F9CE}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9ce-1f3fd-200d-2642-fe0f", native: "\u{1F9CE}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9ce-1f3fe-200d-2642-fe0f", native: "\u{1F9CE}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9ce-1f3ff-200d-2642-fe0f", native: "\u{1F9CE}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 12 }, woman_kneeling: { id: "woman_kneeling", name: "Woman Kneeling", keywords: ["respectful", "pray"], skins: [{ unified: "1f9ce-200d-2640-fe0f", native: "\u{1F9CE}\u200D\u2640\uFE0F" }, { unified: "1f9ce-1f3fb-200d-2640-fe0f", native: "\u{1F9CE}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9ce-1f3fc-200d-2640-fe0f", native: "\u{1F9CE}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9ce-1f3fd-200d-2640-fe0f", native: "\u{1F9CE}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9ce-1f3fe-200d-2640-fe0f", native: "\u{1F9CE}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9ce-1f3ff-200d-2640-fe0f", native: "\u{1F9CE}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 12 }, person_with_probing_cane: { id: "person_with_probing_cane", name: "Person with White Cane", keywords: ["probing", "blind"], skins: [{ unified: "1f9d1-200d-1f9af", native: "\u{1F9D1}\u200D\u{1F9AF}" }, { unified: "1f9d1-1f3fb-200d-1f9af", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F9AF}" }, { unified: "1f9d1-1f3fc-200d-1f9af", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F9AF}" }, { unified: "1f9d1-1f3fd-200d-1f9af", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F9AF}" }, { unified: "1f9d1-1f3fe-200d-1f9af", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F9AF}" }, { unified: "1f9d1-1f3ff-200d-1f9af", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F9AF}" }], version: 12.1 }, man_with_probing_cane: { id: "man_with_probing_cane", name: "Man with White Cane", keywords: ["probing", "blind"], skins: [{ unified: "1f468-200d-1f9af", native: "\u{1F468}\u200D\u{1F9AF}" }, { unified: "1f468-1f3fb-200d-1f9af", native: "\u{1F468}\u{1F3FB}\u200D\u{1F9AF}" }, { unified: "1f468-1f3fc-200d-1f9af", native: "\u{1F468}\u{1F3FC}\u200D\u{1F9AF}" }, { unified: "1f468-1f3fd-200d-1f9af", native: "\u{1F468}\u{1F3FD}\u200D\u{1F9AF}" }, { unified: "1f468-1f3fe-200d-1f9af", native: "\u{1F468}\u{1F3FE}\u200D\u{1F9AF}" }, { unified: "1f468-1f3ff-200d-1f9af", native: "\u{1F468}\u{1F3FF}\u200D\u{1F9AF}" }], version: 12 }, woman_with_probing_cane: { id: "woman_with_probing_cane", name: "Woman with White Cane", keywords: ["probing", "blind"], skins: [{ unified: "1f469-200d-1f9af", native: "\u{1F469}\u200D\u{1F9AF}" }, { unified: "1f469-1f3fb-200d-1f9af", native: "\u{1F469}\u{1F3FB}\u200D\u{1F9AF}" }, { unified: "1f469-1f3fc-200d-1f9af", native: "\u{1F469}\u{1F3FC}\u200D\u{1F9AF}" }, { unified: "1f469-1f3fd-200d-1f9af", native: "\u{1F469}\u{1F3FD}\u200D\u{1F9AF}" }, { unified: "1f469-1f3fe-200d-1f9af", native: "\u{1F469}\u{1F3FE}\u200D\u{1F9AF}" }, { unified: "1f469-1f3ff-200d-1f9af", native: "\u{1F469}\u{1F3FF}\u200D\u{1F9AF}" }], version: 12 }, person_in_motorized_wheelchair: { id: "person_in_motorized_wheelchair", name: "Person in Motorized Wheelchair", keywords: ["disability", "accessibility"], skins: [{ unified: "1f9d1-200d-1f9bc", native: "\u{1F9D1}\u200D\u{1F9BC}" }, { unified: "1f9d1-1f3fb-200d-1f9bc", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F9BC}" }, { unified: "1f9d1-1f3fc-200d-1f9bc", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F9BC}" }, { unified: "1f9d1-1f3fd-200d-1f9bc", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F9BC}" }, { unified: "1f9d1-1f3fe-200d-1f9bc", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F9BC}" }, { unified: "1f9d1-1f3ff-200d-1f9bc", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F9BC}" }], version: 12.1 }, man_in_motorized_wheelchair: { id: "man_in_motorized_wheelchair", name: "Man in Motorized Wheelchair", keywords: ["disability", "accessibility"], skins: [{ unified: "1f468-200d-1f9bc", native: "\u{1F468}\u200D\u{1F9BC}" }, { unified: "1f468-1f3fb-200d-1f9bc", native: "\u{1F468}\u{1F3FB}\u200D\u{1F9BC}" }, { unified: "1f468-1f3fc-200d-1f9bc", native: "\u{1F468}\u{1F3FC}\u200D\u{1F9BC}" }, { unified: "1f468-1f3fd-200d-1f9bc", native: "\u{1F468}\u{1F3FD}\u200D\u{1F9BC}" }, { unified: "1f468-1f3fe-200d-1f9bc", native: "\u{1F468}\u{1F3FE}\u200D\u{1F9BC}" }, { unified: "1f468-1f3ff-200d-1f9bc", native: "\u{1F468}\u{1F3FF}\u200D\u{1F9BC}" }], version: 12 }, woman_in_motorized_wheelchair: { id: "woman_in_motorized_wheelchair", name: "Woman in Motorized Wheelchair", keywords: ["disability", "accessibility"], skins: [{ unified: "1f469-200d-1f9bc", native: "\u{1F469}\u200D\u{1F9BC}" }, { unified: "1f469-1f3fb-200d-1f9bc", native: "\u{1F469}\u{1F3FB}\u200D\u{1F9BC}" }, { unified: "1f469-1f3fc-200d-1f9bc", native: "\u{1F469}\u{1F3FC}\u200D\u{1F9BC}" }, { unified: "1f469-1f3fd-200d-1f9bc", native: "\u{1F469}\u{1F3FD}\u200D\u{1F9BC}" }, { unified: "1f469-1f3fe-200d-1f9bc", native: "\u{1F469}\u{1F3FE}\u200D\u{1F9BC}" }, { unified: "1f469-1f3ff-200d-1f9bc", native: "\u{1F469}\u{1F3FF}\u200D\u{1F9BC}" }], version: 12 }, person_in_manual_wheelchair: { id: "person_in_manual_wheelchair", name: "Person in Manual Wheelchair", keywords: ["disability", "accessibility"], skins: [{ unified: "1f9d1-200d-1f9bd", native: "\u{1F9D1}\u200D\u{1F9BD}" }, { unified: "1f9d1-1f3fb-200d-1f9bd", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F9BD}" }, { unified: "1f9d1-1f3fc-200d-1f9bd", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F9BD}" }, { unified: "1f9d1-1f3fd-200d-1f9bd", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F9BD}" }, { unified: "1f9d1-1f3fe-200d-1f9bd", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F9BD}" }, { unified: "1f9d1-1f3ff-200d-1f9bd", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F9BD}" }], version: 12.1 }, man_in_manual_wheelchair: { id: "man_in_manual_wheelchair", name: "Man in Manual Wheelchair", keywords: ["disability", "accessibility"], skins: [{ unified: "1f468-200d-1f9bd", native: "\u{1F468}\u200D\u{1F9BD}" }, { unified: "1f468-1f3fb-200d-1f9bd", native: "\u{1F468}\u{1F3FB}\u200D\u{1F9BD}" }, { unified: "1f468-1f3fc-200d-1f9bd", native: "\u{1F468}\u{1F3FC}\u200D\u{1F9BD}" }, { unified: "1f468-1f3fd-200d-1f9bd", native: "\u{1F468}\u{1F3FD}\u200D\u{1F9BD}" }, { unified: "1f468-1f3fe-200d-1f9bd", native: "\u{1F468}\u{1F3FE}\u200D\u{1F9BD}" }, { unified: "1f468-1f3ff-200d-1f9bd", native: "\u{1F468}\u{1F3FF}\u200D\u{1F9BD}" }], version: 12 }, woman_in_manual_wheelchair: { id: "woman_in_manual_wheelchair", name: "Woman in Manual Wheelchair", keywords: ["disability", "accessibility"], skins: [{ unified: "1f469-200d-1f9bd", native: "\u{1F469}\u200D\u{1F9BD}" }, { unified: "1f469-1f3fb-200d-1f9bd", native: "\u{1F469}\u{1F3FB}\u200D\u{1F9BD}" }, { unified: "1f469-1f3fc-200d-1f9bd", native: "\u{1F469}\u{1F3FC}\u200D\u{1F9BD}" }, { unified: "1f469-1f3fd-200d-1f9bd", native: "\u{1F469}\u{1F3FD}\u200D\u{1F9BD}" }, { unified: "1f469-1f3fe-200d-1f9bd", native: "\u{1F469}\u{1F3FE}\u200D\u{1F9BD}" }, { unified: "1f469-1f3ff-200d-1f9bd", native: "\u{1F469}\u{1F3FF}\u200D\u{1F9BD}" }], version: 12 }, runner: { id: "runner", name: "Runner", keywords: ["running", "person", "move"], skins: [{ unified: "1f3c3", native: "\u{1F3C3}" }, { unified: "1f3c3-1f3fb", native: "\u{1F3C3}\u{1F3FB}" }, { unified: "1f3c3-1f3fc", native: "\u{1F3C3}\u{1F3FC}" }, { unified: "1f3c3-1f3fd", native: "\u{1F3C3}\u{1F3FD}" }, { unified: "1f3c3-1f3fe", native: "\u{1F3C3}\u{1F3FE}" }, { unified: "1f3c3-1f3ff", native: "\u{1F3C3}\u{1F3FF}" }], version: 1 }, "man-running": { id: "man-running", name: "Man Running", keywords: ["walking", "exercise", "race"], skins: [{ unified: "1f3c3-200d-2642-fe0f", native: "\u{1F3C3}\u200D\u2642\uFE0F" }, { unified: "1f3c3-1f3fb-200d-2642-fe0f", native: "\u{1F3C3}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f3c3-1f3fc-200d-2642-fe0f", native: "\u{1F3C3}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f3c3-1f3fd-200d-2642-fe0f", native: "\u{1F3C3}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f3c3-1f3fe-200d-2642-fe0f", native: "\u{1F3C3}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f3c3-1f3ff-200d-2642-fe0f", native: "\u{1F3C3}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-running": { id: "woman-running", name: "Woman Running", keywords: ["walking", "exercise", "race", "female"], skins: [{ unified: "1f3c3-200d-2640-fe0f", native: "\u{1F3C3}\u200D\u2640\uFE0F" }, { unified: "1f3c3-1f3fb-200d-2640-fe0f", native: "\u{1F3C3}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f3c3-1f3fc-200d-2640-fe0f", native: "\u{1F3C3}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f3c3-1f3fd-200d-2640-fe0f", native: "\u{1F3C3}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f3c3-1f3fe-200d-2640-fe0f", native: "\u{1F3C3}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f3c3-1f3ff-200d-2640-fe0f", native: "\u{1F3C3}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, dancer: { id: "dancer", name: "Dancer", keywords: ["woman", "dancing", "female", "girl", "fun"], skins: [{ unified: "1f483", native: "\u{1F483}" }, { unified: "1f483-1f3fb", native: "\u{1F483}\u{1F3FB}" }, { unified: "1f483-1f3fc", native: "\u{1F483}\u{1F3FC}" }, { unified: "1f483-1f3fd", native: "\u{1F483}\u{1F3FD}" }, { unified: "1f483-1f3fe", native: "\u{1F483}\u{1F3FE}" }, { unified: "1f483-1f3ff", native: "\u{1F483}\u{1F3FF}" }], version: 1 }, man_dancing: { id: "man_dancing", name: "Man Dancing", keywords: ["male", "boy", "fun", "dancer"], skins: [{ unified: "1f57a", native: "\u{1F57A}" }, { unified: "1f57a-1f3fb", native: "\u{1F57A}\u{1F3FB}" }, { unified: "1f57a-1f3fc", native: "\u{1F57A}\u{1F3FC}" }, { unified: "1f57a-1f3fd", native: "\u{1F57A}\u{1F3FD}" }, { unified: "1f57a-1f3fe", native: "\u{1F57A}\u{1F3FE}" }, { unified: "1f57a-1f3ff", native: "\u{1F57A}\u{1F3FF}" }], version: 3 }, man_in_business_suit_levitating: { id: "man_in_business_suit_levitating", name: "Person in Suit Levitating", keywords: ["man", "business", "levitate", "hover", "jump"], skins: [{ unified: "1f574-fe0f", native: "\u{1F574}\uFE0F" }, { unified: "1f574-1f3fb", native: "\u{1F574}\u{1F3FB}" }, { unified: "1f574-1f3fc", native: "\u{1F574}\u{1F3FC}" }, { unified: "1f574-1f3fd", native: "\u{1F574}\u{1F3FD}" }, { unified: "1f574-1f3fe", native: "\u{1F574}\u{1F3FE}" }, { unified: "1f574-1f3ff", native: "\u{1F574}\u{1F3FF}" }], version: 1 }, dancers: { id: "dancers", name: "Woman with Bunny Ears", keywords: ["dancers", "people", "perform", "costume"], skins: [{ unified: "1f46f", native: "\u{1F46F}" }], version: 1 }, "men-with-bunny-ears-partying": { id: "men-with-bunny-ears-partying", name: "Men with Bunny Ears", keywords: ["with-bunny-ears-partying", "man", "male", "boys"], skins: [{ unified: "1f46f-200d-2642-fe0f", native: "\u{1F46F}\u200D\u2642\uFE0F" }], version: 4 }, "women-with-bunny-ears-partying": { id: "women-with-bunny-ears-partying", name: "Women with Bunny Ears", keywords: ["with-bunny-ears-partying", "woman", "female", "girls"], skins: [{ unified: "1f46f-200d-2640-fe0f", native: "\u{1F46F}\u200D\u2640\uFE0F" }], version: 4 }, person_in_steamy_room: { id: "person_in_steamy_room", name: "Person in Steamy Room", keywords: ["relax", "spa"], skins: [{ unified: "1f9d6", native: "\u{1F9D6}" }, { unified: "1f9d6-1f3fb", native: "\u{1F9D6}\u{1F3FB}" }, { unified: "1f9d6-1f3fc", native: "\u{1F9D6}\u{1F3FC}" }, { unified: "1f9d6-1f3fd", native: "\u{1F9D6}\u{1F3FD}" }, { unified: "1f9d6-1f3fe", native: "\u{1F9D6}\u{1F3FE}" }, { unified: "1f9d6-1f3ff", native: "\u{1F9D6}\u{1F3FF}" }], version: 5 }, man_in_steamy_room: { id: "man_in_steamy_room", name: "Man in Steamy Room", keywords: ["male", "spa", "steamroom", "sauna"], skins: [{ unified: "1f9d6-200d-2642-fe0f", native: "\u{1F9D6}\u200D\u2642\uFE0F" }, { unified: "1f9d6-1f3fb-200d-2642-fe0f", native: "\u{1F9D6}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9d6-1f3fc-200d-2642-fe0f", native: "\u{1F9D6}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9d6-1f3fd-200d-2642-fe0f", native: "\u{1F9D6}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9d6-1f3fe-200d-2642-fe0f", native: "\u{1F9D6}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9d6-1f3ff-200d-2642-fe0f", native: "\u{1F9D6}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 5 }, woman_in_steamy_room: { id: "woman_in_steamy_room", name: "Woman in Steamy Room", keywords: ["female", "spa", "steamroom", "sauna"], skins: [{ unified: "1f9d6-200d-2640-fe0f", native: "\u{1F9D6}\u200D\u2640\uFE0F" }, { unified: "1f9d6-1f3fb-200d-2640-fe0f", native: "\u{1F9D6}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9d6-1f3fc-200d-2640-fe0f", native: "\u{1F9D6}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9d6-1f3fd-200d-2640-fe0f", native: "\u{1F9D6}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9d6-1f3fe-200d-2640-fe0f", native: "\u{1F9D6}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9d6-1f3ff-200d-2640-fe0f", native: "\u{1F9D6}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 5 }, person_climbing: { id: "person_climbing", name: "Person Climbing", keywords: ["sport"], skins: [{ unified: "1f9d7", native: "\u{1F9D7}" }, { unified: "1f9d7-1f3fb", native: "\u{1F9D7}\u{1F3FB}" }, { unified: "1f9d7-1f3fc", native: "\u{1F9D7}\u{1F3FC}" }, { unified: "1f9d7-1f3fd", native: "\u{1F9D7}\u{1F3FD}" }, { unified: "1f9d7-1f3fe", native: "\u{1F9D7}\u{1F3FE}" }, { unified: "1f9d7-1f3ff", native: "\u{1F9D7}\u{1F3FF}" }], version: 5 }, man_climbing: { id: "man_climbing", name: "Man Climbing", keywords: ["sports", "hobby", "male", "rock"], skins: [{ unified: "1f9d7-200d-2642-fe0f", native: "\u{1F9D7}\u200D\u2642\uFE0F" }, { unified: "1f9d7-1f3fb-200d-2642-fe0f", native: "\u{1F9D7}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9d7-1f3fc-200d-2642-fe0f", native: "\u{1F9D7}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9d7-1f3fd-200d-2642-fe0f", native: "\u{1F9D7}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9d7-1f3fe-200d-2642-fe0f", native: "\u{1F9D7}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9d7-1f3ff-200d-2642-fe0f", native: "\u{1F9D7}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 5 }, woman_climbing: { id: "woman_climbing", name: "Woman Climbing", keywords: ["sports", "hobby", "female", "rock"], skins: [{ unified: "1f9d7-200d-2640-fe0f", native: "\u{1F9D7}\u200D\u2640\uFE0F" }, { unified: "1f9d7-1f3fb-200d-2640-fe0f", native: "\u{1F9D7}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9d7-1f3fc-200d-2640-fe0f", native: "\u{1F9D7}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9d7-1f3fd-200d-2640-fe0f", native: "\u{1F9D7}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9d7-1f3fe-200d-2640-fe0f", native: "\u{1F9D7}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9d7-1f3ff-200d-2640-fe0f", native: "\u{1F9D7}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 5 }, fencer: { id: "fencer", name: "Fencer", keywords: ["person", "fencing", "sports", "sword"], skins: [{ unified: "1f93a", native: "\u{1F93A}" }], version: 3 }, horse_racing: { id: "horse_racing", name: "Horse Racing", keywords: ["animal", "betting", "competition", "gambling", "luck"], skins: [{ unified: "1f3c7", native: "\u{1F3C7}" }, { unified: "1f3c7-1f3fb", native: "\u{1F3C7}\u{1F3FB}" }, { unified: "1f3c7-1f3fc", native: "\u{1F3C7}\u{1F3FC}" }, { unified: "1f3c7-1f3fd", native: "\u{1F3C7}\u{1F3FD}" }, { unified: "1f3c7-1f3fe", native: "\u{1F3C7}\u{1F3FE}" }, { unified: "1f3c7-1f3ff", native: "\u{1F3C7}\u{1F3FF}" }], version: 1 }, skier: { id: "skier", name: "Skier", keywords: ["sports", "winter", "snow"], skins: [{ unified: "26f7-fe0f", native: "\u26F7\uFE0F" }], version: 1 }, snowboarder: { id: "snowboarder", name: "Snowboarder", keywords: ["sports", "winter"], skins: [{ unified: "1f3c2", native: "\u{1F3C2}" }, { unified: "1f3c2-1f3fb", native: "\u{1F3C2}\u{1F3FB}" }, { unified: "1f3c2-1f3fc", native: "\u{1F3C2}\u{1F3FC}" }, { unified: "1f3c2-1f3fd", native: "\u{1F3C2}\u{1F3FD}" }, { unified: "1f3c2-1f3fe", native: "\u{1F3C2}\u{1F3FE}" }, { unified: "1f3c2-1f3ff", native: "\u{1F3C2}\u{1F3FF}" }], version: 1 }, golfer: { id: "golfer", name: "Person Golfing", keywords: ["golfer", "sports", "business"], skins: [{ unified: "1f3cc-fe0f", native: "\u{1F3CC}\uFE0F" }, { unified: "1f3cc-1f3fb", native: "\u{1F3CC}\u{1F3FB}" }, { unified: "1f3cc-1f3fc", native: "\u{1F3CC}\u{1F3FC}" }, { unified: "1f3cc-1f3fd", native: "\u{1F3CC}\u{1F3FD}" }, { unified: "1f3cc-1f3fe", native: "\u{1F3CC}\u{1F3FE}" }, { unified: "1f3cc-1f3ff", native: "\u{1F3CC}\u{1F3FF}" }], version: 1 }, "man-golfing": { id: "man-golfing", name: "Man Golfing", keywords: ["sport"], skins: [{ unified: "1f3cc-fe0f-200d-2642-fe0f", native: "\u{1F3CC}\uFE0F\u200D\u2642\uFE0F" }, { unified: "1f3cc-1f3fb-200d-2642-fe0f", native: "\u{1F3CC}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f3cc-1f3fc-200d-2642-fe0f", native: "\u{1F3CC}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f3cc-1f3fd-200d-2642-fe0f", native: "\u{1F3CC}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f3cc-1f3fe-200d-2642-fe0f", native: "\u{1F3CC}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f3cc-1f3ff-200d-2642-fe0f", native: "\u{1F3CC}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-golfing": { id: "woman-golfing", name: "Woman Golfing", keywords: ["sports", "business", "female"], skins: [{ unified: "1f3cc-fe0f-200d-2640-fe0f", native: "\u{1F3CC}\uFE0F\u200D\u2640\uFE0F" }, { unified: "1f3cc-1f3fb-200d-2640-fe0f", native: "\u{1F3CC}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f3cc-1f3fc-200d-2640-fe0f", native: "\u{1F3CC}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f3cc-1f3fd-200d-2640-fe0f", native: "\u{1F3CC}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f3cc-1f3fe-200d-2640-fe0f", native: "\u{1F3CC}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f3cc-1f3ff-200d-2640-fe0f", native: "\u{1F3CC}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, surfer: { id: "surfer", name: "Surfer", keywords: ["person", "surfing", "sport", "sea"], skins: [{ unified: "1f3c4", native: "\u{1F3C4}" }, { unified: "1f3c4-1f3fb", native: "\u{1F3C4}\u{1F3FB}" }, { unified: "1f3c4-1f3fc", native: "\u{1F3C4}\u{1F3FC}" }, { unified: "1f3c4-1f3fd", native: "\u{1F3C4}\u{1F3FD}" }, { unified: "1f3c4-1f3fe", native: "\u{1F3C4}\u{1F3FE}" }, { unified: "1f3c4-1f3ff", native: "\u{1F3C4}\u{1F3FF}" }], version: 1 }, "man-surfing": { id: "man-surfing", name: "Man Surfing", keywords: ["sports", "ocean", "sea", "summer", "beach"], skins: [{ unified: "1f3c4-200d-2642-fe0f", native: "\u{1F3C4}\u200D\u2642\uFE0F" }, { unified: "1f3c4-1f3fb-200d-2642-fe0f", native: "\u{1F3C4}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f3c4-1f3fc-200d-2642-fe0f", native: "\u{1F3C4}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f3c4-1f3fd-200d-2642-fe0f", native: "\u{1F3C4}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f3c4-1f3fe-200d-2642-fe0f", native: "\u{1F3C4}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f3c4-1f3ff-200d-2642-fe0f", native: "\u{1F3C4}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-surfing": { id: "woman-surfing", name: "Woman Surfing", keywords: ["sports", "ocean", "sea", "summer", "beach", "female"], skins: [{ unified: "1f3c4-200d-2640-fe0f", native: "\u{1F3C4}\u200D\u2640\uFE0F" }, { unified: "1f3c4-1f3fb-200d-2640-fe0f", native: "\u{1F3C4}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f3c4-1f3fc-200d-2640-fe0f", native: "\u{1F3C4}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f3c4-1f3fd-200d-2640-fe0f", native: "\u{1F3C4}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f3c4-1f3fe-200d-2640-fe0f", native: "\u{1F3C4}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f3c4-1f3ff-200d-2640-fe0f", native: "\u{1F3C4}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, rowboat: { id: "rowboat", name: "Rowboat", keywords: ["person", "rowing", "boat", "sport", "move"], skins: [{ unified: "1f6a3", native: "\u{1F6A3}" }, { unified: "1f6a3-1f3fb", native: "\u{1F6A3}\u{1F3FB}" }, { unified: "1f6a3-1f3fc", native: "\u{1F6A3}\u{1F3FC}" }, { unified: "1f6a3-1f3fd", native: "\u{1F6A3}\u{1F3FD}" }, { unified: "1f6a3-1f3fe", native: "\u{1F6A3}\u{1F3FE}" }, { unified: "1f6a3-1f3ff", native: "\u{1F6A3}\u{1F3FF}" }], version: 1 }, "man-rowing-boat": { id: "man-rowing-boat", name: "Man Rowing Boat", keywords: ["rowing-boat", "sports", "hobby", "water", "ship"], skins: [{ unified: "1f6a3-200d-2642-fe0f", native: "\u{1F6A3}\u200D\u2642\uFE0F" }, { unified: "1f6a3-1f3fb-200d-2642-fe0f", native: "\u{1F6A3}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f6a3-1f3fc-200d-2642-fe0f", native: "\u{1F6A3}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f6a3-1f3fd-200d-2642-fe0f", native: "\u{1F6A3}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f6a3-1f3fe-200d-2642-fe0f", native: "\u{1F6A3}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f6a3-1f3ff-200d-2642-fe0f", native: "\u{1F6A3}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-rowing-boat": { id: "woman-rowing-boat", name: "Woman Rowing Boat", keywords: ["rowing-boat", "sports", "hobby", "water", "ship", "female"], skins: [{ unified: "1f6a3-200d-2640-fe0f", native: "\u{1F6A3}\u200D\u2640\uFE0F" }, { unified: "1f6a3-1f3fb-200d-2640-fe0f", native: "\u{1F6A3}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f6a3-1f3fc-200d-2640-fe0f", native: "\u{1F6A3}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f6a3-1f3fd-200d-2640-fe0f", native: "\u{1F6A3}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f6a3-1f3fe-200d-2640-fe0f", native: "\u{1F6A3}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f6a3-1f3ff-200d-2640-fe0f", native: "\u{1F6A3}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, swimmer: { id: "swimmer", name: "Swimmer", keywords: ["person", "swimming", "sport", "pool"], skins: [{ unified: "1f3ca", native: "\u{1F3CA}" }, { unified: "1f3ca-1f3fb", native: "\u{1F3CA}\u{1F3FB}" }, { unified: "1f3ca-1f3fc", native: "\u{1F3CA}\u{1F3FC}" }, { unified: "1f3ca-1f3fd", native: "\u{1F3CA}\u{1F3FD}" }, { unified: "1f3ca-1f3fe", native: "\u{1F3CA}\u{1F3FE}" }, { unified: "1f3ca-1f3ff", native: "\u{1F3CA}\u{1F3FF}" }], version: 1 }, "man-swimming": { id: "man-swimming", name: "Man Swimming", keywords: ["sports", "exercise", "human", "athlete", "water", "summer"], skins: [{ unified: "1f3ca-200d-2642-fe0f", native: "\u{1F3CA}\u200D\u2642\uFE0F" }, { unified: "1f3ca-1f3fb-200d-2642-fe0f", native: "\u{1F3CA}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f3ca-1f3fc-200d-2642-fe0f", native: "\u{1F3CA}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f3ca-1f3fd-200d-2642-fe0f", native: "\u{1F3CA}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f3ca-1f3fe-200d-2642-fe0f", native: "\u{1F3CA}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f3ca-1f3ff-200d-2642-fe0f", native: "\u{1F3CA}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-swimming": { id: "woman-swimming", name: "Woman Swimming", keywords: ["sports", "exercise", "human", "athlete", "water", "summer", "female"], skins: [{ unified: "1f3ca-200d-2640-fe0f", native: "\u{1F3CA}\u200D\u2640\uFE0F" }, { unified: "1f3ca-1f3fb-200d-2640-fe0f", native: "\u{1F3CA}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f3ca-1f3fc-200d-2640-fe0f", native: "\u{1F3CA}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f3ca-1f3fd-200d-2640-fe0f", native: "\u{1F3CA}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f3ca-1f3fe-200d-2640-fe0f", native: "\u{1F3CA}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f3ca-1f3ff-200d-2640-fe0f", native: "\u{1F3CA}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, person_with_ball: { id: "person_with_ball", name: "Person Bouncing Ball", keywords: ["with", "sports", "human"], skins: [{ unified: "26f9-fe0f", native: "\u26F9\uFE0F" }, { unified: "26f9-1f3fb", native: "\u26F9\u{1F3FB}" }, { unified: "26f9-1f3fc", native: "\u26F9\u{1F3FC}" }, { unified: "26f9-1f3fd", native: "\u26F9\u{1F3FD}" }, { unified: "26f9-1f3fe", native: "\u26F9\u{1F3FE}" }, { unified: "26f9-1f3ff", native: "\u26F9\u{1F3FF}" }], version: 1 }, "man-bouncing-ball": { id: "man-bouncing-ball", name: "Man Bouncing Ball", keywords: ["bouncing-ball", "sport"], skins: [{ unified: "26f9-fe0f-200d-2642-fe0f", native: "\u26F9\uFE0F\u200D\u2642\uFE0F" }, { unified: "26f9-1f3fb-200d-2642-fe0f", native: "\u26F9\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "26f9-1f3fc-200d-2642-fe0f", native: "\u26F9\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "26f9-1f3fd-200d-2642-fe0f", native: "\u26F9\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "26f9-1f3fe-200d-2642-fe0f", native: "\u26F9\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "26f9-1f3ff-200d-2642-fe0f", native: "\u26F9\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-bouncing-ball": { id: "woman-bouncing-ball", name: "Woman Bouncing Ball", keywords: ["bouncing-ball", "sports", "human", "female"], skins: [{ unified: "26f9-fe0f-200d-2640-fe0f", native: "\u26F9\uFE0F\u200D\u2640\uFE0F" }, { unified: "26f9-1f3fb-200d-2640-fe0f", native: "\u26F9\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "26f9-1f3fc-200d-2640-fe0f", native: "\u26F9\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "26f9-1f3fd-200d-2640-fe0f", native: "\u26F9\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "26f9-1f3fe-200d-2640-fe0f", native: "\u26F9\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "26f9-1f3ff-200d-2640-fe0f", native: "\u26F9\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, weight_lifter: { id: "weight_lifter", name: "Person Lifting Weights", keywords: ["weight", "lifter", "sports", "training", "exercise"], skins: [{ unified: "1f3cb-fe0f", native: "\u{1F3CB}\uFE0F" }, { unified: "1f3cb-1f3fb", native: "\u{1F3CB}\u{1F3FB}" }, { unified: "1f3cb-1f3fc", native: "\u{1F3CB}\u{1F3FC}" }, { unified: "1f3cb-1f3fd", native: "\u{1F3CB}\u{1F3FD}" }, { unified: "1f3cb-1f3fe", native: "\u{1F3CB}\u{1F3FE}" }, { unified: "1f3cb-1f3ff", native: "\u{1F3CB}\u{1F3FF}" }], version: 1 }, "man-lifting-weights": { id: "man-lifting-weights", name: "Man Lifting Weights", keywords: ["lifting-weights", "sport"], skins: [{ unified: "1f3cb-fe0f-200d-2642-fe0f", native: "\u{1F3CB}\uFE0F\u200D\u2642\uFE0F" }, { unified: "1f3cb-1f3fb-200d-2642-fe0f", native: "\u{1F3CB}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f3cb-1f3fc-200d-2642-fe0f", native: "\u{1F3CB}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f3cb-1f3fd-200d-2642-fe0f", native: "\u{1F3CB}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f3cb-1f3fe-200d-2642-fe0f", native: "\u{1F3CB}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f3cb-1f3ff-200d-2642-fe0f", native: "\u{1F3CB}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-lifting-weights": { id: "woman-lifting-weights", name: "Woman Lifting Weights", keywords: ["lifting-weights", "sports", "training", "exercise", "female"], skins: [{ unified: "1f3cb-fe0f-200d-2640-fe0f", native: "\u{1F3CB}\uFE0F\u200D\u2640\uFE0F" }, { unified: "1f3cb-1f3fb-200d-2640-fe0f", native: "\u{1F3CB}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f3cb-1f3fc-200d-2640-fe0f", native: "\u{1F3CB}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f3cb-1f3fd-200d-2640-fe0f", native: "\u{1F3CB}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f3cb-1f3fe-200d-2640-fe0f", native: "\u{1F3CB}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f3cb-1f3ff-200d-2640-fe0f", native: "\u{1F3CB}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, bicyclist: { id: "bicyclist", name: "Bicyclist", keywords: ["person", "biking", "sport", "move"], skins: [{ unified: "1f6b4", native: "\u{1F6B4}" }, { unified: "1f6b4-1f3fb", native: "\u{1F6B4}\u{1F3FB}" }, { unified: "1f6b4-1f3fc", native: "\u{1F6B4}\u{1F3FC}" }, { unified: "1f6b4-1f3fd", native: "\u{1F6B4}\u{1F3FD}" }, { unified: "1f6b4-1f3fe", native: "\u{1F6B4}\u{1F3FE}" }, { unified: "1f6b4-1f3ff", native: "\u{1F6B4}\u{1F3FF}" }], version: 1 }, "man-biking": { id: "man-biking", name: "Man Biking", keywords: ["sports", "bike", "exercise", "hipster"], skins: [{ unified: "1f6b4-200d-2642-fe0f", native: "\u{1F6B4}\u200D\u2642\uFE0F" }, { unified: "1f6b4-1f3fb-200d-2642-fe0f", native: "\u{1F6B4}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f6b4-1f3fc-200d-2642-fe0f", native: "\u{1F6B4}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f6b4-1f3fd-200d-2642-fe0f", native: "\u{1F6B4}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f6b4-1f3fe-200d-2642-fe0f", native: "\u{1F6B4}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f6b4-1f3ff-200d-2642-fe0f", native: "\u{1F6B4}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-biking": { id: "woman-biking", name: "Woman Biking", keywords: ["sports", "bike", "exercise", "hipster", "female"], skins: [{ unified: "1f6b4-200d-2640-fe0f", native: "\u{1F6B4}\u200D\u2640\uFE0F" }, { unified: "1f6b4-1f3fb-200d-2640-fe0f", native: "\u{1F6B4}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f6b4-1f3fc-200d-2640-fe0f", native: "\u{1F6B4}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f6b4-1f3fd-200d-2640-fe0f", native: "\u{1F6B4}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f6b4-1f3fe-200d-2640-fe0f", native: "\u{1F6B4}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f6b4-1f3ff-200d-2640-fe0f", native: "\u{1F6B4}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, mountain_bicyclist: { id: "mountain_bicyclist", name: "Mountain Bicyclist", keywords: ["person", "biking", "sport", "move"], skins: [{ unified: "1f6b5", native: "\u{1F6B5}" }, { unified: "1f6b5-1f3fb", native: "\u{1F6B5}\u{1F3FB}" }, { unified: "1f6b5-1f3fc", native: "\u{1F6B5}\u{1F3FC}" }, { unified: "1f6b5-1f3fd", native: "\u{1F6B5}\u{1F3FD}" }, { unified: "1f6b5-1f3fe", native: "\u{1F6B5}\u{1F3FE}" }, { unified: "1f6b5-1f3ff", native: "\u{1F6B5}\u{1F3FF}" }], version: 1 }, "man-mountain-biking": { id: "man-mountain-biking", name: "Man Mountain Biking", keywords: ["mountain-biking", "transportation", "sports", "human", "race", "bike"], skins: [{ unified: "1f6b5-200d-2642-fe0f", native: "\u{1F6B5}\u200D\u2642\uFE0F" }, { unified: "1f6b5-1f3fb-200d-2642-fe0f", native: "\u{1F6B5}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f6b5-1f3fc-200d-2642-fe0f", native: "\u{1F6B5}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f6b5-1f3fd-200d-2642-fe0f", native: "\u{1F6B5}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f6b5-1f3fe-200d-2642-fe0f", native: "\u{1F6B5}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f6b5-1f3ff-200d-2642-fe0f", native: "\u{1F6B5}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-mountain-biking": { id: "woman-mountain-biking", name: "Woman Mountain Biking", keywords: ["mountain-biking", "transportation", "sports", "human", "race", "bike", "female"], skins: [{ unified: "1f6b5-200d-2640-fe0f", native: "\u{1F6B5}\u200D\u2640\uFE0F" }, { unified: "1f6b5-1f3fb-200d-2640-fe0f", native: "\u{1F6B5}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f6b5-1f3fc-200d-2640-fe0f", native: "\u{1F6B5}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f6b5-1f3fd-200d-2640-fe0f", native: "\u{1F6B5}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f6b5-1f3fe-200d-2640-fe0f", native: "\u{1F6B5}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f6b5-1f3ff-200d-2640-fe0f", native: "\u{1F6B5}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, person_doing_cartwheel: { id: "person_doing_cartwheel", name: "Person Cartwheeling", keywords: ["doing", "cartwheel", "sport", "gymnastic"], skins: [{ unified: "1f938", native: "\u{1F938}" }, { unified: "1f938-1f3fb", native: "\u{1F938}\u{1F3FB}" }, { unified: "1f938-1f3fc", native: "\u{1F938}\u{1F3FC}" }, { unified: "1f938-1f3fd", native: "\u{1F938}\u{1F3FD}" }, { unified: "1f938-1f3fe", native: "\u{1F938}\u{1F3FE}" }, { unified: "1f938-1f3ff", native: "\u{1F938}\u{1F3FF}" }], version: 3 }, "man-cartwheeling": { id: "man-cartwheeling", name: "Man Cartwheeling", keywords: ["gymnastics"], skins: [{ unified: "1f938-200d-2642-fe0f", native: "\u{1F938}\u200D\u2642\uFE0F" }, { unified: "1f938-1f3fb-200d-2642-fe0f", native: "\u{1F938}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f938-1f3fc-200d-2642-fe0f", native: "\u{1F938}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f938-1f3fd-200d-2642-fe0f", native: "\u{1F938}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f938-1f3fe-200d-2642-fe0f", native: "\u{1F938}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f938-1f3ff-200d-2642-fe0f", native: "\u{1F938}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-cartwheeling": { id: "woman-cartwheeling", name: "Woman Cartwheeling", keywords: ["gymnastics"], skins: [{ unified: "1f938-200d-2640-fe0f", native: "\u{1F938}\u200D\u2640\uFE0F" }, { unified: "1f938-1f3fb-200d-2640-fe0f", native: "\u{1F938}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f938-1f3fc-200d-2640-fe0f", native: "\u{1F938}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f938-1f3fd-200d-2640-fe0f", native: "\u{1F938}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f938-1f3fe-200d-2640-fe0f", native: "\u{1F938}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f938-1f3ff-200d-2640-fe0f", native: "\u{1F938}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, wrestlers: { id: "wrestlers", name: "Wrestlers", keywords: ["people", "wrestling", "sport"], skins: [{ unified: "1f93c", native: "\u{1F93C}" }], version: 3 }, "man-wrestling": { id: "man-wrestling", name: "Men Wrestling", keywords: ["man", "sports", "wrestlers"], skins: [{ unified: "1f93c-200d-2642-fe0f", native: "\u{1F93C}\u200D\u2642\uFE0F" }], version: 4 }, "woman-wrestling": { id: "woman-wrestling", name: "Women Wrestling", keywords: ["woman", "sports", "wrestlers"], skins: [{ unified: "1f93c-200d-2640-fe0f", native: "\u{1F93C}\u200D\u2640\uFE0F" }], version: 4 }, water_polo: { id: "water_polo", name: "Water Polo", keywords: ["person", "playing", "sport"], skins: [{ unified: "1f93d", native: "\u{1F93D}" }, { unified: "1f93d-1f3fb", native: "\u{1F93D}\u{1F3FB}" }, { unified: "1f93d-1f3fc", native: "\u{1F93D}\u{1F3FC}" }, { unified: "1f93d-1f3fd", native: "\u{1F93D}\u{1F3FD}" }, { unified: "1f93d-1f3fe", native: "\u{1F93D}\u{1F3FE}" }, { unified: "1f93d-1f3ff", native: "\u{1F93D}\u{1F3FF}" }], version: 3 }, "man-playing-water-polo": { id: "man-playing-water-polo", name: "Man Playing Water Polo", keywords: ["playing-water-polo", "sports", "pool"], skins: [{ unified: "1f93d-200d-2642-fe0f", native: "\u{1F93D}\u200D\u2642\uFE0F" }, { unified: "1f93d-1f3fb-200d-2642-fe0f", native: "\u{1F93D}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f93d-1f3fc-200d-2642-fe0f", native: "\u{1F93D}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f93d-1f3fd-200d-2642-fe0f", native: "\u{1F93D}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f93d-1f3fe-200d-2642-fe0f", native: "\u{1F93D}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f93d-1f3ff-200d-2642-fe0f", native: "\u{1F93D}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-playing-water-polo": { id: "woman-playing-water-polo", name: "Woman Playing Water Polo", keywords: ["playing-water-polo", "sports", "pool"], skins: [{ unified: "1f93d-200d-2640-fe0f", native: "\u{1F93D}\u200D\u2640\uFE0F" }, { unified: "1f93d-1f3fb-200d-2640-fe0f", native: "\u{1F93D}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f93d-1f3fc-200d-2640-fe0f", native: "\u{1F93D}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f93d-1f3fd-200d-2640-fe0f", native: "\u{1F93D}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f93d-1f3fe-200d-2640-fe0f", native: "\u{1F93D}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f93d-1f3ff-200d-2640-fe0f", native: "\u{1F93D}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, handball: { id: "handball", name: "Handball", keywords: ["person", "playing", "sport"], skins: [{ unified: "1f93e", native: "\u{1F93E}" }, { unified: "1f93e-1f3fb", native: "\u{1F93E}\u{1F3FB}" }, { unified: "1f93e-1f3fc", native: "\u{1F93E}\u{1F3FC}" }, { unified: "1f93e-1f3fd", native: "\u{1F93E}\u{1F3FD}" }, { unified: "1f93e-1f3fe", native: "\u{1F93E}\u{1F3FE}" }, { unified: "1f93e-1f3ff", native: "\u{1F93E}\u{1F3FF}" }], version: 3 }, "man-playing-handball": { id: "man-playing-handball", name: "Man Playing Handball", keywords: ["playing-handball", "sports"], skins: [{ unified: "1f93e-200d-2642-fe0f", native: "\u{1F93E}\u200D\u2642\uFE0F" }, { unified: "1f93e-1f3fb-200d-2642-fe0f", native: "\u{1F93E}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f93e-1f3fc-200d-2642-fe0f", native: "\u{1F93E}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f93e-1f3fd-200d-2642-fe0f", native: "\u{1F93E}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f93e-1f3fe-200d-2642-fe0f", native: "\u{1F93E}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f93e-1f3ff-200d-2642-fe0f", native: "\u{1F93E}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-playing-handball": { id: "woman-playing-handball", name: "Woman Playing Handball", keywords: ["playing-handball", "sports"], skins: [{ unified: "1f93e-200d-2640-fe0f", native: "\u{1F93E}\u200D\u2640\uFE0F" }, { unified: "1f93e-1f3fb-200d-2640-fe0f", native: "\u{1F93E}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f93e-1f3fc-200d-2640-fe0f", native: "\u{1F93E}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f93e-1f3fd-200d-2640-fe0f", native: "\u{1F93E}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f93e-1f3fe-200d-2640-fe0f", native: "\u{1F93E}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f93e-1f3ff-200d-2640-fe0f", native: "\u{1F93E}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, juggling: { id: "juggling", name: "Juggling", keywords: ["person", "performance", "balance"], skins: [{ unified: "1f939", native: "\u{1F939}" }, { unified: "1f939-1f3fb", native: "\u{1F939}\u{1F3FB}" }, { unified: "1f939-1f3fc", native: "\u{1F939}\u{1F3FC}" }, { unified: "1f939-1f3fd", native: "\u{1F939}\u{1F3FD}" }, { unified: "1f939-1f3fe", native: "\u{1F939}\u{1F3FE}" }, { unified: "1f939-1f3ff", native: "\u{1F939}\u{1F3FF}" }], version: 3 }, "man-juggling": { id: "man-juggling", name: "Man Juggling", keywords: ["juggle", "balance", "skill", "multitask"], skins: [{ unified: "1f939-200d-2642-fe0f", native: "\u{1F939}\u200D\u2642\uFE0F" }, { unified: "1f939-1f3fb-200d-2642-fe0f", native: "\u{1F939}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f939-1f3fc-200d-2642-fe0f", native: "\u{1F939}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f939-1f3fd-200d-2642-fe0f", native: "\u{1F939}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f939-1f3fe-200d-2642-fe0f", native: "\u{1F939}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f939-1f3ff-200d-2642-fe0f", native: "\u{1F939}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 4 }, "woman-juggling": { id: "woman-juggling", name: "Woman Juggling", keywords: ["juggle", "balance", "skill", "multitask"], skins: [{ unified: "1f939-200d-2640-fe0f", native: "\u{1F939}\u200D\u2640\uFE0F" }, { unified: "1f939-1f3fb-200d-2640-fe0f", native: "\u{1F939}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f939-1f3fc-200d-2640-fe0f", native: "\u{1F939}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f939-1f3fd-200d-2640-fe0f", native: "\u{1F939}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f939-1f3fe-200d-2640-fe0f", native: "\u{1F939}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f939-1f3ff-200d-2640-fe0f", native: "\u{1F939}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 4 }, person_in_lotus_position: { id: "person_in_lotus_position", name: "Person in Lotus Position", keywords: ["meditate"], skins: [{ unified: "1f9d8", native: "\u{1F9D8}" }, { unified: "1f9d8-1f3fb", native: "\u{1F9D8}\u{1F3FB}" }, { unified: "1f9d8-1f3fc", native: "\u{1F9D8}\u{1F3FC}" }, { unified: "1f9d8-1f3fd", native: "\u{1F9D8}\u{1F3FD}" }, { unified: "1f9d8-1f3fe", native: "\u{1F9D8}\u{1F3FE}" }, { unified: "1f9d8-1f3ff", native: "\u{1F9D8}\u{1F3FF}" }], version: 5 }, man_in_lotus_position: { id: "man_in_lotus_position", name: "Man in Lotus Position", keywords: ["male", "meditation", "yoga", "serenity", "zen", "mindfulness"], skins: [{ unified: "1f9d8-200d-2642-fe0f", native: "\u{1F9D8}\u200D\u2642\uFE0F" }, { unified: "1f9d8-1f3fb-200d-2642-fe0f", native: "\u{1F9D8}\u{1F3FB}\u200D\u2642\uFE0F" }, { unified: "1f9d8-1f3fc-200d-2642-fe0f", native: "\u{1F9D8}\u{1F3FC}\u200D\u2642\uFE0F" }, { unified: "1f9d8-1f3fd-200d-2642-fe0f", native: "\u{1F9D8}\u{1F3FD}\u200D\u2642\uFE0F" }, { unified: "1f9d8-1f3fe-200d-2642-fe0f", native: "\u{1F9D8}\u{1F3FE}\u200D\u2642\uFE0F" }, { unified: "1f9d8-1f3ff-200d-2642-fe0f", native: "\u{1F9D8}\u{1F3FF}\u200D\u2642\uFE0F" }], version: 5 }, woman_in_lotus_position: { id: "woman_in_lotus_position", name: "Woman in Lotus Position", keywords: ["female", "meditation", "yoga", "serenity", "zen", "mindfulness"], skins: [{ unified: "1f9d8-200d-2640-fe0f", native: "\u{1F9D8}\u200D\u2640\uFE0F" }, { unified: "1f9d8-1f3fb-200d-2640-fe0f", native: "\u{1F9D8}\u{1F3FB}\u200D\u2640\uFE0F" }, { unified: "1f9d8-1f3fc-200d-2640-fe0f", native: "\u{1F9D8}\u{1F3FC}\u200D\u2640\uFE0F" }, { unified: "1f9d8-1f3fd-200d-2640-fe0f", native: "\u{1F9D8}\u{1F3FD}\u200D\u2640\uFE0F" }, { unified: "1f9d8-1f3fe-200d-2640-fe0f", native: "\u{1F9D8}\u{1F3FE}\u200D\u2640\uFE0F" }, { unified: "1f9d8-1f3ff-200d-2640-fe0f", native: "\u{1F9D8}\u{1F3FF}\u200D\u2640\uFE0F" }], version: 5 }, bath: { id: "bath", name: "Bath", keywords: ["person", "taking", "clean", "shower", "bathroom"], skins: [{ unified: "1f6c0", native: "\u{1F6C0}" }, { unified: "1f6c0-1f3fb", native: "\u{1F6C0}\u{1F3FB}" }, { unified: "1f6c0-1f3fc", native: "\u{1F6C0}\u{1F3FC}" }, { unified: "1f6c0-1f3fd", native: "\u{1F6C0}\u{1F3FD}" }, { unified: "1f6c0-1f3fe", native: "\u{1F6C0}\u{1F3FE}" }, { unified: "1f6c0-1f3ff", native: "\u{1F6C0}\u{1F3FF}" }], version: 1 }, sleeping_accommodation: { id: "sleeping_accommodation", name: "Person in Bed", keywords: ["sleeping", "accommodation", "rest"], skins: [{ unified: "1f6cc", native: "\u{1F6CC}" }, { unified: "1f6cc-1f3fb", native: "\u{1F6CC}\u{1F3FB}" }, { unified: "1f6cc-1f3fc", native: "\u{1F6CC}\u{1F3FC}" }, { unified: "1f6cc-1f3fd", native: "\u{1F6CC}\u{1F3FD}" }, { unified: "1f6cc-1f3fe", native: "\u{1F6CC}\u{1F3FE}" }, { unified: "1f6cc-1f3ff", native: "\u{1F6CC}\u{1F3FF}" }], version: 1 }, people_holding_hands: { id: "people_holding_hands", name: "People Holding Hands", keywords: ["friendship"], skins: [{ unified: "1f9d1-200d-1f91d-200d-1f9d1", native: "\u{1F9D1}\u200D\u{1F91D}\u200D\u{1F9D1}" }, { unified: "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb", native: "\u{1F9D1}\u{1F3FB}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FB}" }, { unified: "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc", native: "\u{1F9D1}\u{1F3FC}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FC}" }, { unified: "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd", native: "\u{1F9D1}\u{1F3FD}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FD}" }, { unified: "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe", native: "\u{1F9D1}\u{1F3FE}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FE}" }, { unified: "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff", native: "\u{1F9D1}\u{1F3FF}\u200D\u{1F91D}\u200D\u{1F9D1}\u{1F3FF}" }], version: 12 }, two_women_holding_hands: { id: "two_women_holding_hands", name: "Women Holding Hands", keywords: ["two", "pair", "friendship", "couple", "love", "like", "female", "people", "human"], skins: [{ unified: "1f46d", native: "\u{1F46D}" }, { unified: "1f46d-1f3fb", native: "\u{1F46D}\u{1F3FB}" }, { unified: "1f46d-1f3fc", native: "\u{1F46D}\u{1F3FC}" }, { unified: "1f46d-1f3fd", native: "\u{1F46D}\u{1F3FD}" }, { unified: "1f46d-1f3fe", native: "\u{1F46D}\u{1F3FE}" }, { unified: "1f46d-1f3ff", native: "\u{1F46D}\u{1F3FF}" }], version: 1 }, man_and_woman_holding_hands: { id: "man_and_woman_holding_hands", name: "Man and Woman Holding Hands", keywords: ["couple", "pair", "people", "human", "love", "date", "dating", "like", "affection", "valentines", "marriage"], skins: [{ unified: "1f46b", native: "\u{1F46B}" }, { unified: "1f46b-1f3fb", native: "\u{1F46B}\u{1F3FB}" }, { unified: "1f46b-1f3fc", native: "\u{1F46B}\u{1F3FC}" }, { unified: "1f46b-1f3fd", native: "\u{1F46B}\u{1F3FD}" }, { unified: "1f46b-1f3fe", native: "\u{1F46B}\u{1F3FE}" }, { unified: "1f46b-1f3ff", native: "\u{1F46B}\u{1F3FF}" }], version: 1 }, two_men_holding_hands: { id: "two_men_holding_hands", name: "Men Holding Hands", keywords: ["two", "pair", "couple", "love", "like", "bromance", "friendship", "people", "human"], skins: [{ unified: "1f46c", native: "\u{1F46C}" }, { unified: "1f46c-1f3fb", native: "\u{1F46C}\u{1F3FB}" }, { unified: "1f46c-1f3fc", native: "\u{1F46C}\u{1F3FC}" }, { unified: "1f46c-1f3fd", native: "\u{1F46C}\u{1F3FD}" }, { unified: "1f46c-1f3fe", native: "\u{1F46C}\u{1F3FE}" }, { unified: "1f46c-1f3ff", native: "\u{1F46C}\u{1F3FF}" }], version: 1 }, couplekiss: { id: "couplekiss", name: "Kiss", keywords: ["couplekiss", "pair", "valentines", "love", "like", "dating", "marriage"], skins: [{ unified: "1f48f", native: "\u{1F48F}" }, { unified: "1f48f-1f3fb", native: "\u{1F48F}\u{1F3FB}" }, { unified: "1f48f-1f3fc", native: "\u{1F48F}\u{1F3FC}" }, { unified: "1f48f-1f3fd", native: "\u{1F48F}\u{1F3FD}" }, { unified: "1f48f-1f3fe", native: "\u{1F48F}\u{1F3FE}" }, { unified: "1f48f-1f3ff", native: "\u{1F48F}\u{1F3FF}" }], version: 1 }, "woman-kiss-man": { id: "woman-kiss-man", name: "Kiss: Woman, Man", keywords: ["woman", "kiss-man", "kiss", "love"], skins: [{ unified: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f468", native: "\u{1F469}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}" }, { unified: "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb", native: "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}" }, { unified: "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc", native: "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}" }, { unified: "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd", native: "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}" }, { unified: "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe", native: "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}" }, { unified: "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff", native: "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}" }], version: 2 }, "man-kiss-man": { id: "man-kiss-man", name: "Kiss: Man, Man", keywords: ["kiss-man", "kiss", "pair", "valentines", "love", "like", "dating", "marriage"], skins: [{ unified: "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468", native: "\u{1F468}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}" }, { unified: "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb", native: "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FB}" }, { unified: "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc", native: "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FC}" }, { unified: "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd", native: "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FD}" }, { unified: "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe", native: "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FE}" }, { unified: "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff", native: "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F468}\u{1F3FF}" }], version: 2 }, "woman-kiss-woman": { id: "woman-kiss-woman", name: "Kiss: Woman, Woman", keywords: ["kiss-woman", "kiss", "pair", "valentines", "love", "like", "dating", "marriage"], skins: [{ unified: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469", native: "\u{1F469}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}" }, { unified: "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb", native: "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FB}" }, { unified: "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc", native: "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FC}" }, { unified: "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd", native: "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FD}" }, { unified: "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe", native: "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FE}" }, { unified: "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff", native: "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F48B}\u200D\u{1F469}\u{1F3FF}" }], version: 2 }, couple_with_heart: { id: "couple_with_heart", name: "Couple with Heart", keywords: ["pair", "love", "like", "affection", "human", "dating", "valentines", "marriage"], skins: [{ unified: "1f491", native: "\u{1F491}" }, { unified: "1f491-1f3fb", native: "\u{1F491}\u{1F3FB}" }, { unified: "1f491-1f3fc", native: "\u{1F491}\u{1F3FC}" }, { unified: "1f491-1f3fd", native: "\u{1F491}\u{1F3FD}" }, { unified: "1f491-1f3fe", native: "\u{1F491}\u{1F3FE}" }, { unified: "1f491-1f3ff", native: "\u{1F491}\u{1F3FF}" }], version: 1 }, "woman-heart-man": { id: "woman-heart-man", name: "Couple with Heart: Woman, Man", keywords: ["woman", "heart-man", "heart", "love"], skins: [{ unified: "1f469-200d-2764-fe0f-200d-1f468", native: "\u{1F469}\u200D\u2764\uFE0F\u200D\u{1F468}" }, { unified: "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb", native: "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}" }, { unified: "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc", native: "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}" }, { unified: "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd", native: "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}" }, { unified: "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe", native: "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}" }, { unified: "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff", native: "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}" }], version: 2 }, "man-heart-man": { id: "man-heart-man", name: "Couple with Heart: Man, Man", keywords: ["heart-man", "heart", "pair", "love", "like", "affection", "human", "dating", "valentines", "marriage"], skins: [{ unified: "1f468-200d-2764-fe0f-200d-1f468", native: "\u{1F468}\u200D\u2764\uFE0F\u200D\u{1F468}" }, { unified: "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb", native: "\u{1F468}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FB}" }, { unified: "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc", native: "\u{1F468}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FC}" }, { unified: "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd", native: "\u{1F468}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FD}" }, { unified: "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe", native: "\u{1F468}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FE}" }, { unified: "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff", native: "\u{1F468}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F468}\u{1F3FF}" }], version: 2 }, "woman-heart-woman": { id: "woman-heart-woman", name: "Couple with Heart: Woman, Woman", keywords: ["heart-woman", "heart", "pair", "love", "like", "affection", "human", "dating", "valentines", "marriage"], skins: [{ unified: "1f469-200d-2764-fe0f-200d-1f469", native: "\u{1F469}\u200D\u2764\uFE0F\u200D\u{1F469}" }, { unified: "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fb", native: "\u{1F469}\u{1F3FB}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FB}" }, { unified: "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fc", native: "\u{1F469}\u{1F3FC}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FC}" }, { unified: "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fd", native: "\u{1F469}\u{1F3FD}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FD}" }, { unified: "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fe", native: "\u{1F469}\u{1F3FE}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FE}" }, { unified: "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3ff", native: "\u{1F469}\u{1F3FF}\u200D\u2764\uFE0F\u200D\u{1F469}\u{1F3FF}" }], version: 2 }, family: { id: "family", name: "Family", keywords: ["home", "parents", "child", "mom", "dad", "father", "mother", "people", "human"], skins: [{ unified: "1f46a", native: "\u{1F46A}" }], version: 1 }, "man-woman-boy": { id: "man-woman-boy", name: "Family: Man, Woman, Boy", keywords: ["man", "woman-boy", "family", "woman", "love"], skins: [{ unified: "1f468-200d-1f469-200d-1f466", native: "\u{1F468}\u200D\u{1F469}\u200D\u{1F466}" }], version: 2 }, "man-woman-girl": { id: "man-woman-girl", name: "Family: Man, Woman, Girl", keywords: ["man", "woman-girl", "family", "woman", "home", "parents", "people", "human", "child"], skins: [{ unified: "1f468-200d-1f469-200d-1f467", native: "\u{1F468}\u200D\u{1F469}\u200D\u{1F467}" }], version: 2 }, "man-woman-girl-boy": { id: "man-woman-girl-boy", name: "Family: Man, Woman, Girl, Boy", keywords: ["man", "woman-girl-boy", "family", "woman", "girl", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f469-200d-1f467-200d-1f466", native: "\u{1F468}\u200D\u{1F469}\u200D\u{1F467}\u200D\u{1F466}" }], version: 2 }, "man-woman-boy-boy": { id: "man-woman-boy-boy", name: "Family: Man, Woman, Boy, Boy", keywords: ["man", "woman-boy-boy", "family", "woman", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f469-200d-1f466-200d-1f466", native: "\u{1F468}\u200D\u{1F469}\u200D\u{1F466}\u200D\u{1F466}" }], version: 2 }, "man-woman-girl-girl": { id: "man-woman-girl-girl", name: "Family: Man, Woman, Girl, Girl", keywords: ["man", "woman-girl-girl", "family", "woman", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f469-200d-1f467-200d-1f467", native: "\u{1F468}\u200D\u{1F469}\u200D\u{1F467}\u200D\u{1F467}" }], version: 2 }, "man-man-boy": { id: "man-man-boy", name: "Family: Man, Man, Boy", keywords: ["man", "man-boy", "family", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f468-200d-1f466", native: "\u{1F468}\u200D\u{1F468}\u200D\u{1F466}" }], version: 2 }, "man-man-girl": { id: "man-man-girl", name: "Family: Man, Man, Girl", keywords: ["man", "man-girl", "family", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f468-200d-1f467", native: "\u{1F468}\u200D\u{1F468}\u200D\u{1F467}" }], version: 2 }, "man-man-girl-boy": { id: "man-man-girl-boy", name: "Family: Man, Man, Girl, Boy", keywords: ["man", "man-girl-boy", "family", "girl", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f468-200d-1f467-200d-1f466", native: "\u{1F468}\u200D\u{1F468}\u200D\u{1F467}\u200D\u{1F466}" }], version: 2 }, "man-man-boy-boy": { id: "man-man-boy-boy", name: "Family: Man, Man, Boy, Boy", keywords: ["man", "man-boy-boy", "family", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f468-200d-1f466-200d-1f466", native: "\u{1F468}\u200D\u{1F468}\u200D\u{1F466}\u200D\u{1F466}" }], version: 2 }, "man-man-girl-girl": { id: "man-man-girl-girl", name: "Family: Man, Man, Girl, Girl", keywords: ["man", "man-girl-girl", "family", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f468-200d-1f467-200d-1f467", native: "\u{1F468}\u200D\u{1F468}\u200D\u{1F467}\u200D\u{1F467}" }], version: 2 }, "woman-woman-boy": { id: "woman-woman-boy", name: "Family: Woman, Woman, Boy", keywords: ["woman", "woman-boy", "family", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f469-200d-1f469-200d-1f466", native: "\u{1F469}\u200D\u{1F469}\u200D\u{1F466}" }], version: 2 }, "woman-woman-girl": { id: "woman-woman-girl", name: "Family: Woman, Woman, Girl", keywords: ["woman", "woman-girl", "family", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f469-200d-1f469-200d-1f467", native: "\u{1F469}\u200D\u{1F469}\u200D\u{1F467}" }], version: 2 }, "woman-woman-girl-boy": { id: "woman-woman-girl-boy", name: "Family: Woman, Woman, Girl, Boy", keywords: ["woman", "woman-girl-boy", "family", "girl", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f469-200d-1f469-200d-1f467-200d-1f466", native: "\u{1F469}\u200D\u{1F469}\u200D\u{1F467}\u200D\u{1F466}" }], version: 2 }, "woman-woman-boy-boy": { id: "woman-woman-boy-boy", name: "Family: Woman, Woman, Boy, Boy", keywords: ["woman", "woman-boy-boy", "family", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f469-200d-1f469-200d-1f466-200d-1f466", native: "\u{1F469}\u200D\u{1F469}\u200D\u{1F466}\u200D\u{1F466}" }], version: 2 }, "woman-woman-girl-girl": { id: "woman-woman-girl-girl", name: "Family: Woman, Woman, Girl, Girl", keywords: ["woman", "woman-girl-girl", "family", "home", "parents", "people", "human", "children"], skins: [{ unified: "1f469-200d-1f469-200d-1f467-200d-1f467", native: "\u{1F469}\u200D\u{1F469}\u200D\u{1F467}\u200D\u{1F467}" }], version: 2 }, "man-boy": { id: "man-boy", name: "Family: Man, Boy", keywords: ["man", "family", "home", "parent", "people", "human", "child"], skins: [{ unified: "1f468-200d-1f466", native: "\u{1F468}\u200D\u{1F466}" }], version: 4 }, "man-boy-boy": { id: "man-boy-boy", name: "Family: Man, Boy, Boy", keywords: ["man", "boy-boy", "family", "home", "parent", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f466-200d-1f466", native: "\u{1F468}\u200D\u{1F466}\u200D\u{1F466}" }], version: 4 }, "man-girl": { id: "man-girl", name: "Family: Man, Girl", keywords: ["man", "family", "home", "parent", "people", "human", "child"], skins: [{ unified: "1f468-200d-1f467", native: "\u{1F468}\u200D\u{1F467}" }], version: 4 }, "man-girl-boy": { id: "man-girl-boy", name: "Family: Man, Girl, Boy", keywords: ["man", "girl-boy", "family", "girl", "home", "parent", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f467-200d-1f466", native: "\u{1F468}\u200D\u{1F467}\u200D\u{1F466}" }], version: 4 }, "man-girl-girl": { id: "man-girl-girl", name: "Family: Man, Girl, Girl", keywords: ["man", "girl-girl", "family", "home", "parent", "people", "human", "children"], skins: [{ unified: "1f468-200d-1f467-200d-1f467", native: "\u{1F468}\u200D\u{1F467}\u200D\u{1F467}" }], version: 4 }, "woman-boy": { id: "woman-boy", name: "Family: Woman, Boy", keywords: ["woman", "family", "home", "parent", "people", "human", "child"], skins: [{ unified: "1f469-200d-1f466", native: "\u{1F469}\u200D\u{1F466}" }], version: 4 }, "woman-boy-boy": { id: "woman-boy-boy", name: "Family: Woman, Boy, Boy", keywords: ["woman", "boy-boy", "family", "home", "parent", "people", "human", "children"], skins: [{ unified: "1f469-200d-1f466-200d-1f466", native: "\u{1F469}\u200D\u{1F466}\u200D\u{1F466}" }], version: 4 }, "woman-girl": { id: "woman-girl", name: "Family: Woman, Girl", keywords: ["woman", "family", "home", "parent", "people", "human", "child"], skins: [{ unified: "1f469-200d-1f467", native: "\u{1F469}\u200D\u{1F467}" }], version: 4 }, "woman-girl-boy": { id: "woman-girl-boy", name: "Family: Woman, Girl, Boy", keywords: ["woman", "girl-boy", "family", "girl", "home", "parent", "people", "human", "children"], skins: [{ unified: "1f469-200d-1f467-200d-1f466", native: "\u{1F469}\u200D\u{1F467}\u200D\u{1F466}" }], version: 4 }, "woman-girl-girl": { id: "woman-girl-girl", name: "Family: Woman, Girl, Girl", keywords: ["woman", "girl-girl", "family", "home", "parent", "people", "human", "children"], skins: [{ unified: "1f469-200d-1f467-200d-1f467", native: "\u{1F469}\u200D\u{1F467}\u200D\u{1F467}" }], version: 4 }, speaking_head_in_silhouette: { id: "speaking_head_in_silhouette", name: "Speaking Head", keywords: ["in", "silhouette", "user", "person", "human", "sing", "say", "talk"], skins: [{ unified: "1f5e3-fe0f", native: "\u{1F5E3}\uFE0F" }], version: 1 }, bust_in_silhouette: { id: "bust_in_silhouette", name: "Bust in Silhouette", keywords: ["user", "person", "human"], skins: [{ unified: "1f464", native: "\u{1F464}" }], version: 1 }, busts_in_silhouette: { id: "busts_in_silhouette", name: "Busts in Silhouette", keywords: ["user", "person", "human", "group", "team"], skins: [{ unified: "1f465", native: "\u{1F465}" }], version: 1 }, people_hugging: { id: "people_hugging", name: "People Hugging", keywords: ["care"], skins: [{ unified: "1fac2", native: "\u{1FAC2}" }], version: 13 }, footprints: { id: "footprints", name: "Footprints", keywords: ["feet", "tracking", "walking", "beach"], skins: [{ unified: "1f463", native: "\u{1F463}" }], version: 1 }, monkey_face: { id: "monkey_face", name: "Monkey Face", emoticons: [":o)"], keywords: ["animal", "nature", "circus"], skins: [{ unified: "1f435", native: "\u{1F435}" }], version: 1 }, monkey: { id: "monkey", name: "Monkey", keywords: ["animal", "nature", "banana", "circus"], skins: [{ unified: "1f412", native: "\u{1F412}" }], version: 1 }, gorilla: { id: "gorilla", name: "Gorilla", keywords: ["animal", "nature", "circus"], skins: [{ unified: "1f98d", native: "\u{1F98D}" }], version: 3 }, orangutan: { id: "orangutan", name: "Orangutan", keywords: ["animal"], skins: [{ unified: "1f9a7", native: "\u{1F9A7}" }], version: 12 }, dog: { id: "dog", name: "Dog Face", keywords: ["animal", "friend", "nature", "woof", "puppy", "pet", "faithful"], skins: [{ unified: "1f436", native: "\u{1F436}" }], version: 1 }, dog2: { id: "dog2", name: "Dog", keywords: ["dog2", "animal", "nature", "friend", "doge", "pet", "faithful"], skins: [{ unified: "1f415", native: "\u{1F415}" }], version: 1 }, guide_dog: { id: "guide_dog", name: "Guide Dog", keywords: ["animal", "blind"], skins: [{ unified: "1f9ae", native: "\u{1F9AE}" }], version: 12 }, service_dog: { id: "service_dog", name: "Service Dog", keywords: ["blind", "animal"], skins: [{ unified: "1f415-200d-1f9ba", native: "\u{1F415}\u200D\u{1F9BA}" }], version: 12 }, poodle: { id: "poodle", name: "Poodle", keywords: ["dog", "animal", "101", "nature", "pet"], skins: [{ unified: "1f429", native: "\u{1F429}" }], version: 1 }, wolf: { id: "wolf", name: "Wolf", keywords: ["animal", "nature", "wild"], skins: [{ unified: "1f43a", native: "\u{1F43A}" }], version: 1 }, fox_face: { id: "fox_face", name: "Fox", keywords: ["face", "animal", "nature"], skins: [{ unified: "1f98a", native: "\u{1F98A}" }], version: 3 }, raccoon: { id: "raccoon", name: "Raccoon", keywords: ["animal", "nature"], skins: [{ unified: "1f99d", native: "\u{1F99D}" }], version: 11 }, cat: { id: "cat", name: "Cat Face", keywords: ["animal", "meow", "nature", "pet", "kitten"], skins: [{ unified: "1f431", native: "\u{1F431}" }], version: 1 }, cat2: { id: "cat2", name: "Cat", keywords: ["cat2", "animal", "meow", "pet", "cats"], skins: [{ unified: "1f408", native: "\u{1F408}" }], version: 1 }, black_cat: { id: "black_cat", name: "Black Cat", keywords: ["superstition", "luck"], skins: [{ unified: "1f408-200d-2b1b", native: "\u{1F408}\u200D\u2B1B" }], version: 13 }, lion_face: { id: "lion_face", name: "Lion", keywords: ["face", "animal", "nature"], skins: [{ unified: "1f981", native: "\u{1F981}" }], version: 1 }, tiger: { id: "tiger", name: "Tiger Face", keywords: ["animal", "cat", "danger", "wild", "nature", "roar"], skins: [{ unified: "1f42f", native: "\u{1F42F}" }], version: 1 }, tiger2: { id: "tiger2", name: "Tiger", keywords: ["tiger2", "animal", "nature", "roar"], skins: [{ unified: "1f405", native: "\u{1F405}" }], version: 1 }, leopard: { id: "leopard", name: "Leopard", keywords: ["animal", "nature"], skins: [{ unified: "1f406", native: "\u{1F406}" }], version: 1 }, horse: { id: "horse", name: "Horse Face", keywords: ["animal", "brown", "nature"], skins: [{ unified: "1f434", native: "\u{1F434}" }], version: 1 }, moose: { id: "moose", name: "Moose", keywords: ["shrek", "canada", "sweden", "sven", "cool"], skins: [{ unified: "1face", native: "\u{1FACE}" }], version: 15 }, donkey: { id: "donkey", name: "Donkey", keywords: ["eeyore", "mule"], skins: [{ unified: "1facf", native: "\u{1FACF}" }], version: 15 }, racehorse: { id: "racehorse", name: "Horse", keywords: ["racehorse", "animal", "gamble", "luck"], skins: [{ unified: "1f40e", native: "\u{1F40E}" }], version: 1 }, unicorn_face: { id: "unicorn_face", name: "Unicorn", keywords: ["face", "animal", "nature", "mystical"], skins: [{ unified: "1f984", native: "\u{1F984}" }], version: 1 }, zebra_face: { id: "zebra_face", name: "Zebra", keywords: ["face", "animal", "nature", "stripes", "safari"], skins: [{ unified: "1f993", native: "\u{1F993}" }], version: 5 }, deer: { id: "deer", name: "Deer", keywords: ["animal", "nature", "horns", "venison"], skins: [{ unified: "1f98c", native: "\u{1F98C}" }], version: 3 }, bison: { id: "bison", name: "Bison", keywords: ["ox"], skins: [{ unified: "1f9ac", native: "\u{1F9AC}" }], version: 13 }, cow: { id: "cow", name: "Cow Face", keywords: ["beef", "ox", "animal", "nature", "moo", "milk"], skins: [{ unified: "1f42e", native: "\u{1F42E}" }], version: 1 }, ox: { id: "ox", name: "Ox", keywords: ["animal", "cow", "beef"], skins: [{ unified: "1f402", native: "\u{1F402}" }], version: 1 }, water_buffalo: { id: "water_buffalo", name: "Water Buffalo", keywords: ["animal", "nature", "ox", "cow"], skins: [{ unified: "1f403", native: "\u{1F403}" }], version: 1 }, cow2: { id: "cow2", name: "Cow", keywords: ["cow2", "beef", "ox", "animal", "nature", "moo", "milk"], skins: [{ unified: "1f404", native: "\u{1F404}" }], version: 1 }, pig: { id: "pig", name: "Pig Face", keywords: ["animal", "oink", "nature"], skins: [{ unified: "1f437", native: "\u{1F437}" }], version: 1 }, pig2: { id: "pig2", name: "Pig", keywords: ["pig2", "animal", "nature"], skins: [{ unified: "1f416", native: "\u{1F416}" }], version: 1 }, boar: { id: "boar", name: "Boar", keywords: ["animal", "nature"], skins: [{ unified: "1f417", native: "\u{1F417}" }], version: 1 }, pig_nose: { id: "pig_nose", name: "Pig Nose", keywords: ["animal", "oink"], skins: [{ unified: "1f43d", native: "\u{1F43D}" }], version: 1 }, ram: { id: "ram", name: "Ram", keywords: ["animal", "sheep", "nature"], skins: [{ unified: "1f40f", native: "\u{1F40F}" }], version: 1 }, sheep: { id: "sheep", name: "Ewe", keywords: ["sheep", "animal", "nature", "wool", "shipit"], skins: [{ unified: "1f411", native: "\u{1F411}" }], version: 1 }, goat: { id: "goat", name: "Goat", keywords: ["animal", "nature"], skins: [{ unified: "1f410", native: "\u{1F410}" }], version: 1 }, dromedary_camel: { id: "dromedary_camel", name: "Camel", keywords: ["dromedary", "animal", "hot", "desert", "hump"], skins: [{ unified: "1f42a", native: "\u{1F42A}" }], version: 1 }, camel: { id: "camel", name: "Bactrian Camel", keywords: ["two", "hump", "animal", "nature", "hot", "desert"], skins: [{ unified: "1f42b", native: "\u{1F42B}" }], version: 1 }, llama: { id: "llama", name: "Llama", keywords: ["animal", "nature", "alpaca"], skins: [{ unified: "1f999", native: "\u{1F999}" }], version: 11 }, giraffe_face: { id: "giraffe_face", name: "Giraffe", keywords: ["face", "animal", "nature", "spots", "safari"], skins: [{ unified: "1f992", native: "\u{1F992}" }], version: 5 }, elephant: { id: "elephant", name: "Elephant", keywords: ["animal", "nature", "nose", "th", "circus"], skins: [{ unified: "1f418", native: "\u{1F418}" }], version: 1 }, mammoth: { id: "mammoth", name: "Mammoth", keywords: ["elephant", "tusks"], skins: [{ unified: "1f9a3", native: "\u{1F9A3}" }], version: 13 }, rhinoceros: { id: "rhinoceros", name: "Rhinoceros", keywords: ["animal", "nature", "horn"], skins: [{ unified: "1f98f", native: "\u{1F98F}" }], version: 3 }, hippopotamus: { id: "hippopotamus", name: "Hippopotamus", keywords: ["animal", "nature"], skins: [{ unified: "1f99b", native: "\u{1F99B}" }], version: 11 }, mouse: { id: "mouse", name: "Mouse Face", keywords: ["animal", "nature", "cheese", "wedge", "rodent"], skins: [{ unified: "1f42d", native: "\u{1F42D}" }], version: 1 }, mouse2: { id: "mouse2", name: "Mouse", keywords: ["mouse2", "animal", "nature", "rodent"], skins: [{ unified: "1f401", native: "\u{1F401}" }], version: 1 }, rat: { id: "rat", name: "Rat", keywords: ["animal", "mouse", "rodent"], skins: [{ unified: "1f400", native: "\u{1F400}" }], version: 1 }, hamster: { id: "hamster", name: "Hamster", keywords: ["animal", "nature"], skins: [{ unified: "1f439", native: "\u{1F439}" }], version: 1 }, rabbit: { id: "rabbit", name: "Rabbit Face", keywords: ["animal", "nature", "pet", "spring", "magic", "bunny"], skins: [{ unified: "1f430", native: "\u{1F430}" }], version: 1 }, rabbit2: { id: "rabbit2", name: "Rabbit", keywords: ["rabbit2", "animal", "nature", "pet", "magic", "spring"], skins: [{ unified: "1f407", native: "\u{1F407}" }], version: 1 }, chipmunk: { id: "chipmunk", name: "Chipmunk", keywords: ["animal", "nature", "rodent", "squirrel"], skins: [{ unified: "1f43f-fe0f", native: "\u{1F43F}\uFE0F" }], version: 1 }, beaver: { id: "beaver", name: "Beaver", keywords: ["animal", "rodent"], skins: [{ unified: "1f9ab", native: "\u{1F9AB}" }], version: 13 }, hedgehog: { id: "hedgehog", name: "Hedgehog", keywords: ["animal", "nature", "spiny"], skins: [{ unified: "1f994", native: "\u{1F994}" }], version: 5 }, bat: { id: "bat", name: "Bat", keywords: ["animal", "nature", "blind", "vampire"], skins: [{ unified: "1f987", native: "\u{1F987}" }], version: 3 }, bear: { id: "bear", name: "Bear", keywords: ["animal", "nature", "wild"], skins: [{ unified: "1f43b", native: "\u{1F43B}" }], version: 1 }, polar_bear: { id: "polar_bear", name: "Polar Bear", keywords: ["animal", "arctic"], skins: [{ unified: "1f43b-200d-2744-fe0f", native: "\u{1F43B}\u200D\u2744\uFE0F" }], version: 13 }, koala: { id: "koala", name: "Koala", keywords: ["animal", "nature"], skins: [{ unified: "1f428", native: "\u{1F428}" }], version: 1 }, panda_face: { id: "panda_face", name: "Panda", keywords: ["face", "animal", "nature"], skins: [{ unified: "1f43c", native: "\u{1F43C}" }], version: 1 }, sloth: { id: "sloth", name: "Sloth", keywords: ["animal"], skins: [{ unified: "1f9a5", native: "\u{1F9A5}" }], version: 12 }, otter: { id: "otter", name: "Otter", keywords: ["animal"], skins: [{ unified: "1f9a6", native: "\u{1F9A6}" }], version: 12 }, skunk: { id: "skunk", name: "Skunk", keywords: ["animal"], skins: [{ unified: "1f9a8", native: "\u{1F9A8}" }], version: 12 }, kangaroo: { id: "kangaroo", name: "Kangaroo", keywords: ["animal", "nature", "australia", "joey", "hop", "marsupial"], skins: [{ unified: "1f998", native: "\u{1F998}" }], version: 11 }, badger: { id: "badger", name: "Badger", keywords: ["animal", "nature", "honey"], skins: [{ unified: "1f9a1", native: "\u{1F9A1}" }], version: 11 }, feet: { id: "feet", name: "Paw Prints", keywords: ["feet", "animal", "tracking", "footprints", "dog", "cat", "pet"], skins: [{ unified: "1f43e", native: "\u{1F43E}" }], version: 1 }, turkey: { id: "turkey", name: "Turkey", keywords: ["animal", "bird"], skins: [{ unified: "1f983", native: "\u{1F983}" }], version: 1 }, chicken: { id: "chicken", name: "Chicken", keywords: ["animal", "cluck", "nature", "bird"], skins: [{ unified: "1f414", native: "\u{1F414}" }], version: 1 }, rooster: { id: "rooster", name: "Rooster", keywords: ["animal", "nature", "chicken"], skins: [{ unified: "1f413", native: "\u{1F413}" }], version: 1 }, hatching_chick: { id: "hatching_chick", name: "Hatching Chick", keywords: ["animal", "chicken", "egg", "born", "baby", "bird"], skins: [{ unified: "1f423", native: "\u{1F423}" }], version: 1 }, baby_chick: { id: "baby_chick", name: "Baby Chick", keywords: ["animal", "chicken", "bird"], skins: [{ unified: "1f424", native: "\u{1F424}" }], version: 1 }, hatched_chick: { id: "hatched_chick", name: "Front-Facing Baby Chick", keywords: ["hatched", "front", "facing", "animal", "chicken", "bird"], skins: [{ unified: "1f425", native: "\u{1F425}" }], version: 1 }, bird: { id: "bird", name: "Bird", keywords: ["animal", "nature", "fly", "tweet", "spring"], skins: [{ unified: "1f426", native: "\u{1F426}" }], version: 1 }, penguin: { id: "penguin", name: "Penguin", keywords: ["animal", "nature"], skins: [{ unified: "1f427", native: "\u{1F427}" }], version: 1 }, dove_of_peace: { id: "dove_of_peace", name: "Dove", keywords: ["of", "peace", "animal", "bird"], skins: [{ unified: "1f54a-fe0f", native: "\u{1F54A}\uFE0F" }], version: 1 }, eagle: { id: "eagle", name: "Eagle", keywords: ["animal", "nature", "bird"], skins: [{ unified: "1f985", native: "\u{1F985}" }], version: 3 }, duck: { id: "duck", name: "Duck", keywords: ["animal", "nature", "bird", "mallard"], skins: [{ unified: "1f986", native: "\u{1F986}" }], version: 3 }, swan: { id: "swan", name: "Swan", keywords: ["animal", "nature", "bird"], skins: [{ unified: "1f9a2", native: "\u{1F9A2}" }], version: 11 }, owl: { id: "owl", name: "Owl", keywords: ["animal", "nature", "bird", "hoot"], skins: [{ unified: "1f989", native: "\u{1F989}" }], version: 3 }, dodo: { id: "dodo", name: "Dodo", keywords: ["animal", "bird"], skins: [{ unified: "1f9a4", native: "\u{1F9A4}" }], version: 13 }, feather: { id: "feather", name: "Feather", keywords: ["bird", "fly"], skins: [{ unified: "1fab6", native: "\u{1FAB6}" }], version: 13 }, flamingo: { id: "flamingo", name: "Flamingo", keywords: ["animal"], skins: [{ unified: "1f9a9", native: "\u{1F9A9}" }], version: 12 }, peacock: { id: "peacock", name: "Peacock", keywords: ["animal", "nature", "peahen", "bird"], skins: [{ unified: "1f99a", native: "\u{1F99A}" }], version: 11 }, parrot: { id: "parrot", name: "Parrot", keywords: ["animal", "nature", "bird", "pirate", "talk"], skins: [{ unified: "1f99c", native: "\u{1F99C}" }], version: 11 }, wing: { id: "wing", name: "Wing", keywords: ["angel", "birds", "flying"], skins: [{ unified: "1fabd", native: "\u{1FABD}" }], version: 15 }, black_bird: { id: "black_bird", name: "Black Bird", keywords: ["crow"], skins: [{ unified: "1f426-200d-2b1b", native: "\u{1F426}\u200D\u2B1B" }], version: 15 }, goose: { id: "goose", name: "Goose", keywords: ["silly", "jemima", "goosebumps"], skins: [{ unified: "1fabf", native: "\u{1FABF}" }], version: 15 }, frog: { id: "frog", name: "Frog", keywords: ["animal", "nature", "croak", "toad"], skins: [{ unified: "1f438", native: "\u{1F438}" }], version: 1 }, crocodile: { id: "crocodile", name: "Crocodile", keywords: ["animal", "nature", "reptile", "lizard", "alligator"], skins: [{ unified: "1f40a", native: "\u{1F40A}" }], version: 1 }, turtle: { id: "turtle", name: "Turtle", keywords: ["animal", "slow", "nature", "tortoise"], skins: [{ unified: "1f422", native: "\u{1F422}" }], version: 1 }, lizard: { id: "lizard", name: "Lizard", keywords: ["animal", "nature", "reptile"], skins: [{ unified: "1f98e", native: "\u{1F98E}" }], version: 3 }, snake: { id: "snake", name: "Snake", keywords: ["animal", "evil", "nature", "hiss", "python"], skins: [{ unified: "1f40d", native: "\u{1F40D}" }], version: 1 }, dragon_face: { id: "dragon_face", name: "Dragon Face", keywords: ["animal", "myth", "nature", "chinese", "green"], skins: [{ unified: "1f432", native: "\u{1F432}" }], version: 1 }, dragon: { id: "dragon", name: "Dragon", keywords: ["animal", "myth", "nature", "chinese", "green"], skins: [{ unified: "1f409", native: "\u{1F409}" }], version: 1 }, sauropod: { id: "sauropod", name: "Sauropod", keywords: ["animal", "nature", "dinosaur", "brachiosaurus", "brontosaurus", "diplodocus", "extinct"], skins: [{ unified: "1f995", native: "\u{1F995}" }], version: 5 }, "t-rex": { id: "t-rex", name: "T-Rex", keywords: ["t", "rex", "animal", "nature", "dinosaur", "tyrannosaurus", "extinct"], skins: [{ unified: "1f996", native: "\u{1F996}" }], version: 5 }, whale: { id: "whale", name: "Spouting Whale", keywords: ["animal", "nature", "sea", "ocean"], skins: [{ unified: "1f433", native: "\u{1F433}" }], version: 1 }, whale2: { id: "whale2", name: "Whale", keywords: ["whale2", "animal", "nature", "sea", "ocean"], skins: [{ unified: "1f40b", native: "\u{1F40B}" }], version: 1 }, dolphin: { id: "dolphin", name: "Dolphin", keywords: ["flipper", "animal", "nature", "fish", "sea", "ocean", "fins", "beach"], skins: [{ unified: "1f42c", native: "\u{1F42C}" }], version: 1 }, seal: { id: "seal", name: "Seal", keywords: ["animal", "creature", "sea"], skins: [{ unified: "1f9ad", native: "\u{1F9AD}" }], version: 13 }, fish: { id: "fish", name: "Fish", keywords: ["animal", "food", "nature"], skins: [{ unified: "1f41f", native: "\u{1F41F}" }], version: 1 }, tropical_fish: { id: "tropical_fish", name: "Tropical Fish", keywords: ["animal", "swim", "ocean", "beach", "nemo"], skins: [{ unified: "1f420", native: "\u{1F420}" }], version: 1 }, blowfish: { id: "blowfish", name: "Blowfish", keywords: ["animal", "nature", "food", "sea", "ocean"], skins: [{ unified: "1f421", native: "\u{1F421}" }], version: 1 }, shark: { id: "shark", name: "Shark", keywords: ["animal", "nature", "fish", "sea", "ocean", "jaws", "fins", "beach"], skins: [{ unified: "1f988", native: "\u{1F988}" }], version: 3 }, octopus: { id: "octopus", name: "Octopus", keywords: ["animal", "creature", "ocean", "sea", "nature", "beach"], skins: [{ unified: "1f419", native: "\u{1F419}" }], version: 1 }, shell: { id: "shell", name: "Spiral Shell", keywords: ["nature", "sea", "beach"], skins: [{ unified: "1f41a", native: "\u{1F41A}" }], version: 1 }, coral: { id: "coral", name: "Coral", keywords: ["ocean", "sea", "reef"], skins: [{ unified: "1fab8", native: "\u{1FAB8}" }], version: 14 }, jellyfish: { id: "jellyfish", name: "Jellyfish", keywords: ["sting", "tentacles"], skins: [{ unified: "1fabc", native: "\u{1FABC}" }], version: 15 }, snail: { id: "snail", name: "Snail", keywords: ["slow", "animal", "shell"], skins: [{ unified: "1f40c", native: "\u{1F40C}" }], version: 1 }, butterfly: { id: "butterfly", name: "Butterfly", keywords: ["animal", "insect", "nature", "caterpillar"], skins: [{ unified: "1f98b", native: "\u{1F98B}" }], version: 3 }, bug: { id: "bug", name: "Bug", keywords: ["animal", "insect", "nature", "worm"], skins: [{ unified: "1f41b", native: "\u{1F41B}" }], version: 1 }, ant: { id: "ant", name: "Ant", keywords: ["animal", "insect", "nature", "bug"], skins: [{ unified: "1f41c", native: "\u{1F41C}" }], version: 1 }, bee: { id: "bee", name: "Honeybee", keywords: ["bee", "animal", "insect", "nature", "bug", "spring", "honey"], skins: [{ unified: "1f41d", native: "\u{1F41D}" }], version: 1 }, beetle: { id: "beetle", name: "Beetle", keywords: ["insect"], skins: [{ unified: "1fab2", native: "\u{1FAB2}" }], version: 13 }, ladybug: { id: "ladybug", name: "Lady Beetle", keywords: ["ladybug", "animal", "insect", "nature"], skins: [{ unified: "1f41e", native: "\u{1F41E}" }], version: 1 }, cricket: { id: "cricket", name: "Cricket", keywords: ["animal", "chirp"], skins: [{ unified: "1f997", native: "\u{1F997}" }], version: 5 }, cockroach: { id: "cockroach", name: "Cockroach", keywords: ["insect", "pests"], skins: [{ unified: "1fab3", native: "\u{1FAB3}" }], version: 13 }, spider: { id: "spider", name: "Spider", keywords: ["animal", "arachnid"], skins: [{ unified: "1f577-fe0f", native: "\u{1F577}\uFE0F" }], version: 1 }, spider_web: { id: "spider_web", name: "Spider Web", keywords: ["animal", "insect", "arachnid", "silk"], skins: [{ unified: "1f578-fe0f", native: "\u{1F578}\uFE0F" }], version: 1 }, scorpion: { id: "scorpion", name: "Scorpion", keywords: ["animal", "arachnid"], skins: [{ unified: "1f982", native: "\u{1F982}" }], version: 1 }, mosquito: { id: "mosquito", name: "Mosquito", keywords: ["animal", "nature", "insect", "malaria"], skins: [{ unified: "1f99f", native: "\u{1F99F}" }], version: 11 }, fly: { id: "fly", name: "Fly", keywords: ["insect"], skins: [{ unified: "1fab0", native: "\u{1FAB0}" }], version: 13 }, worm: { id: "worm", name: "Worm", keywords: ["animal"], skins: [{ unified: "1fab1", native: "\u{1FAB1}" }], version: 13 }, microbe: { id: "microbe", name: "Microbe", keywords: ["amoeba", "bacteria", "germs", "virus", "covid"], skins: [{ unified: "1f9a0", native: "\u{1F9A0}" }], version: 11 }, bouquet: { id: "bouquet", name: "Bouquet", keywords: ["flowers", "nature", "spring"], skins: [{ unified: "1f490", native: "\u{1F490}" }], version: 1 }, cherry_blossom: { id: "cherry_blossom", name: "Cherry Blossom", keywords: ["nature", "plant", "spring", "flower"], skins: [{ unified: "1f338", native: "\u{1F338}" }], version: 1 }, white_flower: { id: "white_flower", name: "White Flower", keywords: ["japanese", "spring"], skins: [{ unified: "1f4ae", native: "\u{1F4AE}" }], version: 1 }, lotus: { id: "lotus", name: "Lotus", keywords: ["flower", "calm", "meditation"], skins: [{ unified: "1fab7", native: "\u{1FAB7}" }], version: 14 }, rosette: { id: "rosette", name: "Rosette", keywords: ["flower", "decoration", "military"], skins: [{ unified: "1f3f5-fe0f", native: "\u{1F3F5}\uFE0F" }], version: 1 }, rose: { id: "rose", name: "Rose", keywords: ["flowers", "valentines", "love", "spring"], skins: [{ unified: "1f339", native: "\u{1F339}" }], version: 1 }, wilted_flower: { id: "wilted_flower", name: "Wilted Flower", keywords: ["plant", "nature", "rose"], skins: [{ unified: "1f940", native: "\u{1F940}" }], version: 3 }, hibiscus: { id: "hibiscus", name: "Hibiscus", keywords: ["plant", "vegetable", "flowers", "beach"], skins: [{ unified: "1f33a", native: "\u{1F33A}" }], version: 1 }, sunflower: { id: "sunflower", name: "Sunflower", keywords: ["nature", "plant", "fall"], skins: [{ unified: "1f33b", native: "\u{1F33B}" }], version: 1 }, blossom: { id: "blossom", name: "Blossom", keywords: ["nature", "flowers", "yellow"], skins: [{ unified: "1f33c", native: "\u{1F33C}" }], version: 1 }, tulip: { id: "tulip", name: "Tulip", keywords: ["flowers", "plant", "nature", "summer", "spring"], skins: [{ unified: "1f337", native: "\u{1F337}" }], version: 1 }, hyacinth: { id: "hyacinth", name: "Hyacinth", keywords: ["flower", "lavender"], skins: [{ unified: "1fabb", native: "\u{1FABB}" }], version: 15 }, seedling: { id: "seedling", name: "Seedling", keywords: ["plant", "nature", "grass", "lawn", "spring"], skins: [{ unified: "1f331", native: "\u{1F331}" }], version: 1 }, potted_plant: { id: "potted_plant", name: "Potted Plant", keywords: ["greenery", "house"], skins: [{ unified: "1fab4", native: "\u{1FAB4}" }], version: 13 }, evergreen_tree: { id: "evergreen_tree", name: "Evergreen Tree", keywords: ["plant", "nature"], skins: [{ unified: "1f332", native: "\u{1F332}" }], version: 1 }, deciduous_tree: { id: "deciduous_tree", name: "Deciduous Tree", keywords: ["plant", "nature"], skins: [{ unified: "1f333", native: "\u{1F333}" }], version: 1 }, palm_tree: { id: "palm_tree", name: "Palm Tree", keywords: ["plant", "vegetable", "nature", "summer", "beach", "mojito", "tropical"], skins: [{ unified: "1f334", native: "\u{1F334}" }], version: 1 }, cactus: { id: "cactus", name: "Cactus", keywords: ["vegetable", "plant", "nature"], skins: [{ unified: "1f335", native: "\u{1F335}" }], version: 1 }, ear_of_rice: { id: "ear_of_rice", name: "Ear of Rice", keywords: ["sheaf", "nature", "plant"], skins: [{ unified: "1f33e", native: "\u{1F33E}" }], version: 1 }, herb: { id: "herb", name: "Herb", keywords: ["vegetable", "plant", "medicine", "weed", "grass", "lawn"], skins: [{ unified: "1f33f", native: "\u{1F33F}" }], version: 1 }, shamrock: { id: "shamrock", name: "Shamrock", keywords: ["vegetable", "plant", "nature", "irish", "clover"], skins: [{ unified: "2618-fe0f", native: "\u2618\uFE0F" }], version: 1 }, four_leaf_clover: { id: "four_leaf_clover", name: "Four Leaf Clover", keywords: ["vegetable", "plant", "nature", "lucky", "irish"], skins: [{ unified: "1f340", native: "\u{1F340}" }], version: 1 }, maple_leaf: { id: "maple_leaf", name: "Maple Leaf", keywords: ["nature", "plant", "vegetable", "ca", "fall"], skins: [{ unified: "1f341", native: "\u{1F341}" }], version: 1 }, fallen_leaf: { id: "fallen_leaf", name: "Fallen Leaf", keywords: ["nature", "plant", "vegetable", "leaves"], skins: [{ unified: "1f342", native: "\u{1F342}" }], version: 1 }, leaves: { id: "leaves", name: "Leaf Fluttering in Wind", keywords: ["leaves", "nature", "plant", "tree", "vegetable", "grass", "lawn", "spring"], skins: [{ unified: "1f343", native: "\u{1F343}" }], version: 1 }, empty_nest: { id: "empty_nest", name: "Empty Nest", keywords: ["bird"], skins: [{ unified: "1fab9", native: "\u{1FAB9}" }], version: 14 }, nest_with_eggs: { id: "nest_with_eggs", name: "Nest with Eggs", keywords: ["bird"], skins: [{ unified: "1faba", native: "\u{1FABA}" }], version: 14 }, mushroom: { id: "mushroom", name: "Mushroom", keywords: ["plant", "vegetable"], skins: [{ unified: "1f344", native: "\u{1F344}" }], version: 1 }, grapes: { id: "grapes", name: "Grapes", keywords: ["fruit", "food", "wine"], skins: [{ unified: "1f347", native: "\u{1F347}" }], version: 1 }, melon: { id: "melon", name: "Melon", keywords: ["fruit", "nature", "food"], skins: [{ unified: "1f348", native: "\u{1F348}" }], version: 1 }, watermelon: { id: "watermelon", name: "Watermelon", keywords: ["fruit", "food", "picnic", "summer"], skins: [{ unified: "1f349", native: "\u{1F349}" }], version: 1 }, tangerine: { id: "tangerine", name: "Tangerine", keywords: ["food", "fruit", "nature", "orange"], skins: [{ unified: "1f34a", native: "\u{1F34A}" }], version: 1 }, lemon: { id: "lemon", name: "Lemon", keywords: ["fruit", "nature"], skins: [{ unified: "1f34b", native: "\u{1F34B}" }], version: 1 }, banana: { id: "banana", name: "Banana", keywords: ["fruit", "food", "monkey"], skins: [{ unified: "1f34c", native: "\u{1F34C}" }], version: 1 }, pineapple: { id: "pineapple", name: "Pineapple", keywords: ["fruit", "nature", "food"], skins: [{ unified: "1f34d", native: "\u{1F34D}" }], version: 1 }, mango: { id: "mango", name: "Mango", keywords: ["fruit", "food", "tropical"], skins: [{ unified: "1f96d", native: "\u{1F96D}" }], version: 11 }, apple: { id: "apple", name: "Red Apple", keywords: ["fruit", "mac", "school"], skins: [{ unified: "1f34e", native: "\u{1F34E}" }], version: 1 }, green_apple: { id: "green_apple", name: "Green Apple", keywords: ["fruit", "nature"], skins: [{ unified: "1f34f", native: "\u{1F34F}" }], version: 1 }, pear: { id: "pear", name: "Pear", keywords: ["fruit", "nature", "food"], skins: [{ unified: "1f350", native: "\u{1F350}" }], version: 1 }, peach: { id: "peach", name: "Peach", keywords: ["fruit", "nature", "food"], skins: [{ unified: "1f351", native: "\u{1F351}" }], version: 1 }, cherries: { id: "cherries", name: "Cherries", keywords: ["food", "fruit"], skins: [{ unified: "1f352", native: "\u{1F352}" }], version: 1 }, strawberry: { id: "strawberry", name: "Strawberry", keywords: ["fruit", "food", "nature"], skins: [{ unified: "1f353", native: "\u{1F353}" }], version: 1 }, blueberries: { id: "blueberries", name: "Blueberries", keywords: ["fruit"], skins: [{ unified: "1fad0", native: "\u{1FAD0}" }], version: 13 }, kiwifruit: { id: "kiwifruit", name: "Kiwifruit", keywords: ["kiwi", "fruit", "food"], skins: [{ unified: "1f95d", native: "\u{1F95D}" }], version: 3 }, tomato: { id: "tomato", name: "Tomato", keywords: ["fruit", "vegetable", "nature", "food"], skins: [{ unified: "1f345", native: "\u{1F345}" }], version: 1 }, olive: { id: "olive", name: "Olive", keywords: ["fruit"], skins: [{ unified: "1fad2", native: "\u{1FAD2}" }], version: 13 }, coconut: { id: "coconut", name: "Coconut", keywords: ["fruit", "nature", "food", "palm"], skins: [{ unified: "1f965", native: "\u{1F965}" }], version: 5 }, avocado: { id: "avocado", name: "Avocado", keywords: ["fruit", "food"], skins: [{ unified: "1f951", native: "\u{1F951}" }], version: 3 }, eggplant: { id: "eggplant", name: "Eggplant", keywords: ["vegetable", "nature", "food", "aubergine"], skins: [{ unified: "1f346", native: "\u{1F346}" }], version: 1 }, potato: { id: "potato", name: "Potato", keywords: ["food", "tuber", "vegatable", "starch"], skins: [{ unified: "1f954", native: "\u{1F954}" }], version: 3 }, carrot: { id: "carrot", name: "Carrot", keywords: ["vegetable", "food", "orange"], skins: [{ unified: "1f955", native: "\u{1F955}" }], version: 3 }, corn: { id: "corn", name: "Ear of Corn", keywords: ["food", "vegetable", "plant"], skins: [{ unified: "1f33d", native: "\u{1F33D}" }], version: 1 }, hot_pepper: { id: "hot_pepper", name: "Hot Pepper", keywords: ["food", "spicy", "chilli", "chili"], skins: [{ unified: "1f336-fe0f", native: "\u{1F336}\uFE0F" }], version: 1 }, bell_pepper: { id: "bell_pepper", name: "Bell Pepper", keywords: ["fruit", "plant"], skins: [{ unified: "1fad1", native: "\u{1FAD1}" }], version: 13 }, cucumber: { id: "cucumber", name: "Cucumber", keywords: ["fruit", "food", "pickle"], skins: [{ unified: "1f952", native: "\u{1F952}" }], version: 3 }, leafy_green: { id: "leafy_green", name: "Leafy Green", keywords: ["food", "vegetable", "plant", "bok", "choy", "cabbage", "kale", "lettuce"], skins: [{ unified: "1f96c", native: "\u{1F96C}" }], version: 11 }, broccoli: { id: "broccoli", name: "Broccoli", keywords: ["fruit", "food", "vegetable"], skins: [{ unified: "1f966", native: "\u{1F966}" }], version: 5 }, garlic: { id: "garlic", name: "Garlic", keywords: ["food", "spice", "cook"], skins: [{ unified: "1f9c4", native: "\u{1F9C4}" }], version: 12 }, onion: { id: "onion", name: "Onion", keywords: ["cook", "food", "spice"], skins: [{ unified: "1f9c5", native: "\u{1F9C5}" }], version: 12 }, peanuts: { id: "peanuts", name: "Peanuts", keywords: ["food", "nut"], skins: [{ unified: "1f95c", native: "\u{1F95C}" }], version: 3 }, beans: { id: "beans", name: "Beans", keywords: ["food"], skins: [{ unified: "1fad8", native: "\u{1FAD8}" }], version: 14 }, chestnut: { id: "chestnut", name: "Chestnut", keywords: ["food", "squirrel"], skins: [{ unified: "1f330", native: "\u{1F330}" }], version: 1 }, ginger_root: { id: "ginger_root", name: "Ginger Root", keywords: ["spice", "yellow", "cooking", "gingerbread"], skins: [{ unified: "1fada", native: "\u{1FADA}" }], version: 15 }, pea_pod: { id: "pea_pod", name: "Pea Pod", keywords: ["cozy", "green"], skins: [{ unified: "1fadb", native: "\u{1FADB}" }], version: 15 }, bread: { id: "bread", name: "Bread", keywords: ["food", "wheat", "breakfast", "toast"], skins: [{ unified: "1f35e", native: "\u{1F35E}" }], version: 1 }, croissant: { id: "croissant", name: "Croissant", keywords: ["food", "bread", "french"], skins: [{ unified: "1f950", native: "\u{1F950}" }], version: 3 }, baguette_bread: { id: "baguette_bread", name: "Baguette Bread", keywords: ["food", "french", "france", "bakery"], skins: [{ unified: "1f956", native: "\u{1F956}" }], version: 3 }, flatbread: { id: "flatbread", name: "Flatbread", keywords: ["flour", "food", "bakery"], skins: [{ unified: "1fad3", native: "\u{1FAD3}" }], version: 13 }, pretzel: { id: "pretzel", name: "Pretzel", keywords: ["food", "bread", "twisted", "germany", "bakery"], skins: [{ unified: "1f968", native: "\u{1F968}" }], version: 5 }, bagel: { id: "bagel", name: "Bagel", keywords: ["food", "bread", "bakery", "schmear", "jewish"], skins: [{ unified: "1f96f", native: "\u{1F96F}" }], version: 11 }, pancakes: { id: "pancakes", name: "Pancakes", keywords: ["food", "breakfast", "flapjacks", "hotcakes", "brunch"], skins: [{ unified: "1f95e", native: "\u{1F95E}" }], version: 3 }, waffle: { id: "waffle", name: "Waffle", keywords: ["food", "breakfast", "brunch"], skins: [{ unified: "1f9c7", native: "\u{1F9C7}" }], version: 12 }, cheese_wedge: { id: "cheese_wedge", name: "Cheese Wedge", keywords: ["food", "chadder", "swiss"], skins: [{ unified: "1f9c0", native: "\u{1F9C0}" }], version: 1 }, meat_on_bone: { id: "meat_on_bone", name: "Meat on Bone", keywords: ["good", "food", "drumstick"], skins: [{ unified: "1f356", native: "\u{1F356}" }], version: 1 }, poultry_leg: { id: "poultry_leg", name: "Poultry Leg", keywords: ["food", "meat", "drumstick", "bird", "chicken", "turkey"], skins: [{ unified: "1f357", native: "\u{1F357}" }], version: 1 }, cut_of_meat: { id: "cut_of_meat", name: "Cut of Meat", keywords: ["food", "cow", "chop", "lambchop", "porkchop"], skins: [{ unified: "1f969", native: "\u{1F969}" }], version: 5 }, bacon: { id: "bacon", name: "Bacon", keywords: ["food", "breakfast", "pork", "pig", "meat", "brunch"], skins: [{ unified: "1f953", native: "\u{1F953}" }], version: 3 }, hamburger: { id: "hamburger", name: "Hamburger", keywords: ["meat", "fast", "food", "beef", "cheeseburger", "mcdonalds", "burger", "king"], skins: [{ unified: "1f354", native: "\u{1F354}" }], version: 1 }, fries: { id: "fries", name: "French Fries", keywords: ["chips", "snack", "fast", "food", "potato"], skins: [{ unified: "1f35f", native: "\u{1F35F}" }], version: 1 }, pizza: { id: "pizza", name: "Pizza", keywords: ["food", "party", "italy"], skins: [{ unified: "1f355", native: "\u{1F355}" }], version: 1 }, hotdog: { id: "hotdog", name: "Hot Dog", keywords: ["hotdog", "food", "frankfurter", "america"], skins: [{ unified: "1f32d", native: "\u{1F32D}" }], version: 1 }, sandwich: { id: "sandwich", name: "Sandwich", keywords: ["food", "lunch", "bread", "toast", "bakery"], skins: [{ unified: "1f96a", native: "\u{1F96A}" }], version: 5 }, taco: { id: "taco", name: "Taco", keywords: ["food", "mexican"], skins: [{ unified: "1f32e", native: "\u{1F32E}" }], version: 1 }, burrito: { id: "burrito", name: "Burrito", keywords: ["food", "mexican"], skins: [{ unified: "1f32f", native: "\u{1F32F}" }], version: 1 }, tamale: { id: "tamale", name: "Tamale", keywords: ["food", "masa"], skins: [{ unified: "1fad4", native: "\u{1FAD4}" }], version: 13 }, stuffed_flatbread: { id: "stuffed_flatbread", name: "Stuffed Flatbread", keywords: ["food", "gyro", "mediterranean"], skins: [{ unified: "1f959", native: "\u{1F959}" }], version: 3 }, falafel: { id: "falafel", name: "Falafel", keywords: ["food", "mediterranean"], skins: [{ unified: "1f9c6", native: "\u{1F9C6}" }], version: 12 }, egg: { id: "egg", name: "Egg", keywords: ["food", "chicken", "breakfast"], skins: [{ unified: "1f95a", native: "\u{1F95A}" }], version: 3 }, fried_egg: { id: "fried_egg", name: "Cooking", keywords: ["fried", "egg", "food", "breakfast", "kitchen", "skillet"], skins: [{ unified: "1f373", native: "\u{1F373}" }], version: 1 }, shallow_pan_of_food: { id: "shallow_pan_of_food", name: "Shallow Pan of Food", keywords: ["cooking", "casserole", "paella", "skillet"], skins: [{ unified: "1f958", native: "\u{1F958}" }], version: 3 }, stew: { id: "stew", name: "Pot of Food", keywords: ["stew", "meat", "soup", "hot"], skins: [{ unified: "1f372", native: "\u{1F372}" }], version: 1 }, fondue: { id: "fondue", name: "Fondue", keywords: ["cheese", "pot", "food"], skins: [{ unified: "1fad5", native: "\u{1FAD5}" }], version: 13 }, bowl_with_spoon: { id: "bowl_with_spoon", name: "Bowl with Spoon", keywords: ["food", "breakfast", "cereal", "oatmeal", "porridge"], skins: [{ unified: "1f963", native: "\u{1F963}" }], version: 5 }, green_salad: { id: "green_salad", name: "Green Salad", keywords: ["food", "healthy", "lettuce", "vegetable"], skins: [{ unified: "1f957", native: "\u{1F957}" }], version: 3 }, popcorn: { id: "popcorn", name: "Popcorn", keywords: ["food", "movie", "theater", "films", "snack", "drama"], skins: [{ unified: "1f37f", native: "\u{1F37F}" }], version: 1 }, butter: { id: "butter", name: "Butter", keywords: ["food", "cook"], skins: [{ unified: "1f9c8", native: "\u{1F9C8}" }], version: 12 }, salt: { id: "salt", name: "Salt", keywords: ["condiment", "shaker"], skins: [{ unified: "1f9c2", native: "\u{1F9C2}" }], version: 11 }, canned_food: { id: "canned_food", name: "Canned Food", keywords: ["soup", "tomatoes"], skins: [{ unified: "1f96b", native: "\u{1F96B}" }], version: 5 }, bento: { id: "bento", name: "Bento Box", keywords: ["food", "japanese", "lunch"], skins: [{ unified: "1f371", native: "\u{1F371}" }], version: 1 }, rice_cracker: { id: "rice_cracker", name: "Rice Cracker", keywords: ["food", "japanese", "snack"], skins: [{ unified: "1f358", native: "\u{1F358}" }], version: 1 }, rice_ball: { id: "rice_ball", name: "Rice Ball", keywords: ["food", "japanese"], skins: [{ unified: "1f359", native: "\u{1F359}" }], version: 1 }, rice: { id: "rice", name: "Cooked Rice", keywords: ["food", "asian"], skins: [{ unified: "1f35a", native: "\u{1F35A}" }], version: 1 }, curry: { id: "curry", name: "Curry Rice", keywords: ["food", "spicy", "hot", "indian"], skins: [{ unified: "1f35b", native: "\u{1F35B}" }], version: 1 }, ramen: { id: "ramen", name: "Steaming Bowl", keywords: ["ramen", "food", "japanese", "noodle", "chopsticks"], skins: [{ unified: "1f35c", native: "\u{1F35C}" }], version: 1 }, spaghetti: { id: "spaghetti", name: "Spaghetti", keywords: ["food", "italian", "pasta", "noodle"], skins: [{ unified: "1f35d", native: "\u{1F35D}" }], version: 1 }, sweet_potato: { id: "sweet_potato", name: "Roasted Sweet Potato", keywords: ["food", "nature", "plant"], skins: [{ unified: "1f360", native: "\u{1F360}" }], version: 1 }, oden: { id: "oden", name: "Oden", keywords: ["food", "japanese"], skins: [{ unified: "1f362", native: "\u{1F362}" }], version: 1 }, sushi: { id: "sushi", name: "Sushi", keywords: ["food", "fish", "japanese", "rice"], skins: [{ unified: "1f363", native: "\u{1F363}" }], version: 1 }, fried_shrimp: { id: "fried_shrimp", name: "Fried Shrimp", keywords: ["food", "animal", "appetizer", "summer"], skins: [{ unified: "1f364", native: "\u{1F364}" }], version: 1 }, fish_cake: { id: "fish_cake", name: "Fish Cake with Swirl", keywords: ["food", "japan", "sea", "beach", "narutomaki", "pink", "kamaboko", "surimi", "ramen"], skins: [{ unified: "1f365", native: "\u{1F365}" }], version: 1 }, moon_cake: { id: "moon_cake", name: "Moon Cake", keywords: ["food", "autumn", "dessert"], skins: [{ unified: "1f96e", native: "\u{1F96E}" }], version: 11 }, dango: { id: "dango", name: "Dango", keywords: ["food", "dessert", "sweet", "japanese", "barbecue", "meat"], skins: [{ unified: "1f361", native: "\u{1F361}" }], version: 1 }, dumpling: { id: "dumpling", name: "Dumpling", keywords: ["food", "empanada", "pierogi", "potsticker", "gyoza"], skins: [{ unified: "1f95f", native: "\u{1F95F}" }], version: 5 }, fortune_cookie: { id: "fortune_cookie", name: "Fortune Cookie", keywords: ["food", "prophecy", "dessert"], skins: [{ unified: "1f960", native: "\u{1F960}" }], version: 5 }, takeout_box: { id: "takeout_box", name: "Takeout Box", keywords: ["food", "leftovers"], skins: [{ unified: "1f961", native: "\u{1F961}" }], version: 5 }, crab: { id: "crab", name: "Crab", keywords: ["animal", "crustacean"], skins: [{ unified: "1f980", native: "\u{1F980}" }], version: 1 }, lobster: { id: "lobster", name: "Lobster", keywords: ["animal", "nature", "bisque", "claws", "seafood"], skins: [{ unified: "1f99e", native: "\u{1F99E}" }], version: 11 }, shrimp: { id: "shrimp", name: "Shrimp", keywords: ["animal", "ocean", "nature", "seafood"], skins: [{ unified: "1f990", native: "\u{1F990}" }], version: 3 }, squid: { id: "squid", name: "Squid", keywords: ["animal", "nature", "ocean", "sea"], skins: [{ unified: "1f991", native: "\u{1F991}" }], version: 3 }, oyster: { id: "oyster", name: "Oyster", keywords: ["food"], skins: [{ unified: "1f9aa", native: "\u{1F9AA}" }], version: 12 }, icecream: { id: "icecream", name: "Soft Ice Cream", keywords: ["icecream", "food", "hot", "dessert", "summer"], skins: [{ unified: "1f366", native: "\u{1F366}" }], version: 1 }, shaved_ice: { id: "shaved_ice", name: "Shaved Ice", keywords: ["hot", "dessert", "summer"], skins: [{ unified: "1f367", native: "\u{1F367}" }], version: 1 }, ice_cream: { id: "ice_cream", name: "Ice Cream", keywords: ["food", "hot", "dessert"], skins: [{ unified: "1f368", native: "\u{1F368}" }], version: 1 }, doughnut: { id: "doughnut", name: "Doughnut", keywords: ["food", "dessert", "snack", "sweet", "donut"], skins: [{ unified: "1f369", native: "\u{1F369}" }], version: 1 }, cookie: { id: "cookie", name: "Cookie", keywords: ["food", "snack", "oreo", "chocolate", "sweet", "dessert"], skins: [{ unified: "1f36a", native: "\u{1F36A}" }], version: 1 }, birthday: { id: "birthday", name: "Birthday Cake", keywords: ["food", "dessert"], skins: [{ unified: "1f382", native: "\u{1F382}" }], version: 1 }, cake: { id: "cake", name: "Shortcake", keywords: ["cake", "food", "dessert"], skins: [{ unified: "1f370", native: "\u{1F370}" }], version: 1 }, cupcake: { id: "cupcake", name: "Cupcake", keywords: ["food", "dessert", "bakery", "sweet"], skins: [{ unified: "1f9c1", native: "\u{1F9C1}" }], version: 11 }, pie: { id: "pie", name: "Pie", keywords: ["food", "dessert", "pastry"], skins: [{ unified: "1f967", native: "\u{1F967}" }], version: 5 }, chocolate_bar: { id: "chocolate_bar", name: "Chocolate Bar", keywords: ["food", "snack", "dessert", "sweet"], skins: [{ unified: "1f36b", native: "\u{1F36B}" }], version: 1 }, candy: { id: "candy", name: "Candy", keywords: ["snack", "dessert", "sweet", "lolly"], skins: [{ unified: "1f36c", native: "\u{1F36C}" }], version: 1 }, lollipop: { id: "lollipop", name: "Lollipop", keywords: ["food", "snack", "candy", "sweet"], skins: [{ unified: "1f36d", native: "\u{1F36D}" }], version: 1 }, custard: { id: "custard", name: "Custard", keywords: ["dessert", "food"], skins: [{ unified: "1f36e", native: "\u{1F36E}" }], version: 1 }, honey_pot: { id: "honey_pot", name: "Honey Pot", keywords: ["bees", "sweet", "kitchen"], skins: [{ unified: "1f36f", native: "\u{1F36F}" }], version: 1 }, baby_bottle: { id: "baby_bottle", name: "Baby Bottle", keywords: ["food", "container", "milk"], skins: [{ unified: "1f37c", native: "\u{1F37C}" }], version: 1 }, glass_of_milk: { id: "glass_of_milk", name: "Glass of Milk", keywords: ["beverage", "drink", "cow"], skins: [{ unified: "1f95b", native: "\u{1F95B}" }], version: 3 }, coffee: { id: "coffee", name: "Hot Beverage", keywords: ["coffee", "caffeine", "latte", "espresso", "mug"], skins: [{ unified: "2615", native: "\u2615" }], version: 1 }, teapot: { id: "teapot", name: "Teapot", keywords: ["drink", "hot"], skins: [{ unified: "1fad6", native: "\u{1FAD6}" }], version: 13 }, tea: { id: "tea", name: "Teacup Without Handle", keywords: ["tea", "drink", "bowl", "breakfast", "green", "british"], skins: [{ unified: "1f375", native: "\u{1F375}" }], version: 1 }, sake: { id: "sake", name: "Sake", keywords: ["wine", "drink", "drunk", "beverage", "japanese", "alcohol", "booze"], skins: [{ unified: "1f376", native: "\u{1F376}" }], version: 1 }, champagne: { id: "champagne", name: "Bottle with Popping Cork", keywords: ["champagne", "drink", "wine", "celebration"], skins: [{ unified: "1f37e", native: "\u{1F37E}" }], version: 1 }, wine_glass: { id: "wine_glass", name: "Wine Glass", keywords: ["drink", "beverage", "drunk", "alcohol", "booze"], skins: [{ unified: "1f377", native: "\u{1F377}" }], version: 1 }, cocktail: { id: "cocktail", name: "Cocktail Glass", keywords: ["drink", "drunk", "alcohol", "beverage", "booze", "mojito"], skins: [{ unified: "1f378", native: "\u{1F378}" }], version: 1 }, tropical_drink: { id: "tropical_drink", name: "Tropical Drink", keywords: ["beverage", "cocktail", "summer", "beach", "alcohol", "booze", "mojito"], skins: [{ unified: "1f379", native: "\u{1F379}" }], version: 1 }, beer: { id: "beer", name: "Beer Mug", keywords: ["relax", "beverage", "drink", "drunk", "party", "pub", "summer", "alcohol", "booze"], skins: [{ unified: "1f37a", native: "\u{1F37A}" }], version: 1 }, beers: { id: "beers", name: "Clinking Beer Mugs", keywords: ["beers", "relax", "beverage", "drink", "drunk", "party", "pub", "summer", "alcohol", "booze"], skins: [{ unified: "1f37b", native: "\u{1F37B}" }], version: 1 }, clinking_glasses: { id: "clinking_glasses", name: "Clinking Glasses", keywords: ["beverage", "drink", "party", "alcohol", "celebrate", "cheers", "wine", "champagne", "toast"], skins: [{ unified: "1f942", native: "\u{1F942}" }], version: 3 }, tumbler_glass: { id: "tumbler_glass", name: "Tumbler Glass", keywords: ["drink", "beverage", "drunk", "alcohol", "liquor", "booze", "bourbon", "scotch", "whisky", "shot"], skins: [{ unified: "1f943", native: "\u{1F943}" }], version: 3 }, pouring_liquid: { id: "pouring_liquid", name: "Pouring Liquid", keywords: ["cup", "water"], skins: [{ unified: "1fad7", native: "\u{1FAD7}" }], version: 14 }, cup_with_straw: { id: "cup_with_straw", name: "Cup with Straw", keywords: ["drink", "soda"], skins: [{ unified: "1f964", native: "\u{1F964}" }], version: 5 }, bubble_tea: { id: "bubble_tea", name: "Bubble Tea", keywords: ["taiwan", "boba", "milk", "straw"], skins: [{ unified: "1f9cb", native: "\u{1F9CB}" }], version: 13 }, beverage_box: { id: "beverage_box", name: "Beverage Box", keywords: ["drink"], skins: [{ unified: "1f9c3", native: "\u{1F9C3}" }], version: 12 }, mate_drink: { id: "mate_drink", name: "Mate", keywords: ["drink", "tea", "beverage"], skins: [{ unified: "1f9c9", native: "\u{1F9C9}" }], version: 12 }, ice_cube: { id: "ice_cube", name: "Ice", keywords: ["cube", "water", "cold"], skins: [{ unified: "1f9ca", native: "\u{1F9CA}" }], version: 12 }, chopsticks: { id: "chopsticks", name: "Chopsticks", keywords: ["food"], skins: [{ unified: "1f962", native: "\u{1F962}" }], version: 5 }, knife_fork_plate: { id: "knife_fork_plate", name: "Fork and Knife with Plate", keywords: ["food", "eat", "meal", "lunch", "dinner", "restaurant"], skins: [{ unified: "1f37d-fe0f", native: "\u{1F37D}\uFE0F" }], version: 1 }, fork_and_knife: { id: "fork_and_knife", name: "Fork and Knife", keywords: ["cutlery", "kitchen"], skins: [{ unified: "1f374", native: "\u{1F374}" }], version: 1 }, spoon: { id: "spoon", name: "Spoon", keywords: ["cutlery", "kitchen", "tableware"], skins: [{ unified: "1f944", native: "\u{1F944}" }], version: 3 }, hocho: { id: "hocho", name: "Hocho", keywords: ["knife", "kitchen", "blade", "cutlery", "weapon"], skins: [{ unified: "1f52a", native: "\u{1F52A}" }], version: 1 }, jar: { id: "jar", name: "Jar", keywords: ["container", "sauce"], skins: [{ unified: "1fad9", native: "\u{1FAD9}" }], version: 14 }, amphora: { id: "amphora", name: "Amphora", keywords: ["vase", "jar"], skins: [{ unified: "1f3fa", native: "\u{1F3FA}" }], version: 1 }, earth_africa: { id: "earth_africa", name: "Earth Globe Europe-Africa", keywords: ["africa", "showing", "europe", "world", "international"], skins: [{ unified: "1f30d", native: "\u{1F30D}" }], version: 1 }, earth_americas: { id: "earth_americas", name: "Earth Globe Americas", keywords: ["showing", "world", "USA", "international"], skins: [{ unified: "1f30e", native: "\u{1F30E}" }], version: 1 }, earth_asia: { id: "earth_asia", name: "Earth Globe Asia-Australia", keywords: ["asia", "showing", "australia", "world", "east", "international"], skins: [{ unified: "1f30f", native: "\u{1F30F}" }], version: 1 }, globe_with_meridians: { id: "globe_with_meridians", name: "Globe with Meridians", keywords: ["earth", "international", "world", "internet", "interweb", "i18n"], skins: [{ unified: "1f310", native: "\u{1F310}" }], version: 1 }, world_map: { id: "world_map", name: "World Map", keywords: ["location", "direction"], skins: [{ unified: "1f5fa-fe0f", native: "\u{1F5FA}\uFE0F" }], version: 1 }, japan: { id: "japan", name: "Map of Japan", keywords: ["nation", "country", "japanese", "asia"], skins: [{ unified: "1f5fe", native: "\u{1F5FE}" }], version: 1 }, compass: { id: "compass", name: "Compass", keywords: ["magnetic", "navigation", "orienteering"], skins: [{ unified: "1f9ed", native: "\u{1F9ED}" }], version: 11 }, snow_capped_mountain: { id: "snow_capped_mountain", name: "Snow-Capped Mountain", keywords: ["snow", "capped", "photo", "nature", "environment", "winter", "cold"], skins: [{ unified: "1f3d4-fe0f", native: "\u{1F3D4}\uFE0F" }], version: 1 }, mountain: { id: "mountain", name: "Mountain", keywords: ["photo", "nature", "environment"], skins: [{ unified: "26f0-fe0f", native: "\u26F0\uFE0F" }], version: 1 }, volcano: { id: "volcano", name: "Volcano", keywords: ["photo", "nature", "disaster"], skins: [{ unified: "1f30b", native: "\u{1F30B}" }], version: 1 }, mount_fuji: { id: "mount_fuji", name: "Mount Fuji", keywords: ["photo", "mountain", "nature", "japanese"], skins: [{ unified: "1f5fb", native: "\u{1F5FB}" }], version: 1 }, camping: { id: "camping", name: "Camping", keywords: ["photo", "outdoors", "tent"], skins: [{ unified: "1f3d5-fe0f", native: "\u{1F3D5}\uFE0F" }], version: 1 }, beach_with_umbrella: { id: "beach_with_umbrella", name: "Beach with Umbrella", keywords: ["weather", "summer", "sunny", "sand", "mojito"], skins: [{ unified: "1f3d6-fe0f", native: "\u{1F3D6}\uFE0F" }], version: 1 }, desert: { id: "desert", name: "Desert", keywords: ["photo", "warm", "saharah"], skins: [{ unified: "1f3dc-fe0f", native: "\u{1F3DC}\uFE0F" }], version: 1 }, desert_island: { id: "desert_island", name: "Desert Island", keywords: ["photo", "tropical", "mojito"], skins: [{ unified: "1f3dd-fe0f", native: "\u{1F3DD}\uFE0F" }], version: 1 }, national_park: { id: "national_park", name: "National Park", keywords: ["photo", "environment", "nature"], skins: [{ unified: "1f3de-fe0f", native: "\u{1F3DE}\uFE0F" }], version: 1 }, stadium: { id: "stadium", name: "Stadium", keywords: ["photo", "place", "sports", "concert", "venue"], skins: [{ unified: "1f3df-fe0f", native: "\u{1F3DF}\uFE0F" }], version: 1 }, classical_building: { id: "classical_building", name: "Classical Building", keywords: ["art", "culture", "history"], skins: [{ unified: "1f3db-fe0f", native: "\u{1F3DB}\uFE0F" }], version: 1 }, building_construction: { id: "building_construction", name: "Building Construction", keywords: ["wip", "working", "progress"], skins: [{ unified: "1f3d7-fe0f", native: "\u{1F3D7}\uFE0F" }], version: 1 }, bricks: { id: "bricks", name: "Brick", keywords: ["bricks"], skins: [{ unified: "1f9f1", native: "\u{1F9F1}" }], version: 11 }, rock: { id: "rock", name: "Rock", keywords: ["stone"], skins: [{ unified: "1faa8", native: "\u{1FAA8}" }], version: 13 }, wood: { id: "wood", name: "Wood", keywords: ["nature", "timber", "trunk"], skins: [{ unified: "1fab5", native: "\u{1FAB5}" }], version: 13 }, hut: { id: "hut", name: "Hut", keywords: ["house", "structure"], skins: [{ unified: "1f6d6", native: "\u{1F6D6}" }], version: 13 }, house_buildings: { id: "house_buildings", name: "Houses", keywords: ["house", "buildings", "photo"], skins: [{ unified: "1f3d8-fe0f", native: "\u{1F3D8}\uFE0F" }], version: 1 }, derelict_house_building: { id: "derelict_house_building", name: "Derelict House", keywords: ["building", "abandon", "evict", "broken"], skins: [{ unified: "1f3da-fe0f", native: "\u{1F3DA}\uFE0F" }], version: 1 }, house: { id: "house", name: "House", keywords: ["building", "home"], skins: [{ unified: "1f3e0", native: "\u{1F3E0}" }], version: 1 }, house_with_garden: { id: "house_with_garden", name: "House with Garden", keywords: ["home", "plant", "nature"], skins: [{ unified: "1f3e1", native: "\u{1F3E1}" }], version: 1 }, office: { id: "office", name: "Office Building", keywords: ["bureau", "work"], skins: [{ unified: "1f3e2", native: "\u{1F3E2}" }], version: 1 }, post_office: { id: "post_office", name: "Japanese Post Office", keywords: ["building", "envelope", "communication"], skins: [{ unified: "1f3e3", native: "\u{1F3E3}" }], version: 1 }, european_post_office: { id: "european_post_office", name: "Post Office", keywords: ["european", "building", "email"], skins: [{ unified: "1f3e4", native: "\u{1F3E4}" }], version: 1 }, hospital: { id: "hospital", name: "Hospital", keywords: ["building", "health", "surgery", "doctor"], skins: [{ unified: "1f3e5", native: "\u{1F3E5}" }], version: 1 }, bank: { id: "bank", name: "Bank", keywords: ["building", "money", "sales", "cash", "business", "enterprise"], skins: [{ unified: "1f3e6", native: "\u{1F3E6}" }], version: 1 }, hotel: { id: "hotel", name: "Hotel", keywords: ["building", "accomodation", "checkin"], skins: [{ unified: "1f3e8", native: "\u{1F3E8}" }], version: 1 }, love_hotel: { id: "love_hotel", name: "Love Hotel", keywords: ["like", "affection", "dating"], skins: [{ unified: "1f3e9", native: "\u{1F3E9}" }], version: 1 }, convenience_store: { id: "convenience_store", name: "Convenience Store", keywords: ["building", "shopping", "groceries"], skins: [{ unified: "1f3ea", native: "\u{1F3EA}" }], version: 1 }, school: { id: "school", name: "School", keywords: ["building", "student", "education", "learn", "teach"], skins: [{ unified: "1f3eb", native: "\u{1F3EB}" }], version: 1 }, department_store: { id: "department_store", name: "Department Store", keywords: ["building", "shopping", "mall"], skins: [{ unified: "1f3ec", native: "\u{1F3EC}" }], version: 1 }, factory: { id: "factory", name: "Factory", keywords: ["building", "industry", "pollution", "smoke"], skins: [{ unified: "1f3ed", native: "\u{1F3ED}" }], version: 1 }, japanese_castle: { id: "japanese_castle", name: "Japanese Castle", keywords: ["photo", "building"], skins: [{ unified: "1f3ef", native: "\u{1F3EF}" }], version: 1 }, european_castle: { id: "european_castle", name: "Castle", keywords: ["european", "building", "royalty", "history"], skins: [{ unified: "1f3f0", native: "\u{1F3F0}" }], version: 1 }, wedding: { id: "wedding", name: "Wedding", keywords: ["love", "like", "affection", "couple", "marriage", "bride", "groom"], skins: [{ unified: "1f492", native: "\u{1F492}" }], version: 1 }, tokyo_tower: { id: "tokyo_tower", name: "Tokyo Tower", keywords: ["photo", "japanese"], skins: [{ unified: "1f5fc", native: "\u{1F5FC}" }], version: 1 }, statue_of_liberty: { id: "statue_of_liberty", name: "Statue of Liberty", keywords: ["american", "newyork"], skins: [{ unified: "1f5fd", native: "\u{1F5FD}" }], version: 1 }, church: { id: "church", name: "Church", keywords: ["building", "religion", "christ"], skins: [{ unified: "26ea", native: "\u26EA" }], version: 1 }, mosque: { id: "mosque", name: "Mosque", keywords: ["islam", "worship", "minaret"], skins: [{ unified: "1f54c", native: "\u{1F54C}" }], version: 1 }, hindu_temple: { id: "hindu_temple", name: "Hindu Temple", keywords: ["religion"], skins: [{ unified: "1f6d5", native: "\u{1F6D5}" }], version: 12 }, synagogue: { id: "synagogue", name: "Synagogue", keywords: ["judaism", "worship", "temple", "jewish"], skins: [{ unified: "1f54d", native: "\u{1F54D}" }], version: 1 }, shinto_shrine: { id: "shinto_shrine", name: "Shinto Shrine", keywords: ["temple", "japan", "kyoto"], skins: [{ unified: "26e9-fe0f", native: "\u26E9\uFE0F" }], version: 1 }, kaaba: { id: "kaaba", name: "Kaaba", keywords: ["mecca", "mosque", "islam"], skins: [{ unified: "1f54b", native: "\u{1F54B}" }], version: 1 }, fountain: { id: "fountain", name: "Fountain", keywords: ["photo", "summer", "water", "fresh"], skins: [{ unified: "26f2", native: "\u26F2" }], version: 1 }, tent: { id: "tent", name: "Tent", keywords: ["photo", "camping", "outdoors"], skins: [{ unified: "26fa", native: "\u26FA" }], version: 1 }, foggy: { id: "foggy", name: "Foggy", keywords: ["photo", "mountain"], skins: [{ unified: "1f301", native: "\u{1F301}" }], version: 1 }, night_with_stars: { id: "night_with_stars", name: "Night with Stars", keywords: ["evening", "city", "downtown"], skins: [{ unified: "1f303", native: "\u{1F303}" }], version: 1 }, cityscape: { id: "cityscape", name: "Cityscape", keywords: ["photo", "night", "life", "urban"], skins: [{ unified: "1f3d9-fe0f", native: "\u{1F3D9}\uFE0F" }], version: 1 }, sunrise_over_mountains: { id: "sunrise_over_mountains", name: "Sunrise over Mountains", keywords: ["view", "vacation", "photo"], skins: [{ unified: "1f304", native: "\u{1F304}" }], version: 1 }, sunrise: { id: "sunrise", name: "Sunrise", keywords: ["morning", "view", "vacation", "photo"], skins: [{ unified: "1f305", native: "\u{1F305}" }], version: 1 }, city_sunset: { id: "city_sunset", name: "Cityscape at Dusk", keywords: ["city", "sunset", "photo", "evening", "sky", "buildings"], skins: [{ unified: "1f306", native: "\u{1F306}" }], version: 1 }, city_sunrise: { id: "city_sunrise", name: "Sunset", keywords: ["city", "sunrise", "photo", "good", "morning", "dawn"], skins: [{ unified: "1f307", native: "\u{1F307}" }], version: 1 }, bridge_at_night: { id: "bridge_at_night", name: "Bridge at Night", keywords: ["photo", "sanfrancisco"], skins: [{ unified: "1f309", native: "\u{1F309}" }], version: 1 }, hotsprings: { id: "hotsprings", name: "Hot Springs", keywords: ["hotsprings", "bath", "warm", "relax"], skins: [{ unified: "2668-fe0f", native: "\u2668\uFE0F" }], version: 1 }, carousel_horse: { id: "carousel_horse", name: "Carousel Horse", keywords: ["photo", "carnival"], skins: [{ unified: "1f3a0", native: "\u{1F3A0}" }], version: 1 }, playground_slide: { id: "playground_slide", name: "Playground Slide", keywords: ["fun", "park"], skins: [{ unified: "1f6dd", native: "\u{1F6DD}" }], version: 14 }, ferris_wheel: { id: "ferris_wheel", name: "Ferris Wheel", keywords: ["photo", "carnival", "londoneye"], skins: [{ unified: "1f3a1", native: "\u{1F3A1}" }], version: 1 }, roller_coaster: { id: "roller_coaster", name: "Roller Coaster", keywords: ["carnival", "playground", "photo", "fun"], skins: [{ unified: "1f3a2", native: "\u{1F3A2}" }], version: 1 }, barber: { id: "barber", name: "Barber Pole", keywords: ["hair", "salon", "style"], skins: [{ unified: "1f488", native: "\u{1F488}" }], version: 1 }, circus_tent: { id: "circus_tent", name: "Circus Tent", keywords: ["festival", "carnival", "party"], skins: [{ unified: "1f3aa", native: "\u{1F3AA}" }], version: 1 }, steam_locomotive: { id: "steam_locomotive", name: "Locomotive", keywords: ["steam", "transportation", "vehicle", "train"], skins: [{ unified: "1f682", native: "\u{1F682}" }], version: 1 }, railway_car: { id: "railway_car", name: "Railway Car", keywords: ["transportation", "vehicle"], skins: [{ unified: "1f683", native: "\u{1F683}" }], version: 1 }, bullettrain_side: { id: "bullettrain_side", name: "High-Speed Train", keywords: ["bullettrain", "side", "high", "speed", "transportation", "vehicle"], skins: [{ unified: "1f684", native: "\u{1F684}" }], version: 1 }, bullettrain_front: { id: "bullettrain_front", name: "Bullet Train", keywords: ["bullettrain", "front", "transportation", "vehicle", "speed", "fast", "public", "travel"], skins: [{ unified: "1f685", native: "\u{1F685}" }], version: 1 }, train2: { id: "train2", name: "Train", keywords: ["train2", "transportation", "vehicle"], skins: [{ unified: "1f686", native: "\u{1F686}" }], version: 1 }, metro: { id: "metro", name: "Metro", keywords: ["transportation", "blue", "square", "mrt", "underground", "tube"], skins: [{ unified: "1f687", native: "\u{1F687}" }], version: 1 }, light_rail: { id: "light_rail", name: "Light Rail", keywords: ["transportation", "vehicle"], skins: [{ unified: "1f688", native: "\u{1F688}" }], version: 1 }, station: { id: "station", name: "Station", keywords: ["transportation", "vehicle", "public"], skins: [{ unified: "1f689", native: "\u{1F689}" }], version: 1 }, tram: { id: "tram", name: "Tram", keywords: ["transportation", "vehicle"], skins: [{ unified: "1f68a", native: "\u{1F68A}" }], version: 1 }, monorail: { id: "monorail", name: "Monorail", keywords: ["transportation", "vehicle"], skins: [{ unified: "1f69d", native: "\u{1F69D}" }], version: 1 }, mountain_railway: { id: "mountain_railway", name: "Mountain Railway", keywords: ["transportation", "vehicle"], skins: [{ unified: "1f69e", native: "\u{1F69E}" }], version: 1 }, train: { id: "train", name: "Tram Car", keywords: ["train", "transportation", "vehicle", "carriage", "public", "travel"], skins: [{ unified: "1f68b", native: "\u{1F68B}" }], version: 1 }, bus: { id: "bus", name: "Bus", keywords: ["car", "vehicle", "transportation"], skins: [{ unified: "1f68c", native: "\u{1F68C}" }], version: 1 }, oncoming_bus: { id: "oncoming_bus", name: "Oncoming Bus", keywords: ["vehicle", "transportation"], skins: [{ unified: "1f68d", native: "\u{1F68D}" }], version: 1 }, trolleybus: { id: "trolleybus", name: "Trolleybus", keywords: ["bart", "transportation", "vehicle"], skins: [{ unified: "1f68e", native: "\u{1F68E}" }], version: 1 }, minibus: { id: "minibus", name: "Minibus", keywords: ["vehicle", "car", "transportation"], skins: [{ unified: "1f690", native: "\u{1F690}" }], version: 1 }, ambulance: { id: "ambulance", name: "Ambulance", keywords: ["health", "911", "hospital"], skins: [{ unified: "1f691", native: "\u{1F691}" }], version: 1 }, fire_engine: { id: "fire_engine", name: "Fire Engine", keywords: ["transportation", "cars", "vehicle"], skins: [{ unified: "1f692", native: "\u{1F692}" }], version: 1 }, police_car: { id: "police_car", name: "Police Car", keywords: ["vehicle", "cars", "transportation", "law", "legal", "enforcement"], skins: [{ unified: "1f693", native: "\u{1F693}" }], version: 1 }, oncoming_police_car: { id: "oncoming_police_car", name: "Oncoming Police Car", keywords: ["vehicle", "law", "legal", "enforcement", "911"], skins: [{ unified: "1f694", native: "\u{1F694}" }], version: 1 }, taxi: { id: "taxi", name: "Taxi", keywords: ["uber", "vehicle", "cars", "transportation"], skins: [{ unified: "1f695", native: "\u{1F695}" }], version: 1 }, oncoming_taxi: { id: "oncoming_taxi", name: "Oncoming Taxi", keywords: ["vehicle", "cars", "uber"], skins: [{ unified: "1f696", native: "\u{1F696}" }], version: 1 }, car: { id: "car", name: "Automobile", keywords: ["car", "red", "transportation", "vehicle"], skins: [{ unified: "1f697", native: "\u{1F697}" }], version: 1 }, oncoming_automobile: { id: "oncoming_automobile", name: "Oncoming Automobile", keywords: ["car", "vehicle", "transportation"], skins: [{ unified: "1f698", native: "\u{1F698}" }], version: 1 }, blue_car: { id: "blue_car", name: "Recreational Vehicle", keywords: ["blue", "car", "sport", "utility", "transportation"], skins: [{ unified: "1f699", native: "\u{1F699}" }], version: 1 }, pickup_truck: { id: "pickup_truck", name: "Pickup Truck", keywords: ["car", "transportation"], skins: [{ unified: "1f6fb", native: "\u{1F6FB}" }], version: 13 }, truck: { id: "truck", name: "Delivery Truck", keywords: ["cars", "transportation"], skins: [{ unified: "1f69a", native: "\u{1F69A}" }], version: 1 }, articulated_lorry: { id: "articulated_lorry", name: "Articulated Lorry", keywords: ["vehicle", "cars", "transportation", "express"], skins: [{ unified: "1f69b", native: "\u{1F69B}" }], version: 1 }, tractor: { id: "tractor", name: "Tractor", keywords: ["vehicle", "car", "farming", "agriculture"], skins: [{ unified: "1f69c", native: "\u{1F69C}" }], version: 1 }, racing_car: { id: "racing_car", name: "Racing Car", keywords: ["sports", "race", "fast", "formula", "f1"], skins: [{ unified: "1f3ce-fe0f", native: "\u{1F3CE}\uFE0F" }], version: 1 }, racing_motorcycle: { id: "racing_motorcycle", name: "Motorcycle", keywords: ["racing", "race", "sports", "fast"], skins: [{ unified: "1f3cd-fe0f", native: "\u{1F3CD}\uFE0F" }], version: 1 }, motor_scooter: { id: "motor_scooter", name: "Motor Scooter", keywords: ["vehicle", "vespa", "sasha"], skins: [{ unified: "1f6f5", native: "\u{1F6F5}" }], version: 3 }, manual_wheelchair: { id: "manual_wheelchair", name: "Manual Wheelchair", keywords: ["accessibility"], skins: [{ unified: "1f9bd", native: "\u{1F9BD}" }], version: 12 }, motorized_wheelchair: { id: "motorized_wheelchair", name: "Motorized Wheelchair", keywords: ["accessibility"], skins: [{ unified: "1f9bc", native: "\u{1F9BC}" }], version: 12 }, auto_rickshaw: { id: "auto_rickshaw", name: "Auto Rickshaw", keywords: ["move", "transportation"], skins: [{ unified: "1f6fa", native: "\u{1F6FA}" }], version: 12 }, bike: { id: "bike", name: "Bicycle", keywords: ["bike", "sports", "exercise", "hipster"], skins: [{ unified: "1f6b2", native: "\u{1F6B2}" }], version: 1 }, scooter: { id: "scooter", name: "Scooter", keywords: ["kick", "vehicle", "razor"], skins: [{ unified: "1f6f4", native: "\u{1F6F4}" }], version: 3 }, skateboard: { id: "skateboard", name: "Skateboard", keywords: ["board"], skins: [{ unified: "1f6f9", native: "\u{1F6F9}" }], version: 11 }, roller_skate: { id: "roller_skate", name: "Roller Skate", keywords: ["footwear", "sports"], skins: [{ unified: "1f6fc", native: "\u{1F6FC}" }], version: 13 }, busstop: { id: "busstop", name: "Bus Stop", keywords: ["busstop", "transportation", "wait"], skins: [{ unified: "1f68f", native: "\u{1F68F}" }], version: 1 }, motorway: { id: "motorway", name: "Motorway", keywords: ["road", "cupertino", "interstate", "highway"], skins: [{ unified: "1f6e3-fe0f", native: "\u{1F6E3}\uFE0F" }], version: 1 }, railway_track: { id: "railway_track", name: "Railway Track", keywords: ["train", "transportation"], skins: [{ unified: "1f6e4-fe0f", native: "\u{1F6E4}\uFE0F" }], version: 1 }, oil_drum: { id: "oil_drum", name: "Oil Drum", keywords: ["barrell"], skins: [{ unified: "1f6e2-fe0f", native: "\u{1F6E2}\uFE0F" }], version: 1 }, fuelpump: { id: "fuelpump", name: "Fuel Pump", keywords: ["fuelpump", "gas", "station", "petroleum"], skins: [{ unified: "26fd", native: "\u26FD" }], version: 1 }, wheel: { id: "wheel", name: "Wheel", keywords: ["car", "transport"], skins: [{ unified: "1f6de", native: "\u{1F6DE}" }], version: 14 }, rotating_light: { id: "rotating_light", name: "Police Car Light", keywords: ["rotating", "ambulance", "911", "emergency", "alert", "error", "pinged", "law", "legal"], skins: [{ unified: "1f6a8", native: "\u{1F6A8}" }], version: 1 }, traffic_light: { id: "traffic_light", name: "Horizontal Traffic Light", keywords: ["transportation", "signal"], skins: [{ unified: "1f6a5", native: "\u{1F6A5}" }], version: 1 }, vertical_traffic_light: { id: "vertical_traffic_light", name: "Vertical Traffic Light", keywords: ["transportation", "driving"], skins: [{ unified: "1f6a6", native: "\u{1F6A6}" }], version: 1 }, octagonal_sign: { id: "octagonal_sign", name: "Stop Sign", keywords: ["octagonal"], skins: [{ unified: "1f6d1", native: "\u{1F6D1}" }], version: 3 }, construction: { id: "construction", name: "Construction", keywords: ["wip", "progress", "caution", "warning"], skins: [{ unified: "1f6a7", native: "\u{1F6A7}" }], version: 1 }, anchor: { id: "anchor", name: "Anchor", keywords: ["ship", "ferry", "sea", "boat"], skins: [{ unified: "2693", native: "\u2693" }], version: 1 }, ring_buoy: { id: "ring_buoy", name: "Ring Buoy", keywords: ["life", "saver", "preserver"], skins: [{ unified: "1f6df", native: "\u{1F6DF}" }], version: 14 }, boat: { id: "boat", name: "Sailboat", keywords: ["boat", "ship", "summer", "transportation", "water", "sailing"], skins: [{ unified: "26f5", native: "\u26F5" }], version: 1 }, canoe: { id: "canoe", name: "Canoe", keywords: ["boat", "paddle", "water", "ship"], skins: [{ unified: "1f6f6", native: "\u{1F6F6}" }], version: 3 }, speedboat: { id: "speedboat", name: "Speedboat", keywords: ["ship", "transportation", "vehicle", "summer"], skins: [{ unified: "1f6a4", native: "\u{1F6A4}" }], version: 1 }, passenger_ship: { id: "passenger_ship", name: "Passenger Ship", keywords: ["yacht", "cruise", "ferry"], skins: [{ unified: "1f6f3-fe0f", native: "\u{1F6F3}\uFE0F" }], version: 1 }, ferry: { id: "ferry", name: "Ferry", keywords: ["boat", "ship", "yacht"], skins: [{ unified: "26f4-fe0f", native: "\u26F4\uFE0F" }], version: 1 }, motor_boat: { id: "motor_boat", name: "Motor Boat", keywords: ["ship"], skins: [{ unified: "1f6e5-fe0f", native: "\u{1F6E5}\uFE0F" }], version: 1 }, ship: { id: "ship", name: "Ship", keywords: ["transportation", "titanic", "deploy"], skins: [{ unified: "1f6a2", native: "\u{1F6A2}" }], version: 1 }, airplane: { id: "airplane", name: "Airplane", keywords: ["vehicle", "transportation", "flight", "fly"], skins: [{ unified: "2708-fe0f", native: "\u2708\uFE0F" }], version: 1 }, small_airplane: { id: "small_airplane", name: "Small Airplane", keywords: ["flight", "transportation", "fly", "vehicle"], skins: [{ unified: "1f6e9-fe0f", native: "\u{1F6E9}\uFE0F" }], version: 1 }, airplane_departure: { id: "airplane_departure", name: "Airplane Departure", keywords: ["airport", "flight", "landing"], skins: [{ unified: "1f6eb", native: "\u{1F6EB}" }], version: 1 }, airplane_arriving: { id: "airplane_arriving", name: "Airplane Arrival", keywords: ["arriving", "airport", "flight", "boarding"], skins: [{ unified: "1f6ec", native: "\u{1F6EC}" }], version: 1 }, parachute: { id: "parachute", name: "Parachute", keywords: ["fly", "glide"], skins: [{ unified: "1fa82", native: "\u{1FA82}" }], version: 12 }, seat: { id: "seat", name: "Seat", keywords: ["sit", "airplane", "transport", "bus", "flight", "fly"], skins: [{ unified: "1f4ba", native: "\u{1F4BA}" }], version: 1 }, helicopter: { id: "helicopter", name: "Helicopter", keywords: ["transportation", "vehicle", "fly"], skins: [{ unified: "1f681", native: "\u{1F681}" }], version: 1 }, suspension_railway: { id: "suspension_railway", name: "Suspension Railway", keywords: ["vehicle", "transportation"], skins: [{ unified: "1f69f", native: "\u{1F69F}" }], version: 1 }, mountain_cableway: { id: "mountain_cableway", name: "Mountain Cableway", keywords: ["transportation", "vehicle", "ski"], skins: [{ unified: "1f6a0", native: "\u{1F6A0}" }], version: 1 }, aerial_tramway: { id: "aerial_tramway", name: "Aerial Tramway", keywords: ["transportation", "vehicle", "ski"], skins: [{ unified: "1f6a1", native: "\u{1F6A1}" }], version: 1 }, satellite: { id: "satellite", name: "Satellite", keywords: ["communication", "gps", "orbit", "spaceflight", "NASA", "ISS"], skins: [{ unified: "1f6f0-fe0f", native: "\u{1F6F0}\uFE0F" }], version: 1 }, rocket: { id: "rocket", name: "Rocket", keywords: ["launch", "ship", "staffmode", "NASA", "outer", "space", "fly"], skins: [{ unified: "1f680", native: "\u{1F680}" }], version: 1 }, flying_saucer: { id: "flying_saucer", name: "Flying Saucer", keywords: ["transportation", "vehicle", "ufo"], skins: [{ unified: "1f6f8", native: "\u{1F6F8}" }], version: 5 }, bellhop_bell: { id: "bellhop_bell", name: "Bellhop Bell", keywords: ["service"], skins: [{ unified: "1f6ce-fe0f", native: "\u{1F6CE}\uFE0F" }], version: 1 }, luggage: { id: "luggage", name: "Luggage", keywords: ["packing", "travel"], skins: [{ unified: "1f9f3", native: "\u{1F9F3}" }], version: 11 }, hourglass: { id: "hourglass", name: "Hourglass", keywords: ["done", "time", "clock", "oldschool", "limit", "exam", "quiz", "test"], skins: [{ unified: "231b", native: "\u231B" }], version: 1 }, hourglass_flowing_sand: { id: "hourglass_flowing_sand", name: "Hourglass Not Done", keywords: ["flowing", "sand", "oldschool", "time", "countdown"], skins: [{ unified: "23f3", native: "\u23F3" }], version: 1 }, watch: { id: "watch", name: "Watch", keywords: ["time", "accessories"], skins: [{ unified: "231a", native: "\u231A" }], version: 1 }, alarm_clock: { id: "alarm_clock", name: "Alarm Clock", keywords: ["time", "wake"], skins: [{ unified: "23f0", native: "\u23F0" }], version: 1 }, stopwatch: { id: "stopwatch", name: "Stopwatch", keywords: ["time", "deadline"], skins: [{ unified: "23f1-fe0f", native: "\u23F1\uFE0F" }], version: 1 }, timer_clock: { id: "timer_clock", name: "Timer Clock", keywords: ["alarm"], skins: [{ unified: "23f2-fe0f", native: "\u23F2\uFE0F" }], version: 1 }, mantelpiece_clock: { id: "mantelpiece_clock", name: "Mantelpiece Clock", keywords: ["time"], skins: [{ unified: "1f570-fe0f", native: "\u{1F570}\uFE0F" }], version: 1 }, clock12: { id: "clock12", name: "Twelve O\u2019clock", keywords: ["clock12", "o", "clock", "12", "00:00", "0000", "12:00", "1200", "time", "noon", "midnight", "midday", "late", "early", "schedule"], skins: [{ unified: "1f55b", native: "\u{1F55B}" }], version: 1 }, clock1230: { id: "clock1230", name: "Twelve-Thirty", keywords: ["clock1230", "twelve", "thirty", "00:30", "0030", "12:30", "1230", "time", "late", "early", "schedule"], skins: [{ unified: "1f567", native: "\u{1F567}" }], version: 1 }, clock1: { id: "clock1", name: "One O\u2019clock", keywords: ["clock1", "o", "clock", "1", "1:00", "100", "13:00", "1300", "time", "late", "early", "schedule"], skins: [{ unified: "1f550", native: "\u{1F550}" }], version: 1 }, clock130: { id: "clock130", name: "One-Thirty", keywords: ["clock130", "one", "thirty", "1:30", "130", "13:30", "1330", "time", "late", "early", "schedule"], skins: [{ unified: "1f55c", native: "\u{1F55C}" }], version: 1 }, clock2: { id: "clock2", name: "Two O\u2019clock", keywords: ["clock2", "o", "clock", "2", "2:00", "200", "14:00", "1400", "time", "late", "early", "schedule"], skins: [{ unified: "1f551", native: "\u{1F551}" }], version: 1 }, clock230: { id: "clock230", name: "Two-Thirty", keywords: ["clock230", "two", "thirty", "2:30", "230", "14:30", "1430", "time", "late", "early", "schedule"], skins: [{ unified: "1f55d", native: "\u{1F55D}" }], version: 1 }, clock3: { id: "clock3", name: "Three O\u2019clock", keywords: ["clock3", "o", "clock", "3", "3:00", "300", "15:00", "1500", "time", "late", "early", "schedule"], skins: [{ unified: "1f552", native: "\u{1F552}" }], version: 1 }, clock330: { id: "clock330", name: "Three-Thirty", keywords: ["clock330", "three", "thirty", "3:30", "330", "15:30", "1530", "time", "late", "early", "schedule"], skins: [{ unified: "1f55e", native: "\u{1F55E}" }], version: 1 }, clock4: { id: "clock4", name: "Four O\u2019clock", keywords: ["clock4", "o", "clock", "4", "4:00", "400", "16:00", "1600", "time", "late", "early", "schedule"], skins: [{ unified: "1f553", native: "\u{1F553}" }], version: 1 }, clock430: { id: "clock430", name: "Four-Thirty", keywords: ["clock430", "four", "thirty", "4:30", "430", "16:30", "1630", "time", "late", "early", "schedule"], skins: [{ unified: "1f55f", native: "\u{1F55F}" }], version: 1 }, clock5: { id: "clock5", name: "Five O\u2019clock", keywords: ["clock5", "o", "clock", "5", "5:00", "500", "17:00", "1700", "time", "late", "early", "schedule"], skins: [{ unified: "1f554", native: "\u{1F554}" }], version: 1 }, clock530: { id: "clock530", name: "Five-Thirty", keywords: ["clock530", "five", "thirty", "5:30", "530", "17:30", "1730", "time", "late", "early", "schedule"], skins: [{ unified: "1f560", native: "\u{1F560}" }], version: 1 }, clock6: { id: "clock6", name: "Six O\u2019clock", keywords: ["clock6", "o", "clock", "6", "6:00", "600", "18:00", "1800", "time", "late", "early", "schedule", "dawn", "dusk"], skins: [{ unified: "1f555", native: "\u{1F555}" }], version: 1 }, clock630: { id: "clock630", name: "Six-Thirty", keywords: ["clock630", "six", "thirty", "6:30", "630", "18:30", "1830", "time", "late", "early", "schedule"], skins: [{ unified: "1f561", native: "\u{1F561}" }], version: 1 }, clock7: { id: "clock7", name: "Seven O\u2019clock", keywords: ["clock7", "o", "clock", "7", "7:00", "700", "19:00", "1900", "time", "late", "early", "schedule"], skins: [{ unified: "1f556", native: "\u{1F556}" }], version: 1 }, clock730: { id: "clock730", name: "Seven-Thirty", keywords: ["clock730", "seven", "thirty", "7:30", "730", "19:30", "1930", "time", "late", "early", "schedule"], skins: [{ unified: "1f562", native: "\u{1F562}" }], version: 1 }, clock8: { id: "clock8", name: "Eight O\u2019clock", keywords: ["clock8", "o", "clock", "8", "8:00", "800", "20:00", "2000", "time", "late", "early", "schedule"], skins: [{ unified: "1f557", native: "\u{1F557}" }], version: 1 }, clock830: { id: "clock830", name: "Eight-Thirty", keywords: ["clock830", "eight", "thirty", "8:30", "830", "20:30", "2030", "time", "late", "early", "schedule"], skins: [{ unified: "1f563", native: "\u{1F563}" }], version: 1 }, clock9: { id: "clock9", name: "Nine O\u2019clock", keywords: ["clock9", "o", "clock", "9", "9:00", "900", "21:00", "2100", "time", "late", "early", "schedule"], skins: [{ unified: "1f558", native: "\u{1F558}" }], version: 1 }, clock930: { id: "clock930", name: "Nine-Thirty", keywords: ["clock930", "nine", "thirty", "9:30", "930", "21:30", "2130", "time", "late", "early", "schedule"], skins: [{ unified: "1f564", native: "\u{1F564}" }], version: 1 }, clock10: { id: "clock10", name: "Ten O\u2019clock", keywords: ["clock10", "o", "clock", "10", "10:00", "1000", "22:00", "2200", "time", "late", "early", "schedule"], skins: [{ unified: "1f559", native: "\u{1F559}" }], version: 1 }, clock1030: { id: "clock1030", name: "Ten-Thirty", keywords: ["clock1030", "ten", "thirty", "10:30", "1030", "22:30", "2230", "time", "late", "early", "schedule"], skins: [{ unified: "1f565", native: "\u{1F565}" }], version: 1 }, clock11: { id: "clock11", name: "Eleven O\u2019clock", keywords: ["clock11", "o", "clock", "11", "11:00", "1100", "23:00", "2300", "time", "late", "early", "schedule"], skins: [{ unified: "1f55a", native: "\u{1F55A}" }], version: 1 }, clock1130: { id: "clock1130", name: "Eleven-Thirty", keywords: ["clock1130", "eleven", "thirty", "11:30", "1130", "23:30", "2330", "time", "late", "early", "schedule"], skins: [{ unified: "1f566", native: "\u{1F566}" }], version: 1 }, new_moon: { id: "new_moon", name: "New Moon", keywords: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f311", native: "\u{1F311}" }], version: 1 }, waxing_crescent_moon: { id: "waxing_crescent_moon", name: "Waxing Crescent Moon", keywords: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f312", native: "\u{1F312}" }], version: 1 }, first_quarter_moon: { id: "first_quarter_moon", name: "First Quarter Moon", keywords: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f313", native: "\u{1F313}" }], version: 1 }, moon: { id: "moon", name: "Waxing Gibbous Moon", keywords: ["nature", "night", "sky", "gray", "twilight", "planet", "space", "evening", "sleep"], skins: [{ unified: "1f314", native: "\u{1F314}" }], version: 1 }, full_moon: { id: "full_moon", name: "Full Moon", keywords: ["nature", "yellow", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f315", native: "\u{1F315}" }], version: 1 }, waning_gibbous_moon: { id: "waning_gibbous_moon", name: "Waning Gibbous Moon", keywords: ["nature", "twilight", "planet", "space", "night", "evening", "sleep", "waxing"], skins: [{ unified: "1f316", native: "\u{1F316}" }], version: 1 }, last_quarter_moon: { id: "last_quarter_moon", name: "Last Quarter Moon", keywords: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f317", native: "\u{1F317}" }], version: 1 }, waning_crescent_moon: { id: "waning_crescent_moon", name: "Waning Crescent Moon", keywords: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f318", native: "\u{1F318}" }], version: 1 }, crescent_moon: { id: "crescent_moon", name: "Crescent Moon", keywords: ["night", "sleep", "sky", "evening", "magic"], skins: [{ unified: "1f319", native: "\u{1F319}" }], version: 1 }, new_moon_with_face: { id: "new_moon_with_face", name: "New Moon Face", keywords: ["with", "nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f31a", native: "\u{1F31A}" }], version: 1 }, first_quarter_moon_with_face: { id: "first_quarter_moon_with_face", name: "First Quarter Moon Face", keywords: ["with", "nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f31b", native: "\u{1F31B}" }], version: 1 }, last_quarter_moon_with_face: { id: "last_quarter_moon_with_face", name: "Last Quarter Moon Face", keywords: ["with", "nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f31c", native: "\u{1F31C}" }], version: 1 }, thermometer: { id: "thermometer", name: "Thermometer", keywords: ["weather", "temperature", "hot", "cold"], skins: [{ unified: "1f321-fe0f", native: "\u{1F321}\uFE0F" }], version: 1 }, sunny: { id: "sunny", name: "Sun", keywords: ["sunny", "weather", "nature", "brightness", "summer", "beach", "spring"], skins: [{ unified: "2600-fe0f", native: "\u2600\uFE0F" }], version: 1 }, full_moon_with_face: { id: "full_moon_with_face", name: "Full Moon Face", keywords: ["with", "nature", "twilight", "planet", "space", "night", "evening", "sleep"], skins: [{ unified: "1f31d", native: "\u{1F31D}" }], version: 1 }, sun_with_face: { id: "sun_with_face", name: "Sun with Face", keywords: ["nature", "morning", "sky"], skins: [{ unified: "1f31e", native: "\u{1F31E}" }], version: 1 }, ringed_planet: { id: "ringed_planet", name: "Ringed Planet", keywords: ["outerspace"], skins: [{ unified: "1fa90", native: "\u{1FA90}" }], version: 12 }, star: { id: "star", name: "Star", keywords: ["night", "yellow"], skins: [{ unified: "2b50", native: "\u2B50" }], version: 1 }, star2: { id: "star2", name: "Glowing Star", keywords: ["star2", "night", "sparkle", "awesome", "good", "magic"], skins: [{ unified: "1f31f", native: "\u{1F31F}" }], version: 1 }, stars: { id: "stars", name: "Shooting Star", keywords: ["stars", "night", "photo"], skins: [{ unified: "1f320", native: "\u{1F320}" }], version: 1 }, milky_way: { id: "milky_way", name: "Milky Way", keywords: ["photo", "space", "stars"], skins: [{ unified: "1f30c", native: "\u{1F30C}" }], version: 1 }, cloud: { id: "cloud", name: "Cloud", keywords: ["weather", "sky"], skins: [{ unified: "2601-fe0f", native: "\u2601\uFE0F" }], version: 1 }, partly_sunny: { id: "partly_sunny", name: "Sun Behind Cloud", keywords: ["partly", "sunny", "weather", "nature", "cloudy", "morning", "fall", "spring"], skins: [{ unified: "26c5", native: "\u26C5" }], version: 1 }, thunder_cloud_and_rain: { id: "thunder_cloud_and_rain", name: "Cloud with Lightning and Rain", keywords: ["thunder", "weather"], skins: [{ unified: "26c8-fe0f", native: "\u26C8\uFE0F" }], version: 1 }, mostly_sunny: { id: "mostly_sunny", name: "Sun Behind Small Cloud", keywords: ["mostly", "sunny", "weather"], skins: [{ unified: "1f324-fe0f", native: "\u{1F324}\uFE0F" }], version: 1 }, barely_sunny: { id: "barely_sunny", name: "Sun Behind Large Cloud", keywords: ["barely", "sunny", "weather"], skins: [{ unified: "1f325-fe0f", native: "\u{1F325}\uFE0F" }], version: 1 }, partly_sunny_rain: { id: "partly_sunny_rain", name: "Sun Behind Rain Cloud", keywords: ["partly", "sunny", "weather"], skins: [{ unified: "1f326-fe0f", native: "\u{1F326}\uFE0F" }], version: 1 }, rain_cloud: { id: "rain_cloud", name: "Cloud with Rain", keywords: ["weather"], skins: [{ unified: "1f327-fe0f", native: "\u{1F327}\uFE0F" }], version: 1 }, snow_cloud: { id: "snow_cloud", name: "Cloud with Snow", keywords: ["weather"], skins: [{ unified: "1f328-fe0f", native: "\u{1F328}\uFE0F" }], version: 1 }, lightning: { id: "lightning", name: "Cloud with Lightning", keywords: ["weather", "thunder"], skins: [{ unified: "1f329-fe0f", native: "\u{1F329}\uFE0F" }], version: 1 }, tornado: { id: "tornado", name: "Tornado", keywords: ["cloud", "weather", "cyclone", "twister"], skins: [{ unified: "1f32a-fe0f", native: "\u{1F32A}\uFE0F" }], version: 1 }, fog: { id: "fog", name: "Fog", keywords: ["weather"], skins: [{ unified: "1f32b-fe0f", native: "\u{1F32B}\uFE0F" }], version: 1 }, wind_blowing_face: { id: "wind_blowing_face", name: "Wind Face", keywords: ["blowing", "gust", "air"], skins: [{ unified: "1f32c-fe0f", native: "\u{1F32C}\uFE0F" }], version: 1 }, cyclone: { id: "cyclone", name: "Cyclone", keywords: ["weather", "swirl", "blue", "cloud", "vortex", "spiral", "whirlpool", "spin", "tornado", "hurricane", "typhoon"], skins: [{ unified: "1f300", native: "\u{1F300}" }], version: 1 }, rainbow: { id: "rainbow", name: "Rainbow", keywords: ["nature", "happy", "unicorn", "face", "photo", "sky", "spring"], skins: [{ unified: "1f308", native: "\u{1F308}" }], version: 1 }, closed_umbrella: { id: "closed_umbrella", name: "Closed Umbrella", keywords: ["weather", "rain", "drizzle"], skins: [{ unified: "1f302", native: "\u{1F302}" }], version: 1 }, umbrella: { id: "umbrella", name: "Umbrella", keywords: ["weather", "spring"], skins: [{ unified: "2602-fe0f", native: "\u2602\uFE0F" }], version: 1 }, umbrella_with_rain_drops: { id: "umbrella_with_rain_drops", name: "Umbrella with Rain Drops", keywords: ["rainy", "weather", "spring"], skins: [{ unified: "2614", native: "\u2614" }], version: 1 }, umbrella_on_ground: { id: "umbrella_on_ground", name: "Umbrella on Ground", keywords: ["weather", "summer"], skins: [{ unified: "26f1-fe0f", native: "\u26F1\uFE0F" }], version: 1 }, zap: { id: "zap", name: "High Voltage", keywords: ["zap", "thunder", "weather", "lightning", "bolt", "fast"], skins: [{ unified: "26a1", native: "\u26A1" }], version: 1 }, snowflake: { id: "snowflake", name: "Snowflake", keywords: ["winter", "season", "cold", "weather", "christmas", "xmas"], skins: [{ unified: "2744-fe0f", native: "\u2744\uFE0F" }], version: 1 }, snowman: { id: "snowman", name: "Snowman", keywords: ["winter", "season", "cold", "weather", "christmas", "xmas", "frozen"], skins: [{ unified: "2603-fe0f", native: "\u2603\uFE0F" }], version: 1 }, snowman_without_snow: { id: "snowman_without_snow", name: "Snowman Without Snow", keywords: ["winter", "season", "cold", "weather", "christmas", "xmas", "frozen"], skins: [{ unified: "26c4", native: "\u26C4" }], version: 1 }, comet: { id: "comet", name: "Comet", keywords: ["space"], skins: [{ unified: "2604-fe0f", native: "\u2604\uFE0F" }], version: 1 }, fire: { id: "fire", name: "Fire", keywords: ["hot", "cook", "flame"], skins: [{ unified: "1f525", native: "\u{1F525}" }], version: 1 }, droplet: { id: "droplet", name: "Droplet", keywords: ["water", "drip", "faucet", "spring"], skins: [{ unified: "1f4a7", native: "\u{1F4A7}" }], version: 1 }, ocean: { id: "ocean", name: "Water Wave", keywords: ["ocean", "sea", "nature", "tsunami", "disaster"], skins: [{ unified: "1f30a", native: "\u{1F30A}" }], version: 1 }, jack_o_lantern: { id: "jack_o_lantern", name: "Jack-O-Lantern", keywords: ["jack", "o", "lantern", "halloween", "light", "pumpkin", "creepy", "fall"], skins: [{ unified: "1f383", native: "\u{1F383}" }], version: 1 }, christmas_tree: { id: "christmas_tree", name: "Christmas Tree", keywords: ["festival", "vacation", "december", "xmas", "celebration"], skins: [{ unified: "1f384", native: "\u{1F384}" }], version: 1 }, fireworks: { id: "fireworks", name: "Fireworks", keywords: ["photo", "festival", "carnival", "congratulations"], skins: [{ unified: "1f386", native: "\u{1F386}" }], version: 1 }, sparkler: { id: "sparkler", name: "Sparkler", keywords: ["stars", "night", "shine"], skins: [{ unified: "1f387", native: "\u{1F387}" }], version: 1 }, firecracker: { id: "firecracker", name: "Firecracker", keywords: ["dynamite", "boom", "explode", "explosion", "explosive"], skins: [{ unified: "1f9e8", native: "\u{1F9E8}" }], version: 11 }, sparkles: { id: "sparkles", name: "Sparkles", keywords: ["stars", "shine", "shiny", "cool", "awesome", "good", "magic"], skins: [{ unified: "2728", native: "\u2728" }], version: 1 }, balloon: { id: "balloon", name: "Balloon", keywords: ["party", "celebration", "birthday", "circus"], skins: [{ unified: "1f388", native: "\u{1F388}" }], version: 1 }, tada: { id: "tada", name: "Party Popper", keywords: ["tada", "congratulations", "birthday", "magic", "circus", "celebration"], skins: [{ unified: "1f389", native: "\u{1F389}" }], version: 1 }, confetti_ball: { id: "confetti_ball", name: "Confetti Ball", keywords: ["festival", "party", "birthday", "circus"], skins: [{ unified: "1f38a", native: "\u{1F38A}" }], version: 1 }, tanabata_tree: { id: "tanabata_tree", name: "Tanabata Tree", keywords: ["plant", "nature", "branch", "summer", "bamboo", "wish", "star", "festival", "tanzaku"], skins: [{ unified: "1f38b", native: "\u{1F38B}" }], version: 1 }, bamboo: { id: "bamboo", name: "Pine Decoration", keywords: ["bamboo", "japanese", "plant", "nature", "vegetable", "panda", "new", "years"], skins: [{ unified: "1f38d", native: "\u{1F38D}" }], version: 1 }, dolls: { id: "dolls", name: "Japanese Dolls", keywords: ["toy", "kimono"], skins: [{ unified: "1f38e", native: "\u{1F38E}" }], version: 1 }, flags: { id: "flags", name: "Carp Streamer", keywords: ["flags", "fish", "japanese", "koinobori", "banner"], skins: [{ unified: "1f38f", native: "\u{1F38F}" }], version: 1 }, wind_chime: { id: "wind_chime", name: "Wind Chime", keywords: ["nature", "ding", "spring", "bell"], skins: [{ unified: "1f390", native: "\u{1F390}" }], version: 1 }, rice_scene: { id: "rice_scene", name: "Moon Viewing Ceremony", keywords: ["rice", "scene", "photo", "japan", "asia", "tsukimi"], skins: [{ unified: "1f391", native: "\u{1F391}" }], version: 1 }, red_envelope: { id: "red_envelope", name: "Red Envelope", keywords: ["gift"], skins: [{ unified: "1f9e7", native: "\u{1F9E7}" }], version: 11 }, ribbon: { id: "ribbon", name: "Ribbon", keywords: ["decoration", "pink", "girl", "bowtie"], skins: [{ unified: "1f380", native: "\u{1F380}" }], version: 1 }, gift: { id: "gift", name: "Wrapped Gift", keywords: ["present", "birthday", "christmas", "xmas"], skins: [{ unified: "1f381", native: "\u{1F381}" }], version: 1 }, reminder_ribbon: { id: "reminder_ribbon", name: "Reminder Ribbon", keywords: ["sports", "cause", "support", "awareness"], skins: [{ unified: "1f397-fe0f", native: "\u{1F397}\uFE0F" }], version: 1 }, admission_tickets: { id: "admission_tickets", name: "Admission Tickets", keywords: ["sports", "concert", "entrance"], skins: [{ unified: "1f39f-fe0f", native: "\u{1F39F}\uFE0F" }], version: 1 }, ticket: { id: "ticket", name: "Ticket", keywords: ["event", "concert", "pass"], skins: [{ unified: "1f3ab", native: "\u{1F3AB}" }], version: 1 }, medal: { id: "medal", name: "Military Medal", keywords: ["award", "winning", "army"], skins: [{ unified: "1f396-fe0f", native: "\u{1F396}\uFE0F" }], version: 1 }, trophy: { id: "trophy", name: "Trophy", keywords: ["win", "award", "contest", "place", "ftw", "ceremony"], skins: [{ unified: "1f3c6", native: "\u{1F3C6}" }], version: 1 }, sports_medal: { id: "sports_medal", name: "Sports Medal", keywords: ["award", "winning"], skins: [{ unified: "1f3c5", native: "\u{1F3C5}" }], version: 1 }, first_place_medal: { id: "first_place_medal", name: "1st Place Medal", keywords: ["first", "award", "winning"], skins: [{ unified: "1f947", native: "\u{1F947}" }], version: 3 }, second_place_medal: { id: "second_place_medal", name: "2nd Place Medal", keywords: ["second", "award"], skins: [{ unified: "1f948", native: "\u{1F948}" }], version: 3 }, third_place_medal: { id: "third_place_medal", name: "3rd Place Medal", keywords: ["third", "award"], skins: [{ unified: "1f949", native: "\u{1F949}" }], version: 3 }, soccer: { id: "soccer", name: "Soccer Ball", keywords: ["sports", "football"], skins: [{ unified: "26bd", native: "\u26BD" }], version: 1 }, baseball: { id: "baseball", name: "Baseball", keywords: ["sports", "balls"], skins: [{ unified: "26be", native: "\u26BE" }], version: 1 }, softball: { id: "softball", name: "Softball", keywords: ["sports", "balls"], skins: [{ unified: "1f94e", native: "\u{1F94E}" }], version: 11 }, basketball: { id: "basketball", name: "Basketball", keywords: ["sports", "balls", "NBA"], skins: [{ unified: "1f3c0", native: "\u{1F3C0}" }], version: 1 }, volleyball: { id: "volleyball", name: "Volleyball", keywords: ["sports", "balls"], skins: [{ unified: "1f3d0", native: "\u{1F3D0}" }], version: 1 }, football: { id: "football", name: "American Football", keywords: ["sports", "balls", "NFL"], skins: [{ unified: "1f3c8", native: "\u{1F3C8}" }], version: 1 }, rugby_football: { id: "rugby_football", name: "Rugby Football", keywords: ["sports", "team"], skins: [{ unified: "1f3c9", native: "\u{1F3C9}" }], version: 1 }, tennis: { id: "tennis", name: "Tennis", keywords: ["sports", "balls", "green"], skins: [{ unified: "1f3be", native: "\u{1F3BE}" }], version: 1 }, flying_disc: { id: "flying_disc", name: "Flying Disc", keywords: ["sports", "frisbee", "ultimate"], skins: [{ unified: "1f94f", native: "\u{1F94F}" }], version: 11 }, bowling: { id: "bowling", name: "Bowling", keywords: ["sports", "fun", "play"], skins: [{ unified: "1f3b3", native: "\u{1F3B3}" }], version: 1 }, cricket_bat_and_ball: { id: "cricket_bat_and_ball", name: "Cricket Game", keywords: ["bat", "and", "ball", "sports"], skins: [{ unified: "1f3cf", native: "\u{1F3CF}" }], version: 1 }, field_hockey_stick_and_ball: { id: "field_hockey_stick_and_ball", name: "Field Hockey", keywords: ["stick", "and", "ball", "sports"], skins: [{ unified: "1f3d1", native: "\u{1F3D1}" }], version: 1 }, ice_hockey_stick_and_puck: { id: "ice_hockey_stick_and_puck", name: "Ice Hockey", keywords: ["stick", "and", "puck", "sports"], skins: [{ unified: "1f3d2", native: "\u{1F3D2}" }], version: 1 }, lacrosse: { id: "lacrosse", name: "Lacrosse", keywords: ["sports", "ball", "stick"], skins: [{ unified: "1f94d", native: "\u{1F94D}" }], version: 11 }, table_tennis_paddle_and_ball: { id: "table_tennis_paddle_and_ball", name: "Ping Pong", keywords: ["table", "tennis", "paddle", "and", "ball", "sports", "pingpong"], skins: [{ unified: "1f3d3", native: "\u{1F3D3}" }], version: 1 }, badminton_racquet_and_shuttlecock: { id: "badminton_racquet_and_shuttlecock", name: "Badminton", keywords: ["racquet", "and", "shuttlecock", "sports"], skins: [{ unified: "1f3f8", native: "\u{1F3F8}" }], version: 1 }, boxing_glove: { id: "boxing_glove", name: "Boxing Glove", keywords: ["sports", "fighting"], skins: [{ unified: "1f94a", native: "\u{1F94A}" }], version: 3 }, martial_arts_uniform: { id: "martial_arts_uniform", name: "Martial Arts Uniform", keywords: ["judo", "karate", "taekwondo"], skins: [{ unified: "1f94b", native: "\u{1F94B}" }], version: 3 }, goal_net: { id: "goal_net", name: "Goal Net", keywords: ["sports"], skins: [{ unified: "1f945", native: "\u{1F945}" }], version: 3 }, golf: { id: "golf", name: "Flag in Hole", keywords: ["golf", "sports", "business", "summer"], skins: [{ unified: "26f3", native: "\u26F3" }], version: 1 }, ice_skate: { id: "ice_skate", name: "Ice Skate", keywords: ["sports"], skins: [{ unified: "26f8-fe0f", native: "\u26F8\uFE0F" }], version: 1 }, fishing_pole_and_fish: { id: "fishing_pole_and_fish", name: "Fishing Pole", keywords: ["and", "fish", "food", "hobby", "summer"], skins: [{ unified: "1f3a3", native: "\u{1F3A3}" }], version: 1 }, diving_mask: { id: "diving_mask", name: "Diving Mask", keywords: ["sport", "ocean"], skins: [{ unified: "1f93f", native: "\u{1F93F}" }], version: 12 }, running_shirt_with_sash: { id: "running_shirt_with_sash", name: "Running Shirt", keywords: ["with", "sash", "play", "pageant"], skins: [{ unified: "1f3bd", native: "\u{1F3BD}" }], version: 1 }, ski: { id: "ski", name: "Skis", keywords: ["ski", "sports", "winter", "cold", "snow"], skins: [{ unified: "1f3bf", native: "\u{1F3BF}" }], version: 1 }, sled: { id: "sled", name: "Sled", keywords: ["sleigh", "luge", "toboggan"], skins: [{ unified: "1f6f7", native: "\u{1F6F7}" }], version: 5 }, curling_stone: { id: "curling_stone", name: "Curling Stone", keywords: ["sports"], skins: [{ unified: "1f94c", native: "\u{1F94C}" }], version: 5 }, dart: { id: "dart", name: "Bullseye", keywords: ["dart", "direct", "hit", "game", "play", "bar", "target"], skins: [{ unified: "1f3af", native: "\u{1F3AF}" }], version: 1 }, "yo-yo": { id: "yo-yo", name: "Yo-Yo", keywords: ["yo", "toy"], skins: [{ unified: "1fa80", native: "\u{1FA80}" }], version: 12 }, kite: { id: "kite", name: "Kite", keywords: ["wind", "fly"], skins: [{ unified: "1fa81", native: "\u{1FA81}" }], version: 12 }, gun: { id: "gun", name: "Pistol", keywords: ["gun", "violence", "weapon", "revolver"], skins: [{ unified: "1f52b", native: "\u{1F52B}" }], version: 1 }, "8ball": { id: "8ball", name: "Billiards", keywords: ["8ball", "pool", "8", "ball", "hobby", "game", "luck", "magic"], skins: [{ unified: "1f3b1", native: "\u{1F3B1}" }], version: 1 }, crystal_ball: { id: "crystal_ball", name: "Crystal Ball", keywords: ["disco", "party", "magic", "circus", "fortune", "teller"], skins: [{ unified: "1f52e", native: "\u{1F52E}" }], version: 1 }, magic_wand: { id: "magic_wand", name: "Magic Wand", keywords: ["supernature", "power"], skins: [{ unified: "1fa84", native: "\u{1FA84}" }], version: 13 }, video_game: { id: "video_game", name: "Video Game", keywords: ["play", "console", "PS4", "controller"], skins: [{ unified: "1f3ae", native: "\u{1F3AE}" }], version: 1 }, joystick: { id: "joystick", name: "Joystick", keywords: ["game", "play"], skins: [{ unified: "1f579-fe0f", native: "\u{1F579}\uFE0F" }], version: 1 }, slot_machine: { id: "slot_machine", name: "Slot Machine", keywords: ["bet", "gamble", "vegas", "fruit", "luck", "casino"], skins: [{ unified: "1f3b0", native: "\u{1F3B0}" }], version: 1 }, game_die: { id: "game_die", name: "Game Die", keywords: ["dice", "random", "tabletop", "play", "luck"], skins: [{ unified: "1f3b2", native: "\u{1F3B2}" }], version: 1 }, jigsaw: { id: "jigsaw", name: "Puzzle Piece", keywords: ["jigsaw", "interlocking"], skins: [{ unified: "1f9e9", native: "\u{1F9E9}" }], version: 11 }, teddy_bear: { id: "teddy_bear", name: "Teddy Bear", keywords: ["plush", "stuffed"], skins: [{ unified: "1f9f8", native: "\u{1F9F8}" }], version: 11 }, pinata: { id: "pinata", name: "Pinata", keywords: ["mexico", "candy", "celebration"], skins: [{ unified: "1fa85", native: "\u{1FA85}" }], version: 13 }, mirror_ball: { id: "mirror_ball", name: "Mirror Ball", keywords: ["disco", "dance", "party"], skins: [{ unified: "1faa9", native: "\u{1FAA9}" }], version: 14 }, nesting_dolls: { id: "nesting_dolls", name: "Nesting Dolls", keywords: ["matryoshka", "toy"], skins: [{ unified: "1fa86", native: "\u{1FA86}" }], version: 13 }, spades: { id: "spades", name: "Spade Suit", keywords: ["spades", "poker", "cards", "suits", "magic"], skins: [{ unified: "2660-fe0f", native: "\u2660\uFE0F" }], version: 1 }, hearts: { id: "hearts", name: "Heart Suit", keywords: ["hearts", "poker", "cards", "magic", "suits"], skins: [{ unified: "2665-fe0f", native: "\u2665\uFE0F" }], version: 1 }, diamonds: { id: "diamonds", name: "Diamond Suit", keywords: ["diamonds", "poker", "cards", "magic", "suits"], skins: [{ unified: "2666-fe0f", native: "\u2666\uFE0F" }], version: 1 }, clubs: { id: "clubs", name: "Club Suit", keywords: ["clubs", "poker", "cards", "magic", "suits"], skins: [{ unified: "2663-fe0f", native: "\u2663\uFE0F" }], version: 1 }, chess_pawn: { id: "chess_pawn", name: "Chess Pawn", keywords: ["expendable"], skins: [{ unified: "265f-fe0f", native: "\u265F\uFE0F" }], version: 11 }, black_joker: { id: "black_joker", name: "Joker", keywords: ["black", "poker", "cards", "game", "play", "magic"], skins: [{ unified: "1f0cf", native: "\u{1F0CF}" }], version: 1 }, mahjong: { id: "mahjong", name: "Mahjong Red Dragon", keywords: ["game", "play", "chinese", "kanji"], skins: [{ unified: "1f004", native: "\u{1F004}" }], version: 1 }, flower_playing_cards: { id: "flower_playing_cards", name: "Flower Playing Cards", keywords: ["game", "sunset", "red"], skins: [{ unified: "1f3b4", native: "\u{1F3B4}" }], version: 1 }, performing_arts: { id: "performing_arts", name: "Performing Arts", keywords: ["acting", "theater", "drama"], skins: [{ unified: "1f3ad", native: "\u{1F3AD}" }], version: 1 }, frame_with_picture: { id: "frame_with_picture", name: "Framed Picture", keywords: ["frame", "with", "photography"], skins: [{ unified: "1f5bc-fe0f", native: "\u{1F5BC}\uFE0F" }], version: 1 }, art: { id: "art", name: "Artist Palette", keywords: ["art", "design", "paint", "draw", "colors"], skins: [{ unified: "1f3a8", native: "\u{1F3A8}" }], version: 1 }, thread: { id: "thread", name: "Thread", keywords: ["needle", "sewing", "spool", "string"], skins: [{ unified: "1f9f5", native: "\u{1F9F5}" }], version: 11 }, sewing_needle: { id: "sewing_needle", name: "Sewing Needle", keywords: ["stitches"], skins: [{ unified: "1faa1", native: "\u{1FAA1}" }], version: 13 }, yarn: { id: "yarn", name: "Yarn", keywords: ["ball", "crochet", "knit"], skins: [{ unified: "1f9f6", native: "\u{1F9F6}" }], version: 11 }, knot: { id: "knot", name: "Knot", keywords: ["rope", "scout"], skins: [{ unified: "1faa2", native: "\u{1FAA2}" }], version: 13 }, eyeglasses: { id: "eyeglasses", name: "Glasses", keywords: ["eyeglasses", "fashion", "accessories", "eyesight", "nerdy", "dork", "geek"], skins: [{ unified: "1f453", native: "\u{1F453}" }], version: 1 }, dark_sunglasses: { id: "dark_sunglasses", name: "Sunglasses", keywords: ["dark", "face", "cool", "accessories"], skins: [{ unified: "1f576-fe0f", native: "\u{1F576}\uFE0F" }], version: 1 }, goggles: { id: "goggles", name: "Goggles", keywords: ["eyes", "protection", "safety"], skins: [{ unified: "1f97d", native: "\u{1F97D}" }], version: 11 }, lab_coat: { id: "lab_coat", name: "Lab Coat", keywords: ["doctor", "experiment", "scientist", "chemist"], skins: [{ unified: "1f97c", native: "\u{1F97C}" }], version: 11 }, safety_vest: { id: "safety_vest", name: "Safety Vest", keywords: ["protection"], skins: [{ unified: "1f9ba", native: "\u{1F9BA}" }], version: 12 }, necktie: { id: "necktie", name: "Necktie", keywords: ["shirt", "suitup", "formal", "fashion", "cloth", "business"], skins: [{ unified: "1f454", native: "\u{1F454}" }], version: 1 }, shirt: { id: "shirt", name: "T-Shirt", keywords: ["shirt", "tshirt", "t", "fashion", "cloth", "casual", "tee"], skins: [{ unified: "1f455", native: "\u{1F455}" }], version: 1 }, jeans: { id: "jeans", name: "Jeans", keywords: ["fashion", "shopping"], skins: [{ unified: "1f456", native: "\u{1F456}" }], version: 1 }, scarf: { id: "scarf", name: "Scarf", keywords: ["neck", "winter", "clothes"], skins: [{ unified: "1f9e3", native: "\u{1F9E3}" }], version: 5 }, gloves: { id: "gloves", name: "Gloves", keywords: ["hands", "winter", "clothes"], skins: [{ unified: "1f9e4", native: "\u{1F9E4}" }], version: 5 }, coat: { id: "coat", name: "Coat", keywords: ["jacket"], skins: [{ unified: "1f9e5", native: "\u{1F9E5}" }], version: 5 }, socks: { id: "socks", name: "Socks", keywords: ["stockings", "clothes"], skins: [{ unified: "1f9e6", native: "\u{1F9E6}" }], version: 5 }, dress: { id: "dress", name: "Dress", keywords: ["clothes", "fashion", "shopping"], skins: [{ unified: "1f457", native: "\u{1F457}" }], version: 1 }, kimono: { id: "kimono", name: "Kimono", keywords: ["dress", "fashion", "women", "female", "japanese"], skins: [{ unified: "1f458", native: "\u{1F458}" }], version: 1 }, sari: { id: "sari", name: "Sari", keywords: ["dress"], skins: [{ unified: "1f97b", native: "\u{1F97B}" }], version: 12 }, "one-piece_swimsuit": { id: "one-piece_swimsuit", name: "One-Piece Swimsuit", keywords: ["one", "piece", "fashion"], skins: [{ unified: "1fa71", native: "\u{1FA71}" }], version: 12 }, briefs: { id: "briefs", name: "Briefs", keywords: ["clothing"], skins: [{ unified: "1fa72", native: "\u{1FA72}" }], version: 12 }, shorts: { id: "shorts", name: "Shorts", keywords: ["clothing"], skins: [{ unified: "1fa73", native: "\u{1FA73}" }], version: 12 }, bikini: { id: "bikini", name: "Bikini", keywords: ["swimming", "female", "woman", "girl", "fashion", "beach", "summer"], skins: [{ unified: "1f459", native: "\u{1F459}" }], version: 1 }, womans_clothes: { id: "womans_clothes", name: "Womans Clothes", keywords: ["woman", "s", "fashion", "shopping", "bags", "female"], skins: [{ unified: "1f45a", native: "\u{1F45A}" }], version: 1 }, folding_hand_fan: { id: "folding_hand_fan", name: "Folding Hand Fan", keywords: ["flamenco", "hot"], skins: [{ unified: "1faad", native: "\u{1FAAD}" }], version: 15 }, purse: { id: "purse", name: "Purse", keywords: ["fashion", "accessories", "money", "sales", "shopping"], skins: [{ unified: "1f45b", native: "\u{1F45B}" }], version: 1 }, handbag: { id: "handbag", name: "Handbag", keywords: ["fashion", "accessory", "accessories", "shopping"], skins: [{ unified: "1f45c", native: "\u{1F45C}" }], version: 1 }, pouch: { id: "pouch", name: "Pouch", keywords: ["clutch", "bag", "accessories", "shopping"], skins: [{ unified: "1f45d", native: "\u{1F45D}" }], version: 1 }, shopping_bags: { id: "shopping_bags", name: "Shopping Bags", keywords: ["mall", "buy", "purchase"], skins: [{ unified: "1f6cd-fe0f", native: "\u{1F6CD}\uFE0F" }], version: 1 }, school_satchel: { id: "school_satchel", name: "Backpack", keywords: ["school", "satchel", "student", "education", "bag"], skins: [{ unified: "1f392", native: "\u{1F392}" }], version: 1 }, thong_sandal: { id: "thong_sandal", name: "Thong Sandal", keywords: ["footwear", "summer"], skins: [{ unified: "1fa74", native: "\u{1FA74}" }], version: 13 }, mans_shoe: { id: "mans_shoe", name: "Mans Shoe", keywords: ["man", "s", "fashion", "male"], skins: [{ unified: "1f45e", native: "\u{1F45E}" }], version: 1 }, athletic_shoe: { id: "athletic_shoe", name: "Running Shoe", keywords: ["athletic", "shoes", "sports", "sneakers"], skins: [{ unified: "1f45f", native: "\u{1F45F}" }], version: 1 }, hiking_boot: { id: "hiking_boot", name: "Hiking Boot", keywords: ["backpacking", "camping"], skins: [{ unified: "1f97e", native: "\u{1F97E}" }], version: 11 }, womans_flat_shoe: { id: "womans_flat_shoe", name: "Flat Shoe", keywords: ["womans", "ballet", "slip", "on", "slipper"], skins: [{ unified: "1f97f", native: "\u{1F97F}" }], version: 11 }, high_heel: { id: "high_heel", name: "High-Heeled Shoe", keywords: ["high", "heel", "heeled", "fashion", "shoes", "female", "pumps", "stiletto"], skins: [{ unified: "1f460", native: "\u{1F460}" }], version: 1 }, sandal: { id: "sandal", name: "Womans Sandal", keywords: ["woman", "s", "shoes", "fashion", "flip", "flops"], skins: [{ unified: "1f461", native: "\u{1F461}" }], version: 1 }, ballet_shoes: { id: "ballet_shoes", name: "Ballet Shoes", keywords: ["dance"], skins: [{ unified: "1fa70", native: "\u{1FA70}" }], version: 12 }, boot: { id: "boot", name: "Womans Boots", keywords: ["boot", "woman", "s", "shoes", "fashion"], skins: [{ unified: "1f462", native: "\u{1F462}" }], version: 1 }, hair_pick: { id: "hair_pick", name: "Hair Pick", keywords: ["afro", "comb"], skins: [{ unified: "1faae", native: "\u{1FAAE}" }], version: 15 }, crown: { id: "crown", name: "Crown", keywords: ["king", "kod", "leader", "royalty", "lord"], skins: [{ unified: "1f451", native: "\u{1F451}" }], version: 1 }, womans_hat: { id: "womans_hat", name: "Womans Hat", keywords: ["woman", "s", "fashion", "accessories", "female", "lady", "spring"], skins: [{ unified: "1f452", native: "\u{1F452}" }], version: 1 }, tophat: { id: "tophat", name: "Top Hat", keywords: ["tophat", "magic", "gentleman", "classy", "circus"], skins: [{ unified: "1f3a9", native: "\u{1F3A9}" }], version: 1 }, mortar_board: { id: "mortar_board", name: "Graduation Cap", keywords: ["mortar", "board", "school", "college", "degree", "university", "hat", "legal", "learn", "education"], skins: [{ unified: "1f393", native: "\u{1F393}" }], version: 1 }, billed_cap: { id: "billed_cap", name: "Billed Cap", keywords: ["baseball"], skins: [{ unified: "1f9e2", native: "\u{1F9E2}" }], version: 5 }, military_helmet: { id: "military_helmet", name: "Military Helmet", keywords: ["army", "protection"], skins: [{ unified: "1fa96", native: "\u{1FA96}" }], version: 13 }, helmet_with_white_cross: { id: "helmet_with_white_cross", name: "Rescue Worker\u2019s Helmet", keywords: ["with", "white", "cross", "worker", "s", "construction", "build"], skins: [{ unified: "26d1-fe0f", native: "\u26D1\uFE0F" }], version: 1 }, prayer_beads: { id: "prayer_beads", name: "Prayer Beads", keywords: ["dhikr", "religious"], skins: [{ unified: "1f4ff", native: "\u{1F4FF}" }], version: 1 }, lipstick: { id: "lipstick", name: "Lipstick", keywords: ["female", "girl", "fashion", "woman"], skins: [{ unified: "1f484", native: "\u{1F484}" }], version: 1 }, ring: { id: "ring", name: "Ring", keywords: ["wedding", "propose", "marriage", "valentines", "diamond", "fashion", "jewelry", "gem", "engagement"], skins: [{ unified: "1f48d", native: "\u{1F48D}" }], version: 1 }, gem: { id: "gem", name: "Gem Stone", keywords: ["blue", "ruby", "diamond", "jewelry"], skins: [{ unified: "1f48e", native: "\u{1F48E}" }], version: 1 }, mute: { id: "mute", name: "Muted Speaker", keywords: ["mute", "sound", "volume", "silence", "quiet"], skins: [{ unified: "1f507", native: "\u{1F507}" }], version: 1 }, speaker: { id: "speaker", name: "Speaker", keywords: ["low", "volume", "sound", "silence", "broadcast"], skins: [{ unified: "1f508", native: "\u{1F508}" }], version: 1 }, sound: { id: "sound", name: "Speaker Medium Volume", keywords: ["sound", "broadcast"], skins: [{ unified: "1f509", native: "\u{1F509}" }], version: 1 }, loud_sound: { id: "loud_sound", name: "Speaker High Volume", keywords: ["loud", "sound", "noise", "noisy", "broadcast"], skins: [{ unified: "1f50a", native: "\u{1F50A}" }], version: 1 }, loudspeaker: { id: "loudspeaker", name: "Loudspeaker", keywords: ["volume", "sound"], skins: [{ unified: "1f4e2", native: "\u{1F4E2}" }], version: 1 }, mega: { id: "mega", name: "Megaphone", keywords: ["mega", "sound", "speaker", "volume"], skins: [{ unified: "1f4e3", native: "\u{1F4E3}" }], version: 1 }, postal_horn: { id: "postal_horn", name: "Postal Horn", keywords: ["instrument", "music"], skins: [{ unified: "1f4ef", native: "\u{1F4EF}" }], version: 1 }, bell: { id: "bell", name: "Bell", keywords: ["sound", "notification", "christmas", "xmas", "chime"], skins: [{ unified: "1f514", native: "\u{1F514}" }], version: 1 }, no_bell: { id: "no_bell", name: "Bell with Slash", keywords: ["no", "sound", "volume", "mute", "quiet", "silent"], skins: [{ unified: "1f515", native: "\u{1F515}" }], version: 1 }, musical_score: { id: "musical_score", name: "Musical Score", keywords: ["treble", "clef", "compose"], skins: [{ unified: "1f3bc", native: "\u{1F3BC}" }], version: 1 }, musical_note: { id: "musical_note", name: "Musical Note", keywords: ["score", "tone", "sound"], skins: [{ unified: "1f3b5", native: "\u{1F3B5}" }], version: 1 }, notes: { id: "notes", name: "Musical Notes", keywords: ["music", "score"], skins: [{ unified: "1f3b6", native: "\u{1F3B6}" }], version: 1 }, studio_microphone: { id: "studio_microphone", name: "Studio Microphone", keywords: ["sing", "recording", "artist", "talkshow"], skins: [{ unified: "1f399-fe0f", native: "\u{1F399}\uFE0F" }], version: 1 }, level_slider: { id: "level_slider", name: "Level Slider", keywords: ["scale"], skins: [{ unified: "1f39a-fe0f", native: "\u{1F39A}\uFE0F" }], version: 1 }, control_knobs: { id: "control_knobs", name: "Control Knobs", keywords: ["dial"], skins: [{ unified: "1f39b-fe0f", native: "\u{1F39B}\uFE0F" }], version: 1 }, microphone: { id: "microphone", name: "Microphone", keywords: ["sound", "music", "PA", "sing", "talkshow"], skins: [{ unified: "1f3a4", native: "\u{1F3A4}" }], version: 1 }, headphones: { id: "headphones", name: "Headphone", keywords: ["headphones", "music", "score", "gadgets"], skins: [{ unified: "1f3a7", native: "\u{1F3A7}" }], version: 1 }, radio: { id: "radio", name: "Radio", keywords: ["communication", "music", "podcast", "program"], skins: [{ unified: "1f4fb", native: "\u{1F4FB}" }], version: 1 }, saxophone: { id: "saxophone", name: "Saxophone", keywords: ["music", "instrument", "jazz", "blues"], skins: [{ unified: "1f3b7", native: "\u{1F3B7}" }], version: 1 }, accordion: { id: "accordion", name: "Accordion", keywords: ["music"], skins: [{ unified: "1fa97", native: "\u{1FA97}" }], version: 13 }, guitar: { id: "guitar", name: "Guitar", keywords: ["music", "instrument"], skins: [{ unified: "1f3b8", native: "\u{1F3B8}" }], version: 1 }, musical_keyboard: { id: "musical_keyboard", name: "Musical Keyboard", keywords: ["piano", "instrument", "compose"], skins: [{ unified: "1f3b9", native: "\u{1F3B9}" }], version: 1 }, trumpet: { id: "trumpet", name: "Trumpet", keywords: ["music", "brass"], skins: [{ unified: "1f3ba", native: "\u{1F3BA}" }], version: 1 }, violin: { id: "violin", name: "Violin", keywords: ["music", "instrument", "orchestra", "symphony"], skins: [{ unified: "1f3bb", native: "\u{1F3BB}" }], version: 1 }, banjo: { id: "banjo", name: "Banjo", keywords: ["music", "instructment"], skins: [{ unified: "1fa95", native: "\u{1FA95}" }], version: 12 }, drum_with_drumsticks: { id: "drum_with_drumsticks", name: "Drum", keywords: ["with", "drumsticks", "music", "instrument", "snare"], skins: [{ unified: "1f941", native: "\u{1F941}" }], version: 3 }, long_drum: { id: "long_drum", name: "Long Drum", keywords: ["music"], skins: [{ unified: "1fa98", native: "\u{1FA98}" }], version: 13 }, maracas: { id: "maracas", name: "Maracas", keywords: ["music", "instrument", "percussion"], skins: [{ unified: "1fa87", native: "\u{1FA87}" }], version: 15 }, flute: { id: "flute", name: "Flute", keywords: ["bamboo", "music", "instrument", "pied", "piper"], skins: [{ unified: "1fa88", native: "\u{1FA88}" }], version: 15 }, iphone: { id: "iphone", name: "Mobile Phone", keywords: ["iphone", "technology", "apple", "gadgets", "dial"], skins: [{ unified: "1f4f1", native: "\u{1F4F1}" }], version: 1 }, calling: { id: "calling", name: "Mobile Phone with Arrow", keywords: ["calling", "iphone", "incoming"], skins: [{ unified: "1f4f2", native: "\u{1F4F2}" }], version: 1 }, phone: { id: "phone", name: "Telephone", keywords: ["phone", "technology", "communication", "dial"], skins: [{ unified: "260e-fe0f", native: "\u260E\uFE0F" }], version: 1 }, telephone_receiver: { id: "telephone_receiver", name: "Telephone Receiver", keywords: ["technology", "communication", "dial"], skins: [{ unified: "1f4de", native: "\u{1F4DE}" }], version: 1 }, pager: { id: "pager", name: "Pager", keywords: ["bbcall", "oldschool", "90s"], skins: [{ unified: "1f4df", native: "\u{1F4DF}" }], version: 1 }, fax: { id: "fax", name: "Fax Machine", keywords: ["communication", "technology"], skins: [{ unified: "1f4e0", native: "\u{1F4E0}" }], version: 1 }, battery: { id: "battery", name: "Battery", keywords: ["power", "energy", "sustain"], skins: [{ unified: "1f50b", native: "\u{1F50B}" }], version: 1 }, low_battery: { id: "low_battery", name: "Low Battery", keywords: ["drained", "dead"], skins: [{ unified: "1faab", native: "\u{1FAAB}" }], version: 14 }, electric_plug: { id: "electric_plug", name: "Electric Plug", keywords: ["charger", "power"], skins: [{ unified: "1f50c", native: "\u{1F50C}" }], version: 1 }, computer: { id: "computer", name: "Laptop", keywords: ["computer", "technology", "screen", "display", "monitor"], skins: [{ unified: "1f4bb", native: "\u{1F4BB}" }], version: 1 }, desktop_computer: { id: "desktop_computer", name: "Desktop Computer", keywords: ["technology", "computing", "screen"], skins: [{ unified: "1f5a5-fe0f", native: "\u{1F5A5}\uFE0F" }], version: 1 }, printer: { id: "printer", name: "Printer", keywords: ["paper", "ink"], skins: [{ unified: "1f5a8-fe0f", native: "\u{1F5A8}\uFE0F" }], version: 1 }, keyboard: { id: "keyboard", name: "Keyboard", keywords: ["technology", "computer", "type", "input", "text"], skins: [{ unified: "2328-fe0f", native: "\u2328\uFE0F" }], version: 1 }, three_button_mouse: { id: "three_button_mouse", name: "Computer Mouse", keywords: ["three", "button", "click"], skins: [{ unified: "1f5b1-fe0f", native: "\u{1F5B1}\uFE0F" }], version: 1 }, trackball: { id: "trackball", name: "Trackball", keywords: ["technology", "trackpad"], skins: [{ unified: "1f5b2-fe0f", native: "\u{1F5B2}\uFE0F" }], version: 1 }, minidisc: { id: "minidisc", name: "Minidisc", keywords: ["computer", "disk", "technology", "record", "data", "90s"], skins: [{ unified: "1f4bd", native: "\u{1F4BD}" }], version: 1 }, floppy_disk: { id: "floppy_disk", name: "Floppy Disk", keywords: ["oldschool", "technology", "save", "90s", "80s"], skins: [{ unified: "1f4be", native: "\u{1F4BE}" }], version: 1 }, cd: { id: "cd", name: "Optical Disc", keywords: ["cd", "disk", "technology", "dvd", "90s"], skins: [{ unified: "1f4bf", native: "\u{1F4BF}" }], version: 1 }, dvd: { id: "dvd", name: "Dvd", keywords: ["cd", "disk", "disc"], skins: [{ unified: "1f4c0", native: "\u{1F4C0}" }], version: 1 }, abacus: { id: "abacus", name: "Abacus", keywords: ["calculation"], skins: [{ unified: "1f9ee", native: "\u{1F9EE}" }], version: 11 }, movie_camera: { id: "movie_camera", name: "Movie Camera", keywords: ["film", "record"], skins: [{ unified: "1f3a5", native: "\u{1F3A5}" }], version: 1 }, film_frames: { id: "film_frames", name: "Film Frames", keywords: ["movie"], skins: [{ unified: "1f39e-fe0f", native: "\u{1F39E}\uFE0F" }], version: 1 }, film_projector: { id: "film_projector", name: "Film Projector", keywords: ["video", "tape", "record", "movie"], skins: [{ unified: "1f4fd-fe0f", native: "\u{1F4FD}\uFE0F" }], version: 1 }, clapper: { id: "clapper", name: "Clapper Board", keywords: ["movie", "film", "record"], skins: [{ unified: "1f3ac", native: "\u{1F3AC}" }], version: 1 }, tv: { id: "tv", name: "Television", keywords: ["tv", "technology", "program", "oldschool", "show"], skins: [{ unified: "1f4fa", native: "\u{1F4FA}" }], version: 1 }, camera: { id: "camera", name: "Camera", keywords: ["gadgets", "photography"], skins: [{ unified: "1f4f7", native: "\u{1F4F7}" }], version: 1 }, camera_with_flash: { id: "camera_with_flash", name: "Camera with Flash", keywords: ["photography", "gadgets"], skins: [{ unified: "1f4f8", native: "\u{1F4F8}" }], version: 1 }, video_camera: { id: "video_camera", name: "Video Camera", keywords: ["film", "record"], skins: [{ unified: "1f4f9", native: "\u{1F4F9}" }], version: 1 }, vhs: { id: "vhs", name: "Videocassette", keywords: ["vhs", "record", "video", "oldschool", "90s", "80s"], skins: [{ unified: "1f4fc", native: "\u{1F4FC}" }], version: 1 }, mag: { id: "mag", name: "Magnifying Glass Tilted Left", keywords: ["mag", "search", "zoom", "find", "detective"], skins: [{ unified: "1f50d", native: "\u{1F50D}" }], version: 1 }, mag_right: { id: "mag_right", name: "Magnifying Glass Tilted Right", keywords: ["mag", "search", "zoom", "find", "detective"], skins: [{ unified: "1f50e", native: "\u{1F50E}" }], version: 1 }, candle: { id: "candle", name: "Candle", keywords: ["fire", "wax"], skins: [{ unified: "1f56f-fe0f", native: "\u{1F56F}\uFE0F" }], version: 1 }, bulb: { id: "bulb", name: "Light Bulb", keywords: ["electricity", "idea"], skins: [{ unified: "1f4a1", native: "\u{1F4A1}" }], version: 1 }, flashlight: { id: "flashlight", name: "Flashlight", keywords: ["dark", "camping", "sight", "night"], skins: [{ unified: "1f526", native: "\u{1F526}" }], version: 1 }, izakaya_lantern: { id: "izakaya_lantern", name: "Izakaya Lantern", keywords: ["red", "paper", "light", "halloween", "spooky"], skins: [{ unified: "1f3ee", native: "\u{1F3EE}" }], version: 1 }, diya_lamp: { id: "diya_lamp", name: "Diya Lamp", keywords: ["lighting"], skins: [{ unified: "1fa94", native: "\u{1FA94}" }], version: 12 }, notebook_with_decorative_cover: { id: "notebook_with_decorative_cover", name: "Notebook with Decorative Cover", keywords: ["classroom", "notes", "record", "paper", "study"], skins: [{ unified: "1f4d4", native: "\u{1F4D4}" }], version: 1 }, closed_book: { id: "closed_book", name: "Closed Book", keywords: ["read", "library", "knowledge", "textbook", "learn"], skins: [{ unified: "1f4d5", native: "\u{1F4D5}" }], version: 1 }, book: { id: "book", name: "Open Book", keywords: ["read", "library", "knowledge", "literature", "learn", "study"], skins: [{ unified: "1f4d6", native: "\u{1F4D6}" }], version: 1 }, green_book: { id: "green_book", name: "Green Book", keywords: ["read", "library", "knowledge", "study"], skins: [{ unified: "1f4d7", native: "\u{1F4D7}" }], version: 1 }, blue_book: { id: "blue_book", name: "Blue Book", keywords: ["read", "library", "knowledge", "learn", "study"], skins: [{ unified: "1f4d8", native: "\u{1F4D8}" }], version: 1 }, orange_book: { id: "orange_book", name: "Orange Book", keywords: ["read", "library", "knowledge", "textbook", "study"], skins: [{ unified: "1f4d9", native: "\u{1F4D9}" }], version: 1 }, books: { id: "books", name: "Books", keywords: ["literature", "library", "study"], skins: [{ unified: "1f4da", native: "\u{1F4DA}" }], version: 1 }, notebook: { id: "notebook", name: "Notebook", keywords: ["stationery", "record", "notes", "paper", "study"], skins: [{ unified: "1f4d3", native: "\u{1F4D3}" }], version: 1 }, ledger: { id: "ledger", name: "Ledger", keywords: ["notes", "paper"], skins: [{ unified: "1f4d2", native: "\u{1F4D2}" }], version: 1 }, page_with_curl: { id: "page_with_curl", name: "Page with Curl", keywords: ["documents", "office", "paper"], skins: [{ unified: "1f4c3", native: "\u{1F4C3}" }], version: 1 }, scroll: { id: "scroll", name: "Scroll", keywords: ["documents", "ancient", "history", "paper"], skins: [{ unified: "1f4dc", native: "\u{1F4DC}" }], version: 1 }, page_facing_up: { id: "page_facing_up", name: "Page Facing Up", keywords: ["documents", "office", "paper", "information"], skins: [{ unified: "1f4c4", native: "\u{1F4C4}" }], version: 1 }, newspaper: { id: "newspaper", name: "Newspaper", keywords: ["press", "headline"], skins: [{ unified: "1f4f0", native: "\u{1F4F0}" }], version: 1 }, rolled_up_newspaper: { id: "rolled_up_newspaper", name: "Rolled-Up Newspaper", keywords: ["rolled", "up", "press", "headline"], skins: [{ unified: "1f5de-fe0f", native: "\u{1F5DE}\uFE0F" }], version: 1 }, bookmark_tabs: { id: "bookmark_tabs", name: "Bookmark Tabs", keywords: ["favorite", "save", "order", "tidy"], skins: [{ unified: "1f4d1", native: "\u{1F4D1}" }], version: 1 }, bookmark: { id: "bookmark", name: "Bookmark", keywords: ["favorite", "label", "save"], skins: [{ unified: "1f516", native: "\u{1F516}" }], version: 1 }, label: { id: "label", name: "Label", keywords: ["sale", "tag"], skins: [{ unified: "1f3f7-fe0f", native: "\u{1F3F7}\uFE0F" }], version: 1 }, moneybag: { id: "moneybag", name: "Money Bag", keywords: ["moneybag", "dollar", "payment", "coins", "sale"], skins: [{ unified: "1f4b0", native: "\u{1F4B0}" }], version: 1 }, coin: { id: "coin", name: "Coin", keywords: ["money", "currency"], skins: [{ unified: "1fa99", native: "\u{1FA99}" }], version: 13 }, yen: { id: "yen", name: "Yen Banknote", keywords: ["money", "sales", "japanese", "dollar", "currency"], skins: [{ unified: "1f4b4", native: "\u{1F4B4}" }], version: 1 }, dollar: { id: "dollar", name: "Dollar Banknote", keywords: ["money", "sales", "bill", "currency"], skins: [{ unified: "1f4b5", native: "\u{1F4B5}" }], version: 1 }, euro: { id: "euro", name: "Euro Banknote", keywords: ["money", "sales", "dollar", "currency"], skins: [{ unified: "1f4b6", native: "\u{1F4B6}" }], version: 1 }, pound: { id: "pound", name: "Pound Banknote", keywords: ["british", "sterling", "money", "sales", "bills", "uk", "england", "currency"], skins: [{ unified: "1f4b7", native: "\u{1F4B7}" }], version: 1 }, money_with_wings: { id: "money_with_wings", name: "Money with Wings", keywords: ["dollar", "bills", "payment", "sale"], skins: [{ unified: "1f4b8", native: "\u{1F4B8}" }], version: 1 }, credit_card: { id: "credit_card", name: "Credit Card", keywords: ["money", "sales", "dollar", "bill", "payment", "shopping"], skins: [{ unified: "1f4b3", native: "\u{1F4B3}" }], version: 1 }, receipt: { id: "receipt", name: "Receipt", keywords: ["accounting", "expenses"], skins: [{ unified: "1f9fe", native: "\u{1F9FE}" }], version: 11 }, chart: { id: "chart", name: "Chart Increasing with Yen", keywords: ["green", "square", "graph", "presentation", "stats"], skins: [{ unified: "1f4b9", native: "\u{1F4B9}" }], version: 1 }, email: { id: "email", name: "Envelope", keywords: ["email", "letter", "postal", "inbox", "communication"], skins: [{ unified: "2709-fe0f", native: "\u2709\uFE0F" }], version: 1 }, "e-mail": { id: "e-mail", name: "E-Mail", keywords: ["e", "mail", "communication", "inbox"], skins: [{ unified: "1f4e7", native: "\u{1F4E7}" }], version: 1 }, incoming_envelope: { id: "incoming_envelope", name: "Incoming Envelope", keywords: ["email", "inbox"], skins: [{ unified: "1f4e8", native: "\u{1F4E8}" }], version: 1 }, envelope_with_arrow: { id: "envelope_with_arrow", name: "Envelope with Arrow", keywords: ["email", "communication"], skins: [{ unified: "1f4e9", native: "\u{1F4E9}" }], version: 1 }, outbox_tray: { id: "outbox_tray", name: "Outbox Tray", keywords: ["inbox", "email"], skins: [{ unified: "1f4e4", native: "\u{1F4E4}" }], version: 1 }, inbox_tray: { id: "inbox_tray", name: "Inbox Tray", keywords: ["email", "documents"], skins: [{ unified: "1f4e5", native: "\u{1F4E5}" }], version: 1 }, package: { id: "package", name: "Package", keywords: ["mail", "gift", "cardboard", "box", "moving"], skins: [{ unified: "1f4e6", native: "\u{1F4E6}" }], version: 1 }, mailbox: { id: "mailbox", name: "Closed Mailbox with Raised Flag", keywords: ["email", "inbox", "communication"], skins: [{ unified: "1f4eb", native: "\u{1F4EB}" }], version: 1 }, mailbox_closed: { id: "mailbox_closed", name: "Closed Mailbox with Lowered Flag", keywords: ["email", "communication", "inbox"], skins: [{ unified: "1f4ea", native: "\u{1F4EA}" }], version: 1 }, mailbox_with_mail: { id: "mailbox_with_mail", name: "Open Mailbox with Raised Flag", keywords: ["mail", "email", "inbox", "communication"], skins: [{ unified: "1f4ec", native: "\u{1F4EC}" }], version: 1 }, mailbox_with_no_mail: { id: "mailbox_with_no_mail", name: "Open Mailbox with Lowered Flag", keywords: ["no", "mail", "email", "inbox"], skins: [{ unified: "1f4ed", native: "\u{1F4ED}" }], version: 1 }, postbox: { id: "postbox", name: "Postbox", keywords: ["email", "letter", "envelope"], skins: [{ unified: "1f4ee", native: "\u{1F4EE}" }], version: 1 }, ballot_box_with_ballot: { id: "ballot_box_with_ballot", name: "Ballot Box with Ballot", keywords: ["election", "vote"], skins: [{ unified: "1f5f3-fe0f", native: "\u{1F5F3}\uFE0F" }], version: 1 }, pencil2: { id: "pencil2", name: "Pencil", keywords: ["pencil2", "stationery", "write", "paper", "writing", "school", "study"], skins: [{ unified: "270f-fe0f", native: "\u270F\uFE0F" }], version: 1 }, black_nib: { id: "black_nib", name: "Black Nib", keywords: ["pen", "stationery", "writing", "write"], skins: [{ unified: "2712-fe0f", native: "\u2712\uFE0F" }], version: 1 }, lower_left_fountain_pen: { id: "lower_left_fountain_pen", name: "Fountain Pen", keywords: ["lower", "left", "stationery", "writing", "write"], skins: [{ unified: "1f58b-fe0f", native: "\u{1F58B}\uFE0F" }], version: 1 }, lower_left_ballpoint_pen: { id: "lower_left_ballpoint_pen", name: "Pen", keywords: ["lower", "left", "ballpoint", "stationery", "writing", "write"], skins: [{ unified: "1f58a-fe0f", native: "\u{1F58A}\uFE0F" }], version: 1 }, lower_left_paintbrush: { id: "lower_left_paintbrush", name: "Paintbrush", keywords: ["lower", "left", "drawing", "creativity", "art"], skins: [{ unified: "1f58c-fe0f", native: "\u{1F58C}\uFE0F" }], version: 1 }, lower_left_crayon: { id: "lower_left_crayon", name: "Crayon", keywords: ["lower", "left", "drawing", "creativity"], skins: [{ unified: "1f58d-fe0f", native: "\u{1F58D}\uFE0F" }], version: 1 }, memo: { id: "memo", name: "Memo", keywords: ["pencil", "write", "documents", "stationery", "paper", "writing", "legal", "exam", "quiz", "test", "study", "compose"], skins: [{ unified: "1f4dd", native: "\u{1F4DD}" }], version: 1 }, briefcase: { id: "briefcase", name: "Briefcase", keywords: ["business", "documents", "work", "law", "legal", "job", "career"], skins: [{ unified: "1f4bc", native: "\u{1F4BC}" }], version: 1 }, file_folder: { id: "file_folder", name: "File Folder", keywords: ["documents", "business", "office"], skins: [{ unified: "1f4c1", native: "\u{1F4C1}" }], version: 1 }, open_file_folder: { id: "open_file_folder", name: "Open File Folder", keywords: ["documents", "load"], skins: [{ unified: "1f4c2", native: "\u{1F4C2}" }], version: 1 }, card_index_dividers: { id: "card_index_dividers", name: "Card Index Dividers", keywords: ["organizing", "business", "stationery"], skins: [{ unified: "1f5c2-fe0f", native: "\u{1F5C2}\uFE0F" }], version: 1 }, date: { id: "date", name: "Calendar", keywords: ["date", "schedule"], skins: [{ unified: "1f4c5", native: "\u{1F4C5}" }], version: 1 }, calendar: { id: "calendar", name: "Tear-off Calendar", keywords: ["tear", "off", "schedule", "date", "planning"], skins: [{ unified: "1f4c6", native: "\u{1F4C6}" }], version: 1 }, spiral_note_pad: { id: "spiral_note_pad", name: "Spiral Notepad", keywords: ["note", "pad", "memo", "stationery"], skins: [{ unified: "1f5d2-fe0f", native: "\u{1F5D2}\uFE0F" }], version: 1 }, spiral_calendar_pad: { id: "spiral_calendar_pad", name: "Spiral Calendar", keywords: ["pad", "date", "schedule", "planning"], skins: [{ unified: "1f5d3-fe0f", native: "\u{1F5D3}\uFE0F" }], version: 1 }, card_index: { id: "card_index", name: "Card Index", keywords: ["business", "stationery"], skins: [{ unified: "1f4c7", native: "\u{1F4C7}" }], version: 1 }, chart_with_upwards_trend: { id: "chart_with_upwards_trend", name: "Chart Increasing", keywords: ["with", "upwards", "trend", "graph", "presentation", "stats", "recovery", "business", "economics", "money", "sales", "good", "success"], skins: [{ unified: "1f4c8", native: "\u{1F4C8}" }], version: 1 }, chart_with_downwards_trend: { id: "chart_with_downwards_trend", name: "Chart Decreasing", keywords: ["with", "downwards", "trend", "graph", "presentation", "stats", "recession", "business", "economics", "money", "sales", "bad", "failure"], skins: [{ unified: "1f4c9", native: "\u{1F4C9}" }], version: 1 }, bar_chart: { id: "bar_chart", name: "Bar Chart", keywords: ["graph", "presentation", "stats"], skins: [{ unified: "1f4ca", native: "\u{1F4CA}" }], version: 1 }, clipboard: { id: "clipboard", name: "Clipboard", keywords: ["stationery", "documents"], skins: [{ unified: "1f4cb", native: "\u{1F4CB}" }], version: 1 }, pushpin: { id: "pushpin", name: "Pushpin", keywords: ["stationery", "mark", "here"], skins: [{ unified: "1f4cc", native: "\u{1F4CC}" }], version: 1 }, round_pushpin: { id: "round_pushpin", name: "Round Pushpin", keywords: ["stationery", "location", "map", "here"], skins: [{ unified: "1f4cd", native: "\u{1F4CD}" }], version: 1 }, paperclip: { id: "paperclip", name: "Paperclip", keywords: ["documents", "stationery"], skins: [{ unified: "1f4ce", native: "\u{1F4CE}" }], version: 1 }, linked_paperclips: { id: "linked_paperclips", name: "Linked Paperclips", keywords: ["documents", "stationery"], skins: [{ unified: "1f587-fe0f", native: "\u{1F587}\uFE0F" }], version: 1 }, straight_ruler: { id: "straight_ruler", name: "Straight Ruler", keywords: ["stationery", "calculate", "length", "math", "school", "drawing", "architect", "sketch"], skins: [{ unified: "1f4cf", native: "\u{1F4CF}" }], version: 1 }, triangular_ruler: { id: "triangular_ruler", name: "Triangular Ruler", keywords: ["stationery", "math", "architect", "sketch"], skins: [{ unified: "1f4d0", native: "\u{1F4D0}" }], version: 1 }, scissors: { id: "scissors", name: "Scissors", keywords: ["stationery", "cut"], skins: [{ unified: "2702-fe0f", native: "\u2702\uFE0F" }], version: 1 }, card_file_box: { id: "card_file_box", name: "Card File Box", keywords: ["business", "stationery"], skins: [{ unified: "1f5c3-fe0f", native: "\u{1F5C3}\uFE0F" }], version: 1 }, file_cabinet: { id: "file_cabinet", name: "File Cabinet", keywords: ["filing", "organizing"], skins: [{ unified: "1f5c4-fe0f", native: "\u{1F5C4}\uFE0F" }], version: 1 }, wastebasket: { id: "wastebasket", name: "Wastebasket", keywords: ["bin", "trash", "rubbish", "garbage", "toss"], skins: [{ unified: "1f5d1-fe0f", native: "\u{1F5D1}\uFE0F" }], version: 1 }, lock: { id: "lock", name: "Lock", keywords: ["locked", "security", "password", "padlock"], skins: [{ unified: "1f512", native: "\u{1F512}" }], version: 1 }, unlock: { id: "unlock", name: "Unlocked", keywords: ["unlock", "privacy", "security"], skins: [{ unified: "1f513", native: "\u{1F513}" }], version: 1 }, lock_with_ink_pen: { id: "lock_with_ink_pen", name: "Locked with Pen", keywords: ["lock", "ink", "security", "secret"], skins: [{ unified: "1f50f", native: "\u{1F50F}" }], version: 1 }, closed_lock_with_key: { id: "closed_lock_with_key", name: "Locked with Key", keywords: ["closed", "lock", "security", "privacy"], skins: [{ unified: "1f510", native: "\u{1F510}" }], version: 1 }, key: { id: "key", name: "Key", keywords: ["lock", "door", "password"], skins: [{ unified: "1f511", native: "\u{1F511}" }], version: 1 }, old_key: { id: "old_key", name: "Old Key", keywords: ["lock", "door", "password"], skins: [{ unified: "1f5dd-fe0f", native: "\u{1F5DD}\uFE0F" }], version: 1 }, hammer: { id: "hammer", name: "Hammer", keywords: ["tools", "build", "create"], skins: [{ unified: "1f528", native: "\u{1F528}" }], version: 1 }, axe: { id: "axe", name: "Axe", keywords: ["tool", "chop", "cut"], skins: [{ unified: "1fa93", native: "\u{1FA93}" }], version: 12 }, pick: { id: "pick", name: "Pick", keywords: ["tools", "dig"], skins: [{ unified: "26cf-fe0f", native: "\u26CF\uFE0F" }], version: 1 }, hammer_and_pick: { id: "hammer_and_pick", name: "Hammer and Pick", keywords: ["tools", "build", "create"], skins: [{ unified: "2692-fe0f", native: "\u2692\uFE0F" }], version: 1 }, hammer_and_wrench: { id: "hammer_and_wrench", name: "Hammer and Wrench", keywords: ["tools", "build", "create"], skins: [{ unified: "1f6e0-fe0f", native: "\u{1F6E0}\uFE0F" }], version: 1 }, dagger_knife: { id: "dagger_knife", name: "Dagger", keywords: ["knife", "weapon"], skins: [{ unified: "1f5e1-fe0f", native: "\u{1F5E1}\uFE0F" }], version: 1 }, crossed_swords: { id: "crossed_swords", name: "Crossed Swords", keywords: ["weapon"], skins: [{ unified: "2694-fe0f", native: "\u2694\uFE0F" }], version: 1 }, bomb: { id: "bomb", name: "Bomb", keywords: ["boom", "explode", "explosion", "terrorism"], skins: [{ unified: "1f4a3", native: "\u{1F4A3}" }], version: 1 }, boomerang: { id: "boomerang", name: "Boomerang", keywords: ["weapon"], skins: [{ unified: "1fa83", native: "\u{1FA83}" }], version: 13 }, bow_and_arrow: { id: "bow_and_arrow", name: "Bow and Arrow", keywords: ["sports"], skins: [{ unified: "1f3f9", native: "\u{1F3F9}" }], version: 1 }, shield: { id: "shield", name: "Shield", keywords: ["protection", "security"], skins: [{ unified: "1f6e1-fe0f", native: "\u{1F6E1}\uFE0F" }], version: 1 }, carpentry_saw: { id: "carpentry_saw", name: "Carpentry Saw", keywords: ["cut", "chop"], skins: [{ unified: "1fa9a", native: "\u{1FA9A}" }], version: 13 }, wrench: { id: "wrench", name: "Wrench", keywords: ["tools", "diy", "ikea", "fix", "maintainer"], skins: [{ unified: "1f527", native: "\u{1F527}" }], version: 1 }, screwdriver: { id: "screwdriver", name: "Screwdriver", keywords: ["tools"], skins: [{ unified: "1fa9b", native: "\u{1FA9B}" }], version: 13 }, nut_and_bolt: { id: "nut_and_bolt", name: "Nut and Bolt", keywords: ["handy", "tools", "fix"], skins: [{ unified: "1f529", native: "\u{1F529}" }], version: 1 }, gear: { id: "gear", name: "Gear", keywords: ["cog"], skins: [{ unified: "2699-fe0f", native: "\u2699\uFE0F" }], version: 1 }, compression: { id: "compression", name: "Clamp", keywords: ["compression", "tool"], skins: [{ unified: "1f5dc-fe0f", native: "\u{1F5DC}\uFE0F" }], version: 1 }, scales: { id: "scales", name: "Balance Scale", keywords: ["scales", "law", "fairness", "weight"], skins: [{ unified: "2696-fe0f", native: "\u2696\uFE0F" }], version: 1 }, probing_cane: { id: "probing_cane", name: "White Cane", keywords: ["probing", "accessibility"], skins: [{ unified: "1f9af", native: "\u{1F9AF}" }], version: 12 }, link: { id: "link", name: "Link", keywords: ["rings", "url"], skins: [{ unified: "1f517", native: "\u{1F517}" }], version: 1 }, chains: { id: "chains", name: "Chains", keywords: ["lock", "arrest"], skins: [{ unified: "26d3-fe0f", native: "\u26D3\uFE0F" }], version: 1 }, hook: { id: "hook", name: "Hook", keywords: ["tools"], skins: [{ unified: "1fa9d", native: "\u{1FA9D}" }], version: 13 }, toolbox: { id: "toolbox", name: "Toolbox", keywords: ["tools", "diy", "fix", "maintainer", "mechanic"], skins: [{ unified: "1f9f0", native: "\u{1F9F0}" }], version: 11 }, magnet: { id: "magnet", name: "Magnet", keywords: ["attraction", "magnetic"], skins: [{ unified: "1f9f2", native: "\u{1F9F2}" }], version: 11 }, ladder: { id: "ladder", name: "Ladder", keywords: ["tools"], skins: [{ unified: "1fa9c", native: "\u{1FA9C}" }], version: 13 }, alembic: { id: "alembic", name: "Alembic", keywords: ["distilling", "science", "experiment", "chemistry"], skins: [{ unified: "2697-fe0f", native: "\u2697\uFE0F" }], version: 1 }, test_tube: { id: "test_tube", name: "Test Tube", keywords: ["chemistry", "experiment", "lab", "science"], skins: [{ unified: "1f9ea", native: "\u{1F9EA}" }], version: 11 }, petri_dish: { id: "petri_dish", name: "Petri Dish", keywords: ["bacteria", "biology", "culture", "lab"], skins: [{ unified: "1f9eb", native: "\u{1F9EB}" }], version: 11 }, dna: { id: "dna", name: "Dna", keywords: ["biologist", "genetics", "life"], skins: [{ unified: "1f9ec", native: "\u{1F9EC}" }], version: 11 }, microscope: { id: "microscope", name: "Microscope", keywords: ["laboratory", "experiment", "zoomin", "science", "study"], skins: [{ unified: "1f52c", native: "\u{1F52C}" }], version: 1 }, telescope: { id: "telescope", name: "Telescope", keywords: ["stars", "space", "zoom", "science", "astronomy"], skins: [{ unified: "1f52d", native: "\u{1F52D}" }], version: 1 }, satellite_antenna: { id: "satellite_antenna", name: "Satellite Antenna", keywords: ["communication", "future", "radio", "space"], skins: [{ unified: "1f4e1", native: "\u{1F4E1}" }], version: 1 }, syringe: { id: "syringe", name: "Syringe", keywords: ["health", "hospital", "drugs", "blood", "medicine", "needle", "doctor", "nurse"], skins: [{ unified: "1f489", native: "\u{1F489}" }], version: 1 }, drop_of_blood: { id: "drop_of_blood", name: "Drop of Blood", keywords: ["period", "hurt", "harm", "wound"], skins: [{ unified: "1fa78", native: "\u{1FA78}" }], version: 12 }, pill: { id: "pill", name: "Pill", keywords: ["health", "medicine", "doctor", "pharmacy", "drug"], skins: [{ unified: "1f48a", native: "\u{1F48A}" }], version: 1 }, adhesive_bandage: { id: "adhesive_bandage", name: "Adhesive Bandage", keywords: ["heal"], skins: [{ unified: "1fa79", native: "\u{1FA79}" }], version: 12 }, crutch: { id: "crutch", name: "Crutch", keywords: ["accessibility", "assist"], skins: [{ unified: "1fa7c", native: "\u{1FA7C}" }], version: 14 }, stethoscope: { id: "stethoscope", name: "Stethoscope", keywords: ["health"], skins: [{ unified: "1fa7a", native: "\u{1FA7A}" }], version: 12 }, "x-ray": { id: "x-ray", name: "X-Ray", keywords: ["x", "ray", "skeleton", "medicine"], skins: [{ unified: "1fa7b", native: "\u{1FA7B}" }], version: 14 }, door: { id: "door", name: "Door", keywords: ["house", "entry", "exit"], skins: [{ unified: "1f6aa", native: "\u{1F6AA}" }], version: 1 }, elevator: { id: "elevator", name: "Elevator", keywords: ["lift"], skins: [{ unified: "1f6d7", native: "\u{1F6D7}" }], version: 13 }, mirror: { id: "mirror", name: "Mirror", keywords: ["reflection"], skins: [{ unified: "1fa9e", native: "\u{1FA9E}" }], version: 13 }, window: { id: "window", name: "Window", keywords: ["scenery"], skins: [{ unified: "1fa9f", native: "\u{1FA9F}" }], version: 13 }, bed: { id: "bed", name: "Bed", keywords: ["sleep", "rest"], skins: [{ unified: "1f6cf-fe0f", native: "\u{1F6CF}\uFE0F" }], version: 1 }, couch_and_lamp: { id: "couch_and_lamp", name: "Couch and Lamp", keywords: ["read", "chill"], skins: [{ unified: "1f6cb-fe0f", native: "\u{1F6CB}\uFE0F" }], version: 1 }, chair: { id: "chair", name: "Chair", keywords: ["sit", "furniture"], skins: [{ unified: "1fa91", native: "\u{1FA91}" }], version: 12 }, toilet: { id: "toilet", name: "Toilet", keywords: ["restroom", "wc", "washroom", "bathroom", "potty"], skins: [{ unified: "1f6bd", native: "\u{1F6BD}" }], version: 1 }, plunger: { id: "plunger", name: "Plunger", keywords: ["toilet"], skins: [{ unified: "1faa0", native: "\u{1FAA0}" }], version: 13 }, shower: { id: "shower", name: "Shower", keywords: ["clean", "water", "bathroom"], skins: [{ unified: "1f6bf", native: "\u{1F6BF}" }], version: 1 }, bathtub: { id: "bathtub", name: "Bathtub", keywords: ["clean", "shower", "bathroom"], skins: [{ unified: "1f6c1", native: "\u{1F6C1}" }], version: 1 }, mouse_trap: { id: "mouse_trap", name: "Mouse Trap", keywords: ["cheese"], skins: [{ unified: "1faa4", native: "\u{1FAA4}" }], version: 13 }, razor: { id: "razor", name: "Razor", keywords: ["cut"], skins: [{ unified: "1fa92", native: "\u{1FA92}" }], version: 12 }, lotion_bottle: { id: "lotion_bottle", name: "Lotion Bottle", keywords: ["moisturizer", "sunscreen"], skins: [{ unified: "1f9f4", native: "\u{1F9F4}" }], version: 11 }, safety_pin: { id: "safety_pin", name: "Safety Pin", keywords: ["diaper"], skins: [{ unified: "1f9f7", native: "\u{1F9F7}" }], version: 11 }, broom: { id: "broom", name: "Broom", keywords: ["cleaning", "sweeping", "witch"], skins: [{ unified: "1f9f9", native: "\u{1F9F9}" }], version: 11 }, basket: { id: "basket", name: "Basket", keywords: ["laundry"], skins: [{ unified: "1f9fa", native: "\u{1F9FA}" }], version: 11 }, roll_of_paper: { id: "roll_of_paper", name: "Roll of Paper", keywords: [], skins: [{ unified: "1f9fb", native: "\u{1F9FB}" }], version: 11 }, bucket: { id: "bucket", name: "Bucket", keywords: ["water", "container"], skins: [{ unified: "1faa3", native: "\u{1FAA3}" }], version: 13 }, soap: { id: "soap", name: "Soap", keywords: ["bar", "bathing", "cleaning", "lather"], skins: [{ unified: "1f9fc", native: "\u{1F9FC}" }], version: 11 }, bubbles: { id: "bubbles", name: "Bubbles", keywords: ["soap", "fun", "carbonation", "sparkling"], skins: [{ unified: "1fae7", native: "\u{1FAE7}" }], version: 14 }, toothbrush: { id: "toothbrush", name: "Toothbrush", keywords: ["hygiene", "dental"], skins: [{ unified: "1faa5", native: "\u{1FAA5}" }], version: 13 }, sponge: { id: "sponge", name: "Sponge", keywords: ["absorbing", "cleaning", "porous"], skins: [{ unified: "1f9fd", native: "\u{1F9FD}" }], version: 11 }, fire_extinguisher: { id: "fire_extinguisher", name: "Fire Extinguisher", keywords: ["quench"], skins: [{ unified: "1f9ef", native: "\u{1F9EF}" }], version: 11 }, shopping_trolley: { id: "shopping_trolley", name: "Shopping Cart", keywords: ["trolley"], skins: [{ unified: "1f6d2", native: "\u{1F6D2}" }], version: 3 }, smoking: { id: "smoking", name: "Cigarette", keywords: ["smoking", "kills", "tobacco", "joint", "smoke"], skins: [{ unified: "1f6ac", native: "\u{1F6AC}" }], version: 1 }, coffin: { id: "coffin", name: "Coffin", keywords: ["vampire", "dead", "die", "death", "rip", "graveyard", "cemetery", "casket", "funeral", "box"], skins: [{ unified: "26b0-fe0f", native: "\u26B0\uFE0F" }], version: 1 }, headstone: { id: "headstone", name: "Headstone", keywords: ["death", "rip", "grave"], skins: [{ unified: "1faa6", native: "\u{1FAA6}" }], version: 13 }, funeral_urn: { id: "funeral_urn", name: "Funeral Urn", keywords: ["dead", "die", "death", "rip", "ashes"], skins: [{ unified: "26b1-fe0f", native: "\u26B1\uFE0F" }], version: 1 }, nazar_amulet: { id: "nazar_amulet", name: "Nazar Amulet", keywords: ["bead", "charm"], skins: [{ unified: "1f9ff", native: "\u{1F9FF}" }], version: 11 }, hamsa: { id: "hamsa", name: "Hamsa", keywords: ["religion", "protection"], skins: [{ unified: "1faac", native: "\u{1FAAC}" }], version: 14 }, moyai: { id: "moyai", name: "Moai", keywords: ["moyai", "rock", "easter", "island"], skins: [{ unified: "1f5ff", native: "\u{1F5FF}" }], version: 1 }, placard: { id: "placard", name: "Placard", keywords: ["announcement"], skins: [{ unified: "1faa7", native: "\u{1FAA7}" }], version: 13 }, identification_card: { id: "identification_card", name: "Identification Card", keywords: ["document"], skins: [{ unified: "1faaa", native: "\u{1FAAA}" }], version: 14 }, atm: { id: "atm", name: "Atm Sign", keywords: ["money", "sales", "cash", "blue", "square", "payment", "bank"], skins: [{ unified: "1f3e7", native: "\u{1F3E7}" }], version: 1 }, put_litter_in_its_place: { id: "put_litter_in_its_place", name: "Litter in Bin Sign", keywords: ["put", "its", "place", "blue", "square", "human", "info"], skins: [{ unified: "1f6ae", native: "\u{1F6AE}" }], version: 1 }, potable_water: { id: "potable_water", name: "Potable Water", keywords: ["blue", "square", "liquid", "restroom", "cleaning", "faucet"], skins: [{ unified: "1f6b0", native: "\u{1F6B0}" }], version: 1 }, wheelchair: { id: "wheelchair", name: "Wheelchair Symbol", keywords: ["blue", "square", "disabled", "accessibility"], skins: [{ unified: "267f", native: "\u267F" }], version: 1 }, mens: { id: "mens", name: "Men\u2019s Room", keywords: ["mens", "men", "s", "toilet", "restroom", "wc", "blue", "square", "gender", "male"], skins: [{ unified: "1f6b9", native: "\u{1F6B9}" }], version: 1 }, womens: { id: "womens", name: "Women\u2019s Room", keywords: ["womens", "women", "s", "purple", "square", "woman", "female", "toilet", "loo", "restroom", "gender"], skins: [{ unified: "1f6ba", native: "\u{1F6BA}" }], version: 1 }, restroom: { id: "restroom", name: "Restroom", keywords: ["blue", "square", "toilet", "refresh", "wc", "gender"], skins: [{ unified: "1f6bb", native: "\u{1F6BB}" }], version: 1 }, baby_symbol: { id: "baby_symbol", name: "Baby Symbol", keywords: ["orange", "square", "child"], skins: [{ unified: "1f6bc", native: "\u{1F6BC}" }], version: 1 }, wc: { id: "wc", name: "Water Closet", keywords: ["wc", "toilet", "restroom", "blue", "square"], skins: [{ unified: "1f6be", native: "\u{1F6BE}" }], version: 1 }, passport_control: { id: "passport_control", name: "Passport Control", keywords: ["custom", "blue", "square"], skins: [{ unified: "1f6c2", native: "\u{1F6C2}" }], version: 1 }, customs: { id: "customs", name: "Customs", keywords: ["passport", "border", "blue", "square"], skins: [{ unified: "1f6c3", native: "\u{1F6C3}" }], version: 1 }, baggage_claim: { id: "baggage_claim", name: "Baggage Claim", keywords: ["blue", "square", "airport", "transport"], skins: [{ unified: "1f6c4", native: "\u{1F6C4}" }], version: 1 }, left_luggage: { id: "left_luggage", name: "Left Luggage", keywords: ["blue", "square", "travel"], skins: [{ unified: "1f6c5", native: "\u{1F6C5}" }], version: 1 }, warning: { id: "warning", name: "Warning", keywords: ["exclamation", "wip", "alert", "error", "problem", "issue"], skins: [{ unified: "26a0-fe0f", native: "\u26A0\uFE0F" }], version: 1 }, children_crossing: { id: "children_crossing", name: "Children Crossing", keywords: ["school", "warning", "danger", "sign", "driving", "yellow", "diamond"], skins: [{ unified: "1f6b8", native: "\u{1F6B8}" }], version: 1 }, no_entry: { id: "no_entry", name: "No Entry", keywords: ["limit", "security", "privacy", "bad", "denied", "stop", "circle"], skins: [{ unified: "26d4", native: "\u26D4" }], version: 1 }, no_entry_sign: { id: "no_entry_sign", name: "Prohibited", keywords: ["no", "entry", "sign", "forbid", "stop", "limit", "denied", "disallow", "circle"], skins: [{ unified: "1f6ab", native: "\u{1F6AB}" }], version: 1 }, no_bicycles: { id: "no_bicycles", name: "No Bicycles", keywords: ["cyclist", "prohibited", "circle"], skins: [{ unified: "1f6b3", native: "\u{1F6B3}" }], version: 1 }, no_smoking: { id: "no_smoking", name: "No Smoking", keywords: ["cigarette", "blue", "square", "smell", "smoke"], skins: [{ unified: "1f6ad", native: "\u{1F6AD}" }], version: 1 }, do_not_litter: { id: "do_not_litter", name: "No Littering", keywords: ["do", "not", "litter", "trash", "bin", "garbage", "circle"], skins: [{ unified: "1f6af", native: "\u{1F6AF}" }], version: 1 }, "non-potable_water": { id: "non-potable_water", name: "Non-Potable Water", keywords: ["non", "potable", "drink", "faucet", "tap", "circle"], skins: [{ unified: "1f6b1", native: "\u{1F6B1}" }], version: 1 }, no_pedestrians: { id: "no_pedestrians", name: "No Pedestrians", keywords: ["rules", "crossing", "walking", "circle"], skins: [{ unified: "1f6b7", native: "\u{1F6B7}" }], version: 1 }, no_mobile_phones: { id: "no_mobile_phones", name: "No Mobile Phones", keywords: ["iphone", "mute", "circle"], skins: [{ unified: "1f4f5", native: "\u{1F4F5}" }], version: 1 }, underage: { id: "underage", name: "No One Under Eighteen", keywords: ["underage", "18", "drink", "pub", "night", "minor", "circle"], skins: [{ unified: "1f51e", native: "\u{1F51E}" }], version: 1 }, radioactive_sign: { id: "radioactive_sign", name: "Radioactive", keywords: ["sign", "nuclear", "danger"], skins: [{ unified: "2622-fe0f", native: "\u2622\uFE0F" }], version: 1 }, biohazard_sign: { id: "biohazard_sign", name: "Biohazard", keywords: ["sign", "danger"], skins: [{ unified: "2623-fe0f", native: "\u2623\uFE0F" }], version: 1 }, arrow_up: { id: "arrow_up", name: "Up Arrow", keywords: ["blue", "square", "continue", "top", "direction"], skins: [{ unified: "2b06-fe0f", native: "\u2B06\uFE0F" }], version: 1 }, arrow_upper_right: { id: "arrow_upper_right", name: "Up-Right Arrow", keywords: ["upper", "right", "up", "blue", "square", "point", "direction", "diagonal", "northeast"], skins: [{ unified: "2197-fe0f", native: "\u2197\uFE0F" }], version: 1 }, arrow_right: { id: "arrow_right", name: "Right Arrow", keywords: ["blue", "square", "next"], skins: [{ unified: "27a1-fe0f", native: "\u27A1\uFE0F" }], version: 1 }, arrow_lower_right: { id: "arrow_lower_right", name: "South East Arrow", keywords: ["lower", "right", "down", "blue", "square", "direction", "diagonal", "southeast"], skins: [{ unified: "2198-fe0f", native: "\u2198\uFE0F" }], version: 1 }, arrow_down: { id: "arrow_down", name: "Down Arrow", keywords: ["blue", "square", "direction", "bottom"], skins: [{ unified: "2b07-fe0f", native: "\u2B07\uFE0F" }], version: 1 }, arrow_lower_left: { id: "arrow_lower_left", name: "Down-Left Arrow", keywords: ["lower", "left", "down", "blue", "square", "direction", "diagonal", "southwest"], skins: [{ unified: "2199-fe0f", native: "\u2199\uFE0F" }], version: 1 }, arrow_left: { id: "arrow_left", name: "Left Arrow", keywords: ["blue", "square", "previous", "back"], skins: [{ unified: "2b05-fe0f", native: "\u2B05\uFE0F" }], version: 1 }, arrow_upper_left: { id: "arrow_upper_left", name: "Up-Left Arrow", keywords: ["upper", "left", "up", "blue", "square", "point", "direction", "diagonal", "northwest"], skins: [{ unified: "2196-fe0f", native: "\u2196\uFE0F" }], version: 1 }, arrow_up_down: { id: "arrow_up_down", name: "Up Down Arrow", keywords: ["blue", "square", "direction", "way", "vertical"], skins: [{ unified: "2195-fe0f", native: "\u2195\uFE0F" }], version: 1 }, left_right_arrow: { id: "left_right_arrow", name: "Left Right Arrow", keywords: ["shape", "direction", "horizontal", "sideways"], skins: [{ unified: "2194-fe0f", native: "\u2194\uFE0F" }], version: 1 }, leftwards_arrow_with_hook: { id: "leftwards_arrow_with_hook", name: "Right Arrow Curving Left", keywords: ["leftwards", "with", "hook", "back", "return", "blue", "square", "undo", "enter"], skins: [{ unified: "21a9-fe0f", native: "\u21A9\uFE0F" }], version: 1 }, arrow_right_hook: { id: "arrow_right_hook", name: "Left Arrow Curving Right", keywords: ["hook", "blue", "square", "return", "rotate", "direction"], skins: [{ unified: "21aa-fe0f", native: "\u21AA\uFE0F" }], version: 1 }, arrow_heading_up: { id: "arrow_heading_up", name: "Right Arrow Curving Up", keywords: ["heading", "blue", "square", "direction", "top"], skins: [{ unified: "2934-fe0f", native: "\u2934\uFE0F" }], version: 1 }, arrow_heading_down: { id: "arrow_heading_down", name: "Right Arrow Curving Down", keywords: ["heading", "blue", "square", "direction", "bottom"], skins: [{ unified: "2935-fe0f", native: "\u2935\uFE0F" }], version: 1 }, arrows_clockwise: { id: "arrows_clockwise", name: "Clockwise Vertical Arrows", keywords: ["sync", "cycle", "round", "repeat"], skins: [{ unified: "1f503", native: "\u{1F503}" }], version: 1 }, arrows_counterclockwise: { id: "arrows_counterclockwise", name: "Counterclockwise Arrows Button", keywords: ["blue", "square", "sync", "cycle"], skins: [{ unified: "1f504", native: "\u{1F504}" }], version: 1 }, back: { id: "back", name: "Back Arrow", keywords: ["words", "return"], skins: [{ unified: "1f519", native: "\u{1F519}" }], version: 1 }, end: { id: "end", name: "End Arrow", keywords: ["words"], skins: [{ unified: "1f51a", native: "\u{1F51A}" }], version: 1 }, on: { id: "on", name: "On! Arrow", keywords: ["on", "words"], skins: [{ unified: "1f51b", native: "\u{1F51B}" }], version: 1 }, soon: { id: "soon", name: "Soon Arrow", keywords: ["words"], skins: [{ unified: "1f51c", native: "\u{1F51C}" }], version: 1 }, top: { id: "top", name: "Top Arrow", keywords: ["words", "blue", "square"], skins: [{ unified: "1f51d", native: "\u{1F51D}" }], version: 1 }, place_of_worship: { id: "place_of_worship", name: "Place of Worship", keywords: ["religion", "church", "temple", "prayer"], skins: [{ unified: "1f6d0", native: "\u{1F6D0}" }], version: 1 }, atom_symbol: { id: "atom_symbol", name: "Atom Symbol", keywords: ["science", "physics", "chemistry"], skins: [{ unified: "269b-fe0f", native: "\u269B\uFE0F" }], version: 1 }, om_symbol: { id: "om_symbol", name: "Om", keywords: ["symbol", "hinduism", "buddhism", "sikhism", "jainism"], skins: [{ unified: "1f549-fe0f", native: "\u{1F549}\uFE0F" }], version: 1 }, star_of_david: { id: "star_of_david", name: "Star of David", keywords: ["judaism"], skins: [{ unified: "2721-fe0f", native: "\u2721\uFE0F" }], version: 1 }, wheel_of_dharma: { id: "wheel_of_dharma", name: "Wheel of Dharma", keywords: ["hinduism", "buddhism", "sikhism", "jainism"], skins: [{ unified: "2638-fe0f", native: "\u2638\uFE0F" }], version: 1 }, yin_yang: { id: "yin_yang", name: "Yin Yang", keywords: ["balance"], skins: [{ unified: "262f-fe0f", native: "\u262F\uFE0F" }], version: 1 }, latin_cross: { id: "latin_cross", name: "Latin Cross", keywords: ["christianity"], skins: [{ unified: "271d-fe0f", native: "\u271D\uFE0F" }], version: 1 }, orthodox_cross: { id: "orthodox_cross", name: "Orthodox Cross", keywords: ["suppedaneum", "religion"], skins: [{ unified: "2626-fe0f", native: "\u2626\uFE0F" }], version: 1 }, star_and_crescent: { id: "star_and_crescent", name: "Star and Crescent", keywords: ["islam"], skins: [{ unified: "262a-fe0f", native: "\u262A\uFE0F" }], version: 1 }, peace_symbol: { id: "peace_symbol", name: "Peace Symbol", keywords: ["hippie"], skins: [{ unified: "262e-fe0f", native: "\u262E\uFE0F" }], version: 1 }, menorah_with_nine_branches: { id: "menorah_with_nine_branches", name: "Menorah", keywords: ["with", "nine", "branches", "hanukkah", "candles", "jewish"], skins: [{ unified: "1f54e", native: "\u{1F54E}" }], version: 1 }, six_pointed_star: { id: "six_pointed_star", name: "Dotted Six-Pointed Star", keywords: ["six", "pointed", "purple", "square", "religion", "jewish", "hexagram"], skins: [{ unified: "1f52f", native: "\u{1F52F}" }], version: 1 }, khanda: { id: "khanda", name: "Khanda", keywords: ["Sikhism", "religion"], skins: [{ unified: "1faaf", native: "\u{1FAAF}" }], version: 15 }, aries: { id: "aries", name: "Aries", keywords: ["sign", "purple", "square", "zodiac", "astrology"], skins: [{ unified: "2648", native: "\u2648" }], version: 1 }, taurus: { id: "taurus", name: "Taurus", keywords: ["purple", "square", "sign", "zodiac", "astrology"], skins: [{ unified: "2649", native: "\u2649" }], version: 1 }, gemini: { id: "gemini", name: "Gemini", keywords: ["sign", "zodiac", "purple", "square", "astrology"], skins: [{ unified: "264a", native: "\u264A" }], version: 1 }, cancer: { id: "cancer", name: "Cancer", keywords: ["sign", "zodiac", "purple", "square", "astrology"], skins: [{ unified: "264b", native: "\u264B" }], version: 1 }, leo: { id: "leo", name: "Leo", keywords: ["sign", "purple", "square", "zodiac", "astrology"], skins: [{ unified: "264c", native: "\u264C" }], version: 1 }, virgo: { id: "virgo", name: "Virgo", keywords: ["sign", "zodiac", "purple", "square", "astrology"], skins: [{ unified: "264d", native: "\u264D" }], version: 1 }, libra: { id: "libra", name: "Libra", keywords: ["sign", "purple", "square", "zodiac", "astrology"], skins: [{ unified: "264e", native: "\u264E" }], version: 1 }, scorpius: { id: "scorpius", name: "Scorpio", keywords: ["scorpius", "sign", "zodiac", "purple", "square", "astrology"], skins: [{ unified: "264f", native: "\u264F" }], version: 1 }, sagittarius: { id: "sagittarius", name: "Sagittarius", keywords: ["sign", "zodiac", "purple", "square", "astrology"], skins: [{ unified: "2650", native: "\u2650" }], version: 1 }, capricorn: { id: "capricorn", name: "Capricorn", keywords: ["sign", "zodiac", "purple", "square", "astrology"], skins: [{ unified: "2651", native: "\u2651" }], version: 1 }, aquarius: { id: "aquarius", name: "Aquarius", keywords: ["sign", "purple", "square", "zodiac", "astrology"], skins: [{ unified: "2652", native: "\u2652" }], version: 1 }, pisces: { id: "pisces", name: "Pisces", keywords: ["purple", "square", "sign", "zodiac", "astrology"], skins: [{ unified: "2653", native: "\u2653" }], version: 1 }, ophiuchus: { id: "ophiuchus", name: "Ophiuchus", keywords: ["sign", "purple", "square", "constellation", "astrology"], skins: [{ unified: "26ce", native: "\u26CE" }], version: 1 }, twisted_rightwards_arrows: { id: "twisted_rightwards_arrows", name: "Shuffle Tracks Button", keywords: ["twisted", "rightwards", "arrows", "blue", "square", "music", "random"], skins: [{ unified: "1f500", native: "\u{1F500}" }], version: 1 }, repeat: { id: "repeat", name: "Repeat Button", keywords: ["loop", "record"], skins: [{ unified: "1f501", native: "\u{1F501}" }], version: 1 }, repeat_one: { id: "repeat_one", name: "Repeat Single Button", keywords: ["one", "blue", "square", "loop"], skins: [{ unified: "1f502", native: "\u{1F502}" }], version: 1 }, arrow_forward: { id: "arrow_forward", name: "Play Button", keywords: ["arrow", "forward", "blue", "square", "right", "direction"], skins: [{ unified: "25b6-fe0f", native: "\u25B6\uFE0F" }], version: 1 }, fast_forward: { id: "fast_forward", name: "Fast-Forward Button", keywords: ["fast", "forward", "blue", "square", "play", "speed", "continue"], skins: [{ unified: "23e9", native: "\u23E9" }], version: 1 }, black_right_pointing_double_triangle_with_vertical_bar: { id: "black_right_pointing_double_triangle_with_vertical_bar", name: "Next Track Button", keywords: ["black", "right", "pointing", "double", "triangle", "with", "vertical", "bar", "forward", "blue", "square"], skins: [{ unified: "23ed-fe0f", native: "\u23ED\uFE0F" }], version: 1 }, black_right_pointing_triangle_with_double_vertical_bar: { id: "black_right_pointing_triangle_with_double_vertical_bar", name: "Play or Pause Button", keywords: ["black", "right", "pointing", "triangle", "with", "double", "vertical", "bar", "blue", "square"], skins: [{ unified: "23ef-fe0f", native: "\u23EF\uFE0F" }], version: 1 }, arrow_backward: { id: "arrow_backward", name: "Reverse Button", keywords: ["arrow", "backward", "blue", "square", "left", "direction"], skins: [{ unified: "25c0-fe0f", native: "\u25C0\uFE0F" }], version: 1 }, rewind: { id: "rewind", name: "Fast Reverse Button", keywords: ["rewind", "play", "blue", "square"], skins: [{ unified: "23ea", native: "\u23EA" }], version: 1 }, black_left_pointing_double_triangle_with_vertical_bar: { id: "black_left_pointing_double_triangle_with_vertical_bar", name: "Last Track Button", keywords: ["black", "left", "pointing", "double", "triangle", "with", "vertical", "bar", "backward"], skins: [{ unified: "23ee-fe0f", native: "\u23EE\uFE0F" }], version: 1 }, arrow_up_small: { id: "arrow_up_small", name: "Upwards Button", keywords: ["arrow", "up", "small", "blue", "square", "triangle", "direction", "point", "forward", "top"], skins: [{ unified: "1f53c", native: "\u{1F53C}" }], version: 1 }, arrow_double_up: { id: "arrow_double_up", name: "Fast Up Button", keywords: ["arrow", "double", "blue", "square", "direction", "top"], skins: [{ unified: "23eb", native: "\u23EB" }], version: 1 }, arrow_down_small: { id: "arrow_down_small", name: "Downwards Button", keywords: ["arrow", "down", "small", "blue", "square", "direction", "bottom"], skins: [{ unified: "1f53d", native: "\u{1F53D}" }], version: 1 }, arrow_double_down: { id: "arrow_double_down", name: "Fast Down Button", keywords: ["arrow", "double", "blue", "square", "direction", "bottom"], skins: [{ unified: "23ec", native: "\u23EC" }], version: 1 }, double_vertical_bar: { id: "double_vertical_bar", name: "Pause Button", keywords: ["double", "vertical", "bar", "blue", "square"], skins: [{ unified: "23f8-fe0f", native: "\u23F8\uFE0F" }], version: 1 }, black_square_for_stop: { id: "black_square_for_stop", name: "Stop Button", keywords: ["black", "square", "for", "blue"], skins: [{ unified: "23f9-fe0f", native: "\u23F9\uFE0F" }], version: 1 }, black_circle_for_record: { id: "black_circle_for_record", name: "Record Button", keywords: ["black", "circle", "for", "blue", "square"], skins: [{ unified: "23fa-fe0f", native: "\u23FA\uFE0F" }], version: 1 }, eject: { id: "eject", name: "Eject Button", keywords: ["blue", "square"], skins: [{ unified: "23cf-fe0f", native: "\u23CF\uFE0F" }], version: 1 }, cinema: { id: "cinema", name: "Cinema", keywords: ["blue", "square", "record", "film", "movie", "curtain", "stage", "theater"], skins: [{ unified: "1f3a6", native: "\u{1F3A6}" }], version: 1 }, low_brightness: { id: "low_brightness", name: "Dim Button", keywords: ["low", "brightness", "sun", "afternoon", "warm", "summer"], skins: [{ unified: "1f505", native: "\u{1F505}" }], version: 1 }, high_brightness: { id: "high_brightness", name: "Bright Button", keywords: ["high", "brightness", "sun", "light"], skins: [{ unified: "1f506", native: "\u{1F506}" }], version: 1 }, signal_strength: { id: "signal_strength", name: "Antenna Bars", keywords: ["signal", "strength", "blue", "square", "reception", "phone", "internet", "connection", "wifi", "bluetooth"], skins: [{ unified: "1f4f6", native: "\u{1F4F6}" }], version: 1 }, wireless: { id: "wireless", name: "Wireless", keywords: ["wifi", "internet", "contactless", "signal"], skins: [{ unified: "1f6dc", native: "\u{1F6DC}" }], version: 15 }, vibration_mode: { id: "vibration_mode", name: "Vibration Mode", keywords: ["orange", "square", "phone"], skins: [{ unified: "1f4f3", native: "\u{1F4F3}" }], version: 1 }, mobile_phone_off: { id: "mobile_phone_off", name: "Mobile Phone off", keywords: ["mute", "orange", "square", "silence", "quiet"], skins: [{ unified: "1f4f4", native: "\u{1F4F4}" }], version: 1 }, female_sign: { id: "female_sign", name: "Female Sign", keywords: ["woman", "women", "lady", "girl"], skins: [{ unified: "2640-fe0f", native: "\u2640\uFE0F" }], version: 4 }, male_sign: { id: "male_sign", name: "Male Sign", keywords: ["man", "boy", "men"], skins: [{ unified: "2642-fe0f", native: "\u2642\uFE0F" }], version: 4 }, transgender_symbol: { id: "transgender_symbol", name: "Transgender Symbol", keywords: ["lgbtq"], skins: [{ unified: "26a7-fe0f", native: "\u26A7\uFE0F" }], version: 13 }, heavy_multiplication_x: { id: "heavy_multiplication_x", name: "Multiply", keywords: ["heavy", "multiplication", "x", "sign", "math", "calculation"], skins: [{ unified: "2716-fe0f", native: "\u2716\uFE0F" }], version: 1 }, heavy_plus_sign: { id: "heavy_plus_sign", name: "Plus", keywords: ["heavy", "sign", "math", "calculation", "addition", "more", "increase"], skins: [{ unified: "2795", native: "\u2795" }], version: 1 }, heavy_minus_sign: { id: "heavy_minus_sign", name: "Minus", keywords: ["heavy", "sign", "math", "calculation", "subtract", "less"], skins: [{ unified: "2796", native: "\u2796" }], version: 1 }, heavy_division_sign: { id: "heavy_division_sign", name: "Divide", keywords: ["heavy", "division", "sign", "math", "calculation"], skins: [{ unified: "2797", native: "\u2797" }], version: 1 }, heavy_equals_sign: { id: "heavy_equals_sign", name: "Heavy Equals Sign", keywords: ["math"], skins: [{ unified: "1f7f0", native: "\u{1F7F0}" }], version: 14 }, infinity: { id: "infinity", name: "Infinity", keywords: ["forever"], skins: [{ unified: "267e-fe0f", native: "\u267E\uFE0F" }], version: 11 }, bangbang: { id: "bangbang", name: "Double Exclamation Mark", keywords: ["bangbang", "surprise"], skins: [{ unified: "203c-fe0f", native: "\u203C\uFE0F" }], version: 1 }, interrobang: { id: "interrobang", name: "Exclamation Question Mark", keywords: ["interrobang", "wat", "punctuation", "surprise"], skins: [{ unified: "2049-fe0f", native: "\u2049\uFE0F" }], version: 1 }, question: { id: "question", name: "Red Question Mark", keywords: ["doubt", "confused"], skins: [{ unified: "2753", native: "\u2753" }], version: 1 }, grey_question: { id: "grey_question", name: "White Question Mark", keywords: ["grey", "doubts", "gray", "huh", "confused"], skins: [{ unified: "2754", native: "\u2754" }], version: 1 }, grey_exclamation: { id: "grey_exclamation", name: "White Exclamation Mark", keywords: ["grey", "surprise", "punctuation", "gray", "wow", "warning"], skins: [{ unified: "2755", native: "\u2755" }], version: 1 }, exclamation: { id: "exclamation", name: "Red Exclamation Mark", keywords: ["heavy", "danger", "surprise", "punctuation", "wow", "warning"], skins: [{ unified: "2757", native: "\u2757" }], version: 1 }, wavy_dash: { id: "wavy_dash", name: "Wavy Dash", keywords: ["draw", "line", "moustache", "mustache", "squiggle", "scribble"], skins: [{ unified: "3030-fe0f", native: "\u3030\uFE0F" }], version: 1 }, currency_exchange: { id: "currency_exchange", name: "Currency Exchange", keywords: ["money", "sales", "dollar", "travel"], skins: [{ unified: "1f4b1", native: "\u{1F4B1}" }], version: 1 }, heavy_dollar_sign: { id: "heavy_dollar_sign", name: "Heavy Dollar Sign", keywords: ["money", "sales", "payment", "currency", "buck"], skins: [{ unified: "1f4b2", native: "\u{1F4B2}" }], version: 1 }, medical_symbol: { id: "medical_symbol", name: "Medical Symbol", keywords: ["staff", "of", "aesculapius", "health", "hospital"], skins: [{ unified: "2695-fe0f", native: "\u2695\uFE0F" }], version: 4 }, recycle: { id: "recycle", name: "Recycling Symbol", keywords: ["recycle", "arrow", "environment", "garbage", "trash"], skins: [{ unified: "267b-fe0f", native: "\u267B\uFE0F" }], version: 1 }, fleur_de_lis: { id: "fleur_de_lis", name: "Fleur-De-Lis", keywords: ["fleur", "de", "lis", "decorative", "scout"], skins: [{ unified: "269c-fe0f", native: "\u269C\uFE0F" }], version: 1 }, trident: { id: "trident", name: "Trident Emblem", keywords: ["weapon", "spear"], skins: [{ unified: "1f531", native: "\u{1F531}" }], version: 1 }, name_badge: { id: "name_badge", name: "Name Badge", keywords: ["fire", "forbid"], skins: [{ unified: "1f4db", native: "\u{1F4DB}" }], version: 1 }, beginner: { id: "beginner", name: "Japanese Symbol for Beginner", keywords: ["badge", "shield"], skins: [{ unified: "1f530", native: "\u{1F530}" }], version: 1 }, o: { id: "o", name: "Hollow Red Circle", keywords: ["o", "round"], skins: [{ unified: "2b55", native: "\u2B55" }], version: 1 }, white_check_mark: { id: "white_check_mark", name: "Check Mark Button", keywords: ["white", "green", "square", "ok", "agree", "vote", "election", "answer", "tick"], skins: [{ unified: "2705", native: "\u2705" }], version: 1 }, ballot_box_with_check: { id: "ballot_box_with_check", name: "Check Box with Check", keywords: ["ballot", "ok", "agree", "confirm", "black", "square", "vote", "election", "yes", "tick"], skins: [{ unified: "2611-fe0f", native: "\u2611\uFE0F" }], version: 1 }, heavy_check_mark: { id: "heavy_check_mark", name: "Check Mark", keywords: ["heavy", "ok", "nike", "answer", "yes", "tick"], skins: [{ unified: "2714-fe0f", native: "\u2714\uFE0F" }], version: 1 }, x: { id: "x", name: "Cross Mark", keywords: ["x", "no", "delete", "remove", "cancel", "red"], skins: [{ unified: "274c", native: "\u274C" }], version: 1 }, negative_squared_cross_mark: { id: "negative_squared_cross_mark", name: "Cross Mark Button", keywords: ["negative", "squared", "x", "green", "square", "no", "deny"], skins: [{ unified: "274e", native: "\u274E" }], version: 1 }, curly_loop: { id: "curly_loop", name: "Curly Loop", keywords: ["scribble", "draw", "shape", "squiggle"], skins: [{ unified: "27b0", native: "\u27B0" }], version: 1 }, loop: { id: "loop", name: "Double Curly Loop", keywords: ["tape", "cassette"], skins: [{ unified: "27bf", native: "\u27BF" }], version: 1 }, part_alternation_mark: { id: "part_alternation_mark", name: "Part Alternation Mark", keywords: ["graph", "presentation", "stats", "business", "economics", "bad"], skins: [{ unified: "303d-fe0f", native: "\u303D\uFE0F" }], version: 1 }, eight_spoked_asterisk: { id: "eight_spoked_asterisk", name: "Eight Spoked Asterisk", keywords: ["star", "sparkle", "green", "square"], skins: [{ unified: "2733-fe0f", native: "\u2733\uFE0F" }], version: 1 }, eight_pointed_black_star: { id: "eight_pointed_black_star", name: "Eight-Pointed Star", keywords: ["eight", "pointed", "black", "orange", "square", "shape", "polygon"], skins: [{ unified: "2734-fe0f", native: "\u2734\uFE0F" }], version: 1 }, sparkle: { id: "sparkle", name: "Sparkle", keywords: ["stars", "green", "square", "awesome", "good", "fireworks"], skins: [{ unified: "2747-fe0f", native: "\u2747\uFE0F" }], version: 1 }, copyright: { id: "copyright", name: "Copyright", keywords: ["ip", "license", "circle", "law", "legal"], skins: [{ unified: "00a9-fe0f", native: "\xA9\uFE0F" }], version: 1 }, registered: { id: "registered", name: "Registered", keywords: ["alphabet", "circle"], skins: [{ unified: "00ae-fe0f", native: "\xAE\uFE0F" }], version: 1 }, tm: { id: "tm", name: "Trade Mark", keywords: ["tm", "trademark", "brand", "law", "legal"], skins: [{ unified: "2122-fe0f", native: "\u2122\uFE0F" }], version: 1 }, hash: { id: "hash", name: "Hash Key", keywords: ["keycap", "", "symbol", "blue", "square", "twitter"], skins: [{ unified: "0023-fe0f-20e3", native: "#\uFE0F\u20E3" }], version: 1 }, keycap_star: { id: "keycap_star", name: "Keycap: *", keywords: ["keycap", "star", ""], skins: [{ unified: "002a-fe0f-20e3", native: "*\uFE0F\u20E3" }], version: 2 }, zero: { id: "zero", name: "Keycap 0", keywords: ["zero", "numbers", "blue", "square", "null"], skins: [{ unified: "0030-fe0f-20e3", native: "0\uFE0F\u20E3" }], version: 1 }, one: { id: "one", name: "Keycap 1", keywords: ["one", "blue", "square", "numbers"], skins: [{ unified: "0031-fe0f-20e3", native: "1\uFE0F\u20E3" }], version: 1 }, two: { id: "two", name: "Keycap 2", keywords: ["two", "numbers", "prime", "blue", "square"], skins: [{ unified: "0032-fe0f-20e3", native: "2\uFE0F\u20E3" }], version: 1 }, three: { id: "three", name: "Keycap 3", keywords: ["three", "numbers", "prime", "blue", "square"], skins: [{ unified: "0033-fe0f-20e3", native: "3\uFE0F\u20E3" }], version: 1 }, four: { id: "four", name: "Keycap 4", keywords: ["four", "numbers", "blue", "square"], skins: [{ unified: "0034-fe0f-20e3", native: "4\uFE0F\u20E3" }], version: 1 }, five: { id: "five", name: "Keycap 5", keywords: ["five", "numbers", "blue", "square", "prime"], skins: [{ unified: "0035-fe0f-20e3", native: "5\uFE0F\u20E3" }], version: 1 }, six: { id: "six", name: "Keycap 6", keywords: ["six", "numbers", "blue", "square"], skins: [{ unified: "0036-fe0f-20e3", native: "6\uFE0F\u20E3" }], version: 1 }, seven: { id: "seven", name: "Keycap 7", keywords: ["seven", "numbers", "blue", "square", "prime"], skins: [{ unified: "0037-fe0f-20e3", native: "7\uFE0F\u20E3" }], version: 1 }, eight: { id: "eight", name: "Keycap 8", keywords: ["eight", "blue", "square", "numbers"], skins: [{ unified: "0038-fe0f-20e3", native: "8\uFE0F\u20E3" }], version: 1 }, nine: { id: "nine", name: "Keycap 9", keywords: ["nine", "blue", "square", "numbers"], skins: [{ unified: "0039-fe0f-20e3", native: "9\uFE0F\u20E3" }], version: 1 }, keycap_ten: { id: "keycap_ten", name: "Keycap 10", keywords: ["ten", "numbers", "blue", "square"], skins: [{ unified: "1f51f", native: "\u{1F51F}" }], version: 1 }, capital_abcd: { id: "capital_abcd", name: "Input Latin Uppercase", keywords: ["capital", "abcd", "alphabet", "words", "blue", "square"], skins: [{ unified: "1f520", native: "\u{1F520}" }], version: 1 }, abcd: { id: "abcd", name: "Input Latin Lowercase", keywords: ["abcd", "blue", "square", "alphabet"], skins: [{ unified: "1f521", native: "\u{1F521}" }], version: 1 }, symbols: { id: "symbols", name: "Input Symbols", keywords: ["blue", "square", "music", "note", "ampersand", "percent", "glyphs", "characters"], skins: [{ unified: "1f523", native: "\u{1F523}" }], version: 1 }, abc: { id: "abc", name: "Input Latin Letters", keywords: ["abc", "blue", "square", "alphabet"], skins: [{ unified: "1f524", native: "\u{1F524}" }], version: 1 }, a: { id: "a", name: "A Button (blood Type)", keywords: ["red", "square", "alphabet", "letter"], skins: [{ unified: "1f170-fe0f", native: "\u{1F170}\uFE0F" }], version: 1 }, ab: { id: "ab", name: "Negative Squared Ab", keywords: ["button", "red", "square", "alphabet"], skins: [{ unified: "1f18e", native: "\u{1F18E}" }], version: 1 }, b: { id: "b", name: "B Button (blood Type)", keywords: ["red", "square", "alphabet", "letter"], skins: [{ unified: "1f171-fe0f", native: "\u{1F171}\uFE0F" }], version: 1 }, cl: { id: "cl", name: "Cl Button", keywords: ["alphabet", "words", "red", "square"], skins: [{ unified: "1f191", native: "\u{1F191}" }], version: 1 }, cool: { id: "cool", name: "Cool Button", keywords: ["words", "blue", "square"], skins: [{ unified: "1f192", native: "\u{1F192}" }], version: 1 }, free: { id: "free", name: "Free Button", keywords: ["blue", "square", "words"], skins: [{ unified: "1f193", native: "\u{1F193}" }], version: 1 }, information_source: { id: "information_source", name: "Information", keywords: ["source", "blue", "square", "alphabet", "letter"], skins: [{ unified: "2139-fe0f", native: "\u2139\uFE0F" }], version: 1 }, id: { id: "id", name: "Id Button", keywords: ["purple", "square", "words"], skins: [{ unified: "1f194", native: "\u{1F194}" }], version: 1 }, m: { id: "m", name: "Circled M", keywords: ["alphabet", "blue", "circle", "letter"], skins: [{ unified: "24c2-fe0f", native: "\u24C2\uFE0F" }], version: 1 }, new: { id: "new", name: "New Button", keywords: ["blue", "square", "words", "start"], skins: [{ unified: "1f195", native: "\u{1F195}" }], version: 1 }, ng: { id: "ng", name: "Ng Button", keywords: ["blue", "square", "words", "shape", "icon"], skins: [{ unified: "1f196", native: "\u{1F196}" }], version: 1 }, o2: { id: "o2", name: "O Button (blood Type)", keywords: ["o2", "alphabet", "red", "square", "letter"], skins: [{ unified: "1f17e-fe0f", native: "\u{1F17E}\uFE0F" }], version: 1 }, ok: { id: "ok", name: "Ok Button", keywords: ["good", "agree", "yes", "blue", "square"], skins: [{ unified: "1f197", native: "\u{1F197}" }], version: 1 }, parking: { id: "parking", name: "P Button", keywords: ["parking", "cars", "blue", "square", "alphabet", "letter"], skins: [{ unified: "1f17f-fe0f", native: "\u{1F17F}\uFE0F" }], version: 1 }, sos: { id: "sos", name: "Sos Button", keywords: ["help", "red", "square", "words", "emergency", "911"], skins: [{ unified: "1f198", native: "\u{1F198}" }], version: 1 }, up: { id: "up", name: "Up! Button", keywords: ["up", "blue", "square", "above", "high"], skins: [{ unified: "1f199", native: "\u{1F199}" }], version: 1 }, vs: { id: "vs", name: "Vs Button", keywords: ["words", "orange", "square"], skins: [{ unified: "1f19a", native: "\u{1F19A}" }], version: 1 }, koko: { id: "koko", name: "Squared Katakana Koko", keywords: ["japanese", "here", "button", "blue", "square", "destination"], skins: [{ unified: "1f201", native: "\u{1F201}" }], version: 1 }, sa: { id: "sa", name: "Squared Katakana Sa", keywords: ["japanese", "service", "charge", "button", "blue", "square"], skins: [{ unified: "1f202-fe0f", native: "\u{1F202}\uFE0F" }], version: 1 }, u6708: { id: "u6708", name: "Japanese \u201Cmonthly Amount\u201D Button", keywords: ["u6708", "monthly", "amount", "chinese", "month", "moon", "orange", "square", "kanji"], skins: [{ unified: "1f237-fe0f", native: "\u{1F237}\uFE0F" }], version: 1 }, u6709: { id: "u6709", name: "Squared Cjk Unified Ideograph-6709", keywords: ["u6709", "japanese", "not", "free", "of", "charge", "button", "orange", "square", "chinese", "have", "kanji"], skins: [{ unified: "1f236", native: "\u{1F236}" }], version: 1 }, u6307: { id: "u6307", name: "Japanese \u201Creserved\u201D Button", keywords: ["u6307", "reserved", "chinese", "point", "green", "square", "kanji"], skins: [{ unified: "1f22f", native: "\u{1F22F}" }], version: 1 }, ideograph_advantage: { id: "ideograph_advantage", name: "Japanese \u201Cbargain\u201D Button", keywords: ["ideograph", "advantage", "bargain", "chinese", "kanji", "obtain", "get", "circle"], skins: [{ unified: "1f250", native: "\u{1F250}" }], version: 1 }, u5272: { id: "u5272", name: "Japanese \u201Cdiscount\u201D Button", keywords: ["u5272", "discount", "cut", "divide", "chinese", "kanji", "pink", "square"], skins: [{ unified: "1f239", native: "\u{1F239}" }], version: 1 }, u7121: { id: "u7121", name: "Japanese \u201Cfree of Charge\u201D Button", keywords: ["u7121", "free", "charge", "nothing", "chinese", "kanji", "orange", "square"], skins: [{ unified: "1f21a", native: "\u{1F21A}" }], version: 1 }, u7981: { id: "u7981", name: "Japanese \u201Cprohibited\u201D Button", keywords: ["u7981", "prohibited", "kanji", "chinese", "forbidden", "limit", "restricted", "red", "square"], skins: [{ unified: "1f232", native: "\u{1F232}" }], version: 1 }, accept: { id: "accept", name: "Circled Ideograph Accept", keywords: ["japanese", "acceptable", "button", "ok", "good", "chinese", "kanji", "agree", "yes", "orange", "circle"], skins: [{ unified: "1f251", native: "\u{1F251}" }], version: 1 }, u7533: { id: "u7533", name: "Japanese \u201Capplication\u201D Button", keywords: ["u7533", "application", "chinese", "kanji", "orange", "square"], skins: [{ unified: "1f238", native: "\u{1F238}" }], version: 1 }, u5408: { id: "u5408", name: "Japanese \u201Cpassing Grade\u201D Button", keywords: ["u5408", "passing", "grade", "chinese", "join", "kanji", "red", "square"], skins: [{ unified: "1f234", native: "\u{1F234}" }], version: 1 }, u7a7a: { id: "u7a7a", name: "Japanese \u201Cvacancy\u201D Button", keywords: ["u7a7a", "vacancy", "kanji", "chinese", "empty", "sky", "blue", "square"], skins: [{ unified: "1f233", native: "\u{1F233}" }], version: 1 }, congratulations: { id: "congratulations", name: "Circled Ideograph Congratulation", keywords: ["congratulations", "japanese", "button", "chinese", "kanji", "red", "circle"], skins: [{ unified: "3297-fe0f", native: "\u3297\uFE0F" }], version: 1 }, secret: { id: "secret", name: "Circled Ideograph Secret", keywords: ["japanese", "button", "privacy", "chinese", "sshh", "kanji", "red", "circle"], skins: [{ unified: "3299-fe0f", native: "\u3299\uFE0F" }], version: 1 }, u55b6: { id: "u55b6", name: "Squared Cjk Unified Ideograph-55b6", keywords: ["u55b6", "japanese", "open", "for", "business", "button", "opening", "hours", "orange", "square"], skins: [{ unified: "1f23a", native: "\u{1F23A}" }], version: 1 }, u6e80: { id: "u6e80", name: "Japanese \u201Cno Vacancy\u201D Button", keywords: ["u6e80", "no", "vacancy", "full", "chinese", "red", "square", "kanji"], skins: [{ unified: "1f235", native: "\u{1F235}" }], version: 1 }, red_circle: { id: "red_circle", name: "Red Circle", keywords: ["shape", "error", "danger"], skins: [{ unified: "1f534", native: "\u{1F534}" }], version: 1 }, large_orange_circle: { id: "large_orange_circle", name: "Orange Circle", keywords: ["large", "round"], skins: [{ unified: "1f7e0", native: "\u{1F7E0}" }], version: 12 }, large_yellow_circle: { id: "large_yellow_circle", name: "Yellow Circle", keywords: ["large", "round"], skins: [{ unified: "1f7e1", native: "\u{1F7E1}" }], version: 12 }, large_green_circle: { id: "large_green_circle", name: "Green Circle", keywords: ["large", "round"], skins: [{ unified: "1f7e2", native: "\u{1F7E2}" }], version: 12 }, large_blue_circle: { id: "large_blue_circle", name: "Blue Circle", keywords: ["large", "shape", "icon", "button"], skins: [{ unified: "1f535", native: "\u{1F535}" }], version: 1 }, large_purple_circle: { id: "large_purple_circle", name: "Purple Circle", keywords: ["large", "round"], skins: [{ unified: "1f7e3", native: "\u{1F7E3}" }], version: 12 }, large_brown_circle: { id: "large_brown_circle", name: "Brown Circle", keywords: ["large", "round"], skins: [{ unified: "1f7e4", native: "\u{1F7E4}" }], version: 12 }, black_circle: { id: "black_circle", name: "Black Circle", keywords: ["shape", "button", "round"], skins: [{ unified: "26ab", native: "\u26AB" }], version: 1 }, white_circle: { id: "white_circle", name: "White Circle", keywords: ["shape", "round"], skins: [{ unified: "26aa", native: "\u26AA" }], version: 1 }, large_red_square: { id: "large_red_square", name: "Red Square", keywords: ["large"], skins: [{ unified: "1f7e5", native: "\u{1F7E5}" }], version: 12 }, large_orange_square: { id: "large_orange_square", name: "Orange Square", keywords: ["large"], skins: [{ unified: "1f7e7", native: "\u{1F7E7}" }], version: 12 }, large_yellow_square: { id: "large_yellow_square", name: "Yellow Square", keywords: ["large"], skins: [{ unified: "1f7e8", native: "\u{1F7E8}" }], version: 12 }, large_green_square: { id: "large_green_square", name: "Green Square", keywords: ["large"], skins: [{ unified: "1f7e9", native: "\u{1F7E9}" }], version: 12 }, large_blue_square: { id: "large_blue_square", name: "Blue Square", keywords: ["large"], skins: [{ unified: "1f7e6", native: "\u{1F7E6}" }], version: 12 }, large_purple_square: { id: "large_purple_square", name: "Purple Square", keywords: ["large"], skins: [{ unified: "1f7ea", native: "\u{1F7EA}" }], version: 12 }, large_brown_square: { id: "large_brown_square", name: "Brown Square", keywords: ["large"], skins: [{ unified: "1f7eb", native: "\u{1F7EB}" }], version: 12 }, black_large_square: { id: "black_large_square", name: "Black Large Square", keywords: ["shape", "icon", "button"], skins: [{ unified: "2b1b", native: "\u2B1B" }], version: 1 }, white_large_square: { id: "white_large_square", name: "White Large Square", keywords: ["shape", "icon", "stone", "button"], skins: [{ unified: "2b1c", native: "\u2B1C" }], version: 1 }, black_medium_square: { id: "black_medium_square", name: "Black Medium Square", keywords: ["shape", "button", "icon"], skins: [{ unified: "25fc-fe0f", native: "\u25FC\uFE0F" }], version: 1 }, white_medium_square: { id: "white_medium_square", name: "White Medium Square", keywords: ["shape", "stone", "icon"], skins: [{ unified: "25fb-fe0f", native: "\u25FB\uFE0F" }], version: 1 }, black_medium_small_square: { id: "black_medium_small_square", name: "Black Medium Small Square", keywords: ["icon", "shape", "button"], skins: [{ unified: "25fe", native: "\u25FE" }], version: 1 }, white_medium_small_square: { id: "white_medium_small_square", name: "White Medium Small Square", keywords: ["shape", "stone", "icon", "button"], skins: [{ unified: "25fd", native: "\u25FD" }], version: 1 }, black_small_square: { id: "black_small_square", name: "Black Small Square", keywords: ["shape", "icon"], skins: [{ unified: "25aa-fe0f", native: "\u25AA\uFE0F" }], version: 1 }, white_small_square: { id: "white_small_square", name: "White Small Square", keywords: ["shape", "icon"], skins: [{ unified: "25ab-fe0f", native: "\u25AB\uFE0F" }], version: 1 }, large_orange_diamond: { id: "large_orange_diamond", name: "Large Orange Diamond", keywords: ["shape", "jewel", "gem"], skins: [{ unified: "1f536", native: "\u{1F536}" }], version: 1 }, large_blue_diamond: { id: "large_blue_diamond", name: "Large Blue Diamond", keywords: ["shape", "jewel", "gem"], skins: [{ unified: "1f537", native: "\u{1F537}" }], version: 1 }, small_orange_diamond: { id: "small_orange_diamond", name: "Small Orange Diamond", keywords: ["shape", "jewel", "gem"], skins: [{ unified: "1f538", native: "\u{1F538}" }], version: 1 }, small_blue_diamond: { id: "small_blue_diamond", name: "Small Blue Diamond", keywords: ["shape", "jewel", "gem"], skins: [{ unified: "1f539", native: "\u{1F539}" }], version: 1 }, small_red_triangle: { id: "small_red_triangle", name: "Red Triangle Pointed Up", keywords: ["small", "shape", "direction", "top"], skins: [{ unified: "1f53a", native: "\u{1F53A}" }], version: 1 }, small_red_triangle_down: { id: "small_red_triangle_down", name: "Red Triangle Pointed Down", keywords: ["small", "shape", "direction", "bottom"], skins: [{ unified: "1f53b", native: "\u{1F53B}" }], version: 1 }, diamond_shape_with_a_dot_inside: { id: "diamond_shape_with_a_dot_inside", name: "Diamond with a Dot", keywords: ["shape", "inside", "jewel", "blue", "gem", "crystal", "fancy"], skins: [{ unified: "1f4a0", native: "\u{1F4A0}" }], version: 1 }, radio_button: { id: "radio_button", name: "Radio Button", keywords: ["input", "old", "music", "circle"], skins: [{ unified: "1f518", native: "\u{1F518}" }], version: 1 }, white_square_button: { id: "white_square_button", name: "White Square Button", keywords: ["shape", "input"], skins: [{ unified: "1f533", native: "\u{1F533}" }], version: 1 }, black_square_button: { id: "black_square_button", name: "Black Square Button", keywords: ["shape", "input", "frame"], skins: [{ unified: "1f532", native: "\u{1F532}" }], version: 1 }, checkered_flag: { id: "checkered_flag", name: "Chequered Flag", keywords: ["checkered", "contest", "finishline", "race", "gokart"], skins: [{ unified: "1f3c1", native: "\u{1F3C1}" }], version: 1 }, triangular_flag_on_post: { id: "triangular_flag_on_post", name: "Triangular Flag", keywords: ["on", "post", "mark", "milestone", "place"], skins: [{ unified: "1f6a9", native: "\u{1F6A9}" }], version: 1 }, crossed_flags: { id: "crossed_flags", name: "Crossed Flags", keywords: ["japanese", "nation", "country", "border"], skins: [{ unified: "1f38c", native: "\u{1F38C}" }], version: 1 }, waving_black_flag: { id: "waving_black_flag", name: "Black Flag", keywords: ["waving", "pirate"], skins: [{ unified: "1f3f4", native: "\u{1F3F4}" }], version: 1 }, waving_white_flag: { id: "waving_white_flag", name: "White Flag", keywords: ["waving", "losing", "loser", "lost", "surrender", "give", "up", "fail"], skins: [{ unified: "1f3f3-fe0f", native: "\u{1F3F3}\uFE0F" }], version: 1 }, "rainbow-flag": { id: "rainbow-flag", name: "Rainbow Flag", keywords: ["pride", "gay", "lgbt", "glbt", "queer", "homosexual", "lesbian", "bisexual", "transgender"], skins: [{ unified: "1f3f3-fe0f-200d-1f308", native: "\u{1F3F3}\uFE0F\u200D\u{1F308}" }], version: 4 }, transgender_flag: { id: "transgender_flag", name: "Transgender Flag", keywords: ["lgbtq"], skins: [{ unified: "1f3f3-fe0f-200d-26a7-fe0f", native: "\u{1F3F3}\uFE0F\u200D\u26A7\uFE0F" }], version: 13 }, pirate_flag: { id: "pirate_flag", name: "Pirate Flag", keywords: ["skull", "crossbones", "banner"], skins: [{ unified: "1f3f4-200d-2620-fe0f", native: "\u{1F3F4}\u200D\u2620\uFE0F" }], version: 11 }, "flag-ac": { id: "flag-ac", name: "Ascension Island Flag", keywords: ["ac"], skins: [{ unified: "1f1e6-1f1e8", native: "\u{1F1E6}\u{1F1E8}" }], version: 2 }, "flag-ad": { id: "flag-ad", name: "Andorra Flag", keywords: ["ad", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1e9", native: "\u{1F1E6}\u{1F1E9}" }], version: 2 }, "flag-ae": { id: "flag-ae", name: "United Arab Emirates Flag", keywords: ["ae", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1ea", native: "\u{1F1E6}\u{1F1EA}" }], version: 2 }, "flag-af": { id: "flag-af", name: "Afghanistan Flag", keywords: ["af", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1eb", native: "\u{1F1E6}\u{1F1EB}" }], version: 2 }, "flag-ag": { id: "flag-ag", name: "Antigua & Barbuda Flag", keywords: ["ag", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1ec", native: "\u{1F1E6}\u{1F1EC}" }], version: 2 }, "flag-ai": { id: "flag-ai", name: "Anguilla Flag", keywords: ["ai", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1ee", native: "\u{1F1E6}\u{1F1EE}" }], version: 2 }, "flag-al": { id: "flag-al", name: "Albania Flag", keywords: ["al", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1f1", native: "\u{1F1E6}\u{1F1F1}" }], version: 2 }, "flag-am": { id: "flag-am", name: "Armenia Flag", keywords: ["am", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1f2", native: "\u{1F1E6}\u{1F1F2}" }], version: 2 }, "flag-ao": { id: "flag-ao", name: "Angola Flag", keywords: ["ao", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1f4", native: "\u{1F1E6}\u{1F1F4}" }], version: 2 }, "flag-aq": { id: "flag-aq", name: "Antarctica Flag", keywords: ["aq", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1f6", native: "\u{1F1E6}\u{1F1F6}" }], version: 2 }, "flag-ar": { id: "flag-ar", name: "Argentina Flag", keywords: ["ar", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1f7", native: "\u{1F1E6}\u{1F1F7}" }], version: 2 }, "flag-as": { id: "flag-as", name: "American Samoa Flag", keywords: ["as", "ws", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1f8", native: "\u{1F1E6}\u{1F1F8}" }], version: 2 }, "flag-at": { id: "flag-at", name: "Austria Flag", keywords: ["at", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1f9", native: "\u{1F1E6}\u{1F1F9}" }], version: 2 }, "flag-au": { id: "flag-au", name: "Australia Flag", keywords: ["au", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1fa", native: "\u{1F1E6}\u{1F1FA}" }], version: 2 }, "flag-aw": { id: "flag-aw", name: "Aruba Flag", keywords: ["aw", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1fc", native: "\u{1F1E6}\u{1F1FC}" }], version: 2 }, "flag-ax": { id: "flag-ax", name: "\xC5land Islands Flag", keywords: ["ax", "aland", "Aland", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1fd", native: "\u{1F1E6}\u{1F1FD}" }], version: 2 }, "flag-az": { id: "flag-az", name: "Azerbaijan Flag", keywords: ["az", "nation", "country", "banner"], skins: [{ unified: "1f1e6-1f1ff", native: "\u{1F1E6}\u{1F1FF}" }], version: 2 }, "flag-ba": { id: "flag-ba", name: "Bosnia & Herzegovina Flag", keywords: ["ba", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1e6", native: "\u{1F1E7}\u{1F1E6}" }], version: 2 }, "flag-bb": { id: "flag-bb", name: "Barbados Flag", keywords: ["bb", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1e7", native: "\u{1F1E7}\u{1F1E7}" }], version: 2 }, "flag-bd": { id: "flag-bd", name: "Bangladesh Flag", keywords: ["bd", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1e9", native: "\u{1F1E7}\u{1F1E9}" }], version: 2 }, "flag-be": { id: "flag-be", name: "Belgium Flag", keywords: ["be", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1ea", native: "\u{1F1E7}\u{1F1EA}" }], version: 2 }, "flag-bf": { id: "flag-bf", name: "Burkina Faso Flag", keywords: ["bf", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1eb", native: "\u{1F1E7}\u{1F1EB}" }], version: 2 }, "flag-bg": { id: "flag-bg", name: "Bulgaria Flag", keywords: ["bg", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1ec", native: "\u{1F1E7}\u{1F1EC}" }], version: 2 }, "flag-bh": { id: "flag-bh", name: "Bahrain Flag", keywords: ["bh", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1ed", native: "\u{1F1E7}\u{1F1ED}" }], version: 2 }, "flag-bi": { id: "flag-bi", name: "Burundi Flag", keywords: ["bi", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1ee", native: "\u{1F1E7}\u{1F1EE}" }], version: 2 }, "flag-bj": { id: "flag-bj", name: "Benin Flag", keywords: ["bj", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1ef", native: "\u{1F1E7}\u{1F1EF}" }], version: 2 }, "flag-bl": { id: "flag-bl", name: "St. Barth\xE9lemy Flag", keywords: ["bl", "st", "barthelemy", "saint", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1f1", native: "\u{1F1E7}\u{1F1F1}" }], version: 2 }, "flag-bm": { id: "flag-bm", name: "Bermuda Flag", keywords: ["bm", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1f2", native: "\u{1F1E7}\u{1F1F2}" }], version: 2 }, "flag-bn": { id: "flag-bn", name: "Brunei Flag", keywords: ["bn", "darussalam", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1f3", native: "\u{1F1E7}\u{1F1F3}" }], version: 2 }, "flag-bo": { id: "flag-bo", name: "Bolivia Flag", keywords: ["bo", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1f4", native: "\u{1F1E7}\u{1F1F4}" }], version: 2 }, "flag-bq": { id: "flag-bq", name: "Caribbean Netherlands Flag", keywords: ["bq", "bonaire", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1f6", native: "\u{1F1E7}\u{1F1F6}" }], version: 2 }, "flag-br": { id: "flag-br", name: "Brazil Flag", keywords: ["br", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1f7", native: "\u{1F1E7}\u{1F1F7}" }], version: 2 }, "flag-bs": { id: "flag-bs", name: "Bahamas Flag", keywords: ["bs", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1f8", native: "\u{1F1E7}\u{1F1F8}" }], version: 2 }, "flag-bt": { id: "flag-bt", name: "Bhutan Flag", keywords: ["bt", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1f9", native: "\u{1F1E7}\u{1F1F9}" }], version: 2 }, "flag-bv": { id: "flag-bv", name: "Bouvet Island Flag", keywords: ["bv", "norway"], skins: [{ unified: "1f1e7-1f1fb", native: "\u{1F1E7}\u{1F1FB}" }], version: 2 }, "flag-bw": { id: "flag-bw", name: "Botswana Flag", keywords: ["bw", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1fc", native: "\u{1F1E7}\u{1F1FC}" }], version: 2 }, "flag-by": { id: "flag-by", name: "Belarus Flag", keywords: ["by", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1fe", native: "\u{1F1E7}\u{1F1FE}" }], version: 2 }, "flag-bz": { id: "flag-bz", name: "Belize Flag", keywords: ["bz", "nation", "country", "banner"], skins: [{ unified: "1f1e7-1f1ff", native: "\u{1F1E7}\u{1F1FF}" }], version: 2 }, "flag-ca": { id: "flag-ca", name: "Canada Flag", keywords: ["ca", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1e6", native: "\u{1F1E8}\u{1F1E6}" }], version: 2 }, "flag-cc": { id: "flag-cc", name: "Cocos (keeling) Islands Flag", keywords: ["cc", "keeling", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1e8", native: "\u{1F1E8}\u{1F1E8}" }], version: 2 }, "flag-cd": { id: "flag-cd", name: "Congo - Kinshasa Flag", keywords: ["cd", "democratic", "republic", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1e9", native: "\u{1F1E8}\u{1F1E9}" }], version: 2 }, "flag-cf": { id: "flag-cf", name: "Central African Republic Flag", keywords: ["cf", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1eb", native: "\u{1F1E8}\u{1F1EB}" }], version: 2 }, "flag-cg": { id: "flag-cg", name: "Congo - Brazzaville Flag", keywords: ["cg", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1ec", native: "\u{1F1E8}\u{1F1EC}" }], version: 2 }, "flag-ch": { id: "flag-ch", name: "Switzerland Flag", keywords: ["ch", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1ed", native: "\u{1F1E8}\u{1F1ED}" }], version: 2 }, "flag-ci": { id: "flag-ci", name: "C\xF4te D\u2019ivoire Flag", keywords: ["ci", "cote", "d", "ivoire", "ivory", "coast", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1ee", native: "\u{1F1E8}\u{1F1EE}" }], version: 2 }, "flag-ck": { id: "flag-ck", name: "Cook Islands Flag", keywords: ["ck", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1f0", native: "\u{1F1E8}\u{1F1F0}" }], version: 2 }, "flag-cl": { id: "flag-cl", name: "Chile Flag", keywords: ["cl", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1f1", native: "\u{1F1E8}\u{1F1F1}" }], version: 2 }, "flag-cm": { id: "flag-cm", name: "Cameroon Flag", keywords: ["cm", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1f2", native: "\u{1F1E8}\u{1F1F2}" }], version: 2 }, cn: { id: "cn", name: "China Flag", keywords: ["cn", "chinese", "prc", "country", "nation", "banner"], skins: [{ unified: "1f1e8-1f1f3", native: "\u{1F1E8}\u{1F1F3}" }], version: 1 }, "flag-co": { id: "flag-co", name: "Colombia Flag", keywords: ["co", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1f4", native: "\u{1F1E8}\u{1F1F4}" }], version: 2 }, "flag-cp": { id: "flag-cp", name: "Clipperton Island Flag", keywords: ["cp"], skins: [{ unified: "1f1e8-1f1f5", native: "\u{1F1E8}\u{1F1F5}" }], version: 2 }, "flag-cr": { id: "flag-cr", name: "Costa Rica Flag", keywords: ["cr", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1f7", native: "\u{1F1E8}\u{1F1F7}" }], version: 2 }, "flag-cu": { id: "flag-cu", name: "Cuba Flag", keywords: ["cu", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1fa", native: "\u{1F1E8}\u{1F1FA}" }], version: 2 }, "flag-cv": { id: "flag-cv", name: "Cape Verde Flag", keywords: ["cv", "cabo", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1fb", native: "\u{1F1E8}\u{1F1FB}" }], version: 2 }, "flag-cw": { id: "flag-cw", name: "Cura\xE7ao Flag", keywords: ["cw", "curacao", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1fc", native: "\u{1F1E8}\u{1F1FC}" }], version: 2 }, "flag-cx": { id: "flag-cx", name: "Christmas Island Flag", keywords: ["cx", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1fd", native: "\u{1F1E8}\u{1F1FD}" }], version: 2 }, "flag-cy": { id: "flag-cy", name: "Cyprus Flag", keywords: ["cy", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1fe", native: "\u{1F1E8}\u{1F1FE}" }], version: 2 }, "flag-cz": { id: "flag-cz", name: "Czechia Flag", keywords: ["cz", "nation", "country", "banner"], skins: [{ unified: "1f1e8-1f1ff", native: "\u{1F1E8}\u{1F1FF}" }], version: 2 }, de: { id: "de", name: "Germany Flag", keywords: ["de", "german", "nation", "country", "banner"], skins: [{ unified: "1f1e9-1f1ea", native: "\u{1F1E9}\u{1F1EA}" }], version: 1 }, "flag-dg": { id: "flag-dg", name: "Diego Garcia Flag", keywords: ["dg"], skins: [{ unified: "1f1e9-1f1ec", native: "\u{1F1E9}\u{1F1EC}" }], version: 2 }, "flag-dj": { id: "flag-dj", name: "Djibouti Flag", keywords: ["dj", "nation", "country", "banner"], skins: [{ unified: "1f1e9-1f1ef", native: "\u{1F1E9}\u{1F1EF}" }], version: 2 }, "flag-dk": { id: "flag-dk", name: "Denmark Flag", keywords: ["dk", "nation", "country", "banner"], skins: [{ unified: "1f1e9-1f1f0", native: "\u{1F1E9}\u{1F1F0}" }], version: 2 }, "flag-dm": { id: "flag-dm", name: "Dominica Flag", keywords: ["dm", "nation", "country", "banner"], skins: [{ unified: "1f1e9-1f1f2", native: "\u{1F1E9}\u{1F1F2}" }], version: 2 }, "flag-do": { id: "flag-do", name: "Dominican Republic Flag", keywords: ["do", "nation", "country", "banner"], skins: [{ unified: "1f1e9-1f1f4", native: "\u{1F1E9}\u{1F1F4}" }], version: 2 }, "flag-dz": { id: "flag-dz", name: "Algeria Flag", keywords: ["dz", "nation", "country", "banner"], skins: [{ unified: "1f1e9-1f1ff", native: "\u{1F1E9}\u{1F1FF}" }], version: 2 }, "flag-ea": { id: "flag-ea", name: "Ceuta & Melilla Flag", keywords: ["ea"], skins: [{ unified: "1f1ea-1f1e6", native: "\u{1F1EA}\u{1F1E6}" }], version: 2 }, "flag-ec": { id: "flag-ec", name: "Ecuador Flag", keywords: ["ec", "nation", "country", "banner"], skins: [{ unified: "1f1ea-1f1e8", native: "\u{1F1EA}\u{1F1E8}" }], version: 2 }, "flag-ee": { id: "flag-ee", name: "Estonia Flag", keywords: ["ee", "nation", "country", "banner"], skins: [{ unified: "1f1ea-1f1ea", native: "\u{1F1EA}\u{1F1EA}" }], version: 2 }, "flag-eg": { id: "flag-eg", name: "Egypt Flag", keywords: ["eg", "nation", "country", "banner"], skins: [{ unified: "1f1ea-1f1ec", native: "\u{1F1EA}\u{1F1EC}" }], version: 2 }, "flag-eh": { id: "flag-eh", name: "Western Sahara Flag", keywords: ["eh", "nation", "country", "banner"], skins: [{ unified: "1f1ea-1f1ed", native: "\u{1F1EA}\u{1F1ED}" }], version: 2 }, "flag-er": { id: "flag-er", name: "Eritrea Flag", keywords: ["er", "nation", "country", "banner"], skins: [{ unified: "1f1ea-1f1f7", native: "\u{1F1EA}\u{1F1F7}" }], version: 2 }, es: { id: "es", name: "Spain Flag", keywords: ["es", "nation", "country", "banner"], skins: [{ unified: "1f1ea-1f1f8", native: "\u{1F1EA}\u{1F1F8}" }], version: 1 }, "flag-et": { id: "flag-et", name: "Ethiopia Flag", keywords: ["et", "nation", "country", "banner"], skins: [{ unified: "1f1ea-1f1f9", native: "\u{1F1EA}\u{1F1F9}" }], version: 2 }, "flag-eu": { id: "flag-eu", name: "European Union Flag", keywords: ["eu", "banner"], skins: [{ unified: "1f1ea-1f1fa", native: "\u{1F1EA}\u{1F1FA}" }], version: 2 }, "flag-fi": { id: "flag-fi", name: "Finland Flag", keywords: ["fi", "nation", "country", "banner"], skins: [{ unified: "1f1eb-1f1ee", native: "\u{1F1EB}\u{1F1EE}" }], version: 2 }, "flag-fj": { id: "flag-fj", name: "Fiji Flag", keywords: ["fj", "nation", "country", "banner"], skins: [{ unified: "1f1eb-1f1ef", native: "\u{1F1EB}\u{1F1EF}" }], version: 2 }, "flag-fk": { id: "flag-fk", name: "Falkland Islands Flag", keywords: ["fk", "malvinas", "nation", "country", "banner"], skins: [{ unified: "1f1eb-1f1f0", native: "\u{1F1EB}\u{1F1F0}" }], version: 2 }, "flag-fm": { id: "flag-fm", name: "Micronesia Flag", keywords: ["fm", "federated", "states", "nation", "country", "banner"], skins: [{ unified: "1f1eb-1f1f2", native: "\u{1F1EB}\u{1F1F2}" }], version: 2 }, "flag-fo": { id: "flag-fo", name: "Faroe Islands Flag", keywords: ["fo", "nation", "country", "banner"], skins: [{ unified: "1f1eb-1f1f4", native: "\u{1F1EB}\u{1F1F4}" }], version: 2 }, fr: { id: "fr", name: "France Flag", keywords: ["fr", "banner", "nation", "french", "country"], skins: [{ unified: "1f1eb-1f1f7", native: "\u{1F1EB}\u{1F1F7}" }], version: 1 }, "flag-ga": { id: "flag-ga", name: "Gabon Flag", keywords: ["ga", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1e6", native: "\u{1F1EC}\u{1F1E6}" }], version: 2 }, gb: { id: "gb", name: "United Kingdom Flag", keywords: ["gb", "uk", "great", "britain", "northern", "ireland", "nation", "country", "banner", "british", "UK", "english", "england", "union", "jack"], skins: [{ unified: "1f1ec-1f1e7", native: "\u{1F1EC}\u{1F1E7}" }], version: 1 }, "flag-gd": { id: "flag-gd", name: "Grenada Flag", keywords: ["gd", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1e9", native: "\u{1F1EC}\u{1F1E9}" }], version: 2 }, "flag-ge": { id: "flag-ge", name: "Georgia Flag", keywords: ["ge", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1ea", native: "\u{1F1EC}\u{1F1EA}" }], version: 2 }, "flag-gf": { id: "flag-gf", name: "French Guiana Flag", keywords: ["gf", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1eb", native: "\u{1F1EC}\u{1F1EB}" }], version: 2 }, "flag-gg": { id: "flag-gg", name: "Guernsey Flag", keywords: ["gg", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1ec", native: "\u{1F1EC}\u{1F1EC}" }], version: 2 }, "flag-gh": { id: "flag-gh", name: "Ghana Flag", keywords: ["gh", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1ed", native: "\u{1F1EC}\u{1F1ED}" }], version: 2 }, "flag-gi": { id: "flag-gi", name: "Gibraltar Flag", keywords: ["gi", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1ee", native: "\u{1F1EC}\u{1F1EE}" }], version: 2 }, "flag-gl": { id: "flag-gl", name: "Greenland Flag", keywords: ["gl", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1f1", native: "\u{1F1EC}\u{1F1F1}" }], version: 2 }, "flag-gm": { id: "flag-gm", name: "Gambia Flag", keywords: ["gm", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1f2", native: "\u{1F1EC}\u{1F1F2}" }], version: 2 }, "flag-gn": { id: "flag-gn", name: "Guinea Flag", keywords: ["gn", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1f3", native: "\u{1F1EC}\u{1F1F3}" }], version: 2 }, "flag-gp": { id: "flag-gp", name: "Guadeloupe Flag", keywords: ["gp", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1f5", native: "\u{1F1EC}\u{1F1F5}" }], version: 2 }, "flag-gq": { id: "flag-gq", name: "Equatorial Guinea Flag", keywords: ["gq", "gn", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1f6", native: "\u{1F1EC}\u{1F1F6}" }], version: 2 }, "flag-gr": { id: "flag-gr", name: "Greece Flag", keywords: ["gr", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1f7", native: "\u{1F1EC}\u{1F1F7}" }], version: 2 }, "flag-gs": { id: "flag-gs", name: "South Georgia & South Sandwich Islands Flag", keywords: ["gs", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1f8", native: "\u{1F1EC}\u{1F1F8}" }], version: 2 }, "flag-gt": { id: "flag-gt", name: "Guatemala Flag", keywords: ["gt", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1f9", native: "\u{1F1EC}\u{1F1F9}" }], version: 2 }, "flag-gu": { id: "flag-gu", name: "Guam Flag", keywords: ["gu", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1fa", native: "\u{1F1EC}\u{1F1FA}" }], version: 2 }, "flag-gw": { id: "flag-gw", name: "Guinea-Bissau Flag", keywords: ["gw", "guinea", "bissau", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1fc", native: "\u{1F1EC}\u{1F1FC}" }], version: 2 }, "flag-gy": { id: "flag-gy", name: "Guyana Flag", keywords: ["gy", "nation", "country", "banner"], skins: [{ unified: "1f1ec-1f1fe", native: "\u{1F1EC}\u{1F1FE}" }], version: 2 }, "flag-hk": { id: "flag-hk", name: "Hong Kong Sar China Flag", keywords: ["hk", "nation", "country", "banner"], skins: [{ unified: "1f1ed-1f1f0", native: "\u{1F1ED}\u{1F1F0}" }], version: 2 }, "flag-hm": { id: "flag-hm", name: "Heard & Mcdonald Islands Flag", keywords: ["hm"], skins: [{ unified: "1f1ed-1f1f2", native: "\u{1F1ED}\u{1F1F2}" }], version: 2 }, "flag-hn": { id: "flag-hn", name: "Honduras Flag", keywords: ["hn", "nation", "country", "banner"], skins: [{ unified: "1f1ed-1f1f3", native: "\u{1F1ED}\u{1F1F3}" }], version: 2 }, "flag-hr": { id: "flag-hr", name: "Croatia Flag", keywords: ["hr", "nation", "country", "banner"], skins: [{ unified: "1f1ed-1f1f7", native: "\u{1F1ED}\u{1F1F7}" }], version: 2 }, "flag-ht": { id: "flag-ht", name: "Haiti Flag", keywords: ["ht", "nation", "country", "banner"], skins: [{ unified: "1f1ed-1f1f9", native: "\u{1F1ED}\u{1F1F9}" }], version: 2 }, "flag-hu": { id: "flag-hu", name: "Hungary Flag", keywords: ["hu", "nation", "country", "banner"], skins: [{ unified: "1f1ed-1f1fa", native: "\u{1F1ED}\u{1F1FA}" }], version: 2 }, "flag-ic": { id: "flag-ic", name: "Canary Islands Flag", keywords: ["ic", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1e8", native: "\u{1F1EE}\u{1F1E8}" }], version: 2 }, "flag-id": { id: "flag-id", name: "Indonesia Flag", keywords: ["id", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1e9", native: "\u{1F1EE}\u{1F1E9}" }], version: 2 }, "flag-ie": { id: "flag-ie", name: "Ireland Flag", keywords: ["ie", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1ea", native: "\u{1F1EE}\u{1F1EA}" }], version: 2 }, "flag-il": { id: "flag-il", name: "Israel Flag", keywords: ["il", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1f1", native: "\u{1F1EE}\u{1F1F1}" }], version: 2 }, "flag-im": { id: "flag-im", name: "Isle of Man Flag", keywords: ["im", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1f2", native: "\u{1F1EE}\u{1F1F2}" }], version: 2 }, "flag-in": { id: "flag-in", name: "India Flag", keywords: ["in", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1f3", native: "\u{1F1EE}\u{1F1F3}" }], version: 2 }, "flag-io": { id: "flag-io", name: "British Indian Ocean Territory Flag", keywords: ["io", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1f4", native: "\u{1F1EE}\u{1F1F4}" }], version: 2 }, "flag-iq": { id: "flag-iq", name: "Iraq Flag", keywords: ["iq", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1f6", native: "\u{1F1EE}\u{1F1F6}" }], version: 2 }, "flag-ir": { id: "flag-ir", name: "Iran Flag", keywords: ["ir", "islamic", "republic", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1f7", native: "\u{1F1EE}\u{1F1F7}" }], version: 2 }, "flag-is": { id: "flag-is", name: "Iceland Flag", keywords: ["is", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1f8", native: "\u{1F1EE}\u{1F1F8}" }], version: 2 }, it: { id: "it", name: "Italy Flag", keywords: ["it", "nation", "country", "banner"], skins: [{ unified: "1f1ee-1f1f9", native: "\u{1F1EE}\u{1F1F9}" }], version: 1 }, "flag-je": { id: "flag-je", name: "Jersey Flag", keywords: ["je", "nation", "country", "banner"], skins: [{ unified: "1f1ef-1f1ea", native: "\u{1F1EF}\u{1F1EA}" }], version: 2 }, "flag-jm": { id: "flag-jm", name: "Jamaica Flag", keywords: ["jm", "nation", "country", "banner"], skins: [{ unified: "1f1ef-1f1f2", native: "\u{1F1EF}\u{1F1F2}" }], version: 2 }, "flag-jo": { id: "flag-jo", name: "Jordan Flag", keywords: ["jo", "nation", "country", "banner"], skins: [{ unified: "1f1ef-1f1f4", native: "\u{1F1EF}\u{1F1F4}" }], version: 2 }, jp: { id: "jp", name: "Japan Flag", keywords: ["jp", "japanese", "nation", "country", "banner", "ja"], skins: [{ unified: "1f1ef-1f1f5", native: "\u{1F1EF}\u{1F1F5}" }], version: 1 }, "flag-ke": { id: "flag-ke", name: "Kenya Flag", keywords: ["ke", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1ea", native: "\u{1F1F0}\u{1F1EA}" }], version: 2 }, "flag-kg": { id: "flag-kg", name: "Kyrgyzstan Flag", keywords: ["kg", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1ec", native: "\u{1F1F0}\u{1F1EC}" }], version: 2 }, "flag-kh": { id: "flag-kh", name: "Cambodia Flag", keywords: ["kh", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1ed", native: "\u{1F1F0}\u{1F1ED}" }], version: 2 }, "flag-ki": { id: "flag-ki", name: "Kiribati Flag", keywords: ["ki", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1ee", native: "\u{1F1F0}\u{1F1EE}" }], version: 2 }, "flag-km": { id: "flag-km", name: "Comoros Flag", keywords: ["km", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1f2", native: "\u{1F1F0}\u{1F1F2}" }], version: 2 }, "flag-kn": { id: "flag-kn", name: "St. Kitts & Nevis Flag", keywords: ["kn", "st", "saint", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1f3", native: "\u{1F1F0}\u{1F1F3}" }], version: 2 }, "flag-kp": { id: "flag-kp", name: "North Korea Flag", keywords: ["kp", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1f5", native: "\u{1F1F0}\u{1F1F5}" }], version: 2 }, kr: { id: "kr", name: "South Korea Flag", keywords: ["kr", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1f7", native: "\u{1F1F0}\u{1F1F7}" }], version: 1 }, "flag-kw": { id: "flag-kw", name: "Kuwait Flag", keywords: ["kw", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1fc", native: "\u{1F1F0}\u{1F1FC}" }], version: 2 }, "flag-ky": { id: "flag-ky", name: "Cayman Islands Flag", keywords: ["ky", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1fe", native: "\u{1F1F0}\u{1F1FE}" }], version: 2 }, "flag-kz": { id: "flag-kz", name: "Kazakhstan Flag", keywords: ["kz", "nation", "country", "banner"], skins: [{ unified: "1f1f0-1f1ff", native: "\u{1F1F0}\u{1F1FF}" }], version: 2 }, "flag-la": { id: "flag-la", name: "Laos Flag", keywords: ["la", "lao", "democratic", "republic", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1e6", native: "\u{1F1F1}\u{1F1E6}" }], version: 2 }, "flag-lb": { id: "flag-lb", name: "Lebanon Flag", keywords: ["lb", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1e7", native: "\u{1F1F1}\u{1F1E7}" }], version: 2 }, "flag-lc": { id: "flag-lc", name: "St. Lucia Flag", keywords: ["lc", "st", "saint", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1e8", native: "\u{1F1F1}\u{1F1E8}" }], version: 2 }, "flag-li": { id: "flag-li", name: "Liechtenstein Flag", keywords: ["li", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1ee", native: "\u{1F1F1}\u{1F1EE}" }], version: 2 }, "flag-lk": { id: "flag-lk", name: "Sri Lanka Flag", keywords: ["lk", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1f0", native: "\u{1F1F1}\u{1F1F0}" }], version: 2 }, "flag-lr": { id: "flag-lr", name: "Liberia Flag", keywords: ["lr", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1f7", native: "\u{1F1F1}\u{1F1F7}" }], version: 2 }, "flag-ls": { id: "flag-ls", name: "Lesotho Flag", keywords: ["ls", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1f8", native: "\u{1F1F1}\u{1F1F8}" }], version: 2 }, "flag-lt": { id: "flag-lt", name: "Lithuania Flag", keywords: ["lt", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1f9", native: "\u{1F1F1}\u{1F1F9}" }], version: 2 }, "flag-lu": { id: "flag-lu", name: "Luxembourg Flag", keywords: ["lu", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1fa", native: "\u{1F1F1}\u{1F1FA}" }], version: 2 }, "flag-lv": { id: "flag-lv", name: "Latvia Flag", keywords: ["lv", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1fb", native: "\u{1F1F1}\u{1F1FB}" }], version: 2 }, "flag-ly": { id: "flag-ly", name: "Libya Flag", keywords: ["ly", "nation", "country", "banner"], skins: [{ unified: "1f1f1-1f1fe", native: "\u{1F1F1}\u{1F1FE}" }], version: 2 }, "flag-ma": { id: "flag-ma", name: "Morocco Flag", keywords: ["ma", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1e6", native: "\u{1F1F2}\u{1F1E6}" }], version: 2 }, "flag-mc": { id: "flag-mc", name: "Monaco Flag", keywords: ["mc", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1e8", native: "\u{1F1F2}\u{1F1E8}" }], version: 2 }, "flag-md": { id: "flag-md", name: "Moldova Flag", keywords: ["md", "republic", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1e9", native: "\u{1F1F2}\u{1F1E9}" }], version: 2 }, "flag-me": { id: "flag-me", name: "Montenegro Flag", keywords: ["me", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1ea", native: "\u{1F1F2}\u{1F1EA}" }], version: 2 }, "flag-mf": { id: "flag-mf", name: "St. Martin Flag", keywords: ["mf", "st"], skins: [{ unified: "1f1f2-1f1eb", native: "\u{1F1F2}\u{1F1EB}" }], version: 2 }, "flag-mg": { id: "flag-mg", name: "Madagascar Flag", keywords: ["mg", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1ec", native: "\u{1F1F2}\u{1F1EC}" }], version: 2 }, "flag-mh": { id: "flag-mh", name: "Marshall Islands Flag", keywords: ["mh", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1ed", native: "\u{1F1F2}\u{1F1ED}" }], version: 2 }, "flag-mk": { id: "flag-mk", name: "North Macedonia Flag", keywords: ["mk", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f0", native: "\u{1F1F2}\u{1F1F0}" }], version: 2 }, "flag-ml": { id: "flag-ml", name: "Mali Flag", keywords: ["ml", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f1", native: "\u{1F1F2}\u{1F1F1}" }], version: 2 }, "flag-mm": { id: "flag-mm", name: "Myanmar (burma) Flag", keywords: ["mm", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f2", native: "\u{1F1F2}\u{1F1F2}" }], version: 2 }, "flag-mn": { id: "flag-mn", name: "Mongolia Flag", keywords: ["mn", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f3", native: "\u{1F1F2}\u{1F1F3}" }], version: 2 }, "flag-mo": { id: "flag-mo", name: "Macao Sar China Flag", keywords: ["mo", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f4", native: "\u{1F1F2}\u{1F1F4}" }], version: 2 }, "flag-mp": { id: "flag-mp", name: "Northern Mariana Islands Flag", keywords: ["mp", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f5", native: "\u{1F1F2}\u{1F1F5}" }], version: 2 }, "flag-mq": { id: "flag-mq", name: "Martinique Flag", keywords: ["mq", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f6", native: "\u{1F1F2}\u{1F1F6}" }], version: 2 }, "flag-mr": { id: "flag-mr", name: "Mauritania Flag", keywords: ["mr", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f7", native: "\u{1F1F2}\u{1F1F7}" }], version: 2 }, "flag-ms": { id: "flag-ms", name: "Montserrat Flag", keywords: ["ms", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f8", native: "\u{1F1F2}\u{1F1F8}" }], version: 2 }, "flag-mt": { id: "flag-mt", name: "Malta Flag", keywords: ["mt", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1f9", native: "\u{1F1F2}\u{1F1F9}" }], version: 2 }, "flag-mu": { id: "flag-mu", name: "Mauritius Flag", keywords: ["mu", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1fa", native: "\u{1F1F2}\u{1F1FA}" }], version: 2 }, "flag-mv": { id: "flag-mv", name: "Maldives Flag", keywords: ["mv", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1fb", native: "\u{1F1F2}\u{1F1FB}" }], version: 2 }, "flag-mw": { id: "flag-mw", name: "Malawi Flag", keywords: ["mw", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1fc", native: "\u{1F1F2}\u{1F1FC}" }], version: 2 }, "flag-mx": { id: "flag-mx", name: "Mexico Flag", keywords: ["mx", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1fd", native: "\u{1F1F2}\u{1F1FD}" }], version: 2 }, "flag-my": { id: "flag-my", name: "Malaysia Flag", keywords: ["my", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1fe", native: "\u{1F1F2}\u{1F1FE}" }], version: 2 }, "flag-mz": { id: "flag-mz", name: "Mozambique Flag", keywords: ["mz", "nation", "country", "banner"], skins: [{ unified: "1f1f2-1f1ff", native: "\u{1F1F2}\u{1F1FF}" }], version: 2 }, "flag-na": { id: "flag-na", name: "Namibia Flag", keywords: ["na", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1e6", native: "\u{1F1F3}\u{1F1E6}" }], version: 2 }, "flag-nc": { id: "flag-nc", name: "New Caledonia Flag", keywords: ["nc", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1e8", native: "\u{1F1F3}\u{1F1E8}" }], version: 2 }, "flag-ne": { id: "flag-ne", name: "Niger Flag", keywords: ["ne", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1ea", native: "\u{1F1F3}\u{1F1EA}" }], version: 2 }, "flag-nf": { id: "flag-nf", name: "Norfolk Island Flag", keywords: ["nf", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1eb", native: "\u{1F1F3}\u{1F1EB}" }], version: 2 }, "flag-ng": { id: "flag-ng", name: "Nigeria Flag", keywords: ["ng", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1ec", native: "\u{1F1F3}\u{1F1EC}" }], version: 2 }, "flag-ni": { id: "flag-ni", name: "Nicaragua Flag", keywords: ["ni", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1ee", native: "\u{1F1F3}\u{1F1EE}" }], version: 2 }, "flag-nl": { id: "flag-nl", name: "Netherlands Flag", keywords: ["nl", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1f1", native: "\u{1F1F3}\u{1F1F1}" }], version: 2 }, "flag-no": { id: "flag-no", name: "Norway Flag", keywords: ["no", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1f4", native: "\u{1F1F3}\u{1F1F4}" }], version: 2 }, "flag-np": { id: "flag-np", name: "Nepal Flag", keywords: ["np", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1f5", native: "\u{1F1F3}\u{1F1F5}" }], version: 2 }, "flag-nr": { id: "flag-nr", name: "Nauru Flag", keywords: ["nr", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1f7", native: "\u{1F1F3}\u{1F1F7}" }], version: 2 }, "flag-nu": { id: "flag-nu", name: "Niue Flag", keywords: ["nu", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1fa", native: "\u{1F1F3}\u{1F1FA}" }], version: 2 }, "flag-nz": { id: "flag-nz", name: "New Zealand Flag", keywords: ["nz", "nation", "country", "banner"], skins: [{ unified: "1f1f3-1f1ff", native: "\u{1F1F3}\u{1F1FF}" }], version: 2 }, "flag-om": { id: "flag-om", name: "Oman Flag", keywords: ["om", "symbol", "nation", "country", "banner"], skins: [{ unified: "1f1f4-1f1f2", native: "\u{1F1F4}\u{1F1F2}" }], version: 2 }, "flag-pa": { id: "flag-pa", name: "Panama Flag", keywords: ["pa", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1e6", native: "\u{1F1F5}\u{1F1E6}" }], version: 2 }, "flag-pe": { id: "flag-pe", name: "Peru Flag", keywords: ["pe", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1ea", native: "\u{1F1F5}\u{1F1EA}" }], version: 2 }, "flag-pf": { id: "flag-pf", name: "French Polynesia Flag", keywords: ["pf", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1eb", native: "\u{1F1F5}\u{1F1EB}" }], version: 2 }, "flag-pg": { id: "flag-pg", name: "Papua New Guinea Flag", keywords: ["pg", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1ec", native: "\u{1F1F5}\u{1F1EC}" }], version: 2 }, "flag-ph": { id: "flag-ph", name: "Philippines Flag", keywords: ["ph", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1ed", native: "\u{1F1F5}\u{1F1ED}" }], version: 2 }, "flag-pk": { id: "flag-pk", name: "Pakistan Flag", keywords: ["pk", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1f0", native: "\u{1F1F5}\u{1F1F0}" }], version: 2 }, "flag-pl": { id: "flag-pl", name: "Poland Flag", keywords: ["pl", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1f1", native: "\u{1F1F5}\u{1F1F1}" }], version: 2 }, "flag-pm": { id: "flag-pm", name: "St. Pierre & Miquelon Flag", keywords: ["pm", "st", "saint", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1f2", native: "\u{1F1F5}\u{1F1F2}" }], version: 2 }, "flag-pn": { id: "flag-pn", name: "Pitcairn Islands Flag", keywords: ["pn", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1f3", native: "\u{1F1F5}\u{1F1F3}" }], version: 2 }, "flag-pr": { id: "flag-pr", name: "Puerto Rico Flag", keywords: ["pr", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1f7", native: "\u{1F1F5}\u{1F1F7}" }], version: 2 }, "flag-ps": { id: "flag-ps", name: "Palestinian Territories Flag", keywords: ["ps", "palestine", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1f8", native: "\u{1F1F5}\u{1F1F8}" }], version: 2 }, "flag-pt": { id: "flag-pt", name: "Portugal Flag", keywords: ["pt", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1f9", native: "\u{1F1F5}\u{1F1F9}" }], version: 2 }, "flag-pw": { id: "flag-pw", name: "Palau Flag", keywords: ["pw", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1fc", native: "\u{1F1F5}\u{1F1FC}" }], version: 2 }, "flag-py": { id: "flag-py", name: "Paraguay Flag", keywords: ["py", "nation", "country", "banner"], skins: [{ unified: "1f1f5-1f1fe", native: "\u{1F1F5}\u{1F1FE}" }], version: 2 }, "flag-qa": { id: "flag-qa", name: "Qatar Flag", keywords: ["qa", "nation", "country", "banner"], skins: [{ unified: "1f1f6-1f1e6", native: "\u{1F1F6}\u{1F1E6}" }], version: 2 }, "flag-re": { id: "flag-re", name: "R\xE9union Flag", keywords: ["re", "reunion", "nation", "country", "banner"], skins: [{ unified: "1f1f7-1f1ea", native: "\u{1F1F7}\u{1F1EA}" }], version: 2 }, "flag-ro": { id: "flag-ro", name: "Romania Flag", keywords: ["ro", "nation", "country", "banner"], skins: [{ unified: "1f1f7-1f1f4", native: "\u{1F1F7}\u{1F1F4}" }], version: 2 }, "flag-rs": { id: "flag-rs", name: "Serbia Flag", keywords: ["rs", "nation", "country", "banner"], skins: [{ unified: "1f1f7-1f1f8", native: "\u{1F1F7}\u{1F1F8}" }], version: 2 }, ru: { id: "ru", name: "Russia Flag", keywords: ["ru", "russian", "federation", "nation", "country", "banner"], skins: [{ unified: "1f1f7-1f1fa", native: "\u{1F1F7}\u{1F1FA}" }], version: 1 }, "flag-rw": { id: "flag-rw", name: "Rwanda Flag", keywords: ["rw", "nation", "country", "banner"], skins: [{ unified: "1f1f7-1f1fc", native: "\u{1F1F7}\u{1F1FC}" }], version: 2 }, "flag-sa": { id: "flag-sa", name: "Saudi Arabia Flag", keywords: ["sa", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1e6", native: "\u{1F1F8}\u{1F1E6}" }], version: 2 }, "flag-sb": { id: "flag-sb", name: "Solomon Islands Flag", keywords: ["sb", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1e7", native: "\u{1F1F8}\u{1F1E7}" }], version: 2 }, "flag-sc": { id: "flag-sc", name: "Seychelles Flag", keywords: ["sc", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1e8", native: "\u{1F1F8}\u{1F1E8}" }], version: 2 }, "flag-sd": { id: "flag-sd", name: "Sudan Flag", keywords: ["sd", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1e9", native: "\u{1F1F8}\u{1F1E9}" }], version: 2 }, "flag-se": { id: "flag-se", name: "Sweden Flag", keywords: ["se", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1ea", native: "\u{1F1F8}\u{1F1EA}" }], version: 2 }, "flag-sg": { id: "flag-sg", name: "Singapore Flag", keywords: ["sg", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1ec", native: "\u{1F1F8}\u{1F1EC}" }], version: 2 }, "flag-sh": { id: "flag-sh", name: "St. Helena Flag", keywords: ["sh", "st", "saint", "ascension", "tristan", "cunha", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1ed", native: "\u{1F1F8}\u{1F1ED}" }], version: 2 }, "flag-si": { id: "flag-si", name: "Slovenia Flag", keywords: ["si", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1ee", native: "\u{1F1F8}\u{1F1EE}" }], version: 2 }, "flag-sj": { id: "flag-sj", name: "Svalbard & Jan Mayen Flag", keywords: ["sj"], skins: [{ unified: "1f1f8-1f1ef", native: "\u{1F1F8}\u{1F1EF}" }], version: 2 }, "flag-sk": { id: "flag-sk", name: "Slovakia Flag", keywords: ["sk", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1f0", native: "\u{1F1F8}\u{1F1F0}" }], version: 2 }, "flag-sl": { id: "flag-sl", name: "Sierra Leone Flag", keywords: ["sl", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1f1", native: "\u{1F1F8}\u{1F1F1}" }], version: 2 }, "flag-sm": { id: "flag-sm", name: "San Marino Flag", keywords: ["sm", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1f2", native: "\u{1F1F8}\u{1F1F2}" }], version: 2 }, "flag-sn": { id: "flag-sn", name: "Senegal Flag", keywords: ["sn", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1f3", native: "\u{1F1F8}\u{1F1F3}" }], version: 2 }, "flag-so": { id: "flag-so", name: "Somalia Flag", keywords: ["so", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1f4", native: "\u{1F1F8}\u{1F1F4}" }], version: 2 }, "flag-sr": { id: "flag-sr", name: "Suriname Flag", keywords: ["sr", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1f7", native: "\u{1F1F8}\u{1F1F7}" }], version: 2 }, "flag-ss": { id: "flag-ss", name: "South Sudan Flag", keywords: ["ss", "sd", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1f8", native: "\u{1F1F8}\u{1F1F8}" }], version: 2 }, "flag-st": { id: "flag-st", name: "S\xE3o Tom\xE9 & Pr\xEDncipe Flag", keywords: ["st", "sao", "tome", "principe", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1f9", native: "\u{1F1F8}\u{1F1F9}" }], version: 2 }, "flag-sv": { id: "flag-sv", name: "El Salvador Flag", keywords: ["sv", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1fb", native: "\u{1F1F8}\u{1F1FB}" }], version: 2 }, "flag-sx": { id: "flag-sx", name: "Sint Maarten Flag", keywords: ["sx", "dutch", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1fd", native: "\u{1F1F8}\u{1F1FD}" }], version: 2 }, "flag-sy": { id: "flag-sy", name: "Syria Flag", keywords: ["sy", "syrian", "arab", "republic", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1fe", native: "\u{1F1F8}\u{1F1FE}" }], version: 2 }, "flag-sz": { id: "flag-sz", name: "Eswatini Flag", keywords: ["sz", "nation", "country", "banner"], skins: [{ unified: "1f1f8-1f1ff", native: "\u{1F1F8}\u{1F1FF}" }], version: 2 }, "flag-ta": { id: "flag-ta", name: "Tristan Da Cunha Flag", keywords: ["ta"], skins: [{ unified: "1f1f9-1f1e6", native: "\u{1F1F9}\u{1F1E6}" }], version: 2 }, "flag-tc": { id: "flag-tc", name: "Turks & Caicos Islands Flag", keywords: ["tc", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1e8", native: "\u{1F1F9}\u{1F1E8}" }], version: 2 }, "flag-td": { id: "flag-td", name: "Chad Flag", keywords: ["td", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1e9", native: "\u{1F1F9}\u{1F1E9}" }], version: 2 }, "flag-tf": { id: "flag-tf", name: "French Southern Territories Flag", keywords: ["tf", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1eb", native: "\u{1F1F9}\u{1F1EB}" }], version: 2 }, "flag-tg": { id: "flag-tg", name: "Togo Flag", keywords: ["tg", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1ec", native: "\u{1F1F9}\u{1F1EC}" }], version: 2 }, "flag-th": { id: "flag-th", name: "Thailand Flag", keywords: ["th", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1ed", native: "\u{1F1F9}\u{1F1ED}" }], version: 2 }, "flag-tj": { id: "flag-tj", name: "Tajikistan Flag", keywords: ["tj", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1ef", native: "\u{1F1F9}\u{1F1EF}" }], version: 2 }, "flag-tk": { id: "flag-tk", name: "Tokelau Flag", keywords: ["tk", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1f0", native: "\u{1F1F9}\u{1F1F0}" }], version: 2 }, "flag-tl": { id: "flag-tl", name: "Timor-Leste Flag", keywords: ["tl", "timor", "leste", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1f1", native: "\u{1F1F9}\u{1F1F1}" }], version: 2 }, "flag-tm": { id: "flag-tm", name: "Turkmenistan Flag", keywords: ["tm", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1f2", native: "\u{1F1F9}\u{1F1F2}" }], version: 2 }, "flag-tn": { id: "flag-tn", name: "Tunisia Flag", keywords: ["tn", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1f3", native: "\u{1F1F9}\u{1F1F3}" }], version: 2 }, "flag-to": { id: "flag-to", name: "Tonga Flag", keywords: ["to", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1f4", native: "\u{1F1F9}\u{1F1F4}" }], version: 2 }, "flag-tr": { id: "flag-tr", name: "Turkey Flag", keywords: ["tr", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1f7", native: "\u{1F1F9}\u{1F1F7}" }], version: 2 }, "flag-tt": { id: "flag-tt", name: "Trinidad & Tobago Flag", keywords: ["tt", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1f9", native: "\u{1F1F9}\u{1F1F9}" }], version: 2 }, "flag-tv": { id: "flag-tv", name: "Tuvalu Flag", keywords: ["tv", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1fb", native: "\u{1F1F9}\u{1F1FB}" }], version: 2 }, "flag-tw": { id: "flag-tw", name: "Taiwan Flag", keywords: ["tw", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1fc", native: "\u{1F1F9}\u{1F1FC}" }], version: 2 }, "flag-tz": { id: "flag-tz", name: "Tanzania Flag", keywords: ["tz", "united", "republic", "nation", "country", "banner"], skins: [{ unified: "1f1f9-1f1ff", native: "\u{1F1F9}\u{1F1FF}" }], version: 2 }, "flag-ua": { id: "flag-ua", name: "Ukraine Flag", keywords: ["ua", "nation", "country", "banner"], skins: [{ unified: "1f1fa-1f1e6", native: "\u{1F1FA}\u{1F1E6}" }], version: 2 }, "flag-ug": { id: "flag-ug", name: "Uganda Flag", keywords: ["ug", "nation", "country", "banner"], skins: [{ unified: "1f1fa-1f1ec", native: "\u{1F1FA}\u{1F1EC}" }], version: 2 }, "flag-um": { id: "flag-um", name: "U.s. Outlying Islands Flag", keywords: ["um", "u", "s"], skins: [{ unified: "1f1fa-1f1f2", native: "\u{1F1FA}\u{1F1F2}" }], version: 2 }, "flag-un": { id: "flag-un", name: "United Nations Flag", keywords: ["un", "banner"], skins: [{ unified: "1f1fa-1f1f3", native: "\u{1F1FA}\u{1F1F3}" }], version: 4 }, us: { id: "us", name: "United States Flag", keywords: ["us", "america", "nation", "country", "banner"], skins: [{ unified: "1f1fa-1f1f8", native: "\u{1F1FA}\u{1F1F8}" }], version: 1 }, "flag-uy": { id: "flag-uy", name: "Uruguay Flag", keywords: ["uy", "nation", "country", "banner"], skins: [{ unified: "1f1fa-1f1fe", native: "\u{1F1FA}\u{1F1FE}" }], version: 2 }, "flag-uz": { id: "flag-uz", name: "Uzbekistan Flag", keywords: ["uz", "nation", "country", "banner"], skins: [{ unified: "1f1fa-1f1ff", native: "\u{1F1FA}\u{1F1FF}" }], version: 2 }, "flag-va": { id: "flag-va", name: "Vatican City Flag", keywords: ["va", "nation", "country", "banner"], skins: [{ unified: "1f1fb-1f1e6", native: "\u{1F1FB}\u{1F1E6}" }], version: 2 }, "flag-vc": { id: "flag-vc", name: "St. Vincent & Grenadines Flag", keywords: ["vc", "st", "saint", "nation", "country", "banner"], skins: [{ unified: "1f1fb-1f1e8", native: "\u{1F1FB}\u{1F1E8}" }], version: 2 }, "flag-ve": { id: "flag-ve", name: "Venezuela Flag", keywords: ["ve", "bolivarian", "republic", "nation", "country", "banner"], skins: [{ unified: "1f1fb-1f1ea", native: "\u{1F1FB}\u{1F1EA}" }], version: 2 }, "flag-vg": { id: "flag-vg", name: "British Virgin Islands Flag", keywords: ["vg", "bvi", "nation", "country", "banner"], skins: [{ unified: "1f1fb-1f1ec", native: "\u{1F1FB}\u{1F1EC}" }], version: 2 }, "flag-vi": { id: "flag-vi", name: "U.s. Virgin Islands Flag", keywords: ["vi", "u", "s", "us", "nation", "country", "banner"], skins: [{ unified: "1f1fb-1f1ee", native: "\u{1F1FB}\u{1F1EE}" }], version: 2 }, "flag-vn": { id: "flag-vn", name: "Vietnam Flag", keywords: ["vn", "viet", "nam", "nation", "country", "banner"], skins: [{ unified: "1f1fb-1f1f3", native: "\u{1F1FB}\u{1F1F3}" }], version: 2 }, "flag-vu": { id: "flag-vu", name: "Vanuatu Flag", keywords: ["vu", "nation", "country", "banner"], skins: [{ unified: "1f1fb-1f1fa", native: "\u{1F1FB}\u{1F1FA}" }], version: 2 }, "flag-wf": { id: "flag-wf", name: "Wallis & Futuna Flag", keywords: ["wf", "nation", "country", "banner"], skins: [{ unified: "1f1fc-1f1eb", native: "\u{1F1FC}\u{1F1EB}" }], version: 2 }, "flag-ws": { id: "flag-ws", name: "Samoa Flag", keywords: ["ws", "nation", "country", "banner"], skins: [{ unified: "1f1fc-1f1f8", native: "\u{1F1FC}\u{1F1F8}" }], version: 2 }, "flag-xk": { id: "flag-xk", name: "Kosovo Flag", keywords: ["xk", "nation", "country", "banner"], skins: [{ unified: "1f1fd-1f1f0", native: "\u{1F1FD}\u{1F1F0}" }], version: 2 }, "flag-ye": { id: "flag-ye", name: "Yemen Flag", keywords: ["ye", "nation", "country", "banner"], skins: [{ unified: "1f1fe-1f1ea", native: "\u{1F1FE}\u{1F1EA}" }], version: 2 }, "flag-yt": { id: "flag-yt", name: "Mayotte Flag", keywords: ["yt", "nation", "country", "banner"], skins: [{ unified: "1f1fe-1f1f9", native: "\u{1F1FE}\u{1F1F9}" }], version: 2 }, "flag-za": { id: "flag-za", name: "South Africa Flag", keywords: ["za", "nation", "country", "banner"], skins: [{ unified: "1f1ff-1f1e6", native: "\u{1F1FF}\u{1F1E6}" }], version: 2 }, "flag-zm": { id: "flag-zm", name: "Zambia Flag", keywords: ["zm", "nation", "country", "banner"], skins: [{ unified: "1f1ff-1f1f2", native: "\u{1F1FF}\u{1F1F2}" }], version: 2 }, "flag-zw": { id: "flag-zw", name: "Zimbabwe Flag", keywords: ["zw", "nation", "country", "banner"], skins: [{ unified: "1f1ff-1f1fc", native: "\u{1F1FF}\u{1F1FC}" }], version: 2 }, "flag-england": { id: "flag-england", name: "England Flag", keywords: ["english"], skins: [{ unified: "1f3f4-e0067-e0062-e0065-e006e-e0067-e007f", native: "\u{1F3F4}\u{E0067}\u{E0062}\u{E0065}\u{E006E}\u{E0067}\u{E007F}" }], version: 5 }, "flag-scotland": { id: "flag-scotland", name: "Scotland Flag", keywords: ["scottish"], skins: [{ unified: "1f3f4-e0067-e0062-e0073-e0063-e0074-e007f", native: "\u{1F3F4}\u{E0067}\u{E0062}\u{E0073}\u{E0063}\u{E0074}\u{E007F}" }], version: 5 }, "flag-wales": { id: "flag-wales", name: "Wales Flag", keywords: ["welsh"], skins: [{ unified: "1f3f4-e0067-e0062-e0077-e006c-e0073-e007f", native: "\u{1F3F4}\u{E0067}\u{E0062}\u{E0077}\u{E006C}\u{E0073}\u{E007F}" }], version: 5 } }, aliases: { satisfied: "laughing", grinning_face_with_star_eyes: "star-struck", grinning_face_with_one_large_and_one_small_eye: "zany_face", smiling_face_with_smiling_eyes_and_hand_covering_mouth: "face_with_hand_over_mouth", face_with_finger_covering_closed_lips: "shushing_face", face_with_one_eyebrow_raised: "face_with_raised_eyebrow", face_with_open_mouth_vomiting: "face_vomiting", shocked_face_with_exploding_head: "exploding_head", serious_face_with_symbols_covering_mouth: "face_with_symbols_on_mouth", poop: "hankey", shit: "hankey", collision: "boom", raised_hand: "hand", hand_with_index_and_middle_fingers_crossed: "crossed_fingers", sign_of_the_horns: "the_horns", reversed_hand_with_middle_finger_extended: "middle_finger", thumbsup: "+1", thumbsdown: "-1", punch: "facepunch", mother_christmas: "mrs_claus", running: "runner", "man-with-bunny-ears-partying": "men-with-bunny-ears-partying", "woman-with-bunny-ears-partying": "women-with-bunny-ears-partying", women_holding_hands: "two_women_holding_hands", woman_and_man_holding_hands: "man_and_woman_holding_hands", couple: "man_and_woman_holding_hands", men_holding_hands: "two_men_holding_hands", paw_prints: "feet", flipper: "dolphin", honeybee: "bee", lady_beetle: "ladybug", cooking: "fried_egg", knife: "hocho", red_car: "car", sailboat: "boat", waxing_gibbous_moon: "moon", sun_small_cloud: "mostly_sunny", sun_behind_cloud: "barely_sunny", sun_behind_rain_cloud: "partly_sunny_rain", lightning_cloud: "lightning", tornado_cloud: "tornado", tshirt: "shirt", shoe: "mans_shoe", telephone: "phone", lantern: "izakaya_lantern", open_book: "book", envelope: "email", pencil: "memo", heavy_exclamation_mark: "exclamation", staff_of_aesculapius: "medical_symbol", "flag-cn": "cn", "flag-de": "de", "flag-es": "es", "flag-fr": "fr", uk: "gb", "flag-gb": "gb", "flag-it": "it", "flag-jp": "jp", "flag-kr": "kr", "flag-ru": "ru", "flag-us": "us" }, sheet: { cols: 61, rows: 61 } };

// node_modules/emoji-mart/dist/module.js
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $c770c458706daa72$export$2e2bcd8739ae039(obj, key, value) {
  if (key in obj) Object.defineProperty(obj, key, {
    value,
    enumerable: true,
    configurable: true,
    writable: true
  });
  else obj[key] = value;
  return obj;
}
var $fb96b826c0c5f37a$var$n;
var $fb96b826c0c5f37a$export$41c562ebe57d11e2;
var $fb96b826c0c5f37a$var$u;
var $fb96b826c0c5f37a$export$a8257692ac88316c;
var $fb96b826c0c5f37a$var$t;
var $fb96b826c0c5f37a$var$r;
var $fb96b826c0c5f37a$var$o;
var $fb96b826c0c5f37a$var$f;
var $fb96b826c0c5f37a$var$e = {};
var $fb96b826c0c5f37a$var$c = [];
var $fb96b826c0c5f37a$var$s = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
function $fb96b826c0c5f37a$var$a(n1, l1) {
  for (var u1 in l1) n1[u1] = l1[u1];
  return n1;
}
function $fb96b826c0c5f37a$var$h(n2) {
  var l2 = n2.parentNode;
  l2 && l2.removeChild(n2);
}
function $fb96b826c0c5f37a$export$c8a8987d4410bf2d(l3, u2, i1) {
  var t1, r1, o1, f1 = {};
  for (o1 in u2) "key" == o1 ? t1 = u2[o1] : "ref" == o1 ? r1 = u2[o1] : f1[o1] = u2[o1];
  if (arguments.length > 2 && (f1.children = arguments.length > 3 ? $fb96b826c0c5f37a$var$n.call(arguments, 2) : i1), "function" == typeof l3 && null != l3.defaultProps) for (o1 in l3.defaultProps) void 0 === f1[o1] && (f1[o1] = l3.defaultProps[o1]);
  return $fb96b826c0c5f37a$var$y(l3, f1, t1, r1, null);
}
function $fb96b826c0c5f37a$var$y(n3, i2, t2, r2, o2) {
  var f2 = {
    type: n3,
    props: i2,
    key: t2,
    ref: r2,
    __k: null,
    __: null,
    __b: 0,
    __e: null,
    __d: void 0,
    __c: null,
    __h: null,
    constructor: void 0,
    __v: null == o2 ? ++$fb96b826c0c5f37a$var$u : o2
  };
  return null == o2 && null != $fb96b826c0c5f37a$export$41c562ebe57d11e2.vnode && $fb96b826c0c5f37a$export$41c562ebe57d11e2.vnode(f2), f2;
}
function $fb96b826c0c5f37a$export$7d1e3a5e95ceca43() {
  return {
    current: null
  };
}
function $fb96b826c0c5f37a$export$ffb0004e005737fa(n4) {
  return n4.children;
}
function $fb96b826c0c5f37a$export$16fa2f45be04daa8(n5, l4) {
  this.props = n5, this.context = l4;
}
function $fb96b826c0c5f37a$var$k(n6, l5) {
  if (null == l5) return n6.__ ? $fb96b826c0c5f37a$var$k(n6.__, n6.__.__k.indexOf(n6) + 1) : null;
  for (var u3; l5 < n6.__k.length; l5++) if (null != (u3 = n6.__k[l5]) && null != u3.__e) return u3.__e;
  return "function" == typeof n6.type ? $fb96b826c0c5f37a$var$k(n6) : null;
}
function $fb96b826c0c5f37a$var$b(n7) {
  var l6, u4;
  if (null != (n7 = n7.__) && null != n7.__c) {
    for (n7.__e = n7.__c.base = null, l6 = 0; l6 < n7.__k.length; l6++) if (null != (u4 = n7.__k[l6]) && null != u4.__e) {
      n7.__e = n7.__c.base = u4.__e;
      break;
    }
    return $fb96b826c0c5f37a$var$b(n7);
  }
}
function $fb96b826c0c5f37a$var$m(n8) {
  (!n8.__d && (n8.__d = true) && $fb96b826c0c5f37a$var$t.push(n8) && !$fb96b826c0c5f37a$var$g.__r++ || $fb96b826c0c5f37a$var$o !== $fb96b826c0c5f37a$export$41c562ebe57d11e2.debounceRendering) && (($fb96b826c0c5f37a$var$o = $fb96b826c0c5f37a$export$41c562ebe57d11e2.debounceRendering) || $fb96b826c0c5f37a$var$r)($fb96b826c0c5f37a$var$g);
}
function $fb96b826c0c5f37a$var$g() {
  for (var n9; $fb96b826c0c5f37a$var$g.__r = $fb96b826c0c5f37a$var$t.length; ) n9 = $fb96b826c0c5f37a$var$t.sort(function(n10, l7) {
    return n10.__v.__b - l7.__v.__b;
  }), $fb96b826c0c5f37a$var$t = [], n9.some(function(n11) {
    var l8, u5, i3, t3, r3, o3;
    n11.__d && (r3 = (t3 = (l8 = n11).__v).__e, (o3 = l8.__P) && (u5 = [], (i3 = $fb96b826c0c5f37a$var$a({}, t3)).__v = t3.__v + 1, $fb96b826c0c5f37a$var$j(o3, t3, i3, l8.__n, void 0 !== o3.ownerSVGElement, null != t3.__h ? [
      r3
    ] : null, u5, null == r3 ? $fb96b826c0c5f37a$var$k(t3) : r3, t3.__h), $fb96b826c0c5f37a$var$z(u5, t3), t3.__e != r3 && $fb96b826c0c5f37a$var$b(t3)));
  });
}
function $fb96b826c0c5f37a$var$w(n12, l9, u6, i4, t4, r4, o4, f3, s1, a1) {
  var h1, v1, p1, _1, b1, m1, g1, w1 = i4 && i4.__k || $fb96b826c0c5f37a$var$c, A1 = w1.length;
  for (u6.__k = [], h1 = 0; h1 < l9.length; h1++) if (null != (_1 = u6.__k[h1] = null == (_1 = l9[h1]) || "boolean" == typeof _1 ? null : "string" == typeof _1 || "number" == typeof _1 || "bigint" == typeof _1 ? $fb96b826c0c5f37a$var$y(null, _1, null, null, _1) : Array.isArray(_1) ? $fb96b826c0c5f37a$var$y($fb96b826c0c5f37a$export$ffb0004e005737fa, {
    children: _1
  }, null, null, null) : _1.__b > 0 ? $fb96b826c0c5f37a$var$y(_1.type, _1.props, _1.key, null, _1.__v) : _1)) {
    if (_1.__ = u6, _1.__b = u6.__b + 1, null === (p1 = w1[h1]) || p1 && _1.key == p1.key && _1.type === p1.type) w1[h1] = void 0;
    else for (v1 = 0; v1 < A1; v1++) {
      if ((p1 = w1[v1]) && _1.key == p1.key && _1.type === p1.type) {
        w1[v1] = void 0;
        break;
      }
      p1 = null;
    }
    $fb96b826c0c5f37a$var$j(n12, _1, p1 = p1 || $fb96b826c0c5f37a$var$e, t4, r4, o4, f3, s1, a1), b1 = _1.__e, (v1 = _1.ref) && p1.ref != v1 && (g1 || (g1 = []), p1.ref && g1.push(p1.ref, null, _1), g1.push(v1, _1.__c || b1, _1)), null != b1 ? (null == m1 && (m1 = b1), "function" == typeof _1.type && _1.__k === p1.__k ? _1.__d = s1 = $fb96b826c0c5f37a$var$x(_1, s1, n12) : s1 = $fb96b826c0c5f37a$var$P(n12, _1, p1, w1, b1, s1), "function" == typeof u6.type && (u6.__d = s1)) : s1 && p1.__e == s1 && s1.parentNode != n12 && (s1 = $fb96b826c0c5f37a$var$k(p1));
  }
  for (u6.__e = m1, h1 = A1; h1--; ) null != w1[h1] && ("function" == typeof u6.type && null != w1[h1].__e && w1[h1].__e == u6.__d && (u6.__d = $fb96b826c0c5f37a$var$k(i4, h1 + 1)), $fb96b826c0c5f37a$var$N(w1[h1], w1[h1]));
  if (g1) for (h1 = 0; h1 < g1.length; h1++) $fb96b826c0c5f37a$var$M(g1[h1], g1[++h1], g1[++h1]);
}
function $fb96b826c0c5f37a$var$x(n13, l10, u7) {
  for (var i5, t5 = n13.__k, r5 = 0; t5 && r5 < t5.length; r5++) (i5 = t5[r5]) && (i5.__ = n13, l10 = "function" == typeof i5.type ? $fb96b826c0c5f37a$var$x(i5, l10, u7) : $fb96b826c0c5f37a$var$P(u7, i5, i5, t5, i5.__e, l10));
  return l10;
}
function $fb96b826c0c5f37a$export$47e4c5b300681277(n14, l11) {
  return l11 = l11 || [], null == n14 || "boolean" == typeof n14 || (Array.isArray(n14) ? n14.some(function(n15) {
    $fb96b826c0c5f37a$export$47e4c5b300681277(n15, l11);
  }) : l11.push(n14)), l11;
}
function $fb96b826c0c5f37a$var$P(n16, l12, u8, i6, t6, r6) {
  var o5, f4, e1;
  if (void 0 !== l12.__d) o5 = l12.__d, l12.__d = void 0;
  else if (null == u8 || t6 != r6 || null == t6.parentNode) n: if (null == r6 || r6.parentNode !== n16) n16.appendChild(t6), o5 = null;
  else {
    for (f4 = r6, e1 = 0; (f4 = f4.nextSibling) && e1 < i6.length; e1 += 2) if (f4 == t6) break n;
    n16.insertBefore(t6, r6), o5 = r6;
  }
  return void 0 !== o5 ? o5 : t6.nextSibling;
}
function $fb96b826c0c5f37a$var$C(n17, l13, u9, i7, t7) {
  var r7;
  for (r7 in u9) "children" === r7 || "key" === r7 || r7 in l13 || $fb96b826c0c5f37a$var$H(n17, r7, null, u9[r7], i7);
  for (r7 in l13) t7 && "function" != typeof l13[r7] || "children" === r7 || "key" === r7 || "value" === r7 || "checked" === r7 || u9[r7] === l13[r7] || $fb96b826c0c5f37a$var$H(n17, r7, l13[r7], u9[r7], i7);
}
function $fb96b826c0c5f37a$var$$(n18, l14, u10) {
  "-" === l14[0] ? n18.setProperty(l14, u10) : n18[l14] = null == u10 ? "" : "number" != typeof u10 || $fb96b826c0c5f37a$var$s.test(l14) ? u10 : u10 + "px";
}
function $fb96b826c0c5f37a$var$H(n19, l15, u11, i8, t8) {
  var r8;
  n: if ("style" === l15) {
    if ("string" == typeof u11) n19.style.cssText = u11;
    else {
      if ("string" == typeof i8 && (n19.style.cssText = i8 = ""), i8) for (l15 in i8) u11 && l15 in u11 || $fb96b826c0c5f37a$var$$(n19.style, l15, "");
      if (u11) for (l15 in u11) i8 && u11[l15] === i8[l15] || $fb96b826c0c5f37a$var$$(n19.style, l15, u11[l15]);
    }
  } else if ("o" === l15[0] && "n" === l15[1]) r8 = l15 !== (l15 = l15.replace(/Capture$/, "")), l15 = l15.toLowerCase() in n19 ? l15.toLowerCase().slice(2) : l15.slice(2), n19.l || (n19.l = {}), n19.l[l15 + r8] = u11, u11 ? i8 || n19.addEventListener(l15, r8 ? $fb96b826c0c5f37a$var$T : $fb96b826c0c5f37a$var$I, r8) : n19.removeEventListener(l15, r8 ? $fb96b826c0c5f37a$var$T : $fb96b826c0c5f37a$var$I, r8);
  else if ("dangerouslySetInnerHTML" !== l15) {
    if (t8) l15 = l15.replace(/xlink[H:h]/, "h").replace(/sName$/, "s");
    else if ("href" !== l15 && "list" !== l15 && "form" !== l15 && "tabIndex" !== l15 && "download" !== l15 && l15 in n19) try {
      n19[l15] = null == u11 ? "" : u11;
      break n;
    } catch (n) {
    }
    "function" == typeof u11 || (null != u11 && (false !== u11 || "a" === l15[0] && "r" === l15[1]) ? n19.setAttribute(l15, u11) : n19.removeAttribute(l15));
  }
}
function $fb96b826c0c5f37a$var$I(n20) {
  this.l[n20.type + false]($fb96b826c0c5f37a$export$41c562ebe57d11e2.event ? $fb96b826c0c5f37a$export$41c562ebe57d11e2.event(n20) : n20);
}
function $fb96b826c0c5f37a$var$T(n21) {
  this.l[n21.type + true]($fb96b826c0c5f37a$export$41c562ebe57d11e2.event ? $fb96b826c0c5f37a$export$41c562ebe57d11e2.event(n21) : n21);
}
function $fb96b826c0c5f37a$var$j(n22, u12, i9, t9, r9, o6, f5, e2, c1) {
  var s2, h2, v2, y1, p2, k1, b2, m2, g2, x1, A2, P1 = u12.type;
  if (void 0 !== u12.constructor) return null;
  null != i9.__h && (c1 = i9.__h, e2 = u12.__e = i9.__e, u12.__h = null, o6 = [
    e2
  ]), (s2 = $fb96b826c0c5f37a$export$41c562ebe57d11e2.__b) && s2(u12);
  try {
    n: if ("function" == typeof P1) {
      if (m2 = u12.props, g2 = (s2 = P1.contextType) && t9[s2.__c], x1 = s2 ? g2 ? g2.props.value : s2.__ : t9, i9.__c ? b2 = (h2 = u12.__c = i9.__c).__ = h2.__E : ("prototype" in P1 && P1.prototype.render ? u12.__c = h2 = new P1(m2, x1) : (u12.__c = h2 = new $fb96b826c0c5f37a$export$16fa2f45be04daa8(m2, x1), h2.constructor = P1, h2.render = $fb96b826c0c5f37a$var$O), g2 && g2.sub(h2), h2.props = m2, h2.state || (h2.state = {}), h2.context = x1, h2.__n = t9, v2 = h2.__d = true, h2.__h = []), null == h2.__s && (h2.__s = h2.state), null != P1.getDerivedStateFromProps && (h2.__s == h2.state && (h2.__s = $fb96b826c0c5f37a$var$a({}, h2.__s)), $fb96b826c0c5f37a$var$a(h2.__s, P1.getDerivedStateFromProps(m2, h2.__s))), y1 = h2.props, p2 = h2.state, v2) null == P1.getDerivedStateFromProps && null != h2.componentWillMount && h2.componentWillMount(), null != h2.componentDidMount && h2.__h.push(h2.componentDidMount);
      else {
        if (null == P1.getDerivedStateFromProps && m2 !== y1 && null != h2.componentWillReceiveProps && h2.componentWillReceiveProps(m2, x1), !h2.__e && null != h2.shouldComponentUpdate && false === h2.shouldComponentUpdate(m2, h2.__s, x1) || u12.__v === i9.__v) {
          h2.props = m2, h2.state = h2.__s, u12.__v !== i9.__v && (h2.__d = false), h2.__v = u12, u12.__e = i9.__e, u12.__k = i9.__k, u12.__k.forEach(function(n23) {
            n23 && (n23.__ = u12);
          }), h2.__h.length && f5.push(h2);
          break n;
        }
        null != h2.componentWillUpdate && h2.componentWillUpdate(m2, h2.__s, x1), null != h2.componentDidUpdate && h2.__h.push(function() {
          h2.componentDidUpdate(y1, p2, k1);
        });
      }
      h2.context = x1, h2.props = m2, h2.state = h2.__s, (s2 = $fb96b826c0c5f37a$export$41c562ebe57d11e2.__r) && s2(u12), h2.__d = false, h2.__v = u12, h2.__P = n22, s2 = h2.render(h2.props, h2.state, h2.context), h2.state = h2.__s, null != h2.getChildContext && (t9 = $fb96b826c0c5f37a$var$a($fb96b826c0c5f37a$var$a({}, t9), h2.getChildContext())), v2 || null == h2.getSnapshotBeforeUpdate || (k1 = h2.getSnapshotBeforeUpdate(y1, p2)), A2 = null != s2 && s2.type === $fb96b826c0c5f37a$export$ffb0004e005737fa && null == s2.key ? s2.props.children : s2, $fb96b826c0c5f37a$var$w(n22, Array.isArray(A2) ? A2 : [
        A2
      ], u12, i9, t9, r9, o6, f5, e2, c1), h2.base = u12.__e, u12.__h = null, h2.__h.length && f5.push(h2), b2 && (h2.__E = h2.__ = null), h2.__e = false;
    } else null == o6 && u12.__v === i9.__v ? (u12.__k = i9.__k, u12.__e = i9.__e) : u12.__e = $fb96b826c0c5f37a$var$L(i9.__e, u12, i9, t9, r9, o6, f5, c1);
    (s2 = $fb96b826c0c5f37a$export$41c562ebe57d11e2.diffed) && s2(u12);
  } catch (n24) {
    u12.__v = null, (c1 || null != o6) && (u12.__e = e2, u12.__h = !!c1, o6[o6.indexOf(e2)] = null), $fb96b826c0c5f37a$export$41c562ebe57d11e2.__e(n24, u12, i9);
  }
}
function $fb96b826c0c5f37a$var$z(n25, u13) {
  $fb96b826c0c5f37a$export$41c562ebe57d11e2.__c && $fb96b826c0c5f37a$export$41c562ebe57d11e2.__c(u13, n25), n25.some(function(u14) {
    try {
      n25 = u14.__h, u14.__h = [], n25.some(function(n26) {
        n26.call(u14);
      });
    } catch (n27) {
      $fb96b826c0c5f37a$export$41c562ebe57d11e2.__e(n27, u14.__v);
    }
  });
}
function $fb96b826c0c5f37a$var$L(l16, u15, i10, t10, r10, o7, f6, c2) {
  var s3, a2, v3, y2 = i10.props, p3 = u15.props, d1 = u15.type, _2 = 0;
  if ("svg" === d1 && (r10 = true), null != o7) {
    for (; _2 < o7.length; _2++) if ((s3 = o7[_2]) && "setAttribute" in s3 == !!d1 && (d1 ? s3.localName === d1 : 3 === s3.nodeType)) {
      l16 = s3, o7[_2] = null;
      break;
    }
  }
  if (null == l16) {
    if (null === d1) return document.createTextNode(p3);
    l16 = r10 ? document.createElementNS("http://www.w3.org/2000/svg", d1) : document.createElement(d1, p3.is && p3), o7 = null, c2 = false;
  }
  if (null === d1) y2 === p3 || c2 && l16.data === p3 || (l16.data = p3);
  else {
    if (o7 = o7 && $fb96b826c0c5f37a$var$n.call(l16.childNodes), a2 = (y2 = i10.props || $fb96b826c0c5f37a$var$e).dangerouslySetInnerHTML, v3 = p3.dangerouslySetInnerHTML, !c2) {
      if (null != o7) for (y2 = {}, _2 = 0; _2 < l16.attributes.length; _2++) y2[l16.attributes[_2].name] = l16.attributes[_2].value;
      (v3 || a2) && (v3 && (a2 && v3.__html == a2.__html || v3.__html === l16.innerHTML) || (l16.innerHTML = v3 && v3.__html || ""));
    }
    if ($fb96b826c0c5f37a$var$C(l16, p3, y2, r10, c2), v3) u15.__k = [];
    else if (_2 = u15.props.children, $fb96b826c0c5f37a$var$w(l16, Array.isArray(_2) ? _2 : [
      _2
    ], u15, i10, t10, r10 && "foreignObject" !== d1, o7, f6, o7 ? o7[0] : i10.__k && $fb96b826c0c5f37a$var$k(i10, 0), c2), null != o7) for (_2 = o7.length; _2--; ) null != o7[_2] && $fb96b826c0c5f37a$var$h(o7[_2]);
    c2 || ("value" in p3 && void 0 !== (_2 = p3.value) && (_2 !== y2.value || _2 !== l16.value || "progress" === d1 && !_2) && $fb96b826c0c5f37a$var$H(l16, "value", _2, y2.value, false), "checked" in p3 && void 0 !== (_2 = p3.checked) && _2 !== l16.checked && $fb96b826c0c5f37a$var$H(l16, "checked", _2, y2.checked, false));
  }
  return l16;
}
function $fb96b826c0c5f37a$var$M(n28, u16, i11) {
  try {
    "function" == typeof n28 ? n28(u16) : n28.current = u16;
  } catch (n29) {
    $fb96b826c0c5f37a$export$41c562ebe57d11e2.__e(n29, i11);
  }
}
function $fb96b826c0c5f37a$var$N(n30, u17, i12) {
  var t11, r11;
  if ($fb96b826c0c5f37a$export$41c562ebe57d11e2.unmount && $fb96b826c0c5f37a$export$41c562ebe57d11e2.unmount(n30), (t11 = n30.ref) && (t11.current && t11.current !== n30.__e || $fb96b826c0c5f37a$var$M(t11, null, u17)), null != (t11 = n30.__c)) {
    if (t11.componentWillUnmount) try {
      t11.componentWillUnmount();
    } catch (n31) {
      $fb96b826c0c5f37a$export$41c562ebe57d11e2.__e(n31, u17);
    }
    t11.base = t11.__P = null;
  }
  if (t11 = n30.__k) for (r11 = 0; r11 < t11.length; r11++) t11[r11] && $fb96b826c0c5f37a$var$N(t11[r11], u17, "function" != typeof n30.type);
  i12 || null == n30.__e || $fb96b826c0c5f37a$var$h(n30.__e), n30.__e = n30.__d = void 0;
}
function $fb96b826c0c5f37a$var$O(n32, l, u18) {
  return this.constructor(n32, u18);
}
function $fb96b826c0c5f37a$export$b3890eb0ae9dca99(u19, i13, t12) {
  var r12, o8, f7;
  $fb96b826c0c5f37a$export$41c562ebe57d11e2.__ && $fb96b826c0c5f37a$export$41c562ebe57d11e2.__(u19, i13), o8 = (r12 = "function" == typeof t12) ? null : t12 && t12.__k || i13.__k, f7 = [], $fb96b826c0c5f37a$var$j(i13, u19 = (!r12 && t12 || i13).__k = $fb96b826c0c5f37a$export$c8a8987d4410bf2d($fb96b826c0c5f37a$export$ffb0004e005737fa, null, [
    u19
  ]), o8 || $fb96b826c0c5f37a$var$e, $fb96b826c0c5f37a$var$e, void 0 !== i13.ownerSVGElement, !r12 && t12 ? [
    t12
  ] : o8 ? null : i13.firstChild ? $fb96b826c0c5f37a$var$n.call(i13.childNodes) : null, f7, !r12 && t12 ? t12 : o8 ? o8.__e : i13.firstChild, r12), $fb96b826c0c5f37a$var$z(f7, u19);
}
$fb96b826c0c5f37a$var$n = $fb96b826c0c5f37a$var$c.slice, $fb96b826c0c5f37a$export$41c562ebe57d11e2 = {
  __e: function(n39, l22) {
    for (var u23, i16, t14; l22 = l22.__; ) if ((u23 = l22.__c) && !u23.__) try {
      if ((i16 = u23.constructor) && null != i16.getDerivedStateFromError && (u23.setState(i16.getDerivedStateFromError(n39)), t14 = u23.__d), null != u23.componentDidCatch && (u23.componentDidCatch(n39), t14 = u23.__d), t14) return u23.__E = u23;
    } catch (l23) {
      n39 = l23;
    }
    throw n39;
  }
}, $fb96b826c0c5f37a$var$u = 0, $fb96b826c0c5f37a$export$a8257692ac88316c = function(n40) {
  return null != n40 && void 0 === n40.constructor;
}, $fb96b826c0c5f37a$export$16fa2f45be04daa8.prototype.setState = function(n41, l24) {
  var u24;
  u24 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = $fb96b826c0c5f37a$var$a({}, this.state), "function" == typeof n41 && (n41 = n41($fb96b826c0c5f37a$var$a({}, u24), this.props)), n41 && $fb96b826c0c5f37a$var$a(u24, n41), null != n41 && this.__v && (l24 && this.__h.push(l24), $fb96b826c0c5f37a$var$m(this));
}, $fb96b826c0c5f37a$export$16fa2f45be04daa8.prototype.forceUpdate = function(n42) {
  this.__v && (this.__e = true, n42 && this.__h.push(n42), $fb96b826c0c5f37a$var$m(this));
}, $fb96b826c0c5f37a$export$16fa2f45be04daa8.prototype.render = $fb96b826c0c5f37a$export$ffb0004e005737fa, $fb96b826c0c5f37a$var$t = [], $fb96b826c0c5f37a$var$r = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $fb96b826c0c5f37a$var$g.__r = 0, $fb96b826c0c5f37a$var$f = 0;
var $bd9dd35321b03dd4$var$o = 0;
function $bd9dd35321b03dd4$export$34b9dba7ce09269b(_1, e1, n, t, f) {
  var l, s, u = {};
  for (s in e1) "ref" == s ? l = e1[s] : u[s] = e1[s];
  var a = {
    type: _1,
    props: u,
    key: n,
    ref: l,
    __k: null,
    __: null,
    __b: 0,
    __e: null,
    __d: void 0,
    __c: null,
    __h: null,
    constructor: void 0,
    __v: --$bd9dd35321b03dd4$var$o,
    __source: t,
    __self: f
  };
  if ("function" == typeof _1 && (l = _1.defaultProps)) for (s in l) void 0 === u[s] && (u[s] = l[s]);
  return (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).vnode && (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).vnode(a), a;
}
function $f72b75cf796873c7$var$set(key, value) {
  try {
    window.localStorage[`emoji-mart.${key}`] = JSON.stringify(value);
  } catch (error) {
  }
}
function $f72b75cf796873c7$var$get(key) {
  try {
    const value = window.localStorage[`emoji-mart.${key}`];
    if (value) return JSON.parse(value);
  } catch (error) {
  }
}
var $f72b75cf796873c7$export$2e2bcd8739ae039 = {
  set: $f72b75cf796873c7$var$set,
  get: $f72b75cf796873c7$var$get
};
var $c84d045dcc34faf5$var$CACHE = /* @__PURE__ */ new Map();
var $c84d045dcc34faf5$var$VERSIONS = [
  {
    v: 15,
    emoji: "\u{1FAE8}"
  },
  {
    v: 14,
    emoji: "\u{1FAE0}"
  },
  {
    v: 13.1,
    emoji: "\u{1F636}\u200D\u{1F32B}\uFE0F"
  },
  {
    v: 13,
    emoji: "\u{1F978}"
  },
  {
    v: 12.1,
    emoji: "\u{1F9D1}\u200D\u{1F9B0}"
  },
  {
    v: 12,
    emoji: "\u{1F971}"
  },
  {
    v: 11,
    emoji: "\u{1F970}"
  },
  {
    v: 5,
    emoji: "\u{1F929}"
  },
  {
    v: 4,
    emoji: "\u{1F471}\u200D\u2640\uFE0F"
  },
  {
    v: 3,
    emoji: "\u{1F923}"
  },
  {
    v: 2,
    emoji: "\u{1F44B}\u{1F3FB}"
  },
  {
    v: 1,
    emoji: "\u{1F643}"
  }
];
function $c84d045dcc34faf5$var$latestVersion() {
  for (const { v, emoji } of $c84d045dcc34faf5$var$VERSIONS) {
    if ($c84d045dcc34faf5$var$isSupported(emoji)) return v;
  }
}
function $c84d045dcc34faf5$var$noCountryFlags() {
  if ($c84d045dcc34faf5$var$isSupported("\u{1F1E8}\u{1F1E6}")) return false;
  return true;
}
function $c84d045dcc34faf5$var$isSupported(emoji) {
  if ($c84d045dcc34faf5$var$CACHE.has(emoji)) return $c84d045dcc34faf5$var$CACHE.get(emoji);
  const supported = $c84d045dcc34faf5$var$isEmojiSupported(emoji);
  $c84d045dcc34faf5$var$CACHE.set(emoji, supported);
  return supported;
}
var $c84d045dcc34faf5$var$isEmojiSupported = (() => {
  let ctx = null;
  try {
    if (!navigator.userAgent.includes("jsdom")) ctx = document.createElement("canvas").getContext("2d", {
      willReadFrequently: true
    });
  } catch {
  }
  if (!ctx) return () => false;
  const CANVAS_HEIGHT = 25;
  const CANVAS_WIDTH = 20;
  const textSize = Math.floor(CANVAS_HEIGHT / 2);
  ctx.font = textSize + "px Arial, Sans-Serif";
  ctx.textBaseline = "top";
  ctx.canvas.width = CANVAS_WIDTH * 2;
  ctx.canvas.height = CANVAS_HEIGHT;
  return (unicode) => {
    ctx.clearRect(0, 0, CANVAS_WIDTH * 2, CANVAS_HEIGHT);
    ctx.fillStyle = "#FF0000";
    ctx.fillText(unicode, 0, 22);
    ctx.fillStyle = "#0000FF";
    ctx.fillText(unicode, CANVAS_WIDTH, 22);
    const a = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT).data;
    const count = a.length;
    let i = 0;
    for (; i < count && !a[i + 3]; i += 4) ;
    if (i >= count) return false;
    const x = CANVAS_WIDTH + i / 4 % CANVAS_WIDTH;
    const y = Math.floor(i / 4 / CANVAS_WIDTH);
    const b = ctx.getImageData(x, y, 1, 1).data;
    if (a[i] !== b[0] || a[i + 2] !== b[2]) return false;
    if (ctx.measureText(unicode).width >= CANVAS_WIDTH) return false;
    return true;
  };
})();
var $c84d045dcc34faf5$export$2e2bcd8739ae039 = {
  latestVersion: $c84d045dcc34faf5$var$latestVersion,
  noCountryFlags: $c84d045dcc34faf5$var$noCountryFlags
};
var $b22cfd0a55410b4f$var$DEFAULTS = [
  "+1",
  "grinning",
  "kissing_heart",
  "heart_eyes",
  "laughing",
  "stuck_out_tongue_winking_eye",
  "sweat_smile",
  "joy",
  "scream",
  "disappointed",
  "unamused",
  "weary",
  "sob",
  "sunglasses",
  "heart"
];
var $b22cfd0a55410b4f$var$Index = null;
function $b22cfd0a55410b4f$var$add(emoji) {
  $b22cfd0a55410b4f$var$Index || ($b22cfd0a55410b4f$var$Index = (0, $f72b75cf796873c7$export$2e2bcd8739ae039).get("frequently") || {});
  const emojiId = emoji.id || emoji;
  if (!emojiId) return;
  $b22cfd0a55410b4f$var$Index[emojiId] || ($b22cfd0a55410b4f$var$Index[emojiId] = 0);
  $b22cfd0a55410b4f$var$Index[emojiId] += 1;
  (0, $f72b75cf796873c7$export$2e2bcd8739ae039).set("last", emojiId);
  (0, $f72b75cf796873c7$export$2e2bcd8739ae039).set("frequently", $b22cfd0a55410b4f$var$Index);
}
function $b22cfd0a55410b4f$var$get({ maxFrequentRows, perLine }) {
  if (!maxFrequentRows) return [];
  $b22cfd0a55410b4f$var$Index || ($b22cfd0a55410b4f$var$Index = (0, $f72b75cf796873c7$export$2e2bcd8739ae039).get("frequently"));
  let emojiIds = [];
  if (!$b22cfd0a55410b4f$var$Index) {
    $b22cfd0a55410b4f$var$Index = {};
    for (let i in $b22cfd0a55410b4f$var$DEFAULTS.slice(0, perLine)) {
      const emojiId = $b22cfd0a55410b4f$var$DEFAULTS[i];
      $b22cfd0a55410b4f$var$Index[emojiId] = perLine - i;
      emojiIds.push(emojiId);
    }
    return emojiIds;
  }
  const max2 = maxFrequentRows * perLine;
  const last = (0, $f72b75cf796873c7$export$2e2bcd8739ae039).get("last");
  for (let emojiId in $b22cfd0a55410b4f$var$Index) emojiIds.push(emojiId);
  emojiIds.sort((a, b) => {
    const aScore = $b22cfd0a55410b4f$var$Index[b];
    const bScore = $b22cfd0a55410b4f$var$Index[a];
    if (aScore == bScore) return a.localeCompare(b);
    return aScore - bScore;
  });
  if (emojiIds.length > max2) {
    const removedIds = emojiIds.slice(max2);
    emojiIds = emojiIds.slice(0, max2);
    for (let removedId of removedIds) {
      if (removedId == last) continue;
      delete $b22cfd0a55410b4f$var$Index[removedId];
    }
    if (last && emojiIds.indexOf(last) == -1) {
      delete $b22cfd0a55410b4f$var$Index[emojiIds[emojiIds.length - 1]];
      emojiIds.splice(-1, 1, last);
    }
    (0, $f72b75cf796873c7$export$2e2bcd8739ae039).set("frequently", $b22cfd0a55410b4f$var$Index);
  }
  return emojiIds;
}
var $b22cfd0a55410b4f$export$2e2bcd8739ae039 = {
  add: $b22cfd0a55410b4f$var$add,
  get: $b22cfd0a55410b4f$var$get,
  DEFAULTS: $b22cfd0a55410b4f$var$DEFAULTS
};
var $8d50d93417ef682a$exports = {};
$8d50d93417ef682a$exports = JSON.parse('{"search":"Search","search_no_results_1":"Oh no!","search_no_results_2":"That emoji couldn\u2019t be found","pick":"Pick an emoji\u2026","add_custom":"Add custom emoji","categories":{"activity":"Activity","custom":"Custom","flags":"Flags","foods":"Food & Drink","frequent":"Frequently used","nature":"Animals & Nature","objects":"Objects","people":"Smileys & People","places":"Travel & Places","search":"Search Results","symbols":"Symbols"},"skins":{"1":"Default","2":"Light","3":"Medium-Light","4":"Medium","5":"Medium-Dark","6":"Dark","choose":"Choose default skin tone"}}');
var $b247ea80b67298d5$export$2e2bcd8739ae039 = {
  autoFocus: {
    value: false
  },
  dynamicWidth: {
    value: false
  },
  emojiButtonColors: {
    value: null
  },
  emojiButtonRadius: {
    value: "100%"
  },
  emojiButtonSize: {
    value: 36
  },
  emojiSize: {
    value: 24
  },
  emojiVersion: {
    value: 15,
    choices: [
      1,
      2,
      3,
      4,
      5,
      11,
      12,
      12.1,
      13,
      13.1,
      14,
      15
    ]
  },
  exceptEmojis: {
    value: []
  },
  icons: {
    value: "auto",
    choices: [
      "auto",
      "outline",
      "solid"
    ]
  },
  locale: {
    value: "en",
    choices: [
      "en",
      "ar",
      "be",
      "cs",
      "de",
      "es",
      "fa",
      "fi",
      "fr",
      "hi",
      "it",
      "ja",
      "ko",
      "nl",
      "pl",
      "pt",
      "ru",
      "sa",
      "tr",
      "uk",
      "vi",
      "zh"
    ]
  },
  maxFrequentRows: {
    value: 4
  },
  navPosition: {
    value: "top",
    choices: [
      "top",
      "bottom",
      "none"
    ]
  },
  noCountryFlags: {
    value: false
  },
  noResultsEmoji: {
    value: null
  },
  perLine: {
    value: 9
  },
  previewEmoji: {
    value: null
  },
  previewPosition: {
    value: "bottom",
    choices: [
      "top",
      "bottom",
      "none"
    ]
  },
  searchPosition: {
    value: "sticky",
    choices: [
      "sticky",
      "static",
      "none"
    ]
  },
  set: {
    value: "native",
    choices: [
      "native",
      "apple",
      "facebook",
      "google",
      "twitter"
    ]
  },
  skin: {
    value: 1,
    choices: [
      1,
      2,
      3,
      4,
      5,
      6
    ]
  },
  skinTonePosition: {
    value: "preview",
    choices: [
      "preview",
      "search",
      "none"
    ]
  },
  theme: {
    value: "auto",
    choices: [
      "auto",
      "light",
      "dark"
    ]
  },
  // Data
  categories: null,
  categoryIcons: null,
  custom: null,
  data: null,
  i18n: null,
  // Callbacks
  getImageURL: null,
  getSpritesheetURL: null,
  onAddCustomEmoji: null,
  onClickOutside: null,
  onEmojiSelect: null,
  // Deprecated
  stickySearch: {
    deprecated: true,
    value: true
  }
};
var $7adb23b0109cc36a$export$dbe3113d60765c1a = null;
var $7adb23b0109cc36a$export$2d0294657ab35f1b = null;
var $7adb23b0109cc36a$var$fetchCache = {};
async function $7adb23b0109cc36a$var$fetchJSON(src) {
  if ($7adb23b0109cc36a$var$fetchCache[src]) return $7adb23b0109cc36a$var$fetchCache[src];
  const response = await fetch(src);
  const json = await response.json();
  $7adb23b0109cc36a$var$fetchCache[src] = json;
  return json;
}
var $7adb23b0109cc36a$var$promise = null;
var $7adb23b0109cc36a$var$initCallback = null;
var $7adb23b0109cc36a$var$initialized = false;
function $7adb23b0109cc36a$export$2cd8252107eb640b(options, { caller } = {}) {
  $7adb23b0109cc36a$var$promise || ($7adb23b0109cc36a$var$promise = new Promise((resolve) => {
    $7adb23b0109cc36a$var$initCallback = resolve;
  }));
  if (options) $7adb23b0109cc36a$var$_init(options);
  else if (caller && !$7adb23b0109cc36a$var$initialized) console.warn(`\`${caller}\` requires data to be initialized first. Promise will be pending until \`init\` is called.`);
  return $7adb23b0109cc36a$var$promise;
}
async function $7adb23b0109cc36a$var$_init(props) {
  $7adb23b0109cc36a$var$initialized = true;
  let { emojiVersion, set, locale } = props;
  emojiVersion || (emojiVersion = (0, $b247ea80b67298d5$export$2e2bcd8739ae039).emojiVersion.value);
  set || (set = (0, $b247ea80b67298d5$export$2e2bcd8739ae039).set.value);
  locale || (locale = (0, $b247ea80b67298d5$export$2e2bcd8739ae039).locale.value);
  if (!$7adb23b0109cc36a$export$2d0294657ab35f1b) {
    $7adb23b0109cc36a$export$2d0294657ab35f1b = (typeof props.data === "function" ? await props.data() : props.data) || await $7adb23b0109cc36a$var$fetchJSON(`https://cdn.jsdelivr.net/npm/@emoji-mart/data@latest/sets/${emojiVersion}/${set}.json`);
    $7adb23b0109cc36a$export$2d0294657ab35f1b.emoticons = {};
    $7adb23b0109cc36a$export$2d0294657ab35f1b.natives = {};
    $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.unshift({
      id: "frequent",
      emojis: []
    });
    for (const alias in $7adb23b0109cc36a$export$2d0294657ab35f1b.aliases) {
      const emojiId = $7adb23b0109cc36a$export$2d0294657ab35f1b.aliases[alias];
      const emoji = $7adb23b0109cc36a$export$2d0294657ab35f1b.emojis[emojiId];
      if (!emoji) continue;
      emoji.aliases || (emoji.aliases = []);
      emoji.aliases.push(alias);
    }
    $7adb23b0109cc36a$export$2d0294657ab35f1b.originalCategories = $7adb23b0109cc36a$export$2d0294657ab35f1b.categories;
  } else $7adb23b0109cc36a$export$2d0294657ab35f1b.categories = $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.filter((c) => {
    const isCustom = !!c.name;
    if (!isCustom) return true;
    return false;
  });
  $7adb23b0109cc36a$export$dbe3113d60765c1a = (typeof props.i18n === "function" ? await props.i18n() : props.i18n) || (locale == "en" ? (0, /* @__PURE__ */ $parcel$interopDefault($8d50d93417ef682a$exports)) : await $7adb23b0109cc36a$var$fetchJSON(`https://cdn.jsdelivr.net/npm/@emoji-mart/data@latest/i18n/${locale}.json`));
  if (props.custom) for (let i in props.custom) {
    i = parseInt(i);
    const category = props.custom[i];
    const prevCategory = props.custom[i - 1];
    if (!category.emojis || !category.emojis.length) continue;
    category.id || (category.id = `custom_${i + 1}`);
    category.name || (category.name = $7adb23b0109cc36a$export$dbe3113d60765c1a.categories.custom);
    if (prevCategory && !category.icon) category.target = prevCategory.target || prevCategory;
    $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.push(category);
    for (const emoji of category.emojis) $7adb23b0109cc36a$export$2d0294657ab35f1b.emojis[emoji.id] = emoji;
  }
  if (props.categories) $7adb23b0109cc36a$export$2d0294657ab35f1b.categories = $7adb23b0109cc36a$export$2d0294657ab35f1b.originalCategories.filter((c) => {
    return props.categories.indexOf(c.id) != -1;
  }).sort((c1, c2) => {
    const i1 = props.categories.indexOf(c1.id);
    const i2 = props.categories.indexOf(c2.id);
    return i1 - i2;
  });
  let latestVersionSupport = null;
  let noCountryFlags = null;
  if (set == "native") {
    latestVersionSupport = (0, $c84d045dcc34faf5$export$2e2bcd8739ae039).latestVersion();
    noCountryFlags = props.noCountryFlags || (0, $c84d045dcc34faf5$export$2e2bcd8739ae039).noCountryFlags();
  }
  let categoryIndex = $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.length;
  let resetSearchIndex = false;
  while (categoryIndex--) {
    const category = $7adb23b0109cc36a$export$2d0294657ab35f1b.categories[categoryIndex];
    if (category.id == "frequent") {
      let { maxFrequentRows, perLine } = props;
      maxFrequentRows = maxFrequentRows >= 0 ? maxFrequentRows : (0, $b247ea80b67298d5$export$2e2bcd8739ae039).maxFrequentRows.value;
      perLine || (perLine = (0, $b247ea80b67298d5$export$2e2bcd8739ae039).perLine.value);
      category.emojis = (0, $b22cfd0a55410b4f$export$2e2bcd8739ae039).get({
        maxFrequentRows,
        perLine
      });
    }
    if (!category.emojis || !category.emojis.length) {
      $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.splice(categoryIndex, 1);
      continue;
    }
    const { categoryIcons } = props;
    if (categoryIcons) {
      const icon = categoryIcons[category.id];
      if (icon && !category.icon) category.icon = icon;
    }
    let emojiIndex = category.emojis.length;
    while (emojiIndex--) {
      const emojiId = category.emojis[emojiIndex];
      const emoji = emojiId.id ? emojiId : $7adb23b0109cc36a$export$2d0294657ab35f1b.emojis[emojiId];
      const ignore = () => {
        category.emojis.splice(emojiIndex, 1);
      };
      if (!emoji || props.exceptEmojis && props.exceptEmojis.includes(emoji.id)) {
        ignore();
        continue;
      }
      if (latestVersionSupport && emoji.version > latestVersionSupport) {
        ignore();
        continue;
      }
      if (noCountryFlags && category.id == "flags") {
        if (!(0, $e6eae5155b87f591$export$bcb25aa587e9cb13).includes(emoji.id)) {
          ignore();
          continue;
        }
      }
      if (!emoji.search) {
        resetSearchIndex = true;
        emoji.search = "," + [
          [
            emoji.id,
            false
          ],
          [
            emoji.name,
            true
          ],
          [
            emoji.keywords,
            false
          ],
          [
            emoji.emoticons,
            false
          ]
        ].map(([strings, split]) => {
          if (!strings) return;
          return (Array.isArray(strings) ? strings : [
            strings
          ]).map((string) => {
            return (split ? string.split(/[-|_|\s]+/) : [
              string
            ]).map((s) => s.toLowerCase());
          }).flat();
        }).flat().filter((a) => a && a.trim()).join(",");
        if (emoji.emoticons) for (const emoticon of emoji.emoticons) {
          if ($7adb23b0109cc36a$export$2d0294657ab35f1b.emoticons[emoticon]) continue;
          $7adb23b0109cc36a$export$2d0294657ab35f1b.emoticons[emoticon] = emoji.id;
        }
        let skinIndex = 0;
        for (const skin of emoji.skins) {
          if (!skin) continue;
          skinIndex++;
          const { native } = skin;
          if (native) {
            $7adb23b0109cc36a$export$2d0294657ab35f1b.natives[native] = emoji.id;
            emoji.search += `,${native}`;
          }
          const skinShortcodes = skinIndex == 1 ? "" : `:skin-tone-${skinIndex}:`;
          skin.shortcodes = `:${emoji.id}:${skinShortcodes}`;
        }
      }
    }
  }
  if (resetSearchIndex) (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).reset();
  $7adb23b0109cc36a$var$initCallback();
}
function $7adb23b0109cc36a$export$75fe5f91d452f94b(props, defaultProps, element2) {
  props || (props = {});
  const _props = {};
  for (let k in defaultProps) _props[k] = $7adb23b0109cc36a$export$88c9ddb45cea7241(k, props, defaultProps, element2);
  return _props;
}
function $7adb23b0109cc36a$export$88c9ddb45cea7241(propName, props, defaultProps, element2) {
  const defaults = defaultProps[propName];
  let value = element2 && element2.getAttribute(propName) || (props[propName] != null && props[propName] != void 0 ? props[propName] : null);
  if (!defaults) return value;
  if (value != null && defaults.value && typeof defaults.value != typeof value) {
    if (typeof defaults.value == "boolean") value = value == "false" ? false : true;
    else value = defaults.value.constructor(value);
  }
  if (defaults.transform && value) value = defaults.transform(value);
  if (value == null || defaults.choices && defaults.choices.indexOf(value) == -1) value = defaults.value;
  return value;
}
var $c4d155af13ad4d4b$var$SHORTCODES_REGEX = /^(?:\:([^\:]+)\:)(?:\:skin-tone-(\d)\:)?$/;
var $c4d155af13ad4d4b$var$Pool = null;
function $c4d155af13ad4d4b$var$get(emojiId) {
  if (emojiId.id) return emojiId;
  return (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).emojis[emojiId] || (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).emojis[(0, $7adb23b0109cc36a$export$2d0294657ab35f1b).aliases[emojiId]] || (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).emojis[(0, $7adb23b0109cc36a$export$2d0294657ab35f1b).natives[emojiId]];
}
function $c4d155af13ad4d4b$var$reset() {
  $c4d155af13ad4d4b$var$Pool = null;
}
async function $c4d155af13ad4d4b$var$search(value, { maxResults, caller } = {}) {
  if (!value || !value.trim().length) return null;
  maxResults || (maxResults = 90);
  await (0, $7adb23b0109cc36a$export$2cd8252107eb640b)(null, {
    caller: caller || "SearchIndex.search"
  });
  const values = value.toLowerCase().replace(/(\w)-/, "$1 ").split(/[\s|,]+/).filter((word, i, words) => {
    return word.trim() && words.indexOf(word) == i;
  });
  if (!values.length) return;
  let pool = $c4d155af13ad4d4b$var$Pool || ($c4d155af13ad4d4b$var$Pool = Object.values((0, $7adb23b0109cc36a$export$2d0294657ab35f1b).emojis));
  let results, scores;
  for (const value1 of values) {
    if (!pool.length) break;
    results = [];
    scores = {};
    for (const emoji of pool) {
      if (!emoji.search) continue;
      const score = emoji.search.indexOf(`,${value1}`);
      if (score == -1) continue;
      results.push(emoji);
      scores[emoji.id] || (scores[emoji.id] = 0);
      scores[emoji.id] += emoji.id == value1 ? 0 : score + 1;
    }
    pool = results;
  }
  if (results.length < 2) return results;
  results.sort((a, b) => {
    const aScore = scores[a.id];
    const bScore = scores[b.id];
    if (aScore == bScore) return a.id.localeCompare(b.id);
    return aScore - bScore;
  });
  if (results.length > maxResults) results = results.slice(0, maxResults);
  return results;
}
var $c4d155af13ad4d4b$export$2e2bcd8739ae039 = {
  search: $c4d155af13ad4d4b$var$search,
  get: $c4d155af13ad4d4b$var$get,
  reset: $c4d155af13ad4d4b$var$reset,
  SHORTCODES_REGEX: $c4d155af13ad4d4b$var$SHORTCODES_REGEX
};
var $e6eae5155b87f591$export$bcb25aa587e9cb13 = [
  "checkered_flag",
  "crossed_flags",
  "pirate_flag",
  "rainbow-flag",
  "transgender_flag",
  "triangular_flag_on_post",
  "waving_black_flag",
  "waving_white_flag"
];
function $693b183b0a78708f$export$9cb4719e2e525b7a(a, b) {
  return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index) => val == b[index]);
}
async function $693b183b0a78708f$export$e772c8ff12451969(frames = 1) {
  for (let _ in [
    ...Array(frames).keys()
  ]) await new Promise(requestAnimationFrame);
}
function $693b183b0a78708f$export$d10ac59fbe52a745(emoji, { skinIndex = 0 } = {}) {
  const skin = emoji.skins[skinIndex] || (() => {
    skinIndex = 0;
    return emoji.skins[skinIndex];
  })();
  const emojiData = {
    id: emoji.id,
    name: emoji.name,
    native: skin.native,
    unified: skin.unified,
    keywords: emoji.keywords,
    shortcodes: skin.shortcodes || emoji.shortcodes
  };
  if (emoji.skins.length > 1) emojiData.skin = skinIndex + 1;
  if (skin.src) emojiData.src = skin.src;
  if (emoji.aliases && emoji.aliases.length) emojiData.aliases = emoji.aliases;
  if (emoji.emoticons && emoji.emoticons.length) emojiData.emoticons = emoji.emoticons;
  return emojiData;
}
var $fcccfb36ed0cde68$var$categories = {
  activity: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M12 0C5.373 0 0 5.372 0 12c0 6.627 5.373 12 12 12 6.628 0 12-5.373 12-12 0-6.628-5.372-12-12-12m9.949 11H17.05c.224-2.527 1.232-4.773 1.968-6.113A9.966 9.966 0 0 1 21.949 11M13 11V2.051a9.945 9.945 0 0 1 4.432 1.564c-.858 1.491-2.156 4.22-2.392 7.385H13zm-2 0H8.961c-.238-3.165-1.536-5.894-2.393-7.385A9.95 9.95 0 0 1 11 2.051V11zm0 2v8.949a9.937 9.937 0 0 1-4.432-1.564c.857-1.492 2.155-4.221 2.393-7.385H11zm4.04 0c.236 3.164 1.534 5.893 2.392 7.385A9.92 9.92 0 0 1 13 21.949V13h2.04zM4.982 4.887C5.718 6.227 6.726 8.473 6.951 11h-4.9a9.977 9.977 0 0 1 2.931-6.113M2.051 13h4.9c-.226 2.527-1.233 4.771-1.969 6.113A9.972 9.972 0 0 1 2.051 13m16.967 6.113c-.735-1.342-1.744-3.586-1.968-6.113h4.899a9.961 9.961 0 0 1-2.931 6.113"
      })
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M16.17 337.5c0 44.98 7.565 83.54 13.98 107.9C35.22 464.3 50.46 496 174.9 496c9.566 0 19.59-.4707 29.84-1.271L17.33 307.3C16.53 317.6 16.17 327.7 16.17 337.5zM495.8 174.5c0-44.98-7.565-83.53-13.98-107.9c-4.688-17.54-18.34-31.23-36.04-35.95C435.5 27.91 392.9 16 337 16c-9.564 0-19.59 .4707-29.84 1.271l187.5 187.5C495.5 194.4 495.8 184.3 495.8 174.5zM26.77 248.8l236.3 236.3c142-36.1 203.9-150.4 222.2-221.1L248.9 26.87C106.9 62.96 45.07 177.2 26.77 248.8zM256 335.1c0 9.141-7.474 16-16 16c-4.094 0-8.188-1.564-11.31-4.689L164.7 283.3C161.6 280.2 160 276.1 160 271.1c0-8.529 6.865-16 16-16c4.095 0 8.189 1.562 11.31 4.688l64.01 64C254.4 327.8 256 331.9 256 335.1zM304 287.1c0 9.141-7.474 16-16 16c-4.094 0-8.188-1.564-11.31-4.689L212.7 235.3C209.6 232.2 208 228.1 208 223.1c0-9.141 7.473-16 16-16c4.094 0 8.188 1.562 11.31 4.688l64.01 64.01C302.5 279.8 304 283.9 304 287.1zM256 175.1c0-9.141 7.473-16 16-16c4.094 0 8.188 1.562 11.31 4.688l64.01 64.01c3.125 3.125 4.688 7.219 4.688 11.31c0 9.133-7.468 16-16 16c-4.094 0-8.189-1.562-11.31-4.688l-64.01-64.01C257.6 184.2 256 180.1 256 175.1z"
      })
    })
  },
  custom: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 448 512",
    children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
      d: "M417.1 368c-5.937 10.27-16.69 16-27.75 16c-5.422 0-10.92-1.375-15.97-4.281L256 311.4V448c0 17.67-14.33 32-31.1 32S192 465.7 192 448V311.4l-118.3 68.29C68.67 382.6 63.17 384 57.75 384c-11.06 0-21.81-5.734-27.75-16c-8.828-15.31-3.594-34.88 11.72-43.72L159.1 256L41.72 187.7C26.41 178.9 21.17 159.3 29.1 144C36.63 132.5 49.26 126.7 61.65 128.2C65.78 128.7 69.88 130.1 73.72 132.3L192 200.6V64c0-17.67 14.33-32 32-32S256 46.33 256 64v136.6l118.3-68.29c3.838-2.213 7.939-3.539 12.07-4.051C398.7 126.7 411.4 132.5 417.1 144c8.828 15.31 3.594 34.88-11.72 43.72L288 256l118.3 68.28C421.6 333.1 426.8 352.7 417.1 368z"
    })
  }),
  flags: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M0 0l6.084 24H8L1.916 0zM21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.563 3h7.875l2 8H8.563l-2-8zm8.832 10l-2.856 1.904L12.063 13h3.332zM19 13l-1.5-6h1.938l2 8H16l3-2z"
      })
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M64 496C64 504.8 56.75 512 48 512h-32C7.25 512 0 504.8 0 496V32c0-17.75 14.25-32 32-32s32 14.25 32 32V496zM476.3 0c-6.365 0-13.01 1.35-19.34 4.233c-45.69 20.86-79.56 27.94-107.8 27.94c-59.96 0-94.81-31.86-163.9-31.87C160.9 .3055 131.6 4.867 96 15.75v350.5c32-9.984 59.87-14.1 84.85-14.1c73.63 0 124.9 31.78 198.6 31.78c31.91 0 68.02-5.971 111.1-23.09C504.1 355.9 512 344.4 512 332.1V30.73C512 11.1 495.3 0 476.3 0z"
      })
    })
  },
  foods: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M17 4.978c-1.838 0-2.876.396-3.68.934.513-1.172 1.768-2.934 4.68-2.934a1 1 0 0 0 0-2c-2.921 0-4.629 1.365-5.547 2.512-.064.078-.119.162-.18.244C11.73 1.838 10.798.023 9.207.023 8.579.022 7.85.306 7 .978 5.027 2.54 5.329 3.902 6.492 4.999 3.609 5.222 0 7.352 0 12.969c0 4.582 4.961 11.009 9 11.009 1.975 0 2.371-.486 3-1 .629.514 1.025 1 3 1 4.039 0 9-6.418 9-11 0-5.953-4.055-8-7-8M8.242 2.546c.641-.508.943-.523.965-.523.426.169.975 1.405 1.357 3.055-1.527-.629-2.741-1.352-2.98-1.846.059-.112.241-.356.658-.686M15 21.978c-1.08 0-1.21-.109-1.559-.402l-.176-.146c-.367-.302-.816-.452-1.266-.452s-.898.15-1.266.452l-.176.146c-.347.292-.477.402-1.557.402-2.813 0-7-5.389-7-9.009 0-5.823 4.488-5.991 5-5.991 1.939 0 2.484.471 3.387 1.251l.323.276a1.995 1.995 0 0 0 2.58 0l.323-.276c.902-.78 1.447-1.251 3.387-1.251.512 0 5 .168 5 6 0 3.617-4.187 9-7 9"
      })
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M481.9 270.1C490.9 279.1 496 291.3 496 304C496 316.7 490.9 328.9 481.9 337.9C472.9 346.9 460.7 352 448 352H64C51.27 352 39.06 346.9 30.06 337.9C21.06 328.9 16 316.7 16 304C16 291.3 21.06 279.1 30.06 270.1C39.06 261.1 51.27 256 64 256H448C460.7 256 472.9 261.1 481.9 270.1zM475.3 388.7C478.3 391.7 480 395.8 480 400V416C480 432.1 473.3 449.3 461.3 461.3C449.3 473.3 432.1 480 416 480H96C79.03 480 62.75 473.3 50.75 461.3C38.74 449.3 32 432.1 32 416V400C32 395.8 33.69 391.7 36.69 388.7C39.69 385.7 43.76 384 48 384H464C468.2 384 472.3 385.7 475.3 388.7zM50.39 220.8C45.93 218.6 42.03 215.5 38.97 211.6C35.91 207.7 33.79 203.2 32.75 198.4C31.71 193.5 31.8 188.5 32.99 183.7C54.98 97.02 146.5 32 256 32C365.5 32 457 97.02 479 183.7C480.2 188.5 480.3 193.5 479.2 198.4C478.2 203.2 476.1 207.7 473 211.6C469.1 215.5 466.1 218.6 461.6 220.8C457.2 222.9 452.3 224 447.3 224H64.67C59.73 224 54.84 222.9 50.39 220.8zM372.7 116.7C369.7 119.7 368 123.8 368 128C368 131.2 368.9 134.3 370.7 136.9C372.5 139.5 374.1 141.6 377.9 142.8C380.8 143.1 384 144.3 387.1 143.7C390.2 143.1 393.1 141.6 395.3 139.3C397.6 137.1 399.1 134.2 399.7 131.1C400.3 128 399.1 124.8 398.8 121.9C397.6 118.1 395.5 116.5 392.9 114.7C390.3 112.9 387.2 111.1 384 111.1C379.8 111.1 375.7 113.7 372.7 116.7V116.7zM244.7 84.69C241.7 87.69 240 91.76 240 96C240 99.16 240.9 102.3 242.7 104.9C244.5 107.5 246.1 109.6 249.9 110.8C252.8 111.1 256 112.3 259.1 111.7C262.2 111.1 265.1 109.6 267.3 107.3C269.6 105.1 271.1 102.2 271.7 99.12C272.3 96.02 271.1 92.8 270.8 89.88C269.6 86.95 267.5 84.45 264.9 82.7C262.3 80.94 259.2 79.1 256 79.1C251.8 79.1 247.7 81.69 244.7 84.69V84.69zM116.7 116.7C113.7 119.7 112 123.8 112 128C112 131.2 112.9 134.3 114.7 136.9C116.5 139.5 118.1 141.6 121.9 142.8C124.8 143.1 128 144.3 131.1 143.7C134.2 143.1 137.1 141.6 139.3 139.3C141.6 137.1 143.1 134.2 143.7 131.1C144.3 128 143.1 124.8 142.8 121.9C141.6 118.1 139.5 116.5 136.9 114.7C134.3 112.9 131.2 111.1 128 111.1C123.8 111.1 119.7 113.7 116.7 116.7L116.7 116.7z"
      })
    })
  },
  frequent: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M13 4h-2l-.001 7H9v2h2v2h2v-2h4v-2h-4z"
        }),
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"
        })
      ]
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512zM232 256C232 264 236 271.5 242.7 275.1L338.7 339.1C349.7 347.3 364.6 344.3 371.1 333.3C379.3 322.3 376.3 307.4 365.3 300L280 243.2V120C280 106.7 269.3 96 255.1 96C242.7 96 231.1 106.7 231.1 120L232 256z"
      })
    })
  },
  nature: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M15.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 15.5 8M8.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 8.5 8"
        }),
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M18.933 0h-.027c-.97 0-2.138.787-3.018 1.497-1.274-.374-2.612-.51-3.887-.51-1.285 0-2.616.133-3.874.517C7.245.79 6.069 0 5.093 0h-.027C3.352 0 .07 2.67.002 7.026c-.039 2.479.276 4.238 1.04 5.013.254.258.882.677 1.295.882.191 3.177.922 5.238 2.536 6.38.897.637 2.187.949 3.2 1.102C8.04 20.6 8 20.795 8 21c0 1.773 2.35 3 4 3 1.648 0 4-1.227 4-3 0-.201-.038-.393-.072-.586 2.573-.385 5.435-1.877 5.925-7.587.396-.22.887-.568 1.104-.788.763-.774 1.079-2.534 1.04-5.013C23.929 2.67 20.646 0 18.933 0M3.223 9.135c-.237.281-.837 1.155-.884 1.238-.15-.41-.368-1.349-.337-3.291.051-3.281 2.478-4.972 3.091-5.031.256.015.731.27 1.265.646-1.11 1.171-2.275 2.915-2.352 5.125-.133.546-.398.858-.783 1.313M12 22c-.901 0-1.954-.693-2-1 0-.654.475-1.236 1-1.602V20a1 1 0 1 0 2 0v-.602c.524.365 1 .947 1 1.602-.046.307-1.099 1-2 1m3-3.48v.02a4.752 4.752 0 0 0-1.262-1.02c1.092-.516 2.239-1.334 2.239-2.217 0-1.842-1.781-2.195-3.977-2.195-2.196 0-3.978.354-3.978 2.195 0 .883 1.148 1.701 2.238 2.217A4.8 4.8 0 0 0 9 18.539v-.025c-1-.076-2.182-.281-2.973-.842-1.301-.92-1.838-3.045-1.853-6.478l.023-.041c.496-.826 1.49-1.45 1.804-3.102 0-2.047 1.357-3.631 2.362-4.522C9.37 3.178 10.555 3 11.948 3c1.447 0 2.685.192 3.733.57 1 .9 2.316 2.465 2.316 4.48.313 1.651 1.307 2.275 1.803 3.102.035.058.068.117.102.178-.059 5.967-1.949 7.01-4.902 7.19m6.628-8.202c-.037-.065-.074-.13-.113-.195a7.587 7.587 0 0 0-.739-.987c-.385-.455-.648-.768-.782-1.313-.076-2.209-1.241-3.954-2.353-5.124.531-.376 1.004-.63 1.261-.647.636.071 3.044 1.764 3.096 5.031.027 1.81-.347 3.218-.37 3.235"
        })
      ]
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 576 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M332.7 19.85C334.6 8.395 344.5 0 356.1 0C363.6 0 370.6 3.52 375.1 9.502L392 32H444.1C456.8 32 469.1 37.06 478.1 46.06L496 64H552C565.3 64 576 74.75 576 88V112C576 156.2 540.2 192 496 192H426.7L421.6 222.5L309.6 158.5L332.7 19.85zM448 64C439.2 64 432 71.16 432 80C432 88.84 439.2 96 448 96C456.8 96 464 88.84 464 80C464 71.16 456.8 64 448 64zM416 256.1V480C416 497.7 401.7 512 384 512H352C334.3 512 320 497.7 320 480V364.8C295.1 377.1 268.8 384 240 384C211.2 384 184 377.1 160 364.8V480C160 497.7 145.7 512 128 512H96C78.33 512 64 497.7 64 480V249.8C35.23 238.9 12.64 214.5 4.836 183.3L.9558 167.8C-3.331 150.6 7.094 133.2 24.24 128.1C41.38 124.7 58.76 135.1 63.05 152.2L66.93 167.8C70.49 182 83.29 191.1 97.97 191.1H303.8L416 256.1z"
      })
    })
  },
  objects: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M12 0a9 9 0 0 0-5 16.482V21s2.035 3 5 3 5-3 5-3v-4.518A9 9 0 0 0 12 0zm0 2c3.86 0 7 3.141 7 7s-3.14 7-7 7-7-3.141-7-7 3.14-7 7-7zM9 17.477c.94.332 1.946.523 3 .523s2.06-.19 3-.523v.834c-.91.436-1.925.689-3 .689a6.924 6.924 0 0 1-3-.69v-.833zm.236 3.07A8.854 8.854 0 0 0 12 21c.965 0 1.888-.167 2.758-.451C14.155 21.173 13.153 22 12 22c-1.102 0-2.117-.789-2.764-1.453z"
        }),
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M14.745 12.449h-.004c-.852-.024-1.188-.858-1.577-1.824-.421-1.061-.703-1.561-1.182-1.566h-.009c-.481 0-.783.497-1.235 1.537-.436.982-.801 1.811-1.636 1.791l-.276-.043c-.565-.171-.853-.691-1.284-1.794-.125-.313-.202-.632-.27-.913-.051-.213-.127-.53-.195-.634C7.067 9.004 7.039 9 6.99 9A1 1 0 0 1 7 7h.01c1.662.017 2.015 1.373 2.198 2.134.486-.981 1.304-2.058 2.797-2.075 1.531.018 2.28 1.153 2.731 2.141l.002-.008C14.944 8.424 15.327 7 16.979 7h.032A1 1 0 1 1 17 9h-.011c-.149.076-.256.474-.319.709a6.484 6.484 0 0 1-.311.951c-.429.973-.79 1.789-1.614 1.789"
        })
      ]
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 384 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M112.1 454.3c0 6.297 1.816 12.44 5.284 17.69l17.14 25.69c5.25 7.875 17.17 14.28 26.64 14.28h61.67c9.438 0 21.36-6.401 26.61-14.28l17.08-25.68c2.938-4.438 5.348-12.37 5.348-17.7L272 415.1h-160L112.1 454.3zM191.4 .0132C89.44 .3257 16 82.97 16 175.1c0 44.38 16.44 84.84 43.56 115.8c16.53 18.84 42.34 58.23 52.22 91.45c.0313 .25 .0938 .5166 .125 .7823h160.2c.0313-.2656 .0938-.5166 .125-.7823c9.875-33.22 35.69-72.61 52.22-91.45C351.6 260.8 368 220.4 368 175.1C368 78.61 288.9-.2837 191.4 .0132zM192 96.01c-44.13 0-80 35.89-80 79.1C112 184.8 104.8 192 96 192S80 184.8 80 176c0-61.76 50.25-111.1 112-111.1c8.844 0 16 7.159 16 16S200.8 96.01 192 96.01z"
      })
    })
  },
  people: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"
        }),
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M8 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 8 7M16 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 16 7M15.232 15c-.693 1.195-1.87 2-3.349 2-1.477 0-2.655-.805-3.347-2H15m3-2H6a6 6 0 1 0 12 0"
        })
      ]
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 432C332.1 432 396.2 382 415.2 314.1C419.1 300.4 407.8 288 393.6 288H118.4C104.2 288 92.92 300.4 96.76 314.1C115.8 382 179.9 432 256 432V432zM176.4 160C158.7 160 144.4 174.3 144.4 192C144.4 209.7 158.7 224 176.4 224C194 224 208.4 209.7 208.4 192C208.4 174.3 194 160 176.4 160zM336.4 224C354 224 368.4 209.7 368.4 192C368.4 174.3 354 160 336.4 160C318.7 160 304.4 174.3 304.4 192C304.4 209.7 318.7 224 336.4 224z"
      })
    })
  },
  places: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: [
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M6.5 12C5.122 12 4 13.121 4 14.5S5.122 17 6.5 17 9 15.879 9 14.5 7.878 12 6.5 12m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5M17.5 12c-1.378 0-2.5 1.121-2.5 2.5s1.122 2.5 2.5 2.5 2.5-1.121 2.5-2.5-1.122-2.5-2.5-2.5m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5"
        }),
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
          d: "M22.482 9.494l-1.039-.346L21.4 9h.6c.552 0 1-.439 1-.992 0-.006-.003-.008-.003-.008H23c0-1-.889-2-1.984-2h-.642l-.731-1.717C19.262 3.012 18.091 2 16.764 2H7.236C5.909 2 4.738 3.012 4.357 4.283L3.626 6h-.642C1.889 6 1 7 1 8h.003S1 8.002 1 8.008C1 8.561 1.448 9 2 9h.6l-.043.148-1.039.346a2.001 2.001 0 0 0-1.359 2.097l.751 7.508a1 1 0 0 0 .994.901H3v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h6v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h1.096a.999.999 0 0 0 .994-.901l.751-7.508a2.001 2.001 0 0 0-1.359-2.097M6.273 4.857C6.402 4.43 6.788 4 7.236 4h9.527c.448 0 .834.43.963.857L19.313 9H4.688l1.585-4.143zM7 21H5v-1h2v1zm12 0h-2v-1h2v1zm2.189-3H2.811l-.662-6.607L3 11h18l.852.393L21.189 18z"
        })
      ]
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M39.61 196.8L74.8 96.29C88.27 57.78 124.6 32 165.4 32H346.6C387.4 32 423.7 57.78 437.2 96.29L472.4 196.8C495.6 206.4 512 229.3 512 256V448C512 465.7 497.7 480 480 480H448C430.3 480 416 465.7 416 448V400H96V448C96 465.7 81.67 480 64 480H32C14.33 480 0 465.7 0 448V256C0 229.3 16.36 206.4 39.61 196.8V196.8zM109.1 192H402.9L376.8 117.4C372.3 104.6 360.2 96 346.6 96H165.4C151.8 96 139.7 104.6 135.2 117.4L109.1 192zM96 256C78.33 256 64 270.3 64 288C64 305.7 78.33 320 96 320C113.7 320 128 305.7 128 288C128 270.3 113.7 256 96 256zM416 320C433.7 320 448 305.7 448 288C448 270.3 433.7 256 416 256C398.3 256 384 270.3 384 288C384 305.7 398.3 320 416 320z"
      })
    })
  },
  symbols: {
    outline: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M0 0h11v2H0zM4 11h3V6h4V4H0v2h4zM15.5 17c1.381 0 2.5-1.116 2.5-2.493s-1.119-2.493-2.5-2.493S13 13.13 13 14.507 14.119 17 15.5 17m0-2.986c.276 0 .5.222.5.493 0 .272-.224.493-.5.493s-.5-.221-.5-.493.224-.493.5-.493M21.5 19.014c-1.381 0-2.5 1.116-2.5 2.493S20.119 24 21.5 24s2.5-1.116 2.5-2.493-1.119-2.493-2.5-2.493m0 2.986a.497.497 0 0 1-.5-.493c0-.271.224-.493.5-.493s.5.222.5.493a.497.497 0 0 1-.5.493M22 13l-9 9 1.513 1.5 8.99-9.009zM17 11c2.209 0 4-1.119 4-2.5V2s.985-.161 1.498.949C23.01 4.055 23 6 23 6s1-1.119 1-3.135C24-.02 21 0 21 0h-2v6.347A5.853 5.853 0 0 0 17 6c-2.209 0-4 1.119-4 2.5s1.791 2.5 4 2.5M10.297 20.482l-1.475-1.585a47.54 47.54 0 0 1-1.442 1.129c-.307-.288-.989-1.016-2.045-2.183.902-.836 1.479-1.466 1.729-1.892s.376-.871.376-1.336c0-.592-.273-1.178-.818-1.759-.546-.581-1.329-.871-2.349-.871-1.008 0-1.79.293-2.344.879-.556.587-.832 1.181-.832 1.784 0 .813.419 1.748 1.256 2.805-.847.614-1.444 1.208-1.794 1.784a3.465 3.465 0 0 0-.523 1.833c0 .857.308 1.56.924 2.107.616.549 1.423.823 2.42.823 1.173 0 2.444-.379 3.813-1.137L8.235 24h2.819l-2.09-2.383 1.333-1.135zm-6.736-6.389a1.02 1.02 0 0 1 .73-.286c.31 0 .559.085.747.254a.849.849 0 0 1 .283.659c0 .518-.419 1.112-1.257 1.784-.536-.651-.805-1.231-.805-1.742a.901.901 0 0 1 .302-.669M3.74 22c-.427 0-.778-.116-1.057-.349-.279-.232-.418-.487-.418-.766 0-.594.509-1.288 1.527-2.083.968 1.134 1.717 1.946 2.248 2.438-.921.507-1.686.76-2.3.76"
      })
    }),
    solid: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512",
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
        d: "M500.3 7.251C507.7 13.33 512 22.41 512 31.1V175.1C512 202.5 483.3 223.1 447.1 223.1C412.7 223.1 383.1 202.5 383.1 175.1C383.1 149.5 412.7 127.1 447.1 127.1V71.03L351.1 90.23V207.1C351.1 234.5 323.3 255.1 287.1 255.1C252.7 255.1 223.1 234.5 223.1 207.1C223.1 181.5 252.7 159.1 287.1 159.1V63.1C287.1 48.74 298.8 35.61 313.7 32.62L473.7 .6198C483.1-1.261 492.9 1.173 500.3 7.251H500.3zM74.66 303.1L86.5 286.2C92.43 277.3 102.4 271.1 113.1 271.1H174.9C185.6 271.1 195.6 277.3 201.5 286.2L213.3 303.1H239.1C266.5 303.1 287.1 325.5 287.1 351.1V463.1C287.1 490.5 266.5 511.1 239.1 511.1H47.1C21.49 511.1-.0019 490.5-.0019 463.1V351.1C-.0019 325.5 21.49 303.1 47.1 303.1H74.66zM143.1 359.1C117.5 359.1 95.1 381.5 95.1 407.1C95.1 434.5 117.5 455.1 143.1 455.1C170.5 455.1 191.1 434.5 191.1 407.1C191.1 381.5 170.5 359.1 143.1 359.1zM440.3 367.1H496C502.7 367.1 508.6 372.1 510.1 378.4C513.3 384.6 511.6 391.7 506.5 396L378.5 508C372.9 512.1 364.6 513.3 358.6 508.9C352.6 504.6 350.3 496.6 353.3 489.7L391.7 399.1H336C329.3 399.1 323.4 395.9 321 389.6C318.7 383.4 320.4 376.3 325.5 371.1L453.5 259.1C459.1 255 467.4 254.7 473.4 259.1C479.4 263.4 481.6 271.4 478.7 278.3L440.3 367.1zM116.7 219.1L19.85 119.2C-8.112 90.26-6.614 42.31 24.85 15.34C51.82-8.137 93.26-3.642 118.2 21.83L128.2 32.32L137.7 21.83C162.7-3.642 203.6-8.137 231.6 15.34C262.6 42.31 264.1 90.26 236.1 119.2L139.7 219.1C133.2 225.6 122.7 225.6 116.7 219.1H116.7z"
      })
    })
  }
};
var $fcccfb36ed0cde68$var$search = {
  loupe: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
      d: "M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z"
    })
  }),
  delete: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {
      d: "M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z"
    })
  })
};
var $fcccfb36ed0cde68$export$2e2bcd8739ae039 = {
  categories: $fcccfb36ed0cde68$var$categories,
  search: $fcccfb36ed0cde68$var$search
};
function $254755d3f438722f$export$2e2bcd8739ae039(props) {
  let { id, skin, emoji } = props;
  if (props.shortcodes) {
    const matches = props.shortcodes.match((0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).SHORTCODES_REGEX);
    if (matches) {
      id = matches[1];
      if (matches[2]) skin = matches[2];
    }
  }
  emoji || (emoji = (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).get(id || props.native));
  if (!emoji) return props.fallback;
  const emojiSkin = emoji.skins[skin - 1] || emoji.skins[0];
  const imageSrc = emojiSkin.src || (props.set != "native" && !props.spritesheet ? typeof props.getImageURL === "function" ? props.getImageURL(props.set, emojiSkin.unified) : `https://cdn.jsdelivr.net/npm/emoji-datasource-${props.set}@15.0.1/img/${props.set}/64/${emojiSkin.unified}.png` : void 0);
  const spritesheetSrc = typeof props.getSpritesheetURL === "function" ? props.getSpritesheetURL(props.set) : `https://cdn.jsdelivr.net/npm/emoji-datasource-${props.set}@15.0.1/img/${props.set}/sheets-256/64.png`;
  return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {
    class: "emoji-mart-emoji",
    "data-emoji-set": props.set,
    children: imageSrc ? /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("img", {
      style: {
        maxWidth: props.size || "1em",
        maxHeight: props.size || "1em",
        display: "inline-block"
      },
      alt: emojiSkin.native || emojiSkin.shortcodes,
      src: imageSrc
    }) : props.set == "native" ? /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {
      style: {
        fontSize: props.size,
        fontFamily: '"EmojiMart", "Segoe UI Emoji", "Segoe UI Symbol", "Segoe UI", "Apple Color Emoji", "Twemoji Mozilla", "Noto Color Emoji", "Android Emoji"'
      },
      children: emojiSkin.native
    }) : /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {
      style: {
        display: "block",
        width: props.size,
        height: props.size,
        backgroundImage: `url(${spritesheetSrc})`,
        backgroundSize: `${100 * (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).sheet.cols}% ${100 * (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).sheet.rows}%`,
        backgroundPosition: `${100 / ((0, $7adb23b0109cc36a$export$2d0294657ab35f1b).sheet.cols - 1) * emojiSkin.x}% ${100 / ((0, $7adb23b0109cc36a$export$2d0294657ab35f1b).sheet.rows - 1) * emojiSkin.y}%`
      }
    })
  });
}
var $6f57cc9cd54c5aaa$var$WindowHTMLElement = typeof window !== "undefined" && window.HTMLElement ? window.HTMLElement : Object;
var $6f57cc9cd54c5aaa$export$2e2bcd8739ae039 = class extends $6f57cc9cd54c5aaa$var$WindowHTMLElement {
  static get observedAttributes() {
    return Object.keys(this.Props);
  }
  update(props = {}) {
    for (let k in props) this.attributeChangedCallback(k, null, props[k]);
  }
  attributeChangedCallback(attr2, _, newValue) {
    if (!this.component) return;
    const value = (0, $7adb23b0109cc36a$export$88c9ddb45cea7241)(attr2, {
      [attr2]: newValue
    }, this.constructor.Props, this);
    if (this.component.componentWillReceiveProps) this.component.componentWillReceiveProps({
      [attr2]: value
    });
    else {
      this.component.props[attr2] = value;
      this.component.forceUpdate();
    }
  }
  disconnectedCallback() {
    this.disconnected = true;
    if (this.component && this.component.unregister) this.component.unregister();
  }
  constructor(props = {}) {
    super();
    this.props = props;
    if (props.parent || props.ref) {
      let ref = null;
      const parent = props.parent || (ref = props.ref && props.ref.current);
      if (ref) ref.innerHTML = "";
      if (parent) parent.appendChild(this);
    }
  }
};
var $26f27c338a96b1a6$export$2e2bcd8739ae039 = class extends (0, $6f57cc9cd54c5aaa$export$2e2bcd8739ae039) {
  setShadow() {
    this.attachShadow({
      mode: "open"
    });
  }
  injectStyles(styles) {
    if (!styles) return;
    const style = document.createElement("style");
    style.textContent = styles;
    this.shadowRoot.insertBefore(style, this.shadowRoot.firstChild);
  }
  constructor(props, { styles } = {}) {
    super(props);
    this.setShadow();
    this.injectStyles(styles);
  }
};
var $3d90f6e46fb2dd47$export$2e2bcd8739ae039 = {
  fallback: "",
  id: "",
  native: "",
  shortcodes: "",
  size: {
    value: "",
    transform: (value) => {
      if (!/\D/.test(value)) return `${value}px`;
      return value;
    }
  },
  // Shared
  set: (0, $b247ea80b67298d5$export$2e2bcd8739ae039).set,
  skin: (0, $b247ea80b67298d5$export$2e2bcd8739ae039).skin
};
var $331b4160623139bf$export$2e2bcd8739ae039 = class extends (0, $6f57cc9cd54c5aaa$export$2e2bcd8739ae039) {
  async connectedCallback() {
    const props = (0, $7adb23b0109cc36a$export$75fe5f91d452f94b)(this.props, (0, $3d90f6e46fb2dd47$export$2e2bcd8739ae039), this);
    props.element = this;
    props.ref = (component) => {
      this.component = component;
    };
    await (0, $7adb23b0109cc36a$export$2cd8252107eb640b)();
    if (this.disconnected) return;
    (0, $fb96b826c0c5f37a$export$b3890eb0ae9dca99)(/* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $254755d3f438722f$export$2e2bcd8739ae039), {
      ...props
    }), this);
  }
  constructor(props) {
    super(props);
  }
};
(0, $c770c458706daa72$export$2e2bcd8739ae039)($331b4160623139bf$export$2e2bcd8739ae039, "Props", (0, $3d90f6e46fb2dd47$export$2e2bcd8739ae039));
if (typeof customElements !== "undefined" && !customElements.get("em-emoji")) customElements.define("em-emoji", $331b4160623139bf$export$2e2bcd8739ae039);
var $1a9a8ef576b7773d$var$t;
var $1a9a8ef576b7773d$var$u;
var $1a9a8ef576b7773d$var$r;
var $1a9a8ef576b7773d$var$i = [];
var $1a9a8ef576b7773d$var$c = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__b;
var $1a9a8ef576b7773d$var$f = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__r;
var $1a9a8ef576b7773d$var$e = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).diffed;
var $1a9a8ef576b7773d$var$a = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__c;
var $1a9a8ef576b7773d$var$v = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).unmount;
function $1a9a8ef576b7773d$var$x() {
  var t6;
  for ($1a9a8ef576b7773d$var$i.sort(function(n11, t7) {
    return n11.__v.__b - t7.__v.__b;
  }); t6 = $1a9a8ef576b7773d$var$i.pop(); ) if (t6.__P) try {
    t6.__H.__h.forEach($1a9a8ef576b7773d$var$g), t6.__H.__h.forEach($1a9a8ef576b7773d$var$j), t6.__H.__h = [];
  } catch (u4) {
    t6.__H.__h = [], (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e(u4, t6.__v);
  }
}
(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__b = function(n12) {
  $1a9a8ef576b7773d$var$u = null, $1a9a8ef576b7773d$var$c && $1a9a8ef576b7773d$var$c(n12);
}, (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__r = function(n13) {
  $1a9a8ef576b7773d$var$f && $1a9a8ef576b7773d$var$f(n13), $1a9a8ef576b7773d$var$t = 0;
  var r8 = ($1a9a8ef576b7773d$var$u = n13.__c).__H;
  r8 && (r8.__h.forEach($1a9a8ef576b7773d$var$g), r8.__h.forEach($1a9a8ef576b7773d$var$j), r8.__h = []);
}, (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).diffed = function(t8) {
  $1a9a8ef576b7773d$var$e && $1a9a8ef576b7773d$var$e(t8);
  var o6 = t8.__c;
  o6 && o6.__H && o6.__H.__h.length && (1 !== $1a9a8ef576b7773d$var$i.push(o6) && $1a9a8ef576b7773d$var$r === (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).requestAnimationFrame || (($1a9a8ef576b7773d$var$r = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).requestAnimationFrame) || function(n14) {
    var t9, u5 = function() {
      clearTimeout(r9), $1a9a8ef576b7773d$var$b && cancelAnimationFrame(t9), setTimeout(n14);
    }, r9 = setTimeout(u5, 100);
    $1a9a8ef576b7773d$var$b && (t9 = requestAnimationFrame(u5));
  })($1a9a8ef576b7773d$var$x)), $1a9a8ef576b7773d$var$u = null;
}, (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__c = function(t10, u6) {
  u6.some(function(t11) {
    try {
      t11.__h.forEach($1a9a8ef576b7773d$var$g), t11.__h = t11.__h.filter(function(n15) {
        return !n15.__ || $1a9a8ef576b7773d$var$j(n15);
      });
    } catch (r10) {
      u6.some(function(n16) {
        n16.__h && (n16.__h = []);
      }), u6 = [], (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e(r10, t11.__v);
    }
  }), $1a9a8ef576b7773d$var$a && $1a9a8ef576b7773d$var$a(t10, u6);
}, (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).unmount = function(t12) {
  $1a9a8ef576b7773d$var$v && $1a9a8ef576b7773d$var$v(t12);
  var u7, r11 = t12.__c;
  r11 && r11.__H && (r11.__H.__.forEach(function(n17) {
    try {
      $1a9a8ef576b7773d$var$g(n17);
    } catch (n18) {
      u7 = n18;
    }
  }), u7 && (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e(u7, r11.__v));
};
var $1a9a8ef576b7773d$var$b = "function" == typeof requestAnimationFrame;
function $1a9a8ef576b7773d$var$g(n19) {
  var t13 = $1a9a8ef576b7773d$var$u, r12 = n19.__c;
  "function" == typeof r12 && (n19.__c = void 0, r12()), $1a9a8ef576b7773d$var$u = t13;
}
function $1a9a8ef576b7773d$var$j(n20) {
  var t14 = $1a9a8ef576b7773d$var$u;
  n20.__c = n20.__(), $1a9a8ef576b7773d$var$u = t14;
}
function $dc040a17866866fa$var$S(n1, t1) {
  for (var e1 in t1) n1[e1] = t1[e1];
  return n1;
}
function $dc040a17866866fa$var$C(n2, t2) {
  for (var e2 in n2) if ("__source" !== e2 && !(e2 in t2)) return true;
  for (var r1 in t2) if ("__source" !== r1 && n2[r1] !== t2[r1]) return true;
  return false;
}
function $dc040a17866866fa$export$221d75b3f55bb0bd(n3) {
  this.props = n3;
}
($dc040a17866866fa$export$221d75b3f55bb0bd.prototype = new (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8)()).isPureReactComponent = true, $dc040a17866866fa$export$221d75b3f55bb0bd.prototype.shouldComponentUpdate = function(n6, t5) {
  return $dc040a17866866fa$var$C(this.props, n6) || $dc040a17866866fa$var$C(this.state, t5);
};
var $dc040a17866866fa$var$w = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__b;
(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__b = function(n7) {
  n7.type && n7.type.__f && n7.ref && (n7.props.ref = n7.ref, n7.ref = null), $dc040a17866866fa$var$w && $dc040a17866866fa$var$w(n7);
};
var $dc040a17866866fa$var$R = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;
var $dc040a17866866fa$var$A = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e;
(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e = function(n12, t10, e6) {
  if (n12.then) {
    for (var r5, u1 = t10; u1 = u1.__; ) if ((r5 = u1.__c) && r5.__c) return null == t10.__e && (t10.__e = e6.__e, t10.__k = e6.__k), r5.__c(n12, t10);
  }
  $dc040a17866866fa$var$A(n12, t10, e6);
};
var $dc040a17866866fa$var$O = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).unmount;
function $dc040a17866866fa$export$74bf444e3cd11ea5() {
  this.__u = 0, this.t = null, this.__b = null;
}
function $dc040a17866866fa$var$U(n13) {
  var t11 = n13.__.__c;
  return t11 && t11.__e && t11.__e(n13);
}
function $dc040a17866866fa$export$998bcd577473dd93() {
  this.u = null, this.o = null;
}
(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).unmount = function(n17) {
  var t13 = n17.__c;
  t13 && t13.__R && t13.__R(), t13 && true === n17.__h && (n17.type = null), $dc040a17866866fa$var$O && $dc040a17866866fa$var$O(n17);
}, ($dc040a17866866fa$export$74bf444e3cd11ea5.prototype = new (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8)()).__c = function(n18, t14) {
  var e8 = t14.__c, r7 = this;
  null == r7.t && (r7.t = []), r7.t.push(e8);
  var u4 = $dc040a17866866fa$var$U(r7.__v), o1 = false, i1 = function() {
    o1 || (o1 = true, e8.__R = null, u4 ? u4(l1) : l1());
  };
  e8.__R = i1;
  var l1 = function() {
    if (!--r7.__u) {
      if (r7.state.__e) {
        var n19 = r7.state.__e;
        r7.__v.__k[0] = function n22(t17, e9, r8) {
          return t17 && (t17.__v = null, t17.__k = t17.__k && t17.__k.map(function(t18) {
            return n22(t18, e9, r8);
          }), t17.__c && t17.__c.__P === e9 && (t17.__e && r8.insertBefore(t17.__e, t17.__d), t17.__c.__e = true, t17.__c.__P = r8)), t17;
        }(n19, n19.__c.__P, n19.__c.__O);
      }
      var t15;
      for (r7.setState({
        __e: r7.__b = null
      }); t15 = r7.t.pop(); ) t15.forceUpdate();
    }
  }, c1 = true === t14.__h;
  r7.__u++ || c1 || r7.setState({
    __e: r7.__b = r7.__v.__k[0]
  }), n18.then(i1, i1);
}, $dc040a17866866fa$export$74bf444e3cd11ea5.prototype.componentWillUnmount = function() {
  this.t = [];
}, $dc040a17866866fa$export$74bf444e3cd11ea5.prototype.render = function(n23, t19) {
  if (this.__b) {
    if (this.__v.__k) {
      var e10 = document.createElement("div"), r9 = this.__v.__k[0].__c;
      this.__v.__k[0] = function n24(t20, e13, r12) {
        return t20 && (t20.__c && t20.__c.__H && (t20.__c.__H.__.forEach(function(n25) {
          "function" == typeof n25.__c && n25.__c();
        }), t20.__c.__H = null), null != (t20 = $dc040a17866866fa$var$S({}, t20)).__c && (t20.__c.__P === r12 && (t20.__c.__P = e13), t20.__c = null), t20.__k = t20.__k && t20.__k.map(function(t21) {
          return n24(t21, e13, r12);
        })), t20;
      }(this.__b, e10, r9.__O = r9.__P);
    }
    this.__b = null;
  }
  var u5 = t19.__e && (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d)((0, $fb96b826c0c5f37a$export$ffb0004e005737fa), null, n23.fallback);
  return u5 && (u5.__h = null), [
    (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d)((0, $fb96b826c0c5f37a$export$ffb0004e005737fa), null, t19.__e ? null : n23.children),
    u5
  ];
};
var $dc040a17866866fa$var$T = function(n26, t22, e14) {
  if (++e14[1] === e14[0] && n26.o.delete(t22), n26.props.revealOrder && ("t" !== n26.props.revealOrder[0] || !n26.o.size)) for (e14 = n26.u; e14; ) {
    for (; e14.length > 3; ) e14.pop()();
    if (e14[1] < e14[0]) break;
    n26.u = e14 = e14[2];
  }
};
($dc040a17866866fa$export$998bcd577473dd93.prototype = new (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8)()).__e = function(n33) {
  var t25 = this, e16 = $dc040a17866866fa$var$U(t25.__v), r13 = t25.o.get(n33);
  return r13[0]++, function(u6) {
    var o2 = function() {
      t25.props.revealOrder ? (r13.push(u6), $dc040a17866866fa$var$T(t25, n33, r13)) : u6();
    };
    e16 ? e16(o2) : o2();
  };
}, $dc040a17866866fa$export$998bcd577473dd93.prototype.render = function(n34) {
  this.u = null, this.o = /* @__PURE__ */ new Map();
  var t26 = (0, $fb96b826c0c5f37a$export$47e4c5b300681277)(n34.children);
  n34.revealOrder && "b" === n34.revealOrder[0] && t26.reverse();
  for (var e17 = t26.length; e17--; ) this.o.set(t26[e17], this.u = [
    1,
    0,
    this.u
  ]);
  return n34.children;
}, $dc040a17866866fa$export$998bcd577473dd93.prototype.componentDidUpdate = $dc040a17866866fa$export$998bcd577473dd93.prototype.componentDidMount = function() {
  var n35 = this;
  this.o.forEach(function(t27, e18) {
    $dc040a17866866fa$var$T(n35, e18, t27);
  });
};
var $dc040a17866866fa$var$j = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
var $dc040a17866866fa$var$P = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
var $dc040a17866866fa$var$V = "undefined" != typeof document;
var $dc040a17866866fa$var$z = function(n36) {
  return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/i : /fil|che|ra/i).test(n36);
};
(0, $fb96b826c0c5f37a$export$16fa2f45be04daa8).prototype.isReactComponent = {}, [
  "componentWillMount",
  "componentWillReceiveProps",
  "componentWillUpdate"
].forEach(function(n39) {
  Object.defineProperty((0, $fb96b826c0c5f37a$export$16fa2f45be04daa8).prototype, n39, {
    configurable: true,
    get: function() {
      return this["UNSAFE_" + n39];
    },
    set: function(t30) {
      Object.defineProperty(this, n39, {
        configurable: true,
        writable: true,
        value: t30
      });
    }
  });
});
var $dc040a17866866fa$var$H = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).event;
function $dc040a17866866fa$var$Z() {
}
function $dc040a17866866fa$var$Y() {
  return this.cancelBubble;
}
function $dc040a17866866fa$var$q() {
  return this.defaultPrevented;
}
(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).event = function(n40) {
  return $dc040a17866866fa$var$H && (n40 = $dc040a17866866fa$var$H(n40)), n40.persist = $dc040a17866866fa$var$Z, n40.isPropagationStopped = $dc040a17866866fa$var$Y, n40.isDefaultPrevented = $dc040a17866866fa$var$q, n40.nativeEvent = n40;
};
var $dc040a17866866fa$var$G;
var $dc040a17866866fa$var$J = {
  configurable: true,
  get: function() {
    return this.class;
  }
};
var $dc040a17866866fa$var$K = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).vnode;
(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).vnode = function(n41) {
  var t31 = n41.type, e21 = n41.props, r14 = e21;
  if ("string" == typeof t31) {
    var u7 = -1 === t31.indexOf("-");
    for (var o3 in r14 = {}, e21) {
      var i2 = e21[o3];
      $dc040a17866866fa$var$V && "children" === o3 && "noscript" === t31 || "value" === o3 && "defaultValue" in e21 && null == i2 || ("defaultValue" === o3 && "value" in e21 && null == e21.value ? o3 = "value" : "download" === o3 && true === i2 ? i2 = "" : /ondoubleclick/i.test(o3) ? o3 = "ondblclick" : /^onchange(textarea|input)/i.test(o3 + t31) && !$dc040a17866866fa$var$z(e21.type) ? o3 = "oninput" : /^onfocus$/i.test(o3) ? o3 = "onfocusin" : /^onblur$/i.test(o3) ? o3 = "onfocusout" : /^on(Ani|Tra|Tou|BeforeInp)/.test(o3) ? o3 = o3.toLowerCase() : u7 && $dc040a17866866fa$var$P.test(o3) ? o3 = o3.replace(/[A-Z0-9]/, "-$&").toLowerCase() : null === i2 && (i2 = void 0), r14[o3] = i2);
    }
    "select" == t31 && r14.multiple && Array.isArray(r14.value) && (r14.value = (0, $fb96b826c0c5f37a$export$47e4c5b300681277)(e21.children).forEach(function(n42) {
      n42.props.selected = -1 != r14.value.indexOf(n42.props.value);
    })), "select" == t31 && null != r14.defaultValue && (r14.value = (0, $fb96b826c0c5f37a$export$47e4c5b300681277)(e21.children).forEach(function(n43) {
      n43.props.selected = r14.multiple ? -1 != r14.defaultValue.indexOf(n43.props.value) : r14.defaultValue == n43.props.value;
    })), n41.props = r14, e21.class != e21.className && ($dc040a17866866fa$var$J.enumerable = "className" in e21, null != e21.className && (r14.class = e21.className), Object.defineProperty(r14, "className", $dc040a17866866fa$var$J));
  }
  n41.$$typeof = $dc040a17866866fa$var$j, $dc040a17866866fa$var$K && $dc040a17866866fa$var$K(n41);
};
var $dc040a17866866fa$var$Q = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__r;
(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__r = function(n44) {
  $dc040a17866866fa$var$Q && $dc040a17866866fa$var$Q(n44), $dc040a17866866fa$var$G = n44.__c;
};
var $ec8c39fdad15601a$var$THEME_ICONS = {
  light: "outline",
  dark: "solid"
};
var $ec8c39fdad15601a$export$2e2bcd8739ae039 = class extends (0, $dc040a17866866fa$export$221d75b3f55bb0bd) {
  renderIcon(category) {
    const { icon } = category;
    if (icon) {
      if (icon.svg) return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {
        class: "flex",
        dangerouslySetInnerHTML: {
          __html: icon.svg
        }
      });
      if (icon.src) return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("img", {
        src: icon.src
      });
    }
    const categoryIcons = (0, $fcccfb36ed0cde68$export$2e2bcd8739ae039).categories[category.id] || (0, $fcccfb36ed0cde68$export$2e2bcd8739ae039).categories.custom;
    const style = this.props.icons == "auto" ? $ec8c39fdad15601a$var$THEME_ICONS[this.props.theme] : this.props.icons;
    return categoryIcons[style] || categoryIcons;
  }
  render() {
    let selectedCategoryIndex = null;
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("nav", {
      id: "nav",
      class: "padding",
      "data-position": this.props.position,
      dir: this.props.dir,
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
        class: "flex relative",
        children: [
          this.categories.map((category, i) => {
            const title = category.name || (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).categories[category.id];
            const selected = !this.props.unfocused && category.id == this.state.categoryId;
            if (selected) selectedCategoryIndex = i;
            return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {
              "aria-label": title,
              "aria-selected": selected || void 0,
              title,
              type: "button",
              class: "flex flex-grow flex-center",
              onMouseDown: (e) => e.preventDefault(),
              onClick: () => {
                this.props.onClick({
                  category,
                  i
                });
              },
              children: this.renderIcon(category)
            });
          }),
          /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
            class: "bar",
            style: {
              width: `${100 / this.categories.length}%`,
              opacity: selectedCategoryIndex == null ? 0 : 1,
              transform: this.props.dir === "rtl" ? `scaleX(-1) translateX(${selectedCategoryIndex * 100}%)` : `translateX(${selectedCategoryIndex * 100}%)`
            }
          })
        ]
      })
    });
  }
  constructor() {
    super();
    this.categories = (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).categories.filter((category) => {
      return !category.target;
    });
    this.state = {
      categoryId: this.categories[0].id
    };
  }
};
var $e0d4dda61265ff1e$export$2e2bcd8739ae039 = class extends (0, $dc040a17866866fa$export$221d75b3f55bb0bd) {
  shouldComponentUpdate(nextProps) {
    for (let k in nextProps) {
      if (k == "children") continue;
      if (nextProps[k] != this.props[k]) return true;
    }
    return false;
  }
  render() {
    return this.props.children;
  }
};
var $89bd6bb200cc8fef$var$Performance = {
  rowsPerRender: 10
};
var $89bd6bb200cc8fef$export$2e2bcd8739ae039 = class extends (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8) {
  getInitialState(props = this.props) {
    return {
      skin: (0, $f72b75cf796873c7$export$2e2bcd8739ae039).get("skin") || props.skin,
      theme: this.initTheme(props.theme)
    };
  }
  componentWillMount() {
    this.dir = (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).rtl ? "rtl" : "ltr";
    this.refs = {
      menu: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),
      navigation: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),
      scroll: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),
      search: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),
      searchInput: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),
      skinToneButton: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),
      skinToneRadio: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)()
    };
    this.initGrid();
    if (this.props.stickySearch == false && this.props.searchPosition == "sticky") {
      console.warn("[EmojiMart] Deprecation warning: `stickySearch` has been renamed `searchPosition`.");
      this.props.searchPosition = "static";
    }
  }
  componentDidMount() {
    this.register();
    this.shadowRoot = this.base.parentNode;
    if (this.props.autoFocus) {
      const { searchInput } = this.refs;
      if (searchInput.current) searchInput.current.focus();
    }
  }
  componentWillReceiveProps(nextProps) {
    this.nextState || (this.nextState = {});
    for (const k1 in nextProps) this.nextState[k1] = nextProps[k1];
    clearTimeout(this.nextStateTimer);
    this.nextStateTimer = setTimeout(() => {
      let requiresGridReset = false;
      for (const k in this.nextState) {
        this.props[k] = this.nextState[k];
        if (k === "custom" || k === "categories") requiresGridReset = true;
      }
      delete this.nextState;
      const nextState = this.getInitialState();
      if (requiresGridReset) return this.reset(nextState);
      this.setState(nextState);
    });
  }
  componentWillUnmount() {
    this.unregister();
  }
  async reset(nextState = {}) {
    await (0, $7adb23b0109cc36a$export$2cd8252107eb640b)(this.props);
    this.initGrid();
    this.unobserve();
    this.setState(nextState, () => {
      this.observeCategories();
      this.observeRows();
    });
  }
  register() {
    document.addEventListener("click", this.handleClickOutside);
    this.observe();
  }
  unregister() {
    document.removeEventListener("click", this.handleClickOutside);
    this.darkMedia?.removeEventListener("change", this.darkMediaCallback);
    this.unobserve();
  }
  observe() {
    this.observeCategories();
    this.observeRows();
  }
  unobserve({ except = [] } = {}) {
    if (!Array.isArray(except)) except = [
      except
    ];
    for (const observer of this.observers) {
      if (except.includes(observer)) continue;
      observer.disconnect();
    }
    this.observers = [].concat(except);
  }
  initGrid() {
    const { categories } = (0, $7adb23b0109cc36a$export$2d0294657ab35f1b);
    this.refs.categories = /* @__PURE__ */ new Map();
    const navKey = (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).categories.map((category) => category.id).join(",");
    if (this.navKey && this.navKey != navKey) this.refs.scroll.current && (this.refs.scroll.current.scrollTop = 0);
    this.navKey = navKey;
    this.grid = [];
    this.grid.setsize = 0;
    const addRow = (rows, category) => {
      const row = [];
      row.__categoryId = category.id;
      row.__index = rows.length;
      this.grid.push(row);
      const rowIndex = this.grid.length - 1;
      const rowRef = rowIndex % $89bd6bb200cc8fef$var$Performance.rowsPerRender ? {} : (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)();
      rowRef.index = rowIndex;
      rowRef.posinset = this.grid.setsize + 1;
      rows.push(rowRef);
      return row;
    };
    for (let category1 of categories) {
      const rows = [];
      let row = addRow(rows, category1);
      for (let emoji of category1.emojis) {
        if (row.length == this.getPerLine()) row = addRow(rows, category1);
        this.grid.setsize += 1;
        row.push(emoji);
      }
      this.refs.categories.set(category1.id, {
        root: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),
        rows
      });
    }
  }
  initTheme(theme) {
    if (theme != "auto") return theme;
    if (!this.darkMedia) {
      this.darkMedia = matchMedia("(prefers-color-scheme: dark)");
      if (this.darkMedia.media.match(/^not/)) return "light";
      this.darkMedia.addEventListener("change", this.darkMediaCallback);
    }
    return this.darkMedia.matches ? "dark" : "light";
  }
  initDynamicPerLine(props = this.props) {
    if (!props.dynamicWidth) return;
    const { element: element2, emojiButtonSize } = props;
    const calculatePerLine = () => {
      const { width } = element2.getBoundingClientRect();
      return Math.floor(width / emojiButtonSize);
    };
    const observer = new ResizeObserver(() => {
      this.unobserve({
        except: observer
      });
      this.setState({
        perLine: calculatePerLine()
      }, () => {
        this.initGrid();
        this.forceUpdate(() => {
          this.observeCategories();
          this.observeRows();
        });
      });
    });
    observer.observe(element2);
    this.observers.push(observer);
    return calculatePerLine();
  }
  getPerLine() {
    return this.state.perLine || this.props.perLine;
  }
  getEmojiByPos([p1, p2]) {
    const grid = this.state.searchResults || this.grid;
    const emoji = grid[p1] && grid[p1][p2];
    if (!emoji) return;
    return (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).get(emoji);
  }
  observeCategories() {
    const navigation = this.refs.navigation.current;
    if (!navigation) return;
    const visibleCategories = /* @__PURE__ */ new Map();
    const setFocusedCategory = (categoryId) => {
      if (categoryId != navigation.state.categoryId) navigation.setState({
        categoryId
      });
    };
    const observerOptions = {
      root: this.refs.scroll.current,
      threshold: [
        0,
        1
      ]
    };
    const observer = new IntersectionObserver((entries) => {
      for (const entry of entries) {
        const id = entry.target.dataset.id;
        visibleCategories.set(id, entry.intersectionRatio);
      }
      const ratios = [
        ...visibleCategories
      ];
      for (const [id, ratio] of ratios) if (ratio) {
        setFocusedCategory(id);
        break;
      }
    }, observerOptions);
    for (const { root } of this.refs.categories.values()) observer.observe(root.current);
    this.observers.push(observer);
  }
  observeRows() {
    const visibleRows = {
      ...this.state.visibleRows
    };
    const observer = new IntersectionObserver((entries) => {
      for (const entry of entries) {
        const index = parseInt(entry.target.dataset.index);
        if (entry.isIntersecting) visibleRows[index] = true;
        else delete visibleRows[index];
      }
      this.setState({
        visibleRows
      });
    }, {
      root: this.refs.scroll.current,
      rootMargin: `${this.props.emojiButtonSize * ($89bd6bb200cc8fef$var$Performance.rowsPerRender + 5)}px 0px ${this.props.emojiButtonSize * $89bd6bb200cc8fef$var$Performance.rowsPerRender}px`
    });
    for (const { rows } of this.refs.categories.values()) {
      for (const row of rows) if (row.current) observer.observe(row.current);
    }
    this.observers.push(observer);
  }
  preventDefault(e) {
    e.preventDefault();
  }
  unfocusSearch() {
    const input = this.refs.searchInput.current;
    if (!input) return;
    input.blur();
  }
  navigate({ e, input, left, right, up, down }) {
    const grid = this.state.searchResults || this.grid;
    if (!grid.length) return;
    let [p1, p2] = this.state.pos;
    const pos = (() => {
      if (p1 == 0) {
        if (p2 == 0 && !e.repeat && (left || up)) return null;
      }
      if (p1 == -1) {
        if (!e.repeat && (right || down) && input.selectionStart == input.value.length) return [
          0,
          0
        ];
        return null;
      }
      if (left || right) {
        let row = grid[p1];
        const increment = left ? -1 : 1;
        p2 += increment;
        if (!row[p2]) {
          p1 += increment;
          row = grid[p1];
          if (!row) {
            p1 = left ? 0 : grid.length - 1;
            p2 = left ? 0 : grid[p1].length - 1;
            return [
              p1,
              p2
            ];
          }
          p2 = left ? row.length - 1 : 0;
        }
        return [
          p1,
          p2
        ];
      }
      if (up || down) {
        p1 += up ? -1 : 1;
        const row = grid[p1];
        if (!row) {
          p1 = up ? 0 : grid.length - 1;
          p2 = up ? 0 : grid[p1].length - 1;
          return [
            p1,
            p2
          ];
        }
        if (!row[p2]) p2 = row.length - 1;
        return [
          p1,
          p2
        ];
      }
    })();
    if (pos) e.preventDefault();
    else {
      if (this.state.pos[0] > -1) this.setState({
        pos: [
          -1,
          -1
        ]
      });
      return;
    }
    this.setState({
      pos,
      keyboard: true
    }, () => {
      this.scrollTo({
        row: pos[0]
      });
    });
  }
  scrollTo({ categoryId, row }) {
    const grid = this.state.searchResults || this.grid;
    if (!grid.length) return;
    const scroll = this.refs.scroll.current;
    const scrollRect = scroll.getBoundingClientRect();
    let scrollTop = 0;
    if (row >= 0) categoryId = grid[row].__categoryId;
    if (categoryId) {
      const ref = this.refs[categoryId] || this.refs.categories.get(categoryId).root;
      const categoryRect = ref.current.getBoundingClientRect();
      scrollTop = categoryRect.top - (scrollRect.top - scroll.scrollTop) + 1;
    }
    if (row >= 0) {
      if (!row) scrollTop = 0;
      else {
        const rowIndex = grid[row].__index;
        const rowTop = scrollTop + rowIndex * this.props.emojiButtonSize;
        const rowBot = rowTop + this.props.emojiButtonSize + this.props.emojiButtonSize * 0.88;
        if (rowTop < scroll.scrollTop) scrollTop = rowTop;
        else if (rowBot > scroll.scrollTop + scrollRect.height) scrollTop = rowBot - scrollRect.height;
        else return;
      }
    }
    this.ignoreMouse();
    scroll.scrollTop = scrollTop;
  }
  ignoreMouse() {
    this.mouseIsIgnored = true;
    clearTimeout(this.ignoreMouseTimer);
    this.ignoreMouseTimer = setTimeout(() => {
      delete this.mouseIsIgnored;
    }, 100);
  }
  handleEmojiOver(pos) {
    if (this.mouseIsIgnored || this.state.showSkins) return;
    this.setState({
      pos: pos || [
        -1,
        -1
      ],
      keyboard: false
    });
  }
  handleEmojiClick({ e, emoji, pos }) {
    if (!this.props.onEmojiSelect) return;
    if (!emoji && pos) emoji = this.getEmojiByPos(pos);
    if (emoji) {
      const emojiData = (0, $693b183b0a78708f$export$d10ac59fbe52a745)(emoji, {
        skinIndex: this.state.skin - 1
      });
      if (this.props.maxFrequentRows) (0, $b22cfd0a55410b4f$export$2e2bcd8739ae039).add(emojiData, this.props);
      this.props.onEmojiSelect(emojiData, e);
    }
  }
  closeSkins() {
    if (!this.state.showSkins) return;
    this.setState({
      showSkins: null,
      tempSkin: null
    });
    this.base.removeEventListener("click", this.handleBaseClick);
    this.base.removeEventListener("keydown", this.handleBaseKeydown);
  }
  handleSkinMouseOver(tempSkin) {
    this.setState({
      tempSkin
    });
  }
  handleSkinClick(skin) {
    this.ignoreMouse();
    this.closeSkins();
    this.setState({
      skin,
      tempSkin: null
    });
    (0, $f72b75cf796873c7$export$2e2bcd8739ae039).set("skin", skin);
  }
  renderNav() {
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $ec8c39fdad15601a$export$2e2bcd8739ae039), {
      ref: this.refs.navigation,
      icons: this.props.icons,
      theme: this.state.theme,
      dir: this.dir,
      unfocused: !!this.state.searchResults,
      position: this.props.navPosition,
      onClick: this.handleCategoryClick
    }, this.navKey);
  }
  renderPreview() {
    const emoji = this.getEmojiByPos(this.state.pos);
    const noSearchResults = this.state.searchResults && !this.state.searchResults.length;
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
      id: "preview",
      class: "flex flex-middle",
      dir: this.dir,
      "data-position": this.props.previewPosition,
      children: [
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          class: "flex flex-middle flex-grow",
          children: [
            /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
              class: "flex flex-auto flex-middle flex-center",
              style: {
                height: this.props.emojiButtonSize,
                fontSize: this.props.emojiButtonSize
              },
              children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $254755d3f438722f$export$2e2bcd8739ae039), {
                emoji,
                id: noSearchResults ? this.props.noResultsEmoji || "cry" : this.props.previewEmoji || (this.props.previewPosition == "top" ? "point_down" : "point_up"),
                set: this.props.set,
                size: this.props.emojiButtonSize,
                skin: this.state.tempSkin || this.state.skin,
                spritesheet: true,
                getSpritesheetURL: this.props.getSpritesheetURL
              })
            }),
            /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
              class: `margin-${this.dir[0]}`,
              children: emoji || noSearchResults ? /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
                class: `padding-${this.dir[2]} align-${this.dir[0]}`,
                children: [
                  /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
                    class: "preview-title ellipsis",
                    children: emoji ? emoji.name : (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).search_no_results_1
                  }),
                  /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
                    class: "preview-subtitle ellipsis color-c",
                    children: emoji ? emoji.skins[0].shortcodes : (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).search_no_results_2
                  })
                ]
              }) : /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
                class: "preview-placeholder color-c",
                children: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).pick
              })
            })
          ]
        }),
        !emoji && this.props.skinTonePosition == "preview" && this.renderSkinToneButton()
      ]
    });
  }
  renderEmojiButton(emoji, { pos, posinset, grid }) {
    const size2 = this.props.emojiButtonSize;
    const skin = this.state.tempSkin || this.state.skin;
    const emojiSkin = emoji.skins[skin - 1] || emoji.skins[0];
    const native = emojiSkin.native;
    const selected = (0, $693b183b0a78708f$export$9cb4719e2e525b7a)(this.state.pos, pos);
    const key = pos.concat(emoji.id).join("");
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $e0d4dda61265ff1e$export$2e2bcd8739ae039), {
      selected,
      skin,
      size: size2,
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {
        "aria-label": native,
        "aria-selected": selected || void 0,
        "aria-posinset": posinset,
        "aria-setsize": grid.setsize,
        "data-keyboard": this.state.keyboard,
        title: this.props.previewPosition == "none" ? emoji.name : void 0,
        type: "button",
        class: "flex flex-center flex-middle",
        tabindex: "-1",
        onClick: (e) => this.handleEmojiClick({
          e,
          emoji
        }),
        onMouseEnter: () => this.handleEmojiOver(pos),
        onMouseLeave: () => this.handleEmojiOver(),
        style: {
          width: this.props.emojiButtonSize,
          height: this.props.emojiButtonSize,
          fontSize: this.props.emojiSize,
          lineHeight: 0
        },
        children: [
          /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
            "aria-hidden": "true",
            class: "background",
            style: {
              borderRadius: this.props.emojiButtonRadius,
              backgroundColor: this.props.emojiButtonColors ? this.props.emojiButtonColors[(posinset - 1) % this.props.emojiButtonColors.length] : void 0
            }
          }),
          /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $254755d3f438722f$export$2e2bcd8739ae039), {
            emoji,
            set: this.props.set,
            size: this.props.emojiSize,
            skin,
            spritesheet: true,
            getSpritesheetURL: this.props.getSpritesheetURL
          })
        ]
      })
    }, key);
  }
  renderSearch() {
    const renderSkinTone = this.props.previewPosition == "none" || this.props.skinTonePosition == "search";
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
      children: [
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          class: "spacer"
        }),
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          class: "flex flex-middle",
          children: [
            /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
              class: "search relative flex-grow",
              children: [
                /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("input", {
                  type: "search",
                  ref: this.refs.searchInput,
                  placeholder: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).search,
                  onClick: this.handleSearchClick,
                  onInput: this.handleSearchInput,
                  onKeyDown: this.handleSearchKeyDown,
                  autoComplete: "off"
                }),
                /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {
                  class: "icon loupe flex",
                  children: (0, $fcccfb36ed0cde68$export$2e2bcd8739ae039).search.loupe
                }),
                this.state.searchResults && /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {
                  title: "Clear",
                  "aria-label": "Clear",
                  type: "button",
                  class: "icon delete flex",
                  onClick: this.clearSearch,
                  onMouseDown: this.preventDefault,
                  children: (0, $fcccfb36ed0cde68$export$2e2bcd8739ae039).search.delete
                })
              ]
            }),
            renderSkinTone && this.renderSkinToneButton()
          ]
        })
      ]
    });
  }
  renderSearchResults() {
    const { searchResults } = this.state;
    if (!searchResults) return null;
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
      class: "category",
      ref: this.refs.search,
      children: [
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          class: `sticky padding-small align-${this.dir[0]}`,
          children: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).categories.search
        }),
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          children: !searchResults.length ? /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
            class: `padding-small align-${this.dir[0]}`,
            children: this.props.onAddCustomEmoji && /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("a", {
              onClick: this.props.onAddCustomEmoji,
              children: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).add_custom
            })
          }) : searchResults.map((row, i) => {
            return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
              class: "flex",
              children: row.map((emoji, ii) => {
                return this.renderEmojiButton(emoji, {
                  pos: [
                    i,
                    ii
                  ],
                  posinset: i * this.props.perLine + ii + 1,
                  grid: searchResults
                });
              })
            });
          })
        })
      ]
    });
  }
  renderCategories() {
    const { categories } = (0, $7adb23b0109cc36a$export$2d0294657ab35f1b);
    const hidden = !!this.state.searchResults;
    const perLine = this.getPerLine();
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
      style: {
        visibility: hidden ? "hidden" : void 0,
        display: hidden ? "none" : void 0,
        height: "100%"
      },
      children: categories.map((category) => {
        const { root, rows } = this.refs.categories.get(category.id);
        return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          "data-id": category.target ? category.target.id : category.id,
          class: "category",
          ref: root,
          children: [
            /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
              class: `sticky padding-small align-${this.dir[0]}`,
              children: category.name || (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).categories[category.id]
            }),
            /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
              class: "relative",
              style: {
                height: rows.length * this.props.emojiButtonSize
              },
              children: rows.map((row, i) => {
                const targetRow = row.index - row.index % $89bd6bb200cc8fef$var$Performance.rowsPerRender;
                const visible = this.state.visibleRows[targetRow];
                const ref = "current" in row ? row : void 0;
                if (!visible && !ref) return null;
                const start = i * perLine;
                const end = start + perLine;
                const emojiIds = category.emojis.slice(start, end);
                if (emojiIds.length < perLine) emojiIds.push(...new Array(perLine - emojiIds.length));
                return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
                  "data-index": row.index,
                  ref,
                  class: "flex row",
                  style: {
                    top: i * this.props.emojiButtonSize
                  },
                  children: visible && emojiIds.map((emojiId, ii) => {
                    if (!emojiId) return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
                      style: {
                        width: this.props.emojiButtonSize,
                        height: this.props.emojiButtonSize
                      }
                    });
                    const emoji = (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).get(emojiId);
                    return this.renderEmojiButton(emoji, {
                      pos: [
                        row.index,
                        ii
                      ],
                      posinset: row.posinset + ii,
                      grid: this.grid
                    });
                  })
                }, row.index);
              })
            })
          ]
        });
      })
    });
  }
  renderSkinToneButton() {
    if (this.props.skinTonePosition == "none") return null;
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
      class: "flex flex-auto flex-center flex-middle",
      style: {
        position: "relative",
        width: this.props.emojiButtonSize,
        height: this.props.emojiButtonSize
      },
      children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {
        type: "button",
        ref: this.refs.skinToneButton,
        class: "skin-tone-button flex flex-auto flex-center flex-middle",
        "aria-selected": this.state.showSkins ? "" : void 0,
        "aria-label": (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins.choose,
        title: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins.choose,
        onClick: this.openSkins,
        style: {
          width: this.props.emojiSize,
          height: this.props.emojiSize
        },
        children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {
          class: `skin-tone skin-tone-${this.state.skin}`
        })
      })
    });
  }
  renderLiveRegion() {
    const emoji = this.getEmojiByPos(this.state.pos);
    const contents = emoji ? emoji.name : "";
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
      "aria-live": "polite",
      class: "sr-only",
      children: contents
    });
  }
  renderSkins() {
    const skinToneButton = this.refs.skinToneButton.current;
    const skinToneButtonRect = skinToneButton.getBoundingClientRect();
    const baseRect = this.base.getBoundingClientRect();
    const position = {};
    if (this.dir == "ltr") position.right = baseRect.right - skinToneButtonRect.right - 3;
    else position.left = skinToneButtonRect.left - baseRect.left - 3;
    if (this.props.previewPosition == "bottom" && this.props.skinTonePosition == "preview") position.bottom = baseRect.bottom - skinToneButtonRect.top + 6;
    else {
      position.top = skinToneButtonRect.bottom - baseRect.top + 3;
      position.bottom = "auto";
    }
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
      ref: this.refs.menu,
      role: "radiogroup",
      dir: this.dir,
      "aria-label": (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins.choose,
      class: "menu hidden",
      "data-position": position.top ? "top" : "bottom",
      style: position,
      children: [
        ...Array(6).keys()
      ].map((i) => {
        const skin = i + 1;
        const checked = this.state.skin == skin;
        return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          children: [
            /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("input", {
              type: "radio",
              name: "skin-tone",
              value: skin,
              "aria-label": (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins[skin],
              ref: checked ? this.refs.skinToneRadio : null,
              defaultChecked: checked,
              onChange: () => this.handleSkinMouseOver(skin),
              onKeyDown: (e) => {
                if (e.code == "Enter" || e.code == "Space" || e.code == "Tab") {
                  e.preventDefault();
                  this.handleSkinClick(skin);
                }
              }
            }),
            /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {
              "aria-hidden": "true",
              tabindex: "-1",
              onClick: () => this.handleSkinClick(skin),
              onMouseEnter: () => this.handleSkinMouseOver(skin),
              onMouseLeave: () => this.handleSkinMouseOver(),
              class: "option flex flex-grow flex-middle",
              children: [
                /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {
                  class: `skin-tone skin-tone-${skin}`
                }),
                /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {
                  class: "margin-small-lr",
                  children: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins[skin]
                })
              ]
            })
          ]
        });
      })
    });
  }
  render() {
    const lineWidth = this.props.perLine * this.props.emojiButtonSize;
    return /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("section", {
      id: "root",
      class: "flex flex-column",
      dir: this.dir,
      style: {
        width: this.props.dynamicWidth ? "100%" : `calc(${lineWidth}px + (var(--padding) + var(--sidebar-width)))`
      },
      "data-emoji-set": this.props.set,
      "data-theme": this.state.theme,
      "data-menu": this.state.showSkins ? "" : void 0,
      children: [
        this.props.previewPosition == "top" && this.renderPreview(),
        this.props.navPosition == "top" && this.renderNav(),
        this.props.searchPosition == "sticky" && /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          class: "padding-lr",
          children: this.renderSearch()
        }),
        /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
          ref: this.refs.scroll,
          class: "scroll flex-grow padding-lr",
          children: /* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {
            style: {
              width: this.props.dynamicWidth ? "100%" : lineWidth,
              height: "100%"
            },
            children: [
              this.props.searchPosition == "static" && this.renderSearch(),
              this.renderSearchResults(),
              this.renderCategories()
            ]
          })
        }),
        this.props.navPosition == "bottom" && this.renderNav(),
        this.props.previewPosition == "bottom" && this.renderPreview(),
        this.state.showSkins && this.renderSkins(),
        this.renderLiveRegion()
      ]
    });
  }
  constructor(props) {
    super();
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "darkMediaCallback", () => {
      if (this.props.theme != "auto") return;
      this.setState({
        theme: this.darkMedia.matches ? "dark" : "light"
      });
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleClickOutside", (e) => {
      const { element: element2 } = this.props;
      if (e.target != element2) {
        if (this.state.showSkins) this.closeSkins();
        if (this.props.onClickOutside) this.props.onClickOutside(e);
      }
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleBaseClick", (e) => {
      if (!this.state.showSkins) return;
      if (!e.target.closest(".menu")) {
        e.preventDefault();
        e.stopImmediatePropagation();
        this.closeSkins();
      }
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleBaseKeydown", (e) => {
      if (!this.state.showSkins) return;
      if (e.key == "Escape") {
        e.preventDefault();
        e.stopImmediatePropagation();
        this.closeSkins();
      }
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleSearchClick", () => {
      const emoji = this.getEmojiByPos(this.state.pos);
      if (!emoji) return;
      this.setState({
        pos: [
          -1,
          -1
        ]
      });
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleSearchInput", async () => {
      const input = this.refs.searchInput.current;
      if (!input) return;
      const { value } = input;
      const searchResults = await (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).search(value);
      const afterRender = () => {
        if (!this.refs.scroll.current) return;
        this.refs.scroll.current.scrollTop = 0;
      };
      if (!searchResults) return this.setState({
        searchResults,
        pos: [
          -1,
          -1
        ]
      }, afterRender);
      const pos = input.selectionStart == input.value.length ? [
        0,
        0
      ] : [
        -1,
        -1
      ];
      const grid = [];
      grid.setsize = searchResults.length;
      let row = null;
      for (let emoji of searchResults) {
        if (!grid.length || row.length == this.getPerLine()) {
          row = [];
          row.__categoryId = "search";
          row.__index = grid.length;
          grid.push(row);
        }
        row.push(emoji);
      }
      this.ignoreMouse();
      this.setState({
        searchResults: grid,
        pos
      }, afterRender);
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleSearchKeyDown", (e) => {
      const input = e.currentTarget;
      e.stopImmediatePropagation();
      switch (e.key) {
        case "ArrowLeft":
          this.navigate({
            e,
            input,
            left: true
          });
          break;
        case "ArrowRight":
          this.navigate({
            e,
            input,
            right: true
          });
          break;
        case "ArrowUp":
          this.navigate({
            e,
            input,
            up: true
          });
          break;
        case "ArrowDown":
          this.navigate({
            e,
            input,
            down: true
          });
          break;
        case "Enter":
          e.preventDefault();
          this.handleEmojiClick({
            e,
            pos: this.state.pos
          });
          break;
        case "Escape":
          e.preventDefault();
          if (this.state.searchResults) this.clearSearch();
          else this.unfocusSearch();
          break;
        default:
          break;
      }
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "clearSearch", () => {
      const input = this.refs.searchInput.current;
      if (!input) return;
      input.value = "";
      input.focus();
      this.handleSearchInput();
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleCategoryClick", ({ category, i }) => {
      this.scrollTo(i == 0 ? {
        row: -1
      } : {
        categoryId: category.id
      });
    });
    (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "openSkins", (e) => {
      const { currentTarget } = e;
      const rect = currentTarget.getBoundingClientRect();
      this.setState({
        showSkins: rect
      }, async () => {
        await (0, $693b183b0a78708f$export$e772c8ff12451969)(2);
        const menu = this.refs.menu.current;
        if (!menu) return;
        menu.classList.remove("hidden");
        this.refs.skinToneRadio.current.focus();
        this.base.addEventListener("click", this.handleBaseClick, true);
        this.base.addEventListener("keydown", this.handleBaseKeydown, true);
      });
    });
    this.observers = [];
    this.state = {
      pos: [
        -1,
        -1
      ],
      perLine: this.initDynamicPerLine(props),
      visibleRows: {
        0: true
      },
      ...this.getInitialState(props)
    };
  }
};
var $efa000751917694d$export$2e2bcd8739ae039 = class extends (0, $26f27c338a96b1a6$export$2e2bcd8739ae039) {
  async connectedCallback() {
    const props = (0, $7adb23b0109cc36a$export$75fe5f91d452f94b)(this.props, (0, $b247ea80b67298d5$export$2e2bcd8739ae039), this);
    props.element = this;
    props.ref = (component) => {
      this.component = component;
    };
    await (0, $7adb23b0109cc36a$export$2cd8252107eb640b)(props);
    if (this.disconnected) return;
    (0, $fb96b826c0c5f37a$export$b3890eb0ae9dca99)(/* @__PURE__ */ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $89bd6bb200cc8fef$export$2e2bcd8739ae039), {
      ...props
    }), this.shadowRoot);
  }
  constructor(props) {
    super(props, {
      styles: (0, /* @__PURE__ */ $parcel$interopDefault($329d53ba9fd7125f$exports))
    });
  }
};
(0, $c770c458706daa72$export$2e2bcd8739ae039)($efa000751917694d$export$2e2bcd8739ae039, "Props", (0, $b247ea80b67298d5$export$2e2bcd8739ae039));
if (typeof customElements !== "undefined" && !customElements.get("em-emoji-picker")) customElements.define("em-emoji-picker", $efa000751917694d$export$2e2bcd8739ae039);
var $329d53ba9fd7125f$exports = {};
$329d53ba9fd7125f$exports = ':host {\n  width: min-content;\n  height: 435px;\n  min-height: 230px;\n  border-radius: var(--border-radius);\n  box-shadow: var(--shadow);\n  --border-radius: 10px;\n  --category-icon-size: 18px;\n  --font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", sans-serif;\n  --font-size: 15px;\n  --preview-placeholder-size: 21px;\n  --preview-title-size: 1.1em;\n  --preview-subtitle-size: .9em;\n  --shadow-color: 0deg 0% 0%;\n  --shadow: .3px .5px 2.7px hsl(var(--shadow-color) / .14), .4px .8px 1px -3.2px hsl(var(--shadow-color) / .14), 1px 2px 2.5px -4.5px hsl(var(--shadow-color) / .14);\n  display: flex;\n}\n\n[data-theme="light"] {\n  --em-rgb-color: var(--rgb-color, 34, 36, 39);\n  --em-rgb-accent: var(--rgb-accent, 34, 102, 237);\n  --em-rgb-background: var(--rgb-background, 255, 255, 255);\n  --em-rgb-input: var(--rgb-input, 255, 255, 255);\n  --em-color-border: var(--color-border, rgba(0, 0, 0, .05));\n  --em-color-border-over: var(--color-border-over, rgba(0, 0, 0, .1));\n}\n\n[data-theme="dark"] {\n  --em-rgb-color: var(--rgb-color, 222, 222, 221);\n  --em-rgb-accent: var(--rgb-accent, 58, 130, 247);\n  --em-rgb-background: var(--rgb-background, 21, 22, 23);\n  --em-rgb-input: var(--rgb-input, 0, 0, 0);\n  --em-color-border: var(--color-border, rgba(255, 255, 255, .1));\n  --em-color-border-over: var(--color-border-over, rgba(255, 255, 255, .2));\n}\n\n#root {\n  --color-a: rgb(var(--em-rgb-color));\n  --color-b: rgba(var(--em-rgb-color), .65);\n  --color-c: rgba(var(--em-rgb-color), .45);\n  --padding: 12px;\n  --padding-small: calc(var(--padding) / 2);\n  --sidebar-width: 16px;\n  --duration: 225ms;\n  --duration-fast: 125ms;\n  --duration-instant: 50ms;\n  --easing: cubic-bezier(.4, 0, .2, 1);\n  width: 100%;\n  text-align: left;\n  border-radius: var(--border-radius);\n  background-color: rgb(var(--em-rgb-background));\n  position: relative;\n}\n\n@media (prefers-reduced-motion) {\n  #root {\n    --duration: 0;\n    --duration-fast: 0;\n    --duration-instant: 0;\n  }\n}\n\n#root[data-menu] button {\n  cursor: auto;\n}\n\n#root[data-menu] .menu button {\n  cursor: pointer;\n}\n\n:host, #root, input, button {\n  color: rgb(var(--em-rgb-color));\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  line-height: normal;\n}\n\n*, :before, :after {\n  box-sizing: border-box;\n  min-width: 0;\n  margin: 0;\n  padding: 0;\n}\n\n.relative {\n  position: relative;\n}\n\n.flex {\n  display: flex;\n}\n\n.flex-auto {\n  flex: none;\n}\n\n.flex-center {\n  justify-content: center;\n}\n\n.flex-column {\n  flex-direction: column;\n}\n\n.flex-grow {\n  flex: auto;\n}\n\n.flex-middle {\n  align-items: center;\n}\n\n.flex-wrap {\n  flex-wrap: wrap;\n}\n\n.padding {\n  padding: var(--padding);\n}\n\n.padding-t {\n  padding-top: var(--padding);\n}\n\n.padding-lr {\n  padding-left: var(--padding);\n  padding-right: var(--padding);\n}\n\n.padding-r {\n  padding-right: var(--padding);\n}\n\n.padding-small {\n  padding: var(--padding-small);\n}\n\n.padding-small-b {\n  padding-bottom: var(--padding-small);\n}\n\n.padding-small-lr {\n  padding-left: var(--padding-small);\n  padding-right: var(--padding-small);\n}\n\n.margin {\n  margin: var(--padding);\n}\n\n.margin-r {\n  margin-right: var(--padding);\n}\n\n.margin-l {\n  margin-left: var(--padding);\n}\n\n.margin-small-l {\n  margin-left: var(--padding-small);\n}\n\n.margin-small-lr {\n  margin-left: var(--padding-small);\n  margin-right: var(--padding-small);\n}\n\n.align-l {\n  text-align: left;\n}\n\n.align-r {\n  text-align: right;\n}\n\n.color-a {\n  color: var(--color-a);\n}\n\n.color-b {\n  color: var(--color-b);\n}\n\n.color-c {\n  color: var(--color-c);\n}\n\n.ellipsis {\n  white-space: nowrap;\n  max-width: 100%;\n  width: auto;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.sr-only {\n  width: 1px;\n  height: 1px;\n  position: absolute;\n  top: auto;\n  left: -10000px;\n  overflow: hidden;\n}\n\na {\n  cursor: pointer;\n  color: rgb(var(--em-rgb-accent));\n}\n\na:hover {\n  text-decoration: underline;\n}\n\n.spacer {\n  height: 10px;\n}\n\n[dir="rtl"] .scroll {\n  padding-left: 0;\n  padding-right: var(--padding);\n}\n\n.scroll {\n  padding-right: 0;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.scroll::-webkit-scrollbar {\n  width: var(--sidebar-width);\n  height: var(--sidebar-width);\n}\n\n.scroll::-webkit-scrollbar-track {\n  border: 0;\n}\n\n.scroll::-webkit-scrollbar-button {\n  width: 0;\n  height: 0;\n  display: none;\n}\n\n.scroll::-webkit-scrollbar-corner {\n  background-color: rgba(0, 0, 0, 0);\n}\n\n.scroll::-webkit-scrollbar-thumb {\n  min-height: 20%;\n  min-height: 65px;\n  border: 4px solid rgb(var(--em-rgb-background));\n  border-radius: 8px;\n}\n\n.scroll::-webkit-scrollbar-thumb:hover {\n  background-color: var(--em-color-border-over) !important;\n}\n\n.scroll:hover::-webkit-scrollbar-thumb {\n  background-color: var(--em-color-border);\n}\n\n.sticky {\n  z-index: 1;\n  background-color: rgba(var(--em-rgb-background), .9);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n  font-weight: 500;\n  position: sticky;\n  top: -1px;\n}\n\n[dir="rtl"] .search input[type="search"] {\n  padding: 10px 2.2em 10px 2em;\n}\n\n[dir="rtl"] .search .loupe {\n  left: auto;\n  right: .7em;\n}\n\n[dir="rtl"] .search .delete {\n  left: .7em;\n  right: auto;\n}\n\n.search {\n  z-index: 2;\n  position: relative;\n}\n\n.search input, .search button {\n  font-size: calc(var(--font-size)  - 1px);\n}\n\n.search input[type="search"] {\n  width: 100%;\n  background-color: var(--em-color-border);\n  transition-duration: var(--duration);\n  transition-property: background-color, box-shadow;\n  transition-timing-function: var(--easing);\n  border: 0;\n  border-radius: 10px;\n  outline: 0;\n  padding: 10px 2em 10px 2.2em;\n  display: block;\n}\n\n.search input[type="search"]::-ms-input-placeholder {\n  color: inherit;\n  opacity: .6;\n}\n\n.search input[type="search"]::placeholder {\n  color: inherit;\n  opacity: .6;\n}\n\n.search input[type="search"], .search input[type="search"]::-webkit-search-decoration, .search input[type="search"]::-webkit-search-cancel-button, .search input[type="search"]::-webkit-search-results-button, .search input[type="search"]::-webkit-search-results-decoration {\n  -webkit-appearance: none;\n  -ms-appearance: none;\n  appearance: none;\n}\n\n.search input[type="search"]:focus {\n  background-color: rgb(var(--em-rgb-input));\n  box-shadow: inset 0 0 0 1px rgb(var(--em-rgb-accent)), 0 1px 3px rgba(65, 69, 73, .2);\n}\n\n.search .icon {\n  z-index: 1;\n  color: rgba(var(--em-rgb-color), .7);\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n.search .loupe {\n  pointer-events: none;\n  left: .7em;\n}\n\n.search .delete {\n  right: .7em;\n}\n\nsvg {\n  fill: currentColor;\n  width: 1em;\n  height: 1em;\n}\n\nbutton {\n  -webkit-appearance: none;\n  -ms-appearance: none;\n  appearance: none;\n  cursor: pointer;\n  color: currentColor;\n  background-color: rgba(0, 0, 0, 0);\n  border: 0;\n}\n\n#nav {\n  z-index: 2;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-right: var(--sidebar-width);\n  position: relative;\n}\n\n#nav button {\n  color: var(--color-b);\n  transition: color var(--duration) var(--easing);\n}\n\n#nav button:hover {\n  color: var(--color-a);\n}\n\n#nav svg, #nav img {\n  width: var(--category-icon-size);\n  height: var(--category-icon-size);\n}\n\n#nav[dir="rtl"] .bar {\n  left: auto;\n  right: 0;\n}\n\n#nav .bar {\n  width: 100%;\n  height: 3px;\n  background-color: rgb(var(--em-rgb-accent));\n  transition: transform var(--duration) var(--easing);\n  border-radius: 3px 3px 0 0;\n  position: absolute;\n  bottom: -12px;\n  left: 0;\n}\n\n#nav button[aria-selected] {\n  color: rgb(var(--em-rgb-accent));\n}\n\n#preview {\n  z-index: 2;\n  padding: calc(var(--padding)  + 4px) var(--padding);\n  padding-right: var(--sidebar-width);\n  position: relative;\n}\n\n#preview .preview-placeholder {\n  font-size: var(--preview-placeholder-size);\n}\n\n#preview .preview-title {\n  font-size: var(--preview-title-size);\n}\n\n#preview .preview-subtitle {\n  font-size: var(--preview-subtitle-size);\n}\n\n#nav:before, #preview:before {\n  content: "";\n  height: 2px;\n  position: absolute;\n  left: 0;\n  right: 0;\n}\n\n#nav[data-position="top"]:before, #preview[data-position="top"]:before {\n  background: linear-gradient(to bottom, var(--em-color-border), transparent);\n  top: 100%;\n}\n\n#nav[data-position="bottom"]:before, #preview[data-position="bottom"]:before {\n  background: linear-gradient(to top, var(--em-color-border), transparent);\n  bottom: 100%;\n}\n\n.category:last-child {\n  min-height: calc(100% + 1px);\n}\n\n.category button {\n  font-family: -apple-system, BlinkMacSystemFont, Helvetica Neue, sans-serif;\n  position: relative;\n}\n\n.category button > * {\n  position: relative;\n}\n\n.category button .background {\n  opacity: 0;\n  background-color: var(--em-color-border);\n  transition: opacity var(--duration-fast) var(--easing) var(--duration-instant);\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.category button:hover .background {\n  transition-duration: var(--duration-instant);\n  transition-delay: 0s;\n}\n\n.category button[aria-selected] .background {\n  opacity: 1;\n}\n\n.category button[data-keyboard] .background {\n  transition: none;\n}\n\n.row {\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.skin-tone-button {\n  border: 1px solid rgba(0, 0, 0, 0);\n  border-radius: 100%;\n}\n\n.skin-tone-button:hover {\n  border-color: var(--em-color-border);\n}\n\n.skin-tone-button:active .skin-tone {\n  transform: scale(.85) !important;\n}\n\n.skin-tone-button .skin-tone {\n  transition: transform var(--duration) var(--easing);\n}\n\n.skin-tone-button[aria-selected] {\n  background-color: var(--em-color-border);\n  border-top-color: rgba(0, 0, 0, .05);\n  border-bottom-color: rgba(0, 0, 0, 0);\n  border-left-width: 0;\n  border-right-width: 0;\n}\n\n.skin-tone-button[aria-selected] .skin-tone {\n  transform: scale(.9);\n}\n\n.menu {\n  z-index: 2;\n  white-space: nowrap;\n  border: 1px solid var(--em-color-border);\n  background-color: rgba(var(--em-rgb-background), .9);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n  transition-property: opacity, transform;\n  transition-duration: var(--duration);\n  transition-timing-function: var(--easing);\n  border-radius: 10px;\n  padding: 4px;\n  position: absolute;\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, .05);\n}\n\n.menu.hidden {\n  opacity: 0;\n}\n\n.menu[data-position="bottom"] {\n  transform-origin: 100% 100%;\n}\n\n.menu[data-position="bottom"].hidden {\n  transform: scale(.9)rotate(-3deg)translateY(5%);\n}\n\n.menu[data-position="top"] {\n  transform-origin: 100% 0;\n}\n\n.menu[data-position="top"].hidden {\n  transform: scale(.9)rotate(3deg)translateY(-5%);\n}\n\n.menu input[type="radio"] {\n  clip: rect(0 0 0 0);\n  width: 1px;\n  height: 1px;\n  border: 0;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  overflow: hidden;\n}\n\n.menu input[type="radio"]:checked + .option {\n  box-shadow: 0 0 0 2px rgb(var(--em-rgb-accent));\n}\n\n.option {\n  width: 100%;\n  border-radius: 6px;\n  padding: 4px 6px;\n}\n\n.option:hover {\n  color: #fff;\n  background-color: rgb(var(--em-rgb-accent));\n}\n\n.skin-tone {\n  width: 16px;\n  height: 16px;\n  border-radius: 100%;\n  display: inline-block;\n  position: relative;\n  overflow: hidden;\n}\n\n.skin-tone:after {\n  content: "";\n  mix-blend-mode: overlay;\n  background: linear-gradient(rgba(255, 255, 255, .2), rgba(0, 0, 0, 0));\n  border: 1px solid rgba(0, 0, 0, .8);\n  border-radius: 100%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: inset 0 -2px 3px #000, inset 0 1px 2px #fff;\n}\n\n.skin-tone-1 {\n  background-color: #ffc93a;\n}\n\n.skin-tone-2 {\n  background-color: #ffdab7;\n}\n\n.skin-tone-3 {\n  background-color: #e7b98f;\n}\n\n.skin-tone-4 {\n  background-color: #c88c61;\n}\n\n.skin-tone-5 {\n  background-color: #a46134;\n}\n\n.skin-tone-6 {\n  background-color: #5d4437;\n}\n\n[data-index] {\n  justify-content: space-between;\n}\n\n[data-emoji-set="twitter"] .skin-tone:after {\n  box-shadow: none;\n  border-color: rgba(0, 0, 0, .5);\n}\n\n[data-emoji-set="twitter"] .skin-tone-1 {\n  background-color: #fade72;\n}\n\n[data-emoji-set="twitter"] .skin-tone-2 {\n  background-color: #f3dfd0;\n}\n\n[data-emoji-set="twitter"] .skin-tone-3 {\n  background-color: #eed3a8;\n}\n\n[data-emoji-set="twitter"] .skin-tone-4 {\n  background-color: #cfad8d;\n}\n\n[data-emoji-set="twitter"] .skin-tone-5 {\n  background-color: #a8805d;\n}\n\n[data-emoji-set="twitter"] .skin-tone-6 {\n  background-color: #765542;\n}\n\n[data-emoji-set="google"] .skin-tone:after {\n  box-shadow: inset 0 0 2px 2px rgba(0, 0, 0, .4);\n}\n\n[data-emoji-set="google"] .skin-tone-1 {\n  background-color: #f5c748;\n}\n\n[data-emoji-set="google"] .skin-tone-2 {\n  background-color: #f1d5aa;\n}\n\n[data-emoji-set="google"] .skin-tone-3 {\n  background-color: #d4b48d;\n}\n\n[data-emoji-set="google"] .skin-tone-4 {\n  background-color: #aa876b;\n}\n\n[data-emoji-set="google"] .skin-tone-5 {\n  background-color: #916544;\n}\n\n[data-emoji-set="google"] .skin-tone-6 {\n  background-color: #61493f;\n}\n\n[data-emoji-set="facebook"] .skin-tone:after {\n  border-color: rgba(0, 0, 0, .4);\n  box-shadow: inset 0 -2px 3px #000, inset 0 1px 4px #fff;\n}\n\n[data-emoji-set="facebook"] .skin-tone-1 {\n  background-color: #f5c748;\n}\n\n[data-emoji-set="facebook"] .skin-tone-2 {\n  background-color: #f1d5aa;\n}\n\n[data-emoji-set="facebook"] .skin-tone-3 {\n  background-color: #d4b48d;\n}\n\n[data-emoji-set="facebook"] .skin-tone-4 {\n  background-color: #aa876b;\n}\n\n[data-emoji-set="facebook"] .skin-tone-5 {\n  background-color: #916544;\n}\n\n[data-emoji-set="facebook"] .skin-tone-6 {\n  background-color: #61493f;\n}\n\n';

// src/ui/popovers/base-component-behavior.ts
var BaseComponentBehavior = class {
  constructor(id, view) {
    this.id = id;
    this.component = new view.Component({
      target: document.body,
      props: {
        popover: true,
        close: this.close,
        ...view.props
      }
    });
    this.componentHtmlEl = document.querySelector(`#${id}[data-popover="true"]`);
  }
  componentHtmlEl;
  component;
  autoUpdateCleanup;
  open(refHtmlEl) {
    if (!Popover.mutationObserverStarted) {
      const cb = (mutationRecords) => {
        mutationRecords.forEach((record) => {
          const modalFound = [...record.addedNodes].find((node) => {
            if (node instanceof HTMLElement) {
              return node.className.contains(MODAL_CLASS);
            }
          });
          if (modalFound) {
            Popover.instances.forEach((instance29) => instance29?.close());
            mutationObserver.disconnect();
            Popover.mutationObserverStarted = false;
          }
        });
      };
      const mutationObserver = new MutationObserver(cb);
      mutationObserver.observe(document.querySelector("body"), {
        childList: true
      });
    }
    this.show();
    this.setInteractivity(true);
    this.positionComponent({ refHtmlEl });
    this.autoUpdateCleanup = autoUpdate(refHtmlEl, this.componentHtmlEl, () => {
      this.positionComponent({ refHtmlEl });
    });
  }
  close() {
    this.hide();
    this.setInteractivity(false);
    this.autoUpdateCleanup?.();
    this.autoUpdateCleanup = null;
  }
  cleanup() {
  }
  positionComponent({
    refHtmlEl,
    customX,
    customY
  }) {
    const arrowEl = document.querySelector(`#${this.id}-arrow`);
    computePosition2(refHtmlEl, this.componentHtmlEl, {
      placement: "right-start",
      middleware: [flip2(), arrow2({ element: arrowEl })]
    }).then(({ x, y, placement, middlewareData }) => {
      Object.assign(this.componentHtmlEl.style, {
        left: `${customX || x}px`,
        top: `${customY || y}px`
      });
      if (arrowEl && middlewareData.arrow) {
        const { x: arrowX, y: arrowY } = middlewareData.arrow;
        const staticSide = {
          top: "bottom",
          right: "left",
          bottom: "top",
          left: "right"
        }[placement.split("-")[0]];
        staticSide && Object.assign(arrowEl.style, {
          left: arrowX != null ? `${arrowX}px` : "",
          top: arrowY != null ? `${arrowY}px` : "",
          right: "",
          bottom: "",
          [staticSide]: "9px"
        });
      }
    });
  }
  addWindowListeners(windowEvents, popoverInstance, boundCallbacks) {
    Object.entries(windowEvents).forEach(
      ([evName, cb]) => {
        if (cb) {
          if (evName === "mouseover" && !get_store_value(settingsStore).openPopoverOnRibbonHover) {
            return;
          }
          const boundCallback = cb.bind(popoverInstance);
          boundCallbacks.set(evName, boundCallback);
          window.addEventListener(evName, boundCallback);
        }
      }
    );
  }
  removeWindowListeners(windowEvents, boundCallbacks) {
    Object.entries(windowEvents).forEach(
      ([evName]) => {
        const cb = boundCallbacks.get(evName);
        if (cb) {
          window.removeEventListener(evName, cb);
        }
      }
    );
  }
  show() {
    this.componentHtmlEl.style.display = "block";
    this.componentHtmlEl.style.opacity = "1";
    this.componentHtmlEl.style.pointerEvents = "auto";
  }
  hide() {
    this.componentHtmlEl.style.opacity = "0";
  }
  setInteractivity(enabled = true) {
    if (enabled) {
      this.componentHtmlEl.removeAttribute("inert");
    } else {
      this.componentHtmlEl.setAttribute("inert", "");
    }
  }
};

// src/ui/popovers/calendar.ts
function getRefHtmlEl() {
  return document.querySelector(`[id=${CALENDAR_POPOVER_ID}-ribbon-ref-el]`);
}
var CalendarPopoverBehavior = class extends BaseComponentBehavior {
  constructor(params) {
    super(params.id, params.view);
    this.params = params;
    this.refHtmlEl = getRefHtmlEl();
    if (this.refHtmlEl && get_store_value(settingsStore).openPopoverOnRibbonHover) {
      this.refHtmlEl.addEventListener("mouseover", this.handleReferenceElHover);
    }
  }
  refHtmlEl;
  boundCallbacks = /* @__PURE__ */ new Map();
  open() {
    this.refHtmlEl = getRefHtmlEl();
    this.refHtmlEl && super.open(this.refHtmlEl);
    this.addWindowListeners(this.getWindowEvents(), this, this.boundCallbacks);
  }
  close() {
    super.close();
    this.removeWindowListeners(this.getWindowEvents(), this.boundCallbacks);
  }
  cleanup() {
    this.close();
    this.refHtmlEl?.removeEventListener("mouseover", this.handleReferenceElHover);
    this.component.$destroy();
  }
  getWindowEvents() {
    return {
      click: this.handleWindowClick,
      auxclick: this.handleWindowClick,
      keydown: this.handleWindowKeydown,
      mouseover: this.handleWindowMouseover
    };
  }
  handleWindowClick(event) {
    const ev = event;
    const settings = get_store_value(settingsStore);
    const menuEl = document.querySelector(".menu");
    const stickerEl = document.querySelector(`#${STICKER_POPOVER_ID}[data-popover="true"]`);
    const calendarElTouched = this.componentHtmlEl.contains(ev.target) || ev.target?.id.includes(CALENDAR_POPOVER_ID);
    const stickerElTouched = stickerEl?.contains(ev.target) || ev.target?.id.includes(STICKER_POPOVER_ID);
    const menuElTouched = menuEl?.contains(ev.target) || ev.target?.className.includes("menu");
    const targetOut = !calendarElTouched && !menuElTouched && !stickerElTouched;
    if (getPopoverInstance(this.params.id)?.opened && getPopoverInstance(STICKER_POPOVER_ID)?.opened && settings.popoversClosing.closePopoversOneByOneOnClickOut) {
      return;
    }
    if (targetOut) {
      this.close();
    }
  }
  handleWindowKeydown(event) {
    const settings = get_store_value(settingsStore);
    const focusableSelectors = ':is(a[href], button, input, textarea, select, details, [tabindex]):not([tabindex="-1"])';
    const focusablePopoverElements = Array.from(
      this.componentHtmlEl.querySelectorAll(focusableSelectors)
    );
    const referenceElFocused = getPopoverInstance(this.params.id)?.opened && document.activeElement === this.refHtmlEl || false;
    if (referenceElFocused && (event.key === "ArrowDown" || event.key === "Tab") && focusablePopoverElements.length > 0) {
      focusablePopoverElements[0].focus();
      return;
    }
    if (getPopoverInstance(this.params.id)?.opened && getPopoverInstance(STICKER_POPOVER_ID)?.opened && settings.popoversClosing.closePopoversOneByOneOnEscKeydown) {
      return;
    }
    if (event.key === "Escape") {
      this.refHtmlEl?.focus();
      this.close();
      return;
    }
  }
  handleWindowMouseover(event) {
    if (get_store_value(settingsStore).openPopoverOnRibbonHover) {
      const ev = event;
      const calendarPopover = getPopoverInstance(CALENDAR_POPOVER_ID);
      const stickerPopover = getPopoverInstance(STICKER_POPOVER_ID);
      const fileMenuPopover = getPopoverInstance(FILE_MENU_POPOVER_ID);
      const menuEl = document.querySelector(".menu");
      const stickerEl = document.querySelector(`#${STICKER_POPOVER_ID}[data-popover="true"]`);
      const calendarElTouched = this.componentHtmlEl.contains(ev.target) || ev.target?.id.includes(CALENDAR_POPOVER_ID);
      const stickerElTouched = stickerEl?.contains(ev.target) || ev.target?.id.includes(STICKER_POPOVER_ID);
      const menuElTouched = menuEl?.contains(ev.target) || ev.target?.className.includes("menu");
      const referenceElTouched = this.refHtmlEl?.contains(event.target);
      const targetOut = !calendarElTouched && !menuElTouched && !stickerElTouched;
      if (referenceElTouched) return;
      const isOnlyCalendarPopoverOpen = calendarPopover?.opened && !stickerPopover?.opened && !fileMenuPopover?.opened;
      if (isOnlyCalendarPopoverOpen && targetOut) {
        this.close();
      }
    }
  }
  handleReferenceElHover() {
    console.log("\u{1F5B1}\uFE0F\u{1F5B1}\uFE0F\u{1F5B1}\uFE0FhandleReferenceElHover()!!! \u{1F92F}\u{1F92F}\u{1F92F}");
    if (!getPopoverInstance(this.params.id)?.opened) {
      this.open();
    }
  }
};

// src/ui/popovers/file-menu.ts
var import_obsidian7 = require("obsidian");

// src/ui/components/StickerPopover.svelte
function add_css4(target) {
  append_styles(target, "svelte-1m5qeoi", "@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.pointer-events-none.svelte-1m5qeoi{pointer-events:none}.absolute.svelte-1m5qeoi{position:absolute}.left-0.svelte-1m5qeoi{left:0px}.top-0.svelte-1m5qeoi{top:0px}.z-20.svelte-1m5qeoi{z-index:20}.w-max.svelte-1m5qeoi{width:-moz-max-content;width:max-content}.bg-transparent.svelte-1m5qeoi{background-color:transparent}.opacity-0.svelte-1m5qeoi{opacity:0}#emoji-modal.svelte-1m5qeoi{padding:0px;min-width:unset;width:unset !important}");
}
function create_fragment7(ctx) {
  let div;
  let div_data_popover_value;
  return {
    c() {
      div = element("div");
      attr(div, "class", "bg-transparent z-20 w-max opacity-0 pointer-events-none absolute top-0 left-0 svelte-1m5qeoi");
      attr(div, "data-popover", div_data_popover_value = true);
      attr(div, "id", STICKER_POPOVER_ID);
    },
    m(target, anchor) {
      insert(target, div, anchor);
      ctx[4](div);
    },
    p: noop,
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(div);
      }
      ctx[4](null);
    }
  };
}
function instance7($$self, $$props, $$invalidate) {
  let $themeStore;
  component_subscribe($$self, themeStore, ($$value) => $$invalidate(3, $themeStore = $$value));
  let { close } = $$props;
  let pickerContainerEl = null;
  let pickerInitialized = false;
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      pickerContainerEl = $$value;
      $$invalidate(0, pickerContainerEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("close" in $$props2) $$invalidate(1, close = $$props2.close);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$themeStore, pickerContainerEl, pickerInitialized*/
    13) {
      $: {
        const theme = $themeStore;
        pickerContainerEl && theme && initializePicker(pickerContainerEl, theme);
        if (!pickerInitialized && pickerContainerEl) {
          $$invalidate(2, pickerInitialized = true);
        }
      }
    }
  };
  return [pickerContainerEl, close, pickerInitialized, $themeStore, div_binding];
}
var StickerPopover = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance7, create_fragment7, safe_not_equal, { close: 1 }, add_css4);
  }
};
var StickerPopover_default = StickerPopover;

// src/ui/popovers/file-menu.ts
var FileMenuPopoverBehavior = class {
  menu = null;
  refHtmlEl = null;
  constructor(params) {
  }
  open({ event, note, date, granularity }) {
    this.refHtmlEl = event.target;
    this.menu = new import_obsidian7.Menu();
    if (note) {
      this.openCustomFileMenu(this.menu, note, granularity, date);
    } else {
      this.menu.addItem((item) => {
        item.setTitle("Create Note").setIcon("document").onClick(() => {
          eventHandlers.onClick({
            date,
            createNewSplitLeaf: isControlPressed(event),
            granularity
          });
        });
      });
    }
    this.menu.showAtPosition(event);
  }
  close() {
    this.menu?.close();
  }
  cleanup() {
    this.close();
    this.menu?.unload();
  }
  openCustomFileMenu(menu, note, granularity, date) {
    menu.addSections(["title", "open", "action-primary", "action", "info", "view", "system", "", "danger"]);
    if (window.app.isMobile) {
      menu.addItem(
        (item) => item.setSection("title").setIcon("lucide-file").setTitle(note.name).setIsLabel(true)
      );
    }
    menu.addItem(
      (item) => item.setSection("open").setTitle("Open in new tab").setIcon("lucide-file-plus").onClick(() => {
        window.app.workspace.openLinkText(note.path, "", "tab");
      })
    );
    menu.addItem(
      (item) => item.setSection("open").setTitle("Open to the right").setIcon("lucide-separator-vertical").onClick(() => {
        window.app.workspace.openLinkText(note.path, "", "split");
      })
    );
    menu.addItem(
      (item) => item.setSection("action").setTitle("Make a copy").setIcon("lucide-files").onClick(() => {
        const newPath = window.app.vault.getAvailablePath(note.path, note.extension);
        window.app.vault.copy(note, newPath).then((newFile) => {
          window.app.workspace.openLinkText(newFile.path, "", "tab");
        });
      })
    );
    menu.addItem(
      (item) => item.setSection("danger").setTitle("Delete").setIcon("lucide-trash-2").onClick(() => {
        window.app.fileManager.promptForFileDeletion(note);
      }).setWarning(true)
    );
    menu.addItem(
      (item) => item.setSection("action").setTitle("Add Sticker").setIcon("lucide-smile-plus").onClick(() => {
        if (this.refHtmlEl) {
          Popover.create({
            id: STICKER_POPOVER_ID,
            view: {
              Component: StickerPopover_default
            }
          }).open(this.refHtmlEl);
        }
        stickerComponentPropsStore.set({
          note,
          date,
          granularity
        });
      })
    );
    window.app.workspace.trigger("file-menu", menu, note, "custom-file-menu");
  }
};

// src/ui/popovers/sticker.ts
var StickerPopoverBehavior = class extends BaseComponentBehavior {
  constructor(params) {
    super(params.id, params.view);
    this.params = params;
  }
  refHtmlEl = null;
  boundCallbacks = /* @__PURE__ */ new Map();
  open(refHtmlEl) {
    this.refHtmlEl = refHtmlEl;
    super.open(refHtmlEl);
    this.getSearchInput()?.focus();
    this.addWindowListeners(this.getWindowEvents(), this, this.boundCallbacks);
  }
  close() {
    super.close();
    this.getSearchInput()?.blur();
    this.removeWindowListeners(this.getWindowEvents(), this.boundCallbacks);
  }
  cleanup() {
    this.close();
    this.component.$destroy();
  }
  getWindowEvents() {
    return {
      click: this.handleWindowClick,
      auxclick: this.handleWindowClick,
      keydown: this.handleWindowKeydown
    };
  }
  handleWindowClick(event) {
    const ev = event;
    const menuEl = document.querySelector(".menu");
    const stickerElTouched = this.componentHtmlEl?.contains(ev.target) || ev.target?.id.includes(STICKER_POPOVER_ID);
    const menuElTouched = menuEl?.contains(ev.target) || ev.target?.className.includes("menu");
    if (getPopoverInstance(this.params?.id)?.opened && !stickerElTouched && !menuElTouched) {
      this.close();
      return;
    }
  }
  handleWindowKeydown(event) {
    const settings = get_store_value(settingsStore);
    const focusableSelectors = ':is(a[href], button, input, textarea, select, details, [tabindex]):not([tabindex="-1"])';
    const focusablePopoverElements = Array.from(
      this.componentHtmlEl.querySelectorAll(focusableSelectors)
    );
    const referenceElFocused = getPopoverInstance(this.params.id)?.opened && document.activeElement === this.refHtmlEl || false;
    if (referenceElFocused && (event.key === "ArrowDown" || event.key === "Tab") && focusablePopoverElements.length > 0) {
      focusablePopoverElements[0].focus();
      return;
    }
    if (event.key === "Escape") {
      const searchInput = document.querySelector("em-emoji-picker")?.shadowRoot?.querySelector("input");
      console.log("searchInput active and event: ", event, searchInput, searchInput?.isActiveElement());
      if (settings.popoversClosing.closePopoversOneByOneOnEscKeydown) {
        this.close();
      } else {
        Popover.instances.forEach((instance29) => instance29?.close());
      }
      this.refHtmlEl?.focus();
      return;
    }
  }
  getSearchInput() {
    return document.querySelector("em-emoji-picker")?.shadowRoot?.querySelector("input");
  }
};

// src/ui/popovers/base.ts
var Popover = class _Popover {
  constructor(id, behavior) {
    this.id = id;
    this.behavior = behavior;
  }
  static instances = /* @__PURE__ */ new Map();
  static behaviorInstances = /* @__PURE__ */ new Map();
  static mutationObserverStarted = false;
  opened = false;
  static create(params) {
    let popover = getPopoverInstance(params.id);
    if (!popover) {
      const behavior = createBehavior(params);
      popover = new _Popover(params.id, behavior);
      _Popover.instances.set(params.id, popover);
      _Popover.behaviorInstances.set(params.id, behavior);
    }
    return popover;
  }
  static cleanup() {
    _Popover.instances.forEach((popover) => popover.cleanup());
    _Popover.instances.clear();
    _Popover.mutationObserverStarted = false;
  }
  toggle(param) {
    if (this.opened) {
      this.close();
    } else {
      this.open(param);
    }
  }
  open(param) {
    this.opened = true;
    if (param instanceof Element) {
      this.behavior.open(param);
    } else if (typeof param === "object") {
      this.behavior.open(param);
    }
  }
  close() {
    this.opened = false;
    this.behavior.close();
  }
  cleanup() {
    this.behavior.cleanup();
  }
};
function createBehavior(params) {
  switch (params.id) {
    case CALENDAR_POPOVER_ID:
      return new CalendarPopoverBehavior(params);
    case STICKER_POPOVER_ID:
      return new StickerPopoverBehavior(params);
    case FILE_MENU_POPOVER_ID:
      return new FileMenuPopoverBehavior(params);
  }
}
function getPopoverInstance(id) {
  return Popover.instances.get(id);
}
function getBehaviorInstance(id) {
  return Popover.behaviorInstances.get(id);
}

// src/ui/utils/picker.ts
var onInputKeydown = (ev) => {
  const input = document.querySelector("em-emoji-picker")?.shadowRoot?.querySelector("input");
  const settings = get_store_value(settingsStore);
  const stickerInstance = getPopoverInstance(STICKER_POPOVER_ID);
  const stickerBehaviorInstance = getBehaviorInstance(STICKER_POPOVER_ID);
  if (ev.key === "Escape") {
    if (settings.popoversClosing.closePopoversOneByOneOnEscKeydown) {
      input && input.blur();
      stickerInstance?.close();
    } else {
      Popover.instances.forEach((instance29) => instance29?.close());
    }
    stickerBehaviorInstance?.refHtmlEl?.focus();
  }
};
function initializePicker(container, theme) {
  const pickerOptions = {
    data: native_default,
    onEmojiSelect: async (emoji) => {
      const stickerInstance = getPopoverInstance(STICKER_POPOVER_ID);
      stickerInstance?.close();
      const { date, granularity } = get_store_value(stickerComponentPropsStore);
      const noteStore = granularity ? notesStores[granularity] : null;
      const noteDateUID = date && granularity ? getNoteDateUID({ date, granularity }) : null;
      if (noteStore && noteDateUID) {
        noteStore.update((values) => ({
          ...values,
          [noteDateUID]: {
            file: values[noteDateUID].file,
            sticker: emoji.native
          }
        }));
        const file = get_store_value(noteStore)[noteDateUID].file;
        const tags = window.app.metadataCache.getFileCache(file)?.tags;
        const content = await window.app.vault.read(file);
        let updatedContent = content;
        const hasEmoji = doTagsIncludeEmoji(tags);
        if (hasEmoji) {
          const bef = updatedContent.slice(0, hasEmoji.startOffset);
          const aft = updatedContent.slice(hasEmoji.endOffset);
          updatedContent = `${bef}#${emoji.native}${aft}`;
          window.app.vault.modify(file, updatedContent);
        } else {
          const firstLine = updatedContent.split("\n")[0].trim();
          window.app.vault.modify(file, `#${emoji.native}${firstLine !== "" ? " \n" : ""}${updatedContent} `);
        }
      }
      ;
    },
    autoFocus: true,
    emojiButtonColors: ["color-mix(in srgb, var(--interactive-accent) 20%, transparent)"],
    theme
  };
  const pickerEl = new $efa000751917694d$export$2e2bcd8739ae039(pickerOptions);
  const style = getComputedStyle(document.body);
  const h = parseInt(style.getPropertyValue("--accent-h"));
  const s = parseInt(style.getPropertyValue("--accent-s"));
  const l = parseInt(style.getPropertyValue("--accent-l"));
  const accentRgb = hslToRgb(h / 360, s / 100, l / 100);
  pickerEl.injectStyles(`
        section#root {
            font-family: var(--font-interface);
            font-weight: 400 !important;
            --rgb-accent: ${accentRgb[0]}, ${accentRgb[1]}, ${accentRgb[2]};
            --color-a: var(--interactive-accent-hover);
            --color-b: var(--text-muted);
        }
        .sticky {
            font-weight: 400!important;
        }
    `);
  const pickerHtmlEl = pickerEl;
  container.firstChild && container.removeChild(container.firstChild);
  container.appendChild(pickerHtmlEl);
  handleMutationObserver(pickerHtmlEl.shadowRoot);
}
function handleMutationObserver(shadowRoot) {
  const observer = new MutationObserver((mutations) => {
    mutations.forEach(() => {
      const input = shadowRoot?.querySelector("input");
      if (input) {
        input.addEventListener("keydown", onInputKeydown, true);
        observer.disconnect();
      }
    });
  });
  shadowRoot && observer.observe(shadowRoot, { subtree: true, childList: true });
}
function hslToRgb(h, s, l) {
  let r2, g, b;
  if (s === 0) {
    r2 = g = b = l;
  } else {
    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    const p = 2 * l - q;
    r2 = hueToRgb(p, q, h + 1 / 3);
    g = hueToRgb(p, q, h);
    b = hueToRgb(p, q, h - 1 / 3);
  }
  return [Math.round(r2 * 255), Math.round(g * 255), Math.round(b * 255)];
}
function hueToRgb(p, q, t) {
  if (t < 0) t += 1;
  if (t > 1) t -= 1;
  if (t < 1 / 6) return p + (q - p) * 6 * t;
  if (t < 1 / 2) return q;
  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
  return p;
}
function doTagsIncludeEmoji(tags) {
  if (tags) {
    let hasEmoji = null;
    for (let index = 0; index < tags.length; index++) {
      const tagObj = tags[index];
      if (/\p{RGI_Emoji}/v.test(tagObj.tag)) {
        hasEmoji = {
          emoji: tagObj.tag.slice(1),
          startOffset: tagObj.position.start.offset,
          endOffset: tagObj.position.end.offset
        };
        break;
      } else {
        continue;
      }
    }
    return hasEmoji;
  }
}

// src/ui/utils/event-handlers.ts
var onClick = async ({
  date,
  createNewSplitLeaf,
  granularity
}) => {
  const leaf = window.app.workspace.getLeaf(createNewSplitLeaf);
  createOrOpenNote({ leaf, date, granularity });
};
var onHover = ({
  date,
  targetEl,
  isControlPressed: isControlPressed2,
  granularity
}) => {
  const { format } = getNoteSettings()[granularity];
  const note = getNoteFromStore({ date, granularity });
  if (isControlPressed2 || get_store_value(settingsStore).autoHoverPreview) {
    window.app.workspace.trigger("link-hover", targetEl, date.format(format), note?.path);
  }
};
var onContextMenu = ({ date, event, granularity }) => {
  console.log("\u{1F33F} about to show context menu for granularity and date", granularity, date);
  const note = getNoteFromStore({ date, granularity });
  console.log("\u{1F33F} note from store: ", note);
  Popover.create({
    id: FILE_MENU_POPOVER_ID
  }).open({ event, note, date, granularity });
};
var eventHandlers = {
  onClick,
  onHover,
  onContextMenu
};

// src/ui/utils/index.ts
function isMacOS() {
  return navigator.appVersion.indexOf("Mac") !== -1;
}
function isControlPressed(e) {
  return isMacOS() ? e.metaKey : e.ctrlKey;
}
function isWeekend(date) {
  return date.isoWeekday() === 6 || date.isoWeekday() === 7;
}
function getStartOfWeek(days) {
  return days[0].weekday(0);
}
function getMonth(displayedDate) {
  const locale = displayedDate.locale();
  const month = [];
  let week = { days: [], weekNum: 0 };
  const startOfMonth = displayedDate.clone().locale(locale).date(1);
  const startOffset = get_store_value(localeDataStore).weekdays.indexOf(startOfMonth.format("dddd"));
  let date = startOfMonth.clone().subtract(startOffset, "days");
  for (let _day = 0; _day < 42; _day++) {
    if (_day % 7 === 0) {
      week = {
        days: [],
        weekNum: date.week()
      };
      month.push(week);
    }
    week.days.push(date);
    date = date.clone().add(1, "days");
  }
  return month;
}
function getYears({ startRangeYear }) {
  let crrRangeYear = startRangeYear;
  const COLUMNS = 3;
  const ROWS = 4;
  const years = Array.from(
    { length: ROWS },
    () => Array(COLUMNS).fill(0)
  );
  for (let rowIndex = 0; rowIndex < ROWS; rowIndex++) {
    for (let colIndex = 0; colIndex < COLUMNS; colIndex++) {
      years[rowIndex][colIndex] = crrRangeYear;
      crrRangeYear++;
    }
  }
  return years;
}

// src/io/utils.ts
var import_obsidian9 = require("obsidian");

// src/io/validation/index.ts
var import_obsidian8 = require("obsidian");

// src/io/validation/format.ts
function validateFilename(filename) {
  const illegalRe = /[?<>\\:*|"]/g;
  const controlRe = /[\x00-\x1f\x80-\x9f]/g;
  const reservedRe = /^\.+$/;
  const windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i;
  return !illegalRe.test(filename) && !controlRe.test(filename) && !reservedRe.test(filename) && !windowsReservedRe.test(filename);
}
function isAmbiguousFormat(currentDate, parsedDate, granularity) {
  const errorMessage = "Ambiguous format.";
  switch (granularity) {
    case "year":
      if (parsedDate.year() !== currentDate.year()) {
        return `${errorMessage} It doesn't uniquely identify a year.
                    Current year: ${currentDate.year()}, Parsed year: ${parsedDate.year()}`;
      }
      break;
    case "quarter":
      if (parsedDate.quarter() !== currentDate.quarter() || parsedDate.year() !== currentDate.year()) {
        return `${errorMessage} It doesn't uniquely identify a quarter.
                    Current: Q${currentDate.quarter()} ${currentDate.year()}, Parsed: Q${parsedDate.quarter()} ${parsedDate.year()}`;
      }
      break;
    case "month":
      if (parsedDate.month() !== currentDate.month() || parsedDate.year() !== currentDate.year()) {
        return `${errorMessage} It doesn't uniquely identify a month. 
                    Current: ${currentDate.format("MMMM YYYY")}, Parsed: ${parsedDate.format("MMMM YYYY")}`;
      }
      break;
    case "week":
      if (parsedDate.week() !== currentDate.week() || parsedDate.year() !== currentDate.year()) {
        return `${errorMessage} It doesn't uniquely identify a week. 
                    Current: Week ${currentDate.week()} of ${currentDate.year()}, Parsed: Week ${parsedDate.week()} of ${parsedDate.year()}`;
      }
      break;
    case "day":
      if (!parsedDate.isSame(currentDate, "day")) {
        return `${errorMessage} It doesn't uniquely identify a day. 
                    Current: ${currentDate.format("YYYY-MM-DD")}, Parsed: ${parsedDate.format("YYYY-MM-DD")} `;
      }
      break;
    default:
      return errorMessage + `Unknown granularity: ${granularity} `;
  }
  return null;
}
function addToValidFormats(format, granularity) {
  const isValidFormatNew = get_store_value(settingsStore).validFormats[granularity].indexOf(format) === -1;
  if (isValidFormatNew) {
    settingsStore.update((settings) => ({
      ...settings,
      validFormats: {
        ...settings.validFormats,
        [granularity]: [
          ...settings.validFormats[granularity],
          format
        ]
      }
    }));
  }
}
function validateFormat(format, granularity) {
  let error = "";
  if (!format) {
    return error = "";
  }
  if (!validateFilename(format)) {
    return error = "Format contains illegal characters";
  }
  const currentDate = window.moment();
  const formattedDate = window.moment().format(format);
  const parsedDate = window.moment(formattedDate, format, true);
  if (!parsedDate.isValid()) {
    return error = "Format is not valid";
  }
  const ambiguityError = isAmbiguousFormat(currentDate, parsedDate, granularity);
  if (ambiguityError) {
    return error = ambiguityError;
  }
  addToValidFormats(format, granularity);
  return error;
}

// src/io/validation/index.ts
function removeEscapedCharacters(format) {
  const withoutBrackets = format.replace(/\[[^\]]*\]/g, "");
  return withoutBrackets.replace(/\\./g, "");
}
function isWeekFormatAmbiguous(format) {
  const cleanFormat = removeEscapedCharacters(format);
  return /w{1,2}/i.test(cleanFormat) && (/M{1,4}/.test(cleanFormat) || /D{1,4}/.test(cleanFormat));
}
function isValidPeriodicNote(fileName, customGranularities = granularities) {
  const validFormats = get_store_value(settingsStore).validFormats;
  for (const granularity of customGranularities) {
    for (const validFormat of validFormats[granularity]) {
      let date = window.moment(fileName, validFormat, true);
      if (date.isValid() && date.format(validFormat) === fileName) {
        if (granularity === "week") {
          console.log("week, validFormat: ", validFormat);
          if (validFormat && isWeekFormatAmbiguous(validFormat)) {
            const cleanFormat = removeEscapedCharacters(validFormat);
            if (/w{1,2}/i.test(cleanFormat)) {
              date = window.moment(
                fileName,
                // If format contains week, remove day & month formatting, dont remember why 😅
                validFormat.replace(/M{1,4}/g, "").replace(/D{1,4}/g, ""),
                false
              );
            }
          }
        }
        return { isValid: true, granularity, date };
      }
    }
  }
  return { isValid: false, granularity: null, date: null };
}
function validateFolder(folder) {
  if (!folder || folder === "/") {
    return "";
  }
  if (!window.app.vault.getAbstractFileByPath((0, import_obsidian8.normalizePath)(folder))) {
    return "Folder not found in vault";
  }
  return "";
}
function validateTemplate(template2) {
  if (!template2) {
    return "";
  }
  if (!window.app.metadataCache.getFirstLinkpathDest(template2, "")) {
    return "Template file not found";
  }
  return "";
}

// src/io/utils.ts
function getNoteFromStore({
  date,
  granularity
}) {
  const notesStore = get_store_value(notesStores[granularity]);
  return notesStore[getNoteDateUID({ date, granularity })]?.file;
}
function storeAllVaultPeriodicNotes() {
  const noteSettings = getNoteSettings();
  const uniqueFolders = {};
  granularities.forEach((granularity) => {
    const crrGranularityFolder = noteSettings[granularity].folder;
    if (!uniqueFolders[crrGranularityFolder]) {
      uniqueFolders[crrGranularityFolder] = [];
    }
    uniqueFolders[crrGranularityFolder].push(granularity);
  });
  console.log("\u{1F4C2} uniqueFolders", uniqueFolders);
  Object.entries(uniqueFolders).forEach(([uniqueFolder, granularities2]) => {
    try {
      const notesFolder = window.app.vault.getAbstractFileByPath((0, import_obsidian9.normalizePath)(uniqueFolder));
      if (!notesFolder) {
        throw new Error(
          `Unable to locate ${granularities2.map((g) => getPeriodicityFromGranularity(g)).join(", ")} 
                    notes folder. Check your plugin's settings or restart calendar plugin.`
        );
      }
      import_obsidian9.Vault.recurseChildren(notesFolder, (note) => {
        if (note instanceof import_obsidian9.TFile) {
          const { isValid, granularity, date } = isValidPeriodicNote(note.basename, granularities2);
          if (isValid) {
            const noteDateUID = getNoteDateUID({ date, granularity });
            const hasEmoji = doTagsIncludeEmoji(window.app.metadataCache.getFileCache(note)?.tags);
            notesStores[granularity].update((values) => ({
              ...values,
              [noteDateUID]: {
                file: note,
                sticker: hasEmoji ? hasEmoji.emoji : null
              }
            }));
          }
        }
      });
    } catch (error) {
      typeof error === "string" && new import_obsidian9.Notice(error);
    }
  });
  console.log("\u2705 all store notes \u2705 \n", Object.values(notesStores).map((s) => get_store_value(s)));
}
function getStartupNoteGranularity() {
  for (const granularity of granularities) {
    const settings = get_store_value(settingsStore).notes[granularity];
    if (settings.enabled && settings.openAtStartup) {
      return granularity;
    }
  }
}

// node_modules/svelte-writable-derived/index.mjs
function writableDerived(origins, derive, reflect, initial) {
  var childDerivedSetter, originValues, blockNextDerive = false;
  var reflectOldValues = reflect.length >= 2;
  var wrappedDerive = (got, set, update3) => {
    childDerivedSetter = set;
    if (reflectOldValues) {
      originValues = got;
    }
    if (!blockNextDerive) {
      let returned = derive(got, set, update3);
      if (derive.length < 2) {
        set(returned);
      } else {
        return returned;
      }
    }
    blockNextDerive = false;
  };
  var childDerived = derived(origins, wrappedDerive, initial);
  var singleOrigin = !Array.isArray(origins);
  function doReflect(reflecting) {
    var setWith = reflect(reflecting, originValues);
    if (singleOrigin) {
      blockNextDerive = true;
      origins.set(setWith);
    } else {
      setWith.forEach((value, i) => {
        blockNextDerive = true;
        origins[i].set(value);
      });
    }
    blockNextDerive = false;
  }
  var tryingSet = false;
  function update2(fn) {
    var isUpdated, mutatedBySubscriptions, oldValue, newValue;
    if (tryingSet) {
      newValue = fn(get_store_value(childDerived));
      childDerivedSetter(newValue);
      return;
    }
    var unsubscribe = childDerived.subscribe((value) => {
      if (!tryingSet) {
        oldValue = value;
      } else if (!isUpdated) {
        isUpdated = true;
      } else {
        mutatedBySubscriptions = true;
      }
    });
    newValue = fn(oldValue);
    tryingSet = true;
    childDerivedSetter(newValue);
    unsubscribe();
    tryingSet = false;
    if (mutatedBySubscriptions) {
      newValue = get_store_value(childDerived);
    }
    if (isUpdated) {
      doReflect(newValue);
    }
  }
  return {
    subscribe: childDerived.subscribe,
    set(value) {
      update2(() => value);
    },
    update: update2
  };
}

// src/settings/ui/tabs/notes/Format.svelte
function add_css5(target) {
  append_styles(target, "svelte-g9sw5t", ".pointer-events-none.svelte-g9sw5t{pointer-events:none\n}.visible.svelte-g9sw5t{visibility:visible\n}.invisible.svelte-g9sw5t{visibility:hidden\n}.collapse.svelte-g9sw5t{visibility:collapse\n}.static.svelte-g9sw5t{position:static\n}.absolute.svelte-g9sw5t{position:absolute\n}.relative.svelte-g9sw5t{position:relative\n}.sticky.svelte-g9sw5t{position:sticky\n}.bottom-1.svelte-g9sw5t{bottom:0.25rem\n}.left-0.svelte-g9sw5t{left:0px\n}.left-full.svelte-g9sw5t{left:100%\n}.top-0.svelte-g9sw5t{top:0px\n}.z-10.svelte-g9sw5t{z-index:10\n}.z-20.svelte-g9sw5t{z-index:20\n}.m-0.svelte-g9sw5t{margin:0px\n}.mx-auto.svelte-g9sw5t{margin-left:auto;margin-right:auto\n}.-ml-1.svelte-g9sw5t{margin-left:-0.25rem\n}.mb-1\\.5.svelte-g9sw5t{margin-bottom:0.375rem\n}.mb-6.svelte-g9sw5t{margin-bottom:1.5rem\n}.ml-2.svelte-g9sw5t{margin-left:0.5rem\n}.ml-4.svelte-g9sw5t{margin-left:1rem\n}.ml-\\[5px\\].svelte-g9sw5t{margin-left:5px\n}.mr-2.svelte-g9sw5t{margin-right:0.5rem\n}.mt-1.svelte-g9sw5t{margin-top:0.25rem\n}.mt-2.svelte-g9sw5t{margin-top:0.5rem\n}.mt-2\\.5.svelte-g9sw5t{margin-top:0.625rem\n}.mt-3.svelte-g9sw5t{margin-top:0.75rem\n}.mt-6.svelte-g9sw5t{margin-top:1.5rem\n}.mt-7.svelte-g9sw5t{margin-top:1.75rem\n}.block.svelte-g9sw5t{display:block\n}.flex.svelte-g9sw5t{display:flex\n}.table.svelte-g9sw5t{display:table\n}.contents.svelte-g9sw5t{display:contents\n}.hidden.svelte-g9sw5t{display:none\n}.\\!h-auto.svelte-g9sw5t{height:auto !important\n}.h-2\\.5.svelte-g9sw5t{height:0.625rem\n}.h-4.svelte-g9sw5t{height:1rem\n}.h-\\[8px\\].svelte-g9sw5t{height:8px\n}.h-auto.svelte-g9sw5t{height:auto\n}.w-2\\.5.svelte-g9sw5t{width:0.625rem\n}.w-4.svelte-g9sw5t{width:1rem\n}.w-6.svelte-g9sw5t{width:1.5rem\n}.w-8.svelte-g9sw5t{width:2rem\n}.w-\\[8px\\].svelte-g9sw5t{width:8px\n}.w-full.svelte-g9sw5t{width:100%\n}.w-max.svelte-g9sw5t{width:-moz-max-content;width:max-content\n}.max-w-xs.svelte-g9sw5t{max-width:20rem\n}.flex-grow.svelte-g9sw5t{flex-grow:1\n}.border-collapse.svelte-g9sw5t{border-collapse:collapse\n}.-translate-x-1\\/2.svelte-g9sw5t{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.-translate-y-1\\/2.svelte-g9sw5t{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-12.svelte-g9sw5t{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-180.svelte-g9sw5t{--tw-rotate:180deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-45.svelte-g9sw5t{--tw-rotate:45deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-90.svelte-g9sw5t{--tw-rotate:90deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.cursor-not-allowed.svelte-g9sw5t{cursor:not-allowed\n}.cursor-pointer.svelte-g9sw5t{cursor:pointer\n}.flex-col.svelte-g9sw5t{flex-direction:column\n}.items-end.svelte-g9sw5t{align-items:flex-end\n}.items-center.svelte-g9sw5t{align-items:center\n}.justify-between.svelte-g9sw5t{justify-content:space-between\n}.rounded-2xl.svelte-g9sw5t{border-radius:1rem\n}.rounded-\\[--radius-s\\].svelte-g9sw5t{border-radius:var(--radius-s)\n}.rounded-\\[--tab-curve\\].svelte-g9sw5t{border-radius:var(--tab-curve)\n}.rounded-sm.svelte-g9sw5t{border-radius:0.125rem\n}.border.svelte-g9sw5t{border-width:1px\n}.border-0.svelte-g9sw5t{border-width:0px\n}.border-solid.svelte-g9sw5t{border-style:solid\n}.border-\\[var\\(--background-modifier-border\\)\\].svelte-g9sw5t{border-color:var(--background-modifier-border)\n}.bg-\\[--background-modifier-hover\\].svelte-g9sw5t{background-color:var(--background-modifier-hover)\n}.bg-\\[--interactive-accent\\].svelte-g9sw5t{background-color:var(--interactive-accent)\n}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-g9sw5t{background-color:var(--background-primary-alt)\n}.bg-slate-500.svelte-g9sw5t{--tw-bg-opacity:1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))\n}.bg-transparent.svelte-g9sw5t{background-color:transparent\n}.p-1.svelte-g9sw5t{padding:0.25rem\n}.p-2.svelte-g9sw5t{padding:0.5rem\n}.p-6.svelte-g9sw5t{padding:1.5rem\n}.px-1.svelte-g9sw5t{padding-left:0.25rem;padding-right:0.25rem\n}.px-2.svelte-g9sw5t{padding-left:0.5rem;padding-right:0.5rem\n}.px-4.svelte-g9sw5t{padding-left:1rem;padding-right:1rem\n}.py-2.svelte-g9sw5t{padding-top:0.5rem;padding-bottom:0.5rem\n}.py-3.svelte-g9sw5t{padding-top:0.75rem;padding-bottom:0.75rem\n}.\\!pt-2.svelte-g9sw5t{padding-top:0.5rem !important\n}.pt-4.svelte-g9sw5t{padding-top:1rem\n}.text-center.svelte-g9sw5t{text-align:center\n}.text-7xl.svelte-g9sw5t{font-size:4.5rem;line-height:1\n}.text-lg.svelte-g9sw5t{font-size:1.125rem;line-height:1.75rem\n}.text-sm.svelte-g9sw5t{font-size:0.875rem;line-height:1.25rem\n}.text-xs.svelte-g9sw5t{font-size:0.75rem;line-height:1rem\n}.font-medium.svelte-g9sw5t{font-weight:500\n}.font-semibold.svelte-g9sw5t{font-weight:600\n}.uppercase.svelte-g9sw5t{text-transform:uppercase\n}.capitalize.svelte-g9sw5t{text-transform:capitalize\n}.italic.svelte-g9sw5t{font-style:italic\n}.tabular-nums.svelte-g9sw5t{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)\n}.text-\\[--color-arrow\\].svelte-g9sw5t{color:var(--color-arrow)\n}.text-\\[--color-text-title\\].svelte-g9sw5t{color:var(--color-text-title)\n}.text-\\[--color-text-today\\].svelte-g9sw5t{color:var(--color-text-today)\n}.text-\\[--icon-color\\].svelte-g9sw5t{color:var(--icon-color)\n}.text-\\[--interactive-accent\\].svelte-g9sw5t{color:var(--interactive-accent)\n}.text-\\[--text-muted\\].svelte-g9sw5t{color:var(--text-muted)\n}.text-\\[--text-normal\\].svelte-g9sw5t{color:var(--text-normal)\n}.text-\\[--text-on-accent\\].svelte-g9sw5t{color:var(--text-on-accent)\n}.text-\\[var\\(--text-muted\\)\\].svelte-g9sw5t{color:var(--text-muted)\n}.text-transparent.svelte-g9sw5t{color:transparent\n}.opacity-0.svelte-g9sw5t{opacity:0\n}.opacity-100.svelte-g9sw5t{opacity:1\n}.opacity-50.svelte-g9sw5t{opacity:0.5\n}.opacity-60.svelte-g9sw5t{opacity:0.6\n}.opacity-\\[--icon-opacity\\].svelte-g9sw5t{opacity:var(--icon-opacity)\n}.shadow.svelte-g9sw5t{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}.blur.svelte-g9sw5t{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\n}.transition.svelte-g9sw5t{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-colors.svelte-g9sw5t{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-transform.svelte-g9sw5t{transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.duration-200.svelte-g9sw5t{transition-duration:200ms\n}.ease-in.svelte-g9sw5t{transition-timing-function:cubic-bezier(0.4, 0, 1, 1)\n}.last\\:mb-0.svelte-g9sw5t:last-child{margin-bottom:0px\n}.hover\\:cursor-pointer.svelte-g9sw5t:hover{cursor:pointer\n}.hover\\:bg-\\[--background-modifier-hover\\].svelte-g9sw5t:hover{background-color:var(--background-modifier-hover)\n}.hover\\:bg-\\[--interactive-accent-hover\\].svelte-g9sw5t:hover{background-color:var(--interactive-accent-hover)\n}.hover\\:bg-\\[--interactive-hover\\].svelte-g9sw5t:hover{background-color:var(--interactive-hover)\n}.hover\\:text-\\[--icon-color-hover\\].svelte-g9sw5t:hover{color:var(--icon-color-hover)\n}.hover\\:opacity-\\[--icon-opacity-hover\\].svelte-g9sw5t:hover{opacity:var(--icon-opacity-hover)\n}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-g9sw5t:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}");
}
function create_fragment8(ctx) {
  let div6;
  let div4;
  let div0;
  let t1;
  let div2;
  let a;
  let t3;
  let div1;
  let t4;
  let b;
  let t5_value = window.moment().format(
    /*value*/
    ctx[3] || /*defaultFormat*/
    ctx[6]
  ) + "";
  let t5;
  let t6;
  let div3;
  let t7_value = (
    /*error*/
    (ctx[4] || "Valid") + ""
  );
  let t7;
  let div3_class_value;
  let t8;
  let div5;
  let input;
  let input_spellcheck_value;
  let mounted;
  let dispose;
  return {
    c() {
      div6 = element("div");
      div4 = element("div");
      div0 = element("div");
      div0.textContent = "Format";
      t1 = space();
      div2 = element("div");
      a = element("a");
      a.textContent = "Syntax Reference";
      t3 = space();
      div1 = element("div");
      t4 = text("Your current syntax looks like this:\n				");
      b = element("b");
      t5 = text(t5_value);
      t6 = space();
      div3 = element("div");
      t7 = text(t7_value);
      t8 = space();
      div5 = element("div");
      input = element("input");
      attr(div0, "class", "setting-item-name");
      attr(a, "href", "https://momentjs.com/docs/#/displaying/format/");
      attr(b, "class", "u-pop");
      attr(div2, "class", "setting-item-description");
      attr(div3, "class", div3_class_value = null_to_empty(clsx_default(
        "setting-item-description",
        /*error*/
        ctx[4] ? "has-error" : "opacity-0"
      )) + " svelte-g9sw5t");
      attr(div4, "class", "setting-item-info");
      attr(input, "type", "text");
      attr(input, "spellcheck", input_spellcheck_value = false);
      attr(
        input,
        "placeholder",
        /*defaultFormat*/
        ctx[6]
      );
      toggle_class(input, "has-error", !!/*error*/
      ctx[4]);
      attr(div5, "class", "setting-item-control");
      attr(div6, "class", "setting-item");
    },
    m(target, anchor) {
      insert(target, div6, anchor);
      append(div6, div4);
      append(div4, div0);
      append(div4, t1);
      append(div4, div2);
      append(div2, a);
      append(div2, t3);
      append(div2, div1);
      append(div1, t4);
      append(div1, b);
      append(b, t5);
      append(div4, t6);
      append(div4, div3);
      append(div3, t7);
      append(div6, t8);
      append(div6, div5);
      append(div5, input);
      set_input_value(
        input,
        /*value*/
        ctx[3]
      );
      ctx[8](input);
      if (!mounted) {
        dispose = [
          listen(
            input,
            "input",
            /*input_input_handler*/
            ctx[7]
          ),
          listen(
            input,
            "input",
            /*input_handler*/
            ctx[9]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & /*value*/
      8 && t5_value !== (t5_value = window.moment().format(
        /*value*/
        ctx2[3] || /*defaultFormat*/
        ctx2[6]
      ) + "")) set_data(t5, t5_value);
      if (dirty & /*error*/
      16 && t7_value !== (t7_value = /*error*/
      (ctx2[4] || "Valid") + "")) set_data(t7, t7_value);
      if (dirty & /*error*/
      16 && div3_class_value !== (div3_class_value = null_to_empty(clsx_default(
        "setting-item-description",
        /*error*/
        ctx2[4] ? "has-error" : "opacity-0"
      )) + " svelte-g9sw5t")) {
        attr(div3, "class", div3_class_value);
      }
      if (dirty & /*value*/
      8 && input.value !== /*value*/
      ctx2[3]) {
        set_input_value(
          input,
          /*value*/
          ctx2[3]
        );
      }
      if (dirty & /*error*/
      16) {
        toggle_class(input, "has-error", !!/*error*/
        ctx2[4]);
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(div6);
      }
      ctx[8](null);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance8($$self, $$props, $$invalidate) {
  let $settings, $$unsubscribe_settings = noop, $$subscribe_settings = () => ($$unsubscribe_settings(), $$unsubscribe_settings = subscribe(settings, ($$value) => $$invalidate(5, $settings = $$value)), settings);
  $$self.$$.on_destroy.push(() => $$unsubscribe_settings());
  let { granularity } = $$props;
  let { settings } = $$props;
  $$subscribe_settings();
  const defaultFormat = DEFAULT_FORMATS_PER_GRANULARITY[granularity];
  let inputEl;
  let value = $settings.format || "";
  let error;
  onMount(() => {
    $$invalidate(4, error = validateFormat(inputEl.value, granularity));
  });
  function input_input_handler() {
    value = this.value;
    $$invalidate(3, value);
  }
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      inputEl = $$value;
      $$invalidate(2, inputEl);
    });
  }
  const input_handler = () => {
    $$invalidate(4, error = validateFormat(inputEl.value, granularity));
    if (error.trim() === "") {
      set_store_value(settings, $settings.format = value.trim(), $settings);
    }
  };
  $$self.$$set = ($$props2) => {
    if ("granularity" in $$props2) $$invalidate(0, granularity = $$props2.granularity);
    if ("settings" in $$props2) $$subscribe_settings($$invalidate(1, settings = $$props2.settings));
  };
  return [
    granularity,
    settings,
    inputEl,
    value,
    error,
    $settings,
    defaultFormat,
    input_input_handler,
    input_binding,
    input_handler
  ];
}
var Format = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance8, create_fragment8, safe_not_equal, { granularity: 0, settings: 1 }, add_css5);
  }
};
var Format_default = Format;

// src/settings/ui/tabs/notes/Folder.svelte
function add_css6(target) {
  append_styles(target, "svelte-g9sw5t", ".pointer-events-none.svelte-g9sw5t{pointer-events:none\n}.visible.svelte-g9sw5t{visibility:visible\n}.invisible.svelte-g9sw5t{visibility:hidden\n}.collapse.svelte-g9sw5t{visibility:collapse\n}.static.svelte-g9sw5t{position:static\n}.absolute.svelte-g9sw5t{position:absolute\n}.relative.svelte-g9sw5t{position:relative\n}.sticky.svelte-g9sw5t{position:sticky\n}.bottom-1.svelte-g9sw5t{bottom:0.25rem\n}.left-0.svelte-g9sw5t{left:0px\n}.left-full.svelte-g9sw5t{left:100%\n}.top-0.svelte-g9sw5t{top:0px\n}.z-10.svelte-g9sw5t{z-index:10\n}.z-20.svelte-g9sw5t{z-index:20\n}.m-0.svelte-g9sw5t{margin:0px\n}.mx-auto.svelte-g9sw5t{margin-left:auto;margin-right:auto\n}.-ml-1.svelte-g9sw5t{margin-left:-0.25rem\n}.mb-1\\.5.svelte-g9sw5t{margin-bottom:0.375rem\n}.mb-6.svelte-g9sw5t{margin-bottom:1.5rem\n}.ml-2.svelte-g9sw5t{margin-left:0.5rem\n}.ml-4.svelte-g9sw5t{margin-left:1rem\n}.ml-\\[5px\\].svelte-g9sw5t{margin-left:5px\n}.mr-2.svelte-g9sw5t{margin-right:0.5rem\n}.mt-1.svelte-g9sw5t{margin-top:0.25rem\n}.mt-2.svelte-g9sw5t{margin-top:0.5rem\n}.mt-2\\.5.svelte-g9sw5t{margin-top:0.625rem\n}.mt-3.svelte-g9sw5t{margin-top:0.75rem\n}.mt-6.svelte-g9sw5t{margin-top:1.5rem\n}.mt-7.svelte-g9sw5t{margin-top:1.75rem\n}.block.svelte-g9sw5t{display:block\n}.flex.svelte-g9sw5t{display:flex\n}.table.svelte-g9sw5t{display:table\n}.contents.svelte-g9sw5t{display:contents\n}.hidden.svelte-g9sw5t{display:none\n}.\\!h-auto.svelte-g9sw5t{height:auto !important\n}.h-2\\.5.svelte-g9sw5t{height:0.625rem\n}.h-4.svelte-g9sw5t{height:1rem\n}.h-\\[8px\\].svelte-g9sw5t{height:8px\n}.h-auto.svelte-g9sw5t{height:auto\n}.w-2\\.5.svelte-g9sw5t{width:0.625rem\n}.w-4.svelte-g9sw5t{width:1rem\n}.w-6.svelte-g9sw5t{width:1.5rem\n}.w-8.svelte-g9sw5t{width:2rem\n}.w-\\[8px\\].svelte-g9sw5t{width:8px\n}.w-full.svelte-g9sw5t{width:100%\n}.w-max.svelte-g9sw5t{width:-moz-max-content;width:max-content\n}.max-w-xs.svelte-g9sw5t{max-width:20rem\n}.flex-grow.svelte-g9sw5t{flex-grow:1\n}.border-collapse.svelte-g9sw5t{border-collapse:collapse\n}.-translate-x-1\\/2.svelte-g9sw5t{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.-translate-y-1\\/2.svelte-g9sw5t{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-12.svelte-g9sw5t{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-180.svelte-g9sw5t{--tw-rotate:180deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-45.svelte-g9sw5t{--tw-rotate:45deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-90.svelte-g9sw5t{--tw-rotate:90deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.cursor-not-allowed.svelte-g9sw5t{cursor:not-allowed\n}.cursor-pointer.svelte-g9sw5t{cursor:pointer\n}.flex-col.svelte-g9sw5t{flex-direction:column\n}.items-end.svelte-g9sw5t{align-items:flex-end\n}.items-center.svelte-g9sw5t{align-items:center\n}.justify-between.svelte-g9sw5t{justify-content:space-between\n}.rounded-2xl.svelte-g9sw5t{border-radius:1rem\n}.rounded-\\[--radius-s\\].svelte-g9sw5t{border-radius:var(--radius-s)\n}.rounded-\\[--tab-curve\\].svelte-g9sw5t{border-radius:var(--tab-curve)\n}.rounded-sm.svelte-g9sw5t{border-radius:0.125rem\n}.border.svelte-g9sw5t{border-width:1px\n}.border-0.svelte-g9sw5t{border-width:0px\n}.border-solid.svelte-g9sw5t{border-style:solid\n}.border-\\[var\\(--background-modifier-border\\)\\].svelte-g9sw5t{border-color:var(--background-modifier-border)\n}.bg-\\[--background-modifier-hover\\].svelte-g9sw5t{background-color:var(--background-modifier-hover)\n}.bg-\\[--interactive-accent\\].svelte-g9sw5t{background-color:var(--interactive-accent)\n}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-g9sw5t{background-color:var(--background-primary-alt)\n}.bg-slate-500.svelte-g9sw5t{--tw-bg-opacity:1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))\n}.bg-transparent.svelte-g9sw5t{background-color:transparent\n}.p-1.svelte-g9sw5t{padding:0.25rem\n}.p-2.svelte-g9sw5t{padding:0.5rem\n}.p-6.svelte-g9sw5t{padding:1.5rem\n}.px-1.svelte-g9sw5t{padding-left:0.25rem;padding-right:0.25rem\n}.px-2.svelte-g9sw5t{padding-left:0.5rem;padding-right:0.5rem\n}.px-4.svelte-g9sw5t{padding-left:1rem;padding-right:1rem\n}.py-2.svelte-g9sw5t{padding-top:0.5rem;padding-bottom:0.5rem\n}.py-3.svelte-g9sw5t{padding-top:0.75rem;padding-bottom:0.75rem\n}.\\!pt-2.svelte-g9sw5t{padding-top:0.5rem !important\n}.pt-4.svelte-g9sw5t{padding-top:1rem\n}.text-center.svelte-g9sw5t{text-align:center\n}.text-7xl.svelte-g9sw5t{font-size:4.5rem;line-height:1\n}.text-lg.svelte-g9sw5t{font-size:1.125rem;line-height:1.75rem\n}.text-sm.svelte-g9sw5t{font-size:0.875rem;line-height:1.25rem\n}.text-xs.svelte-g9sw5t{font-size:0.75rem;line-height:1rem\n}.font-medium.svelte-g9sw5t{font-weight:500\n}.font-semibold.svelte-g9sw5t{font-weight:600\n}.uppercase.svelte-g9sw5t{text-transform:uppercase\n}.capitalize.svelte-g9sw5t{text-transform:capitalize\n}.italic.svelte-g9sw5t{font-style:italic\n}.tabular-nums.svelte-g9sw5t{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)\n}.text-\\[--color-arrow\\].svelte-g9sw5t{color:var(--color-arrow)\n}.text-\\[--color-text-title\\].svelte-g9sw5t{color:var(--color-text-title)\n}.text-\\[--color-text-today\\].svelte-g9sw5t{color:var(--color-text-today)\n}.text-\\[--icon-color\\].svelte-g9sw5t{color:var(--icon-color)\n}.text-\\[--interactive-accent\\].svelte-g9sw5t{color:var(--interactive-accent)\n}.text-\\[--text-muted\\].svelte-g9sw5t{color:var(--text-muted)\n}.text-\\[--text-normal\\].svelte-g9sw5t{color:var(--text-normal)\n}.text-\\[--text-on-accent\\].svelte-g9sw5t{color:var(--text-on-accent)\n}.text-\\[var\\(--text-muted\\)\\].svelte-g9sw5t{color:var(--text-muted)\n}.text-transparent.svelte-g9sw5t{color:transparent\n}.opacity-0.svelte-g9sw5t{opacity:0\n}.opacity-100.svelte-g9sw5t{opacity:1\n}.opacity-50.svelte-g9sw5t{opacity:0.5\n}.opacity-60.svelte-g9sw5t{opacity:0.6\n}.opacity-\\[--icon-opacity\\].svelte-g9sw5t{opacity:var(--icon-opacity)\n}.shadow.svelte-g9sw5t{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}.blur.svelte-g9sw5t{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\n}.transition.svelte-g9sw5t{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-colors.svelte-g9sw5t{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-transform.svelte-g9sw5t{transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.duration-200.svelte-g9sw5t{transition-duration:200ms\n}.ease-in.svelte-g9sw5t{transition-timing-function:cubic-bezier(0.4, 0, 1, 1)\n}.last\\:mb-0.svelte-g9sw5t:last-child{margin-bottom:0px\n}.hover\\:cursor-pointer.svelte-g9sw5t:hover{cursor:pointer\n}.hover\\:bg-\\[--background-modifier-hover\\].svelte-g9sw5t:hover{background-color:var(--background-modifier-hover)\n}.hover\\:bg-\\[--interactive-accent-hover\\].svelte-g9sw5t:hover{background-color:var(--interactive-accent-hover)\n}.hover\\:bg-\\[--interactive-hover\\].svelte-g9sw5t:hover{background-color:var(--interactive-hover)\n}.hover\\:text-\\[--icon-color-hover\\].svelte-g9sw5t:hover{color:var(--icon-color-hover)\n}.hover\\:opacity-\\[--icon-opacity-hover\\].svelte-g9sw5t:hover{opacity:var(--icon-opacity-hover)\n}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-g9sw5t:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}");
}
function create_fragment9(ctx) {
  let div5;
  let div3;
  let div0;
  let t1;
  let div1;
  let t2;
  let t3_value = capitalize(getPeriodicityFromGranularity(
    /*granularity*/
    ctx[1]
  )) + "";
  let t3;
  let t4;
  let t5;
  let div2;
  let t6_value = (
    /*error*/
    (ctx[4] || "Valid") + ""
  );
  let t6;
  let div2_class_value;
  let t7;
  let div4;
  let input;
  let input_spellcheck_value;
  let mounted;
  let dispose;
  return {
    c() {
      div5 = element("div");
      div3 = element("div");
      div0 = element("div");
      div0.textContent = "Folder";
      t1 = space();
      div1 = element("div");
      t2 = text("New ");
      t3 = text(t3_value);
      t4 = text(" notes will be placed here");
      t5 = space();
      div2 = element("div");
      t6 = text(t6_value);
      t7 = space();
      div4 = element("div");
      input = element("input");
      attr(div0, "class", "setting-item-name");
      attr(div1, "class", "setting-item-description");
      attr(div2, "class", div2_class_value = null_to_empty(clsx_default(
        "setting-item-description",
        /*error*/
        ctx[4] ? "has-error" : "opacity-0"
      )) + " svelte-g9sw5t");
      attr(div3, "class", "setting-item-info");
      attr(input, "class", "flex-grow svelte-g9sw5t");
      attr(input, "type", "text");
      attr(input, "spellcheck", input_spellcheck_value = false);
      attr(input, "placeholder", "e.g. folder 1/folder 2");
      toggle_class(input, "has-error", !!/*error*/
      ctx[4]);
      attr(div4, "class", "setting-item-control");
      attr(div5, "class", "setting-item");
    },
    m(target, anchor) {
      insert(target, div5, anchor);
      append(div5, div3);
      append(div3, div0);
      append(div3, t1);
      append(div3, div1);
      append(div1, t2);
      append(div1, t3);
      append(div1, t4);
      append(div3, t5);
      append(div3, div2);
      append(div2, t6);
      append(div5, t7);
      append(div5, div4);
      append(div4, input);
      set_input_value(
        input,
        /*value*/
        ctx[3]
      );
      ctx[7](input);
      if (!mounted) {
        dispose = [
          listen(
            input,
            "input",
            /*input_input_handler*/
            ctx[6]
          ),
          listen(
            input,
            "input",
            /*input_handler*/
            ctx[8]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & /*granularity*/
      2 && t3_value !== (t3_value = capitalize(getPeriodicityFromGranularity(
        /*granularity*/
        ctx2[1]
      )) + "")) set_data(t3, t3_value);
      if (dirty & /*error*/
      16 && t6_value !== (t6_value = /*error*/
      (ctx2[4] || "Valid") + "")) set_data(t6, t6_value);
      if (dirty & /*error*/
      16 && div2_class_value !== (div2_class_value = null_to_empty(clsx_default(
        "setting-item-description",
        /*error*/
        ctx2[4] ? "has-error" : "opacity-0"
      )) + " svelte-g9sw5t")) {
        attr(div2, "class", div2_class_value);
      }
      if (dirty & /*value*/
      8 && input.value !== /*value*/
      ctx2[3]) {
        set_input_value(
          input,
          /*value*/
          ctx2[3]
        );
      }
      if (dirty & /*error*/
      16) {
        toggle_class(input, "has-error", !!/*error*/
        ctx2[4]);
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(div5);
      }
      ctx[7](null);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance9($$self, $$props, $$invalidate) {
  let $settings, $$unsubscribe_settings = noop, $$subscribe_settings = () => ($$unsubscribe_settings(), $$unsubscribe_settings = subscribe(settings, ($$value) => $$invalidate(5, $settings = $$value)), settings);
  $$self.$$.on_destroy.push(() => $$unsubscribe_settings());
  let { settings } = $$props;
  $$subscribe_settings();
  let { granularity } = $$props;
  let inputEl;
  let value = $settings.folder || "";
  let error;
  let folderSuggestInstance;
  onMount(() => {
    $$invalidate(4, error = validateFolder(inputEl.value));
    folderSuggestInstance = new FolderSuggest(inputEl);
  });
  onDestroy(() => {
    console.log("onDestroy");
    folderSuggestInstance.destroy();
  });
  function input_input_handler() {
    value = this.value;
    $$invalidate(3, value);
  }
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      inputEl = $$value;
      $$invalidate(2, inputEl);
    });
  }
  const input_handler = () => {
    $$invalidate(4, error = validateFolder(inputEl.value));
    if (error.trim() === "") {
      set_store_value(settings, $settings.folder = value.trim(), $settings);
    }
  };
  $$self.$$set = ($$props2) => {
    if ("settings" in $$props2) $$subscribe_settings($$invalidate(0, settings = $$props2.settings));
    if ("granularity" in $$props2) $$invalidate(1, granularity = $$props2.granularity);
  };
  return [
    settings,
    granularity,
    inputEl,
    value,
    error,
    $settings,
    input_input_handler,
    input_binding,
    input_handler
  ];
}
var Folder = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance9, create_fragment9, safe_not_equal, { settings: 0, granularity: 1 }, add_css6);
  }
};
var Folder_default = Folder;

// src/settings/ui/tabs/notes/Template.svelte
function add_css7(target) {
  append_styles(target, "svelte-g9sw5t", ".pointer-events-none.svelte-g9sw5t{pointer-events:none\n}.visible.svelte-g9sw5t{visibility:visible\n}.invisible.svelte-g9sw5t{visibility:hidden\n}.collapse.svelte-g9sw5t{visibility:collapse\n}.static.svelte-g9sw5t{position:static\n}.absolute.svelte-g9sw5t{position:absolute\n}.relative.svelte-g9sw5t{position:relative\n}.sticky.svelte-g9sw5t{position:sticky\n}.bottom-1.svelte-g9sw5t{bottom:0.25rem\n}.left-0.svelte-g9sw5t{left:0px\n}.left-full.svelte-g9sw5t{left:100%\n}.top-0.svelte-g9sw5t{top:0px\n}.z-10.svelte-g9sw5t{z-index:10\n}.z-20.svelte-g9sw5t{z-index:20\n}.m-0.svelte-g9sw5t{margin:0px\n}.mx-auto.svelte-g9sw5t{margin-left:auto;margin-right:auto\n}.-ml-1.svelte-g9sw5t{margin-left:-0.25rem\n}.mb-1\\.5.svelte-g9sw5t{margin-bottom:0.375rem\n}.mb-6.svelte-g9sw5t{margin-bottom:1.5rem\n}.ml-2.svelte-g9sw5t{margin-left:0.5rem\n}.ml-4.svelte-g9sw5t{margin-left:1rem\n}.ml-\\[5px\\].svelte-g9sw5t{margin-left:5px\n}.mr-2.svelte-g9sw5t{margin-right:0.5rem\n}.mt-1.svelte-g9sw5t{margin-top:0.25rem\n}.mt-2.svelte-g9sw5t{margin-top:0.5rem\n}.mt-2\\.5.svelte-g9sw5t{margin-top:0.625rem\n}.mt-3.svelte-g9sw5t{margin-top:0.75rem\n}.mt-6.svelte-g9sw5t{margin-top:1.5rem\n}.mt-7.svelte-g9sw5t{margin-top:1.75rem\n}.block.svelte-g9sw5t{display:block\n}.flex.svelte-g9sw5t{display:flex\n}.table.svelte-g9sw5t{display:table\n}.contents.svelte-g9sw5t{display:contents\n}.hidden.svelte-g9sw5t{display:none\n}.\\!h-auto.svelte-g9sw5t{height:auto !important\n}.h-2\\.5.svelte-g9sw5t{height:0.625rem\n}.h-4.svelte-g9sw5t{height:1rem\n}.h-\\[8px\\].svelte-g9sw5t{height:8px\n}.h-auto.svelte-g9sw5t{height:auto\n}.w-2\\.5.svelte-g9sw5t{width:0.625rem\n}.w-4.svelte-g9sw5t{width:1rem\n}.w-6.svelte-g9sw5t{width:1.5rem\n}.w-8.svelte-g9sw5t{width:2rem\n}.w-\\[8px\\].svelte-g9sw5t{width:8px\n}.w-full.svelte-g9sw5t{width:100%\n}.w-max.svelte-g9sw5t{width:-moz-max-content;width:max-content\n}.max-w-xs.svelte-g9sw5t{max-width:20rem\n}.flex-grow.svelte-g9sw5t{flex-grow:1\n}.border-collapse.svelte-g9sw5t{border-collapse:collapse\n}.-translate-x-1\\/2.svelte-g9sw5t{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.-translate-y-1\\/2.svelte-g9sw5t{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-12.svelte-g9sw5t{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-180.svelte-g9sw5t{--tw-rotate:180deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-45.svelte-g9sw5t{--tw-rotate:45deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-90.svelte-g9sw5t{--tw-rotate:90deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.cursor-not-allowed.svelte-g9sw5t{cursor:not-allowed\n}.cursor-pointer.svelte-g9sw5t{cursor:pointer\n}.flex-col.svelte-g9sw5t{flex-direction:column\n}.items-end.svelte-g9sw5t{align-items:flex-end\n}.items-center.svelte-g9sw5t{align-items:center\n}.justify-between.svelte-g9sw5t{justify-content:space-between\n}.rounded-2xl.svelte-g9sw5t{border-radius:1rem\n}.rounded-\\[--radius-s\\].svelte-g9sw5t{border-radius:var(--radius-s)\n}.rounded-\\[--tab-curve\\].svelte-g9sw5t{border-radius:var(--tab-curve)\n}.rounded-sm.svelte-g9sw5t{border-radius:0.125rem\n}.border.svelte-g9sw5t{border-width:1px\n}.border-0.svelte-g9sw5t{border-width:0px\n}.border-solid.svelte-g9sw5t{border-style:solid\n}.border-\\[var\\(--background-modifier-border\\)\\].svelte-g9sw5t{border-color:var(--background-modifier-border)\n}.bg-\\[--background-modifier-hover\\].svelte-g9sw5t{background-color:var(--background-modifier-hover)\n}.bg-\\[--interactive-accent\\].svelte-g9sw5t{background-color:var(--interactive-accent)\n}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-g9sw5t{background-color:var(--background-primary-alt)\n}.bg-slate-500.svelte-g9sw5t{--tw-bg-opacity:1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))\n}.bg-transparent.svelte-g9sw5t{background-color:transparent\n}.p-1.svelte-g9sw5t{padding:0.25rem\n}.p-2.svelte-g9sw5t{padding:0.5rem\n}.p-6.svelte-g9sw5t{padding:1.5rem\n}.px-1.svelte-g9sw5t{padding-left:0.25rem;padding-right:0.25rem\n}.px-2.svelte-g9sw5t{padding-left:0.5rem;padding-right:0.5rem\n}.px-4.svelte-g9sw5t{padding-left:1rem;padding-right:1rem\n}.py-2.svelte-g9sw5t{padding-top:0.5rem;padding-bottom:0.5rem\n}.py-3.svelte-g9sw5t{padding-top:0.75rem;padding-bottom:0.75rem\n}.\\!pt-2.svelte-g9sw5t{padding-top:0.5rem !important\n}.pt-4.svelte-g9sw5t{padding-top:1rem\n}.text-center.svelte-g9sw5t{text-align:center\n}.text-7xl.svelte-g9sw5t{font-size:4.5rem;line-height:1\n}.text-lg.svelte-g9sw5t{font-size:1.125rem;line-height:1.75rem\n}.text-sm.svelte-g9sw5t{font-size:0.875rem;line-height:1.25rem\n}.text-xs.svelte-g9sw5t{font-size:0.75rem;line-height:1rem\n}.font-medium.svelte-g9sw5t{font-weight:500\n}.font-semibold.svelte-g9sw5t{font-weight:600\n}.uppercase.svelte-g9sw5t{text-transform:uppercase\n}.capitalize.svelte-g9sw5t{text-transform:capitalize\n}.italic.svelte-g9sw5t{font-style:italic\n}.tabular-nums.svelte-g9sw5t{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)\n}.text-\\[--color-arrow\\].svelte-g9sw5t{color:var(--color-arrow)\n}.text-\\[--color-text-title\\].svelte-g9sw5t{color:var(--color-text-title)\n}.text-\\[--color-text-today\\].svelte-g9sw5t{color:var(--color-text-today)\n}.text-\\[--icon-color\\].svelte-g9sw5t{color:var(--icon-color)\n}.text-\\[--interactive-accent\\].svelte-g9sw5t{color:var(--interactive-accent)\n}.text-\\[--text-muted\\].svelte-g9sw5t{color:var(--text-muted)\n}.text-\\[--text-normal\\].svelte-g9sw5t{color:var(--text-normal)\n}.text-\\[--text-on-accent\\].svelte-g9sw5t{color:var(--text-on-accent)\n}.text-\\[var\\(--text-muted\\)\\].svelte-g9sw5t{color:var(--text-muted)\n}.text-transparent.svelte-g9sw5t{color:transparent\n}.opacity-0.svelte-g9sw5t{opacity:0\n}.opacity-100.svelte-g9sw5t{opacity:1\n}.opacity-50.svelte-g9sw5t{opacity:0.5\n}.opacity-60.svelte-g9sw5t{opacity:0.6\n}.opacity-\\[--icon-opacity\\].svelte-g9sw5t{opacity:var(--icon-opacity)\n}.shadow.svelte-g9sw5t{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}.blur.svelte-g9sw5t{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\n}.transition.svelte-g9sw5t{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-colors.svelte-g9sw5t{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-transform.svelte-g9sw5t{transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.duration-200.svelte-g9sw5t{transition-duration:200ms\n}.ease-in.svelte-g9sw5t{transition-timing-function:cubic-bezier(0.4, 0, 1, 1)\n}.last\\:mb-0.svelte-g9sw5t:last-child{margin-bottom:0px\n}.hover\\:cursor-pointer.svelte-g9sw5t:hover{cursor:pointer\n}.hover\\:bg-\\[--background-modifier-hover\\].svelte-g9sw5t:hover{background-color:var(--background-modifier-hover)\n}.hover\\:bg-\\[--interactive-accent-hover\\].svelte-g9sw5t:hover{background-color:var(--interactive-accent-hover)\n}.hover\\:bg-\\[--interactive-hover\\].svelte-g9sw5t:hover{background-color:var(--interactive-hover)\n}.hover\\:text-\\[--icon-color-hover\\].svelte-g9sw5t:hover{color:var(--icon-color-hover)\n}.hover\\:opacity-\\[--icon-opacity-hover\\].svelte-g9sw5t:hover{opacity:var(--icon-opacity-hover)\n}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-g9sw5t:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}");
}
function create_fragment10(ctx) {
  let div5;
  let div3;
  let div0;
  let t1;
  let div1;
  let t3;
  let div2;
  let t4_value = (
    /*error*/
    (ctx[3] || "Valid") + ""
  );
  let t4;
  let div2_class_value;
  let t5;
  let div4;
  let input;
  let input_spellcheck_value;
  let mounted;
  let dispose;
  return {
    c() {
      div5 = element("div");
      div3 = element("div");
      div0 = element("div");
      div0.textContent = "Template";
      t1 = space();
      div1 = element("div");
      div1.textContent = "Choose a file to use as template";
      t3 = space();
      div2 = element("div");
      t4 = text(t4_value);
      t5 = space();
      div4 = element("div");
      input = element("input");
      attr(div0, "class", "setting-item-name");
      attr(div1, "class", "setting-item-description");
      attr(div2, "class", div2_class_value = null_to_empty(clsx_default(
        "setting-item-description",
        /*error*/
        ctx[3] ? "has-error" : "opacity-0"
      )) + " svelte-g9sw5t");
      attr(div3, "class", "setting-item-info");
      attr(input, "class", "flex-grow svelte-g9sw5t");
      attr(input, "type", "text");
      attr(input, "spellcheck", input_spellcheck_value = false);
      attr(input, "placeholder", "e.g. templates/template-file");
      toggle_class(input, "has-error", !!/*error*/
      ctx[3]);
      attr(div4, "class", "setting-item-control");
      attr(div5, "class", "setting-item");
    },
    m(target, anchor) {
      insert(target, div5, anchor);
      append(div5, div3);
      append(div3, div0);
      append(div3, t1);
      append(div3, div1);
      append(div3, t3);
      append(div3, div2);
      append(div2, t4);
      append(div5, t5);
      append(div5, div4);
      append(div4, input);
      set_input_value(
        input,
        /*value*/
        ctx[2]
      );
      ctx[6](input);
      if (!mounted) {
        dispose = [
          listen(
            input,
            "input",
            /*input_input_handler*/
            ctx[5]
          ),
          listen(
            input,
            "input",
            /*input_handler*/
            ctx[7]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & /*error*/
      8 && t4_value !== (t4_value = /*error*/
      (ctx2[3] || "Valid") + "")) set_data(t4, t4_value);
      if (dirty & /*error*/
      8 && div2_class_value !== (div2_class_value = null_to_empty(clsx_default(
        "setting-item-description",
        /*error*/
        ctx2[3] ? "has-error" : "opacity-0"
      )) + " svelte-g9sw5t")) {
        attr(div2, "class", div2_class_value);
      }
      if (dirty & /*value*/
      4 && input.value !== /*value*/
      ctx2[2]) {
        set_input_value(
          input,
          /*value*/
          ctx2[2]
        );
      }
      if (dirty & /*error*/
      8) {
        toggle_class(input, "has-error", !!/*error*/
        ctx2[3]);
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(div5);
      }
      ctx[6](null);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance10($$self, $$props, $$invalidate) {
  let $settings, $$unsubscribe_settings = noop, $$subscribe_settings = () => ($$unsubscribe_settings(), $$unsubscribe_settings = subscribe(settings, ($$value) => $$invalidate(4, $settings = $$value)), settings);
  $$self.$$.on_destroy.push(() => $$unsubscribe_settings());
  let { settings } = $$props;
  $$subscribe_settings();
  let inputEl;
  let value = $settings.templatePath || "";
  let error;
  let fileSuggestInstance;
  onMount(() => {
    $$invalidate(3, error = validateTemplate(inputEl.value));
    fileSuggestInstance = new FileSuggest(inputEl);
  });
  onDestroy(() => {
    console.log("onDestroy");
    fileSuggestInstance.destroy();
  });
  function input_input_handler() {
    value = this.value;
    $$invalidate(2, value);
  }
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      inputEl = $$value;
      $$invalidate(1, inputEl);
    });
  }
  const input_handler = () => {
    $$invalidate(3, error = validateTemplate(inputEl.value));
    if (error.trim() === "") {
      set_store_value(settings, $settings.templatePath = value.trim(), $settings);
    }
  };
  $$self.$$set = ($$props2) => {
    if ("settings" in $$props2) $$subscribe_settings($$invalidate(0, settings = $$props2.settings));
  };
  return [
    settings,
    inputEl,
    value,
    error,
    $settings,
    input_input_handler,
    input_binding,
    input_handler
  ];
}
var Template = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance10, create_fragment10, safe_not_equal, { settings: 0 }, add_css7);
  }
};
var Template_default = Template;

// src/settings/ui/tabs/notes/OpenAtStartup.svelte
function create_control_slot(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      isEnabled: (
        /*$settings*/
        ctx[2].openAtStartup
      ),
      onChange: (
        /*func*/
        ctx[3]
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settings*/
      4) toggle_changes.isEnabled = /*$settings*/
      ctx2[2].openAtStartup;
      if (dirty & /*$settings*/
      4) toggle_changes.onChange = /*func*/
      ctx2[3];
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_fragment11(ctx) {
  let settingitem;
  let current;
  settingitem = new SettingItem_default({
    props: {
      name: "Open on startup",
      description: `Opens your ${capitalize(getPeriodicityFromGranularity(
        /*granularity*/
        ctx[1]
      ))} note automatically whenever you open this vault`,
      type: "toggle",
      isHeading: false,
      $$slots: { control: [create_control_slot] },
      $$scope: { ctx }
    }
  });
  return {
    c() {
      create_component(settingitem.$$.fragment);
    },
    m(target, anchor) {
      mount_component(settingitem, target, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      const settingitem_changes = {};
      if (dirty & /*granularity*/
      2) settingitem_changes.description = `Opens your ${capitalize(getPeriodicityFromGranularity(
        /*granularity*/
        ctx2[1]
      ))} note automatically whenever you open this vault`;
      if (dirty & /*$$scope, $settings*/
      20) {
        settingitem_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem.$set(settingitem_changes);
    },
    i(local) {
      if (current) return;
      transition_in(settingitem.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(settingitem.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(settingitem, detaching);
    }
  };
}
function instance11($$self, $$props, $$invalidate) {
  let $settings, $$unsubscribe_settings = noop, $$subscribe_settings = () => ($$unsubscribe_settings(), $$unsubscribe_settings = subscribe(settings, ($$value) => $$invalidate(2, $settings = $$value)), settings);
  $$self.$$.on_destroy.push(() => $$unsubscribe_settings());
  let { settings } = $$props;
  $$subscribe_settings();
  let { granularity } = $$props;
  const func = (val) => {
    settingsStore.update((settings2) => {
      const newSettings = settings2;
      for (const granularity2 of granularities) {
        newSettings.notes[granularity2].openAtStartup = false;
      }
      return newSettings;
    });
    set_store_value(settings, $settings.openAtStartup = val, $settings);
  };
  $$self.$$set = ($$props2) => {
    if ("settings" in $$props2) $$subscribe_settings($$invalidate(0, settings = $$props2.settings));
    if ("granularity" in $$props2) $$invalidate(1, granularity = $$props2.granularity);
  };
  return [settings, granularity, $settings, func];
}
var OpenAtStartup = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance11, create_fragment11, safe_not_equal, { settings: 0, granularity: 1 });
  }
};
var OpenAtStartup_default = OpenAtStartup;

// src/settings/ui/tabs/notes/Period.svelte
function add_css8(target) {
  append_styles(target, "svelte-1qakpmb", `.svelte-1qakpmb,.svelte-1qakpmb::before,.svelte-1qakpmb::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-1qakpmb::before,.svelte-1qakpmb::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}h3.svelte-1qakpmb{font-size:inherit;font-weight:inherit}a.svelte-1qakpmb{color:inherit;text-decoration:inherit}input.svelte-1qakpmb{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}input.svelte-1qakpmb:where([type='button']),input.svelte-1qakpmb:where([type='reset']),input.svelte-1qakpmb:where([type='submit']){-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-1qakpmb:-moz-focusring{outline:auto}.svelte-1qakpmb:-moz-ui-invalid{box-shadow:none}.svelte-1qakpmb::-webkit-inner-spin-button,.svelte-1qakpmb::-webkit-outer-spin-button{height:auto}.svelte-1qakpmb::-webkit-search-decoration{-webkit-appearance:none}.svelte-1qakpmb::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}h3.svelte-1qakpmb{margin:0}input.svelte-1qakpmb::-moz-placeholder{opacity:1;color:#9ca3af}input.svelte-1qakpmb::placeholder{opacity:1;color:#9ca3af}.svelte-1qakpmb:disabled{cursor:default}.svelte-1qakpmb,.svelte-1qakpmb::before,.svelte-1qakpmb::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-1qakpmb::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.mb-6.svelte-1qakpmb{margin-bottom:1.5rem}.ml-2.svelte-1qakpmb{margin-left:0.5rem}.ml-4.svelte-1qakpmb{margin-left:1rem}.mt-1.svelte-1qakpmb{margin-top:0.25rem}.flex.svelte-1qakpmb{display:flex}.hidden.svelte-1qakpmb{display:none}.cursor-pointer.svelte-1qakpmb{cursor:pointer}.items-center.svelte-1qakpmb{align-items:center}.justify-between.svelte-1qakpmb{justify-content:space-between}.rounded-2xl.svelte-1qakpmb{border-radius:1rem}.border.svelte-1qakpmb{border-width:1px}.border-solid.svelte-1qakpmb{border-style:solid}.border-\\[var\\(--background-modifier-border\\)\\].svelte-1qakpmb{border-color:var(--background-modifier-border)}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-1qakpmb{background-color:var(--background-primary-alt)}.p-6.svelte-1qakpmb{padding:1.5rem}.text-lg.svelte-1qakpmb{font-size:1.125rem;line-height:1.75rem}.text-xs.svelte-1qakpmb{font-size:0.75rem;line-height:1rem}.font-medium.svelte-1qakpmb{font-weight:500}.font-semibold.svelte-1qakpmb{font-weight:600}.italic.svelte-1qakpmb{font-style:italic}.text-\\[var\\(--text-muted\\)\\].svelte-1qakpmb{color:var(--text-muted)}.text-transparent.svelte-1qakpmb{color:transparent}.last\\:mb-0.svelte-1qakpmb:last-child{margin-bottom:0px}`);
}
function create_if_block_1(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Opens at startup";
      attr(span, "class", "ml-4 mt-1 text-[var(--text-muted)] text-xs italic font-medium svelte-1qakpmb");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching) {
        detach(span);
      }
    }
  };
}
function create_if_block3(ctx) {
  let div;
  let format;
  let t0;
  let folder;
  let t1;
  let template2;
  let t2;
  let openatstartup;
  let div_intro;
  let div_outro;
  let current;
  format = new Format_default({
    props: {
      settings: (
        /*settings*/
        ctx[3]
      ),
      granularity: (
        /*granularity*/
        ctx[0]
      )
    }
  });
  folder = new Folder_default({
    props: {
      settings: (
        /*settings*/
        ctx[3]
      ),
      granularity: (
        /*granularity*/
        ctx[0]
      )
    }
  });
  template2 = new Template_default({ props: { settings: (
    /*settings*/
    ctx[3]
  ) } });
  openatstartup = new OpenAtStartup_default({
    props: {
      settings: (
        /*settings*/
        ctx[3]
      ),
      granularity: (
        /*granularity*/
        ctx[0]
      )
    }
  });
  return {
    c() {
      div = element("div");
      create_component(format.$$.fragment);
      t0 = space();
      create_component(folder.$$.fragment);
      t1 = space();
      create_component(template2.$$.fragment);
      t2 = space();
      create_component(openatstartup.$$.fragment);
      attr(div, "class", "p-6 svelte-1qakpmb");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      mount_component(format, div, null);
      append(div, t0);
      mount_component(folder, div, null);
      append(div, t1);
      mount_component(template2, div, null);
      append(div, t2);
      mount_component(openatstartup, div, null);
      current = true;
    },
    p(ctx2, dirty) {
      const format_changes = {};
      if (dirty & /*granularity*/
      1) format_changes.granularity = /*granularity*/
      ctx2[0];
      format.$set(format_changes);
      const folder_changes = {};
      if (dirty & /*granularity*/
      1) folder_changes.granularity = /*granularity*/
      ctx2[0];
      folder.$set(folder_changes);
      const openatstartup_changes = {};
      if (dirty & /*granularity*/
      1) openatstartup_changes.granularity = /*granularity*/
      ctx2[0];
      openatstartup.$set(openatstartup_changes);
    },
    i(local) {
      if (current) return;
      transition_in(format.$$.fragment, local);
      transition_in(folder.$$.fragment, local);
      transition_in(template2.$$.fragment, local);
      transition_in(openatstartup.$$.fragment, local);
      if (local) {
        add_render_callback(() => {
          if (!current) return;
          if (div_outro) div_outro.end(1);
          div_intro = create_in_transition(div, slide, { duration: 300 });
          div_intro.start();
        });
      }
      current = true;
    },
    o(local) {
      transition_out(format.$$.fragment, local);
      transition_out(folder.$$.fragment, local);
      transition_out(template2.$$.fragment, local);
      transition_out(openatstartup.$$.fragment, local);
      if (div_intro) div_intro.invalidate();
      if (local) {
        div_outro = create_out_transition(div, slide, { duration: 300 });
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div);
      }
      destroy_component(format);
      destroy_component(folder);
      destroy_component(template2);
      destroy_component(openatstartup);
      if (detaching && div_outro) div_outro.end();
    }
  };
}
function create_fragment12(ctx) {
  let div2;
  let a;
  let div0;
  let h3;
  let arrow3;
  let t0;
  let span;
  let t1_value = capitalize(getPeriodicityFromGranularity(
    /*granularity*/
    ctx[0]
  )) + "";
  let t1;
  let t2;
  let t3;
  let t4;
  let div1;
  let label;
  let input;
  let t5;
  let current;
  let mounted;
  let dispose;
  arrow3 = new Arrow_default({
    props: { isExpanded: (
      /*isExpanded*/
      ctx[1]
    ) }
  });
  let if_block0 = (
    /*$settings*/
    ctx[2].openAtStartup && create_if_block_1(ctx)
  );
  let if_block1 = (
    /*isExpanded*/
    ctx[1] && create_if_block3(ctx)
  );
  return {
    c() {
      div2 = element("div");
      a = element("a");
      div0 = element("div");
      h3 = element("h3");
      create_component(arrow3.$$.fragment);
      t0 = space();
      span = element("span");
      t1 = text(t1_value);
      t2 = text(" Notes");
      t3 = space();
      if (if_block0) if_block0.c();
      t4 = space();
      div1 = element("div");
      label = element("label");
      input = element("input");
      t5 = space();
      if (if_block1) if_block1.c();
      attr(span, "class", "ml-2 svelte-1qakpmb");
      attr(h3, "class", "setting-item-name flex items-center text-lg font-semibold svelte-1qakpmb");
      attr(div0, "class", "setting-item-info flex justify-between items-center svelte-1qakpmb");
      attr(input, "type", "checkbox");
      attr(input, "class", "hidden svelte-1qakpmb");
      attr(label, "class", "checkbox-container cursor-pointer svelte-1qakpmb");
      toggle_class(
        label,
        "is-enabled",
        /*$settings*/
        ctx[2].enabled
      );
      attr(div1, "class", "setting-item-control svelte-1qakpmb");
      attr(a, "href", "./");
      attr(a, "class", "setting-item setting-item-heading text-transparent p-6 cursor-pointer flex items-center justify-between svelte-1qakpmb");
      attr(div2, "class", "bg-[var(--background-primary-alt)] border border-solid border-[var(--background-modifier-border)] rounded-2xl mb-6 last:mb-0 svelte-1qakpmb");
    },
    m(target, anchor) {
      insert(target, div2, anchor);
      append(div2, a);
      append(a, div0);
      append(div0, h3);
      mount_component(arrow3, h3, null);
      append(h3, t0);
      append(h3, span);
      append(span, t1);
      append(span, t2);
      append(h3, t3);
      if (if_block0) if_block0.m(h3, null);
      append(a, t4);
      append(a, div1);
      append(div1, label);
      append(label, input);
      input.checked = /*$settings*/
      ctx[2].enabled;
      append(div2, t5);
      if (if_block1) if_block1.m(div2, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen(
            input,
            "change",
            /*input_change_handler*/
            ctx[6]
          ),
          listen(label, "click", stop_propagation(
            /*click_handler*/
            ctx[5]
          )),
          listen(
            a,
            "click",
            /*toggleExpand*/
            ctx[4]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      const arrow_changes = {};
      if (dirty & /*isExpanded*/
      2) arrow_changes.isExpanded = /*isExpanded*/
      ctx2[1];
      arrow3.$set(arrow_changes);
      if ((!current || dirty & /*granularity*/
      1) && t1_value !== (t1_value = capitalize(getPeriodicityFromGranularity(
        /*granularity*/
        ctx2[0]
      )) + "")) set_data(t1, t1_value);
      if (
        /*$settings*/
        ctx2[2].openAtStartup
      ) {
        if (if_block0) {
        } else {
          if_block0 = create_if_block_1(ctx2);
          if_block0.c();
          if_block0.m(h3, null);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (dirty & /*$settings*/
      4) {
        input.checked = /*$settings*/
        ctx2[2].enabled;
      }
      if (!current || dirty & /*$settings*/
      4) {
        toggle_class(
          label,
          "is-enabled",
          /*$settings*/
          ctx2[2].enabled
        );
      }
      if (
        /*isExpanded*/
        ctx2[1]
      ) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
          if (dirty & /*isExpanded*/
          2) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block3(ctx2);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(div2, null);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, () => {
          if_block1 = null;
        });
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      transition_in(arrow3.$$.fragment, local);
      transition_in(if_block1);
      current = true;
    },
    o(local) {
      transition_out(arrow3.$$.fragment, local);
      transition_out(if_block1);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div2);
      }
      destroy_component(arrow3);
      if (if_block0) if_block0.d();
      if (if_block1) if_block1.d();
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance12($$self, $$props, $$invalidate) {
  let $settings;
  let isExpanded = false;
  let { granularity } = $$props;
  let settings = writableDerived(
    settingsStore,
    // get derived store from settingsStore
    ($settingsStore) => $settingsStore.notes[granularity],
    // update settingsStore when the derived store changes
    (reflecting, old) => {
      const newSettings = {
        ...old,
        notes: { ...old.notes, [granularity]: reflecting }
      };
      return newSettings;
    }
  );
  component_subscribe($$self, settings, (value) => $$invalidate(2, $settings = value));
  function toggleExpand() {
    $$invalidate(1, isExpanded = !isExpanded);
  }
  function click_handler(event) {
    bubble.call(this, $$self, event);
  }
  function input_change_handler() {
    $settings.enabled = this.checked;
    settings.set($settings);
  }
  $$self.$$set = ($$props2) => {
    if ("granularity" in $$props2) $$invalidate(0, granularity = $$props2.granularity);
  };
  return [
    granularity,
    isExpanded,
    $settings,
    settings,
    toggleExpand,
    click_handler,
    input_change_handler
  ];
}
var Period = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance12, create_fragment12, safe_not_equal, { granularity: 0 }, add_css8);
  }
};
var Period_default = Period;

// src/settings/ui/tabs/notes/Index.svelte
function get_each_context3(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[0] = list[i];
  return child_ctx;
}
function create_each_block3(ctx) {
  let period;
  let current;
  period = new Period_default({
    props: { granularity: (
      /*granularity*/
      ctx[0]
    ) }
  });
  return {
    c() {
      create_component(period.$$.fragment);
    },
    m(target, anchor) {
      mount_component(period, target, anchor);
      current = true;
    },
    p: noop,
    i(local) {
      if (current) return;
      transition_in(period.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(period.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(period, detaching);
    }
  };
}
function create_fragment13(ctx) {
  let div;
  let current;
  let each_value = ensure_array_like(granularities);
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block3(get_each_context3(ctx, each_value, i));
  }
  return {
    c() {
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
    },
    m(target, anchor) {
      insert(target, div, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      current = true;
    },
    p: noop,
    i(local) {
      if (current) return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o(local) {
      each_blocks = each_blocks.filter(Boolean);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div);
      }
      destroy_each(each_blocks, detaching);
    }
  };
}
var Index = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, null, create_fragment13, safe_not_equal, {});
  }
};
var Index_default = Index;

// src/settings/store.ts
var settingsStore = writable(DEFAULT_SETTINGS);

// src/ui/components/Dot.svelte
function add_css9(target) {
  append_styles(target, "svelte-1yh895v", ".dot.svelte-1yh895v{display:inline-block;height:6px;width:6px;margin:0 1px;fill:none}.isVisible.svelte-1yh895v{stroke:var(--color-dot)}.isActive.svelte-1yh895v{stroke:var(--text-on-accent)}.isFilled.svelte-1yh895v{fill:var(--color-dot)}.isActive.isFilled.svelte-1yh895v{fill:var(--text-on-accent)}");
}
function create_fragment14(ctx) {
  let svg;
  let circle;
  let svg_class_value;
  return {
    c() {
      svg = svg_element("svg");
      circle = svg_element("circle");
      attr(circle, "cx", "3");
      attr(circle, "cy", "3");
      attr(circle, "r", "2");
      attr(svg, "class", svg_class_value = null_to_empty(`dot ${/*className*/
      ctx[0]}`) + " svelte-1yh895v");
      attr(svg, "viewBox", "0 0 6 6");
      attr(svg, "xmlns", "http://www.w3.org/2000/svg");
      toggle_class(
        svg,
        "isVisible",
        /*isVisible*/
        ctx[1]
      );
      toggle_class(
        svg,
        "isFilled",
        /*isFilled*/
        ctx[2]
      );
      toggle_class(
        svg,
        "isActive",
        /*isActive*/
        ctx[3]
      );
    },
    m(target, anchor) {
      insert(target, svg, anchor);
      append(svg, circle);
    },
    p(ctx2, [dirty]) {
      if (dirty & /*className*/
      1 && svg_class_value !== (svg_class_value = null_to_empty(`dot ${/*className*/
      ctx2[0]}`) + " svelte-1yh895v")) {
        attr(svg, "class", svg_class_value);
      }
      if (dirty & /*className, isVisible*/
      3) {
        toggle_class(
          svg,
          "isVisible",
          /*isVisible*/
          ctx2[1]
        );
      }
      if (dirty & /*className, isFilled*/
      5) {
        toggle_class(
          svg,
          "isFilled",
          /*isFilled*/
          ctx2[2]
        );
      }
      if (dirty & /*className, isActive*/
      9) {
        toggle_class(
          svg,
          "isActive",
          /*isActive*/
          ctx2[3]
        );
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(svg);
      }
    }
  };
}
function instance13($$self, $$props, $$invalidate) {
  let { className = "" } = $$props;
  let { isVisible = true } = $$props;
  let { isFilled = false } = $$props;
  let { isActive = false } = $$props;
  $$self.$$set = ($$props2) => {
    if ("className" in $$props2) $$invalidate(0, className = $$props2.className);
    if ("isVisible" in $$props2) $$invalidate(1, isVisible = $$props2.isVisible);
    if ("isFilled" in $$props2) $$invalidate(2, isFilled = $$props2.isFilled);
    if ("isActive" in $$props2) $$invalidate(3, isActive = $$props2.isActive);
  };
  return [className, isVisible, isFilled, isActive];
}
var Dot = class extends SvelteComponent {
  constructor(options) {
    super();
    init(
      this,
      options,
      instance13,
      create_fragment14,
      safe_not_equal,
      {
        className: 0,
        isVisible: 1,
        isFilled: 2,
        isActive: 3
      },
      add_css9
    );
  }
};
var Dot_default = Dot;

// src/ui/components/Sticker.svelte
function add_css10(target) {
  append_styles(target, "svelte-1iwyr36", `.svelte-1iwyr36,.svelte-1iwyr36::before,.svelte-1iwyr36::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-1iwyr36::before,.svelte-1iwyr36::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}.svelte-1iwyr36:-moz-focusring{outline:auto}.svelte-1iwyr36:-moz-ui-invalid{box-shadow:none}.svelte-1iwyr36::-webkit-inner-spin-button,.svelte-1iwyr36::-webkit-outer-spin-button{height:auto}.svelte-1iwyr36::-webkit-search-decoration{-webkit-appearance:none}.svelte-1iwyr36::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-1iwyr36:disabled{cursor:default}.svelte-1iwyr36,.svelte-1iwyr36::before,.svelte-1iwyr36::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-1iwyr36::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.absolute.svelte-1iwyr36{position:absolute}.left-full.svelte-1iwyr36{left:100%}.top-0.svelte-1iwyr36{top:0px}.-translate-x-1\\/2.svelte-1iwyr36{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\/2.svelte-1iwyr36{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-12.svelte-1iwyr36{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}`);
}
function create_if_block4(ctx) {
  let div;
  let t;
  return {
    c() {
      div = element("div");
      t = text(
        /*sticker*/
        ctx[0]
      );
      attr(div, "class", "rotate-12 absolute top-0 left-full -translate-x-1/2 -translate-y-1/2 svelte-1iwyr36");
      attr(div, "id", "sticker");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      append(div, t);
    },
    p(ctx2, dirty) {
      if (dirty & /*sticker*/
      1) set_data(
        t,
        /*sticker*/
        ctx2[0]
      );
    },
    d(detaching) {
      if (detaching) {
        detach(div);
      }
    }
  };
}
function create_fragment15(ctx) {
  let if_block_anchor;
  let if_block = (
    /*sticker*/
    ctx[0] && create_if_block4(ctx)
  );
  return {
    c() {
      if (if_block) if_block.c();
      if_block_anchor = empty();
    },
    m(target, anchor) {
      if (if_block) if_block.m(target, anchor);
      insert(target, if_block_anchor, anchor);
    },
    p(ctx2, [dirty]) {
      if (
        /*sticker*/
        ctx2[0]
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block4(ctx2);
          if_block.c();
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(if_block_anchor);
      }
      if (if_block) if_block.d(detaching);
    }
  };
}
function instance14($$self, $$props, $$invalidate) {
  let { sticker } = $$props;
  $$self.$$set = ($$props2) => {
    if ("sticker" in $$props2) $$invalidate(0, sticker = $$props2.sticker);
  };
  return [sticker];
}
var Sticker = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance14, create_fragment15, safe_not_equal, { sticker: 0 }, add_css10);
  }
};
var Sticker_default = Sticker;

// src/ui/components/Day.svelte
function add_css11(target) {
  append_styles(target, "svelte-1cnzf9m", `.svelte-1cnzf9m,.svelte-1cnzf9m::before,.svelte-1cnzf9m::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-1cnzf9m::before,.svelte-1cnzf9m::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-1cnzf9m{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-1cnzf9m{text-transform:none}button.svelte-1cnzf9m{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-1cnzf9m:-moz-focusring{outline:auto}.svelte-1cnzf9m:-moz-ui-invalid{box-shadow:none}.svelte-1cnzf9m::-webkit-inner-spin-button,.svelte-1cnzf9m::-webkit-outer-spin-button{height:auto}.svelte-1cnzf9m::-webkit-search-decoration{-webkit-appearance:none}.svelte-1cnzf9m::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-1cnzf9m{cursor:pointer}.svelte-1cnzf9m:disabled{cursor:default}.svelte-1cnzf9m,.svelte-1cnzf9m::before,.svelte-1cnzf9m::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-1cnzf9m::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.relative.svelte-1cnzf9m{position:relative}.flex.svelte-1cnzf9m{display:flex}.\\!h-auto.svelte-1cnzf9m{height:auto !important}.w-full.svelte-1cnzf9m{width:100%}.flex-col.svelte-1cnzf9m{flex-direction:column}.rounded-\\[--radius-s\\].svelte-1cnzf9m{border-radius:var(--radius-s)}.px-1.svelte-1cnzf9m{padding-left:0.25rem;padding-right:0.25rem}.py-3.svelte-1cnzf9m{padding-top:0.75rem;padding-bottom:0.75rem}.text-center.svelte-1cnzf9m{text-align:center}.text-sm.svelte-1cnzf9m{font-size:0.875rem;line-height:1.25rem}.font-medium.svelte-1cnzf9m{font-weight:500}.tabular-nums.svelte-1cnzf9m{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.transition-colors.svelte-1cnzf9m{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.day.svelte-1cnzf9m{color:var(--text-normal)}.day.svelte-1cnzf9m:hover{background-color:var(--interactive-hover)}.day.active.svelte-1cnzf9m{background-color:var(--interactive-accent);color:var(--text-on-accent)}.day.active.svelte-1cnzf9m:hover{background-color:var(--interactive-accent-hover)}.day.today.svelte-1cnzf9m{color:var(--color-text-today)}.day.active.today.svelte-1cnzf9m{color:var(--text-on-accent)}.day.adjacent-month.svelte-1cnzf9m{opacity:0.25}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-1cnzf9m:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}`);
}
function create_fragment16(ctx) {
  let td;
  let button;
  let t0_value = (
    /*date*/
    ctx[0].format("D") + ""
  );
  let t0;
  let t1;
  let dot;
  let t2;
  let sticker_1;
  let current;
  let mounted;
  let dispose;
  dot = new Dot_default({
    props: {
      className: "absolute bottom-1",
      isVisible: !!/*file*/
      ctx[5],
      isFilled: !!/*file*/
      ctx[5],
      isActive: !!/*file*/
      ctx[5]
    }
  });
  sticker_1 = new Sticker_default({ props: { sticker: (
    /*sticker*/
    ctx[4]
  ) } });
  return {
    c() {
      td = element("td");
      button = element("button");
      t0 = text(t0_value);
      t1 = space();
      create_component(dot.$$.fragment);
      t2 = space();
      create_component(sticker_1.$$.fragment);
      attr(button, "class", "[&:not(:focus-visible)]:shadow-none !h-auto w-full flex flex-col font-medium rounded-[--radius-s] text-sm px-1 py-3 relative text-center tabular-nums transition-colors day svelte-1cnzf9m");
      attr(button, "id", "day");
      toggle_class(
        button,
        "active",
        /*isActive*/
        ctx[3]
      );
      toggle_class(
        button,
        "today",
        /*isToday*/
        ctx[2]
      );
      toggle_class(
        button,
        "adjacent-month",
        /*isAdjacentMonth*/
        ctx[1]
      );
      attr(td, "class", "relative svelte-1cnzf9m");
    },
    m(target, anchor) {
      insert(target, td, anchor);
      append(td, button);
      append(button, t0);
      append(button, t1);
      mount_component(dot, button, null);
      append(td, t2);
      mount_component(sticker_1, td, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen(
            button,
            "click",
            /*click_handler*/
            ctx[11]
          ),
          listen(
            button,
            "contextmenu",
            /*contextmenu_handler*/
            ctx[12]
          ),
          listen(
            button,
            "pointerenter",
            /*pointerenter_handler*/
            ctx[13]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & /*date*/
      1) && t0_value !== (t0_value = /*date*/
      ctx2[0].format("D") + "")) set_data(t0, t0_value);
      const dot_changes = {};
      if (dirty & /*file*/
      32) dot_changes.isVisible = !!/*file*/
      ctx2[5];
      if (dirty & /*file*/
      32) dot_changes.isFilled = !!/*file*/
      ctx2[5];
      if (dirty & /*file*/
      32) dot_changes.isActive = !!/*file*/
      ctx2[5];
      dot.$set(dot_changes);
      if (!current || dirty & /*isActive*/
      8) {
        toggle_class(
          button,
          "active",
          /*isActive*/
          ctx2[3]
        );
      }
      if (!current || dirty & /*isToday*/
      4) {
        toggle_class(
          button,
          "today",
          /*isToday*/
          ctx2[2]
        );
      }
      if (!current || dirty & /*isAdjacentMonth*/
      2) {
        toggle_class(
          button,
          "adjacent-month",
          /*isAdjacentMonth*/
          ctx2[1]
        );
      }
      const sticker_1_changes = {};
      if (dirty & /*sticker*/
      16) sticker_1_changes.sticker = /*sticker*/
      ctx2[4];
      sticker_1.$set(sticker_1_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dot.$$.fragment, local);
      transition_in(sticker_1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dot.$$.fragment, local);
      transition_out(sticker_1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(td);
      }
      destroy_component(dot);
      destroy_component(sticker_1);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance15($$self, $$props, $$invalidate) {
  let file;
  let sticker;
  let isActive;
  let isToday;
  let isAdjacentMonth;
  let $displayedDateStore;
  let $activeFileIdStore;
  let $notesStore;
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(8, $displayedDateStore = $$value));
  component_subscribe($$self, activeFileIdStore, ($$value) => $$invalidate(9, $activeFileIdStore = $$value));
  let { date } = $$props;
  let today;
  const notesStore = notesStores["day"];
  component_subscribe($$self, notesStore, (value) => $$invalidate(10, $notesStore = value));
  const noteDateUID = getNoteDateUID({ date, granularity: "day" });
  const click_handler = (event) => eventHandlers.onClick({
    date,
    createNewSplitLeaf: isControlPressed(event),
    granularity: "day"
  });
  const contextmenu_handler = (event) => eventHandlers.onContextMenu({ date, event, granularity: "day" });
  const pointerenter_handler = (event) => {
    eventHandlers.onHover({
      date,
      targetEl: event.target,
      isControlPressed: isControlPressed(event),
      granularity: "day"
    });
  };
  $$self.$$set = ($$props2) => {
    if ("date" in $$props2) $$invalidate(0, date = $$props2.date);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$displayedDateStore*/
    256) {
      $: $displayedDateStore, $$invalidate(7, today = window.moment());
    }
    if ($$self.$$.dirty & /*$notesStore*/
    1024) {
      $: $$invalidate(5, file = $notesStore[noteDateUID]?.file);
    }
    if ($$self.$$.dirty & /*$notesStore*/
    1024) {
      $: $$invalidate(4, sticker = $notesStore[noteDateUID]?.sticker);
    }
    if ($$self.$$.dirty & /*$activeFileIdStore*/
    512) {
      $: $$invalidate(3, isActive = $activeFileIdStore === noteDateUID);
    }
    if ($$self.$$.dirty & /*date, today*/
    129) {
      $: $$invalidate(2, isToday = date.isSame(today, "day"));
    }
    if ($$self.$$.dirty & /*date, $displayedDateStore*/
    257) {
      $: $$invalidate(1, isAdjacentMonth = !date.isSame($displayedDateStore, "month"));
    }
  };
  return [
    date,
    isAdjacentMonth,
    isToday,
    isActive,
    sticker,
    file,
    notesStore,
    today,
    $displayedDateStore,
    $activeFileIdStore,
    $notesStore,
    click_handler,
    contextmenu_handler,
    pointerenter_handler
  ];
}
var Day = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance15, create_fragment16, not_equal, { date: 0 }, add_css11);
  }
};
var Day_default = Day;

// src/ui/components/Month.svelte
function add_css12(target) {
  append_styles(target, "svelte-1iwyr36", `.svelte-1iwyr36,.svelte-1iwyr36::before,.svelte-1iwyr36::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-1iwyr36::before,.svelte-1iwyr36::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-1iwyr36{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-1iwyr36{text-transform:none}button.svelte-1iwyr36{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-1iwyr36:-moz-focusring{outline:auto}.svelte-1iwyr36:-moz-ui-invalid{box-shadow:none}.svelte-1iwyr36::-webkit-inner-spin-button,.svelte-1iwyr36::-webkit-outer-spin-button{height:auto}.svelte-1iwyr36::-webkit-search-decoration{-webkit-appearance:none}.svelte-1iwyr36::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-1iwyr36{cursor:pointer}.svelte-1iwyr36:disabled{cursor:default}.svelte-1iwyr36,.svelte-1iwyr36::before,.svelte-1iwyr36::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-1iwyr36::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.relative.svelte-1iwyr36{position:relative}`);
}
function create_fragment17(ctx) {
  let td;
  let button;
  let t0_value = (
    /*$displayedDateStore*/
    ctx[2].clone().month(
      /*monthIndex*/
      ctx[0]
    ).format("MMMM") + ""
  );
  let t0;
  let t1;
  let dot;
  let t2;
  let sticker_1;
  let current;
  let mounted;
  let dispose;
  dot = new Dot_default({
    props: {
      isFilled: !!/*file*/
      ctx[4],
      isActive: !!/*file*/
      ctx[4]
    }
  });
  sticker_1 = new Sticker_default({ props: { sticker: (
    /*sticker*/
    ctx[3]
  ) } });
  return {
    c() {
      td = element("td");
      button = element("button");
      t0 = text(t0_value);
      t1 = space();
      create_component(dot.$$.fragment);
      t2 = space();
      create_component(sticker_1.$$.fragment);
      attr(button, "id", "month");
      attr(button, "class", "svelte-1iwyr36");
      attr(td, "class", "relative svelte-1iwyr36");
    },
    m(target, anchor) {
      insert(target, td, anchor);
      append(td, button);
      append(button, t0);
      append(button, t1);
      mount_component(dot, button, null);
      append(td, t2);
      mount_component(sticker_1, td, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen(
            button,
            "click",
            /*click_handler*/
            ctx[8]
          ),
          listen(
            button,
            "contextmenu",
            /*contextmenu_handler*/
            ctx[9]
          ),
          listen(
            button,
            "pointerenter",
            /*pointerenter_handler*/
            ctx[10]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & /*$displayedDateStore, monthIndex*/
      5) && t0_value !== (t0_value = /*$displayedDateStore*/
      ctx2[2].clone().month(
        /*monthIndex*/
        ctx2[0]
      ).format("MMMM") + "")) set_data(t0, t0_value);
      const dot_changes = {};
      if (dirty & /*file*/
      16) dot_changes.isFilled = !!/*file*/
      ctx2[4];
      if (dirty & /*file*/
      16) dot_changes.isActive = !!/*file*/
      ctx2[4];
      dot.$set(dot_changes);
      const sticker_1_changes = {};
      if (dirty & /*sticker*/
      8) sticker_1_changes.sticker = /*sticker*/
      ctx2[3];
      sticker_1.$set(sticker_1_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dot.$$.fragment, local);
      transition_in(sticker_1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dot.$$.fragment, local);
      transition_out(sticker_1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(td);
      }
      destroy_component(dot);
      destroy_component(sticker_1);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance16($$self, $$props, $$invalidate) {
  let date;
  let noteDateUID;
  let file;
  let sticker;
  let $notesStore;
  let $displayedDateStore;
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(2, $displayedDateStore = $$value));
  let { monthIndex } = $$props;
  const notesStore = notesStores["month"];
  component_subscribe($$self, notesStore, (value) => $$invalidate(7, $notesStore = value));
  const click_handler = (event) => eventHandlers.onClick({
    date,
    createNewSplitLeaf: isControlPressed(event),
    granularity: "month"
  });
  const contextmenu_handler = (event) => eventHandlers.onContextMenu({ date, event, granularity: "month" });
  const pointerenter_handler = (event) => eventHandlers.onHover({
    date,
    targetEl: event.target,
    isControlPressed: isControlPressed(event),
    granularity: "month"
  });
  $$self.$$set = ($$props2) => {
    if ("monthIndex" in $$props2) $$invalidate(0, monthIndex = $$props2.monthIndex);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$displayedDateStore, monthIndex*/
    5) {
      $: $$invalidate(1, date = $displayedDateStore.clone().month(monthIndex).startOf("month"));
    }
    if ($$self.$$.dirty & /*date*/
    2) {
      $: $$invalidate(6, noteDateUID = getNoteDateUID({ date, granularity: "month" }));
    }
    if ($$self.$$.dirty & /*$notesStore, noteDateUID*/
    192) {
      $: $$invalidate(4, file = $notesStore[noteDateUID]?.file);
    }
    if ($$self.$$.dirty & /*$notesStore, noteDateUID*/
    192) {
      $: $$invalidate(3, sticker = $notesStore[noteDateUID]?.sticker);
    }
  };
  return [
    monthIndex,
    date,
    $displayedDateStore,
    sticker,
    file,
    notesStore,
    noteDateUID,
    $notesStore,
    click_handler,
    contextmenu_handler,
    pointerenter_handler
  ];
}
var Month = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance16, create_fragment17, not_equal, { monthIndex: 0 }, add_css12);
  }
};
var Month_default = Month;

// src/ui/components/Arrow.svelte
function add_css13(target) {
  append_styles(target, "svelte-dwmhtj", `.svelte-dwmhtj,.svelte-dwmhtj::before,.svelte-dwmhtj::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-dwmhtj::before,.svelte-dwmhtj::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-dwmhtj{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-dwmhtj{text-transform:none}button.svelte-dwmhtj{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-dwmhtj:-moz-focusring{outline:auto}.svelte-dwmhtj:-moz-ui-invalid{box-shadow:none}.svelte-dwmhtj::-webkit-inner-spin-button,.svelte-dwmhtj::-webkit-outer-spin-button{height:auto}.svelte-dwmhtj::-webkit-search-decoration{-webkit-appearance:none}.svelte-dwmhtj::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-dwmhtj{cursor:pointer}.svelte-dwmhtj:disabled{cursor:default}svg.svelte-dwmhtj{display:block;vertical-align:middle}.svelte-dwmhtj,.svelte-dwmhtj::before,.svelte-dwmhtj::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-dwmhtj::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.container.svelte-dwmhtj{width:100%}@media(min-width: 640px){.container.svelte-dwmhtj{max-width:640px}}@media(min-width: 768px){.container.svelte-dwmhtj{max-width:768px}}@media(min-width: 1024px){.container.svelte-dwmhtj{max-width:1024px}}@media(min-width: 1280px){.container.svelte-dwmhtj{max-width:1280px}}@media(min-width: 1536px){.container.svelte-dwmhtj{max-width:1536px}}.pointer-events-none.svelte-dwmhtj{pointer-events:none}.visible.svelte-dwmhtj{visibility:visible}.invisible.svelte-dwmhtj{visibility:hidden}.collapse.svelte-dwmhtj{visibility:collapse}.static.svelte-dwmhtj{position:static}.absolute.svelte-dwmhtj{position:absolute}.relative.svelte-dwmhtj{position:relative}.sticky.svelte-dwmhtj{position:sticky}.bottom-1.svelte-dwmhtj{bottom:0.25rem}.left-0.svelte-dwmhtj{left:0px}.left-full.svelte-dwmhtj{left:100%}.top-0.svelte-dwmhtj{top:0px}.z-10.svelte-dwmhtj{z-index:10}.z-20.svelte-dwmhtj{z-index:20}.m-0.svelte-dwmhtj{margin:0px}.mx-auto.svelte-dwmhtj{margin-left:auto;margin-right:auto}.-ml-1.svelte-dwmhtj{margin-left:-0.25rem}.mb-1\\.5.svelte-dwmhtj{margin-bottom:0.375rem}.mb-6.svelte-dwmhtj{margin-bottom:1.5rem}.ml-2.svelte-dwmhtj{margin-left:0.5rem}.ml-4.svelte-dwmhtj{margin-left:1rem}.ml-\\[5px\\].svelte-dwmhtj{margin-left:5px}.mr-2.svelte-dwmhtj{margin-right:0.5rem}.mt-1.svelte-dwmhtj{margin-top:0.25rem}.mt-2.svelte-dwmhtj{margin-top:0.5rem}.mt-2\\.5.svelte-dwmhtj{margin-top:0.625rem}.mt-3.svelte-dwmhtj{margin-top:0.75rem}.mt-6.svelte-dwmhtj{margin-top:1.5rem}.mt-7.svelte-dwmhtj{margin-top:1.75rem}.block.svelte-dwmhtj{display:block}.flex.svelte-dwmhtj{display:flex}.table.svelte-dwmhtj{display:table}.contents.svelte-dwmhtj{display:contents}.hidden.svelte-dwmhtj{display:none}.\\!h-auto.svelte-dwmhtj{height:auto !important}.h-2\\.5.svelte-dwmhtj{height:0.625rem}.h-4.svelte-dwmhtj{height:1rem}.h-\\[8px\\].svelte-dwmhtj{height:8px}.h-auto.svelte-dwmhtj{height:auto}.w-2\\.5.svelte-dwmhtj{width:0.625rem}.w-4.svelte-dwmhtj{width:1rem}.w-6.svelte-dwmhtj{width:1.5rem}.w-8.svelte-dwmhtj{width:2rem}.w-\\[8px\\].svelte-dwmhtj{width:8px}.w-full.svelte-dwmhtj{width:100%}.w-max.svelte-dwmhtj{width:-moz-max-content;width:max-content}.max-w-xs.svelte-dwmhtj{max-width:20rem}.flex-grow.svelte-dwmhtj{flex-grow:1}.border-collapse.svelte-dwmhtj{border-collapse:collapse}.-translate-x-1\\/2.svelte-dwmhtj{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\/2.svelte-dwmhtj{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-12.svelte-dwmhtj{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-180.svelte-dwmhtj{--tw-rotate:180deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-45.svelte-dwmhtj{--tw-rotate:45deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-90.svelte-dwmhtj{--tw-rotate:90deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-not-allowed.svelte-dwmhtj{cursor:not-allowed}.cursor-pointer.svelte-dwmhtj{cursor:pointer}.flex-col.svelte-dwmhtj{flex-direction:column}.items-end.svelte-dwmhtj{align-items:flex-end}.items-center.svelte-dwmhtj{align-items:center}.justify-between.svelte-dwmhtj{justify-content:space-between}.rounded-2xl.svelte-dwmhtj{border-radius:1rem}.rounded-\\[--radius-s\\].svelte-dwmhtj{border-radius:var(--radius-s)}.rounded-\\[--tab-curve\\].svelte-dwmhtj{border-radius:var(--tab-curve)}.rounded-sm.svelte-dwmhtj{border-radius:0.125rem}.border.svelte-dwmhtj{border-width:1px}.border-0.svelte-dwmhtj{border-width:0px}.border-solid.svelte-dwmhtj{border-style:solid}.border-\\[var\\(--background-modifier-border\\)\\].svelte-dwmhtj{border-color:var(--background-modifier-border)}.bg-\\[--background-modifier-hover\\].svelte-dwmhtj{background-color:var(--background-modifier-hover)}.bg-\\[--interactive-accent\\].svelte-dwmhtj{background-color:var(--interactive-accent)}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-dwmhtj{background-color:var(--background-primary-alt)}.bg-slate-500.svelte-dwmhtj{--tw-bg-opacity:1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))}.bg-transparent.svelte-dwmhtj{background-color:transparent}.p-1.svelte-dwmhtj{padding:0.25rem}.p-2.svelte-dwmhtj{padding:0.5rem}.p-6.svelte-dwmhtj{padding:1.5rem}.px-1.svelte-dwmhtj{padding-left:0.25rem;padding-right:0.25rem}.px-2.svelte-dwmhtj{padding-left:0.5rem;padding-right:0.5rem}.px-4.svelte-dwmhtj{padding-left:1rem;padding-right:1rem}.py-2.svelte-dwmhtj{padding-top:0.5rem;padding-bottom:0.5rem}.py-3.svelte-dwmhtj{padding-top:0.75rem;padding-bottom:0.75rem}.\\!pt-2.svelte-dwmhtj{padding-top:0.5rem !important}.pt-4.svelte-dwmhtj{padding-top:1rem}.text-center.svelte-dwmhtj{text-align:center}.text-7xl.svelte-dwmhtj{font-size:4.5rem;line-height:1}.text-lg.svelte-dwmhtj{font-size:1.125rem;line-height:1.75rem}.text-sm.svelte-dwmhtj{font-size:0.875rem;line-height:1.25rem}.text-xs.svelte-dwmhtj{font-size:0.75rem;line-height:1rem}.font-medium.svelte-dwmhtj{font-weight:500}.font-semibold.svelte-dwmhtj{font-weight:600}.uppercase.svelte-dwmhtj{text-transform:uppercase}.capitalize.svelte-dwmhtj{text-transform:capitalize}.italic.svelte-dwmhtj{font-style:italic}.tabular-nums.svelte-dwmhtj{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.text-\\[--color-arrow\\].svelte-dwmhtj{color:var(--color-arrow)}.text-\\[--color-text-title\\].svelte-dwmhtj{color:var(--color-text-title)}.text-\\[--color-text-today\\].svelte-dwmhtj{color:var(--color-text-today)}.text-\\[--icon-color\\].svelte-dwmhtj{color:var(--icon-color)}.text-\\[--interactive-accent\\].svelte-dwmhtj{color:var(--interactive-accent)}.text-\\[--text-muted\\].svelte-dwmhtj{color:var(--text-muted)}.text-\\[--text-normal\\].svelte-dwmhtj{color:var(--text-normal)}.text-\\[--text-on-accent\\].svelte-dwmhtj{color:var(--text-on-accent)}.text-\\[var\\(--text-muted\\)\\].svelte-dwmhtj{color:var(--text-muted)}.text-transparent.svelte-dwmhtj{color:transparent}.opacity-0.svelte-dwmhtj{opacity:0}.opacity-100.svelte-dwmhtj{opacity:1}.opacity-50.svelte-dwmhtj{opacity:0.5}.opacity-60.svelte-dwmhtj{opacity:0.6}.opacity-\\[--icon-opacity\\].svelte-dwmhtj{opacity:var(--icon-opacity)}.shadow.svelte-dwmhtj{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.blur.svelte-dwmhtj{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition.svelte-dwmhtj{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.transition-colors.svelte-dwmhtj{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.transition-transform.svelte-dwmhtj{transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-200.svelte-dwmhtj{transition-duration:200ms}.ease-in.svelte-dwmhtj{transition-timing-function:cubic-bezier(0.4, 0, 1, 1)}button.svelte-dwmhtj{background-color:transparent}.last\\:mb-0.svelte-dwmhtj:last-child{margin-bottom:0px}.hover\\:cursor-pointer.svelte-dwmhtj:hover{cursor:pointer}.hover\\:bg-\\[--background-modifier-hover\\].svelte-dwmhtj:hover{background-color:var(--background-modifier-hover)}.hover\\:bg-\\[--interactive-accent-hover\\].svelte-dwmhtj:hover{background-color:var(--interactive-accent-hover)}.hover\\:bg-\\[--interactive-hover\\].svelte-dwmhtj:hover{background-color:var(--interactive-hover)}.hover\\:text-\\[--icon-color-hover\\].svelte-dwmhtj:hover{color:var(--icon-color-hover)}.hover\\:opacity-\\[--icon-opacity-hover\\].svelte-dwmhtj:hover{opacity:var(--icon-opacity-hover)}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-dwmhtj:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}`);
}
function create_fragment18(ctx) {
  let button;
  let svg;
  let path;
  let button_class_value;
  let mounted;
  let dispose;
  return {
    c() {
      button = element("button");
      svg = svg_element("svg");
      path = svg_element("path");
      attr(path, "fill", "currentColor");
      attr(path, "d", "M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z");
      attr(path, "class", "svelte-dwmhtj");
      attr(svg, "class", "h-4 w-4 text-[--color-arrow] svelte-dwmhtj");
      attr(svg, "focusable", "false");
      attr(svg, "role", "img");
      attr(svg, "xmlns", "http://www.w3.org/2000/svg");
      attr(svg, "viewBox", "0 0 320 512");
      attr(button, "class", button_class_value = null_to_empty(clsx_default(
        "[&:not(:focus-visible)]:shadow-none flex items-center",
        /*direction*/
        ctx[2] === "right" && "rotate-180",
        /*isMobile*/
        ctx[3] ? "w-8" : "w-6"
      )) + " svelte-dwmhtj");
      attr(button, "id", "arrow");
      attr(
        button,
        "aria-label",
        /*tooltip*/
        ctx[1]
      );
    },
    m(target, anchor) {
      insert(target, button, anchor);
      append(button, svg);
      append(svg, path);
      if (!mounted) {
        dispose = listen(button, "click", function() {
          if (is_function(
            /*onClick*/
            ctx[0]
          )) ctx[0].apply(this, arguments);
        });
        mounted = true;
      }
    },
    p(new_ctx, [dirty]) {
      ctx = new_ctx;
      if (dirty & /*direction*/
      4 && button_class_value !== (button_class_value = null_to_empty(clsx_default(
        "[&:not(:focus-visible)]:shadow-none flex items-center",
        /*direction*/
        ctx[2] === "right" && "rotate-180",
        /*isMobile*/
        ctx[3] ? "w-8" : "w-6"
      )) + " svelte-dwmhtj")) {
        attr(button, "class", button_class_value);
      }
      if (dirty & /*tooltip*/
      2) {
        attr(
          button,
          "aria-label",
          /*tooltip*/
          ctx[1]
        );
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(button);
      }
      mounted = false;
      dispose();
    }
  };
}
function instance17($$self, $$props, $$invalidate) {
  let { onClick: onClick2 } = $$props;
  let { tooltip } = $$props;
  let { direction } = $$props;
  let isMobile = window.app.isMobile;
  $$self.$$set = ($$props2) => {
    if ("onClick" in $$props2) $$invalidate(0, onClick2 = $$props2.onClick);
    if ("tooltip" in $$props2) $$invalidate(1, tooltip = $$props2.tooltip);
    if ("direction" in $$props2) $$invalidate(2, direction = $$props2.direction);
  };
  return [onClick2, tooltip, direction, isMobile];
}
var Arrow2 = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance17, create_fragment18, safe_not_equal, { onClick: 0, tooltip: 1, direction: 2 }, add_css13);
  }
};
var Arrow_default2 = Arrow2;

// src/ui/components/MonthNav.svelte
function add_css14(target) {
  append_styles(target, "svelte-dwmhtj", `.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{text-transform:none}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:-moz-focusring{outline:auto}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:-moz-ui-invalid{box-shadow:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-inner-spin-button,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-outer-spin-button{height:auto}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-search-decoration{-webkit-appearance:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{cursor:pointer}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:disabled{cursor:default}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.-ml-1.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{margin-left:-0.25rem}.mb-1\\.5.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{margin-bottom:0.375rem}.mt-3.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{margin-top:0.75rem}.flex.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{display:flex}.h-auto.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{height:auto}.flex-col.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{flex-direction:column}.items-end.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{align-items:flex-end}.items-center.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{align-items:center}.justify-between.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{justify-content:space-between}.space-y-1.svelte-dwmhtj>.svelte-dwmhtj:not([hidden])~.svelte-dwmhtj:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0.25rem * var(--tw-space-y-reverse))}.p-2.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{padding:0.5rem}.px-2.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{padding-left:0.5rem;padding-right:0.5rem}.text-7xl.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-size:4.5rem;line-height:1}.text-lg.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-size:1.125rem;line-height:1.75rem}.font-medium.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-weight:500}.font-semibold.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-weight:600}.text-\\[--color-arrow\\].svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{color:var(--color-arrow)}.text-\\[--color-text-title\\].svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{color:var(--color-text-title)}.text-\\[--interactive-accent\\].svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{color:var(--interactive-accent)}.opacity-100.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{opacity:1}.opacity-60.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{opacity:0.6}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{background-color:transparent}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}`);
}
function create_fragment19(ctx) {
  let div2;
  let div0;
  let button0;
  let t0_value = (
    /*$displayedDateStore*/
    ctx[0].format("MMM") + ""
  );
  let t0;
  let t1;
  let button1;
  let t2_value = (
    /*$displayedDateStore*/
    ctx[0].format("YYYY") + ""
  );
  let t2;
  let t3;
  let div1;
  let arrow0;
  let t4;
  let button2;
  let dot;
  let button2_class_value;
  let button2_aria_label_value;
  let t5;
  let arrow1;
  let current;
  let mounted;
  let dispose;
  arrow0 = new Arrow_default2({
    props: {
      direction: "left",
      onClick: (
        /*decrementdisplayedDate*/
        ctx[2]
      ),
      tooltip: "Previous Month"
    }
  });
  dot = new Dot_default({
    props: {
      className: "h-[8px] w-[8px]",
      isFilled: (
        /*showingCurrentMonth*/
        ctx[1]
      )
    }
  });
  arrow1 = new Arrow_default2({
    props: {
      direction: "right",
      onClick: (
        /*incrementdisplayedDate*/
        ctx[3]
      ),
      tooltip: "Next Month"
    }
  });
  return {
    c() {
      div2 = element("div");
      div0 = element("div");
      button0 = element("button");
      t0 = text(t0_value);
      t1 = space();
      button1 = element("button");
      t2 = text(t2_value);
      t3 = space();
      div1 = element("div");
      create_component(arrow0.$$.fragment);
      t4 = space();
      button2 = element("button");
      create_component(dot.$$.fragment);
      t5 = space();
      create_component(arrow1.$$.fragment);
      attr(button0, "class", "h-auto text-7xl [&:not(:focus-visible)]:shadow-none font-semibold svelte-dwmhtj");
      attr(button0, "id", "month");
      attr(button1, "class", "[&:not(:focus-visible)]:shadow-none text-[--interactive-accent] font-medium text-lg svelte-dwmhtj");
      attr(button1, "id", "year");
      attr(div0, "class", "flex justify-between items-end text-[--color-text-title] svelte-dwmhtj");
      attr(div0, "id", "title");
      attr(button2, "class", button2_class_value = "[&:not(:focus-visible)]:shadow-none text-[--color-arrow] flex items-center p-2 " + /*showingCurrentMonth*/
      (ctx[1] ? "opacity-100" : "opacity-60 ") + " svelte-dwmhtj");
      attr(button2, "id", "reset-button");
      attr(button2, "aria-label", button2_aria_label_value = !/*showingCurrentMonth*/
      ctx[1] ? "Current Month" : null);
      attr(div1, "class", "flex items-center -ml-1 svelte-dwmhtj");
      attr(div1, "id", "bottom-nav");
      attr(div2, "class", "flex flex-col space-y-1 mt-3 mb-1.5 px-2 svelte-dwmhtj");
      attr(div2, "id", "nav");
    },
    m(target, anchor) {
      insert(target, div2, anchor);
      append(div2, div0);
      append(div0, button0);
      append(button0, t0);
      append(div0, t1);
      append(div0, button1);
      append(button1, t2);
      append(div2, t3);
      append(div2, div1);
      mount_component(arrow0, div1, null);
      append(div1, t4);
      append(div1, button2);
      mount_component(dot, button2, null);
      append(div1, t5);
      mount_component(arrow1, div1, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen(
            button0,
            "click",
            /*click_handler*/
            ctx[6]
          ),
          listen(
            button0,
            "contextmenu",
            /*contextmenu_handler*/
            ctx[7]
          ),
          listen(
            button0,
            "pointerenter",
            /*pointerenter_handler*/
            ctx[8]
          ),
          listen(
            button1,
            "click",
            /*click_handler_1*/
            ctx[9]
          ),
          listen(
            button1,
            "contextmenu",
            /*contextmenu_handler_1*/
            ctx[10]
          ),
          listen(
            button1,
            "pointerenter",
            /*pointerenter_handler_1*/
            ctx[11]
          ),
          listen(
            button2,
            "click",
            /*resetdisplayedDate*/
            ctx[4]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & /*$displayedDateStore*/
      1) && t0_value !== (t0_value = /*$displayedDateStore*/
      ctx2[0].format("MMM") + "")) set_data(t0, t0_value);
      if ((!current || dirty & /*$displayedDateStore*/
      1) && t2_value !== (t2_value = /*$displayedDateStore*/
      ctx2[0].format("YYYY") + "")) set_data(t2, t2_value);
      const dot_changes = {};
      if (dirty & /*showingCurrentMonth*/
      2) dot_changes.isFilled = /*showingCurrentMonth*/
      ctx2[1];
      dot.$set(dot_changes);
      if (!current || dirty & /*showingCurrentMonth*/
      2 && button2_class_value !== (button2_class_value = "[&:not(:focus-visible)]:shadow-none text-[--color-arrow] flex items-center p-2 " + /*showingCurrentMonth*/
      (ctx2[1] ? "opacity-100" : "opacity-60 ") + " svelte-dwmhtj")) {
        attr(button2, "class", button2_class_value);
      }
      if (!current || dirty & /*showingCurrentMonth*/
      2 && button2_aria_label_value !== (button2_aria_label_value = !/*showingCurrentMonth*/
      ctx2[1] ? "Current Month" : null)) {
        attr(button2, "aria-label", button2_aria_label_value);
      }
    },
    i(local) {
      if (current) return;
      transition_in(arrow0.$$.fragment, local);
      transition_in(dot.$$.fragment, local);
      transition_in(arrow1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(arrow0.$$.fragment, local);
      transition_out(dot.$$.fragment, local);
      transition_out(arrow1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div2);
      }
      destroy_component(arrow0);
      destroy_component(dot);
      destroy_component(arrow1);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance18($$self, $$props, $$invalidate) {
  let $displayedDateStore;
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(0, $displayedDateStore = $$value));
  let today;
  function decrementdisplayedDate() {
    displayedDateStore.update((date) => date.clone().subtract(1, "month"));
  }
  function incrementdisplayedDate() {
    displayedDateStore.update((date) => date.clone().add(1, "month"));
  }
  function resetdisplayedDate() {
    yearsRanges.update((values) => ({
      ...values,
      crrRangeIndex: values.ranges.findIndex((range) => range === values.todayRange)
    }));
    displayedDateStore.set(today.clone());
  }
  let showingCurrentMonth;
  const click_handler = (event) => eventHandlers.onClick({
    date: $displayedDateStore,
    createNewSplitLeaf: isControlPressed(event),
    granularity: "month"
  });
  const contextmenu_handler = (event) => eventHandlers.onContextMenu({
    date: $displayedDateStore,
    event,
    granularity: "month"
  });
  const pointerenter_handler = (event) => {
    eventHandlers.onHover({
      date: $displayedDateStore,
      targetEl: event.target,
      isControlPressed: isControlPressed(event),
      granularity: "month"
    });
  };
  const click_handler_1 = (event) => eventHandlers.onClick({
    date: $displayedDateStore.clone().startOf("year"),
    createNewSplitLeaf: isControlPressed(event),
    granularity: "year"
  });
  const contextmenu_handler_1 = (event) => eventHandlers.onContextMenu({
    date: $displayedDateStore.clone().startOf("year"),
    event,
    granularity: "year"
  });
  const pointerenter_handler_1 = (event) => {
    eventHandlers.onHover({
      date: $displayedDateStore.clone().startOf("year"),
      targetEl: event.target,
      isControlPressed: isControlPressed(event),
      granularity: "year"
    });
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$displayedDateStore*/
    1) {
      $: $displayedDateStore, $$invalidate(5, today = window.moment());
    }
    if ($$self.$$.dirty & /*$displayedDateStore, today*/
    33) {
      $: $$invalidate(1, showingCurrentMonth = $displayedDateStore.isSame(today, "month"));
    }
  };
  return [
    $displayedDateStore,
    showingCurrentMonth,
    decrementdisplayedDate,
    incrementdisplayedDate,
    resetdisplayedDate,
    today,
    click_handler,
    contextmenu_handler,
    pointerenter_handler,
    click_handler_1,
    contextmenu_handler_1,
    pointerenter_handler_1
  ];
}
var MonthNav = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance18, create_fragment19, safe_not_equal, {}, add_css14);
  }
};
var MonthNav_default = MonthNav;

// src/ui/components/QuarterNum.svelte
function add_css15(target) {
  append_styles(target, "svelte-1iwyr36", `.svelte-1iwyr36,.svelte-1iwyr36::before,.svelte-1iwyr36::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-1iwyr36::before,.svelte-1iwyr36::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-1iwyr36{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-1iwyr36{text-transform:none}button.svelte-1iwyr36{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-1iwyr36:-moz-focusring{outline:auto}.svelte-1iwyr36:-moz-ui-invalid{box-shadow:none}.svelte-1iwyr36::-webkit-inner-spin-button,.svelte-1iwyr36::-webkit-outer-spin-button{height:auto}.svelte-1iwyr36::-webkit-search-decoration{-webkit-appearance:none}.svelte-1iwyr36::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-1iwyr36{cursor:pointer}.svelte-1iwyr36:disabled{cursor:default}.svelte-1iwyr36,.svelte-1iwyr36::before,.svelte-1iwyr36::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-1iwyr36::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.relative.svelte-1iwyr36{position:relative}`);
}
function create_fragment20(ctx) {
  let td;
  let button;
  let t0;
  let t1;
  let t2;
  let dot;
  let t3;
  let sticker_1;
  let current;
  let mounted;
  let dispose;
  dot = new Dot_default({
    props: {
      isFilled: !!/*file*/
      ctx[3],
      isActive: !!/*file*/
      ctx[3]
    }
  });
  sticker_1 = new Sticker_default({ props: { sticker: (
    /*sticker*/
    ctx[2]
  ) } });
  return {
    c() {
      td = element("td");
      button = element("button");
      t0 = text("Q");
      t1 = text(
        /*quarterNum*/
        ctx[0]
      );
      t2 = space();
      create_component(dot.$$.fragment);
      t3 = space();
      create_component(sticker_1.$$.fragment);
      attr(button, "id", "period-num");
      attr(button, "class", "svelte-1iwyr36");
      attr(td, "class", "relative svelte-1iwyr36");
    },
    m(target, anchor) {
      insert(target, td, anchor);
      append(td, button);
      append(button, t0);
      append(button, t1);
      append(button, t2);
      mount_component(dot, button, null);
      append(td, t3);
      mount_component(sticker_1, td, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen(
            button,
            "click",
            /*click_handler*/
            ctx[8]
          ),
          listen(
            button,
            "contextmenu",
            /*contextmenu_handler*/
            ctx[9]
          ),
          listen(
            button,
            "pointerenter",
            /*pointerenter_handler*/
            ctx[10]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (!current || dirty & /*quarterNum*/
      1) set_data(
        t1,
        /*quarterNum*/
        ctx2[0]
      );
      const dot_changes = {};
      if (dirty & /*file*/
      8) dot_changes.isFilled = !!/*file*/
      ctx2[3];
      if (dirty & /*file*/
      8) dot_changes.isActive = !!/*file*/
      ctx2[3];
      dot.$set(dot_changes);
      const sticker_1_changes = {};
      if (dirty & /*sticker*/
      4) sticker_1_changes.sticker = /*sticker*/
      ctx2[2];
      sticker_1.$set(sticker_1_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dot.$$.fragment, local);
      transition_in(sticker_1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dot.$$.fragment, local);
      transition_out(sticker_1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(td);
      }
      destroy_component(dot);
      destroy_component(sticker_1);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance19($$self, $$props, $$invalidate) {
  let date;
  let noteDateUID;
  let file;
  let sticker;
  let $notesStore;
  let $displayedDateStore;
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(7, $displayedDateStore = $$value));
  let { quarterNum } = $$props;
  const notesStore = notesStores["quarter"];
  component_subscribe($$self, notesStore, (value) => $$invalidate(6, $notesStore = value));
  const click_handler = (event) => eventHandlers.onClick({
    date,
    createNewSplitLeaf: isControlPressed(event),
    granularity: "quarter"
  });
  const contextmenu_handler = (event) => eventHandlers.onContextMenu({ date, event, granularity: "quarter" });
  const pointerenter_handler = (event) => eventHandlers.onHover({
    date,
    targetEl: event.target,
    isControlPressed: isControlPressed(event),
    granularity: "quarter"
  });
  $$self.$$set = ($$props2) => {
    if ("quarterNum" in $$props2) $$invalidate(0, quarterNum = $$props2.quarterNum);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$displayedDateStore, quarterNum*/
    129) {
      $: $$invalidate(1, date = $displayedDateStore.clone().quarter(quarterNum).startOf("quarter"));
    }
    if ($$self.$$.dirty & /*date*/
    2) {
      $: $$invalidate(5, noteDateUID = getNoteDateUID({ date, granularity: "quarter" }));
    }
    if ($$self.$$.dirty & /*$notesStore, noteDateUID*/
    96) {
      $: $$invalidate(3, file = $notesStore[noteDateUID]?.file);
    }
    if ($$self.$$.dirty & /*$notesStore, noteDateUID*/
    96) {
      $: $$invalidate(2, sticker = $notesStore[noteDateUID]?.sticker);
    }
  };
  return [
    quarterNum,
    date,
    sticker,
    file,
    notesStore,
    noteDateUID,
    $notesStore,
    $displayedDateStore,
    click_handler,
    contextmenu_handler,
    pointerenter_handler
  ];
}
var QuarterNum = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance19, create_fragment20, not_equal, { quarterNum: 0 }, add_css15);
  }
};
var QuarterNum_default = QuarterNum;

// src/ui/components/WeekNum.svelte
function add_css16(target) {
  append_styles(target, "svelte-140q8kt", `.svelte-140q8kt,.svelte-140q8kt::before,.svelte-140q8kt::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-140q8kt::before,.svelte-140q8kt::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-140q8kt{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-140q8kt{text-transform:none}button.svelte-140q8kt{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-140q8kt:-moz-focusring{outline:auto}.svelte-140q8kt:-moz-ui-invalid{box-shadow:none}.svelte-140q8kt::-webkit-inner-spin-button,.svelte-140q8kt::-webkit-outer-spin-button{height:auto}.svelte-140q8kt::-webkit-search-decoration{-webkit-appearance:none}.svelte-140q8kt::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-140q8kt{cursor:pointer}.svelte-140q8kt:disabled{cursor:default}.svelte-140q8kt,.svelte-140q8kt::before,.svelte-140q8kt::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-140q8kt::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.relative.svelte-140q8kt{position:relative}td.svelte-140q8kt{border-right:1px solid var(--background-modifier-border)}`);
}
function create_fragment21(ctx) {
  let td;
  let button;
  let t0;
  let t1;
  let dot;
  let t2;
  let sticker_1;
  let current;
  let mounted;
  let dispose;
  dot = new Dot_default({
    props: {
      isFilled: !!/*file*/
      ctx[3],
      isActive: !!/*file*/
      ctx[3]
    }
  });
  sticker_1 = new Sticker_default({ props: { sticker: (
    /*sticker*/
    ctx[2]
  ) } });
  return {
    c() {
      td = element("td");
      button = element("button");
      t0 = text(
        /*weekNum*/
        ctx[0]
      );
      t1 = space();
      create_component(dot.$$.fragment);
      t2 = space();
      create_component(sticker_1.$$.fragment);
      attr(button, "id", "period-num");
      attr(button, "class", "svelte-140q8kt");
      attr(td, "class", "relative svelte-140q8kt");
    },
    m(target, anchor) {
      insert(target, td, anchor);
      append(td, button);
      append(button, t0);
      append(button, t1);
      mount_component(dot, button, null);
      append(td, t2);
      mount_component(sticker_1, td, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen(
            button,
            "click",
            /*click_handler*/
            ctx[6]
          ),
          listen(
            button,
            "contextmenu",
            /*contextmenu_handler*/
            ctx[7]
          ),
          listen(
            button,
            "pointerenter",
            /*pointerenter_handler*/
            ctx[8]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (!current || dirty & /*weekNum*/
      1) set_data(
        t0,
        /*weekNum*/
        ctx2[0]
      );
      const dot_changes = {};
      if (dirty & /*file*/
      8) dot_changes.isFilled = !!/*file*/
      ctx2[3];
      if (dirty & /*file*/
      8) dot_changes.isActive = !!/*file*/
      ctx2[3];
      dot.$set(dot_changes);
      const sticker_1_changes = {};
      if (dirty & /*sticker*/
      4) sticker_1_changes.sticker = /*sticker*/
      ctx2[2];
      sticker_1.$set(sticker_1_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dot.$$.fragment, local);
      transition_in(sticker_1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dot.$$.fragment, local);
      transition_out(sticker_1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(td);
      }
      destroy_component(dot);
      destroy_component(sticker_1);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance20($$self, $$props, $$invalidate) {
  let file;
  let sticker;
  let $notesStore;
  let { weekNum } = $$props;
  let { startOfWeekDate } = $$props;
  const notesStore = notesStores["week"];
  component_subscribe($$self, notesStore, (value) => $$invalidate(5, $notesStore = value));
  const noteDateUID = getNoteDateUID({
    date: startOfWeekDate,
    granularity: "week"
  });
  const click_handler = (event) => eventHandlers.onClick({
    date: startOfWeekDate,
    createNewSplitLeaf: isControlPressed(event),
    granularity: "week"
  });
  const contextmenu_handler = (event) => eventHandlers.onContextMenu({
    date: startOfWeekDate,
    event,
    granularity: "week"
  });
  const pointerenter_handler = (event) => {
    eventHandlers.onHover({
      date: startOfWeekDate,
      targetEl: event.target,
      isControlPressed: isControlPressed(event),
      granularity: "week"
    });
  };
  $$self.$$set = ($$props2) => {
    if ("weekNum" in $$props2) $$invalidate(0, weekNum = $$props2.weekNum);
    if ("startOfWeekDate" in $$props2) $$invalidate(1, startOfWeekDate = $$props2.startOfWeekDate);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$notesStore*/
    32) {
      $: $$invalidate(3, file = $notesStore[noteDateUID]?.file);
    }
    if ($$self.$$.dirty & /*$notesStore*/
    32) {
      $: $$invalidate(2, sticker = $notesStore[noteDateUID]?.sticker);
    }
  };
  return [
    weekNum,
    startOfWeekDate,
    sticker,
    file,
    notesStore,
    $notesStore,
    click_handler,
    contextmenu_handler,
    pointerenter_handler
  ];
}
var WeekNum = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance20, create_fragment21, not_equal, { weekNum: 0, startOfWeekDate: 1 }, add_css16);
  }
};
var WeekNum_default = WeekNum;

// src/ui/components/Year.svelte
function add_css17(target) {
  append_styles(target, "svelte-1iwyr36", `.svelte-1iwyr36,.svelte-1iwyr36::before,.svelte-1iwyr36::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-1iwyr36::before,.svelte-1iwyr36::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-1iwyr36{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-1iwyr36{text-transform:none}button.svelte-1iwyr36{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-1iwyr36:-moz-focusring{outline:auto}.svelte-1iwyr36:-moz-ui-invalid{box-shadow:none}.svelte-1iwyr36::-webkit-inner-spin-button,.svelte-1iwyr36::-webkit-outer-spin-button{height:auto}.svelte-1iwyr36::-webkit-search-decoration{-webkit-appearance:none}.svelte-1iwyr36::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-1iwyr36{cursor:pointer}.svelte-1iwyr36:disabled{cursor:default}.svelte-1iwyr36,.svelte-1iwyr36::before,.svelte-1iwyr36::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-1iwyr36::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.relative.svelte-1iwyr36{position:relative}`);
}
function create_fragment22(ctx) {
  let td;
  let button;
  let t0;
  let t1;
  let dot;
  let t2;
  let sticker_1;
  let current;
  let mounted;
  let dispose;
  dot = new Dot_default({
    props: {
      isFilled: !!/*file*/
      ctx[3],
      isActive: !!/*file*/
      ctx[3]
    }
  });
  sticker_1 = new Sticker_default({ props: { sticker: (
    /*sticker*/
    ctx[2]
  ) } });
  return {
    c() {
      td = element("td");
      button = element("button");
      t0 = text(
        /*year*/
        ctx[0]
      );
      t1 = space();
      create_component(dot.$$.fragment);
      t2 = space();
      create_component(sticker_1.$$.fragment);
      attr(button, "id", "year");
      attr(button, "class", "svelte-1iwyr36");
      attr(td, "class", "relative svelte-1iwyr36");
    },
    m(target, anchor) {
      insert(target, td, anchor);
      append(td, button);
      append(button, t0);
      append(button, t1);
      mount_component(dot, button, null);
      append(td, t2);
      mount_component(sticker_1, td, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen(
            button,
            "click",
            /*click_handler*/
            ctx[8]
          ),
          listen(
            button,
            "contextmenu",
            /*contextmenu_handler*/
            ctx[9]
          ),
          listen(
            button,
            "pointerenter",
            /*pointerenter_handler*/
            ctx[10]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (!current || dirty & /*year*/
      1) set_data(
        t0,
        /*year*/
        ctx2[0]
      );
      const dot_changes = {};
      if (dirty & /*file*/
      8) dot_changes.isFilled = !!/*file*/
      ctx2[3];
      if (dirty & /*file*/
      8) dot_changes.isActive = !!/*file*/
      ctx2[3];
      dot.$set(dot_changes);
      const sticker_1_changes = {};
      if (dirty & /*sticker*/
      4) sticker_1_changes.sticker = /*sticker*/
      ctx2[2];
      sticker_1.$set(sticker_1_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dot.$$.fragment, local);
      transition_in(sticker_1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dot.$$.fragment, local);
      transition_out(sticker_1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(td);
      }
      destroy_component(dot);
      destroy_component(sticker_1);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance21($$self, $$props, $$invalidate) {
  let date;
  let noteDateUID;
  let file;
  let sticker;
  let $notesStore;
  let $displayedDateStore;
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(7, $displayedDateStore = $$value));
  let { year } = $$props;
  const notesStore = notesStores["year"];
  component_subscribe($$self, notesStore, (value) => $$invalidate(6, $notesStore = value));
  const click_handler = (event) => eventHandlers.onClick({
    date,
    createNewSplitLeaf: isControlPressed(event),
    granularity: "year"
  });
  const contextmenu_handler = (event) => eventHandlers.onContextMenu({ date, event, granularity: "year" });
  const pointerenter_handler = (event) => {
    eventHandlers.onHover({
      date,
      targetEl: event.target,
      isControlPressed: isControlPressed(event),
      granularity: "year"
    });
  };
  $$self.$$set = ($$props2) => {
    if ("year" in $$props2) $$invalidate(0, year = $$props2.year);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$displayedDateStore, year*/
    129) {
      $: $$invalidate(1, date = $displayedDateStore.clone().year(year).startOf("year"));
    }
    if ($$self.$$.dirty & /*date*/
    2) {
      $: $$invalidate(5, noteDateUID = getNoteDateUID({ date, granularity: "year" }));
    }
    if ($$self.$$.dirty & /*$notesStore, noteDateUID*/
    96) {
      $: $$invalidate(3, file = $notesStore[noteDateUID]?.file);
    }
    if ($$self.$$.dirty & /*$notesStore, noteDateUID*/
    96) {
      $: $$invalidate(2, sticker = $notesStore[noteDateUID]?.sticker);
    }
  };
  return [
    year,
    date,
    sticker,
    file,
    notesStore,
    noteDateUID,
    $notesStore,
    $displayedDateStore,
    click_handler,
    contextmenu_handler,
    pointerenter_handler
  ];
}
var Year = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance21, create_fragment22, not_equal, { year: 0 }, add_css17);
  }
};
var Year_default = Year;

// src/ui/components/YearNav.svelte
function add_css18(target) {
  append_styles(target, "svelte-dwmhtj", `.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{text-transform:none}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:-moz-focusring{outline:auto}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:-moz-ui-invalid{box-shadow:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-inner-spin-button,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-outer-spin-button{height:auto}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-search-decoration{-webkit-appearance:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{cursor:pointer}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:disabled{cursor:default}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.-ml-1.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{margin-left:-0.25rem}.mt-2\\.5.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{margin-top:0.625rem}.flex.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{display:flex}.h-auto.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{height:auto}.flex-col.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{flex-direction:column}.items-end.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{align-items:flex-end}.items-center.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{align-items:center}.justify-between.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{justify-content:space-between}.space-y-1.svelte-dwmhtj>.svelte-dwmhtj:not([hidden])~.svelte-dwmhtj:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0.25rem * var(--tw-space-y-reverse))}.p-2.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{padding:0.5rem}.px-2.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{padding-left:0.5rem;padding-right:0.5rem}.text-7xl.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-size:4.5rem;line-height:1}.font-medium.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-weight:500}.font-semibold.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-weight:600}.text-\\[--color-arrow\\].svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{color:var(--color-arrow)}.text-\\[--color-text-title\\].svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{color:var(--color-text-title)}.text-\\[--interactive-accent\\].svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{color:var(--interactive-accent)}.opacity-100.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{opacity:1}.opacity-60.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{opacity:0.6}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{background-color:transparent}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}`);
}
function create_fragment23(ctx) {
  let div2;
  let div0;
  let button0;
  let t0_value = (
    /*$displayedDateStore*/
    ctx[0].format("YYYY") + ""
  );
  let t0;
  let t1;
  let button1;
  let t2_value = (
    /*$yearsRanges*/
    ctx[2].ranges[
      /*$yearsRanges*/
      ctx[2].crrRangeIndex
    ] + ""
  );
  let t2;
  let t3;
  let div1;
  let arrow0;
  let t4;
  let button2;
  let dot;
  let button2_class_value;
  let button2_aria_label_value;
  let t5;
  let arrow1;
  let current;
  let mounted;
  let dispose;
  arrow0 = new Arrow_default2({
    props: {
      direction: "left",
      onClick: (
        /*decrementdisplayedDate*/
        ctx[3]
      ),
      tooltip: "Previous Year"
    }
  });
  dot = new Dot_default({
    props: {
      className: "h-[8px] w-[8px]",
      isFilled: (
        /*showingCurrentYear*/
        ctx[1]
      )
    }
  });
  arrow1 = new Arrow_default2({
    props: {
      direction: "right",
      onClick: (
        /*incrementdisplayedDate*/
        ctx[4]
      ),
      tooltip: "Next Year"
    }
  });
  return {
    c() {
      div2 = element("div");
      div0 = element("div");
      button0 = element("button");
      t0 = text(t0_value);
      t1 = space();
      button1 = element("button");
      t2 = text(t2_value);
      t3 = space();
      div1 = element("div");
      create_component(arrow0.$$.fragment);
      t4 = space();
      button2 = element("button");
      create_component(dot.$$.fragment);
      t5 = space();
      create_component(arrow1.$$.fragment);
      attr(button0, "class", "h-auto text-7xl [&:not(:focus-visible)]:shadow-none font-semibold svelte-dwmhtj");
      attr(button0, "id", "year");
      attr(button1, "class", "[&:not(:focus-visible)]:shadow-none text-[--interactive-accent] font-medium opacity-60 svelte-dwmhtj");
      attr(button1, "id", "years-range");
      attr(div0, "class", "flex justify-between items-end text-[--color-text-title] svelte-dwmhtj");
      attr(div0, "id", "title");
      attr(button2, "class", button2_class_value = "[&:not(:focus-visible)]:shadow-none text-[--color-arrow] flex items-center p-2 " + /*showingCurrentYear*/
      (ctx[1] ? "opacity-100" : "opacity-60 ") + " svelte-dwmhtj");
      attr(button2, "id", "reset-button");
      attr(button2, "aria-label", button2_aria_label_value = !/*showingCurrentYear*/
      ctx[1] ? "Reset to current year" : null);
      attr(div1, "class", "flex items-center -ml-1 svelte-dwmhtj");
      attr(div1, "id", "bottom-nav");
      attr(div2, "class", "flex flex-col space-y-1 mt-2.5 px-2 svelte-dwmhtj");
      attr(div2, "id", "nav");
    },
    m(target, anchor) {
      insert(target, div2, anchor);
      append(div2, div0);
      append(div0, button0);
      append(button0, t0);
      append(div0, t1);
      append(div0, button1);
      append(button1, t2);
      append(div2, t3);
      append(div2, div1);
      mount_component(arrow0, div1, null);
      append(div1, t4);
      append(div1, button2);
      mount_component(dot, button2, null);
      append(div1, t5);
      mount_component(arrow1, div1, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen(
            button0,
            "click",
            /*click_handler*/
            ctx[7]
          ),
          listen(
            button0,
            "contextmenu",
            /*contextmenu_handler*/
            ctx[8]
          ),
          listen(
            button0,
            "pointerenter",
            /*pointerenter_handler*/
            ctx[9]
          ),
          listen(
            button2,
            "click",
            /*resetdisplayedDate*/
            ctx[5]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & /*$displayedDateStore*/
      1) && t0_value !== (t0_value = /*$displayedDateStore*/
      ctx2[0].format("YYYY") + "")) set_data(t0, t0_value);
      if ((!current || dirty & /*$yearsRanges*/
      4) && t2_value !== (t2_value = /*$yearsRanges*/
      ctx2[2].ranges[
        /*$yearsRanges*/
        ctx2[2].crrRangeIndex
      ] + "")) set_data(t2, t2_value);
      const dot_changes = {};
      if (dirty & /*showingCurrentYear*/
      2) dot_changes.isFilled = /*showingCurrentYear*/
      ctx2[1];
      dot.$set(dot_changes);
      if (!current || dirty & /*showingCurrentYear*/
      2 && button2_class_value !== (button2_class_value = "[&:not(:focus-visible)]:shadow-none text-[--color-arrow] flex items-center p-2 " + /*showingCurrentYear*/
      (ctx2[1] ? "opacity-100" : "opacity-60 ") + " svelte-dwmhtj")) {
        attr(button2, "class", button2_class_value);
      }
      if (!current || dirty & /*showingCurrentYear*/
      2 && button2_aria_label_value !== (button2_aria_label_value = !/*showingCurrentYear*/
      ctx2[1] ? "Reset to current year" : null)) {
        attr(button2, "aria-label", button2_aria_label_value);
      }
    },
    i(local) {
      if (current) return;
      transition_in(arrow0.$$.fragment, local);
      transition_in(dot.$$.fragment, local);
      transition_in(arrow1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(arrow0.$$.fragment, local);
      transition_out(dot.$$.fragment, local);
      transition_out(arrow1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div2);
      }
      destroy_component(arrow0);
      destroy_component(dot);
      destroy_component(arrow1);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance22($$self, $$props, $$invalidate) {
  let $displayedDateStore;
  let $yearsRanges;
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(0, $displayedDateStore = $$value));
  component_subscribe($$self, yearsRanges, ($$value) => $$invalidate(2, $yearsRanges = $$value));
  let today;
  function decrementdisplayedDate() {
    displayedDateStore.update((date) => date.clone().subtract(1, "year"));
  }
  function incrementdisplayedDate() {
    displayedDateStore.update((date) => date.clone().add(1, "year"));
  }
  function resetdisplayedDate() {
    yearsRanges.update((values) => ({
      ...values,
      crrRangeIndex: values.ranges.findIndex((range) => range === values.todayRange)
    }));
    displayedDateStore.set(today.clone());
  }
  let showingCurrentYear;
  const click_handler = (event) => eventHandlers.onClick({
    date: $displayedDateStore,
    createNewSplitLeaf: isControlPressed(event),
    granularity: "year"
  });
  const contextmenu_handler = (event) => eventHandlers.onContextMenu({
    date: $displayedDateStore,
    event,
    granularity: "year"
  });
  const pointerenter_handler = (event) => {
    eventHandlers.onHover({
      date: $displayedDateStore,
      targetEl: event.target,
      isControlPressed: isControlPressed(event),
      granularity: "year"
    });
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$displayedDateStore*/
    1) {
      $: $displayedDateStore, $$invalidate(6, today = window.moment());
    }
    if ($$self.$$.dirty & /*$displayedDateStore, today*/
    65) {
      $: $displayedDateStore, (() => {
        $$invalidate(1, showingCurrentYear = $displayedDateStore.isSame(today, "year"));
        yearsRanges.selectOrCreateRanges();
      })();
    }
  };
  return [
    $displayedDateStore,
    showingCurrentYear,
    $yearsRanges,
    decrementdisplayedDate,
    incrementdisplayedDate,
    resetdisplayedDate,
    today,
    click_handler,
    contextmenu_handler,
    pointerenter_handler
  ];
}
var YearNav = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance22, create_fragment23, safe_not_equal, {}, add_css18);
  }
};
var YearNav_default = YearNav;

// src/ui/components/YearsNav.svelte
function add_css19(target) {
  append_styles(target, "svelte-dwmhtj", `.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{text-transform:none}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{-webkit-appearance:button;background-color:transparent;background-image:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:-moz-focusring{outline:auto}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:-moz-ui-invalid{box-shadow:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-inner-spin-button,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-outer-spin-button{height:auto}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-search-decoration{-webkit-appearance:none}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{cursor:pointer}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:disabled{cursor:default}.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::before,.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }@media(min-width: 640px){}@media(min-width: 768px){}@media(min-width: 1024px){}@media(min-width: 1280px){}@media(min-width: 1536px){}.-ml-1.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{margin-left:-0.25rem}.mb-1\\.5.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{margin-bottom:0.375rem}.mt-3.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{margin-top:0.75rem}.flex.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{display:flex}.flex-col.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{flex-direction:column}.items-center.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{align-items:center}.space-y-1.svelte-dwmhtj>.svelte-dwmhtj:not([hidden])~.svelte-dwmhtj:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0.25rem * var(--tw-space-y-reverse))}.p-2.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{padding:0.5rem}.px-2.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{padding-left:0.5rem;padding-right:0.5rem}.text-7xl.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-size:4.5rem;line-height:1}.font-semibold.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{font-weight:600}.text-\\[--color-arrow\\].svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{color:var(--color-arrow)}.text-\\[--color-text-title\\].svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{color:var(--color-text-title)}.opacity-100.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{opacity:1}.opacity-60.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{opacity:0.6}button.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj{background-color:transparent}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-dwmhtj.svelte-dwmhtj.svelte-dwmhtj:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}`);
}
function create_fragment24(ctx) {
  let div2;
  let div0;
  let t0_value = (
    /*crrRange*/
    ctx[1][0] + ""
  );
  let t0;
  let t1;
  let t2_value = (
    /*crrRange*/
    ctx[1][1].slice(2) + ""
  );
  let t2;
  let t3;
  let div1;
  let arrow0;
  let t4;
  let button;
  let dot;
  let button_class_value;
  let button_aria_label_value;
  let t5;
  let arrow1;
  let current;
  let mounted;
  let dispose;
  arrow0 = new Arrow_default2({
    props: {
      direction: "left",
      onClick: (
        /*decrementdisplayedYearRange*/
        ctx[2]
      ),
      tooltip: "Previous Range"
    }
  });
  dot = new Dot_default({
    props: {
      className: "h-[8px] w-[8px]",
      isFilled: (
        /*showingCurrentRange*/
        ctx[0]
      )
    }
  });
  arrow1 = new Arrow_default2({
    props: {
      direction: "right",
      onClick: (
        /*incrementdisplayedDate*/
        ctx[3]
      ),
      tooltip: "Next Range"
    }
  });
  return {
    c() {
      div2 = element("div");
      div0 = element("div");
      t0 = text(t0_value);
      t1 = text(" - ");
      t2 = text(t2_value);
      t3 = space();
      div1 = element("div");
      create_component(arrow0.$$.fragment);
      t4 = space();
      button = element("button");
      create_component(dot.$$.fragment);
      t5 = space();
      create_component(arrow1.$$.fragment);
      attr(div0, "class", "text-[--color-text-title] text-7xl [&:not(:focus-visible)]:shadow-none font-semibold svelte-dwmhtj");
      attr(div0, "id", "title");
      attr(button, "class", button_class_value = "[&:not(:focus-visible)]:shadow-none text-[--color-arrow] flex items-center p-2 " + /*showingCurrentRange*/
      (ctx[0] ? "opacity-100" : "opacity-60 ") + " svelte-dwmhtj");
      attr(button, "id", "reset-button");
      attr(button, "aria-label", button_aria_label_value = !/*showingCurrentRange*/
      ctx[0] ? "Current Range" : null);
      attr(div1, "class", "flex items-center -ml-1 svelte-dwmhtj");
      attr(div1, "id", "bottom-nav");
      attr(div2, "class", "flex flex-col space-y-1 mt-3 mb-1.5 px-2 svelte-dwmhtj");
      attr(div2, "id", "nav");
    },
    m(target, anchor) {
      insert(target, div2, anchor);
      append(div2, div0);
      append(div0, t0);
      append(div0, t1);
      append(div0, t2);
      append(div2, t3);
      append(div2, div1);
      mount_component(arrow0, div1, null);
      append(div1, t4);
      append(div1, button);
      mount_component(dot, button, null);
      append(div1, t5);
      mount_component(arrow1, div1, null);
      current = true;
      if (!mounted) {
        dispose = listen(
          button,
          "click",
          /*resetdisplayedDate*/
          ctx[4]
        );
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & /*crrRange*/
      2) && t0_value !== (t0_value = /*crrRange*/
      ctx2[1][0] + "")) set_data(t0, t0_value);
      if ((!current || dirty & /*crrRange*/
      2) && t2_value !== (t2_value = /*crrRange*/
      ctx2[1][1].slice(2) + "")) set_data(t2, t2_value);
      const dot_changes = {};
      if (dirty & /*showingCurrentRange*/
      1) dot_changes.isFilled = /*showingCurrentRange*/
      ctx2[0];
      dot.$set(dot_changes);
      if (!current || dirty & /*showingCurrentRange*/
      1 && button_class_value !== (button_class_value = "[&:not(:focus-visible)]:shadow-none text-[--color-arrow] flex items-center p-2 " + /*showingCurrentRange*/
      (ctx2[0] ? "opacity-100" : "opacity-60 ") + " svelte-dwmhtj")) {
        attr(button, "class", button_class_value);
      }
      if (!current || dirty & /*showingCurrentRange*/
      1 && button_aria_label_value !== (button_aria_label_value = !/*showingCurrentRange*/
      ctx2[0] ? "Current Range" : null)) {
        attr(button, "aria-label", button_aria_label_value);
      }
    },
    i(local) {
      if (current) return;
      transition_in(arrow0.$$.fragment, local);
      transition_in(dot.$$.fragment, local);
      transition_in(arrow1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(arrow0.$$.fragment, local);
      transition_out(dot.$$.fragment, local);
      transition_out(arrow1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div2);
      }
      destroy_component(arrow0);
      destroy_component(dot);
      destroy_component(arrow1);
      mounted = false;
      dispose();
    }
  };
}
function instance23($$self, $$props, $$invalidate) {
  let crrRange;
  let $yearsRanges;
  let $displayedDateStore;
  component_subscribe($$self, yearsRanges, ($$value) => $$invalidate(5, $yearsRanges = $$value));
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(6, $displayedDateStore = $$value));
  const todayMoment = window.moment();
  function decrementdisplayedYearRange() {
    console.log("decrementdisplayedYearRange() > yearsRanges store: ", $yearsRanges);
    yearsRanges.updateRanges({
      action: "decrement",
      displayedDateModifier: -YEARS_RANGE_SIZE
    });
  }
  function incrementdisplayedDate() {
    console.log("incrementedisplayedDate() > yearsRanges store: ", $yearsRanges);
    yearsRanges.updateRanges({ action: "increment" });
  }
  function resetdisplayedDate() {
    yearsRanges.update((values) => ({
      ...values,
      crrRangeIndex: values.ranges.findIndex((range) => range === values.todayRange)
    }));
    displayedDateStore.set(todayMoment.clone());
  }
  let showingCurrentRange;
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$displayedDateStore, $yearsRanges*/
    96) {
      $: $displayedDateStore, (() => {
        $$invalidate(0, showingCurrentRange = $yearsRanges.todayRange === $yearsRanges.ranges[$yearsRanges.crrRangeIndex]);
        yearsRanges.selectOrCreateRanges();
      })();
    }
    if ($$self.$$.dirty & /*$yearsRanges*/
    32) {
      $: $$invalidate(1, crrRange = $yearsRanges.ranges[$yearsRanges.crrRangeIndex].split("-"));
    }
  };
  return [
    showingCurrentRange,
    crrRange,
    decrementdisplayedYearRange,
    incrementdisplayedDate,
    resetdisplayedDate,
    $yearsRanges,
    $displayedDateStore
  ];
}
var YearsNav = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance23, create_fragment24, safe_not_equal, {}, add_css19);
  }
};
var YearsNav_default = YearsNav;

// src/ui/components/Calendar.svelte
function add_css20(target) {
  append_styles(target, "svelte-6uzwag", `.svelte-6uzwag,.svelte-6uzwag::before,.svelte-6uzwag::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-6uzwag::before,.svelte-6uzwag::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}table.svelte-6uzwag{text-indent:0;border-color:inherit;border-collapse:collapse}.svelte-6uzwag:-moz-focusring{outline:auto}.svelte-6uzwag:-moz-ui-invalid{box-shadow:none}.svelte-6uzwag::-webkit-inner-spin-button,.svelte-6uzwag::-webkit-outer-spin-button{height:auto}.svelte-6uzwag::-webkit-search-decoration{-webkit-appearance:none}.svelte-6uzwag::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-6uzwag:disabled{cursor:default}.svelte-6uzwag,.svelte-6uzwag::before,.svelte-6uzwag::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-6uzwag::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.container.svelte-6uzwag{width:100%}@media(min-width: 640px){.container.svelte-6uzwag{max-width:640px}}@media(min-width: 768px){.container.svelte-6uzwag{max-width:768px}}@media(min-width: 1024px){.container.svelte-6uzwag{max-width:1024px}}@media(min-width: 1280px){.container.svelte-6uzwag{max-width:1280px}}@media(min-width: 1536px){.container.svelte-6uzwag{max-width:1536px}}.px-4.svelte-6uzwag{padding-left:1rem;padding-right:1rem}.\\!pt-2.svelte-6uzwag{padding-top:0.5rem !important}.container.svelte-6uzwag{--color-background-heading:transparent;--color-background-day:transparent;--color-background-weeknum:transparent;--color-background-weekend:transparent;--color-dot:var(--text-muted);--color-arrow:var(--text-muted);--color-button:var(--text-muted);--color-text-title:var(--text-normal);--color-text-heading:var(--text-muted);--color-text-day:var(--text-normal);--color-text-today:var(--interactive-accent);--color-text-weeknum:var(--text-muted)}.weekend.svelte-6uzwag{background-color:var(--color-background-weekend)}.calendar.svelte-6uzwag{border-collapse:collapse;width:100%;min-width:100%}th.svelte-6uzwag{background-color:var(--color-background-heading);color:var(--color-text-heading);font-size:0.6em;letter-spacing:1px;padding:4px;text-align:center;text-transform:uppercase}`);
}
function get_each_context4(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[10] = list[i];
  return child_ctx;
}
function get_each_context_1(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[13] = list[i];
  return child_ctx;
}
function get_each_context_2(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[16] = list[i];
  child_ctx[18] = i;
  return child_ctx;
}
function get_each_context_3(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[19] = list[i];
  return child_ctx;
}
function get_each_context_4(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[22] = list[i];
  return child_ctx;
}
function get_each_context_5(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[25] = list[i];
  return child_ctx;
}
function get_each_context_6(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[28] = list[i];
  return child_ctx;
}
function get_each_context_7(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[31] = list[i];
  return child_ctx;
}
function create_if_block_3(ctx) {
  let monthnav;
  let t0;
  let table;
  let colgroup;
  let t1;
  let t2;
  let thead;
  let tr;
  let t3;
  let t4;
  let tbody;
  let each_blocks = [];
  let each2_lookup = /* @__PURE__ */ new Map();
  let current;
  monthnav = new MonthNav_default({});
  let if_block0 = (
    /*showWeekNums*/
    ctx[4] && create_if_block_6(ctx)
  );
  let each_value_7 = ensure_array_like(
    /*month*/
    ctx[1][1].days
  );
  let each_blocks_2 = [];
  for (let i = 0; i < each_value_7.length; i += 1) {
    each_blocks_2[i] = create_each_block_7(get_each_context_7(ctx, each_value_7, i));
  }
  let if_block1 = (
    /*showWeekNums*/
    ctx[4] && create_if_block_5(ctx)
  );
  let each_value_6 = ensure_array_like(
    /*weekdaysShort*/
    ctx[2]
  );
  let each_blocks_1 = [];
  for (let i = 0; i < each_value_6.length; i += 1) {
    each_blocks_1[i] = create_each_block_6(get_each_context_6(ctx, each_value_6, i));
  }
  let each_value_4 = ensure_array_like(
    /*month*/
    ctx[1]
  );
  const get_key = (ctx2) => (
    /*week*/
    ctx2[22].weekNum
  );
  for (let i = 0; i < each_value_4.length; i += 1) {
    let child_ctx = get_each_context_4(ctx, each_value_4, i);
    let key = get_key(child_ctx);
    each2_lookup.set(key, each_blocks[i] = create_each_block_4(key, child_ctx));
  }
  return {
    c() {
      create_component(monthnav.$$.fragment);
      t0 = space();
      table = element("table");
      colgroup = element("colgroup");
      if (if_block0) if_block0.c();
      t1 = space();
      for (let i = 0; i < each_blocks_2.length; i += 1) {
        each_blocks_2[i].c();
      }
      t2 = space();
      thead = element("thead");
      tr = element("tr");
      if (if_block1) if_block1.c();
      t3 = space();
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].c();
      }
      t4 = space();
      tbody = element("tbody");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr(colgroup, "class", "svelte-6uzwag");
      attr(tr, "class", "svelte-6uzwag");
      attr(thead, "class", "svelte-6uzwag");
      attr(tbody, "class", "svelte-6uzwag");
      attr(table, "class", "calendar svelte-6uzwag");
      attr(table, "id", "calendar");
    },
    m(target, anchor) {
      mount_component(monthnav, target, anchor);
      insert(target, t0, anchor);
      insert(target, table, anchor);
      append(table, colgroup);
      if (if_block0) if_block0.m(colgroup, null);
      append(colgroup, t1);
      for (let i = 0; i < each_blocks_2.length; i += 1) {
        if (each_blocks_2[i]) {
          each_blocks_2[i].m(colgroup, null);
        }
      }
      append(table, t2);
      append(table, thead);
      append(thead, tr);
      if (if_block1) if_block1.m(tr, null);
      append(tr, t3);
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        if (each_blocks_1[i]) {
          each_blocks_1[i].m(tr, null);
        }
      }
      append(table, t4);
      append(table, tbody);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(tbody, null);
        }
      }
      current = true;
    },
    p(ctx2, dirty) {
      if (
        /*showWeekNums*/
        ctx2[4]
      ) {
        if (if_block0) {
        } else {
          if_block0 = create_if_block_6(ctx2);
          if_block0.c();
          if_block0.m(colgroup, t1);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (dirty[0] & /*month*/
      2) {
        each_value_7 = ensure_array_like(
          /*month*/
          ctx2[1][1].days
        );
        let i;
        for (i = 0; i < each_value_7.length; i += 1) {
          const child_ctx = get_each_context_7(ctx2, each_value_7, i);
          if (each_blocks_2[i]) {
            each_blocks_2[i].p(child_ctx, dirty);
          } else {
            each_blocks_2[i] = create_each_block_7(child_ctx);
            each_blocks_2[i].c();
            each_blocks_2[i].m(colgroup, null);
          }
        }
        for (; i < each_blocks_2.length; i += 1) {
          each_blocks_2[i].d(1);
        }
        each_blocks_2.length = each_value_7.length;
      }
      if (
        /*showWeekNums*/
        ctx2[4]
      ) {
        if (if_block1) {
        } else {
          if_block1 = create_if_block_5(ctx2);
          if_block1.c();
          if_block1.m(tr, t3);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
      if (dirty[0] & /*weekdaysShort*/
      4) {
        each_value_6 = ensure_array_like(
          /*weekdaysShort*/
          ctx2[2]
        );
        let i;
        for (i = 0; i < each_value_6.length; i += 1) {
          const child_ctx = get_each_context_6(ctx2, each_value_6, i);
          if (each_blocks_1[i]) {
            each_blocks_1[i].p(child_ctx, dirty);
          } else {
            each_blocks_1[i] = create_each_block_6(child_ctx);
            each_blocks_1[i].c();
            each_blocks_1[i].m(tr, null);
          }
        }
        for (; i < each_blocks_1.length; i += 1) {
          each_blocks_1[i].d(1);
        }
        each_blocks_1.length = each_value_6.length;
      }
      if (dirty[0] & /*month, showWeekNums*/
      18) {
        each_value_4 = ensure_array_like(
          /*month*/
          ctx2[1]
        );
        group_outros();
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value_4, each2_lookup, tbody, outro_and_destroy_block, create_each_block_4, null, get_each_context_4);
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      transition_in(monthnav.$$.fragment, local);
      for (let i = 0; i < each_value_4.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o(local) {
      transition_out(monthnav.$$.fragment, local);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(t0);
        detach(table);
      }
      destroy_component(monthnav, detaching);
      if (if_block0) if_block0.d();
      destroy_each(each_blocks_2, detaching);
      if (if_block1) if_block1.d();
      destroy_each(each_blocks_1, detaching);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
    }
  };
}
function create_if_block_6(ctx) {
  let col;
  return {
    c() {
      col = element("col");
      attr(col, "class", "svelte-6uzwag");
    },
    m(target, anchor) {
      insert(target, col, anchor);
    },
    d(detaching) {
      if (detaching) {
        detach(col);
      }
    }
  };
}
function create_each_block_7(ctx) {
  let col;
  return {
    c() {
      col = element("col");
      attr(col, "class", "svelte-6uzwag");
      toggle_class(col, "weekend", isWeekend(
        /*date*/
        ctx[31]
      ));
    },
    m(target, anchor) {
      insert(target, col, anchor);
    },
    p(ctx2, dirty) {
      if (dirty[0] & /*month*/
      2) {
        toggle_class(col, "weekend", isWeekend(
          /*date*/
          ctx2[31]
        ));
      }
    },
    d(detaching) {
      if (detaching) {
        detach(col);
      }
    }
  };
}
function create_if_block_5(ctx) {
  let th;
  return {
    c() {
      th = element("th");
      th.textContent = "W";
      attr(th, "class", "svelte-6uzwag");
    },
    m(target, anchor) {
      insert(target, th, anchor);
    },
    d(detaching) {
      if (detaching) {
        detach(th);
      }
    }
  };
}
function create_each_block_6(ctx) {
  let th;
  let t_value = (
    /*dayOfWeek*/
    ctx[28] + ""
  );
  let t;
  return {
    c() {
      th = element("th");
      t = text(t_value);
      attr(th, "class", "svelte-6uzwag");
    },
    m(target, anchor) {
      insert(target, th, anchor);
      append(th, t);
    },
    p(ctx2, dirty) {
      if (dirty[0] & /*weekdaysShort*/
      4 && t_value !== (t_value = /*dayOfWeek*/
      ctx2[28] + "")) set_data(t, t_value);
    },
    d(detaching) {
      if (detaching) {
        detach(th);
      }
    }
  };
}
function create_if_block_4(ctx) {
  let weeknum;
  let current;
  weeknum = new WeekNum_default({
    props: {
      weekNum: (
        /*week*/
        ctx[22].weekNum
      ),
      startOfWeekDate: getStartOfWeek(
        /*week*/
        ctx[22].days
      )
    }
  });
  return {
    c() {
      create_component(weeknum.$$.fragment);
    },
    m(target, anchor) {
      mount_component(weeknum, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const weeknum_changes = {};
      if (dirty[0] & /*month*/
      2) weeknum_changes.weekNum = /*week*/
      ctx2[22].weekNum;
      if (dirty[0] & /*month*/
      2) weeknum_changes.startOfWeekDate = getStartOfWeek(
        /*week*/
        ctx2[22].days
      );
      weeknum.$set(weeknum_changes);
    },
    i(local) {
      if (current) return;
      transition_in(weeknum.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(weeknum.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(weeknum, detaching);
    }
  };
}
function create_each_block_5(key_1, ctx) {
  let first;
  let day_1;
  let current;
  day_1 = new Day_default({ props: { date: (
    /*day*/
    ctx[25]
  ) } });
  return {
    key: key_1,
    first: null,
    c() {
      first = empty();
      create_component(day_1.$$.fragment);
      this.first = first;
    },
    m(target, anchor) {
      insert(target, first, anchor);
      mount_component(day_1, target, anchor);
      current = true;
    },
    p(new_ctx, dirty) {
      ctx = new_ctx;
      const day_1_changes = {};
      if (dirty[0] & /*month*/
      2) day_1_changes.date = /*day*/
      ctx[25];
      day_1.$set(day_1_changes);
    },
    i(local) {
      if (current) return;
      transition_in(day_1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(day_1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(first);
      }
      destroy_component(day_1, detaching);
    }
  };
}
function create_each_block_4(key_1, ctx) {
  let tr;
  let t0;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let t1;
  let current;
  let if_block = (
    /*showWeekNums*/
    ctx[4] && create_if_block_4(ctx)
  );
  let each_value_5 = ensure_array_like(
    /*week*/
    ctx[22].days
  );
  const get_key = (ctx2) => (
    /*day*/
    ctx2[25].format()
  );
  for (let i = 0; i < each_value_5.length; i += 1) {
    let child_ctx = get_each_context_5(ctx, each_value_5, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block_5(key, child_ctx));
  }
  return {
    key: key_1,
    first: null,
    c() {
      tr = element("tr");
      if (if_block) if_block.c();
      t0 = space();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t1 = space();
      attr(tr, "class", "svelte-6uzwag");
      this.first = tr;
    },
    m(target, anchor) {
      insert(target, tr, anchor);
      if (if_block) if_block.m(tr, null);
      append(tr, t0);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(tr, null);
        }
      }
      append(tr, t1);
      current = true;
    },
    p(new_ctx, dirty) {
      ctx = new_ctx;
      if (
        /*showWeekNums*/
        ctx[4]
      ) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty[0] & /*showWeekNums*/
          16) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block_4(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(tr, t0);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
      if (dirty[0] & /*month*/
      2) {
        each_value_5 = ensure_array_like(
          /*week*/
          ctx[22].days
        );
        group_outros();
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value_5, each_1_lookup, tr, outro_and_destroy_block, create_each_block_5, t1, get_each_context_5);
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      transition_in(if_block);
      for (let i = 0; i < each_value_5.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o(local) {
      transition_out(if_block);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(tr);
      }
      if (if_block) if_block.d();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
    }
  };
}
function create_if_block_12(ctx) {
  let yearnav;
  let t;
  let table;
  let tbody;
  let current;
  yearnav = new YearNav_default({});
  let each_value_2 = ensure_array_like(monthsIndexesInQuarters);
  let each_blocks = [];
  for (let i = 0; i < each_value_2.length; i += 1) {
    each_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
  }
  const out = (i) => transition_out(each_blocks[i], 1, 1, () => {
    each_blocks[i] = null;
  });
  return {
    c() {
      create_component(yearnav.$$.fragment);
      t = space();
      table = element("table");
      tbody = element("tbody");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr(tbody, "class", "svelte-6uzwag");
      attr(table, "class", "calendar svelte-6uzwag");
      attr(table, "id", "calendar");
    },
    m(target, anchor) {
      mount_component(yearnav, target, anchor);
      insert(target, t, anchor);
      insert(target, table, anchor);
      append(table, tbody);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(tbody, null);
        }
      }
      current = true;
    },
    p(ctx2, dirty) {
      if (dirty[0] & /*showQuarterNums*/
      8) {
        each_value_2 = ensure_array_like(monthsIndexesInQuarters);
        let i;
        for (i = 0; i < each_value_2.length; i += 1) {
          const child_ctx = get_each_context_2(ctx2, each_value_2, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
            transition_in(each_blocks[i], 1);
          } else {
            each_blocks[i] = create_each_block_2(child_ctx);
            each_blocks[i].c();
            transition_in(each_blocks[i], 1);
            each_blocks[i].m(tbody, null);
          }
        }
        group_outros();
        for (i = each_value_2.length; i < each_blocks.length; i += 1) {
          out(i);
        }
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      transition_in(yearnav.$$.fragment, local);
      for (let i = 0; i < each_value_2.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o(local) {
      transition_out(yearnav.$$.fragment, local);
      each_blocks = each_blocks.filter(Boolean);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(t);
        detach(table);
      }
      destroy_component(yearnav, detaching);
      destroy_each(each_blocks, detaching);
    }
  };
}
function create_if_block_2(ctx) {
  let quarternum;
  let current;
  quarternum = new QuarterNum_default({ props: { quarterNum: (
    /*i*/
    ctx[18] + 1
  ) } });
  return {
    c() {
      create_component(quarternum.$$.fragment);
    },
    m(target, anchor) {
      mount_component(quarternum, target, anchor);
      current = true;
    },
    i(local) {
      if (current) return;
      transition_in(quarternum.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(quarternum.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(quarternum, detaching);
    }
  };
}
function create_each_block_3(ctx) {
  let month_1;
  let current;
  month_1 = new Month_default({
    props: { monthIndex: (
      /*monthIndex*/
      ctx[19]
    ) }
  });
  return {
    c() {
      create_component(month_1.$$.fragment);
    },
    m(target, anchor) {
      mount_component(month_1, target, anchor);
      current = true;
    },
    p: noop,
    i(local) {
      if (current) return;
      transition_in(month_1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(month_1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(month_1, detaching);
    }
  };
}
function create_each_block_2(ctx) {
  let tr;
  let t0;
  let t1;
  let current;
  let if_block = (
    /*showQuarterNums*/
    ctx[3] && create_if_block_2(ctx)
  );
  let each_value_3 = ensure_array_like(
    /*quarterMonthsIndexes*/
    ctx[16]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value_3.length; i += 1) {
    each_blocks[i] = create_each_block_3(get_each_context_3(ctx, each_value_3, i));
  }
  return {
    c() {
      tr = element("tr");
      if (if_block) if_block.c();
      t0 = space();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t1 = space();
      attr(tr, "class", "svelte-6uzwag");
    },
    m(target, anchor) {
      insert(target, tr, anchor);
      if (if_block) if_block.m(tr, null);
      append(tr, t0);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(tr, null);
        }
      }
      append(tr, t1);
      current = true;
    },
    p(ctx2, dirty) {
      if (
        /*showQuarterNums*/
        ctx2[3]
      ) {
        if (if_block) {
          if (dirty[0] & /*showQuarterNums*/
          8) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block_2(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(tr, t0);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      transition_in(if_block);
      for (let i = 0; i < each_value_3.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o(local) {
      transition_out(if_block);
      each_blocks = each_blocks.filter(Boolean);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(tr);
      }
      if (if_block) if_block.d();
      destroy_each(each_blocks, detaching);
    }
  };
}
function create_if_block5(ctx) {
  let yearsnav;
  let t;
  let table;
  let tbody;
  let current;
  yearsnav = new YearsNav_default({});
  let each_value = ensure_array_like(getYears({
    startRangeYear: +/*$yearsRanges*/
    ctx[5].ranges[
      /*$yearsRanges*/
      ctx[5].crrRangeIndex
    ].split("-")[0]
  }));
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block4(get_each_context4(ctx, each_value, i));
  }
  const out = (i) => transition_out(each_blocks[i], 1, 1, () => {
    each_blocks[i] = null;
  });
  return {
    c() {
      create_component(yearsnav.$$.fragment);
      t = space();
      table = element("table");
      tbody = element("tbody");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr(tbody, "class", "svelte-6uzwag");
      attr(table, "class", "calendar svelte-6uzwag");
      attr(table, "id", "calendar");
    },
    m(target, anchor) {
      mount_component(yearsnav, target, anchor);
      insert(target, t, anchor);
      insert(target, table, anchor);
      append(table, tbody);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(tbody, null);
        }
      }
      current = true;
    },
    p(ctx2, dirty) {
      if (dirty[0] & /*$yearsRanges*/
      32) {
        each_value = ensure_array_like(getYears({
          startRangeYear: +/*$yearsRanges*/
          ctx2[5].ranges[
            /*$yearsRanges*/
            ctx2[5].crrRangeIndex
          ].split("-")[0]
        }));
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context4(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
            transition_in(each_blocks[i], 1);
          } else {
            each_blocks[i] = create_each_block4(child_ctx);
            each_blocks[i].c();
            transition_in(each_blocks[i], 1);
            each_blocks[i].m(tbody, null);
          }
        }
        group_outros();
        for (i = each_value.length; i < each_blocks.length; i += 1) {
          out(i);
        }
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      transition_in(yearsnav.$$.fragment, local);
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o(local) {
      transition_out(yearsnav.$$.fragment, local);
      each_blocks = each_blocks.filter(Boolean);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(t);
        detach(table);
      }
      destroy_component(yearsnav, detaching);
      destroy_each(each_blocks, detaching);
    }
  };
}
function create_each_block_1(ctx) {
  let year_1;
  let current;
  year_1 = new Year_default({ props: { year: (
    /*year*/
    ctx[13]
  ) } });
  return {
    c() {
      create_component(year_1.$$.fragment);
    },
    m(target, anchor) {
      mount_component(year_1, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const year_1_changes = {};
      if (dirty[0] & /*$yearsRanges*/
      32) year_1_changes.year = /*year*/
      ctx2[13];
      year_1.$set(year_1_changes);
    },
    i(local) {
      if (current) return;
      transition_in(year_1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(year_1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(year_1, detaching);
    }
  };
}
function create_each_block4(ctx) {
  let tr;
  let t;
  let current;
  let each_value_1 = ensure_array_like(
    /*rowYearsRange*/
    ctx[10]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
  }
  const out = (i) => transition_out(each_blocks[i], 1, 1, () => {
    each_blocks[i] = null;
  });
  return {
    c() {
      tr = element("tr");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t = space();
      attr(tr, "class", "svelte-6uzwag");
    },
    m(target, anchor) {
      insert(target, tr, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(tr, null);
        }
      }
      append(tr, t);
      current = true;
    },
    p(ctx2, dirty) {
      if (dirty[0] & /*$yearsRanges*/
      32) {
        each_value_1 = ensure_array_like(
          /*rowYearsRange*/
          ctx2[10]
        );
        let i;
        for (i = 0; i < each_value_1.length; i += 1) {
          const child_ctx = get_each_context_1(ctx2, each_value_1, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
            transition_in(each_blocks[i], 1);
          } else {
            each_blocks[i] = create_each_block_1(child_ctx);
            each_blocks[i].c();
            transition_in(each_blocks[i], 1);
            each_blocks[i].m(tr, t);
          }
        }
        group_outros();
        for (i = each_value_1.length; i < each_blocks.length; i += 1) {
          out(i);
        }
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      for (let i = 0; i < each_value_1.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o(local) {
      each_blocks = each_blocks.filter(Boolean);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(tr);
      }
      destroy_each(each_blocks, detaching);
    }
  };
}
function create_fragment25(ctx) {
  let div;
  let tabs;
  let updating_selectedTab;
  let t0;
  let t1;
  let t2;
  let current;
  function tabs_selectedTab_binding(value) {
    ctx[9](value);
  }
  let tabs_props = {
    tabs: [...togglePeriods],
    id: "periods-container",
    tabId: "period"
  };
  if (
    /*crrView*/
    ctx[0] !== void 0
  ) {
    tabs_props.selectedTab = /*crrView*/
    ctx[0];
  }
  tabs = new Tabs_default({ props: tabs_props });
  binding_callbacks.push(() => bind(tabs, "selectedTab", tabs_selectedTab_binding));
  let if_block0 = (
    /*crrView*/
    ctx[0] === "days" && create_if_block_3(ctx)
  );
  let if_block1 = (
    /*crrView*/
    ctx[0] === "months" && create_if_block_12(ctx)
  );
  let if_block2 = (
    /*crrView*/
    ctx[0] === "years" && create_if_block5(ctx)
  );
  return {
    c() {
      div = element("div");
      create_component(tabs.$$.fragment);
      t0 = space();
      if (if_block0) if_block0.c();
      t1 = space();
      if (if_block1) if_block1.c();
      t2 = space();
      if (if_block2) if_block2.c();
      attr(div, "class", "container px-4 !pt-2 svelte-6uzwag");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      mount_component(tabs, div, null);
      append(div, t0);
      if (if_block0) if_block0.m(div, null);
      append(div, t1);
      if (if_block1) if_block1.m(div, null);
      append(div, t2);
      if (if_block2) if_block2.m(div, null);
      current = true;
    },
    p(ctx2, dirty) {
      const tabs_changes = {};
      if (!updating_selectedTab && dirty[0] & /*crrView*/
      1) {
        updating_selectedTab = true;
        tabs_changes.selectedTab = /*crrView*/
        ctx2[0];
        add_flush_callback(() => updating_selectedTab = false);
      }
      tabs.$set(tabs_changes);
      if (
        /*crrView*/
        ctx2[0] === "days"
      ) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
          if (dirty[0] & /*crrView*/
          1) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_3(ctx2);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(div, t1);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, () => {
          if_block0 = null;
        });
        check_outros();
      }
      if (
        /*crrView*/
        ctx2[0] === "months"
      ) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
          if (dirty[0] & /*crrView*/
          1) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block_12(ctx2);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(div, t2);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, () => {
          if_block1 = null;
        });
        check_outros();
      }
      if (
        /*crrView*/
        ctx2[0] === "years"
      ) {
        if (if_block2) {
          if_block2.p(ctx2, dirty);
          if (dirty[0] & /*crrView*/
          1) {
            transition_in(if_block2, 1);
          }
        } else {
          if_block2 = create_if_block5(ctx2);
          if_block2.c();
          transition_in(if_block2, 1);
          if_block2.m(div, null);
        }
      } else if (if_block2) {
        group_outros();
        transition_out(if_block2, 1, 1, () => {
          if_block2 = null;
        });
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      transition_in(tabs.$$.fragment, local);
      transition_in(if_block0);
      transition_in(if_block1);
      transition_in(if_block2);
      current = true;
    },
    o(local) {
      transition_out(tabs.$$.fragment, local);
      transition_out(if_block0);
      transition_out(if_block1);
      transition_out(if_block2);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div);
      }
      destroy_component(tabs);
      if (if_block0) if_block0.d();
      if (if_block1) if_block1.d();
      if (if_block2) if_block2.d();
    }
  };
}
function instance24($$self, $$props, $$invalidate) {
  let showWeekNums;
  let showQuarterNums;
  let weekdaysShort;
  let month;
  let $displayedDateStore;
  let $localeDataStore;
  let $settingsStore;
  let $yearsRanges;
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(6, $displayedDateStore = $$value));
  component_subscribe($$self, localeDataStore, ($$value) => $$invalidate(7, $localeDataStore = $$value));
  component_subscribe($$self, settingsStore, ($$value) => $$invalidate(8, $settingsStore = $$value));
  component_subscribe($$self, yearsRanges, ($$value) => $$invalidate(5, $yearsRanges = $$value));
  let crrView = "days";
  function tabs_selectedTab_binding(value) {
    crrView = value;
    $$invalidate(0, crrView);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty[0] & /*$settingsStore*/
    256) {
      $: $$invalidate(4, { localeSettings: { showWeekNums, showQuarterNums } } = $settingsStore, showWeekNums, ($$invalidate(3, showQuarterNums), $$invalidate(8, $settingsStore)));
    }
    if ($$self.$$.dirty[0] & /*$localeDataStore*/
    128) {
      $: $$invalidate(2, { weekdaysShort } = $localeDataStore, weekdaysShort);
    }
    if ($$self.$$.dirty[0] & /*$displayedDateStore*/
    64) {
      $: $$invalidate(1, month = getMonth($displayedDateStore));
    }
  };
  return [
    crrView,
    month,
    weekdaysShort,
    showQuarterNums,
    showWeekNums,
    $yearsRanges,
    $displayedDateStore,
    $localeDataStore,
    $settingsStore,
    tabs_selectedTab_binding
  ];
}
var Calendar = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance24, create_fragment25, safe_not_equal, {}, add_css20, [-1, -1]);
  }
};
var Calendar_default = Calendar;

// src/View.svelte
function add_css21(target) {
  append_styles(target, "svelte-1rqmhwe", `.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe,.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::before,.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::before,.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::after{--tw-content:''}:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:-moz-focusring{outline:auto}.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:-moz-ui-invalid{box-shadow:none}.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::-webkit-inner-spin-button,.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::-webkit-outer-spin-button{height:auto}.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::-webkit-search-decoration{-webkit-appearance:none}.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:disabled{cursor:default}.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe,.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::before,.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x:  ;--tw-pan-y:  ;--tw-pinch-zoom:  ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position:  ;--tw-gradient-via-position:  ;--tw-gradient-to-position:  ;--tw-ordinal:  ;--tw-slashed-zero:  ;--tw-numeric-figure:  ;--tw-numeric-spacing:  ;--tw-numeric-fraction:  ;--tw-ring-inset:  ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur:  ;--tw-brightness:  ;--tw-contrast:  ;--tw-grayscale:  ;--tw-hue-rotate:  ;--tw-invert:  ;--tw-saturate:  ;--tw-sepia:  ;--tw-drop-shadow:  ;--tw-backdrop-blur:  ;--tw-backdrop-brightness:  ;--tw-backdrop-contrast:  ;--tw-backdrop-grayscale:  ;--tw-backdrop-hue-rotate:  ;--tw-backdrop-invert:  ;--tw-backdrop-opacity:  ;--tw-backdrop-saturate:  ;--tw-backdrop-sepia:  ;--tw-contain-size:  ;--tw-contain-layout:  ;--tw-contain-paint:  ;--tw-contain-style:  }.container.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{width:100%}@media(min-width: 640px){.container.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{max-width:640px}}@media(min-width: 768px){.container.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{max-width:768px}}@media(min-width: 1024px){.container.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{max-width:1024px}}@media(min-width: 1280px){.container.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{max-width:1280px}}@media(min-width: 1536px){.container.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{max-width:1536px}}.pointer-events-none.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{pointer-events:none}.visible.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{visibility:visible}.invisible.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{visibility:hidden}.collapse.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{visibility:collapse}.static.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{position:static}.absolute.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{position:absolute}.relative.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{position:relative}.sticky.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{position:sticky}.bottom-1.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{bottom:0.25rem}.left-0.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{left:0px}.left-full.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{left:100%}.top-0.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{top:0px}.z-10.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{z-index:10}.z-20.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{z-index:20}.m-0.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin:0px}.mx-auto.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-left:auto;margin-right:auto}.-ml-1.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-left:-0.25rem}.mb-1\\.5.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-bottom:0.375rem}.mb-6.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-bottom:1.5rem}.ml-2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-left:0.5rem}.ml-4.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-left:1rem}.ml-\\[5px\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-left:5px}.mr-2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-right:0.5rem}.mt-1.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-top:0.25rem}.mt-2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-top:0.5rem}.mt-2\\.5.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-top:0.625rem}.mt-3.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-top:0.75rem}.mt-6.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-top:1.5rem}.mt-7.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{margin-top:1.75rem}.block.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{display:block}.flex.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{display:flex}.table.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{display:table}.contents.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{display:contents}.hidden.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{display:none}.\\!h-auto.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{height:auto !important}.h-2\\.5.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{height:0.625rem}.h-4.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{height:1rem}.h-\\[8px\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{height:8px}.h-auto.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{height:auto}.w-2\\.5.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{width:0.625rem}.w-4.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{width:1rem}.w-6.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{width:1.5rem}.w-8.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{width:2rem}.w-\\[8px\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{width:8px}.w-full.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{width:100%}.w-max.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{width:-moz-max-content;width:max-content}.max-w-xs.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{max-width:20rem}.flex-grow.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{flex-grow:1}.border-collapse.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-collapse:collapse}.-translate-x-1\\/2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\/2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-12.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-180.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-rotate:180deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-45.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-rotate:45deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-90.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-rotate:90deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-not-allowed.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{cursor:not-allowed}.cursor-pointer.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{cursor:pointer}.flex-col.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{flex-direction:column}.items-end.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{align-items:flex-end}.items-center.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{align-items:center}.justify-between.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{justify-content:space-between}.space-x-1.svelte-1rqmhwe>.svelte-1rqmhwe:not([hidden])~.svelte-1rqmhwe:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(0.25rem * var(--tw-space-x-reverse));margin-left:calc(0.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-1.svelte-1rqmhwe>.svelte-1rqmhwe:not([hidden])~.svelte-1rqmhwe:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0.25rem * var(--tw-space-y-reverse))}.rounded-2xl.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-radius:1rem}.rounded-\\[--radius-s\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-radius:var(--radius-s)}.rounded-\\[--tab-curve\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-radius:var(--tab-curve)}.rounded-sm.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-radius:0.125rem}.border.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-width:1px}.border-0.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-width:0px}.border-solid.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-style:solid}.border-\\[var\\(--background-modifier-border\\)\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{border-color:var(--background-modifier-border)}.bg-\\[--background-modifier-hover\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{background-color:var(--background-modifier-hover)}.bg-\\[--interactive-accent\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{background-color:var(--interactive-accent)}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{background-color:var(--background-primary-alt)}.bg-slate-500.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-bg-opacity:1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))}.bg-transparent.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{background-color:transparent}.p-1.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding:0.25rem}.p-2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding:0.5rem}.p-6.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding:1.5rem}.px-1.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding-left:0.25rem;padding-right:0.25rem}.px-2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding-left:0.5rem;padding-right:0.5rem}.px-4.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding-left:1rem;padding-right:1rem}.py-2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding-top:0.5rem;padding-bottom:0.5rem}.py-3.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding-top:0.75rem;padding-bottom:0.75rem}.\\!pt-2.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding-top:0.5rem !important}.pt-4.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{padding-top:1rem}.text-center.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{text-align:center}.text-7xl.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{font-size:4.5rem;line-height:1}.text-lg.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{font-size:1.125rem;line-height:1.75rem}.text-sm.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{font-size:0.875rem;line-height:1.25rem}.text-xs.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{font-size:0.75rem;line-height:1rem}.font-medium.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{font-weight:500}.font-semibold.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{font-weight:600}.uppercase.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{text-transform:uppercase}.capitalize.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{text-transform:capitalize}.italic.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{font-style:italic}.tabular-nums.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.text-\\[--color-arrow\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--color-arrow)}.text-\\[--color-text-title\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--color-text-title)}.text-\\[--color-text-today\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--color-text-today)}.text-\\[--icon-color\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--icon-color)}.text-\\[--interactive-accent\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--interactive-accent)}.text-\\[--text-muted\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--text-muted)}.text-\\[--text-normal\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--text-normal)}.text-\\[--text-on-accent\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--text-on-accent)}.text-\\[var\\(--text-muted\\)\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:var(--text-muted)}.text-transparent.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{color:transparent}.opacity-0.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{opacity:0}.opacity-100.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{opacity:1}.opacity-50.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{opacity:0.5}.opacity-60.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{opacity:0.6}.opacity-\\[--icon-opacity\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{opacity:var(--icon-opacity)}.shadow.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.blur.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.transition-colors.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.transition-transform.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-200.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{transition-duration:200ms}.ease-in.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe{transition-timing-function:cubic-bezier(0.4, 0, 1, 1)}.last\\:mb-0.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:last-child{margin-bottom:0px}.hover\\:cursor-pointer.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:hover{cursor:pointer}.hover\\:bg-\\[--background-modifier-hover\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:hover{background-color:var(--background-modifier-hover)}.hover\\:bg-\\[--interactive-accent-hover\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:hover{background-color:var(--interactive-accent-hover)}.hover\\:bg-\\[--interactive-hover\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:hover{background-color:var(--interactive-hover)}.hover\\:text-\\[--icon-color-hover\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:hover{color:var(--icon-color-hover)}.hover\\:opacity-\\[--icon-opacity-hover\\].svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:hover{opacity:var(--icon-opacity-hover)}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-1rqmhwe.svelte-1rqmhwe.svelte-1rqmhwe:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}`);
}
function create_if_block_13(ctx) {
  let div3;
  let div0;
  let div0_id_value;
  let t;
  let div2;
  let div1;
  let calendar;
  let div3_class_value;
  let current;
  calendar = new Calendar_default({});
  return {
    c() {
      div3 = element("div");
      div0 = element("div");
      t = space();
      div2 = element("div");
      div1 = element("div");
      create_component(calendar.$$.fragment);
      attr(div0, "id", div0_id_value = `${CALENDAR_POPOVER_ID}-arrow`);
      attr(div0, "class", "rotate-45 absolute w-2.5 h-2.5 bg-slate-500 svelte-1rqmhwe");
      attr(div1, "class", "bg-slate-500 rounded-sm svelte-1rqmhwe");
      attr(div2, "class", "ml-[5px] p-2 svelte-1rqmhwe");
      attr(div3, "class", div3_class_value = null_to_empty(clsx_default(
        /*popover*/
        ctx[0] && "bg-transparent z-10 w-max opacity-0 pointer-events-none absolute top-0 left-0"
      )) + " svelte-1rqmhwe");
      attr(
        div3,
        "data-popover",
        /*popover*/
        ctx[0]
      );
      attr(div3, "id", CALENDAR_POPOVER_ID);
    },
    m(target, anchor) {
      insert(target, div3, anchor);
      append(div3, div0);
      append(div3, t);
      append(div3, div2);
      append(div2, div1);
      mount_component(calendar, div1, null);
      current = true;
    },
    p(ctx2, dirty) {
      if (!current || dirty & /*popover*/
      1 && div3_class_value !== (div3_class_value = null_to_empty(clsx_default(
        /*popover*/
        ctx2[0] && "bg-transparent z-10 w-max opacity-0 pointer-events-none absolute top-0 left-0"
      )) + " svelte-1rqmhwe")) {
        attr(div3, "class", div3_class_value);
      }
      if (!current || dirty & /*popover*/
      1) {
        attr(
          div3,
          "data-popover",
          /*popover*/
          ctx2[0]
        );
      }
    },
    i(local) {
      if (current) return;
      transition_in(calendar.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(calendar.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(div3);
      }
      destroy_component(calendar);
    }
  };
}
function create_if_block6(ctx) {
  let calendar;
  let current;
  calendar = new Calendar_default({});
  return {
    c() {
      create_component(calendar.$$.fragment);
    },
    m(target, anchor) {
      mount_component(calendar, target, anchor);
      current = true;
    },
    i(local) {
      if (current) return;
      transition_in(calendar.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(calendar.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(calendar, detaching);
    }
  };
}
function create_fragment26(ctx) {
  let t;
  let if_block1_anchor;
  let current;
  let if_block0 = (
    /*popover*/
    ctx[0] && create_if_block_13(ctx)
  );
  let if_block1 = !/*popover*/
  ctx[0] && create_if_block6(ctx);
  return {
    c() {
      if (if_block0) if_block0.c();
      t = space();
      if (if_block1) if_block1.c();
      if_block1_anchor = empty();
    },
    m(target, anchor) {
      if (if_block0) if_block0.m(target, anchor);
      insert(target, t, anchor);
      if (if_block1) if_block1.m(target, anchor);
      insert(target, if_block1_anchor, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      if (
        /*popover*/
        ctx2[0]
      ) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
          if (dirty & /*popover*/
          1) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_13(ctx2);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(t.parentNode, t);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, () => {
          if_block0 = null;
        });
        check_outros();
      }
      if (!/*popover*/
      ctx2[0]) {
        if (if_block1) {
          if (dirty & /*popover*/
          1) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block6(ctx2);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, () => {
          if_block1 = null;
        });
        check_outros();
      }
    },
    i(local) {
      if (current) return;
      transition_in(if_block0);
      transition_in(if_block1);
      current = true;
    },
    o(local) {
      transition_out(if_block0);
      transition_out(if_block1);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(t);
        detach(if_block1_anchor);
      }
      if (if_block0) if_block0.d(detaching);
      if (if_block1) if_block1.d(detaching);
    }
  };
}
function rerenderCalendar() {
}
function instance25($$self, $$props, $$invalidate) {
  let $displayedDateStore;
  component_subscribe($$self, displayedDateStore, ($$value) => $$invalidate(3, $displayedDateStore = $$value));
  let { popover = false } = $$props;
  let today = window.moment();
  let heartbeat = setInterval(
    () => {
      today = window.moment();
      if (today.isSame($displayedDateStore.clone().add(1, "day"))) {
        console.log("\u2699\u2699\u2699 RERENDERING CALENdAR \u2699\u2699\u2699\uFE0F");
        displayedDateStore.set(today);
        rerenderCalendar();
      }
    },
    1e3 * 60
  );
  onDestroy(() => {
    clearInterval(heartbeat);
  });
  $$self.$$set = ($$props2) => {
    if ("popover" in $$props2) $$invalidate(0, popover = $$props2.popover);
  };
  return [popover, rerenderCalendar];
}
var View = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance25, create_fragment26, safe_not_equal, { popover: 0, rerenderCalendar: 1 }, add_css21);
  }
  get rerenderCalendar() {
    return rerenderCalendar;
  }
};
var View_default = View;

// src/settings/ui/tabs/calendar/Index.svelte
function create_control_slot_11(ctx) {
  let dropdown;
  let current;
  dropdown = new Dropdown_default({
    props: {
      slot: "control",
      options: [{ label: "Left", value: "left" }, { label: "Right", value: "right" }],
      onChange: (
        /*handleViewLeafPositionChange*/
        ctx[3]
      ),
      value: (
        /*$settingsStore*/
        ctx[0].viewLeafPosition
      )
    }
  });
  return {
    c() {
      create_component(dropdown.$$.fragment);
    },
    m(target, anchor) {
      mount_component(dropdown, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const dropdown_changes = {};
      if (dirty & /*$settingsStore*/
      1) dropdown_changes.value = /*$settingsStore*/
      ctx2[0].viewLeafPosition;
      dropdown.$set(dropdown_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dropdown.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dropdown.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(dropdown, detaching);
    }
  };
}
function create_control_slot_10(ctx) {
  let dropdown;
  let current;
  dropdown = new Dropdown_default({
    props: {
      slot: "control",
      options: [
        {
          label: "Dedicated Panel",
          value: "dedicated-panel"
        },
        {
          label: "Floating Window",
          value: "floating-window"
        }
      ],
      onChange: (
        /*handleViewModeChange*/
        ctx[4]
      ),
      value: (
        /*$settingsStore*/
        ctx[0].viewMode
      )
    }
  });
  return {
    c() {
      create_component(dropdown.$$.fragment);
    },
    m(target, anchor) {
      mount_component(dropdown, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const dropdown_changes = {};
      if (dirty & /*$settingsStore*/
      1) dropdown_changes.value = /*$settingsStore*/
      ctx2[0].viewMode;
      dropdown.$set(dropdown_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dropdown.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dropdown.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(dropdown, detaching);
    }
  };
}
function create_control_slot_9(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      onChange: (
        /*handleShowWeekNums*/
        ctx[5]
      ),
      isEnabled: (
        /*$settingsStore*/
        ctx[0].localeSettings.showWeekNums
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settingsStore*/
      1) toggle_changes.isEnabled = /*$settingsStore*/
      ctx2[0].localeSettings.showWeekNums;
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_control_slot_8(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      onChange: (
        /*handleShowQuarterNums*/
        ctx[6]
      ),
      isEnabled: (
        /*$settingsStore*/
        ctx[0].localeSettings.showQuarterNums
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settingsStore*/
      1) toggle_changes.isEnabled = /*$settingsStore*/
      ctx2[0].localeSettings.showQuarterNums;
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_if_block7(ctx) {
  let h3;
  let t1;
  let settingitem0;
  let t2;
  let settingitem1;
  let current;
  settingitem0 = new SettingItem_default({
    props: {
      name: "Sequential Dismissal (Click)",
      description: "Close floating windows one at a time when clicking outside",
      $$slots: { control: [create_control_slot_7] },
      $$scope: { ctx }
    }
  });
  settingitem1 = new SettingItem_default({
    props: {
      name: "Sequential Dismissal (Esc)",
      description: "Close floating windows one at a time when pressing Escape",
      $$slots: { control: [create_control_slot_6] },
      $$scope: { ctx }
    }
  });
  return {
    c() {
      h3 = element("h3");
      h3.textContent = "Popover Windows";
      t1 = space();
      create_component(settingitem0.$$.fragment);
      t2 = space();
      create_component(settingitem1.$$.fragment);
    },
    m(target, anchor) {
      insert(target, h3, anchor);
      insert(target, t1, anchor);
      mount_component(settingitem0, target, anchor);
      insert(target, t2, anchor);
      mount_component(settingitem1, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const settingitem0_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem0_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem0.$set(settingitem0_changes);
      const settingitem1_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem1_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem1.$set(settingitem1_changes);
    },
    i(local) {
      if (current) return;
      transition_in(settingitem0.$$.fragment, local);
      transition_in(settingitem1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(settingitem0.$$.fragment, local);
      transition_out(settingitem1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(h3);
        detach(t1);
        detach(t2);
      }
      destroy_component(settingitem0, detaching);
      destroy_component(settingitem1, detaching);
    }
  };
}
function create_control_slot_7(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      onChange: (
        /*handleSequentialDismissalOnClickOut*/
        ctx[10]
      ),
      isEnabled: (
        /*$settingsStore*/
        ctx[0].popoversClosing.closePopoversOneByOneOnClickOut
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settingsStore*/
      1) toggle_changes.isEnabled = /*$settingsStore*/
      ctx2[0].popoversClosing.closePopoversOneByOneOnClickOut;
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_control_slot_6(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      onChange: (
        /*handleSequentialDismissalOnEsc*/
        ctx[11]
      ),
      isEnabled: (
        /*$settingsStore*/
        ctx[0].popoversClosing.closePopoversOneByOneOnEscKeydown
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settingsStore*/
      1) toggle_changes.isEnabled = /*$settingsStore*/
      ctx2[0].popoversClosing.closePopoversOneByOneOnEscKeydown;
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_control_slot_5(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      onChange: (
        /*handleOpenPopoverOnRibbonHover*/
        ctx[7]
      ),
      isEnabled: (
        /*$settingsStore*/
        ctx[0].openPopoverOnRibbonHover
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settingsStore*/
      1) toggle_changes.isEnabled = /*$settingsStore*/
      ctx2[0].openPopoverOnRibbonHover;
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_control_slot_4(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      onChange: (
        /*handleShouldConfirmBeforeCreate*/
        ctx[8]
      ),
      isEnabled: (
        /*$settingsStore*/
        ctx[0].shouldConfirmBeforeCreate
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settingsStore*/
      1) toggle_changes.isEnabled = /*$settingsStore*/
      ctx2[0].shouldConfirmBeforeCreate;
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_control_slot_3(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      onChange: (
        /*handleConfirmAutoHoverPreview*/
        ctx[9]
      ),
      isEnabled: (
        /*$settingsStore*/
        ctx[0].autoHoverPreview
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settingsStore*/
      1) toggle_changes.isEnabled = /*$settingsStore*/
      ctx2[0].autoHoverPreview;
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_control_slot_2(ctx) {
  let dropdown;
  let current;
  dropdown = new Dropdown_default({
    props: {
      slot: "control",
      options: (
        /*getLanguageOptions*/
        ctx[13]()
      ),
      onChange: (
        /*handleSetLanguage*/
        ctx[12]
      ),
      value: (
        /*$settingsStore*/
        ctx[0].localeSettings.localeOverride
      )
    }
  });
  return {
    c() {
      create_component(dropdown.$$.fragment);
    },
    m(target, anchor) {
      mount_component(dropdown, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const dropdown_changes = {};
      if (dirty & /*$settingsStore*/
      1) dropdown_changes.value = /*$settingsStore*/
      ctx2[0].localeSettings.localeOverride;
      dropdown.$set(dropdown_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dropdown.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dropdown.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(dropdown, detaching);
    }
  };
}
function create_control_slot_1(ctx) {
  let dropdown;
  let current;
  dropdown = new Dropdown_default({
    props: {
      slot: "control",
      options: (
        /*weekdayOptions*/
        ctx[1]
      ),
      onChange: (
        /*handleFirstWeekdayChange*/
        ctx[14]
      ),
      value: (
        /*firstWeekday*/
        ctx[2]
      )
    }
  });
  return {
    c() {
      create_component(dropdown.$$.fragment);
    },
    m(target, anchor) {
      mount_component(dropdown, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const dropdown_changes = {};
      if (dirty & /*weekdayOptions*/
      2) dropdown_changes.options = /*weekdayOptions*/
      ctx2[1];
      if (dirty & /*firstWeekday*/
      4) dropdown_changes.value = /*firstWeekday*/
      ctx2[2];
      dropdown.$set(dropdown_changes);
    },
    i(local) {
      if (current) return;
      transition_in(dropdown.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(dropdown.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(dropdown, detaching);
    }
  };
}
function create_control_slot2(ctx) {
  let toggle;
  let current;
  toggle = new Toggle_default({
    props: {
      slot: "control",
      onChange: (
        /*handleAllowLocalesSwitchFromCommandPalette*/
        ctx[16]
      ),
      isEnabled: (
        /*$settingsStore*/
        ctx[0].allowLocalesSwitchFromCommandPalette
      )
    }
  });
  return {
    c() {
      create_component(toggle.$$.fragment);
    },
    m(target, anchor) {
      mount_component(toggle, target, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const toggle_changes = {};
      if (dirty & /*$settingsStore*/
      1) toggle_changes.isEnabled = /*$settingsStore*/
      ctx2[0].allowLocalesSwitchFromCommandPalette;
      toggle.$set(toggle_changes);
    },
    i(local) {
      if (current) return;
      transition_in(toggle.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(toggle, detaching);
    }
  };
}
function create_fragment27(ctx) {
  let h30;
  let t1;
  let settingitem0;
  let t2;
  let settingitem1;
  let t3;
  let settingitem2;
  let t4;
  let settingitem3;
  let t5;
  let t6;
  let h31;
  let t8;
  let settingitem4;
  let t9;
  let settingitem5;
  let t10;
  let settingitem6;
  let t11;
  let h32;
  let t13;
  let settingitem7;
  let t14;
  let settingitem8;
  let t15;
  let settingitem9;
  let current;
  settingitem0 = new SettingItem_default({
    props: {
      name: "Calendar Panel Location",
      description: "Choose where the calendar appears in your workspace (left or right sidebar)",
      type: "dropdown",
      $$slots: { control: [create_control_slot_11] },
      $$scope: { ctx }
    }
  });
  settingitem1 = new SettingItem_default({
    props: {
      name: "View Mode",
      description: "Show calendar in a dedicated workspace panel (recommended) or as a floating window",
      $$slots: { control: [create_control_slot_10] },
      $$scope: { ctx }
    }
  });
  settingitem2 = new SettingItem_default({
    props: {
      name: "Week Numbers",
      description: "Display week numbers alongside the calendar for easier temporal reference",
      $$slots: { control: [create_control_slot_9] },
      $$scope: { ctx }
    }
  });
  settingitem3 = new SettingItem_default({
    props: {
      name: "Fiscal Quarters",
      description: "Show quarter divisions for business and academic planning",
      $$slots: { control: [create_control_slot_8] },
      $$scope: { ctx }
    }
  });
  let if_block = (
    /*$settingsStore*/
    ctx[0].viewMode === "floating-window" && create_if_block7(ctx)
  );
  settingitem4 = new SettingItem_default({
    props: {
      name: "Quick Access",
      description: "Show calendar when hovering over the ribbon icon for faster navigation",
      $$slots: { control: [create_control_slot_5] },
      $$scope: { ctx }
    }
  });
  settingitem5 = new SettingItem_default({
    props: {
      name: "Creation Confirmation",
      description: "Prompt before creating new periodic notes to prevent accidental entries",
      $$slots: { control: [create_control_slot_4] },
      $$scope: { ctx }
    }
  });
  settingitem6 = new SettingItem_default({
    props: {
      name: "Hover Preview",
      description: "Instantly preview notes by hovering over dates (no modifier key needed)",
      $$slots: { control: [create_control_slot_3] },
      $$scope: { ctx }
    }
  });
  settingitem7 = new SettingItem_default({
    props: {
      name: "Calendar Language",
      description: "Set a specific language for the calendar interface",
      $$slots: { control: [create_control_slot_2] },
      $$scope: { ctx }
    }
  });
  settingitem8 = new SettingItem_default({
    props: {
      name: "Week Starts On",
      description: "Choose which day your week begins with",
      $$slots: { control: [create_control_slot_1] },
      $$scope: { ctx }
    }
  });
  settingitem9 = new SettingItem_default({
    props: {
      name: "Quick Language Switching",
      description: "Enable language switching through the command palette (requires restart)",
      $$slots: { control: [create_control_slot2] },
      $$scope: { ctx }
    }
  });
  return {
    c() {
      h30 = element("h3");
      h30.textContent = "Display";
      t1 = space();
      create_component(settingitem0.$$.fragment);
      t2 = space();
      create_component(settingitem1.$$.fragment);
      t3 = space();
      create_component(settingitem2.$$.fragment);
      t4 = space();
      create_component(settingitem3.$$.fragment);
      t5 = space();
      if (if_block) if_block.c();
      t6 = space();
      h31 = element("h3");
      h31.textContent = "Interaction Behavior";
      t8 = space();
      create_component(settingitem4.$$.fragment);
      t9 = space();
      create_component(settingitem5.$$.fragment);
      t10 = space();
      create_component(settingitem6.$$.fragment);
      t11 = space();
      h32 = element("h3");
      h32.textContent = "Localization";
      t13 = space();
      create_component(settingitem7.$$.fragment);
      t14 = space();
      create_component(settingitem8.$$.fragment);
      t15 = space();
      create_component(settingitem9.$$.fragment);
    },
    m(target, anchor) {
      insert(target, h30, anchor);
      insert(target, t1, anchor);
      mount_component(settingitem0, target, anchor);
      insert(target, t2, anchor);
      mount_component(settingitem1, target, anchor);
      insert(target, t3, anchor);
      mount_component(settingitem2, target, anchor);
      insert(target, t4, anchor);
      mount_component(settingitem3, target, anchor);
      insert(target, t5, anchor);
      if (if_block) if_block.m(target, anchor);
      insert(target, t6, anchor);
      insert(target, h31, anchor);
      insert(target, t8, anchor);
      mount_component(settingitem4, target, anchor);
      insert(target, t9, anchor);
      mount_component(settingitem5, target, anchor);
      insert(target, t10, anchor);
      mount_component(settingitem6, target, anchor);
      insert(target, t11, anchor);
      insert(target, h32, anchor);
      insert(target, t13, anchor);
      mount_component(settingitem7, target, anchor);
      insert(target, t14, anchor);
      mount_component(settingitem8, target, anchor);
      insert(target, t15, anchor);
      mount_component(settingitem9, target, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      const settingitem0_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem0_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem0.$set(settingitem0_changes);
      const settingitem1_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem1_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem1.$set(settingitem1_changes);
      const settingitem2_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem2_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem2.$set(settingitem2_changes);
      const settingitem3_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem3_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem3.$set(settingitem3_changes);
      if (
        /*$settingsStore*/
        ctx2[0].viewMode === "floating-window"
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
          if (dirty & /*$settingsStore*/
          1) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block7(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(t6.parentNode, t6);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
      const settingitem4_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem4_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem4.$set(settingitem4_changes);
      const settingitem5_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem5_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem5.$set(settingitem5_changes);
      const settingitem6_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem6_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem6.$set(settingitem6_changes);
      const settingitem7_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem7_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem7.$set(settingitem7_changes);
      const settingitem8_changes = {};
      if (dirty & /*$$scope, weekdayOptions, firstWeekday*/
      262150) {
        settingitem8_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem8.$set(settingitem8_changes);
      const settingitem9_changes = {};
      if (dirty & /*$$scope, $settingsStore*/
      262145) {
        settingitem9_changes.$$scope = { dirty, ctx: ctx2 };
      }
      settingitem9.$set(settingitem9_changes);
    },
    i(local) {
      if (current) return;
      transition_in(settingitem0.$$.fragment, local);
      transition_in(settingitem1.$$.fragment, local);
      transition_in(settingitem2.$$.fragment, local);
      transition_in(settingitem3.$$.fragment, local);
      transition_in(if_block);
      transition_in(settingitem4.$$.fragment, local);
      transition_in(settingitem5.$$.fragment, local);
      transition_in(settingitem6.$$.fragment, local);
      transition_in(settingitem7.$$.fragment, local);
      transition_in(settingitem8.$$.fragment, local);
      transition_in(settingitem9.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(settingitem0.$$.fragment, local);
      transition_out(settingitem1.$$.fragment, local);
      transition_out(settingitem2.$$.fragment, local);
      transition_out(settingitem3.$$.fragment, local);
      transition_out(if_block);
      transition_out(settingitem4.$$.fragment, local);
      transition_out(settingitem5.$$.fragment, local);
      transition_out(settingitem6.$$.fragment, local);
      transition_out(settingitem7.$$.fragment, local);
      transition_out(settingitem8.$$.fragment, local);
      transition_out(settingitem9.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(h30);
        detach(t1);
        detach(t2);
        detach(t3);
        detach(t4);
        detach(t5);
        detach(t6);
        detach(h31);
        detach(t8);
        detach(t9);
        detach(t10);
        detach(t11);
        detach(h32);
        detach(t13);
        detach(t14);
        detach(t15);
      }
      destroy_component(settingitem0, detaching);
      destroy_component(settingitem1, detaching);
      destroy_component(settingitem2, detaching);
      destroy_component(settingitem3, detaching);
      if (if_block) if_block.d(detaching);
      destroy_component(settingitem4, detaching);
      destroy_component(settingitem5, detaching);
      destroy_component(settingitem6, detaching);
      destroy_component(settingitem7, detaching);
      destroy_component(settingitem8, detaching);
      destroy_component(settingitem9, detaching);
    }
  };
}
function instance26($$self, $$props, $$invalidate) {
  let firstWeekday;
  let weekdayOptions;
  let $weekdayOptionsStore;
  let $settingsStore;
  component_subscribe($$self, settingsStore, ($$value) => $$invalidate(0, $settingsStore = $$value));
  const handleViewLeafPositionChange = async (position) => {
    window.app.workspace.detachLeavesOfType(VIEW_TYPE);
    await window.app.workspace[`get${capitalize(position)}Leaf`](false)?.setViewState({ type: VIEW_TYPE, active: false });
    settingsStore.update((settings) => ({ ...settings, viewLeafPosition: position }));
  };
  const handleViewModeChange = (viewMode) => {
    Popover.cleanup();
    if (viewMode === "floating-window") {
      Popover.create({
        id: CALENDAR_POPOVER_ID,
        view: { Component: View_default }
      });
    }
    settingsStore.update((settings) => ({ ...settings, viewMode }));
  };
  const handleShowWeekNums = (show) => {
    settingsStore.update((settings) => ({
      ...settings,
      localeSettings: {
        ...settings.localeSettings,
        showWeekNums: show
      }
    }));
  };
  const handleShowQuarterNums = (show) => {
    settingsStore.update((settings) => ({
      ...settings,
      localeSettings: {
        ...settings.localeSettings,
        showQuarterNums: show
      }
    }));
  };
  const handleOpenPopoverOnRibbonHover = (openPopoverOnRibbonHover) => {
    Popover.cleanup();
    settingsStore.update((settings) => ({ ...settings, openPopoverOnRibbonHover }));
    if (openPopoverOnRibbonHover) {
      Popover.create({
        id: CALENDAR_POPOVER_ID,
        view: { Component: View_default }
      });
    }
  };
  const handleShouldConfirmBeforeCreate = (shouldConfirmBeforeCreate) => {
    settingsStore.update((settings) => ({ ...settings, shouldConfirmBeforeCreate }));
  };
  const handleConfirmAutoHoverPreview = (autoHoverPreview) => {
    settingsStore.update((settings) => ({ ...settings, autoHoverPreview }));
  };
  const handleSequentialDismissalOnClickOut = (closePopoversOneByOneOnClickOut) => {
    settingsStore.update((settings) => ({
      ...settings,
      popoversClosing: {
        ...settings.popoversClosing,
        closePopoversOneByOneOnClickOut
      }
    }));
  };
  const handleSequentialDismissalOnEsc = (closePopoversOneByOneOnEscKeydown) => {
    settingsStore.update((settings) => ({
      ...settings,
      popoversClosing: {
        ...settings.popoversClosing,
        closePopoversOneByOneOnEscKeydown
      }
    }));
  };
  const handleSetLanguage = (localeKey) => {
    updateLocale(localeKey);
    updateWeekStart();
    updateWeekdays();
  };
  const getLanguageOptions = () => {
    let options = [
      {
        label: `Same as system - ${locales_default.get(sysLocaleKey) || sysLocaleKey}`,
        value: sysLocaleKey
      }
    ];
    window.moment.locales().forEach((momentLocale) => {
      options.push({
        label: locales_default.get(momentLocale) || momentLocale,
        value: momentLocale
      });
    });
    return options;
  };
  const handleFirstWeekdayChange = (weekday) => {
    const newWeekStartId = defaultWeekdays.indexOf(weekday);
    updateWeekStart(newWeekStartId);
    updateWeekdays();
  };
  const weekdayOptionsStore = derived(settingsStore, () => {
    let options = [
      {
        label: `Locale default - ${window.moment.localeData().weekdays()[window.moment.localeData().firstDayOfWeek()]}`,
        value: defaultWeekdays[window.moment.localeData().firstDayOfWeek()]
      }
    ];
    window.moment.localeData().weekdays().forEach((localizedDay, i) => {
      options.push({
        label: localizedDay,
        value: defaultWeekdays[i]
      });
    });
    return options;
  });
  component_subscribe($$self, weekdayOptionsStore, (value) => $$invalidate(17, $weekdayOptionsStore = value));
  const handleAllowLocalesSwitchFromCommandPalette = (allowLocalesSwitchFromCommandPalette) => {
    settingsStore.update((settings) => ({
      ...settings,
      allowLocalesSwitchFromCommandPalette
    }));
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$settingsStore*/
    1) {
      $: $$invalidate(2, firstWeekday = defaultWeekdays[$settingsStore.localeSettings.weekStartId]);
    }
    if ($$self.$$.dirty & /*$weekdayOptionsStore*/
    131072) {
      $: $$invalidate(1, weekdayOptions = $weekdayOptionsStore);
    }
  };
  return [
    $settingsStore,
    weekdayOptions,
    firstWeekday,
    handleViewLeafPositionChange,
    handleViewModeChange,
    handleShowWeekNums,
    handleShowQuarterNums,
    handleOpenPopoverOnRibbonHover,
    handleShouldConfirmBeforeCreate,
    handleConfirmAutoHoverPreview,
    handleSequentialDismissalOnClickOut,
    handleSequentialDismissalOnEsc,
    handleSetLanguage,
    getLanguageOptions,
    handleFirstWeekdayChange,
    weekdayOptionsStore,
    handleAllowLocalesSwitchFromCommandPalette,
    $weekdayOptionsStore
  ];
}
var Index2 = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance26, create_fragment27, safe_not_equal, {});
  }
};
var Index_default2 = Index2;

// src/settings/ui/Index.svelte
function add_css22(target) {
  append_styles(target, "svelte-1fitz50", ".mt-6.svelte-1fitz50{margin-top:1.5rem\n}.vertical-tab-content{scrollbar-gutter:stable;padding-right:calc(1rem + 16px)}");
}
function create_if_block_14(ctx) {
  let notes;
  let current;
  notes = new Index_default({});
  return {
    c() {
      create_component(notes.$$.fragment);
    },
    m(target, anchor) {
      mount_component(notes, target, anchor);
      current = true;
    },
    i(local) {
      if (current) return;
      transition_in(notes.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(notes.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(notes, detaching);
    }
  };
}
function create_if_block8(ctx) {
  let calendar;
  let current;
  calendar = new Index_default2({});
  return {
    c() {
      create_component(calendar.$$.fragment);
    },
    m(target, anchor) {
      mount_component(calendar, target, anchor);
      current = true;
    },
    i(local) {
      if (current) return;
      transition_in(calendar.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(calendar.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(calendar, detaching);
    }
  };
}
function create_fragment28(ctx) {
  let tabs_1;
  let updating_selectedTab;
  let t;
  let div;
  let current_block_type_index;
  let if_block;
  let current;
  function tabs_1_selectedTab_binding(value) {
    ctx[2](value);
  }
  let tabs_1_props = { tabs: [.../*tabs*/
  ctx[1]] };
  if (
    /*selectedTab*/
    ctx[0] !== void 0
  ) {
    tabs_1_props.selectedTab = /*selectedTab*/
    ctx[0];
  }
  tabs_1 = new Tabs_default({ props: tabs_1_props });
  binding_callbacks.push(() => bind(tabs_1, "selectedTab", tabs_1_selectedTab_binding));
  const if_block_creators = [create_if_block8, create_if_block_14];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*selectedTab*/
      ctx2[0] === "calendar"
    ) return 0;
    if (
      /*selectedTab*/
      ctx2[0] === "notes"
    ) return 1;
    return -1;
  }
  if (~(current_block_type_index = select_block_type(ctx, -1))) {
    if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  }
  return {
    c() {
      create_component(tabs_1.$$.fragment);
      t = space();
      div = element("div");
      if (if_block) if_block.c();
      attr(div, "class", "mt-6 svelte-1fitz50");
    },
    m(target, anchor) {
      mount_component(tabs_1, target, anchor);
      insert(target, t, anchor);
      insert(target, div, anchor);
      if (~current_block_type_index) {
        if_blocks[current_block_type_index].m(div, null);
      }
      current = true;
    },
    p(ctx2, [dirty]) {
      const tabs_1_changes = {};
      if (!updating_selectedTab && dirty & /*selectedTab*/
      1) {
        updating_selectedTab = true;
        tabs_1_changes.selectedTab = /*selectedTab*/
        ctx2[0];
        add_flush_callback(() => updating_selectedTab = false);
      }
      tabs_1.$set(tabs_1_changes);
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index !== previous_block_index) {
        if (if_block) {
          group_outros();
          transition_out(if_blocks[previous_block_index], 1, 1, () => {
            if_blocks[previous_block_index] = null;
          });
          check_outros();
        }
        if (~current_block_type_index) {
          if_block = if_blocks[current_block_type_index];
          if (!if_block) {
            if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
            if_block.c();
          } else {
          }
          transition_in(if_block, 1);
          if_block.m(div, null);
        } else {
          if_block = null;
        }
      }
    },
    i(local) {
      if (current) return;
      transition_in(tabs_1.$$.fragment, local);
      transition_in(if_block);
      current = true;
    },
    o(local) {
      transition_out(tabs_1.$$.fragment, local);
      transition_out(if_block);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(t);
        detach(div);
      }
      destroy_component(tabs_1, detaching);
      if (~current_block_type_index) {
        if_blocks[current_block_type_index].d();
      }
    }
  };
}
function instance27($$self, $$props, $$invalidate) {
  const tabs = ["calendar", "notes"];
  let selectedTab = "notes";
  function tabs_1_selectedTab_binding(value) {
    selectedTab = value;
    $$invalidate(0, selectedTab);
  }
  return [selectedTab, tabs, tabs_1_selectedTab_binding];
}
var Index3 = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance27, create_fragment28, safe_not_equal, {}, add_css22);
  }
};
var Index_default3 = Index3;

// src/settings/plugin-tab.ts
var import_obsidian10 = require("obsidian");
var SettingsTab = class extends import_obsidian10.PluginSettingTab {
  plugin;
  view = null;
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
    setupLocale();
  }
  display() {
    this.containerEl.empty();
    this.view = new Index_default3({
      target: this.containerEl
    });
  }
  hide() {
    super.hide();
    this.view?.$destroy();
  }
};

// src/main.ts
var import_obsidian14 = require("obsidian");

// src/ui/modals/nldate-picker.ts
var import_obsidian12 = require("obsidian");

// src/ui/components/Nldatepicker.svelte
var import_obsidian11 = require("obsidian");
function add_css23(target) {
  append_styles(target, "svelte-v1ofz9", ".container.svelte-v1ofz9{width:100%\n}@media(min-width: 640px){.container.svelte-v1ofz9{max-width:640px\n    }}@media(min-width: 768px){.container.svelte-v1ofz9{max-width:768px\n    }}@media(min-width: 1024px){.container.svelte-v1ofz9{max-width:1024px\n    }}@media(min-width: 1280px){.container.svelte-v1ofz9{max-width:1280px\n    }}@media(min-width: 1536px){.container.svelte-v1ofz9{max-width:1536px\n    }}.pointer-events-none.svelte-v1ofz9{pointer-events:none\n}.visible.svelte-v1ofz9{visibility:visible\n}.invisible.svelte-v1ofz9{visibility:hidden\n}.collapse.svelte-v1ofz9{visibility:collapse\n}.static.svelte-v1ofz9{position:static\n}.absolute.svelte-v1ofz9{position:absolute\n}.relative.svelte-v1ofz9{position:relative\n}.sticky.svelte-v1ofz9{position:sticky\n}.bottom-1.svelte-v1ofz9{bottom:0.25rem\n}.left-0.svelte-v1ofz9{left:0px\n}.left-full.svelte-v1ofz9{left:100%\n}.top-0.svelte-v1ofz9{top:0px\n}.z-10.svelte-v1ofz9{z-index:10\n}.z-20.svelte-v1ofz9{z-index:20\n}.m-0.svelte-v1ofz9{margin:0px\n}.mx-auto.svelte-v1ofz9{margin-left:auto;margin-right:auto\n}.-ml-1.svelte-v1ofz9{margin-left:-0.25rem\n}.mb-1\\.5.svelte-v1ofz9{margin-bottom:0.375rem\n}.mb-6.svelte-v1ofz9{margin-bottom:1.5rem\n}.ml-2.svelte-v1ofz9{margin-left:0.5rem\n}.ml-4.svelte-v1ofz9{margin-left:1rem\n}.ml-\\[5px\\].svelte-v1ofz9{margin-left:5px\n}.mr-2.svelte-v1ofz9{margin-right:0.5rem\n}.mt-1.svelte-v1ofz9{margin-top:0.25rem\n}.mt-2.svelte-v1ofz9{margin-top:0.5rem\n}.mt-2\\.5.svelte-v1ofz9{margin-top:0.625rem\n}.mt-3.svelte-v1ofz9{margin-top:0.75rem\n}.mt-6.svelte-v1ofz9{margin-top:1.5rem\n}.mt-7.svelte-v1ofz9{margin-top:1.75rem\n}.block.svelte-v1ofz9{display:block\n}.flex.svelte-v1ofz9{display:flex\n}.table.svelte-v1ofz9{display:table\n}.contents.svelte-v1ofz9{display:contents\n}.hidden.svelte-v1ofz9{display:none\n}.\\!h-auto.svelte-v1ofz9{height:auto !important\n}.h-2\\.5.svelte-v1ofz9{height:0.625rem\n}.h-4.svelte-v1ofz9{height:1rem\n}.h-\\[8px\\].svelte-v1ofz9{height:8px\n}.h-auto.svelte-v1ofz9{height:auto\n}.w-2\\.5.svelte-v1ofz9{width:0.625rem\n}.w-4.svelte-v1ofz9{width:1rem\n}.w-6.svelte-v1ofz9{width:1.5rem\n}.w-8.svelte-v1ofz9{width:2rem\n}.w-\\[8px\\].svelte-v1ofz9{width:8px\n}.w-full.svelte-v1ofz9{width:100%\n}.w-max.svelte-v1ofz9{width:-moz-max-content;width:max-content\n}.max-w-xs.svelte-v1ofz9{max-width:20rem\n}.flex-grow.svelte-v1ofz9{flex-grow:1\n}.border-collapse.svelte-v1ofz9{border-collapse:collapse\n}.-translate-x-1\\/2.svelte-v1ofz9{--tw-translate-x:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.-translate-y-1\\/2.svelte-v1ofz9{--tw-translate-y:-50%;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-12.svelte-v1ofz9{--tw-rotate:12deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-180.svelte-v1ofz9{--tw-rotate:180deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-45.svelte-v1ofz9{--tw-rotate:45deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.rotate-90.svelte-v1ofz9{--tw-rotate:90deg;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\n}.cursor-not-allowed.svelte-v1ofz9{cursor:not-allowed\n}.cursor-pointer.svelte-v1ofz9{cursor:pointer\n}.flex-col.svelte-v1ofz9{flex-direction:column\n}.items-end.svelte-v1ofz9{align-items:flex-end\n}.items-center.svelte-v1ofz9{align-items:center\n}.justify-between.svelte-v1ofz9{justify-content:space-between\n}.rounded-2xl.svelte-v1ofz9{border-radius:1rem\n}.rounded-\\[--radius-s\\].svelte-v1ofz9{border-radius:var(--radius-s)\n}.rounded-\\[--tab-curve\\].svelte-v1ofz9{border-radius:var(--tab-curve)\n}.rounded-sm.svelte-v1ofz9{border-radius:0.125rem\n}.border.svelte-v1ofz9{border-width:1px\n}.border-0.svelte-v1ofz9{border-width:0px\n}.border-solid.svelte-v1ofz9{border-style:solid\n}.border-\\[var\\(--background-modifier-border\\)\\].svelte-v1ofz9{border-color:var(--background-modifier-border)\n}.bg-\\[--background-modifier-hover\\].svelte-v1ofz9{background-color:var(--background-modifier-hover)\n}.bg-\\[--interactive-accent\\].svelte-v1ofz9{background-color:var(--interactive-accent)\n}.bg-\\[var\\(--background-primary-alt\\)\\].svelte-v1ofz9{background-color:var(--background-primary-alt)\n}.bg-slate-500.svelte-v1ofz9{--tw-bg-opacity:1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))\n}.bg-transparent.svelte-v1ofz9{background-color:transparent\n}.p-1.svelte-v1ofz9{padding:0.25rem\n}.p-2.svelte-v1ofz9{padding:0.5rem\n}.p-6.svelte-v1ofz9{padding:1.5rem\n}.px-1.svelte-v1ofz9{padding-left:0.25rem;padding-right:0.25rem\n}.px-2.svelte-v1ofz9{padding-left:0.5rem;padding-right:0.5rem\n}.px-4.svelte-v1ofz9{padding-left:1rem;padding-right:1rem\n}.py-2.svelte-v1ofz9{padding-top:0.5rem;padding-bottom:0.5rem\n}.py-3.svelte-v1ofz9{padding-top:0.75rem;padding-bottom:0.75rem\n}.\\!pt-2.svelte-v1ofz9{padding-top:0.5rem !important\n}.pt-4.svelte-v1ofz9{padding-top:1rem\n}.text-center.svelte-v1ofz9{text-align:center\n}.text-7xl.svelte-v1ofz9{font-size:4.5rem;line-height:1\n}.text-lg.svelte-v1ofz9{font-size:1.125rem;line-height:1.75rem\n}.text-sm.svelte-v1ofz9{font-size:0.875rem;line-height:1.25rem\n}.text-xs.svelte-v1ofz9{font-size:0.75rem;line-height:1rem\n}.font-medium.svelte-v1ofz9{font-weight:500\n}.font-semibold.svelte-v1ofz9{font-weight:600\n}.uppercase.svelte-v1ofz9{text-transform:uppercase\n}.capitalize.svelte-v1ofz9{text-transform:capitalize\n}.italic.svelte-v1ofz9{font-style:italic\n}.tabular-nums.svelte-v1ofz9{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)\n}.text-\\[--color-arrow\\].svelte-v1ofz9{color:var(--color-arrow)\n}.text-\\[--color-text-title\\].svelte-v1ofz9{color:var(--color-text-title)\n}.text-\\[--color-text-today\\].svelte-v1ofz9{color:var(--color-text-today)\n}.text-\\[--icon-color\\].svelte-v1ofz9{color:var(--icon-color)\n}.text-\\[--interactive-accent\\].svelte-v1ofz9{color:var(--interactive-accent)\n}.text-\\[--text-muted\\].svelte-v1ofz9{color:var(--text-muted)\n}.text-\\[--text-normal\\].svelte-v1ofz9{color:var(--text-normal)\n}.text-\\[--text-on-accent\\].svelte-v1ofz9{color:var(--text-on-accent)\n}.text-\\[var\\(--text-muted\\)\\].svelte-v1ofz9{color:var(--text-muted)\n}.text-transparent.svelte-v1ofz9{color:transparent\n}.opacity-0.svelte-v1ofz9{opacity:0\n}.opacity-100.svelte-v1ofz9{opacity:1\n}.opacity-50.svelte-v1ofz9{opacity:0.5\n}.opacity-60.svelte-v1ofz9{opacity:0.6\n}.opacity-\\[--icon-opacity\\].svelte-v1ofz9{opacity:var(--icon-opacity)\n}.shadow.svelte-v1ofz9{--tw-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}.blur.svelte-v1ofz9{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\n}.transition.svelte-v1ofz9{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-colors.svelte-v1ofz9{transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.transition-transform.svelte-v1ofz9{transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms\n}.duration-200.svelte-v1ofz9{transition-duration:200ms\n}.ease-in.svelte-v1ofz9{transition-timing-function:cubic-bezier(0.4, 0, 1, 1)\n}.last\\:mb-0.svelte-v1ofz9:last-child{margin-bottom:0px\n}.hover\\:cursor-pointer.svelte-v1ofz9:hover{cursor:pointer\n}.hover\\:bg-\\[--background-modifier-hover\\].svelte-v1ofz9:hover{background-color:var(--background-modifier-hover)\n}.hover\\:bg-\\[--interactive-accent-hover\\].svelte-v1ofz9:hover{background-color:var(--interactive-accent-hover)\n}.hover\\:bg-\\[--interactive-hover\\].svelte-v1ofz9:hover{background-color:var(--interactive-hover)\n}.hover\\:text-\\[--icon-color-hover\\].svelte-v1ofz9:hover{color:var(--icon-color-hover)\n}.hover\\:opacity-\\[--icon-opacity-hover\\].svelte-v1ofz9:hover{opacity:var(--icon-opacity-hover)\n}.\\[\\&\\:not\\(\\:focus-visible\\)\\]\\:shadow-none.svelte-v1ofz9:not(:focus-visible){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}");
}
function get_each_context5(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[2] = list[i];
  return child_ctx;
}
function create_each_block5(ctx) {
  let option;
  let option_value_value;
  return {
    c() {
      option = element("option");
      option.textContent = `${capitalize(getPeriodicityFromGranularity(
        /*granularity*/
        ctx[2]
      ))} `;
      option.__value = option_value_value = /*granularity*/
      ctx[2];
      set_input_value(option, option.__value);
    },
    m(target, anchor) {
      insert(target, option, anchor);
    },
    p: noop,
    d(detaching) {
      if (detaching) {
        detach(option);
      }
    }
  };
}
function create_fragment29(ctx) {
  let div16;
  let div4;
  let div2;
  let div0;
  let t1;
  let div1;
  let t2;
  let t3;
  let div3;
  let input0;
  let t4;
  let div9;
  let div7;
  let t8;
  let div8;
  let input1;
  let t9;
  let div14;
  let div12;
  let t13;
  let div13;
  let select;
  let t14;
  let div15;
  let button0;
  let t16;
  let button1;
  let t17;
  let button1_class_value;
  let button1_aria_disabled_value;
  let button1_disabled_value;
  let mounted;
  let dispose;
  let each_value = ensure_array_like(granularities);
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block5(get_each_context5(ctx, each_value, i));
  }
  return {
    c() {
      div16 = element("div");
      div4 = element("div");
      div2 = element("div");
      div0 = element("div");
      div0.textContent = "Date";
      t1 = space();
      div1 = element("div");
      t2 = text(
        /*formattedDate*/
        ctx[4]
      );
      t3 = space();
      div3 = element("div");
      input0 = element("input");
      t4 = space();
      div9 = element("div");
      div7 = element("div");
      div7.innerHTML = `<div class="setting-item-name">Date Format</div> <div class="setting-item-description">Moment format to be used</div>`;
      t8 = space();
      div8 = element("div");
      input1 = element("input");
      t9 = space();
      div14 = element("div");
      div12 = element("div");
      div12.innerHTML = `<div class="setting-item-name">Periodicity</div> <div class="setting-item-description">Type of periodic note to be created</div>`;
      t13 = space();
      div13 = element("div");
      select = element("select");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t14 = space();
      div15 = element("div");
      button0 = element("button");
      button0.textContent = "Never mind";
      t16 = space();
      button1 = element("button");
      t17 = text("Open");
      attr(div0, "class", "setting-item-name");
      attr(div1, "class", "setting-item-description");
      attr(div2, "class", "setting-item-info");
      attr(input0, "type", "text");
      attr(input0, "spellcheck", "false");
      attr(input0, "placeholder", "Today");
      attr(div3, "class", "setting-item-control");
      attr(div4, "class", "setting-item border-0 svelte-v1ofz9");
      attr(div7, "class", "setting-item-info");
      attr(input1, "type", "text");
      attr(input1, "spellcheck", "false");
      attr(input1, "placeholder", "YYYY-MM-DD HH:mm");
      attr(div8, "class", "setting-item-control");
      attr(div9, "class", "setting-item");
      attr(div12, "class", "setting-item-info");
      attr(select, "class", "dropdown");
      if (
        /*granularity*/
        ctx[2] === void 0
      ) add_render_callback(() => (
        /*select_change_handler*/
        ctx[11].call(select)
      ));
      attr(div13, "class", "setting-item-control");
      attr(div14, "class", "setting-item");
      attr(button0, "class", "cursor-pointer svelte-v1ofz9");
      attr(button1, "class", button1_class_value = null_to_empty(`mod-cta ${/*parsedDate*/
      ctx[3] ? "cursor-pointer" : "cursor-not-allowed opacity-50"}`) + " svelte-v1ofz9");
      attr(button1, "aria-disabled", button1_aria_disabled_value = !/*parsedDate*/
      ctx[3]);
      button1.disabled = button1_disabled_value = !/*parsedDate*/
      ctx[3];
      attr(div15, "class", "modal-button-container mt-3 svelte-v1ofz9");
      attr(div16, "class", "pt-4 svelte-v1ofz9");
    },
    m(target, anchor) {
      insert(target, div16, anchor);
      append(div16, div4);
      append(div4, div2);
      append(div2, div0);
      append(div2, t1);
      append(div2, div1);
      append(div1, t2);
      append(div4, t3);
      append(div4, div3);
      append(div3, input0);
      set_input_value(
        input0,
        /*dateInput*/
        ctx[0]
      );
      append(div16, t4);
      append(div16, div9);
      append(div9, div7);
      append(div9, t8);
      append(div9, div8);
      append(div8, input1);
      set_input_value(
        input1,
        /*format*/
        ctx[1]
      );
      append(div16, t9);
      append(div16, div14);
      append(div14, div12);
      append(div14, t13);
      append(div14, div13);
      append(div13, select);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(select, null);
        }
      }
      select_option(
        select,
        /*granularity*/
        ctx[2],
        true
      );
      append(div16, t14);
      append(div16, div15);
      append(div15, button0);
      append(div15, t16);
      append(div15, button1);
      append(button1, t17);
      if (!mounted) {
        dispose = [
          listen(
            input0,
            "input",
            /*input0_input_handler*/
            ctx[9]
          ),
          listen(
            input1,
            "input",
            /*input1_input_handler*/
            ctx[10]
          ),
          listen(
            select,
            "change",
            /*select_change_handler*/
            ctx[11]
          ),
          listen(
            select,
            "change",
            /*handleOnChange*/
            ctx[7]
          ),
          listen(
            button0,
            "click",
            /*handleCancel*/
            ctx[5]
          ),
          listen(
            button1,
            "click",
            /*handleAccept*/
            ctx[6]
          )
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & /*formattedDate*/
      16) set_data(
        t2,
        /*formattedDate*/
        ctx2[4]
      );
      if (dirty & /*dateInput*/
      1 && input0.value !== /*dateInput*/
      ctx2[0]) {
        set_input_value(
          input0,
          /*dateInput*/
          ctx2[0]
        );
      }
      if (dirty & /*format*/
      2 && input1.value !== /*format*/
      ctx2[1]) {
        set_input_value(
          input1,
          /*format*/
          ctx2[1]
        );
      }
      if (dirty & /*granularity*/
      4) {
        select_option(
          select,
          /*granularity*/
          ctx2[2]
        );
      }
      if (dirty & /*parsedDate*/
      8 && button1_class_value !== (button1_class_value = null_to_empty(`mod-cta ${/*parsedDate*/
      ctx2[3] ? "cursor-pointer" : "cursor-not-allowed opacity-50"}`) + " svelte-v1ofz9")) {
        attr(button1, "class", button1_class_value);
      }
      if (dirty & /*parsedDate*/
      8 && button1_aria_disabled_value !== (button1_aria_disabled_value = !/*parsedDate*/
      ctx2[3])) {
        attr(button1, "aria-disabled", button1_aria_disabled_value);
      }
      if (dirty & /*parsedDate*/
      8 && button1_disabled_value !== (button1_disabled_value = !/*parsedDate*/
      ctx2[3])) {
        button1.disabled = button1_disabled_value;
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching) {
        detach(div16);
      }
      destroy_each(each_blocks, detaching);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance28($$self, $$props, $$invalidate) {
  let format;
  let { modalClass } = $$props;
  const nldatesPlugin = window.app.plugins.getPlugin("nldates-obsidian");
  const settings = get_store_value(settingsStore);
  let granularity = settings.crrNldModalGranularity;
  let dateInput = "";
  let parsedDate;
  let formattedDate = window.moment().format(format || getNoteSettings()[granularity].format);
  const getDateStr = () => {
    let cleanDateInput = dateInput;
    if (dateInput.endsWith("|")) {
      cleanDateInput = dateInput.slice(0, -1);
    }
    $$invalidate(4, formattedDate = "Loading...");
    const nlParsedDate = nldatesPlugin.parseDate(cleanDateInput || "today");
    if (nlParsedDate.moment.isValid()) {
      $$invalidate(3, parsedDate = nlParsedDate.moment);
      $$invalidate(4, formattedDate = nlParsedDate.moment.format(format));
    } else {
      $$invalidate(3, parsedDate = null);
      $$invalidate(4, formattedDate = "Invalid date");
    }
  };
  const enterKeyCb = (ev) => {
    const target = ev.target;
    if (ev.key === "Enter" && target.className !== "dropdown") {
      handleAccept();
    }
    if (document.getElementsByClassName("modal").length === 0) {
      window.removeEventListener("keydown", enterKeyCb);
    }
  };
  const handleCancel = async () => {
    modalClass.close();
    window.removeEventListener("keydown", enterKeyCb);
  };
  const handleAccept = async () => {
    if (parsedDate) {
      modalClass.close();
      const { workspace } = window.app;
      const leaf = workspace.getLeaf(false);
      createOrOpenNote({
        leaf,
        date: parsedDate,
        granularity,
        confirmBeforeCreateOverride: false
      });
    }
    window.removeEventListener("keydown", enterKeyCb);
  };
  const handleOnChange = (ev) => {
    settingsStore.update((settings2) => ({
      ...settings2,
      crrNldModalGranularity: ev.currentTarget.value
    }));
  };
  onMount(() => {
    window.addEventListener("keydown", enterKeyCb);
  });
  function input0_input_handler() {
    dateInput = this.value;
    $$invalidate(0, dateInput);
  }
  function input1_input_handler() {
    format = this.value;
    $$invalidate(1, format), $$invalidate(2, granularity);
  }
  function select_change_handler() {
    granularity = select_value(this);
    $$invalidate(2, granularity);
  }
  $$self.$$set = ($$props2) => {
    if ("modalClass" in $$props2) $$invalidate(8, modalClass = $$props2.modalClass);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*granularity*/
    4) {
      $: $$invalidate(1, format = getNoteSettings()[granularity].format);
    }
    if ($$self.$$.dirty & /*dateInput, format*/
    3) {
      $: dateInput, format, (0, import_obsidian11.debounce)(getDateStr, 50)();
    }
  };
  return [
    dateInput,
    format,
    granularity,
    parsedDate,
    formattedDate,
    handleCancel,
    handleAccept,
    handleOnChange,
    modalClass,
    input0_input_handler,
    input1_input_handler,
    select_change_handler
  ];
}
var Nldatepicker = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance28, create_fragment29, safe_not_equal, { modalClass: 8 }, add_css23);
  }
};
var Nldatepicker_default = Nldatepicker;

// src/ui/modals/nldate-picker.ts
var NldatePickerModal = class extends import_obsidian12.Modal {
  constructor() {
    super(window.app);
    const { contentEl } = this;
    const svelteContainer = contentEl.createDiv();
    new Nldatepicker_default({
      target: svelteContainer,
      props: {
        modalClass: this
      }
    });
  }
};
function createNldatePickerDialog() {
  new NldatePickerModal().open();
}

// src/view.ts
var import_obsidian13 = require("obsidian");
var CalendarView = class _CalendarView extends import_obsidian13.ItemView {
  view;
  triggerLinkHover;
  plugin;
  constructor(leaf, plugin) {
    super(leaf);
    this.plugin = plugin;
    this.registerEvent(
      this.app.workspace.on("css-change", () => {
        const crrTheme = this.plugin.getTheme();
        console.log(this);
        themeStore.set(crrTheme === "moonstone" || crrTheme === "light" ? "light" : "dark");
      })
    );
    this.registerEvent(
      this.app.vault.on("create", (file) => this.onFileCreated(file))
    );
    this.registerEvent(
      this.app.vault.on("delete", (file) => this.onFileDeleted(file))
    );
    this.registerEvent(
      this.app.vault.on(
        "rename",
        (file, oldPath) => this.onFileRenamed(file, oldPath)
      )
    );
    this.registerEvent(this.app.metadataCache.on("changed", this.onFileModified));
    this.registerEvent(this.app.workspace.on("file-open", () => this.onFileOpen()));
  }
  getViewType() {
    return VIEW_TYPE;
  }
  getDisplayText() {
    return "Example view";
  }
  async onOpen() {
    console.log("On open view\u{1F450}");
    this.view = new View_default({
      target: this.contentEl
    });
    if (this.app.workspace.layoutReady && this.view) {
      storeAllVaultPeriodicNotes();
    }
  }
  onClose() {
    console.log("On close view\u274C");
    this.view?.$destroy();
    return Promise.resolve();
  }
  onFileCreated(file) {
    console.log("\u2705 ON file creted \u2705", file);
    if (this.app.workspace.layoutReady && this.view) {
      const { isValid, granularity, date } = isValidPeriodicNote(file.basename);
      if (isValid) {
        const noteDateUID = getNoteDateUID({ date, granularity });
        const fileExists = get_store_value(notesStores[granularity])[noteDateUID];
        if (fileExists) return;
        notesStores[granularity].update((values) => ({
          ...values,
          [noteDateUID]: {
            file,
            sticker: null
          }
        }));
        console.log(`${noteDateUID} succesfully created`, "new store: ", get_store_value(notesStores[granularity]));
      }
    }
  }
  async onFileDeleted(file) {
    console.log("\u274C ON file deleted \u274C");
    const { isValid, granularity, date } = isValidPeriodicNote(file.basename);
    if (isValid) {
      const noteDateUID = getNoteDateUID({ date, granularity });
      const fileExists = get_store_value(notesStores[granularity])[noteDateUID];
      const newStore = {
        ...get_store_value(notesStores[granularity])
      };
      if (fileExists) {
        delete newStore[noteDateUID];
        notesStores[granularity].update(() => newStore);
        console.log(`${noteDateUID} succesfully deleted`, "new store: ", get_store_value(notesStores[granularity]));
      }
      ;
    }
    this.updateActiveFile();
  }
  async onFileRenamed(renamedFile, oldPath) {
    const { isValid: oldIsValid, granularity: oldGranularity, date: oldDate } = isValidPeriodicNote(basename(oldPath));
    const { isValid: newIsValid, granularity: newGranularity, date: newDate } = isValidPeriodicNote(renamedFile.basename);
    if (!oldIsValid && newIsValid) {
      const newNotesStore = notesStores[newGranularity];
      const newNoteDateUID = getNoteDateUID({
        date: newDate,
        granularity: newGranularity
      });
      newNotesStore.update((values) => ({
        ...values,
        [newNoteDateUID]: {
          file: renamedFile,
          sticker: null
        }
      }));
    }
    if (oldIsValid && !newIsValid) {
      const oldNotesStore = notesStores[oldGranularity];
      const oldNoteDateUID = getNoteDateUID({
        date: oldDate,
        granularity: oldGranularity
      });
      const modOldStore = {
        ...get_store_value(oldNotesStore)
      };
      delete modOldStore[oldNoteDateUID];
      oldNotesStore.set(modOldStore);
    }
    if (oldIsValid && newIsValid) {
      const newNotesStore = notesStores[newGranularity];
      const newNoteDateUID = getNoteDateUID({
        date: newDate,
        granularity: newGranularity
      });
      const oldNotesStore = notesStores[oldGranularity];
      const oldNoteDateUID = getNoteDateUID({
        date: oldDate,
        granularity: newGranularity
      });
      const oldEmoji = get_store_value(oldNotesStore)[oldNoteDateUID].sticker;
      const modOldStore = {
        ...get_store_value(oldNotesStore)
      };
      delete modOldStore[oldNoteDateUID];
      newNotesStore.update((values) => ({
        ...values,
        [newNoteDateUID]: {
          file: renamedFile,
          sticker: oldEmoji
        }
      }));
    }
    console.log("\u270F\uFE0FOn file renamed \u270F\uFE0F > file: ", renamedFile, oldPath);
    console.log("new store: ", newGranularity && get_store_value(notesStores[newGranularity]));
  }
  async onFileModified(file, data, cache) {
    const { isValid, granularity, date } = isValidPeriodicNote(file.basename);
    if (isValid && date && granularity) {
      const noteDateUID = getNoteDateUID({ date, granularity });
      const oldEmoji = get_store_value(notesStores[granularity])[noteDateUID].sticker;
      const newEmoji = cache.tags?.find((tagObj) => /\p{RGI_Emoji}/v.test(tagObj.tag))?.tag.slice(1) || null;
      if (oldEmoji !== newEmoji) {
        notesStores[granularity].update((values) => ({
          ...values,
          [noteDateUID]: {
            file,
            sticker: newEmoji
          }
        }));
      }
    }
  }
  onFileOpen() {
    if (this.app.workspace.layoutReady) {
      console.log("view.ts > onFileOpen()");
      this.updateActiveFile();
    }
  }
  // onHover({ date, targetEl, isControlPressed, granularity }: Parameters<TOnHover>[0]): void {
  // 	// console.log('view.ts > onHover(): 📈')
  // 	// this.keydownFn && window.removeEventListener('keydown', this.keydownFn);
  // 	const { format } = getNoteSettings(granularity);
  // 	const note = getNoteByGranularity({ date, granularity });
  // 	this.triggerLinkHover = () =>
  // 		this.app.workspace.trigger('link-hover', this, targetEl, date.format(format), note?.path);
  // 	if (!isControlPressed && !this.settings.autoHoverPreview) {
  // 		// TODO: add markdown view popover when ctrlKey pressed after hover
  // 		// window.addEventListener('keydown', this.keydownFn);
  // 		return;
  // 	}
  // 	this.triggerLinkHover();
  // }
  // Utils
  /**
      * Set noteDateUID from current view's file in activeFileIdStore.
      */
  updateActiveFile() {
    const activeLeaf = this.app.workspace.getActiveViewOfType(_CalendarView);
    if (activeLeaf?.view && activeLeaf.view instanceof import_obsidian13.FileView) {
      const file = activeLeaf.view.file;
      if (!file) return;
      const { isValid, granularity, date } = isValidPeriodicNote(file.basename);
      if (isValid && date && granularity) {
        const noteDateUID = getNoteDateUID({ date, granularity });
        activeFileIdStore.set(noteDateUID);
      }
    }
    console.log("\u{1FA9F}\u{1F4C5} view.ts > updateActiveFile(), activeFileIdStore: ", get_store_value(activeFileIdStore));
  }
  keydownCallback(ev) {
    console.log("view.ts > keydownCallback > isControlPressed() > this: ", this, isControlPressed(ev));
    if (isControlPressed(ev)) {
      this.triggerLinkHover?.();
    }
  }
  // public revealActiveNote(): void {
  // 	const { moment } = window;
  // 	const { activeLeaf } = this.app.workspace;
  // 	if (activeLeaf.view instanceof FileView) {
  // 		// Check to see if the active note is a daily-note
  // 		let date = getDateFromFile(activeLeaf.view.file, 'day');
  // 		if (date) {
  // 			this.calendar.$set({ displayedDate: date });
  // 			return;
  // 		}
  // 		// Check to see if the active note is a weekly-note
  // 		const { format } = getWeeklyNoteSettings();
  // 		date = moment(activeLeaf.view.file.basename, format, true);
  // 		if (date.isValid()) {
  // 			this.calendar.$set({ displayedDate: date });
  // 			return;
  // 		}
  // 	}
  // }
};

// src/main.ts
var PeriodicNotesCalendarPlugin = class extends import_obsidian14.Plugin {
  popovers = {};
  popoversCleanups = [];
  popoverAutoUpdateCleanup = null;
  onunload() {
    console.log("ON Unload \u26F0\uFE0F");
    this.app.workspace.getLeavesOfType(VIEW_TYPE).forEach((leaf) => leaf.detach());
    this.popoversCleanups.length > 0 && this.popoversCleanups.forEach((cleanup) => cleanup());
  }
  async onload() {
    await this.loadSettings();
    console.log("ON Load \u{1FAF5}");
    pluginClassStore2.set(this);
    const crrTheme = this.getTheme();
    themeStore.set(crrTheme === "moonstone" || crrTheme === "light" ? "light" : "dark");
    await getDailyNotesPlugin();
    const unsubSettingsStore = settingsStore.subscribe(this.saveSettings.bind(this));
    this.register(unsubSettingsStore);
    this.addSettingTab(new SettingsTab(this.app, this));
    this.handleRibbon();
    this.registerView(VIEW_TYPE, (leaf) => new CalendarView(leaf, this));
    this.addCommand({
      id: "open-calendar-view",
      name: "Open calendar view",
      callback: () => {
        this.toggleView();
      }
    });
    granularities.forEach((granularity) => {
      ["previous", "next"].forEach((pos) => {
        const periodicity = getPeriodicityFromGranularity(granularity);
        let posText;
        if (granularity === "day") {
          posText = pos === "next" ? "tomorrow" : "yesterday";
        } else {
          posText = `${pos}-${periodicity}`;
        }
        this.addCommand({
          id: `create-${posText}-note`,
          name: `Open ${granularity === "day" ? `${posText}'s` : `${pos} ${getPeriodicityFromGranularity(granularity)}`} note`,
          callback: () => {
            const { workspace } = window.app;
            const leaf = workspace.getLeaf(false);
            const newDate = window.moment().clone()[pos === "next" ? "add" : "subtract"](1, granularity).startOf(granularity);
            createOrOpenNote({ leaf, date: newDate, granularity, confirmBeforeCreateOverride: false });
          }
        });
      });
    });
    const nlDatesPlugin = await getPlugin(NLDATES_PLUGIN_ID);
    this.addCommand({
      id: "open-nldate-note",
      name: "Open a Periodic Note based on Natural Language Date selection",
      callback: () => {
        if (nlDatesPlugin) {
          createNldatePickerDialog();
        } else {
          new import_obsidian14.Notice(`Please install '${NLDATES_PLUGIN_ID}' plugin to use this command`);
        }
      }
    });
    if (get_store_value(settingsStore).allowLocalesSwitchFromCommandPalette) {
      window.moment.locales().forEach((momentLocale) => {
        this.addCommand({
          id: `switch-to - ${momentLocale} -locale`,
          name: `Switch to ${locales_default.get(momentLocale) || momentLocale} locale`,
          callback: () => {
            updateLocale(momentLocale);
            updateWeekStart();
            updateWeekdays();
          }
        });
      });
    }
    this.app.workspace.onLayoutReady(() => {
      console.log("ON Layout REady \u{1F64C}");
      this.initView({ active: false });
      if (get_store_value(settingsStore).openPopoverOnRibbonHover) {
        Popover.create({
          id: CALENDAR_POPOVER_ID,
          view: {
            Component: View_default
          }
        });
      }
      const startupNoteGranularity = getStartupNoteGranularity();
      if (startupNoteGranularity) {
        console.log("\u{1F389} [layout ready] about to open or create note");
        createOrOpenNote({
          leaf: this.app.workspace.getLeaf(),
          date: window.moment(),
          granularity: startupNoteGranularity,
          confirmBeforeCreateOverride: false
        });
      }
    });
  }
  async loadSettings() {
    const settings = await this.loadData();
    !settings && await this.saveData(DEFAULT_SETTINGS);
    settingsStore.update((old) => ({
      ...old,
      ...settings || {}
    }));
  }
  async saveSettings(newSettings) {
    console.log("\u2705 saveSettings triggered", newSettings);
    await this.saveData(newSettings);
  }
  handleRibbon() {
    const ribbonEl = this.addRibbonIcon("dice", "Open calendar", (ev) => {
      const calendarPopover = getPopoverInstance(CALENDAR_POPOVER_ID);
      if (get_store_value(settingsStore).viewMode === "dedicated-panel") {
        this.toggleView();
        if (get_store_value(settingsStore).openPopoverOnRibbonHover && calendarPopover?.opened) {
          calendarPopover.close();
        }
        return;
      } else {
        const calendarEl = document.querySelector(`#${CALENDAR_POPOVER_ID}[data-popover="true"]`);
        const target = ev.target;
        if (!calendarEl && !calendarPopover && target) {
          Popover.create({
            id: CALENDAR_POPOVER_ID,
            view: {
              Component: View_default
            }
          }).open(target);
        } else {
          calendarPopover?.toggle(target);
        }
      }
    });
    ribbonEl.id = `${CALENDAR_POPOVER_ID}-ribbon-ref-el`;
  }
  async initView({ active: active2 } = { active: true }) {
    this.app.workspace.detachLeavesOfType(VIEW_TYPE);
    await this.app.workspace[`get${get_store_value(settingsStore).viewLeafPosition}Leaf`](false)?.setViewState({
      type: VIEW_TYPE,
      active: active2
    });
  }
  revealView() {
    this.app.workspace.revealLeaf(this.app.workspace.getLeavesOfType(VIEW_TYPE)[0]);
    this.app.workspace.getLeavesOfType(VIEW_TYPE)[0].setViewState({
      type: VIEW_TYPE,
      active: true
    });
  }
  async toggleView() {
    const leaf = this.app.workspace.getLeavesOfType(VIEW_TYPE)[0];
    if (!leaf) {
      await this.initView();
      return;
    }
    const getSplitPos = () => {
      const closestWorkspaceSplitClassName = leaf.containerEl.closest(".workspace-split")?.className;
      if (closestWorkspaceSplitClassName?.includes("left")) {
        return "left";
      }
      if (closestWorkspaceSplitClassName?.includes("right")) {
        return "right";
      }
      return "root";
    };
    const crrSplitPos = getSplitPos();
    console.log("crrSplitPos", crrSplitPos);
    const crrSplit = this.app.workspace[`${crrSplitPos}Split`];
    console.log("crrSplit", crrSplit);
    const leafActive = leaf.tabHeaderEl.className.includes("is-active");
    console.log("leafActive", leafActive);
    if (crrSplit instanceof import_obsidian14.WorkspaceRoot) {
      if (leafActive) {
        leaf.view.unload();
        await this.initView({ active: false });
        return;
      }
      this.revealView();
      return;
    }
    if (!crrSplit.collapsed) {
      if (leafActive) {
        crrSplit.collapse();
      } else {
        this.revealView();
      }
    } else {
      this.revealView();
    }
  }
  getTheme() {
    return this.app.getTheme();
  }
};
/*! Bundled license information:

moment/moment.js:
  (*! moment.js *)
  (*! version : 2.30.1 *)
  (*! authors : Tim Wood, Iskren Chernev, Moment.js contributors *)
  (*! license : MIT *)
  (*! momentjs.com *)
*/
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibm9kZV9tb2R1bGVzL21vbWVudC9tb21lbnQuanMiLCAic3JjL21haW4udHMiLCAic3JjL2xvY2FsZXMudHMiLCAic3JjL2xvY2FsaXphdGlvbi50cyIsICJzcmMvY29uc3RhbnRzLnRzIiwgInNyYy9zZXR0aW5ncy9jb25zdGFudHMudHMiLCAibm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC91dGlscy5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL2Vudmlyb25tZW50LmpzIiwgIm5vZGVfbW9kdWxlcy9zdmVsdGUvc3JjL3J1bnRpbWUvaW50ZXJuYWwvbG9vcC5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL2dsb2JhbHMuanMiLCAibm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC9SZXNpemVPYnNlcnZlclNpbmdsZXRvbi5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL2RvbS5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL3N0eWxlX21hbmFnZXIuanMiLCAibm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC9saWZlY3ljbGUuanMiLCAibm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC9zY2hlZHVsZXIuanMiLCAibm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC90cmFuc2l0aW9ucy5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL2VhY2guanMiLCAibm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvc2hhcmVkL2Jvb2xlYW5fYXR0cmlidXRlcy5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL0NvbXBvbmVudC5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9zaGFyZWQvdmVyc2lvbi5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL2Rpc2Nsb3NlLXZlcnNpb24vaW5kZXguanMiLCAibm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcyIsICJzcmMvdXRpbHMudHMiLCAic3JjL2lvL3BhcnNlLnRzIiwgInNyYy91aS9jb21wb25lbnRzL1RhYnMuc3ZlbHRlIiwgInNyYy9zZXR0aW5ncy91aS9jb3JlL0Fycm93LnN2ZWx0ZSIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2Vhc2luZy9pbmRleC5qcyIsICJub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL3RyYW5zaXRpb24vaW5kZXguanMiLCAic3JjL3NldHRpbmdzL3VpL2NvcmUvRHJvcGRvd24uc3ZlbHRlIiwgInNyYy9zZXR0aW5ncy91aS9jb3JlL1NldHRpbmdJdGVtLnN2ZWx0ZSIsICJzcmMvc2V0dGluZ3MvdWkvY29yZS9Ub2dnbGUuc3ZlbHRlIiwgIm5vZGVfbW9kdWxlcy9AZmxvYXRpbmctdWkvdXRpbHMvZGlzdC9mbG9hdGluZy11aS51dGlscy5tanMiLCAibm9kZV9tb2R1bGVzL0BmbG9hdGluZy11aS9jb3JlL2Rpc3QvZmxvYXRpbmctdWkuY29yZS5tanMiLCAibm9kZV9tb2R1bGVzL0BmbG9hdGluZy11aS91dGlscy9kaXN0L2Zsb2F0aW5nLXVpLnV0aWxzLmRvbS5tanMiLCAibm9kZV9tb2R1bGVzL0BmbG9hdGluZy11aS9kb20vZGlzdC9mbG9hdGluZy11aS5kb20ubWpzIiwgInNyYy9zZXR0aW5ncy91aS9zdWdnZXN0LnRzIiwgIm5vZGVfbW9kdWxlcy9zdmVsdGUvc3JjL3J1bnRpbWUvc3RvcmUvaW5kZXguanMiLCAic3JjL3N0b3Jlcy9kYXRlcy50cyIsICJzcmMvc3RvcmVzL2xvY2FsZS50cyIsICJzcmMvc3RvcmVzL25vdGVzLnRzIiwgInNyYy9zdG9yZXMvcG9wb3ZlcnMudHMiLCAic3JjL3N0b3Jlcy9pbmRleC50cyIsICJzcmMvdWkvbW9kYWxzL2NvbmZpcm1hdGlvbi50cyIsICJzcmMvdWkvY29tcG9uZW50cy9Db25maXJtYXRpb25Nb2RhbC5zdmVsdGUiLCAic3JjL2lvL2NyZWF0ZS1vci1vcGVuLW5vdGUudHMiLCAic3JjL2lvL3NldHRpbmdzLnRzIiwgInNyYy9pby92YXVsdC50cyIsICJub2RlX21vZHVsZXMvQGVtb2ppLW1hcnQvZGF0YS9zZXRzLzE1L25hdGl2ZS5qc29uIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3QvcGFja2FnZXMvZW1vamktbWFydC9zcmMvaW5kZXgudHMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9wYWNrYWdlcy9lbW9qaS1tYXJ0L3NyYy9jb21wb25lbnRzL1BpY2tlci9pbmRleC50cyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2NvbXBvbmVudHMvUGlja2VyL1BpY2tlci50c3giLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fZGVmaW5lX3Byb3BlcnR5Lm1qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L25vZGVfbW9kdWxlcy9wcmVhY3QvanN4LXJ1bnRpbWUvZGlzdC9qc3hSdW50aW1lLm1vZHVsZS5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L25vZGVfbW9kdWxlcy9wcmVhY3QvanN4LXJ1bnRpbWUvc3JjL2luZGV4LmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9kaXN0L3ByZWFjdC5tb2R1bGUuanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L3NyYy9jb25zdGFudHMuanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L3NyYy91dGlsLmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9zcmMvb3B0aW9ucy5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L25vZGVfbW9kdWxlcy9wcmVhY3Qvc3JjL2NyZWF0ZS1lbGVtZW50LmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9zcmMvY29tcG9uZW50LmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9zcmMvY3JlYXRlLWNvbnRleHQuanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L3NyYy9kaWZmL2NoaWxkcmVuLmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9zcmMvZGlmZi9wcm9wcy5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L25vZGVfbW9kdWxlcy9wcmVhY3Qvc3JjL2RpZmYvaW5kZXguanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L3NyYy9yZW5kZXIuanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L3NyYy9jbG9uZS1lbGVtZW50LmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9zcmMvZGlmZi9jYXRjaC1lcnJvci5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL3V0aWxzLnRzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3QvcGFja2FnZXMvZW1vamktbWFydC9zcmMvaGVscGVycy9pbmRleC50cyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2hlbHBlcnMvc3RvcmUudHMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9wYWNrYWdlcy9lbW9qaS1tYXJ0L3NyYy9oZWxwZXJzL25hdGl2ZS1zdXBwb3J0LnRzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3QvcGFja2FnZXMvZW1vamktbWFydC9zcmMvaGVscGVycy9mcmVxdWVudGx5LXVzZWQudHMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9wYWNrYWdlcy9lbW9qaS1tYXJ0L3NyYy9oZWxwZXJzL3NlYXJjaC1pbmRleC50cyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2NvbmZpZy50cyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQtZGF0YS9pMThuL2VuLmpzb24iLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9wYWNrYWdlcy9lbW9qaS1tYXJ0L3NyYy9jb21wb25lbnRzL1BpY2tlci9QaWNrZXJQcm9wcy50cyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2ljb25zLnRzeCIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2NvbXBvbmVudHMvRW1vamkvaW5kZXgudHMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9wYWNrYWdlcy9lbW9qaS1tYXJ0L3NyYy9jb21wb25lbnRzL0Vtb2ppL0Vtb2ppLnRzeCIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2NvbXBvbmVudHMvRW1vamkvRW1vamlFbGVtZW50LmpzeCIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2NvbXBvbmVudHMvSFRNTEVsZW1lbnQvaW5kZXgudHMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9wYWNrYWdlcy9lbW9qaS1tYXJ0L3NyYy9jb21wb25lbnRzL0hUTUxFbGVtZW50L0hUTUxFbGVtZW50LnRzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3QvcGFja2FnZXMvZW1vamktbWFydC9zcmMvY29tcG9uZW50cy9IVE1MRWxlbWVudC9TaGFkb3dFbGVtZW50LnRzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3QvcGFja2FnZXMvZW1vamktbWFydC9zcmMvY29tcG9uZW50cy9FbW9qaS9FbW9qaVByb3BzLnRzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3QvcGFja2FnZXMvZW1vamktbWFydC9zcmMvY29tcG9uZW50cy9OYXZpZ2F0aW9uL2luZGV4LnRzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3QvcGFja2FnZXMvZW1vamktbWFydC9zcmMvY29tcG9uZW50cy9OYXZpZ2F0aW9uL05hdmlnYXRpb24udHN4IiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9jb21wYXQvZGlzdC9jb21wYXQubW9kdWxlLmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9jb21wYXQvc3JjL3V0aWwuanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L2NvbXBhdC9zcmMvUHVyZUNvbXBvbmVudC5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L25vZGVfbW9kdWxlcy9wcmVhY3QvY29tcGF0L3NyYy9tZW1vLmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9jb21wYXQvc3JjL2ZvcndhcmRSZWYuanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L2NvbXBhdC9zcmMvQ2hpbGRyZW4uanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L2NvbXBhdC9zcmMvc3VzcGVuc2UuanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L2NvbXBhdC9zcmMvc3VzcGVuc2UtbGlzdC5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L25vZGVfbW9kdWxlcy9wcmVhY3QvY29tcGF0L3NyYy9wb3J0YWxzLmpzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3Qvbm9kZV9tb2R1bGVzL3ByZWFjdC9jb21wYXQvc3JjL3JlbmRlci5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L25vZGVfbW9kdWxlcy9wcmVhY3QvY29tcGF0L3NyYy9pbmRleC5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L25vZGVfbW9kdWxlcy9wcmVhY3QvaG9va3MvZGlzdC9ob29rcy5tb2R1bGUuanMiLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvcHJlYWN0L2hvb2tzL3NyYy9pbmRleC5qcyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2NvbXBvbmVudHMvSE9Dcy9pbmRleC50cyIsICJub2RlX21vZHVsZXMvZW1vamktbWFydC9kaXN0L3BhY2thZ2VzL2Vtb2ppLW1hcnQvc3JjL2NvbXBvbmVudHMvSE9Dcy9QdXJlSW5saW5lQ29tcG9uZW50LnRzIiwgIm5vZGVfbW9kdWxlcy9lbW9qaS1tYXJ0L2Rpc3QvcGFja2FnZXMvZW1vamktbWFydC9zcmMvY29tcG9uZW50cy9QaWNrZXIvUGlja2VyRWxlbWVudC50c3giLCAibm9kZV9tb2R1bGVzL2Vtb2ppLW1hcnQvZGlzdC9ub2RlX21vZHVsZXMvQHBhcmNlbC9ydW50aW1lLWpzL2xpYi9idW5kbGVzL3J1bnRpbWUtMWI5NTcyZjlmMjk0N2EwMi5qcyIsICJzcmMvdWkvcG9wb3ZlcnMvYmFzZS1jb21wb25lbnQtYmVoYXZpb3IudHMiLCAic3JjL3VpL3BvcG92ZXJzL2NhbGVuZGFyLnRzIiwgInNyYy91aS9wb3BvdmVycy9maWxlLW1lbnUudHMiLCAic3JjL3VpL2NvbXBvbmVudHMvU3RpY2tlclBvcG92ZXIuc3ZlbHRlIiwgInNyYy91aS9wb3BvdmVycy9zdGlja2VyLnRzIiwgInNyYy91aS9wb3BvdmVycy9iYXNlLnRzIiwgInNyYy91aS91dGlscy9waWNrZXIudHMiLCAic3JjL3VpL3V0aWxzL2V2ZW50LWhhbmRsZXJzLnRzIiwgInNyYy91aS91dGlscy9pbmRleC50cyIsICJzcmMvaW8vdXRpbHMudHMiLCAic3JjL2lvL3ZhbGlkYXRpb24vaW5kZXgudHMiLCAic3JjL2lvL3ZhbGlkYXRpb24vZm9ybWF0LnRzIiwgIm5vZGVfbW9kdWxlcy9zdmVsdGUtd3JpdGFibGUtZGVyaXZlZC9pbmRleC5tanMiLCAic3JjL3NldHRpbmdzL3VpL3RhYnMvbm90ZXMvRm9ybWF0LnN2ZWx0ZSIsICJzcmMvc2V0dGluZ3MvdWkvdGFicy9ub3Rlcy9Gb2xkZXIuc3ZlbHRlIiwgInNyYy9zZXR0aW5ncy91aS90YWJzL25vdGVzL1RlbXBsYXRlLnN2ZWx0ZSIsICJzcmMvc2V0dGluZ3MvdWkvdGFicy9ub3Rlcy9PcGVuQXRTdGFydHVwLnN2ZWx0ZSIsICJzcmMvc2V0dGluZ3MvdWkvdGFicy9ub3Rlcy9QZXJpb2Quc3ZlbHRlIiwgInNyYy9zZXR0aW5ncy91aS90YWJzL25vdGVzL0luZGV4LnN2ZWx0ZSIsICJzcmMvc2V0dGluZ3Mvc3RvcmUudHMiLCAic3JjL3VpL2NvbXBvbmVudHMvRG90LnN2ZWx0ZSIsICJzcmMvdWkvY29tcG9uZW50cy9TdGlja2VyLnN2ZWx0ZSIsICJzcmMvdWkvY29tcG9uZW50cy9EYXkuc3ZlbHRlIiwgInNyYy91aS9jb21wb25lbnRzL01vbnRoLnN2ZWx0ZSIsICJzcmMvdWkvY29tcG9uZW50cy9BcnJvdy5zdmVsdGUiLCAic3JjL3VpL2NvbXBvbmVudHMvTW9udGhOYXYuc3ZlbHRlIiwgInNyYy91aS9jb21wb25lbnRzL1F1YXJ0ZXJOdW0uc3ZlbHRlIiwgInNyYy91aS9jb21wb25lbnRzL1dlZWtOdW0uc3ZlbHRlIiwgInNyYy91aS9jb21wb25lbnRzL1llYXIuc3ZlbHRlIiwgInNyYy91aS9jb21wb25lbnRzL1llYXJOYXYuc3ZlbHRlIiwgInNyYy91aS9jb21wb25lbnRzL1llYXJzTmF2LnN2ZWx0ZSIsICJzcmMvdWkvY29tcG9uZW50cy9DYWxlbmRhci5zdmVsdGUiLCAic3JjL1ZpZXcuc3ZlbHRlIiwgInNyYy9zZXR0aW5ncy91aS90YWJzL2NhbGVuZGFyL0luZGV4LnN2ZWx0ZSIsICJzcmMvc2V0dGluZ3MvdWkvSW5kZXguc3ZlbHRlIiwgInNyYy9zZXR0aW5ncy9wbHVnaW4tdGFiLnRzIiwgInNyYy91aS9tb2RhbHMvbmxkYXRlLXBpY2tlci50cyIsICJzcmMvdWkvY29tcG9uZW50cy9ObGRhdGVwaWNrZXIuc3ZlbHRlIiwgInNyYy92aWV3LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvLyEgbW9tZW50LmpzXG4vLyEgdmVyc2lvbiA6IDIuMzAuMVxuLy8hIGF1dGhvcnMgOiBUaW0gV29vZCwgSXNrcmVuIENoZXJuZXYsIE1vbWVudC5qcyBjb250cmlidXRvcnNcbi8vISBsaWNlbnNlIDogTUlUXG4vLyEgbW9tZW50anMuY29tXG5cbjsoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICAgIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoZmFjdG9yeSkgOlxuICAgIGdsb2JhbC5tb21lbnQgPSBmYWN0b3J5KClcbn0odGhpcywgKGZ1bmN0aW9uICgpIHsgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIGhvb2tDYWxsYmFjaztcblxuICAgIGZ1bmN0aW9uIGhvb2tzKCkge1xuICAgICAgICByZXR1cm4gaG9va0NhbGxiYWNrLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgLy8gVGhpcyBpcyBkb25lIHRvIHJlZ2lzdGVyIHRoZSBtZXRob2QgY2FsbGVkIHdpdGggbW9tZW50KClcbiAgICAvLyB3aXRob3V0IGNyZWF0aW5nIGNpcmN1bGFyIGRlcGVuZGVuY2llcy5cbiAgICBmdW5jdGlvbiBzZXRIb29rQ2FsbGJhY2soY2FsbGJhY2spIHtcbiAgICAgICAgaG9va0NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNBcnJheShpbnB1dCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgaW5wdXQgaW5zdGFuY2VvZiBBcnJheSB8fFxuICAgICAgICAgICAgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlucHV0KSA9PT0gJ1tvYmplY3QgQXJyYXldJ1xuICAgICAgICApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzT2JqZWN0KGlucHV0KSB7XG4gICAgICAgIC8vIElFOCB3aWxsIHRyZWF0IHVuZGVmaW5lZCBhbmQgbnVsbCBhcyBvYmplY3QgaWYgaXQgd2Fzbid0IGZvclxuICAgICAgICAvLyBpbnB1dCAhPSBudWxsXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBpbnB1dCAhPSBudWxsICYmXG4gICAgICAgICAgICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaW5wdXQpID09PSAnW29iamVjdCBPYmplY3RdJ1xuICAgICAgICApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhc093blByb3AoYSwgYikge1xuICAgICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsIGIpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzT2JqZWN0RW1wdHkob2JqKSB7XG4gICAgICAgIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcykge1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikubGVuZ3RoID09PSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGs7XG4gICAgICAgICAgICBmb3IgKGsgaW4gb2JqKSB7XG4gICAgICAgICAgICAgICAgaWYgKGhhc093blByb3Aob2JqLCBrKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc1VuZGVmaW5lZChpbnB1dCkge1xuICAgICAgICByZXR1cm4gaW5wdXQgPT09IHZvaWQgMDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc051bWJlcihpbnB1dCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgdHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJyB8fFxuICAgICAgICAgICAgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlucHV0KSA9PT0gJ1tvYmplY3QgTnVtYmVyXSdcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0RhdGUoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIGlucHV0IGluc3RhbmNlb2YgRGF0ZSB8fFxuICAgICAgICAgICAgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlucHV0KSA9PT0gJ1tvYmplY3QgRGF0ZV0nXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWFwKGFyciwgZm4pIHtcbiAgICAgICAgdmFyIHJlcyA9IFtdLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGFyckxlbiA9IGFyci5sZW5ndGg7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBhcnJMZW47ICsraSkge1xuICAgICAgICAgICAgcmVzLnB1c2goZm4oYXJyW2ldLCBpKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBleHRlbmQoYSwgYikge1xuICAgICAgICBmb3IgKHZhciBpIGluIGIpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wKGIsIGkpKSB7XG4gICAgICAgICAgICAgICAgYVtpXSA9IGJbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaGFzT3duUHJvcChiLCAndG9TdHJpbmcnKSkge1xuICAgICAgICAgICAgYS50b1N0cmluZyA9IGIudG9TdHJpbmc7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaGFzT3duUHJvcChiLCAndmFsdWVPZicpKSB7XG4gICAgICAgICAgICBhLnZhbHVlT2YgPSBiLnZhbHVlT2Y7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVVVEMoaW5wdXQsIGZvcm1hdCwgbG9jYWxlLCBzdHJpY3QpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUxvY2FsT3JVVEMoaW5wdXQsIGZvcm1hdCwgbG9jYWxlLCBzdHJpY3QsIHRydWUpLnV0YygpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRlZmF1bHRQYXJzaW5nRmxhZ3MoKSB7XG4gICAgICAgIC8vIFdlIG5lZWQgdG8gZGVlcCBjbG9uZSB0aGlzIG9iamVjdC5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVtcHR5OiBmYWxzZSxcbiAgICAgICAgICAgIHVudXNlZFRva2VuczogW10sXG4gICAgICAgICAgICB1bnVzZWRJbnB1dDogW10sXG4gICAgICAgICAgICBvdmVyZmxvdzogLTIsXG4gICAgICAgICAgICBjaGFyc0xlZnRPdmVyOiAwLFxuICAgICAgICAgICAgbnVsbElucHV0OiBmYWxzZSxcbiAgICAgICAgICAgIGludmFsaWRFcmE6IG51bGwsXG4gICAgICAgICAgICBpbnZhbGlkTW9udGg6IG51bGwsXG4gICAgICAgICAgICBpbnZhbGlkRm9ybWF0OiBmYWxzZSxcbiAgICAgICAgICAgIHVzZXJJbnZhbGlkYXRlZDogZmFsc2UsXG4gICAgICAgICAgICBpc286IGZhbHNlLFxuICAgICAgICAgICAgcGFyc2VkRGF0ZVBhcnRzOiBbXSxcbiAgICAgICAgICAgIGVyYTogbnVsbCxcbiAgICAgICAgICAgIG1lcmlkaWVtOiBudWxsLFxuICAgICAgICAgICAgcmZjMjgyMjogZmFsc2UsXG4gICAgICAgICAgICB3ZWVrZGF5TWlzbWF0Y2g6IGZhbHNlLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFBhcnNpbmdGbGFncyhtKSB7XG4gICAgICAgIGlmIChtLl9wZiA9PSBudWxsKSB7XG4gICAgICAgICAgICBtLl9wZiA9IGRlZmF1bHRQYXJzaW5nRmxhZ3MoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbS5fcGY7XG4gICAgfVxuXG4gICAgdmFyIHNvbWU7XG4gICAgaWYgKEFycmF5LnByb3RvdHlwZS5zb21lKSB7XG4gICAgICAgIHNvbWUgPSBBcnJheS5wcm90b3R5cGUuc29tZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzb21lID0gZnVuY3Rpb24gKGZ1bikge1xuICAgICAgICAgICAgdmFyIHQgPSBPYmplY3QodGhpcyksXG4gICAgICAgICAgICAgICAgbGVuID0gdC5sZW5ndGggPj4+IDAsXG4gICAgICAgICAgICAgICAgaTtcblxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGkgaW4gdCAmJiBmdW4uY2FsbCh0aGlzLCB0W2ldLCBpLCB0KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc1ZhbGlkKG0pIHtcbiAgICAgICAgdmFyIGZsYWdzID0gbnVsbCxcbiAgICAgICAgICAgIHBhcnNlZFBhcnRzID0gZmFsc2UsXG4gICAgICAgICAgICBpc05vd1ZhbGlkID0gbS5fZCAmJiAhaXNOYU4obS5fZC5nZXRUaW1lKCkpO1xuICAgICAgICBpZiAoaXNOb3dWYWxpZCkge1xuICAgICAgICAgICAgZmxhZ3MgPSBnZXRQYXJzaW5nRmxhZ3MobSk7XG4gICAgICAgICAgICBwYXJzZWRQYXJ0cyA9IHNvbWUuY2FsbChmbGFncy5wYXJzZWREYXRlUGFydHMsIGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGkgIT0gbnVsbDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaXNOb3dWYWxpZCA9XG4gICAgICAgICAgICAgICAgZmxhZ3Mub3ZlcmZsb3cgPCAwICYmXG4gICAgICAgICAgICAgICAgIWZsYWdzLmVtcHR5ICYmXG4gICAgICAgICAgICAgICAgIWZsYWdzLmludmFsaWRFcmEgJiZcbiAgICAgICAgICAgICAgICAhZmxhZ3MuaW52YWxpZE1vbnRoICYmXG4gICAgICAgICAgICAgICAgIWZsYWdzLmludmFsaWRXZWVrZGF5ICYmXG4gICAgICAgICAgICAgICAgIWZsYWdzLndlZWtkYXlNaXNtYXRjaCAmJlxuICAgICAgICAgICAgICAgICFmbGFncy5udWxsSW5wdXQgJiZcbiAgICAgICAgICAgICAgICAhZmxhZ3MuaW52YWxpZEZvcm1hdCAmJlxuICAgICAgICAgICAgICAgICFmbGFncy51c2VySW52YWxpZGF0ZWQgJiZcbiAgICAgICAgICAgICAgICAoIWZsYWdzLm1lcmlkaWVtIHx8IChmbGFncy5tZXJpZGllbSAmJiBwYXJzZWRQYXJ0cykpO1xuICAgICAgICAgICAgaWYgKG0uX3N0cmljdCkge1xuICAgICAgICAgICAgICAgIGlzTm93VmFsaWQgPVxuICAgICAgICAgICAgICAgICAgICBpc05vd1ZhbGlkICYmXG4gICAgICAgICAgICAgICAgICAgIGZsYWdzLmNoYXJzTGVmdE92ZXIgPT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICAgZmxhZ3MudW51c2VkVG9rZW5zLmxlbmd0aCA9PT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICBmbGFncy5iaWdIb3VyID09PSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE9iamVjdC5pc0Zyb3plbiA9PSBudWxsIHx8ICFPYmplY3QuaXNGcm96ZW4obSkpIHtcbiAgICAgICAgICAgIG0uX2lzVmFsaWQgPSBpc05vd1ZhbGlkO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGlzTm93VmFsaWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG0uX2lzVmFsaWQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlSW52YWxpZChmbGFncykge1xuICAgICAgICB2YXIgbSA9IGNyZWF0ZVVUQyhOYU4pO1xuICAgICAgICBpZiAoZmxhZ3MgIT0gbnVsbCkge1xuICAgICAgICAgICAgZXh0ZW5kKGdldFBhcnNpbmdGbGFncyhtKSwgZmxhZ3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKG0pLnVzZXJJbnZhbGlkYXRlZCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbTtcbiAgICB9XG5cbiAgICAvLyBQbHVnaW5zIHRoYXQgYWRkIHByb3BlcnRpZXMgc2hvdWxkIGFsc28gYWRkIHRoZSBrZXkgaGVyZSAobnVsbCB2YWx1ZSksXG4gICAgLy8gc28gd2UgY2FuIHByb3Blcmx5IGNsb25lIG91cnNlbHZlcy5cbiAgICB2YXIgbW9tZW50UHJvcGVydGllcyA9IChob29rcy5tb21lbnRQcm9wZXJ0aWVzID0gW10pLFxuICAgICAgICB1cGRhdGVJblByb2dyZXNzID0gZmFsc2U7XG5cbiAgICBmdW5jdGlvbiBjb3B5Q29uZmlnKHRvLCBmcm9tKSB7XG4gICAgICAgIHZhciBpLFxuICAgICAgICAgICAgcHJvcCxcbiAgICAgICAgICAgIHZhbCxcbiAgICAgICAgICAgIG1vbWVudFByb3BlcnRpZXNMZW4gPSBtb21lbnRQcm9wZXJ0aWVzLmxlbmd0aDtcblxuICAgICAgICBpZiAoIWlzVW5kZWZpbmVkKGZyb20uX2lzQU1vbWVudE9iamVjdCkpIHtcbiAgICAgICAgICAgIHRvLl9pc0FNb21lbnRPYmplY3QgPSBmcm9tLl9pc0FNb21lbnRPYmplY3Q7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1VuZGVmaW5lZChmcm9tLl9pKSkge1xuICAgICAgICAgICAgdG8uX2kgPSBmcm9tLl9pO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNVbmRlZmluZWQoZnJvbS5fZikpIHtcbiAgICAgICAgICAgIHRvLl9mID0gZnJvbS5fZjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzVW5kZWZpbmVkKGZyb20uX2wpKSB7XG4gICAgICAgICAgICB0by5fbCA9IGZyb20uX2w7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1VuZGVmaW5lZChmcm9tLl9zdHJpY3QpKSB7XG4gICAgICAgICAgICB0by5fc3RyaWN0ID0gZnJvbS5fc3RyaWN0O1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNVbmRlZmluZWQoZnJvbS5fdHptKSkge1xuICAgICAgICAgICAgdG8uX3R6bSA9IGZyb20uX3R6bTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzVW5kZWZpbmVkKGZyb20uX2lzVVRDKSkge1xuICAgICAgICAgICAgdG8uX2lzVVRDID0gZnJvbS5faXNVVEM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1VuZGVmaW5lZChmcm9tLl9vZmZzZXQpKSB7XG4gICAgICAgICAgICB0by5fb2Zmc2V0ID0gZnJvbS5fb2Zmc2V0O1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNVbmRlZmluZWQoZnJvbS5fcGYpKSB7XG4gICAgICAgICAgICB0by5fcGYgPSBnZXRQYXJzaW5nRmxhZ3MoZnJvbSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1VuZGVmaW5lZChmcm9tLl9sb2NhbGUpKSB7XG4gICAgICAgICAgICB0by5fbG9jYWxlID0gZnJvbS5fbG9jYWxlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG1vbWVudFByb3BlcnRpZXNMZW4gPiAwKSB7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbW9tZW50UHJvcGVydGllc0xlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcHJvcCA9IG1vbWVudFByb3BlcnRpZXNbaV07XG4gICAgICAgICAgICAgICAgdmFsID0gZnJvbVtwcm9wXTtcbiAgICAgICAgICAgICAgICBpZiAoIWlzVW5kZWZpbmVkKHZhbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9bcHJvcF0gPSB2YWw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRvO1xuICAgIH1cblxuICAgIC8vIE1vbWVudCBwcm90b3R5cGUgb2JqZWN0XG4gICAgZnVuY3Rpb24gTW9tZW50KGNvbmZpZykge1xuICAgICAgICBjb3B5Q29uZmlnKHRoaXMsIGNvbmZpZyk7XG4gICAgICAgIHRoaXMuX2QgPSBuZXcgRGF0ZShjb25maWcuX2QgIT0gbnVsbCA/IGNvbmZpZy5fZC5nZXRUaW1lKCkgOiBOYU4pO1xuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICB0aGlzLl9kID0gbmV3IERhdGUoTmFOKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBQcmV2ZW50IGluZmluaXRlIGxvb3AgaW4gY2FzZSB1cGRhdGVPZmZzZXQgY3JlYXRlcyBuZXcgbW9tZW50XG4gICAgICAgIC8vIG9iamVjdHMuXG4gICAgICAgIGlmICh1cGRhdGVJblByb2dyZXNzID09PSBmYWxzZSkge1xuICAgICAgICAgICAgdXBkYXRlSW5Qcm9ncmVzcyA9IHRydWU7XG4gICAgICAgICAgICBob29rcy51cGRhdGVPZmZzZXQodGhpcyk7XG4gICAgICAgICAgICB1cGRhdGVJblByb2dyZXNzID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc01vbWVudChvYmopIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIG9iaiBpbnN0YW5jZW9mIE1vbWVudCB8fCAob2JqICE9IG51bGwgJiYgb2JqLl9pc0FNb21lbnRPYmplY3QgIT0gbnVsbClcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB3YXJuKG1zZykge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBob29rcy5zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZ3MgPT09IGZhbHNlICYmXG4gICAgICAgICAgICB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgICAgIGNvbnNvbGUud2FyblxuICAgICAgICApIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRGVwcmVjYXRpb24gd2FybmluZzogJyArIG1zZyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkZXByZWNhdGUobXNnLCBmbikge1xuICAgICAgICB2YXIgZmlyc3RUaW1lID0gdHJ1ZTtcblxuICAgICAgICByZXR1cm4gZXh0ZW5kKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChob29rcy5kZXByZWNhdGlvbkhhbmRsZXIgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGhvb2tzLmRlcHJlY2F0aW9uSGFuZGxlcihudWxsLCBtc2cpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZpcnN0VGltZSkge1xuICAgICAgICAgICAgICAgIHZhciBhcmdzID0gW10sXG4gICAgICAgICAgICAgICAgICAgIGFyZyxcbiAgICAgICAgICAgICAgICAgICAgaSxcbiAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICBhcmdMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBhcmdMZW47IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBhcmcgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcmcgKz0gJ1xcblsnICsgaSArICddICc7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGtleSBpbiBhcmd1bWVudHNbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFzT3duUHJvcChhcmd1bWVudHNbMF0sIGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJnICs9IGtleSArICc6ICcgKyBhcmd1bWVudHNbMF1ba2V5XSArICcsICc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYXJnID0gYXJnLnNsaWNlKDAsIC0yKTsgLy8gUmVtb3ZlIHRyYWlsaW5nIGNvbW1hIGFuZCBzcGFjZVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJnID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGFyZ3MucHVzaChhcmcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB3YXJuKFxuICAgICAgICAgICAgICAgICAgICBtc2cgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ1xcbkFyZ3VtZW50czogJyArXG4gICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmdzKS5qb2luKCcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnXFxuJyArXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgRXJyb3IoKS5zdGFja1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgZmlyc3RUaW1lID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfSwgZm4pO1xuICAgIH1cblxuICAgIHZhciBkZXByZWNhdGlvbnMgPSB7fTtcblxuICAgIGZ1bmN0aW9uIGRlcHJlY2F0ZVNpbXBsZShuYW1lLCBtc2cpIHtcbiAgICAgICAgaWYgKGhvb2tzLmRlcHJlY2F0aW9uSGFuZGxlciAhPSBudWxsKSB7XG4gICAgICAgICAgICBob29rcy5kZXByZWNhdGlvbkhhbmRsZXIobmFtZSwgbXNnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWRlcHJlY2F0aW9uc1tuYW1lXSkge1xuICAgICAgICAgICAgd2Fybihtc2cpO1xuICAgICAgICAgICAgZGVwcmVjYXRpb25zW25hbWVdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhvb2tzLnN1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5ncyA9IGZhbHNlO1xuICAgIGhvb2tzLmRlcHJlY2F0aW9uSGFuZGxlciA9IG51bGw7XG5cbiAgICBmdW5jdGlvbiBpc0Z1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAodHlwZW9mIEZ1bmN0aW9uICE9PSAndW5kZWZpbmVkJyAmJiBpbnB1dCBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB8fFxuICAgICAgICAgICAgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlucHV0KSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJ1xuICAgICAgICApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldChjb25maWcpIHtcbiAgICAgICAgdmFyIHByb3AsIGk7XG4gICAgICAgIGZvciAoaSBpbiBjb25maWcpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wKGNvbmZpZywgaSkpIHtcbiAgICAgICAgICAgICAgICBwcm9wID0gY29uZmlnW2ldO1xuICAgICAgICAgICAgICAgIGlmIChpc0Z1bmN0aW9uKHByb3ApKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXNbaV0gPSBwcm9wO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXNbJ18nICsgaV0gPSBwcm9wO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XG4gICAgICAgIC8vIExlbmllbnQgb3JkaW5hbCBwYXJzaW5nIGFjY2VwdHMganVzdCBhIG51bWJlciBpbiBhZGRpdGlvbiB0b1xuICAgICAgICAvLyBudW1iZXIgKyAocG9zc2libHkpIHN0dWZmIGNvbWluZyBmcm9tIF9kYXlPZk1vbnRoT3JkaW5hbFBhcnNlLlxuICAgICAgICAvLyBUT0RPOiBSZW1vdmUgXCJvcmRpbmFsUGFyc2VcIiBmYWxsYmFjayBpbiBuZXh0IG1ham9yIHJlbGVhc2UuXG4gICAgICAgIHRoaXMuX2RheU9mTW9udGhPcmRpbmFsUGFyc2VMZW5pZW50ID0gbmV3IFJlZ0V4cChcbiAgICAgICAgICAgICh0aGlzLl9kYXlPZk1vbnRoT3JkaW5hbFBhcnNlLnNvdXJjZSB8fCB0aGlzLl9vcmRpbmFsUGFyc2Uuc291cmNlKSArXG4gICAgICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgICAgICAvXFxkezEsMn0vLnNvdXJjZVxuICAgICAgICApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1lcmdlQ29uZmlncyhwYXJlbnRDb25maWcsIGNoaWxkQ29uZmlnKSB7XG4gICAgICAgIHZhciByZXMgPSBleHRlbmQoe30sIHBhcmVudENvbmZpZyksXG4gICAgICAgICAgICBwcm9wO1xuICAgICAgICBmb3IgKHByb3AgaW4gY2hpbGRDb25maWcpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wKGNoaWxkQ29uZmlnLCBwcm9wKSkge1xuICAgICAgICAgICAgICAgIGlmIChpc09iamVjdChwYXJlbnRDb25maWdbcHJvcF0pICYmIGlzT2JqZWN0KGNoaWxkQ29uZmlnW3Byb3BdKSkge1xuICAgICAgICAgICAgICAgICAgICByZXNbcHJvcF0gPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgZXh0ZW5kKHJlc1twcm9wXSwgcGFyZW50Q29uZmlnW3Byb3BdKTtcbiAgICAgICAgICAgICAgICAgICAgZXh0ZW5kKHJlc1twcm9wXSwgY2hpbGRDb25maWdbcHJvcF0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY2hpbGRDb25maWdbcHJvcF0gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICByZXNbcHJvcF0gPSBjaGlsZENvbmZpZ1twcm9wXTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgcmVzW3Byb3BdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKHByb3AgaW4gcGFyZW50Q29uZmlnKSB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgaGFzT3duUHJvcChwYXJlbnRDb25maWcsIHByb3ApICYmXG4gICAgICAgICAgICAgICAgIWhhc093blByb3AoY2hpbGRDb25maWcsIHByb3ApICYmXG4gICAgICAgICAgICAgICAgaXNPYmplY3QocGFyZW50Q29uZmlnW3Byb3BdKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgLy8gbWFrZSBzdXJlIGNoYW5nZXMgdG8gcHJvcGVydGllcyBkb24ndCBtb2RpZnkgcGFyZW50IGNvbmZpZ1xuICAgICAgICAgICAgICAgIHJlc1twcm9wXSA9IGV4dGVuZCh7fSwgcmVzW3Byb3BdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIExvY2FsZShjb25maWcpIHtcbiAgICAgICAgaWYgKGNvbmZpZyAhPSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnNldChjb25maWcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGtleXM7XG5cbiAgICBpZiAoT2JqZWN0LmtleXMpIHtcbiAgICAgICAga2V5cyA9IE9iamVjdC5rZXlzO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGtleXMgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgICAgICByZXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoaSBpbiBvYmopIHtcbiAgICAgICAgICAgICAgICBpZiAoaGFzT3duUHJvcChvYmosIGkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcy5wdXNoKGkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIGRlZmF1bHRDYWxlbmRhciA9IHtcbiAgICAgICAgc2FtZURheTogJ1tUb2RheSBhdF0gTFQnLFxuICAgICAgICBuZXh0RGF5OiAnW1RvbW9ycm93IGF0XSBMVCcsXG4gICAgICAgIG5leHRXZWVrOiAnZGRkZCBbYXRdIExUJyxcbiAgICAgICAgbGFzdERheTogJ1tZZXN0ZXJkYXkgYXRdIExUJyxcbiAgICAgICAgbGFzdFdlZWs6ICdbTGFzdF0gZGRkZCBbYXRdIExUJyxcbiAgICAgICAgc2FtZUVsc2U6ICdMJyxcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gY2FsZW5kYXIoa2V5LCBtb20sIG5vdykge1xuICAgICAgICB2YXIgb3V0cHV0ID0gdGhpcy5fY2FsZW5kYXJba2V5XSB8fCB0aGlzLl9jYWxlbmRhclsnc2FtZUVsc2UnXTtcbiAgICAgICAgcmV0dXJuIGlzRnVuY3Rpb24ob3V0cHV0KSA/IG91dHB1dC5jYWxsKG1vbSwgbm93KSA6IG91dHB1dDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB6ZXJvRmlsbChudW1iZXIsIHRhcmdldExlbmd0aCwgZm9yY2VTaWduKSB7XG4gICAgICAgIHZhciBhYnNOdW1iZXIgPSAnJyArIE1hdGguYWJzKG51bWJlciksXG4gICAgICAgICAgICB6ZXJvc1RvRmlsbCA9IHRhcmdldExlbmd0aCAtIGFic051bWJlci5sZW5ndGgsXG4gICAgICAgICAgICBzaWduID0gbnVtYmVyID49IDA7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAoc2lnbiA/IChmb3JjZVNpZ24gPyAnKycgOiAnJykgOiAnLScpICtcbiAgICAgICAgICAgIE1hdGgucG93KDEwLCBNYXRoLm1heCgwLCB6ZXJvc1RvRmlsbCkpLnRvU3RyaW5nKCkuc3Vic3RyKDEpICtcbiAgICAgICAgICAgIGFic051bWJlclxuICAgICAgICApO1xuICAgIH1cblxuICAgIHZhciBmb3JtYXR0aW5nVG9rZW5zID1cbiAgICAgICAgICAgIC8oXFxbW15cXFtdKlxcXSl8KFxcXFwpPyhbSGhdbW0oc3MpP3xNb3xNTT9NP00/fERvfERERG98REQ/RD9EP3xkZGQ/ZD98ZG8/fHdbb3x3XT98V1tvfFddP3xRbz98TnsxLDV9fFlZWVlZWXxZWVlZWXxZWVlZfFlZfHl7Miw0fXx5bz98Z2coZ2dnPyk/fEdHKEdHRz8pP3xlfEV8YXxBfGhoP3xISD98a2s/fG1tP3xzcz98U3sxLDl9fHh8WHx6ej98Wlo/fC4pL2csXG4gICAgICAgIGxvY2FsRm9ybWF0dGluZ1Rva2VucyA9IC8oXFxbW15cXFtdKlxcXSl8KFxcXFwpPyhMVFN8TFR8TEw/TD9MP3xsezEsNH0pL2csXG4gICAgICAgIGZvcm1hdEZ1bmN0aW9ucyA9IHt9LFxuICAgICAgICBmb3JtYXRUb2tlbkZ1bmN0aW9ucyA9IHt9O1xuXG4gICAgLy8gdG9rZW46ICAgICdNJ1xuICAgIC8vIHBhZGRlZDogICBbJ01NJywgMl1cbiAgICAvLyBvcmRpbmFsOiAgJ01vJ1xuICAgIC8vIGNhbGxiYWNrOiBmdW5jdGlvbiAoKSB7IHRoaXMubW9udGgoKSArIDEgfVxuICAgIGZ1bmN0aW9uIGFkZEZvcm1hdFRva2VuKHRva2VuLCBwYWRkZWQsIG9yZGluYWwsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBmdW5jID0gY2FsbGJhY2s7XG4gICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBmdW5jID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzW2NhbGxiYWNrXSgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgICAgIGZvcm1hdFRva2VuRnVuY3Rpb25zW3Rva2VuXSA9IGZ1bmM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhZGRlZCkge1xuICAgICAgICAgICAgZm9ybWF0VG9rZW5GdW5jdGlvbnNbcGFkZGVkWzBdXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gemVyb0ZpbGwoZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBwYWRkZWRbMV0sIHBhZGRlZFsyXSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcmRpbmFsKSB7XG4gICAgICAgICAgICBmb3JtYXRUb2tlbkZ1bmN0aW9uc1tvcmRpbmFsXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkub3JkaW5hbChcbiAgICAgICAgICAgICAgICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICAgICAgICAgICAgICB0b2tlblxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlRm9ybWF0dGluZ1Rva2VucyhpbnB1dCkge1xuICAgICAgICBpZiAoaW5wdXQubWF0Y2goL1xcW1tcXHNcXFNdLykpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnB1dC5yZXBsYWNlKC9eXFxbfFxcXSQvZywgJycpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnB1dC5yZXBsYWNlKC9cXFxcL2csICcnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtYWtlRm9ybWF0RnVuY3Rpb24oZm9ybWF0KSB7XG4gICAgICAgIHZhciBhcnJheSA9IGZvcm1hdC5tYXRjaChmb3JtYXR0aW5nVG9rZW5zKSxcbiAgICAgICAgICAgIGksXG4gICAgICAgICAgICBsZW5ndGg7XG5cbiAgICAgICAgZm9yIChpID0gMCwgbGVuZ3RoID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChmb3JtYXRUb2tlbkZ1bmN0aW9uc1thcnJheVtpXV0pIHtcbiAgICAgICAgICAgICAgICBhcnJheVtpXSA9IGZvcm1hdFRva2VuRnVuY3Rpb25zW2FycmF5W2ldXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYXJyYXlbaV0gPSByZW1vdmVGb3JtYXR0aW5nVG9rZW5zKGFycmF5W2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAobW9tKSB7XG4gICAgICAgICAgICB2YXIgb3V0cHV0ID0gJycsXG4gICAgICAgICAgICAgICAgaTtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIG91dHB1dCArPSBpc0Z1bmN0aW9uKGFycmF5W2ldKVxuICAgICAgICAgICAgICAgICAgICA/IGFycmF5W2ldLmNhbGwobW9tLCBmb3JtYXQpXG4gICAgICAgICAgICAgICAgICAgIDogYXJyYXlbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8vIGZvcm1hdCBkYXRlIHVzaW5nIG5hdGl2ZSBkYXRlIG9iamVjdFxuICAgIGZ1bmN0aW9uIGZvcm1hdE1vbWVudChtLCBmb3JtYXQpIHtcbiAgICAgICAgaWYgKCFtLmlzVmFsaWQoKSkge1xuICAgICAgICAgICAgcmV0dXJuIG0ubG9jYWxlRGF0YSgpLmludmFsaWREYXRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3JtYXQgPSBleHBhbmRGb3JtYXQoZm9ybWF0LCBtLmxvY2FsZURhdGEoKSk7XG4gICAgICAgIGZvcm1hdEZ1bmN0aW9uc1tmb3JtYXRdID1cbiAgICAgICAgICAgIGZvcm1hdEZ1bmN0aW9uc1tmb3JtYXRdIHx8IG1ha2VGb3JtYXRGdW5jdGlvbihmb3JtYXQpO1xuXG4gICAgICAgIHJldHVybiBmb3JtYXRGdW5jdGlvbnNbZm9ybWF0XShtKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBleHBhbmRGb3JtYXQoZm9ybWF0LCBsb2NhbGUpIHtcbiAgICAgICAgdmFyIGkgPSA1O1xuXG4gICAgICAgIGZ1bmN0aW9uIHJlcGxhY2VMb25nRGF0ZUZvcm1hdFRva2VucyhpbnB1dCkge1xuICAgICAgICAgICAgcmV0dXJuIGxvY2FsZS5sb25nRGF0ZUZvcm1hdChpbnB1dCkgfHwgaW5wdXQ7XG4gICAgICAgIH1cblxuICAgICAgICBsb2NhbEZvcm1hdHRpbmdUb2tlbnMubGFzdEluZGV4ID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPj0gMCAmJiBsb2NhbEZvcm1hdHRpbmdUb2tlbnMudGVzdChmb3JtYXQpKSB7XG4gICAgICAgICAgICBmb3JtYXQgPSBmb3JtYXQucmVwbGFjZShcbiAgICAgICAgICAgICAgICBsb2NhbEZvcm1hdHRpbmdUb2tlbnMsXG4gICAgICAgICAgICAgICAgcmVwbGFjZUxvbmdEYXRlRm9ybWF0VG9rZW5zXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgbG9jYWxGb3JtYXR0aW5nVG9rZW5zLmxhc3RJbmRleCA9IDA7XG4gICAgICAgICAgICBpIC09IDE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZm9ybWF0O1xuICAgIH1cblxuICAgIHZhciBkZWZhdWx0TG9uZ0RhdGVGb3JtYXQgPSB7XG4gICAgICAgIExUUzogJ2g6bW06c3MgQScsXG4gICAgICAgIExUOiAnaDptbSBBJyxcbiAgICAgICAgTDogJ01NL0REL1lZWVknLFxuICAgICAgICBMTDogJ01NTU0gRCwgWVlZWScsXG4gICAgICAgIExMTDogJ01NTU0gRCwgWVlZWSBoOm1tIEEnLFxuICAgICAgICBMTExMOiAnZGRkZCwgTU1NTSBELCBZWVlZIGg6bW0gQScsXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGxvbmdEYXRlRm9ybWF0KGtleSkge1xuICAgICAgICB2YXIgZm9ybWF0ID0gdGhpcy5fbG9uZ0RhdGVGb3JtYXRba2V5XSxcbiAgICAgICAgICAgIGZvcm1hdFVwcGVyID0gdGhpcy5fbG9uZ0RhdGVGb3JtYXRba2V5LnRvVXBwZXJDYXNlKCldO1xuXG4gICAgICAgIGlmIChmb3JtYXQgfHwgIWZvcm1hdFVwcGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fbG9uZ0RhdGVGb3JtYXRba2V5XSA9IGZvcm1hdFVwcGVyXG4gICAgICAgICAgICAubWF0Y2goZm9ybWF0dGluZ1Rva2VucylcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHRvaykge1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgdG9rID09PSAnTU1NTScgfHxcbiAgICAgICAgICAgICAgICAgICAgdG9rID09PSAnTU0nIHx8XG4gICAgICAgICAgICAgICAgICAgIHRvayA9PT0gJ0REJyB8fFxuICAgICAgICAgICAgICAgICAgICB0b2sgPT09ICdkZGRkJ1xuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdG9rLnNsaWNlKDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdG9rO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKCcnKTtcblxuICAgICAgICByZXR1cm4gdGhpcy5fbG9uZ0RhdGVGb3JtYXRba2V5XTtcbiAgICB9XG5cbiAgICB2YXIgZGVmYXVsdEludmFsaWREYXRlID0gJ0ludmFsaWQgZGF0ZSc7XG5cbiAgICBmdW5jdGlvbiBpbnZhbGlkRGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ludmFsaWREYXRlO1xuICAgIH1cblxuICAgIHZhciBkZWZhdWx0T3JkaW5hbCA9ICclZCcsXG4gICAgICAgIGRlZmF1bHREYXlPZk1vbnRoT3JkaW5hbFBhcnNlID0gL1xcZHsxLDJ9LztcblxuICAgIGZ1bmN0aW9uIG9yZGluYWwobnVtYmVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9vcmRpbmFsLnJlcGxhY2UoJyVkJywgbnVtYmVyKTtcbiAgICB9XG5cbiAgICB2YXIgZGVmYXVsdFJlbGF0aXZlVGltZSA9IHtcbiAgICAgICAgZnV0dXJlOiAnaW4gJXMnLFxuICAgICAgICBwYXN0OiAnJXMgYWdvJyxcbiAgICAgICAgczogJ2EgZmV3IHNlY29uZHMnLFxuICAgICAgICBzczogJyVkIHNlY29uZHMnLFxuICAgICAgICBtOiAnYSBtaW51dGUnLFxuICAgICAgICBtbTogJyVkIG1pbnV0ZXMnLFxuICAgICAgICBoOiAnYW4gaG91cicsXG4gICAgICAgIGhoOiAnJWQgaG91cnMnLFxuICAgICAgICBkOiAnYSBkYXknLFxuICAgICAgICBkZDogJyVkIGRheXMnLFxuICAgICAgICB3OiAnYSB3ZWVrJyxcbiAgICAgICAgd3c6ICclZCB3ZWVrcycsXG4gICAgICAgIE06ICdhIG1vbnRoJyxcbiAgICAgICAgTU06ICclZCBtb250aHMnLFxuICAgICAgICB5OiAnYSB5ZWFyJyxcbiAgICAgICAgeXk6ICclZCB5ZWFycycsXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHJlbGF0aXZlVGltZShudW1iZXIsIHdpdGhvdXRTdWZmaXgsIHN0cmluZywgaXNGdXR1cmUpIHtcbiAgICAgICAgdmFyIG91dHB1dCA9IHRoaXMuX3JlbGF0aXZlVGltZVtzdHJpbmddO1xuICAgICAgICByZXR1cm4gaXNGdW5jdGlvbihvdXRwdXQpXG4gICAgICAgICAgICA/IG91dHB1dChudW1iZXIsIHdpdGhvdXRTdWZmaXgsIHN0cmluZywgaXNGdXR1cmUpXG4gICAgICAgICAgICA6IG91dHB1dC5yZXBsYWNlKC8lZC9pLCBudW1iZXIpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHBhc3RGdXR1cmUoZGlmZiwgb3V0cHV0KSB7XG4gICAgICAgIHZhciBmb3JtYXQgPSB0aGlzLl9yZWxhdGl2ZVRpbWVbZGlmZiA+IDAgPyAnZnV0dXJlJyA6ICdwYXN0J107XG4gICAgICAgIHJldHVybiBpc0Z1bmN0aW9uKGZvcm1hdCkgPyBmb3JtYXQob3V0cHV0KSA6IGZvcm1hdC5yZXBsYWNlKC8lcy9pLCBvdXRwdXQpO1xuICAgIH1cblxuICAgIHZhciBhbGlhc2VzID0ge1xuICAgICAgICBEOiAnZGF0ZScsXG4gICAgICAgIGRhdGVzOiAnZGF0ZScsXG4gICAgICAgIGRhdGU6ICdkYXRlJyxcbiAgICAgICAgZDogJ2RheScsXG4gICAgICAgIGRheXM6ICdkYXknLFxuICAgICAgICBkYXk6ICdkYXknLFxuICAgICAgICBlOiAnd2Vla2RheScsXG4gICAgICAgIHdlZWtkYXlzOiAnd2Vla2RheScsXG4gICAgICAgIHdlZWtkYXk6ICd3ZWVrZGF5JyxcbiAgICAgICAgRTogJ2lzb1dlZWtkYXknLFxuICAgICAgICBpc293ZWVrZGF5czogJ2lzb1dlZWtkYXknLFxuICAgICAgICBpc293ZWVrZGF5OiAnaXNvV2Vla2RheScsXG4gICAgICAgIERERDogJ2RheU9mWWVhcicsXG4gICAgICAgIGRheW9meWVhcnM6ICdkYXlPZlllYXInLFxuICAgICAgICBkYXlvZnllYXI6ICdkYXlPZlllYXInLFxuICAgICAgICBoOiAnaG91cicsXG4gICAgICAgIGhvdXJzOiAnaG91cicsXG4gICAgICAgIGhvdXI6ICdob3VyJyxcbiAgICAgICAgbXM6ICdtaWxsaXNlY29uZCcsXG4gICAgICAgIG1pbGxpc2Vjb25kczogJ21pbGxpc2Vjb25kJyxcbiAgICAgICAgbWlsbGlzZWNvbmQ6ICdtaWxsaXNlY29uZCcsXG4gICAgICAgIG06ICdtaW51dGUnLFxuICAgICAgICBtaW51dGVzOiAnbWludXRlJyxcbiAgICAgICAgbWludXRlOiAnbWludXRlJyxcbiAgICAgICAgTTogJ21vbnRoJyxcbiAgICAgICAgbW9udGhzOiAnbW9udGgnLFxuICAgICAgICBtb250aDogJ21vbnRoJyxcbiAgICAgICAgUTogJ3F1YXJ0ZXInLFxuICAgICAgICBxdWFydGVyczogJ3F1YXJ0ZXInLFxuICAgICAgICBxdWFydGVyOiAncXVhcnRlcicsXG4gICAgICAgIHM6ICdzZWNvbmQnLFxuICAgICAgICBzZWNvbmRzOiAnc2Vjb25kJyxcbiAgICAgICAgc2Vjb25kOiAnc2Vjb25kJyxcbiAgICAgICAgZ2c6ICd3ZWVrWWVhcicsXG4gICAgICAgIHdlZWt5ZWFyczogJ3dlZWtZZWFyJyxcbiAgICAgICAgd2Vla3llYXI6ICd3ZWVrWWVhcicsXG4gICAgICAgIEdHOiAnaXNvV2Vla1llYXInLFxuICAgICAgICBpc293ZWVreWVhcnM6ICdpc29XZWVrWWVhcicsXG4gICAgICAgIGlzb3dlZWt5ZWFyOiAnaXNvV2Vla1llYXInLFxuICAgICAgICB3OiAnd2VlaycsXG4gICAgICAgIHdlZWtzOiAnd2VlaycsXG4gICAgICAgIHdlZWs6ICd3ZWVrJyxcbiAgICAgICAgVzogJ2lzb1dlZWsnLFxuICAgICAgICBpc293ZWVrczogJ2lzb1dlZWsnLFxuICAgICAgICBpc293ZWVrOiAnaXNvV2VlaycsXG4gICAgICAgIHk6ICd5ZWFyJyxcbiAgICAgICAgeWVhcnM6ICd5ZWFyJyxcbiAgICAgICAgeWVhcjogJ3llYXInLFxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBub3JtYWxpemVVbml0cyh1bml0cykge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHVuaXRzID09PSAnc3RyaW5nJ1xuICAgICAgICAgICAgPyBhbGlhc2VzW3VuaXRzXSB8fCBhbGlhc2VzW3VuaXRzLnRvTG93ZXJDYXNlKCldXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBub3JtYWxpemVPYmplY3RVbml0cyhpbnB1dE9iamVjdCkge1xuICAgICAgICB2YXIgbm9ybWFsaXplZElucHV0ID0ge30sXG4gICAgICAgICAgICBub3JtYWxpemVkUHJvcCxcbiAgICAgICAgICAgIHByb3A7XG5cbiAgICAgICAgZm9yIChwcm9wIGluIGlucHV0T2JqZWN0KSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duUHJvcChpbnB1dE9iamVjdCwgcHJvcCkpIHtcbiAgICAgICAgICAgICAgICBub3JtYWxpemVkUHJvcCA9IG5vcm1hbGl6ZVVuaXRzKHByb3ApO1xuICAgICAgICAgICAgICAgIGlmIChub3JtYWxpemVkUHJvcCkge1xuICAgICAgICAgICAgICAgICAgICBub3JtYWxpemVkSW5wdXRbbm9ybWFsaXplZFByb3BdID0gaW5wdXRPYmplY3RbcHJvcF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZWRJbnB1dDtcbiAgICB9XG5cbiAgICB2YXIgcHJpb3JpdGllcyA9IHtcbiAgICAgICAgZGF0ZTogOSxcbiAgICAgICAgZGF5OiAxMSxcbiAgICAgICAgd2Vla2RheTogMTEsXG4gICAgICAgIGlzb1dlZWtkYXk6IDExLFxuICAgICAgICBkYXlPZlllYXI6IDQsXG4gICAgICAgIGhvdXI6IDEzLFxuICAgICAgICBtaWxsaXNlY29uZDogMTYsXG4gICAgICAgIG1pbnV0ZTogMTQsXG4gICAgICAgIG1vbnRoOiA4LFxuICAgICAgICBxdWFydGVyOiA3LFxuICAgICAgICBzZWNvbmQ6IDE1LFxuICAgICAgICB3ZWVrWWVhcjogMSxcbiAgICAgICAgaXNvV2Vla1llYXI6IDEsXG4gICAgICAgIHdlZWs6IDUsXG4gICAgICAgIGlzb1dlZWs6IDUsXG4gICAgICAgIHllYXI6IDEsXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGdldFByaW9yaXRpemVkVW5pdHModW5pdHNPYmopIHtcbiAgICAgICAgdmFyIHVuaXRzID0gW10sXG4gICAgICAgICAgICB1O1xuICAgICAgICBmb3IgKHUgaW4gdW5pdHNPYmopIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wKHVuaXRzT2JqLCB1KSkge1xuICAgICAgICAgICAgICAgIHVuaXRzLnB1c2goeyB1bml0OiB1LCBwcmlvcml0eTogcHJpb3JpdGllc1t1XSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB1bml0cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYS5wcmlvcml0eSAtIGIucHJpb3JpdHk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdW5pdHM7XG4gICAgfVxuXG4gICAgdmFyIG1hdGNoMSA9IC9cXGQvLCAvLyAgICAgICAwIC0gOVxuICAgICAgICBtYXRjaDIgPSAvXFxkXFxkLywgLy8gICAgICAwMCAtIDk5XG4gICAgICAgIG1hdGNoMyA9IC9cXGR7M30vLCAvLyAgICAgMDAwIC0gOTk5XG4gICAgICAgIG1hdGNoNCA9IC9cXGR7NH0vLCAvLyAgICAwMDAwIC0gOTk5OVxuICAgICAgICBtYXRjaDYgPSAvWystXT9cXGR7Nn0vLCAvLyAtOTk5OTk5IC0gOTk5OTk5XG4gICAgICAgIG1hdGNoMXRvMiA9IC9cXGRcXGQ/LywgLy8gICAgICAgMCAtIDk5XG4gICAgICAgIG1hdGNoM3RvNCA9IC9cXGRcXGRcXGRcXGQ/LywgLy8gICAgIDk5OSAtIDk5OTlcbiAgICAgICAgbWF0Y2g1dG82ID0gL1xcZFxcZFxcZFxcZFxcZFxcZD8vLCAvLyAgIDk5OTk5IC0gOTk5OTk5XG4gICAgICAgIG1hdGNoMXRvMyA9IC9cXGR7MSwzfS8sIC8vICAgICAgIDAgLSA5OTlcbiAgICAgICAgbWF0Y2gxdG80ID0gL1xcZHsxLDR9LywgLy8gICAgICAgMCAtIDk5OTlcbiAgICAgICAgbWF0Y2gxdG82ID0gL1srLV0/XFxkezEsNn0vLCAvLyAtOTk5OTk5IC0gOTk5OTk5XG4gICAgICAgIG1hdGNoVW5zaWduZWQgPSAvXFxkKy8sIC8vICAgICAgIDAgLSBpbmZcbiAgICAgICAgbWF0Y2hTaWduZWQgPSAvWystXT9cXGQrLywgLy8gICAgLWluZiAtIGluZlxuICAgICAgICBtYXRjaE9mZnNldCA9IC9afFsrLV1cXGRcXGQ6P1xcZFxcZC9naSwgLy8gKzAwOjAwIC0wMDowMCArMDAwMCAtMDAwMCBvciBaXG4gICAgICAgIG1hdGNoU2hvcnRPZmZzZXQgPSAvWnxbKy1dXFxkXFxkKD86Oj9cXGRcXGQpPy9naSwgLy8gKzAwIC0wMCArMDA6MDAgLTAwOjAwICswMDAwIC0wMDAwIG9yIFpcbiAgICAgICAgbWF0Y2hUaW1lc3RhbXAgPSAvWystXT9cXGQrKFxcLlxcZHsxLDN9KT8vLCAvLyAxMjM0NTY3ODkgMTIzNDU2Nzg5LjEyM1xuICAgICAgICAvLyBhbnkgd29yZCAob3IgdHdvKSBjaGFyYWN0ZXJzIG9yIG51bWJlcnMgaW5jbHVkaW5nIHR3by90aHJlZSB3b3JkIG1vbnRoIGluIGFyYWJpYy5cbiAgICAgICAgLy8gaW5jbHVkZXMgc2NvdHRpc2ggZ2FlbGljIHR3byB3b3JkIGFuZCBoeXBoZW5hdGVkIG1vbnRoc1xuICAgICAgICBtYXRjaFdvcmQgPVxuICAgICAgICAgICAgL1swLTldezAsMjU2fVsnYS16XFx1MDBBMC1cXHUwNUZGXFx1MDcwMC1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRjA3XFx1RkYxMC1cXHVGRkVGXXsxLDI1Nn18W1xcdTA2MDAtXFx1MDZGRlxcL117MSwyNTZ9KFxccyo/W1xcdTA2MDAtXFx1MDZGRl17MSwyNTZ9KXsxLDJ9L2ksXG4gICAgICAgIG1hdGNoMXRvMk5vTGVhZGluZ1plcm8gPSAvXlsxLTldXFxkPy8sIC8vICAgICAgICAgMS05OVxuICAgICAgICBtYXRjaDF0bzJIYXNaZXJvID0gL14oWzEtOV1cXGR8XFxkKS8sIC8vICAgICAgICAgICAwLTk5XG4gICAgICAgIHJlZ2V4ZXM7XG5cbiAgICByZWdleGVzID0ge307XG5cbiAgICBmdW5jdGlvbiBhZGRSZWdleFRva2VuKHRva2VuLCByZWdleCwgc3RyaWN0UmVnZXgpIHtcbiAgICAgICAgcmVnZXhlc1t0b2tlbl0gPSBpc0Z1bmN0aW9uKHJlZ2V4KVxuICAgICAgICAgICAgPyByZWdleFxuICAgICAgICAgICAgOiBmdW5jdGlvbiAoaXNTdHJpY3QsIGxvY2FsZURhdGEpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpc1N0cmljdCAmJiBzdHJpY3RSZWdleCA/IHN0cmljdFJlZ2V4IDogcmVnZXg7XG4gICAgICAgICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0UGFyc2VSZWdleEZvclRva2VuKHRva2VuLCBjb25maWcpIHtcbiAgICAgICAgaWYgKCFoYXNPd25Qcm9wKHJlZ2V4ZXMsIHRva2VuKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAodW5lc2NhcGVGb3JtYXQodG9rZW4pKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZWdleGVzW3Rva2VuXShjb25maWcuX3N0cmljdCwgY29uZmlnLl9sb2NhbGUpO1xuICAgIH1cblxuICAgIC8vIENvZGUgZnJvbSBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzM1NjE0OTMvaXMtdGhlcmUtYS1yZWdleHAtZXNjYXBlLWZ1bmN0aW9uLWluLWphdmFzY3JpcHRcbiAgICBmdW5jdGlvbiB1bmVzY2FwZUZvcm1hdChzKSB7XG4gICAgICAgIHJldHVybiByZWdleEVzY2FwZShcbiAgICAgICAgICAgIHNcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgnXFxcXCcsICcnKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKFxuICAgICAgICAgICAgICAgICAgICAvXFxcXChcXFspfFxcXFwoXFxdKXxcXFsoW15cXF1cXFtdKilcXF18XFxcXCguKS9nLFxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAobWF0Y2hlZCwgcDEsIHAyLCBwMywgcDQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwMSB8fCBwMiB8fCBwMyB8fCBwNDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZWdleEVzY2FwZShzKSB7XG4gICAgICAgIHJldHVybiBzLnJlcGxhY2UoL1stXFwvXFxcXF4kKis/LigpfFtcXF17fV0vZywgJ1xcXFwkJicpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFic0Zsb29yKG51bWJlcikge1xuICAgICAgICBpZiAobnVtYmVyIDwgMCkge1xuICAgICAgICAgICAgLy8gLTAgLT4gMFxuICAgICAgICAgICAgcmV0dXJuIE1hdGguY2VpbChudW1iZXIpIHx8IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihudW1iZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdG9JbnQoYXJndW1lbnRGb3JDb2VyY2lvbikge1xuICAgICAgICB2YXIgY29lcmNlZE51bWJlciA9ICthcmd1bWVudEZvckNvZXJjaW9uLFxuICAgICAgICAgICAgdmFsdWUgPSAwO1xuXG4gICAgICAgIGlmIChjb2VyY2VkTnVtYmVyICE9PSAwICYmIGlzRmluaXRlKGNvZXJjZWROdW1iZXIpKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IGFic0Zsb29yKGNvZXJjZWROdW1iZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuICAgIHZhciB0b2tlbnMgPSB7fTtcblxuICAgIGZ1bmN0aW9uIGFkZFBhcnNlVG9rZW4odG9rZW4sIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBpLFxuICAgICAgICAgICAgZnVuYyA9IGNhbGxiYWNrLFxuICAgICAgICAgICAgdG9rZW5MZW47XG4gICAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0b2tlbiA9IFt0b2tlbl07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzTnVtYmVyKGNhbGxiYWNrKSkge1xuICAgICAgICAgICAgZnVuYyA9IGZ1bmN0aW9uIChpbnB1dCwgYXJyYXkpIHtcbiAgICAgICAgICAgICAgICBhcnJheVtjYWxsYmFja10gPSB0b0ludChpbnB1dCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHRva2VuTGVuID0gdG9rZW4ubGVuZ3RoO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgdG9rZW5MZW47IGkrKykge1xuICAgICAgICAgICAgdG9rZW5zW3Rva2VuW2ldXSA9IGZ1bmM7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhZGRXZWVrUGFyc2VUb2tlbih0b2tlbiwgY2FsbGJhY2spIHtcbiAgICAgICAgYWRkUGFyc2VUb2tlbih0b2tlbiwgZnVuY3Rpb24gKGlucHV0LCBhcnJheSwgY29uZmlnLCB0b2tlbikge1xuICAgICAgICAgICAgY29uZmlnLl93ID0gY29uZmlnLl93IHx8IHt9O1xuICAgICAgICAgICAgY2FsbGJhY2soaW5wdXQsIGNvbmZpZy5fdywgY29uZmlnLCB0b2tlbik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZFRpbWVUb0FycmF5RnJvbVRva2VuKHRva2VuLCBpbnB1dCwgY29uZmlnKSB7XG4gICAgICAgIGlmIChpbnB1dCAhPSBudWxsICYmIGhhc093blByb3AodG9rZW5zLCB0b2tlbikpIHtcbiAgICAgICAgICAgIHRva2Vuc1t0b2tlbl0oaW5wdXQsIGNvbmZpZy5fYSwgY29uZmlnLCB0b2tlbik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0xlYXBZZWFyKHllYXIpIHtcbiAgICAgICAgcmV0dXJuICh5ZWFyICUgNCA9PT0gMCAmJiB5ZWFyICUgMTAwICE9PSAwKSB8fCB5ZWFyICUgNDAwID09PSAwO1xuICAgIH1cblxuICAgIHZhciBZRUFSID0gMCxcbiAgICAgICAgTU9OVEggPSAxLFxuICAgICAgICBEQVRFID0gMixcbiAgICAgICAgSE9VUiA9IDMsXG4gICAgICAgIE1JTlVURSA9IDQsXG4gICAgICAgIFNFQ09ORCA9IDUsXG4gICAgICAgIE1JTExJU0VDT05EID0gNixcbiAgICAgICAgV0VFSyA9IDcsXG4gICAgICAgIFdFRUtEQVkgPSA4O1xuXG4gICAgLy8gRk9STUFUVElOR1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ1knLCAwLCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB5ID0gdGhpcy55ZWFyKCk7XG4gICAgICAgIHJldHVybiB5IDw9IDk5OTkgPyB6ZXJvRmlsbCh5LCA0KSA6ICcrJyArIHk7XG4gICAgfSk7XG5cbiAgICBhZGRGb3JtYXRUb2tlbigwLCBbJ1lZJywgMl0sIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMueWVhcigpICUgMTAwO1xuICAgIH0pO1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oMCwgWydZWVlZJywgNF0sIDAsICd5ZWFyJyk7XG4gICAgYWRkRm9ybWF0VG9rZW4oMCwgWydZWVlZWScsIDVdLCAwLCAneWVhcicpO1xuICAgIGFkZEZvcm1hdFRva2VuKDAsIFsnWVlZWVlZJywgNiwgdHJ1ZV0sIDAsICd5ZWFyJyk7XG5cbiAgICAvLyBQQVJTSU5HXG5cbiAgICBhZGRSZWdleFRva2VuKCdZJywgbWF0Y2hTaWduZWQpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ1lZJywgbWF0Y2gxdG8yLCBtYXRjaDIpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ1lZWVknLCBtYXRjaDF0bzQsIG1hdGNoNCk7XG4gICAgYWRkUmVnZXhUb2tlbignWVlZWVknLCBtYXRjaDF0bzYsIG1hdGNoNik7XG4gICAgYWRkUmVnZXhUb2tlbignWVlZWVlZJywgbWF0Y2gxdG82LCBtYXRjaDYpO1xuXG4gICAgYWRkUGFyc2VUb2tlbihbJ1lZWVlZJywgJ1lZWVlZWSddLCBZRUFSKTtcbiAgICBhZGRQYXJzZVRva2VuKCdZWVlZJywgZnVuY3Rpb24gKGlucHV0LCBhcnJheSkge1xuICAgICAgICBhcnJheVtZRUFSXSA9XG4gICAgICAgICAgICBpbnB1dC5sZW5ndGggPT09IDIgPyBob29rcy5wYXJzZVR3b0RpZ2l0WWVhcihpbnB1dCkgOiB0b0ludChpbnB1dCk7XG4gICAgfSk7XG4gICAgYWRkUGFyc2VUb2tlbignWVknLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5KSB7XG4gICAgICAgIGFycmF5W1lFQVJdID0gaG9va3MucGFyc2VUd29EaWdpdFllYXIoaW5wdXQpO1xuICAgIH0pO1xuICAgIGFkZFBhcnNlVG9rZW4oJ1knLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5KSB7XG4gICAgICAgIGFycmF5W1lFQVJdID0gcGFyc2VJbnQoaW5wdXQsIDEwKTtcbiAgICB9KTtcblxuICAgIC8vIEhFTFBFUlNcblxuICAgIGZ1bmN0aW9uIGRheXNJblllYXIoeWVhcikge1xuICAgICAgICByZXR1cm4gaXNMZWFwWWVhcih5ZWFyKSA/IDM2NiA6IDM2NTtcbiAgICB9XG5cbiAgICAvLyBIT09LU1xuXG4gICAgaG9va3MucGFyc2VUd29EaWdpdFllYXIgPSBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIHRvSW50KGlucHV0KSArICh0b0ludChpbnB1dCkgPiA2OCA/IDE5MDAgOiAyMDAwKTtcbiAgICB9O1xuXG4gICAgLy8gTU9NRU5UU1xuXG4gICAgdmFyIGdldFNldFllYXIgPSBtYWtlR2V0U2V0KCdGdWxsWWVhcicsIHRydWUpO1xuXG4gICAgZnVuY3Rpb24gZ2V0SXNMZWFwWWVhcigpIHtcbiAgICAgICAgcmV0dXJuIGlzTGVhcFllYXIodGhpcy55ZWFyKCkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1ha2VHZXRTZXQodW5pdCwga2VlcFRpbWUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHZhbHVlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBzZXQkMSh0aGlzLCB1bml0LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaG9va3MudXBkYXRlT2Zmc2V0KHRoaXMsIGtlZXBUaW1lKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdldCh0aGlzLCB1bml0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXQobW9tLCB1bml0KSB7XG4gICAgICAgIGlmICghbW9tLmlzVmFsaWQoKSkge1xuICAgICAgICAgICAgcmV0dXJuIE5hTjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBkID0gbW9tLl9kLFxuICAgICAgICAgICAgaXNVVEMgPSBtb20uX2lzVVRDO1xuXG4gICAgICAgIHN3aXRjaCAodW5pdCkge1xuICAgICAgICAgICAgY2FzZSAnTWlsbGlzZWNvbmRzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNVVEMgPyBkLmdldFVUQ01pbGxpc2Vjb25kcygpIDogZC5nZXRNaWxsaXNlY29uZHMoKTtcbiAgICAgICAgICAgIGNhc2UgJ1NlY29uZHMnOlxuICAgICAgICAgICAgICAgIHJldHVybiBpc1VUQyA/IGQuZ2V0VVRDU2Vjb25kcygpIDogZC5nZXRTZWNvbmRzKCk7XG4gICAgICAgICAgICBjYXNlICdNaW51dGVzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNVVEMgPyBkLmdldFVUQ01pbnV0ZXMoKSA6IGQuZ2V0TWludXRlcygpO1xuICAgICAgICAgICAgY2FzZSAnSG91cnMnOlxuICAgICAgICAgICAgICAgIHJldHVybiBpc1VUQyA/IGQuZ2V0VVRDSG91cnMoKSA6IGQuZ2V0SG91cnMoKTtcbiAgICAgICAgICAgIGNhc2UgJ0RhdGUnOlxuICAgICAgICAgICAgICAgIHJldHVybiBpc1VUQyA/IGQuZ2V0VVRDRGF0ZSgpIDogZC5nZXREYXRlKCk7XG4gICAgICAgICAgICBjYXNlICdEYXknOlxuICAgICAgICAgICAgICAgIHJldHVybiBpc1VUQyA/IGQuZ2V0VVRDRGF5KCkgOiBkLmdldERheSgpO1xuICAgICAgICAgICAgY2FzZSAnTW9udGgnOlxuICAgICAgICAgICAgICAgIHJldHVybiBpc1VUQyA/IGQuZ2V0VVRDTW9udGgoKSA6IGQuZ2V0TW9udGgoKTtcbiAgICAgICAgICAgIGNhc2UgJ0Z1bGxZZWFyJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNVVEMgPyBkLmdldFVUQ0Z1bGxZZWFyKCkgOiBkLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBOYU47IC8vIEp1c3QgaW4gY2FzZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0JDEobW9tLCB1bml0LCB2YWx1ZSkge1xuICAgICAgICB2YXIgZCwgaXNVVEMsIHllYXIsIG1vbnRoLCBkYXRlO1xuXG4gICAgICAgIGlmICghbW9tLmlzVmFsaWQoKSB8fCBpc05hTih2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGQgPSBtb20uX2Q7XG4gICAgICAgIGlzVVRDID0gbW9tLl9pc1VUQztcblxuICAgICAgICBzd2l0Y2ggKHVuaXQpIHtcbiAgICAgICAgICAgIGNhc2UgJ01pbGxpc2Vjb25kcyc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZvaWQgKGlzVVRDXG4gICAgICAgICAgICAgICAgICAgID8gZC5zZXRVVENNaWxsaXNlY29uZHModmFsdWUpXG4gICAgICAgICAgICAgICAgICAgIDogZC5zZXRNaWxsaXNlY29uZHModmFsdWUpKTtcbiAgICAgICAgICAgIGNhc2UgJ1NlY29uZHMnOlxuICAgICAgICAgICAgICAgIHJldHVybiB2b2lkIChpc1VUQyA/IGQuc2V0VVRDU2Vjb25kcyh2YWx1ZSkgOiBkLnNldFNlY29uZHModmFsdWUpKTtcbiAgICAgICAgICAgIGNhc2UgJ01pbnV0ZXMnOlxuICAgICAgICAgICAgICAgIHJldHVybiB2b2lkIChpc1VUQyA/IGQuc2V0VVRDTWludXRlcyh2YWx1ZSkgOiBkLnNldE1pbnV0ZXModmFsdWUpKTtcbiAgICAgICAgICAgIGNhc2UgJ0hvdXJzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gdm9pZCAoaXNVVEMgPyBkLnNldFVUQ0hvdXJzKHZhbHVlKSA6IGQuc2V0SG91cnModmFsdWUpKTtcbiAgICAgICAgICAgIGNhc2UgJ0RhdGUnOlxuICAgICAgICAgICAgICAgIHJldHVybiB2b2lkIChpc1VUQyA/IGQuc2V0VVRDRGF0ZSh2YWx1ZSkgOiBkLnNldERhdGUodmFsdWUpKTtcbiAgICAgICAgICAgIC8vIGNhc2UgJ0RheSc6IC8vIE5vdCByZWFsXG4gICAgICAgICAgICAvLyAgICByZXR1cm4gdm9pZCAoaXNVVEMgPyBkLnNldFVUQ0RheSh2YWx1ZSkgOiBkLnNldERheSh2YWx1ZSkpO1xuICAgICAgICAgICAgLy8gY2FzZSAnTW9udGgnOiAvLyBOb3QgdXNlZCBiZWNhdXNlIHdlIG5lZWQgdG8gcGFzcyB0d28gdmFyaWFibGVzXG4gICAgICAgICAgICAvLyAgICAgcmV0dXJuIHZvaWQgKGlzVVRDID8gZC5zZXRVVENNb250aCh2YWx1ZSkgOiBkLnNldE1vbnRoKHZhbHVlKSk7XG4gICAgICAgICAgICBjYXNlICdGdWxsWWVhcic6XG4gICAgICAgICAgICAgICAgYnJlYWs7IC8vIFNlZSBiZWxvdyAuLi5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuOyAvLyBKdXN0IGluIGNhc2VcbiAgICAgICAgfVxuXG4gICAgICAgIHllYXIgPSB2YWx1ZTtcbiAgICAgICAgbW9udGggPSBtb20ubW9udGgoKTtcbiAgICAgICAgZGF0ZSA9IG1vbS5kYXRlKCk7XG4gICAgICAgIGRhdGUgPSBkYXRlID09PSAyOSAmJiBtb250aCA9PT0gMSAmJiAhaXNMZWFwWWVhcih5ZWFyKSA/IDI4IDogZGF0ZTtcbiAgICAgICAgdm9pZCAoaXNVVENcbiAgICAgICAgICAgID8gZC5zZXRVVENGdWxsWWVhcih5ZWFyLCBtb250aCwgZGF0ZSlcbiAgICAgICAgICAgIDogZC5zZXRGdWxsWWVhcih5ZWFyLCBtb250aCwgZGF0ZSkpO1xuICAgIH1cblxuICAgIC8vIE1PTUVOVFNcblxuICAgIGZ1bmN0aW9uIHN0cmluZ0dldCh1bml0cykge1xuICAgICAgICB1bml0cyA9IG5vcm1hbGl6ZVVuaXRzKHVuaXRzKTtcbiAgICAgICAgaWYgKGlzRnVuY3Rpb24odGhpc1t1bml0c10pKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpc1t1bml0c10oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzdHJpbmdTZXQodW5pdHMsIHZhbHVlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdW5pdHMgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB1bml0cyA9IG5vcm1hbGl6ZU9iamVjdFVuaXRzKHVuaXRzKTtcbiAgICAgICAgICAgIHZhciBwcmlvcml0aXplZCA9IGdldFByaW9yaXRpemVkVW5pdHModW5pdHMpLFxuICAgICAgICAgICAgICAgIGksXG4gICAgICAgICAgICAgICAgcHJpb3JpdGl6ZWRMZW4gPSBwcmlvcml0aXplZC5sZW5ndGg7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcHJpb3JpdGl6ZWRMZW47IGkrKykge1xuICAgICAgICAgICAgICAgIHRoaXNbcHJpb3JpdGl6ZWRbaV0udW5pdF0odW5pdHNbcHJpb3JpdGl6ZWRbaV0udW5pdF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdW5pdHMgPSBub3JtYWxpemVVbml0cyh1bml0cyk7XG4gICAgICAgICAgICBpZiAoaXNGdW5jdGlvbih0aGlzW3VuaXRzXSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1t1bml0c10odmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1vZChuLCB4KSB7XG4gICAgICAgIHJldHVybiAoKG4gJSB4KSArIHgpICUgeDtcbiAgICB9XG5cbiAgICB2YXIgaW5kZXhPZjtcblxuICAgIGlmIChBcnJheS5wcm90b3R5cGUuaW5kZXhPZikge1xuICAgICAgICBpbmRleE9mID0gQXJyYXkucHJvdG90eXBlLmluZGV4T2Y7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaW5kZXhPZiA9IGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgICAvLyBJIGtub3dcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpc1tpXSA9PT0gbykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGF5c0luTW9udGgoeWVhciwgbW9udGgpIHtcbiAgICAgICAgaWYgKGlzTmFOKHllYXIpIHx8IGlzTmFOKG1vbnRoKSkge1xuICAgICAgICAgICAgcmV0dXJuIE5hTjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbW9kTW9udGggPSBtb2QobW9udGgsIDEyKTtcbiAgICAgICAgeWVhciArPSAobW9udGggLSBtb2RNb250aCkgLyAxMjtcbiAgICAgICAgcmV0dXJuIG1vZE1vbnRoID09PSAxXG4gICAgICAgICAgICA/IGlzTGVhcFllYXIoeWVhcilcbiAgICAgICAgICAgICAgICA/IDI5XG4gICAgICAgICAgICAgICAgOiAyOFxuICAgICAgICAgICAgOiAzMSAtICgobW9kTW9udGggJSA3KSAlIDIpO1xuICAgIH1cblxuICAgIC8vIEZPUk1BVFRJTkdcblxuICAgIGFkZEZvcm1hdFRva2VuKCdNJywgWydNTScsIDJdLCAnTW8nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1vbnRoKCkgKyAxO1xuICAgIH0pO1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ01NTScsIDAsIDAsIGZ1bmN0aW9uIChmb3JtYXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLm1vbnRoc1Nob3J0KHRoaXMsIGZvcm1hdCk7XG4gICAgfSk7XG5cbiAgICBhZGRGb3JtYXRUb2tlbignTU1NTScsIDAsIDAsIGZ1bmN0aW9uIChmb3JtYXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLm1vbnRocyh0aGlzLCBmb3JtYXQpO1xuICAgIH0pO1xuXG4gICAgLy8gUEFSU0lOR1xuXG4gICAgYWRkUmVnZXhUb2tlbignTScsIG1hdGNoMXRvMiwgbWF0Y2gxdG8yTm9MZWFkaW5nWmVybyk7XG4gICAgYWRkUmVnZXhUb2tlbignTU0nLCBtYXRjaDF0bzIsIG1hdGNoMik7XG4gICAgYWRkUmVnZXhUb2tlbignTU1NJywgZnVuY3Rpb24gKGlzU3RyaWN0LCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5tb250aHNTaG9ydFJlZ2V4KGlzU3RyaWN0KTtcbiAgICB9KTtcbiAgICBhZGRSZWdleFRva2VuKCdNTU1NJywgZnVuY3Rpb24gKGlzU3RyaWN0LCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5tb250aHNSZWdleChpc1N0cmljdCk7XG4gICAgfSk7XG5cbiAgICBhZGRQYXJzZVRva2VuKFsnTScsICdNTSddLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5KSB7XG4gICAgICAgIGFycmF5W01PTlRIXSA9IHRvSW50KGlucHV0KSAtIDE7XG4gICAgfSk7XG5cbiAgICBhZGRQYXJzZVRva2VuKFsnTU1NJywgJ01NTU0nXSwgZnVuY3Rpb24gKGlucHV0LCBhcnJheSwgY29uZmlnLCB0b2tlbikge1xuICAgICAgICB2YXIgbW9udGggPSBjb25maWcuX2xvY2FsZS5tb250aHNQYXJzZShpbnB1dCwgdG9rZW4sIGNvbmZpZy5fc3RyaWN0KTtcbiAgICAgICAgLy8gaWYgd2UgZGlkbid0IGZpbmQgYSBtb250aCBuYW1lLCBtYXJrIHRoZSBkYXRlIGFzIGludmFsaWQuXG4gICAgICAgIGlmIChtb250aCAhPSBudWxsKSB7XG4gICAgICAgICAgICBhcnJheVtNT05USF0gPSBtb250aDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLmludmFsaWRNb250aCA9IGlucHV0O1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBMT0NBTEVTXG5cbiAgICB2YXIgZGVmYXVsdExvY2FsZU1vbnRocyA9XG4gICAgICAgICAgICAnSmFudWFyeV9GZWJydWFyeV9NYXJjaF9BcHJpbF9NYXlfSnVuZV9KdWx5X0F1Z3VzdF9TZXB0ZW1iZXJfT2N0b2Jlcl9Ob3ZlbWJlcl9EZWNlbWJlcicuc3BsaXQoXG4gICAgICAgICAgICAgICAgJ18nXG4gICAgICAgICAgICApLFxuICAgICAgICBkZWZhdWx0TG9jYWxlTW9udGhzU2hvcnQgPVxuICAgICAgICAgICAgJ0phbl9GZWJfTWFyX0Fwcl9NYXlfSnVuX0p1bF9BdWdfU2VwX09jdF9Ob3ZfRGVjJy5zcGxpdCgnXycpLFxuICAgICAgICBNT05USFNfSU5fRk9STUFUID0gL0Rbb0RdPyhcXFtbXlxcW1xcXV0qXFxdfFxccykrTU1NTT8vLFxuICAgICAgICBkZWZhdWx0TW9udGhzU2hvcnRSZWdleCA9IG1hdGNoV29yZCxcbiAgICAgICAgZGVmYXVsdE1vbnRoc1JlZ2V4ID0gbWF0Y2hXb3JkO1xuXG4gICAgZnVuY3Rpb24gbG9jYWxlTW9udGhzKG0sIGZvcm1hdCkge1xuICAgICAgICBpZiAoIW0pIHtcbiAgICAgICAgICAgIHJldHVybiBpc0FycmF5KHRoaXMuX21vbnRocylcbiAgICAgICAgICAgICAgICA/IHRoaXMuX21vbnRoc1xuICAgICAgICAgICAgICAgIDogdGhpcy5fbW9udGhzWydzdGFuZGFsb25lJ107XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlzQXJyYXkodGhpcy5fbW9udGhzKVxuICAgICAgICAgICAgPyB0aGlzLl9tb250aHNbbS5tb250aCgpXVxuICAgICAgICAgICAgOiB0aGlzLl9tb250aHNbXG4gICAgICAgICAgICAgICAgICAodGhpcy5fbW9udGhzLmlzRm9ybWF0IHx8IE1PTlRIU19JTl9GT1JNQVQpLnRlc3QoZm9ybWF0KVxuICAgICAgICAgICAgICAgICAgICAgID8gJ2Zvcm1hdCdcbiAgICAgICAgICAgICAgICAgICAgICA6ICdzdGFuZGFsb25lJ1xuICAgICAgICAgICAgICBdW20ubW9udGgoKV07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbG9jYWxlTW9udGhzU2hvcnQobSwgZm9ybWF0KSB7XG4gICAgICAgIGlmICghbSkge1xuICAgICAgICAgICAgcmV0dXJuIGlzQXJyYXkodGhpcy5fbW9udGhzU2hvcnQpXG4gICAgICAgICAgICAgICAgPyB0aGlzLl9tb250aHNTaG9ydFxuICAgICAgICAgICAgICAgIDogdGhpcy5fbW9udGhzU2hvcnRbJ3N0YW5kYWxvbmUnXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXNBcnJheSh0aGlzLl9tb250aHNTaG9ydClcbiAgICAgICAgICAgID8gdGhpcy5fbW9udGhzU2hvcnRbbS5tb250aCgpXVxuICAgICAgICAgICAgOiB0aGlzLl9tb250aHNTaG9ydFtcbiAgICAgICAgICAgICAgICAgIE1PTlRIU19JTl9GT1JNQVQudGVzdChmb3JtYXQpID8gJ2Zvcm1hdCcgOiAnc3RhbmRhbG9uZSdcbiAgICAgICAgICAgICAgXVttLm1vbnRoKCldO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZVN0cmljdFBhcnNlKG1vbnRoTmFtZSwgZm9ybWF0LCBzdHJpY3QpIHtcbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgICBpaSxcbiAgICAgICAgICAgIG1vbSxcbiAgICAgICAgICAgIGxsYyA9IG1vbnRoTmFtZS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoIXRoaXMuX21vbnRoc1BhcnNlKSB7XG4gICAgICAgICAgICAvLyB0aGlzIGlzIG5vdCB1c2VkXG4gICAgICAgICAgICB0aGlzLl9tb250aHNQYXJzZSA9IFtdO1xuICAgICAgICAgICAgdGhpcy5fbG9uZ01vbnRoc1BhcnNlID0gW107XG4gICAgICAgICAgICB0aGlzLl9zaG9ydE1vbnRoc1BhcnNlID0gW107XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgMTI7ICsraSkge1xuICAgICAgICAgICAgICAgIG1vbSA9IGNyZWF0ZVVUQyhbMjAwMCwgaV0pO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Nob3J0TW9udGhzUGFyc2VbaV0gPSB0aGlzLm1vbnRoc1Nob3J0KFxuICAgICAgICAgICAgICAgICAgICBtb20sXG4gICAgICAgICAgICAgICAgICAgICcnXG4gICAgICAgICAgICAgICAgKS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2xvbmdNb250aHNQYXJzZVtpXSA9IHRoaXMubW9udGhzKG1vbSwgJycpLnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3RyaWN0KSB7XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSAnTU1NJykge1xuICAgICAgICAgICAgICAgIGlpID0gaW5kZXhPZi5jYWxsKHRoaXMuX3Nob3J0TW9udGhzUGFyc2UsIGxsYyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlpICE9PSAtMSA/IGlpIDogbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWkgPSBpbmRleE9mLmNhbGwodGhpcy5fbG9uZ01vbnRoc1BhcnNlLCBsbGMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBpaSAhPT0gLTEgPyBpaSA6IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSAnTU1NJykge1xuICAgICAgICAgICAgICAgIGlpID0gaW5kZXhPZi5jYWxsKHRoaXMuX3Nob3J0TW9udGhzUGFyc2UsIGxsYyk7XG4gICAgICAgICAgICAgICAgaWYgKGlpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaWk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlpID0gaW5kZXhPZi5jYWxsKHRoaXMuX2xvbmdNb250aHNQYXJzZSwgbGxjKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaWkgIT09IC0xID8gaWkgOiBudWxsO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpaSA9IGluZGV4T2YuY2FsbCh0aGlzLl9sb25nTW9udGhzUGFyc2UsIGxsYyk7XG4gICAgICAgICAgICAgICAgaWYgKGlpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaWk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlpID0gaW5kZXhPZi5jYWxsKHRoaXMuX3Nob3J0TW9udGhzUGFyc2UsIGxsYyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlpICE9PSAtMSA/IGlpIDogbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxvY2FsZU1vbnRoc1BhcnNlKG1vbnRoTmFtZSwgZm9ybWF0LCBzdHJpY3QpIHtcbiAgICAgICAgdmFyIGksIG1vbSwgcmVnZXg7XG5cbiAgICAgICAgaWYgKHRoaXMuX21vbnRoc1BhcnNlRXhhY3QpIHtcbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVTdHJpY3RQYXJzZS5jYWxsKHRoaXMsIG1vbnRoTmFtZSwgZm9ybWF0LCBzdHJpY3QpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLl9tb250aHNQYXJzZSkge1xuICAgICAgICAgICAgdGhpcy5fbW9udGhzUGFyc2UgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuX2xvbmdNb250aHNQYXJzZSA9IFtdO1xuICAgICAgICAgICAgdGhpcy5fc2hvcnRNb250aHNQYXJzZSA9IFtdO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVE9ETzogYWRkIHNvcnRpbmdcbiAgICAgICAgLy8gU29ydGluZyBtYWtlcyBzdXJlIGlmIG9uZSBtb250aCAob3IgYWJicikgaXMgYSBwcmVmaXggb2YgYW5vdGhlclxuICAgICAgICAvLyBzZWUgc29ydGluZyBpbiBjb21wdXRlTW9udGhzUGFyc2VcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IDEyOyBpKyspIHtcbiAgICAgICAgICAgIC8vIG1ha2UgdGhlIHJlZ2V4IGlmIHdlIGRvbid0IGhhdmUgaXQgYWxyZWFkeVxuICAgICAgICAgICAgbW9tID0gY3JlYXRlVVRDKFsyMDAwLCBpXSk7XG4gICAgICAgICAgICBpZiAoc3RyaWN0ICYmICF0aGlzLl9sb25nTW9udGhzUGFyc2VbaV0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9sb25nTW9udGhzUGFyc2VbaV0gPSBuZXcgUmVnRXhwKFxuICAgICAgICAgICAgICAgICAgICAnXicgKyB0aGlzLm1vbnRocyhtb20sICcnKS5yZXBsYWNlKCcuJywgJycpICsgJyQnLFxuICAgICAgICAgICAgICAgICAgICAnaSdcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Nob3J0TW9udGhzUGFyc2VbaV0gPSBuZXcgUmVnRXhwKFxuICAgICAgICAgICAgICAgICAgICAnXicgKyB0aGlzLm1vbnRoc1Nob3J0KG1vbSwgJycpLnJlcGxhY2UoJy4nLCAnJykgKyAnJCcsXG4gICAgICAgICAgICAgICAgICAgICdpJ1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXN0cmljdCAmJiAhdGhpcy5fbW9udGhzUGFyc2VbaV0pIHtcbiAgICAgICAgICAgICAgICByZWdleCA9XG4gICAgICAgICAgICAgICAgICAgICdeJyArIHRoaXMubW9udGhzKG1vbSwgJycpICsgJ3xeJyArIHRoaXMubW9udGhzU2hvcnQobW9tLCAnJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9udGhzUGFyc2VbaV0gPSBuZXcgUmVnRXhwKHJlZ2V4LnJlcGxhY2UoJy4nLCAnJyksICdpJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyB0ZXN0IHRoZSByZWdleFxuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIHN0cmljdCAmJlxuICAgICAgICAgICAgICAgIGZvcm1hdCA9PT0gJ01NTU0nICYmXG4gICAgICAgICAgICAgICAgdGhpcy5fbG9uZ01vbnRoc1BhcnNlW2ldLnRlc3QobW9udGhOYW1lKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgICAgIHN0cmljdCAmJlxuICAgICAgICAgICAgICAgIGZvcm1hdCA9PT0gJ01NTScgJiZcbiAgICAgICAgICAgICAgICB0aGlzLl9zaG9ydE1vbnRoc1BhcnNlW2ldLnRlc3QobW9udGhOYW1lKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCFzdHJpY3QgJiYgdGhpcy5fbW9udGhzUGFyc2VbaV0udGVzdChtb250aE5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBNT01FTlRTXG5cbiAgICBmdW5jdGlvbiBzZXRNb250aChtb20sIHZhbHVlKSB7XG4gICAgICAgIGlmICghbW9tLmlzVmFsaWQoKSkge1xuICAgICAgICAgICAgLy8gTm8gb3BcbiAgICAgICAgICAgIHJldHVybiBtb207XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgaWYgKC9eXFxkKyQvLnRlc3QodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB0b0ludCh2YWx1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gbW9tLmxvY2FsZURhdGEoKS5tb250aHNQYXJzZSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgLy8gVE9ETzogQW5vdGhlciBzaWxlbnQgZmFpbHVyZT9cbiAgICAgICAgICAgICAgICBpZiAoIWlzTnVtYmVyKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbW9tO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBtb250aCA9IHZhbHVlLFxuICAgICAgICAgICAgZGF0ZSA9IG1vbS5kYXRlKCk7XG5cbiAgICAgICAgZGF0ZSA9IGRhdGUgPCAyOSA/IGRhdGUgOiBNYXRoLm1pbihkYXRlLCBkYXlzSW5Nb250aChtb20ueWVhcigpLCBtb250aCkpO1xuICAgICAgICB2b2lkIChtb20uX2lzVVRDXG4gICAgICAgICAgICA/IG1vbS5fZC5zZXRVVENNb250aChtb250aCwgZGF0ZSlcbiAgICAgICAgICAgIDogbW9tLl9kLnNldE1vbnRoKG1vbnRoLCBkYXRlKSk7XG4gICAgICAgIHJldHVybiBtb207XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0U2V0TW9udGgodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlICE9IG51bGwpIHtcbiAgICAgICAgICAgIHNldE1vbnRoKHRoaXMsIHZhbHVlKTtcbiAgICAgICAgICAgIGhvb2tzLnVwZGF0ZU9mZnNldCh0aGlzLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGdldCh0aGlzLCAnTW9udGgnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldERheXNJbk1vbnRoKCkge1xuICAgICAgICByZXR1cm4gZGF5c0luTW9udGgodGhpcy55ZWFyKCksIHRoaXMubW9udGgoKSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbW9udGhzU2hvcnRSZWdleChpc1N0cmljdCkge1xuICAgICAgICBpZiAodGhpcy5fbW9udGhzUGFyc2VFeGFjdCkge1xuICAgICAgICAgICAgaWYgKCFoYXNPd25Qcm9wKHRoaXMsICdfbW9udGhzUmVnZXgnKSkge1xuICAgICAgICAgICAgICAgIGNvbXB1dGVNb250aHNQYXJzZS5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzU3RyaWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21vbnRoc1Nob3J0U3RyaWN0UmVnZXg7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9tb250aHNTaG9ydFJlZ2V4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFoYXNPd25Qcm9wKHRoaXMsICdfbW9udGhzU2hvcnRSZWdleCcpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9udGhzU2hvcnRSZWdleCA9IGRlZmF1bHRNb250aHNTaG9ydFJlZ2V4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21vbnRoc1Nob3J0U3RyaWN0UmVnZXggJiYgaXNTdHJpY3RcbiAgICAgICAgICAgICAgICA/IHRoaXMuX21vbnRoc1Nob3J0U3RyaWN0UmVnZXhcbiAgICAgICAgICAgICAgICA6IHRoaXMuX21vbnRoc1Nob3J0UmVnZXg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtb250aHNSZWdleChpc1N0cmljdCkge1xuICAgICAgICBpZiAodGhpcy5fbW9udGhzUGFyc2VFeGFjdCkge1xuICAgICAgICAgICAgaWYgKCFoYXNPd25Qcm9wKHRoaXMsICdfbW9udGhzUmVnZXgnKSkge1xuICAgICAgICAgICAgICAgIGNvbXB1dGVNb250aHNQYXJzZS5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzU3RyaWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21vbnRoc1N0cmljdFJlZ2V4O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fbW9udGhzUmVnZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoIWhhc093blByb3AodGhpcywgJ19tb250aHNSZWdleCcpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9udGhzUmVnZXggPSBkZWZhdWx0TW9udGhzUmVnZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbW9udGhzU3RyaWN0UmVnZXggJiYgaXNTdHJpY3RcbiAgICAgICAgICAgICAgICA/IHRoaXMuX21vbnRoc1N0cmljdFJlZ2V4XG4gICAgICAgICAgICAgICAgOiB0aGlzLl9tb250aHNSZWdleDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbXB1dGVNb250aHNQYXJzZSgpIHtcbiAgICAgICAgZnVuY3Rpb24gY21wTGVuUmV2KGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBiLmxlbmd0aCAtIGEubGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHNob3J0UGllY2VzID0gW10sXG4gICAgICAgICAgICBsb25nUGllY2VzID0gW10sXG4gICAgICAgICAgICBtaXhlZFBpZWNlcyA9IFtdLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIG1vbSxcbiAgICAgICAgICAgIHNob3J0UCxcbiAgICAgICAgICAgIGxvbmdQO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgMTI7IGkrKykge1xuICAgICAgICAgICAgLy8gbWFrZSB0aGUgcmVnZXggaWYgd2UgZG9uJ3QgaGF2ZSBpdCBhbHJlYWR5XG4gICAgICAgICAgICBtb20gPSBjcmVhdGVVVEMoWzIwMDAsIGldKTtcbiAgICAgICAgICAgIHNob3J0UCA9IHJlZ2V4RXNjYXBlKHRoaXMubW9udGhzU2hvcnQobW9tLCAnJykpO1xuICAgICAgICAgICAgbG9uZ1AgPSByZWdleEVzY2FwZSh0aGlzLm1vbnRocyhtb20sICcnKSk7XG4gICAgICAgICAgICBzaG9ydFBpZWNlcy5wdXNoKHNob3J0UCk7XG4gICAgICAgICAgICBsb25nUGllY2VzLnB1c2gobG9uZ1ApO1xuICAgICAgICAgICAgbWl4ZWRQaWVjZXMucHVzaChsb25nUCk7XG4gICAgICAgICAgICBtaXhlZFBpZWNlcy5wdXNoKHNob3J0UCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gU29ydGluZyBtYWtlcyBzdXJlIGlmIG9uZSBtb250aCAob3IgYWJicikgaXMgYSBwcmVmaXggb2YgYW5vdGhlciBpdFxuICAgICAgICAvLyB3aWxsIG1hdGNoIHRoZSBsb25nZXIgcGllY2UuXG4gICAgICAgIHNob3J0UGllY2VzLnNvcnQoY21wTGVuUmV2KTtcbiAgICAgICAgbG9uZ1BpZWNlcy5zb3J0KGNtcExlblJldik7XG4gICAgICAgIG1peGVkUGllY2VzLnNvcnQoY21wTGVuUmV2KTtcblxuICAgICAgICB0aGlzLl9tb250aHNSZWdleCA9IG5ldyBSZWdFeHAoJ14oJyArIG1peGVkUGllY2VzLmpvaW4oJ3wnKSArICcpJywgJ2knKTtcbiAgICAgICAgdGhpcy5fbW9udGhzU2hvcnRSZWdleCA9IHRoaXMuX21vbnRoc1JlZ2V4O1xuICAgICAgICB0aGlzLl9tb250aHNTdHJpY3RSZWdleCA9IG5ldyBSZWdFeHAoXG4gICAgICAgICAgICAnXignICsgbG9uZ1BpZWNlcy5qb2luKCd8JykgKyAnKScsXG4gICAgICAgICAgICAnaSdcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5fbW9udGhzU2hvcnRTdHJpY3RSZWdleCA9IG5ldyBSZWdFeHAoXG4gICAgICAgICAgICAnXignICsgc2hvcnRQaWVjZXMuam9pbignfCcpICsgJyknLFxuICAgICAgICAgICAgJ2knXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlRGF0ZSh5LCBtLCBkLCBoLCBNLCBzLCBtcykge1xuICAgICAgICAvLyBjYW4ndCBqdXN0IGFwcGx5KCkgdG8gY3JlYXRlIGEgZGF0ZTpcbiAgICAgICAgLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xLzE4MTM0OFxuICAgICAgICB2YXIgZGF0ZTtcbiAgICAgICAgLy8gdGhlIGRhdGUgY29uc3RydWN0b3IgcmVtYXBzIHllYXJzIDAtOTkgdG8gMTkwMC0xOTk5XG4gICAgICAgIGlmICh5IDwgMTAwICYmIHkgPj0gMCkge1xuICAgICAgICAgICAgLy8gcHJlc2VydmUgbGVhcCB5ZWFycyB1c2luZyBhIGZ1bGwgNDAwIHllYXIgY3ljbGUsIHRoZW4gcmVzZXRcbiAgICAgICAgICAgIGRhdGUgPSBuZXcgRGF0ZSh5ICsgNDAwLCBtLCBkLCBoLCBNLCBzLCBtcyk7XG4gICAgICAgICAgICBpZiAoaXNGaW5pdGUoZGF0ZS5nZXRGdWxsWWVhcigpKSkge1xuICAgICAgICAgICAgICAgIGRhdGUuc2V0RnVsbFllYXIoeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkYXRlID0gbmV3IERhdGUoeSwgbSwgZCwgaCwgTSwgcywgbXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlVVRDRGF0ZSh5KSB7XG4gICAgICAgIHZhciBkYXRlLCBhcmdzO1xuICAgICAgICAvLyB0aGUgRGF0ZS5VVEMgZnVuY3Rpb24gcmVtYXBzIHllYXJzIDAtOTkgdG8gMTkwMC0xOTk5XG4gICAgICAgIGlmICh5IDwgMTAwICYmIHkgPj0gMCkge1xuICAgICAgICAgICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAvLyBwcmVzZXJ2ZSBsZWFwIHllYXJzIHVzaW5nIGEgZnVsbCA0MDAgeWVhciBjeWNsZSwgdGhlbiByZXNldFxuICAgICAgICAgICAgYXJnc1swXSA9IHkgKyA0MDA7XG4gICAgICAgICAgICBkYXRlID0gbmV3IERhdGUoRGF0ZS5VVEMuYXBwbHkobnVsbCwgYXJncykpO1xuICAgICAgICAgICAgaWYgKGlzRmluaXRlKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSkpIHtcbiAgICAgICAgICAgICAgICBkYXRlLnNldFVUQ0Z1bGxZZWFyKHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKERhdGUuVVRDLmFwcGx5KG51bGwsIGFyZ3VtZW50cykpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfVxuXG4gICAgLy8gc3RhcnQtb2YtZmlyc3Qtd2VlayAtIHN0YXJ0LW9mLXllYXJcbiAgICBmdW5jdGlvbiBmaXJzdFdlZWtPZmZzZXQoeWVhciwgZG93LCBkb3kpIHtcbiAgICAgICAgdmFyIC8vIGZpcnN0LXdlZWsgZGF5IC0tIHdoaWNoIGphbnVhcnkgaXMgYWx3YXlzIGluIHRoZSBmaXJzdCB3ZWVrICg0IGZvciBpc28sIDEgZm9yIG90aGVyKVxuICAgICAgICAgICAgZndkID0gNyArIGRvdyAtIGRveSxcbiAgICAgICAgICAgIC8vIGZpcnN0LXdlZWsgZGF5IGxvY2FsIHdlZWtkYXkgLS0gd2hpY2ggbG9jYWwgd2Vla2RheSBpcyBmd2RcbiAgICAgICAgICAgIGZ3ZGx3ID0gKDcgKyBjcmVhdGVVVENEYXRlKHllYXIsIDAsIGZ3ZCkuZ2V0VVRDRGF5KCkgLSBkb3cpICUgNztcblxuICAgICAgICByZXR1cm4gLWZ3ZGx3ICsgZndkIC0gMTtcbiAgICB9XG5cbiAgICAvLyBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9JU09fd2Vla19kYXRlI0NhbGN1bGF0aW5nX2FfZGF0ZV9naXZlbl90aGVfeWVhci4yQ193ZWVrX251bWJlcl9hbmRfd2Vla2RheVxuICAgIGZ1bmN0aW9uIGRheU9mWWVhckZyb21XZWVrcyh5ZWFyLCB3ZWVrLCB3ZWVrZGF5LCBkb3csIGRveSkge1xuICAgICAgICB2YXIgbG9jYWxXZWVrZGF5ID0gKDcgKyB3ZWVrZGF5IC0gZG93KSAlIDcsXG4gICAgICAgICAgICB3ZWVrT2Zmc2V0ID0gZmlyc3RXZWVrT2Zmc2V0KHllYXIsIGRvdywgZG95KSxcbiAgICAgICAgICAgIGRheU9mWWVhciA9IDEgKyA3ICogKHdlZWsgLSAxKSArIGxvY2FsV2Vla2RheSArIHdlZWtPZmZzZXQsXG4gICAgICAgICAgICByZXNZZWFyLFxuICAgICAgICAgICAgcmVzRGF5T2ZZZWFyO1xuXG4gICAgICAgIGlmIChkYXlPZlllYXIgPD0gMCkge1xuICAgICAgICAgICAgcmVzWWVhciA9IHllYXIgLSAxO1xuICAgICAgICAgICAgcmVzRGF5T2ZZZWFyID0gZGF5c0luWWVhcihyZXNZZWFyKSArIGRheU9mWWVhcjtcbiAgICAgICAgfSBlbHNlIGlmIChkYXlPZlllYXIgPiBkYXlzSW5ZZWFyKHllYXIpKSB7XG4gICAgICAgICAgICByZXNZZWFyID0geWVhciArIDE7XG4gICAgICAgICAgICByZXNEYXlPZlllYXIgPSBkYXlPZlllYXIgLSBkYXlzSW5ZZWFyKHllYXIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzWWVhciA9IHllYXI7XG4gICAgICAgICAgICByZXNEYXlPZlllYXIgPSBkYXlPZlllYXI7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgeWVhcjogcmVzWWVhcixcbiAgICAgICAgICAgIGRheU9mWWVhcjogcmVzRGF5T2ZZZWFyLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHdlZWtPZlllYXIobW9tLCBkb3csIGRveSkge1xuICAgICAgICB2YXIgd2Vla09mZnNldCA9IGZpcnN0V2Vla09mZnNldChtb20ueWVhcigpLCBkb3csIGRveSksXG4gICAgICAgICAgICB3ZWVrID0gTWF0aC5mbG9vcigobW9tLmRheU9mWWVhcigpIC0gd2Vla09mZnNldCAtIDEpIC8gNykgKyAxLFxuICAgICAgICAgICAgcmVzV2VlayxcbiAgICAgICAgICAgIHJlc1llYXI7XG5cbiAgICAgICAgaWYgKHdlZWsgPCAxKSB7XG4gICAgICAgICAgICByZXNZZWFyID0gbW9tLnllYXIoKSAtIDE7XG4gICAgICAgICAgICByZXNXZWVrID0gd2VlayArIHdlZWtzSW5ZZWFyKHJlc1llYXIsIGRvdywgZG95KTtcbiAgICAgICAgfSBlbHNlIGlmICh3ZWVrID4gd2Vla3NJblllYXIobW9tLnllYXIoKSwgZG93LCBkb3kpKSB7XG4gICAgICAgICAgICByZXNXZWVrID0gd2VlayAtIHdlZWtzSW5ZZWFyKG1vbS55ZWFyKCksIGRvdywgZG95KTtcbiAgICAgICAgICAgIHJlc1llYXIgPSBtb20ueWVhcigpICsgMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc1llYXIgPSBtb20ueWVhcigpO1xuICAgICAgICAgICAgcmVzV2VlayA9IHdlZWs7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2VlazogcmVzV2VlayxcbiAgICAgICAgICAgIHllYXI6IHJlc1llYXIsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gd2Vla3NJblllYXIoeWVhciwgZG93LCBkb3kpIHtcbiAgICAgICAgdmFyIHdlZWtPZmZzZXQgPSBmaXJzdFdlZWtPZmZzZXQoeWVhciwgZG93LCBkb3kpLFxuICAgICAgICAgICAgd2Vla09mZnNldE5leHQgPSBmaXJzdFdlZWtPZmZzZXQoeWVhciArIDEsIGRvdywgZG95KTtcbiAgICAgICAgcmV0dXJuIChkYXlzSW5ZZWFyKHllYXIpIC0gd2Vla09mZnNldCArIHdlZWtPZmZzZXROZXh0KSAvIDc7XG4gICAgfVxuXG4gICAgLy8gRk9STUFUVElOR1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ3cnLCBbJ3d3JywgMl0sICd3bycsICd3ZWVrJyk7XG4gICAgYWRkRm9ybWF0VG9rZW4oJ1cnLCBbJ1dXJywgMl0sICdXbycsICdpc29XZWVrJyk7XG5cbiAgICAvLyBQQVJTSU5HXG5cbiAgICBhZGRSZWdleFRva2VuKCd3JywgbWF0Y2gxdG8yLCBtYXRjaDF0bzJOb0xlYWRpbmdaZXJvKTtcbiAgICBhZGRSZWdleFRva2VuKCd3dycsIG1hdGNoMXRvMiwgbWF0Y2gyKTtcbiAgICBhZGRSZWdleFRva2VuKCdXJywgbWF0Y2gxdG8yLCBtYXRjaDF0bzJOb0xlYWRpbmdaZXJvKTtcbiAgICBhZGRSZWdleFRva2VuKCdXVycsIG1hdGNoMXRvMiwgbWF0Y2gyKTtcblxuICAgIGFkZFdlZWtQYXJzZVRva2VuKFxuICAgICAgICBbJ3cnLCAnd3cnLCAnVycsICdXVyddLFxuICAgICAgICBmdW5jdGlvbiAoaW5wdXQsIHdlZWssIGNvbmZpZywgdG9rZW4pIHtcbiAgICAgICAgICAgIHdlZWtbdG9rZW4uc3Vic3RyKDAsIDEpXSA9IHRvSW50KGlucHV0KTtcbiAgICAgICAgfVxuICAgICk7XG5cbiAgICAvLyBIRUxQRVJTXG5cbiAgICAvLyBMT0NBTEVTXG5cbiAgICBmdW5jdGlvbiBsb2NhbGVXZWVrKG1vbSkge1xuICAgICAgICByZXR1cm4gd2Vla09mWWVhcihtb20sIHRoaXMuX3dlZWsuZG93LCB0aGlzLl93ZWVrLmRveSkud2VlaztcbiAgICB9XG5cbiAgICB2YXIgZGVmYXVsdExvY2FsZVdlZWsgPSB7XG4gICAgICAgIGRvdzogMCwgLy8gU3VuZGF5IGlzIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsuXG4gICAgICAgIGRveTogNiwgLy8gVGhlIHdlZWsgdGhhdCBjb250YWlucyBKYW4gNnRoIGlzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSB5ZWFyLlxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBsb2NhbGVGaXJzdERheU9mV2VlaygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dlZWsuZG93O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxvY2FsZUZpcnN0RGF5T2ZZZWFyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2Vlay5kb3k7XG4gICAgfVxuXG4gICAgLy8gTU9NRU5UU1xuXG4gICAgZnVuY3Rpb24gZ2V0U2V0V2VlayhpbnB1dCkge1xuICAgICAgICB2YXIgd2VlayA9IHRoaXMubG9jYWxlRGF0YSgpLndlZWsodGhpcyk7XG4gICAgICAgIHJldHVybiBpbnB1dCA9PSBudWxsID8gd2VlayA6IHRoaXMuYWRkKChpbnB1dCAtIHdlZWspICogNywgJ2QnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRTZXRJU09XZWVrKGlucHV0KSB7XG4gICAgICAgIHZhciB3ZWVrID0gd2Vla09mWWVhcih0aGlzLCAxLCA0KS53ZWVrO1xuICAgICAgICByZXR1cm4gaW5wdXQgPT0gbnVsbCA/IHdlZWsgOiB0aGlzLmFkZCgoaW5wdXQgLSB3ZWVrKSAqIDcsICdkJyk7XG4gICAgfVxuXG4gICAgLy8gRk9STUFUVElOR1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ2QnLCAwLCAnZG8nLCAnZGF5Jyk7XG5cbiAgICBhZGRGb3JtYXRUb2tlbignZGQnLCAwLCAwLCBmdW5jdGlvbiAoZm9ybWF0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsZURhdGEoKS53ZWVrZGF5c01pbih0aGlzLCBmb3JtYXQpO1xuICAgIH0pO1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ2RkZCcsIDAsIDAsIGZ1bmN0aW9uIChmb3JtYXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLndlZWtkYXlzU2hvcnQodGhpcywgZm9ybWF0KTtcbiAgICB9KTtcblxuICAgIGFkZEZvcm1hdFRva2VuKCdkZGRkJywgMCwgMCwgZnVuY3Rpb24gKGZvcm1hdCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkud2Vla2RheXModGhpcywgZm9ybWF0KTtcbiAgICB9KTtcblxuICAgIGFkZEZvcm1hdFRva2VuKCdlJywgMCwgMCwgJ3dlZWtkYXknKTtcbiAgICBhZGRGb3JtYXRUb2tlbignRScsIDAsIDAsICdpc29XZWVrZGF5Jyk7XG5cbiAgICAvLyBQQVJTSU5HXG5cbiAgICBhZGRSZWdleFRva2VuKCdkJywgbWF0Y2gxdG8yKTtcbiAgICBhZGRSZWdleFRva2VuKCdlJywgbWF0Y2gxdG8yKTtcbiAgICBhZGRSZWdleFRva2VuKCdFJywgbWF0Y2gxdG8yKTtcbiAgICBhZGRSZWdleFRva2VuKCdkZCcsIGZ1bmN0aW9uIChpc1N0cmljdCwgbG9jYWxlKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUud2Vla2RheXNNaW5SZWdleChpc1N0cmljdCk7XG4gICAgfSk7XG4gICAgYWRkUmVnZXhUb2tlbignZGRkJywgZnVuY3Rpb24gKGlzU3RyaWN0LCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS53ZWVrZGF5c1Nob3J0UmVnZXgoaXNTdHJpY3QpO1xuICAgIH0pO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ2RkZGQnLCBmdW5jdGlvbiAoaXNTdHJpY3QsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLndlZWtkYXlzUmVnZXgoaXNTdHJpY3QpO1xuICAgIH0pO1xuXG4gICAgYWRkV2Vla1BhcnNlVG9rZW4oWydkZCcsICdkZGQnLCAnZGRkZCddLCBmdW5jdGlvbiAoaW5wdXQsIHdlZWssIGNvbmZpZywgdG9rZW4pIHtcbiAgICAgICAgdmFyIHdlZWtkYXkgPSBjb25maWcuX2xvY2FsZS53ZWVrZGF5c1BhcnNlKGlucHV0LCB0b2tlbiwgY29uZmlnLl9zdHJpY3QpO1xuICAgICAgICAvLyBpZiB3ZSBkaWRuJ3QgZ2V0IGEgd2Vla2RheSBuYW1lLCBtYXJrIHRoZSBkYXRlIGFzIGludmFsaWRcbiAgICAgICAgaWYgKHdlZWtkYXkgIT0gbnVsbCkge1xuICAgICAgICAgICAgd2Vlay5kID0gd2Vla2RheTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLmludmFsaWRXZWVrZGF5ID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIGFkZFdlZWtQYXJzZVRva2VuKFsnZCcsICdlJywgJ0UnXSwgZnVuY3Rpb24gKGlucHV0LCB3ZWVrLCBjb25maWcsIHRva2VuKSB7XG4gICAgICAgIHdlZWtbdG9rZW5dID0gdG9JbnQoaW5wdXQpO1xuICAgIH0pO1xuXG4gICAgLy8gSEVMUEVSU1xuXG4gICAgZnVuY3Rpb24gcGFyc2VXZWVrZGF5KGlucHV0LCBsb2NhbGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnB1dDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghaXNOYU4oaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoaW5wdXQsIDEwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlucHV0ID0gbG9jYWxlLndlZWtkYXlzUGFyc2UoaW5wdXQpO1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcGFyc2VJc29XZWVrZGF5KGlucHV0LCBsb2NhbGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGUud2Vla2RheXNQYXJzZShpbnB1dCkgJSA3IHx8IDc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlzTmFOKGlucHV0KSA/IG51bGwgOiBpbnB1dDtcbiAgICB9XG5cbiAgICAvLyBMT0NBTEVTXG4gICAgZnVuY3Rpb24gc2hpZnRXZWVrZGF5cyh3cywgbikge1xuICAgICAgICByZXR1cm4gd3Muc2xpY2UobiwgNykuY29uY2F0KHdzLnNsaWNlKDAsIG4pKTtcbiAgICB9XG5cbiAgICB2YXIgZGVmYXVsdExvY2FsZVdlZWtkYXlzID1cbiAgICAgICAgICAgICdTdW5kYXlfTW9uZGF5X1R1ZXNkYXlfV2VkbmVzZGF5X1RodXJzZGF5X0ZyaWRheV9TYXR1cmRheScuc3BsaXQoJ18nKSxcbiAgICAgICAgZGVmYXVsdExvY2FsZVdlZWtkYXlzU2hvcnQgPSAnU3VuX01vbl9UdWVfV2VkX1RodV9GcmlfU2F0Jy5zcGxpdCgnXycpLFxuICAgICAgICBkZWZhdWx0TG9jYWxlV2Vla2RheXNNaW4gPSAnU3VfTW9fVHVfV2VfVGhfRnJfU2EnLnNwbGl0KCdfJyksXG4gICAgICAgIGRlZmF1bHRXZWVrZGF5c1JlZ2V4ID0gbWF0Y2hXb3JkLFxuICAgICAgICBkZWZhdWx0V2Vla2RheXNTaG9ydFJlZ2V4ID0gbWF0Y2hXb3JkLFxuICAgICAgICBkZWZhdWx0V2Vla2RheXNNaW5SZWdleCA9IG1hdGNoV29yZDtcblxuICAgIGZ1bmN0aW9uIGxvY2FsZVdlZWtkYXlzKG0sIGZvcm1hdCkge1xuICAgICAgICB2YXIgd2Vla2RheXMgPSBpc0FycmF5KHRoaXMuX3dlZWtkYXlzKVxuICAgICAgICAgICAgPyB0aGlzLl93ZWVrZGF5c1xuICAgICAgICAgICAgOiB0aGlzLl93ZWVrZGF5c1tcbiAgICAgICAgICAgICAgICAgIG0gJiYgbSAhPT0gdHJ1ZSAmJiB0aGlzLl93ZWVrZGF5cy5pc0Zvcm1hdC50ZXN0KGZvcm1hdClcbiAgICAgICAgICAgICAgICAgICAgICA/ICdmb3JtYXQnXG4gICAgICAgICAgICAgICAgICAgICAgOiAnc3RhbmRhbG9uZSdcbiAgICAgICAgICAgICAgXTtcbiAgICAgICAgcmV0dXJuIG0gPT09IHRydWVcbiAgICAgICAgICAgID8gc2hpZnRXZWVrZGF5cyh3ZWVrZGF5cywgdGhpcy5fd2Vlay5kb3cpXG4gICAgICAgICAgICA6IG1cbiAgICAgICAgICAgICAgPyB3ZWVrZGF5c1ttLmRheSgpXVxuICAgICAgICAgICAgICA6IHdlZWtkYXlzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxvY2FsZVdlZWtkYXlzU2hvcnQobSkge1xuICAgICAgICByZXR1cm4gbSA9PT0gdHJ1ZVxuICAgICAgICAgICAgPyBzaGlmdFdlZWtkYXlzKHRoaXMuX3dlZWtkYXlzU2hvcnQsIHRoaXMuX3dlZWsuZG93KVxuICAgICAgICAgICAgOiBtXG4gICAgICAgICAgICAgID8gdGhpcy5fd2Vla2RheXNTaG9ydFttLmRheSgpXVxuICAgICAgICAgICAgICA6IHRoaXMuX3dlZWtkYXlzU2hvcnQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbG9jYWxlV2Vla2RheXNNaW4obSkge1xuICAgICAgICByZXR1cm4gbSA9PT0gdHJ1ZVxuICAgICAgICAgICAgPyBzaGlmdFdlZWtkYXlzKHRoaXMuX3dlZWtkYXlzTWluLCB0aGlzLl93ZWVrLmRvdylcbiAgICAgICAgICAgIDogbVxuICAgICAgICAgICAgICA/IHRoaXMuX3dlZWtkYXlzTWluW20uZGF5KCldXG4gICAgICAgICAgICAgIDogdGhpcy5fd2Vla2RheXNNaW47XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlU3RyaWN0UGFyc2UkMSh3ZWVrZGF5TmFtZSwgZm9ybWF0LCBzdHJpY3QpIHtcbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgICBpaSxcbiAgICAgICAgICAgIG1vbSxcbiAgICAgICAgICAgIGxsYyA9IHdlZWtkYXlOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmICghdGhpcy5fd2Vla2RheXNQYXJzZSkge1xuICAgICAgICAgICAgdGhpcy5fd2Vla2RheXNQYXJzZSA9IFtdO1xuICAgICAgICAgICAgdGhpcy5fc2hvcnRXZWVrZGF5c1BhcnNlID0gW107XG4gICAgICAgICAgICB0aGlzLl9taW5XZWVrZGF5c1BhcnNlID0gW107XG5cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCA3OyArK2kpIHtcbiAgICAgICAgICAgICAgICBtb20gPSBjcmVhdGVVVEMoWzIwMDAsIDFdKS5kYXkoaSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbWluV2Vla2RheXNQYXJzZVtpXSA9IHRoaXMud2Vla2RheXNNaW4oXG4gICAgICAgICAgICAgICAgICAgIG1vbSxcbiAgICAgICAgICAgICAgICAgICAgJydcbiAgICAgICAgICAgICAgICApLnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2hvcnRXZWVrZGF5c1BhcnNlW2ldID0gdGhpcy53ZWVrZGF5c1Nob3J0KFxuICAgICAgICAgICAgICAgICAgICBtb20sXG4gICAgICAgICAgICAgICAgICAgICcnXG4gICAgICAgICAgICAgICAgKS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3dlZWtkYXlzUGFyc2VbaV0gPSB0aGlzLndlZWtkYXlzKG1vbSwgJycpLnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3RyaWN0KSB7XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSAnZGRkZCcpIHtcbiAgICAgICAgICAgICAgICBpaSA9IGluZGV4T2YuY2FsbCh0aGlzLl93ZWVrZGF5c1BhcnNlLCBsbGMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBpaSAhPT0gLTEgPyBpaSA6IG51bGw7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGZvcm1hdCA9PT0gJ2RkZCcpIHtcbiAgICAgICAgICAgICAgICBpaSA9IGluZGV4T2YuY2FsbCh0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2UsIGxsYyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlpICE9PSAtMSA/IGlpIDogbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWkgPSBpbmRleE9mLmNhbGwodGhpcy5fbWluV2Vla2RheXNQYXJzZSwgbGxjKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaWkgIT09IC0xID8gaWkgOiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gJ2RkZGQnKSB7XG4gICAgICAgICAgICAgICAgaWkgPSBpbmRleE9mLmNhbGwodGhpcy5fd2Vla2RheXNQYXJzZSwgbGxjKTtcbiAgICAgICAgICAgICAgICBpZiAoaWkgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWkgPSBpbmRleE9mLmNhbGwodGhpcy5fc2hvcnRXZWVrZGF5c1BhcnNlLCBsbGMpO1xuICAgICAgICAgICAgICAgIGlmIChpaSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpaSA9IGluZGV4T2YuY2FsbCh0aGlzLl9taW5XZWVrZGF5c1BhcnNlLCBsbGMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBpaSAhPT0gLTEgPyBpaSA6IG51bGw7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGZvcm1hdCA9PT0gJ2RkZCcpIHtcbiAgICAgICAgICAgICAgICBpaSA9IGluZGV4T2YuY2FsbCh0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2UsIGxsYyk7XG4gICAgICAgICAgICAgICAgaWYgKGlpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaWk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlpID0gaW5kZXhPZi5jYWxsKHRoaXMuX3dlZWtkYXlzUGFyc2UsIGxsYyk7XG4gICAgICAgICAgICAgICAgaWYgKGlpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaWk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlpID0gaW5kZXhPZi5jYWxsKHRoaXMuX21pbldlZWtkYXlzUGFyc2UsIGxsYyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlpICE9PSAtMSA/IGlpIDogbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWkgPSBpbmRleE9mLmNhbGwodGhpcy5fbWluV2Vla2RheXNQYXJzZSwgbGxjKTtcbiAgICAgICAgICAgICAgICBpZiAoaWkgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWkgPSBpbmRleE9mLmNhbGwodGhpcy5fd2Vla2RheXNQYXJzZSwgbGxjKTtcbiAgICAgICAgICAgICAgICBpZiAoaWkgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWkgPSBpbmRleE9mLmNhbGwodGhpcy5fc2hvcnRXZWVrZGF5c1BhcnNlLCBsbGMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBpaSAhPT0gLTEgPyBpaSA6IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsb2NhbGVXZWVrZGF5c1BhcnNlKHdlZWtkYXlOYW1lLCBmb3JtYXQsIHN0cmljdCkge1xuICAgICAgICB2YXIgaSwgbW9tLCByZWdleDtcblxuICAgICAgICBpZiAodGhpcy5fd2Vla2RheXNQYXJzZUV4YWN0KSB7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlU3RyaWN0UGFyc2UkMS5jYWxsKHRoaXMsIHdlZWtkYXlOYW1lLCBmb3JtYXQsIHN0cmljdCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMuX3dlZWtkYXlzUGFyc2UpIHtcbiAgICAgICAgICAgIHRoaXMuX3dlZWtkYXlzUGFyc2UgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuX21pbldlZWtkYXlzUGFyc2UgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuX3Nob3J0V2Vla2RheXNQYXJzZSA9IFtdO1xuICAgICAgICAgICAgdGhpcy5fZnVsbFdlZWtkYXlzUGFyc2UgPSBbXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCA3OyBpKyspIHtcbiAgICAgICAgICAgIC8vIG1ha2UgdGhlIHJlZ2V4IGlmIHdlIGRvbid0IGhhdmUgaXQgYWxyZWFkeVxuXG4gICAgICAgICAgICBtb20gPSBjcmVhdGVVVEMoWzIwMDAsIDFdKS5kYXkoaSk7XG4gICAgICAgICAgICBpZiAoc3RyaWN0ICYmICF0aGlzLl9mdWxsV2Vla2RheXNQYXJzZVtpXSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2Z1bGxXZWVrZGF5c1BhcnNlW2ldID0gbmV3IFJlZ0V4cChcbiAgICAgICAgICAgICAgICAgICAgJ14nICsgdGhpcy53ZWVrZGF5cyhtb20sICcnKS5yZXBsYWNlKCcuJywgJ1xcXFwuPycpICsgJyQnLFxuICAgICAgICAgICAgICAgICAgICAnaSdcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Nob3J0V2Vla2RheXNQYXJzZVtpXSA9IG5ldyBSZWdFeHAoXG4gICAgICAgICAgICAgICAgICAgICdeJyArIHRoaXMud2Vla2RheXNTaG9ydChtb20sICcnKS5yZXBsYWNlKCcuJywgJ1xcXFwuPycpICsgJyQnLFxuICAgICAgICAgICAgICAgICAgICAnaSdcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHRoaXMuX21pbldlZWtkYXlzUGFyc2VbaV0gPSBuZXcgUmVnRXhwKFxuICAgICAgICAgICAgICAgICAgICAnXicgKyB0aGlzLndlZWtkYXlzTWluKG1vbSwgJycpLnJlcGxhY2UoJy4nLCAnXFxcXC4/JykgKyAnJCcsXG4gICAgICAgICAgICAgICAgICAgICdpJ1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRoaXMuX3dlZWtkYXlzUGFyc2VbaV0pIHtcbiAgICAgICAgICAgICAgICByZWdleCA9XG4gICAgICAgICAgICAgICAgICAgICdeJyArXG4gICAgICAgICAgICAgICAgICAgIHRoaXMud2Vla2RheXMobW9tLCAnJykgK1xuICAgICAgICAgICAgICAgICAgICAnfF4nICtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy53ZWVrZGF5c1Nob3J0KG1vbSwgJycpICtcbiAgICAgICAgICAgICAgICAgICAgJ3xeJyArXG4gICAgICAgICAgICAgICAgICAgIHRoaXMud2Vla2RheXNNaW4obW9tLCAnJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5fd2Vla2RheXNQYXJzZVtpXSA9IG5ldyBSZWdFeHAocmVnZXgucmVwbGFjZSgnLicsICcnKSwgJ2knKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHRlc3QgdGhlIHJlZ2V4XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgc3RyaWN0ICYmXG4gICAgICAgICAgICAgICAgZm9ybWF0ID09PSAnZGRkZCcgJiZcbiAgICAgICAgICAgICAgICB0aGlzLl9mdWxsV2Vla2RheXNQYXJzZVtpXS50ZXN0KHdlZWtkYXlOYW1lKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgICAgIHN0cmljdCAmJlxuICAgICAgICAgICAgICAgIGZvcm1hdCA9PT0gJ2RkZCcgJiZcbiAgICAgICAgICAgICAgICB0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2VbaV0udGVzdCh3ZWVrZGF5TmFtZSlcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgICAgICAgICBzdHJpY3QgJiZcbiAgICAgICAgICAgICAgICBmb3JtYXQgPT09ICdkZCcgJiZcbiAgICAgICAgICAgICAgICB0aGlzLl9taW5XZWVrZGF5c1BhcnNlW2ldLnRlc3Qod2Vla2RheU5hbWUpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIXN0cmljdCAmJiB0aGlzLl93ZWVrZGF5c1BhcnNlW2ldLnRlc3Qod2Vla2RheU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBNT01FTlRTXG5cbiAgICBmdW5jdGlvbiBnZXRTZXREYXlPZldlZWsoaW5wdXQpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzVmFsaWQoKSkge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0ICE9IG51bGwgPyB0aGlzIDogTmFOO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGRheSA9IGdldCh0aGlzLCAnRGF5Jyk7XG4gICAgICAgIGlmIChpbnB1dCAhPSBudWxsKSB7XG4gICAgICAgICAgICBpbnB1dCA9IHBhcnNlV2Vla2RheShpbnB1dCwgdGhpcy5sb2NhbGVEYXRhKCkpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYWRkKGlucHV0IC0gZGF5LCAnZCcpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGRheTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFNldExvY2FsZURheU9mV2VlayhpbnB1dCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQgIT0gbnVsbCA/IHRoaXMgOiBOYU47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHdlZWtkYXkgPSAodGhpcy5kYXkoKSArIDcgLSB0aGlzLmxvY2FsZURhdGEoKS5fd2Vlay5kb3cpICUgNztcbiAgICAgICAgcmV0dXJuIGlucHV0ID09IG51bGwgPyB3ZWVrZGF5IDogdGhpcy5hZGQoaW5wdXQgLSB3ZWVrZGF5LCAnZCcpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFNldElTT0RheU9mV2VlayhpbnB1dCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQgIT0gbnVsbCA/IHRoaXMgOiBOYU47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBiZWhhdmVzIHRoZSBzYW1lIGFzIG1vbWVudCNkYXkgZXhjZXB0XG4gICAgICAgIC8vIGFzIGEgZ2V0dGVyLCByZXR1cm5zIDcgaW5zdGVhZCBvZiAwICgxLTcgcmFuZ2UgaW5zdGVhZCBvZiAwLTYpXG4gICAgICAgIC8vIGFzIGEgc2V0dGVyLCBzdW5kYXkgc2hvdWxkIGJlbG9uZyB0byB0aGUgcHJldmlvdXMgd2Vlay5cblxuICAgICAgICBpZiAoaW5wdXQgIT0gbnVsbCkge1xuICAgICAgICAgICAgdmFyIHdlZWtkYXkgPSBwYXJzZUlzb1dlZWtkYXkoaW5wdXQsIHRoaXMubG9jYWxlRGF0YSgpKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRheSh0aGlzLmRheSgpICUgNyA/IHdlZWtkYXkgOiB3ZWVrZGF5IC0gNyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kYXkoKSB8fCA3O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gd2Vla2RheXNSZWdleChpc1N0cmljdCkge1xuICAgICAgICBpZiAodGhpcy5fd2Vla2RheXNQYXJzZUV4YWN0KSB7XG4gICAgICAgICAgICBpZiAoIWhhc093blByb3AodGhpcywgJ193ZWVrZGF5c1JlZ2V4JykpIHtcbiAgICAgICAgICAgICAgICBjb21wdXRlV2Vla2RheXNQYXJzZS5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzU3RyaWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3dlZWtkYXlzU3RyaWN0UmVnZXg7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl93ZWVrZGF5c1JlZ2V4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFoYXNPd25Qcm9wKHRoaXMsICdfd2Vla2RheXNSZWdleCcpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fd2Vla2RheXNSZWdleCA9IGRlZmF1bHRXZWVrZGF5c1JlZ2V4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3dlZWtkYXlzU3RyaWN0UmVnZXggJiYgaXNTdHJpY3RcbiAgICAgICAgICAgICAgICA/IHRoaXMuX3dlZWtkYXlzU3RyaWN0UmVnZXhcbiAgICAgICAgICAgICAgICA6IHRoaXMuX3dlZWtkYXlzUmVnZXg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiB3ZWVrZGF5c1Nob3J0UmVnZXgoaXNTdHJpY3QpIHtcbiAgICAgICAgaWYgKHRoaXMuX3dlZWtkYXlzUGFyc2VFeGFjdCkge1xuICAgICAgICAgICAgaWYgKCFoYXNPd25Qcm9wKHRoaXMsICdfd2Vla2RheXNSZWdleCcpKSB7XG4gICAgICAgICAgICAgICAgY29tcHV0ZVdlZWtkYXlzUGFyc2UuY2FsbCh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1N0cmljdCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl93ZWVrZGF5c1Nob3J0U3RyaWN0UmVnZXg7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl93ZWVrZGF5c1Nob3J0UmVnZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoIWhhc093blByb3AodGhpcywgJ193ZWVrZGF5c1Nob3J0UmVnZXgnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3dlZWtkYXlzU2hvcnRSZWdleCA9IGRlZmF1bHRXZWVrZGF5c1Nob3J0UmVnZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fd2Vla2RheXNTaG9ydFN0cmljdFJlZ2V4ICYmIGlzU3RyaWN0XG4gICAgICAgICAgICAgICAgPyB0aGlzLl93ZWVrZGF5c1Nob3J0U3RyaWN0UmVnZXhcbiAgICAgICAgICAgICAgICA6IHRoaXMuX3dlZWtkYXlzU2hvcnRSZWdleDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHdlZWtkYXlzTWluUmVnZXgoaXNTdHJpY3QpIHtcbiAgICAgICAgaWYgKHRoaXMuX3dlZWtkYXlzUGFyc2VFeGFjdCkge1xuICAgICAgICAgICAgaWYgKCFoYXNPd25Qcm9wKHRoaXMsICdfd2Vla2RheXNSZWdleCcpKSB7XG4gICAgICAgICAgICAgICAgY29tcHV0ZVdlZWtkYXlzUGFyc2UuY2FsbCh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1N0cmljdCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl93ZWVrZGF5c01pblN0cmljdFJlZ2V4O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fd2Vla2RheXNNaW5SZWdleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICghaGFzT3duUHJvcCh0aGlzLCAnX3dlZWtkYXlzTWluUmVnZXgnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3dlZWtkYXlzTWluUmVnZXggPSBkZWZhdWx0V2Vla2RheXNNaW5SZWdleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl93ZWVrZGF5c01pblN0cmljdFJlZ2V4ICYmIGlzU3RyaWN0XG4gICAgICAgICAgICAgICAgPyB0aGlzLl93ZWVrZGF5c01pblN0cmljdFJlZ2V4XG4gICAgICAgICAgICAgICAgOiB0aGlzLl93ZWVrZGF5c01pblJlZ2V4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29tcHV0ZVdlZWtkYXlzUGFyc2UoKSB7XG4gICAgICAgIGZ1bmN0aW9uIGNtcExlblJldihhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYi5sZW5ndGggLSBhLmxlbmd0aDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBtaW5QaWVjZXMgPSBbXSxcbiAgICAgICAgICAgIHNob3J0UGllY2VzID0gW10sXG4gICAgICAgICAgICBsb25nUGllY2VzID0gW10sXG4gICAgICAgICAgICBtaXhlZFBpZWNlcyA9IFtdLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIG1vbSxcbiAgICAgICAgICAgIG1pbnAsXG4gICAgICAgICAgICBzaG9ydHAsXG4gICAgICAgICAgICBsb25ncDtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IDc7IGkrKykge1xuICAgICAgICAgICAgLy8gbWFrZSB0aGUgcmVnZXggaWYgd2UgZG9uJ3QgaGF2ZSBpdCBhbHJlYWR5XG4gICAgICAgICAgICBtb20gPSBjcmVhdGVVVEMoWzIwMDAsIDFdKS5kYXkoaSk7XG4gICAgICAgICAgICBtaW5wID0gcmVnZXhFc2NhcGUodGhpcy53ZWVrZGF5c01pbihtb20sICcnKSk7XG4gICAgICAgICAgICBzaG9ydHAgPSByZWdleEVzY2FwZSh0aGlzLndlZWtkYXlzU2hvcnQobW9tLCAnJykpO1xuICAgICAgICAgICAgbG9uZ3AgPSByZWdleEVzY2FwZSh0aGlzLndlZWtkYXlzKG1vbSwgJycpKTtcbiAgICAgICAgICAgIG1pblBpZWNlcy5wdXNoKG1pbnApO1xuICAgICAgICAgICAgc2hvcnRQaWVjZXMucHVzaChzaG9ydHApO1xuICAgICAgICAgICAgbG9uZ1BpZWNlcy5wdXNoKGxvbmdwKTtcbiAgICAgICAgICAgIG1peGVkUGllY2VzLnB1c2gobWlucCk7XG4gICAgICAgICAgICBtaXhlZFBpZWNlcy5wdXNoKHNob3J0cCk7XG4gICAgICAgICAgICBtaXhlZFBpZWNlcy5wdXNoKGxvbmdwKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBTb3J0aW5nIG1ha2VzIHN1cmUgaWYgb25lIHdlZWtkYXkgKG9yIGFiYnIpIGlzIGEgcHJlZml4IG9mIGFub3RoZXIgaXRcbiAgICAgICAgLy8gd2lsbCBtYXRjaCB0aGUgbG9uZ2VyIHBpZWNlLlxuICAgICAgICBtaW5QaWVjZXMuc29ydChjbXBMZW5SZXYpO1xuICAgICAgICBzaG9ydFBpZWNlcy5zb3J0KGNtcExlblJldik7XG4gICAgICAgIGxvbmdQaWVjZXMuc29ydChjbXBMZW5SZXYpO1xuICAgICAgICBtaXhlZFBpZWNlcy5zb3J0KGNtcExlblJldik7XG5cbiAgICAgICAgdGhpcy5fd2Vla2RheXNSZWdleCA9IG5ldyBSZWdFeHAoJ14oJyArIG1peGVkUGllY2VzLmpvaW4oJ3wnKSArICcpJywgJ2knKTtcbiAgICAgICAgdGhpcy5fd2Vla2RheXNTaG9ydFJlZ2V4ID0gdGhpcy5fd2Vla2RheXNSZWdleDtcbiAgICAgICAgdGhpcy5fd2Vla2RheXNNaW5SZWdleCA9IHRoaXMuX3dlZWtkYXlzUmVnZXg7XG5cbiAgICAgICAgdGhpcy5fd2Vla2RheXNTdHJpY3RSZWdleCA9IG5ldyBSZWdFeHAoXG4gICAgICAgICAgICAnXignICsgbG9uZ1BpZWNlcy5qb2luKCd8JykgKyAnKScsXG4gICAgICAgICAgICAnaSdcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5fd2Vla2RheXNTaG9ydFN0cmljdFJlZ2V4ID0gbmV3IFJlZ0V4cChcbiAgICAgICAgICAgICdeKCcgKyBzaG9ydFBpZWNlcy5qb2luKCd8JykgKyAnKScsXG4gICAgICAgICAgICAnaSdcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5fd2Vla2RheXNNaW5TdHJpY3RSZWdleCA9IG5ldyBSZWdFeHAoXG4gICAgICAgICAgICAnXignICsgbWluUGllY2VzLmpvaW4oJ3wnKSArICcpJyxcbiAgICAgICAgICAgICdpJ1xuICAgICAgICApO1xuICAgIH1cblxuICAgIC8vIEZPUk1BVFRJTkdcblxuICAgIGZ1bmN0aW9uIGhGb3JtYXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhvdXJzKCkgJSAxMiB8fCAxMjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBrRm9ybWF0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ob3VycygpIHx8IDI0O1xuICAgIH1cblxuICAgIGFkZEZvcm1hdFRva2VuKCdIJywgWydISCcsIDJdLCAwLCAnaG91cicpO1xuICAgIGFkZEZvcm1hdFRva2VuKCdoJywgWydoaCcsIDJdLCAwLCBoRm9ybWF0KTtcbiAgICBhZGRGb3JtYXRUb2tlbignaycsIFsna2snLCAyXSwgMCwga0Zvcm1hdCk7XG5cbiAgICBhZGRGb3JtYXRUb2tlbignaG1tJywgMCwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJycgKyBoRm9ybWF0LmFwcGx5KHRoaXMpICsgemVyb0ZpbGwodGhpcy5taW51dGVzKCksIDIpO1xuICAgIH0pO1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ2htbXNzJywgMCwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgJycgK1xuICAgICAgICAgICAgaEZvcm1hdC5hcHBseSh0aGlzKSArXG4gICAgICAgICAgICB6ZXJvRmlsbCh0aGlzLm1pbnV0ZXMoKSwgMikgK1xuICAgICAgICAgICAgemVyb0ZpbGwodGhpcy5zZWNvbmRzKCksIDIpXG4gICAgICAgICk7XG4gICAgfSk7XG5cbiAgICBhZGRGb3JtYXRUb2tlbignSG1tJywgMCwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJycgKyB0aGlzLmhvdXJzKCkgKyB6ZXJvRmlsbCh0aGlzLm1pbnV0ZXMoKSwgMik7XG4gICAgfSk7XG5cbiAgICBhZGRGb3JtYXRUb2tlbignSG1tc3MnLCAwLCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAnJyArXG4gICAgICAgICAgICB0aGlzLmhvdXJzKCkgK1xuICAgICAgICAgICAgemVyb0ZpbGwodGhpcy5taW51dGVzKCksIDIpICtcbiAgICAgICAgICAgIHplcm9GaWxsKHRoaXMuc2Vjb25kcygpLCAyKVxuICAgICAgICApO1xuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gbWVyaWRpZW0odG9rZW4sIGxvd2VyY2FzZSkge1xuICAgICAgICBhZGRGb3JtYXRUb2tlbih0b2tlbiwgMCwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLm1lcmlkaWVtKFxuICAgICAgICAgICAgICAgIHRoaXMuaG91cnMoKSxcbiAgICAgICAgICAgICAgICB0aGlzLm1pbnV0ZXMoKSxcbiAgICAgICAgICAgICAgICBsb3dlcmNhc2VcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG1lcmlkaWVtKCdhJywgdHJ1ZSk7XG4gICAgbWVyaWRpZW0oJ0EnLCBmYWxzZSk7XG5cbiAgICAvLyBQQVJTSU5HXG5cbiAgICBmdW5jdGlvbiBtYXRjaE1lcmlkaWVtKGlzU3RyaWN0LCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5fbWVyaWRpZW1QYXJzZTtcbiAgICB9XG5cbiAgICBhZGRSZWdleFRva2VuKCdhJywgbWF0Y2hNZXJpZGllbSk7XG4gICAgYWRkUmVnZXhUb2tlbignQScsIG1hdGNoTWVyaWRpZW0pO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ0gnLCBtYXRjaDF0bzIsIG1hdGNoMXRvMkhhc1plcm8pO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ2gnLCBtYXRjaDF0bzIsIG1hdGNoMXRvMk5vTGVhZGluZ1plcm8pO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ2snLCBtYXRjaDF0bzIsIG1hdGNoMXRvMk5vTGVhZGluZ1plcm8pO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ0hIJywgbWF0Y2gxdG8yLCBtYXRjaDIpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ2hoJywgbWF0Y2gxdG8yLCBtYXRjaDIpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ2trJywgbWF0Y2gxdG8yLCBtYXRjaDIpO1xuXG4gICAgYWRkUmVnZXhUb2tlbignaG1tJywgbWF0Y2gzdG80KTtcbiAgICBhZGRSZWdleFRva2VuKCdobW1zcycsIG1hdGNoNXRvNik7XG4gICAgYWRkUmVnZXhUb2tlbignSG1tJywgbWF0Y2gzdG80KTtcbiAgICBhZGRSZWdleFRva2VuKCdIbW1zcycsIG1hdGNoNXRvNik7XG5cbiAgICBhZGRQYXJzZVRva2VuKFsnSCcsICdISCddLCBIT1VSKTtcbiAgICBhZGRQYXJzZVRva2VuKFsnaycsICdrayddLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5LCBjb25maWcpIHtcbiAgICAgICAgdmFyIGtJbnB1dCA9IHRvSW50KGlucHV0KTtcbiAgICAgICAgYXJyYXlbSE9VUl0gPSBrSW5wdXQgPT09IDI0ID8gMCA6IGtJbnB1dDtcbiAgICB9KTtcbiAgICBhZGRQYXJzZVRva2VuKFsnYScsICdBJ10sIGZ1bmN0aW9uIChpbnB1dCwgYXJyYXksIGNvbmZpZykge1xuICAgICAgICBjb25maWcuX2lzUG0gPSBjb25maWcuX2xvY2FsZS5pc1BNKGlucHV0KTtcbiAgICAgICAgY29uZmlnLl9tZXJpZGllbSA9IGlucHV0O1xuICAgIH0pO1xuICAgIGFkZFBhcnNlVG9rZW4oWydoJywgJ2hoJ10sIGZ1bmN0aW9uIChpbnB1dCwgYXJyYXksIGNvbmZpZykge1xuICAgICAgICBhcnJheVtIT1VSXSA9IHRvSW50KGlucHV0KTtcbiAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykuYmlnSG91ciA9IHRydWU7XG4gICAgfSk7XG4gICAgYWRkUGFyc2VUb2tlbignaG1tJywgZnVuY3Rpb24gKGlucHV0LCBhcnJheSwgY29uZmlnKSB7XG4gICAgICAgIHZhciBwb3MgPSBpbnB1dC5sZW5ndGggLSAyO1xuICAgICAgICBhcnJheVtIT1VSXSA9IHRvSW50KGlucHV0LnN1YnN0cigwLCBwb3MpKTtcbiAgICAgICAgYXJyYXlbTUlOVVRFXSA9IHRvSW50KGlucHV0LnN1YnN0cihwb3MpKTtcbiAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykuYmlnSG91ciA9IHRydWU7XG4gICAgfSk7XG4gICAgYWRkUGFyc2VUb2tlbignaG1tc3MnLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5LCBjb25maWcpIHtcbiAgICAgICAgdmFyIHBvczEgPSBpbnB1dC5sZW5ndGggLSA0LFxuICAgICAgICAgICAgcG9zMiA9IGlucHV0Lmxlbmd0aCAtIDI7XG4gICAgICAgIGFycmF5W0hPVVJdID0gdG9JbnQoaW5wdXQuc3Vic3RyKDAsIHBvczEpKTtcbiAgICAgICAgYXJyYXlbTUlOVVRFXSA9IHRvSW50KGlucHV0LnN1YnN0cihwb3MxLCAyKSk7XG4gICAgICAgIGFycmF5W1NFQ09ORF0gPSB0b0ludChpbnB1dC5zdWJzdHIocG9zMikpO1xuICAgICAgICBnZXRQYXJzaW5nRmxhZ3MoY29uZmlnKS5iaWdIb3VyID0gdHJ1ZTtcbiAgICB9KTtcbiAgICBhZGRQYXJzZVRva2VuKCdIbW0nLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5LCBjb25maWcpIHtcbiAgICAgICAgdmFyIHBvcyA9IGlucHV0Lmxlbmd0aCAtIDI7XG4gICAgICAgIGFycmF5W0hPVVJdID0gdG9JbnQoaW5wdXQuc3Vic3RyKDAsIHBvcykpO1xuICAgICAgICBhcnJheVtNSU5VVEVdID0gdG9JbnQoaW5wdXQuc3Vic3RyKHBvcykpO1xuICAgIH0pO1xuICAgIGFkZFBhcnNlVG9rZW4oJ0htbXNzJywgZnVuY3Rpb24gKGlucHV0LCBhcnJheSwgY29uZmlnKSB7XG4gICAgICAgIHZhciBwb3MxID0gaW5wdXQubGVuZ3RoIC0gNCxcbiAgICAgICAgICAgIHBvczIgPSBpbnB1dC5sZW5ndGggLSAyO1xuICAgICAgICBhcnJheVtIT1VSXSA9IHRvSW50KGlucHV0LnN1YnN0cigwLCBwb3MxKSk7XG4gICAgICAgIGFycmF5W01JTlVURV0gPSB0b0ludChpbnB1dC5zdWJzdHIocG9zMSwgMikpO1xuICAgICAgICBhcnJheVtTRUNPTkRdID0gdG9JbnQoaW5wdXQuc3Vic3RyKHBvczIpKTtcbiAgICB9KTtcblxuICAgIC8vIExPQ0FMRVNcblxuICAgIGZ1bmN0aW9uIGxvY2FsZUlzUE0oaW5wdXQpIHtcbiAgICAgICAgLy8gSUU4IFF1aXJrcyBNb2RlICYgSUU3IFN0YW5kYXJkcyBNb2RlIGRvIG5vdCBhbGxvdyBhY2Nlc3Npbmcgc3RyaW5ncyBsaWtlIGFycmF5c1xuICAgICAgICAvLyBVc2luZyBjaGFyQXQgc2hvdWxkIGJlIG1vcmUgY29tcGF0aWJsZS5cbiAgICAgICAgcmV0dXJuIChpbnB1dCArICcnKS50b0xvd2VyQ2FzZSgpLmNoYXJBdCgwKSA9PT0gJ3AnO1xuICAgIH1cblxuICAgIHZhciBkZWZhdWx0TG9jYWxlTWVyaWRpZW1QYXJzZSA9IC9bYXBdXFwuP20/XFwuPy9pLFxuICAgICAgICAvLyBTZXR0aW5nIHRoZSBob3VyIHNob3VsZCBrZWVwIHRoZSB0aW1lLCBiZWNhdXNlIHRoZSB1c2VyIGV4cGxpY2l0bHlcbiAgICAgICAgLy8gc3BlY2lmaWVkIHdoaWNoIGhvdXIgdGhleSB3YW50LiBTbyB0cnlpbmcgdG8gbWFpbnRhaW4gdGhlIHNhbWUgaG91ciAoaW5cbiAgICAgICAgLy8gYSBuZXcgdGltZXpvbmUpIG1ha2VzIHNlbnNlLiBBZGRpbmcvc3VidHJhY3RpbmcgaG91cnMgZG9lcyBub3QgZm9sbG93XG4gICAgICAgIC8vIHRoaXMgcnVsZS5cbiAgICAgICAgZ2V0U2V0SG91ciA9IG1ha2VHZXRTZXQoJ0hvdXJzJywgdHJ1ZSk7XG5cbiAgICBmdW5jdGlvbiBsb2NhbGVNZXJpZGllbShob3VycywgbWludXRlcywgaXNMb3dlcikge1xuICAgICAgICBpZiAoaG91cnMgPiAxMSkge1xuICAgICAgICAgICAgcmV0dXJuIGlzTG93ZXIgPyAncG0nIDogJ1BNJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBpc0xvd2VyID8gJ2FtJyA6ICdBTSc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgYmFzZUNvbmZpZyA9IHtcbiAgICAgICAgY2FsZW5kYXI6IGRlZmF1bHRDYWxlbmRhcixcbiAgICAgICAgbG9uZ0RhdGVGb3JtYXQ6IGRlZmF1bHRMb25nRGF0ZUZvcm1hdCxcbiAgICAgICAgaW52YWxpZERhdGU6IGRlZmF1bHRJbnZhbGlkRGF0ZSxcbiAgICAgICAgb3JkaW5hbDogZGVmYXVsdE9yZGluYWwsXG4gICAgICAgIGRheU9mTW9udGhPcmRpbmFsUGFyc2U6IGRlZmF1bHREYXlPZk1vbnRoT3JkaW5hbFBhcnNlLFxuICAgICAgICByZWxhdGl2ZVRpbWU6IGRlZmF1bHRSZWxhdGl2ZVRpbWUsXG5cbiAgICAgICAgbW9udGhzOiBkZWZhdWx0TG9jYWxlTW9udGhzLFxuICAgICAgICBtb250aHNTaG9ydDogZGVmYXVsdExvY2FsZU1vbnRoc1Nob3J0LFxuXG4gICAgICAgIHdlZWs6IGRlZmF1bHRMb2NhbGVXZWVrLFxuXG4gICAgICAgIHdlZWtkYXlzOiBkZWZhdWx0TG9jYWxlV2Vla2RheXMsXG4gICAgICAgIHdlZWtkYXlzTWluOiBkZWZhdWx0TG9jYWxlV2Vla2RheXNNaW4sXG4gICAgICAgIHdlZWtkYXlzU2hvcnQ6IGRlZmF1bHRMb2NhbGVXZWVrZGF5c1Nob3J0LFxuXG4gICAgICAgIG1lcmlkaWVtUGFyc2U6IGRlZmF1bHRMb2NhbGVNZXJpZGllbVBhcnNlLFxuICAgIH07XG5cbiAgICAvLyBpbnRlcm5hbCBzdG9yYWdlIGZvciBsb2NhbGUgY29uZmlnIGZpbGVzXG4gICAgdmFyIGxvY2FsZXMgPSB7fSxcbiAgICAgICAgbG9jYWxlRmFtaWxpZXMgPSB7fSxcbiAgICAgICAgZ2xvYmFsTG9jYWxlO1xuXG4gICAgZnVuY3Rpb24gY29tbW9uUHJlZml4KGFycjEsIGFycjIpIHtcbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgICBtaW5sID0gTWF0aC5taW4oYXJyMS5sZW5ndGgsIGFycjIubGVuZ3RoKTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IG1pbmw7IGkgKz0gMSkge1xuICAgICAgICAgICAgaWYgKGFycjFbaV0gIT09IGFycjJbaV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWlubDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBub3JtYWxpemVMb2NhbGUoa2V5KSB7XG4gICAgICAgIHJldHVybiBrZXkgPyBrZXkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCdfJywgJy0nKSA6IGtleTtcbiAgICB9XG5cbiAgICAvLyBwaWNrIHRoZSBsb2NhbGUgZnJvbSB0aGUgYXJyYXlcbiAgICAvLyB0cnkgWydlbi1hdScsICdlbi1nYiddIGFzICdlbi1hdScsICdlbi1nYicsICdlbicsIGFzIGluIG1vdmUgdGhyb3VnaCB0aGUgbGlzdCB0cnlpbmcgZWFjaFxuICAgIC8vIHN1YnN0cmluZyBmcm9tIG1vc3Qgc3BlY2lmaWMgdG8gbGVhc3QsIGJ1dCBtb3ZlIHRvIHRoZSBuZXh0IGFycmF5IGl0ZW0gaWYgaXQncyBhIG1vcmUgc3BlY2lmaWMgdmFyaWFudCB0aGFuIHRoZSBjdXJyZW50IHJvb3RcbiAgICBmdW5jdGlvbiBjaG9vc2VMb2NhbGUobmFtZXMpIHtcbiAgICAgICAgdmFyIGkgPSAwLFxuICAgICAgICAgICAgaixcbiAgICAgICAgICAgIG5leHQsXG4gICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICBzcGxpdDtcblxuICAgICAgICB3aGlsZSAoaSA8IG5hbWVzLmxlbmd0aCkge1xuICAgICAgICAgICAgc3BsaXQgPSBub3JtYWxpemVMb2NhbGUobmFtZXNbaV0pLnNwbGl0KCctJyk7XG4gICAgICAgICAgICBqID0gc3BsaXQubGVuZ3RoO1xuICAgICAgICAgICAgbmV4dCA9IG5vcm1hbGl6ZUxvY2FsZShuYW1lc1tpICsgMV0pO1xuICAgICAgICAgICAgbmV4dCA9IG5leHQgPyBuZXh0LnNwbGl0KCctJykgOiBudWxsO1xuICAgICAgICAgICAgd2hpbGUgKGogPiAwKSB7XG4gICAgICAgICAgICAgICAgbG9jYWxlID0gbG9hZExvY2FsZShzcGxpdC5zbGljZSgwLCBqKS5qb2luKCctJykpO1xuICAgICAgICAgICAgICAgIGlmIChsb2NhbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGxvY2FsZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICBuZXh0ICYmXG4gICAgICAgICAgICAgICAgICAgIG5leHQubGVuZ3RoID49IGogJiZcbiAgICAgICAgICAgICAgICAgICAgY29tbW9uUHJlZml4KHNwbGl0LCBuZXh0KSA+PSBqIC0gMVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAvL3RoZSBuZXh0IGFycmF5IGl0ZW0gaXMgYmV0dGVyIHRoYW4gYSBzaGFsbG93ZXIgc3Vic3RyaW5nIG9mIHRoaXMgb25lXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBqLS07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdsb2JhbExvY2FsZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0xvY2FsZU5hbWVTYW5lKG5hbWUpIHtcbiAgICAgICAgLy8gUHJldmVudCBuYW1lcyB0aGF0IGxvb2sgbGlrZSBmaWxlc3lzdGVtIHBhdGhzLCBpLmUgY29udGFpbiAnLycgb3IgJ1xcJ1xuICAgICAgICAvLyBFbnN1cmUgbmFtZSBpcyBhdmFpbGFibGUgYW5kIGZ1bmN0aW9uIHJldHVybnMgYm9vbGVhblxuICAgICAgICByZXR1cm4gISEobmFtZSAmJiBuYW1lLm1hdGNoKCdeW14vXFxcXFxcXFxdKiQnKSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbG9hZExvY2FsZShuYW1lKSB7XG4gICAgICAgIHZhciBvbGRMb2NhbGUgPSBudWxsLFxuICAgICAgICAgICAgYWxpYXNlZFJlcXVpcmU7XG4gICAgICAgIC8vIFRPRE86IEZpbmQgYSBiZXR0ZXIgd2F5IHRvIHJlZ2lzdGVyIGFuZCBsb2FkIGFsbCB0aGUgbG9jYWxlcyBpbiBOb2RlXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGxvY2FsZXNbbmFtZV0gPT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgICAgIG1vZHVsZSAmJlxuICAgICAgICAgICAgbW9kdWxlLmV4cG9ydHMgJiZcbiAgICAgICAgICAgIGlzTG9jYWxlTmFtZVNhbmUobmFtZSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIG9sZExvY2FsZSA9IGdsb2JhbExvY2FsZS5fYWJicjtcbiAgICAgICAgICAgICAgICBhbGlhc2VkUmVxdWlyZSA9IHJlcXVpcmU7XG4gICAgICAgICAgICAgICAgYWxpYXNlZFJlcXVpcmUoJy4vbG9jYWxlLycgKyBuYW1lKTtcbiAgICAgICAgICAgICAgICBnZXRTZXRHbG9iYWxMb2NhbGUob2xkTG9jYWxlKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAvLyBtYXJrIGFzIG5vdCBmb3VuZCB0byBhdm9pZCByZXBlYXRpbmcgZXhwZW5zaXZlIGZpbGUgcmVxdWlyZSBjYWxsIGNhdXNpbmcgaGlnaCBDUFVcbiAgICAgICAgICAgICAgICAvLyB3aGVuIHRyeWluZyB0byBmaW5kIGVuLVVTLCBlbl9VUywgZW4tdXMgZm9yIGV2ZXJ5IGZvcm1hdCBjYWxsXG4gICAgICAgICAgICAgICAgbG9jYWxlc1tuYW1lXSA9IG51bGw7IC8vIG51bGwgbWVhbnMgbm90IGZvdW5kXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxvY2FsZXNbbmFtZV07XG4gICAgfVxuXG4gICAgLy8gVGhpcyBmdW5jdGlvbiB3aWxsIGxvYWQgbG9jYWxlIGFuZCB0aGVuIHNldCB0aGUgZ2xvYmFsIGxvY2FsZS4gIElmXG4gICAgLy8gbm8gYXJndW1lbnRzIGFyZSBwYXNzZWQgaW4sIGl0IHdpbGwgc2ltcGx5IHJldHVybiB0aGUgY3VycmVudCBnbG9iYWxcbiAgICAvLyBsb2NhbGUga2V5LlxuICAgIGZ1bmN0aW9uIGdldFNldEdsb2JhbExvY2FsZShrZXksIHZhbHVlcykge1xuICAgICAgICB2YXIgZGF0YTtcbiAgICAgICAgaWYgKGtleSkge1xuICAgICAgICAgICAgaWYgKGlzVW5kZWZpbmVkKHZhbHVlcykpIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gZ2V0TG9jYWxlKGtleSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGRhdGEgPSBkZWZpbmVMb2NhbGUoa2V5LCB2YWx1ZXMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIC8vIG1vbWVudC5kdXJhdGlvbi5fbG9jYWxlID0gbW9tZW50Ll9sb2NhbGUgPSBkYXRhO1xuICAgICAgICAgICAgICAgIGdsb2JhbExvY2FsZSA9IGRhdGE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS53YXJuKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vd2FybiB1c2VyIGlmIGFyZ3VtZW50cyBhcmUgcGFzc2VkIGJ1dCB0aGUgbG9jYWxlIGNvdWxkIG5vdCBiZSBzZXRcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0xvY2FsZSAnICsga2V5ICsgJyBub3QgZm91bmQuIERpZCB5b3UgZm9yZ2V0IHRvIGxvYWQgaXQ/J1xuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBnbG9iYWxMb2NhbGUuX2FiYnI7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGVmaW5lTG9jYWxlKG5hbWUsIGNvbmZpZykge1xuICAgICAgICBpZiAoY29uZmlnICE9PSBudWxsKSB7XG4gICAgICAgICAgICB2YXIgbG9jYWxlLFxuICAgICAgICAgICAgICAgIHBhcmVudENvbmZpZyA9IGJhc2VDb25maWc7XG4gICAgICAgICAgICBjb25maWcuYWJiciA9IG5hbWU7XG4gICAgICAgICAgICBpZiAobG9jYWxlc1tuYW1lXSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZGVwcmVjYXRlU2ltcGxlKFxuICAgICAgICAgICAgICAgICAgICAnZGVmaW5lTG9jYWxlT3ZlcnJpZGUnLFxuICAgICAgICAgICAgICAgICAgICAndXNlIG1vbWVudC51cGRhdGVMb2NhbGUobG9jYWxlTmFtZSwgY29uZmlnKSB0byBjaGFuZ2UgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnYW4gZXhpc3RpbmcgbG9jYWxlLiBtb21lbnQuZGVmaW5lTG9jYWxlKGxvY2FsZU5hbWUsICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbmZpZykgc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgY3JlYXRpbmcgYSBuZXcgbG9jYWxlICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ1NlZSBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2RlZmluZS1sb2NhbGUvIGZvciBtb3JlIGluZm8uJ1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgcGFyZW50Q29uZmlnID0gbG9jYWxlc1tuYW1lXS5fY29uZmlnO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChjb25maWcucGFyZW50TG9jYWxlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBpZiAobG9jYWxlc1tjb25maWcucGFyZW50TG9jYWxlXSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcmVudENvbmZpZyA9IGxvY2FsZXNbY29uZmlnLnBhcmVudExvY2FsZV0uX2NvbmZpZztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsb2NhbGUgPSBsb2FkTG9jYWxlKGNvbmZpZy5wYXJlbnRMb2NhbGUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobG9jYWxlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudENvbmZpZyA9IGxvY2FsZS5fY29uZmlnO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFsb2NhbGVGYW1pbGllc1tjb25maWcucGFyZW50TG9jYWxlXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsZUZhbWlsaWVzW2NvbmZpZy5wYXJlbnRMb2NhbGVdID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGVGYW1pbGllc1tjb25maWcucGFyZW50TG9jYWxlXS5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZzogY29uZmlnLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxvY2FsZXNbbmFtZV0gPSBuZXcgTG9jYWxlKG1lcmdlQ29uZmlncyhwYXJlbnRDb25maWcsIGNvbmZpZykpO1xuXG4gICAgICAgICAgICBpZiAobG9jYWxlRmFtaWxpZXNbbmFtZV0pIHtcbiAgICAgICAgICAgICAgICBsb2NhbGVGYW1pbGllc1tuYW1lXS5mb3JFYWNoKGZ1bmN0aW9uICh4KSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmluZUxvY2FsZSh4Lm5hbWUsIHguY29uZmlnKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gYmFja3dhcmRzIGNvbXBhdCBmb3Igbm93OiBhbHNvIHNldCB0aGUgbG9jYWxlXG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgd2Ugc2V0IHRoZSBsb2NhbGUgQUZURVIgYWxsIGNoaWxkIGxvY2FsZXMgaGF2ZSBiZWVuXG4gICAgICAgICAgICAvLyBjcmVhdGVkLCBzbyB3ZSB3b24ndCBlbmQgdXAgd2l0aCB0aGUgY2hpbGQgbG9jYWxlIHNldC5cbiAgICAgICAgICAgIGdldFNldEdsb2JhbExvY2FsZShuYW1lKTtcblxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsZXNbbmFtZV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyB1c2VmdWwgZm9yIHRlc3RpbmdcbiAgICAgICAgICAgIGRlbGV0ZSBsb2NhbGVzW25hbWVdO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVMb2NhbGUobmFtZSwgY29uZmlnKSB7XG4gICAgICAgIGlmIChjb25maWcgIT0gbnVsbCkge1xuICAgICAgICAgICAgdmFyIGxvY2FsZSxcbiAgICAgICAgICAgICAgICB0bXBMb2NhbGUsXG4gICAgICAgICAgICAgICAgcGFyZW50Q29uZmlnID0gYmFzZUNvbmZpZztcblxuICAgICAgICAgICAgaWYgKGxvY2FsZXNbbmFtZV0gIT0gbnVsbCAmJiBsb2NhbGVzW25hbWVdLnBhcmVudExvY2FsZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIGV4aXN0aW5nIGNoaWxkIGxvY2FsZSBpbi1wbGFjZSB0byBhdm9pZCBtZW1vcnktbGVha3NcbiAgICAgICAgICAgICAgICBsb2NhbGVzW25hbWVdLnNldChtZXJnZUNvbmZpZ3MobG9jYWxlc1tuYW1lXS5fY29uZmlnLCBjb25maWcpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gTUVSR0VcbiAgICAgICAgICAgICAgICB0bXBMb2NhbGUgPSBsb2FkTG9jYWxlKG5hbWUpO1xuICAgICAgICAgICAgICAgIGlmICh0bXBMb2NhbGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnRDb25maWcgPSB0bXBMb2NhbGUuX2NvbmZpZztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uZmlnID0gbWVyZ2VDb25maWdzKHBhcmVudENvbmZpZywgY29uZmlnKTtcbiAgICAgICAgICAgICAgICBpZiAodG1wTG9jYWxlID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdXBkYXRlTG9jYWxlIGlzIGNhbGxlZCBmb3IgY3JlYXRpbmcgYSBuZXcgbG9jYWxlXG4gICAgICAgICAgICAgICAgICAgIC8vIFNldCBhYmJyIHNvIGl0IHdpbGwgaGF2ZSBhIG5hbWUgKGdldHRlcnMgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIC8vIHVuZGVmaW5lZCBvdGhlcndpc2UpLlxuICAgICAgICAgICAgICAgICAgICBjb25maWcuYWJiciA9IG5hbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxvY2FsZSA9IG5ldyBMb2NhbGUoY29uZmlnKTtcbiAgICAgICAgICAgICAgICBsb2NhbGUucGFyZW50TG9jYWxlID0gbG9jYWxlc1tuYW1lXTtcbiAgICAgICAgICAgICAgICBsb2NhbGVzW25hbWVdID0gbG9jYWxlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBiYWNrd2FyZHMgY29tcGF0IGZvciBub3c6IGFsc28gc2V0IHRoZSBsb2NhbGVcbiAgICAgICAgICAgIGdldFNldEdsb2JhbExvY2FsZShuYW1lKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIHBhc3MgbnVsbCBmb3IgY29uZmlnIHRvIHVudXBkYXRlLCB1c2VmdWwgZm9yIHRlc3RzXG4gICAgICAgICAgICBpZiAobG9jYWxlc1tuYW1lXSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaWYgKGxvY2FsZXNbbmFtZV0ucGFyZW50TG9jYWxlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxlc1tuYW1lXSA9IGxvY2FsZXNbbmFtZV0ucGFyZW50TG9jYWxlO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmFtZSA9PT0gZ2V0U2V0R2xvYmFsTG9jYWxlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldFNldEdsb2JhbExvY2FsZShuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobG9jYWxlc1tuYW1lXSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBsb2NhbGVzW25hbWVdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbG9jYWxlc1tuYW1lXTtcbiAgICB9XG5cbiAgICAvLyByZXR1cm5zIGxvY2FsZSBkYXRhXG4gICAgZnVuY3Rpb24gZ2V0TG9jYWxlKGtleSkge1xuICAgICAgICB2YXIgbG9jYWxlO1xuXG4gICAgICAgIGlmIChrZXkgJiYga2V5Ll9sb2NhbGUgJiYga2V5Ll9sb2NhbGUuX2FiYnIpIHtcbiAgICAgICAgICAgIGtleSA9IGtleS5fbG9jYWxlLl9hYmJyO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFrZXkpIHtcbiAgICAgICAgICAgIHJldHVybiBnbG9iYWxMb2NhbGU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWlzQXJyYXkoa2V5KSkge1xuICAgICAgICAgICAgLy9zaG9ydC1jaXJjdWl0IGV2ZXJ5dGhpbmcgZWxzZVxuICAgICAgICAgICAgbG9jYWxlID0gbG9hZExvY2FsZShrZXkpO1xuICAgICAgICAgICAgaWYgKGxvY2FsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsb2NhbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBrZXkgPSBba2V5XTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjaG9vc2VMb2NhbGUoa2V5KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaXN0TG9jYWxlcygpIHtcbiAgICAgICAgcmV0dXJuIGtleXMobG9jYWxlcyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2hlY2tPdmVyZmxvdyhtKSB7XG4gICAgICAgIHZhciBvdmVyZmxvdyxcbiAgICAgICAgICAgIGEgPSBtLl9hO1xuXG4gICAgICAgIGlmIChhICYmIGdldFBhcnNpbmdGbGFncyhtKS5vdmVyZmxvdyA9PT0gLTIpIHtcbiAgICAgICAgICAgIG92ZXJmbG93ID1cbiAgICAgICAgICAgICAgICBhW01PTlRIXSA8IDAgfHwgYVtNT05USF0gPiAxMVxuICAgICAgICAgICAgICAgICAgICA/IE1PTlRIXG4gICAgICAgICAgICAgICAgICAgIDogYVtEQVRFXSA8IDEgfHwgYVtEQVRFXSA+IGRheXNJbk1vbnRoKGFbWUVBUl0sIGFbTU9OVEhdKVxuICAgICAgICAgICAgICAgICAgICAgID8gREFURVxuICAgICAgICAgICAgICAgICAgICAgIDogYVtIT1VSXSA8IDAgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYVtIT1VSXSA+IDI0IHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgIChhW0hPVVJdID09PSAyNCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGFbTUlOVVRFXSAhPT0gMCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFbU0VDT05EXSAhPT0gMCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFbTUlMTElTRUNPTkRdICE9PSAwKSlcbiAgICAgICAgICAgICAgICAgICAgICAgID8gSE9VUlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBhW01JTlVURV0gPCAwIHx8IGFbTUlOVVRFXSA+IDU5XG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gTUlOVVRFXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogYVtTRUNPTkRdIDwgMCB8fCBhW1NFQ09ORF0gPiA1OVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gU0VDT05EXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBhW01JTExJU0VDT05EXSA8IDAgfHwgYVtNSUxMSVNFQ09ORF0gPiA5OTlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gTUlMTElTRUNPTkRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogLTE7XG5cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBnZXRQYXJzaW5nRmxhZ3MobSkuX292ZXJmbG93RGF5T2ZZZWFyICYmXG4gICAgICAgICAgICAgICAgKG92ZXJmbG93IDwgWUVBUiB8fCBvdmVyZmxvdyA+IERBVEUpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBvdmVyZmxvdyA9IERBVEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZ2V0UGFyc2luZ0ZsYWdzKG0pLl9vdmVyZmxvd1dlZWtzICYmIG92ZXJmbG93ID09PSAtMSkge1xuICAgICAgICAgICAgICAgIG92ZXJmbG93ID0gV0VFSztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChnZXRQYXJzaW5nRmxhZ3MobSkuX292ZXJmbG93V2Vla2RheSAmJiBvdmVyZmxvdyA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBvdmVyZmxvdyA9IFdFRUtEQVk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhtKS5vdmVyZmxvdyA9IG92ZXJmbG93O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG07XG4gICAgfVxuXG4gICAgLy8gaXNvIDg2MDEgcmVnZXhcbiAgICAvLyAwMDAwLTAwLTAwIDAwMDAtVzAwIG9yIDAwMDAtVzAwLTAgKyBUICsgMDAgb3IgMDA6MDAgb3IgMDA6MDA6MDAgb3IgMDA6MDA6MDAuMDAwICsgKzAwOjAwIG9yICswMDAwIG9yICswMClcbiAgICB2YXIgZXh0ZW5kZWRJc29SZWdleCA9XG4gICAgICAgICAgICAvXlxccyooKD86WystXVxcZHs2fXxcXGR7NH0pLSg/OlxcZFxcZC1cXGRcXGR8V1xcZFxcZC1cXGR8V1xcZFxcZHxcXGRcXGRcXGR8XFxkXFxkKSkoPzooVHwgKShcXGRcXGQoPzo6XFxkXFxkKD86OlxcZFxcZCg/OlsuLF1cXGQrKT8pPyk/KShbKy1dXFxkXFxkKD86Oj9cXGRcXGQpP3xcXHMqWik/KT8kLyxcbiAgICAgICAgYmFzaWNJc29SZWdleCA9XG4gICAgICAgICAgICAvXlxccyooKD86WystXVxcZHs2fXxcXGR7NH0pKD86XFxkXFxkXFxkXFxkfFdcXGRcXGRcXGR8V1xcZFxcZHxcXGRcXGRcXGR8XFxkXFxkfCkpKD86KFR8ICkoXFxkXFxkKD86XFxkXFxkKD86XFxkXFxkKD86Wy4sXVxcZCspPyk/KT8pKFsrLV1cXGRcXGQoPzo6P1xcZFxcZCk/fFxccypaKT8pPyQvLFxuICAgICAgICB0elJlZ2V4ID0gL1p8WystXVxcZFxcZCg/Ojo/XFxkXFxkKT8vLFxuICAgICAgICBpc29EYXRlcyA9IFtcbiAgICAgICAgICAgIFsnWVlZWVlZLU1NLUREJywgL1srLV1cXGR7Nn0tXFxkXFxkLVxcZFxcZC9dLFxuICAgICAgICAgICAgWydZWVlZLU1NLUREJywgL1xcZHs0fS1cXGRcXGQtXFxkXFxkL10sXG4gICAgICAgICAgICBbJ0dHR0ctW1ddV1ctRScsIC9cXGR7NH0tV1xcZFxcZC1cXGQvXSxcbiAgICAgICAgICAgIFsnR0dHRy1bV11XVycsIC9cXGR7NH0tV1xcZFxcZC8sIGZhbHNlXSxcbiAgICAgICAgICAgIFsnWVlZWS1EREQnLCAvXFxkezR9LVxcZHszfS9dLFxuICAgICAgICAgICAgWydZWVlZLU1NJywgL1xcZHs0fS1cXGRcXGQvLCBmYWxzZV0sXG4gICAgICAgICAgICBbJ1lZWVlZWU1NREQnLCAvWystXVxcZHsxMH0vXSxcbiAgICAgICAgICAgIFsnWVlZWU1NREQnLCAvXFxkezh9L10sXG4gICAgICAgICAgICBbJ0dHR0dbV11XV0UnLCAvXFxkezR9V1xcZHszfS9dLFxuICAgICAgICAgICAgWydHR0dHW1ddV1cnLCAvXFxkezR9V1xcZHsyfS8sIGZhbHNlXSxcbiAgICAgICAgICAgIFsnWVlZWURERCcsIC9cXGR7N30vXSxcbiAgICAgICAgICAgIFsnWVlZWU1NJywgL1xcZHs2fS8sIGZhbHNlXSxcbiAgICAgICAgICAgIFsnWVlZWScsIC9cXGR7NH0vLCBmYWxzZV0sXG4gICAgICAgIF0sXG4gICAgICAgIC8vIGlzbyB0aW1lIGZvcm1hdHMgYW5kIHJlZ2V4ZXNcbiAgICAgICAgaXNvVGltZXMgPSBbXG4gICAgICAgICAgICBbJ0hIOm1tOnNzLlNTU1MnLCAvXFxkXFxkOlxcZFxcZDpcXGRcXGRcXC5cXGQrL10sXG4gICAgICAgICAgICBbJ0hIOm1tOnNzLFNTU1MnLCAvXFxkXFxkOlxcZFxcZDpcXGRcXGQsXFxkKy9dLFxuICAgICAgICAgICAgWydISDptbTpzcycsIC9cXGRcXGQ6XFxkXFxkOlxcZFxcZC9dLFxuICAgICAgICAgICAgWydISDptbScsIC9cXGRcXGQ6XFxkXFxkL10sXG4gICAgICAgICAgICBbJ0hIbW1zcy5TU1NTJywgL1xcZFxcZFxcZFxcZFxcZFxcZFxcLlxcZCsvXSxcbiAgICAgICAgICAgIFsnSEhtbXNzLFNTU1MnLCAvXFxkXFxkXFxkXFxkXFxkXFxkLFxcZCsvXSxcbiAgICAgICAgICAgIFsnSEhtbXNzJywgL1xcZFxcZFxcZFxcZFxcZFxcZC9dLFxuICAgICAgICAgICAgWydISG1tJywgL1xcZFxcZFxcZFxcZC9dLFxuICAgICAgICAgICAgWydISCcsIC9cXGRcXGQvXSxcbiAgICAgICAgXSxcbiAgICAgICAgYXNwTmV0SnNvblJlZ2V4ID0gL15cXC8/RGF0ZVxcKCgtP1xcZCspL2ksXG4gICAgICAgIC8vIFJGQyAyODIyIHJlZ2V4OiBGb3IgZGV0YWlscyBzZWUgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzI4MjIjc2VjdGlvbi0zLjNcbiAgICAgICAgcmZjMjgyMiA9XG4gICAgICAgICAgICAvXig/OihNb258VHVlfFdlZHxUaHV8RnJpfFNhdHxTdW4pLD9cXHMpPyhcXGR7MSwyfSlcXHMoSmFufEZlYnxNYXJ8QXByfE1heXxKdW58SnVsfEF1Z3xTZXB8T2N0fE5vdnxEZWMpXFxzKFxcZHsyLDR9KVxccyhcXGRcXGQpOihcXGRcXGQpKD86OihcXGRcXGQpKT9cXHMoPzooVVR8R01UfFtFQ01QXVtTRF1UKXwoW1p6XSl8KFsrLV1cXGR7NH0pKSQvLFxuICAgICAgICBvYnNPZmZzZXRzID0ge1xuICAgICAgICAgICAgVVQ6IDAsXG4gICAgICAgICAgICBHTVQ6IDAsXG4gICAgICAgICAgICBFRFQ6IC00ICogNjAsXG4gICAgICAgICAgICBFU1Q6IC01ICogNjAsXG4gICAgICAgICAgICBDRFQ6IC01ICogNjAsXG4gICAgICAgICAgICBDU1Q6IC02ICogNjAsXG4gICAgICAgICAgICBNRFQ6IC02ICogNjAsXG4gICAgICAgICAgICBNU1Q6IC03ICogNjAsXG4gICAgICAgICAgICBQRFQ6IC03ICogNjAsXG4gICAgICAgICAgICBQU1Q6IC04ICogNjAsXG4gICAgICAgIH07XG5cbiAgICAvLyBkYXRlIGZyb20gaXNvIGZvcm1hdFxuICAgIGZ1bmN0aW9uIGNvbmZpZ0Zyb21JU08oY29uZmlnKSB7XG4gICAgICAgIHZhciBpLFxuICAgICAgICAgICAgbCxcbiAgICAgICAgICAgIHN0cmluZyA9IGNvbmZpZy5faSxcbiAgICAgICAgICAgIG1hdGNoID0gZXh0ZW5kZWRJc29SZWdleC5leGVjKHN0cmluZykgfHwgYmFzaWNJc29SZWdleC5leGVjKHN0cmluZyksXG4gICAgICAgICAgICBhbGxvd1RpbWUsXG4gICAgICAgICAgICBkYXRlRm9ybWF0LFxuICAgICAgICAgICAgdGltZUZvcm1hdCxcbiAgICAgICAgICAgIHR6Rm9ybWF0LFxuICAgICAgICAgICAgaXNvRGF0ZXNMZW4gPSBpc29EYXRlcy5sZW5ndGgsXG4gICAgICAgICAgICBpc29UaW1lc0xlbiA9IGlzb1RpbWVzLmxlbmd0aDtcblxuICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLmlzbyA9IHRydWU7XG4gICAgICAgICAgICBmb3IgKGkgPSAwLCBsID0gaXNvRGF0ZXNMZW47IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNvRGF0ZXNbaV1bMV0uZXhlYyhtYXRjaFsxXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0ZUZvcm1hdCA9IGlzb0RhdGVzW2ldWzBdO1xuICAgICAgICAgICAgICAgICAgICBhbGxvd1RpbWUgPSBpc29EYXRlc1tpXVsyXSAhPT0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkYXRlRm9ybWF0ID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25maWcuX2lzVmFsaWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWF0Y2hbM10pIHtcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwLCBsID0gaXNvVGltZXNMZW47IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzb1RpbWVzW2ldWzFdLmV4ZWMobWF0Y2hbM10pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBtYXRjaFsyXSBzaG91bGQgYmUgJ1QnIG9yIHNwYWNlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lRm9ybWF0ID0gKG1hdGNoWzJdIHx8ICcgJykgKyBpc29UaW1lc1tpXVswXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aW1lRm9ybWF0ID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uZmlnLl9pc1ZhbGlkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWFsbG93VGltZSAmJiB0aW1lRm9ybWF0ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25maWcuX2lzVmFsaWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWF0Y2hbNF0pIHtcbiAgICAgICAgICAgICAgICBpZiAodHpSZWdleC5leGVjKG1hdGNoWzRdKSkge1xuICAgICAgICAgICAgICAgICAgICB0ekZvcm1hdCA9ICdaJztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25maWcuX2lzVmFsaWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbmZpZy5fZiA9IGRhdGVGb3JtYXQgKyAodGltZUZvcm1hdCB8fCAnJykgKyAodHpGb3JtYXQgfHwgJycpO1xuICAgICAgICAgICAgY29uZmlnRnJvbVN0cmluZ0FuZEZvcm1hdChjb25maWcpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uZmlnLl9pc1ZhbGlkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBleHRyYWN0RnJvbVJGQzI4MjJTdHJpbmdzKFxuICAgICAgICB5ZWFyU3RyLFxuICAgICAgICBtb250aFN0cixcbiAgICAgICAgZGF5U3RyLFxuICAgICAgICBob3VyU3RyLFxuICAgICAgICBtaW51dGVTdHIsXG4gICAgICAgIHNlY29uZFN0clxuICAgICkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gW1xuICAgICAgICAgICAgdW50cnVuY2F0ZVllYXIoeWVhclN0ciksXG4gICAgICAgICAgICBkZWZhdWx0TG9jYWxlTW9udGhzU2hvcnQuaW5kZXhPZihtb250aFN0ciksXG4gICAgICAgICAgICBwYXJzZUludChkYXlTdHIsIDEwKSxcbiAgICAgICAgICAgIHBhcnNlSW50KGhvdXJTdHIsIDEwKSxcbiAgICAgICAgICAgIHBhcnNlSW50KG1pbnV0ZVN0ciwgMTApLFxuICAgICAgICBdO1xuXG4gICAgICAgIGlmIChzZWNvbmRTdHIpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHBhcnNlSW50KHNlY29uZFN0ciwgMTApKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdW50cnVuY2F0ZVllYXIoeWVhclN0cikge1xuICAgICAgICB2YXIgeWVhciA9IHBhcnNlSW50KHllYXJTdHIsIDEwKTtcbiAgICAgICAgaWYgKHllYXIgPD0gNDkpIHtcbiAgICAgICAgICAgIHJldHVybiAyMDAwICsgeWVhcjtcbiAgICAgICAgfSBlbHNlIGlmICh5ZWFyIDw9IDk5OSkge1xuICAgICAgICAgICAgcmV0dXJuIDE5MDAgKyB5ZWFyO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB5ZWFyO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHByZXByb2Nlc3NSRkMyODIyKHMpIHtcbiAgICAgICAgLy8gUmVtb3ZlIGNvbW1lbnRzIGFuZCBmb2xkaW5nIHdoaXRlc3BhY2UgYW5kIHJlcGxhY2UgbXVsdGlwbGUtc3BhY2VzIHdpdGggYSBzaW5nbGUgc3BhY2VcbiAgICAgICAgcmV0dXJuIHNcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXChbXigpXSpcXCl8W1xcblxcdF0vZywgJyAnKVxuICAgICAgICAgICAgLnJlcGxhY2UoLyhcXHNcXHMrKS9nLCAnICcpXG4gICAgICAgICAgICAucmVwbGFjZSgvXlxcc1xccyovLCAnJylcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXHNcXHMqJC8sICcnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjaGVja1dlZWtkYXkod2Vla2RheVN0ciwgcGFyc2VkSW5wdXQsIGNvbmZpZykge1xuICAgICAgICBpZiAod2Vla2RheVN0cikge1xuICAgICAgICAgICAgLy8gVE9ETzogUmVwbGFjZSB0aGUgdmFuaWxsYSBKUyBEYXRlIG9iamVjdCB3aXRoIGFuIGluZGVwZW5kZW50IGRheS1vZi13ZWVrIGNoZWNrLlxuICAgICAgICAgICAgdmFyIHdlZWtkYXlQcm92aWRlZCA9IGRlZmF1bHRMb2NhbGVXZWVrZGF5c1Nob3J0LmluZGV4T2Yod2Vla2RheVN0ciksXG4gICAgICAgICAgICAgICAgd2Vla2RheUFjdHVhbCA9IG5ldyBEYXRlKFxuICAgICAgICAgICAgICAgICAgICBwYXJzZWRJbnB1dFswXSxcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkSW5wdXRbMV0sXG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZElucHV0WzJdXG4gICAgICAgICAgICAgICAgKS5nZXREYXkoKTtcbiAgICAgICAgICAgIGlmICh3ZWVrZGF5UHJvdmlkZWQgIT09IHdlZWtkYXlBY3R1YWwpIHtcbiAgICAgICAgICAgICAgICBnZXRQYXJzaW5nRmxhZ3MoY29uZmlnKS53ZWVrZGF5TWlzbWF0Y2ggPSB0cnVlO1xuICAgICAgICAgICAgICAgIGNvbmZpZy5faXNWYWxpZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVPZmZzZXQob2JzT2Zmc2V0LCBtaWxpdGFyeU9mZnNldCwgbnVtT2Zmc2V0KSB7XG4gICAgICAgIGlmIChvYnNPZmZzZXQpIHtcbiAgICAgICAgICAgIHJldHVybiBvYnNPZmZzZXRzW29ic09mZnNldF07XG4gICAgICAgIH0gZWxzZSBpZiAobWlsaXRhcnlPZmZzZXQpIHtcbiAgICAgICAgICAgIC8vIHRoZSBvbmx5IGFsbG93ZWQgbWlsaXRhcnkgdHogaXMgWlxuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgaG0gPSBwYXJzZUludChudW1PZmZzZXQsIDEwKSxcbiAgICAgICAgICAgICAgICBtID0gaG0gJSAxMDAsXG4gICAgICAgICAgICAgICAgaCA9IChobSAtIG0pIC8gMTAwO1xuICAgICAgICAgICAgcmV0dXJuIGggKiA2MCArIG07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBkYXRlIGFuZCB0aW1lIGZyb20gcmVmIDI4MjIgZm9ybWF0XG4gICAgZnVuY3Rpb24gY29uZmlnRnJvbVJGQzI4MjIoY29uZmlnKSB7XG4gICAgICAgIHZhciBtYXRjaCA9IHJmYzI4MjIuZXhlYyhwcmVwcm9jZXNzUkZDMjgyMihjb25maWcuX2kpKSxcbiAgICAgICAgICAgIHBhcnNlZEFycmF5O1xuICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgIHBhcnNlZEFycmF5ID0gZXh0cmFjdEZyb21SRkMyODIyU3RyaW5ncyhcbiAgICAgICAgICAgICAgICBtYXRjaFs0XSxcbiAgICAgICAgICAgICAgICBtYXRjaFszXSxcbiAgICAgICAgICAgICAgICBtYXRjaFsyXSxcbiAgICAgICAgICAgICAgICBtYXRjaFs1XSxcbiAgICAgICAgICAgICAgICBtYXRjaFs2XSxcbiAgICAgICAgICAgICAgICBtYXRjaFs3XVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGlmICghY2hlY2tXZWVrZGF5KG1hdGNoWzFdLCBwYXJzZWRBcnJheSwgY29uZmlnKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uZmlnLl9hID0gcGFyc2VkQXJyYXk7XG4gICAgICAgICAgICBjb25maWcuX3R6bSA9IGNhbGN1bGF0ZU9mZnNldChtYXRjaFs4XSwgbWF0Y2hbOV0sIG1hdGNoWzEwXSk7XG5cbiAgICAgICAgICAgIGNvbmZpZy5fZCA9IGNyZWF0ZVVUQ0RhdGUuYXBwbHkobnVsbCwgY29uZmlnLl9hKTtcbiAgICAgICAgICAgIGNvbmZpZy5fZC5zZXRVVENNaW51dGVzKGNvbmZpZy5fZC5nZXRVVENNaW51dGVzKCkgLSBjb25maWcuX3R6bSk7XG5cbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLnJmYzI4MjIgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uZmlnLl9pc1ZhbGlkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBkYXRlIGZyb20gMSkgQVNQLk5FVCwgMikgSVNPLCAzKSBSRkMgMjgyMiBmb3JtYXRzLCBvciA0KSBvcHRpb25hbCBmYWxsYmFjayBpZiBwYXJzaW5nIGlzbid0IHN0cmljdFxuICAgIGZ1bmN0aW9uIGNvbmZpZ0Zyb21TdHJpbmcoY29uZmlnKSB7XG4gICAgICAgIHZhciBtYXRjaGVkID0gYXNwTmV0SnNvblJlZ2V4LmV4ZWMoY29uZmlnLl9pKTtcbiAgICAgICAgaWYgKG1hdGNoZWQgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbmZpZy5fZCA9IG5ldyBEYXRlKCttYXRjaGVkWzFdKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbmZpZ0Zyb21JU08oY29uZmlnKTtcbiAgICAgICAgaWYgKGNvbmZpZy5faXNWYWxpZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGRlbGV0ZSBjb25maWcuX2lzVmFsaWQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25maWdGcm9tUkZDMjgyMihjb25maWcpO1xuICAgICAgICBpZiAoY29uZmlnLl9pc1ZhbGlkID09PSBmYWxzZSkge1xuICAgICAgICAgICAgZGVsZXRlIGNvbmZpZy5faXNWYWxpZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb25maWcuX3N0cmljdCkge1xuICAgICAgICAgICAgY29uZmlnLl9pc1ZhbGlkID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBGaW5hbCBhdHRlbXB0LCB1c2UgSW5wdXQgRmFsbGJhY2tcbiAgICAgICAgICAgIGhvb2tzLmNyZWF0ZUZyb21JbnB1dEZhbGxiYWNrKGNvbmZpZyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBob29rcy5jcmVhdGVGcm9tSW5wdXRGYWxsYmFjayA9IGRlcHJlY2F0ZShcbiAgICAgICAgJ3ZhbHVlIHByb3ZpZGVkIGlzIG5vdCBpbiBhIHJlY29nbml6ZWQgUkZDMjgyMiBvciBJU08gZm9ybWF0LiBtb21lbnQgY29uc3RydWN0aW9uIGZhbGxzIGJhY2sgdG8ganMgRGF0ZSgpLCAnICtcbiAgICAgICAgICAgICd3aGljaCBpcyBub3QgcmVsaWFibGUgYWNyb3NzIGFsbCBicm93c2VycyBhbmQgdmVyc2lvbnMuIE5vbiBSRkMyODIyL0lTTyBkYXRlIGZvcm1hdHMgYXJlICcgK1xuICAgICAgICAgICAgJ2Rpc2NvdXJhZ2VkLiBQbGVhc2UgcmVmZXIgdG8gaHR0cDovL21vbWVudGpzLmNvbS9ndWlkZXMvIy93YXJuaW5ncy9qcy1kYXRlLyBmb3IgbW9yZSBpbmZvLicsXG4gICAgICAgIGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgICAgIGNvbmZpZy5fZCA9IG5ldyBEYXRlKGNvbmZpZy5faSArIChjb25maWcuX3VzZVVUQyA/ICcgVVRDJyA6ICcnKSk7XG4gICAgICAgIH1cbiAgICApO1xuXG4gICAgLy8gUGljayB0aGUgZmlyc3QgZGVmaW5lZCBvZiB0d28gb3IgdGhyZWUgYXJndW1lbnRzLlxuICAgIGZ1bmN0aW9uIGRlZmF1bHRzKGEsIGIsIGMpIHtcbiAgICAgICAgaWYgKGEgIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGIgIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGM7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3VycmVudERhdGVBcnJheShjb25maWcpIHtcbiAgICAgICAgLy8gaG9va3MgaXMgYWN0dWFsbHkgdGhlIGV4cG9ydGVkIG1vbWVudCBvYmplY3RcbiAgICAgICAgdmFyIG5vd1ZhbHVlID0gbmV3IERhdGUoaG9va3Mubm93KCkpO1xuICAgICAgICBpZiAoY29uZmlnLl91c2VVVEMpIHtcbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgbm93VmFsdWUuZ2V0VVRDRnVsbFllYXIoKSxcbiAgICAgICAgICAgICAgICBub3dWYWx1ZS5nZXRVVENNb250aCgpLFxuICAgICAgICAgICAgICAgIG5vd1ZhbHVlLmdldFVUQ0RhdGUoKSxcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtub3dWYWx1ZS5nZXRGdWxsWWVhcigpLCBub3dWYWx1ZS5nZXRNb250aCgpLCBub3dWYWx1ZS5nZXREYXRlKCldO1xuICAgIH1cblxuICAgIC8vIGNvbnZlcnQgYW4gYXJyYXkgdG8gYSBkYXRlLlxuICAgIC8vIHRoZSBhcnJheSBzaG91bGQgbWlycm9yIHRoZSBwYXJhbWV0ZXJzIGJlbG93XG4gICAgLy8gbm90ZTogYWxsIHZhbHVlcyBwYXN0IHRoZSB5ZWFyIGFyZSBvcHRpb25hbCBhbmQgd2lsbCBkZWZhdWx0IHRvIHRoZSBsb3dlc3QgcG9zc2libGUgdmFsdWUuXG4gICAgLy8gW3llYXIsIG1vbnRoLCBkYXkgLCBob3VyLCBtaW51dGUsIHNlY29uZCwgbWlsbGlzZWNvbmRdXG4gICAgZnVuY3Rpb24gY29uZmlnRnJvbUFycmF5KGNvbmZpZykge1xuICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgIGRhdGUsXG4gICAgICAgICAgICBpbnB1dCA9IFtdLFxuICAgICAgICAgICAgY3VycmVudERhdGUsXG4gICAgICAgICAgICBleHBlY3RlZFdlZWtkYXksXG4gICAgICAgICAgICB5ZWFyVG9Vc2U7XG5cbiAgICAgICAgaWYgKGNvbmZpZy5fZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY3VycmVudERhdGUgPSBjdXJyZW50RGF0ZUFycmF5KGNvbmZpZyk7XG5cbiAgICAgICAgLy9jb21wdXRlIGRheSBvZiB0aGUgeWVhciBmcm9tIHdlZWtzIGFuZCB3ZWVrZGF5c1xuICAgICAgICBpZiAoY29uZmlnLl93ICYmIGNvbmZpZy5fYVtEQVRFXSA9PSBudWxsICYmIGNvbmZpZy5fYVtNT05USF0gPT0gbnVsbCkge1xuICAgICAgICAgICAgZGF5T2ZZZWFyRnJvbVdlZWtJbmZvKGNvbmZpZyk7XG4gICAgICAgIH1cblxuICAgICAgICAvL2lmIHRoZSBkYXkgb2YgdGhlIHllYXIgaXMgc2V0LCBmaWd1cmUgb3V0IHdoYXQgaXQgaXNcbiAgICAgICAgaWYgKGNvbmZpZy5fZGF5T2ZZZWFyICE9IG51bGwpIHtcbiAgICAgICAgICAgIHllYXJUb1VzZSA9IGRlZmF1bHRzKGNvbmZpZy5fYVtZRUFSXSwgY3VycmVudERhdGVbWUVBUl0pO1xuXG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgY29uZmlnLl9kYXlPZlllYXIgPiBkYXlzSW5ZZWFyKHllYXJUb1VzZSkgfHxcbiAgICAgICAgICAgICAgICBjb25maWcuX2RheU9mWWVhciA9PT0gMFxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykuX292ZXJmbG93RGF5T2ZZZWFyID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZGF0ZSA9IGNyZWF0ZVVUQ0RhdGUoeWVhclRvVXNlLCAwLCBjb25maWcuX2RheU9mWWVhcik7XG4gICAgICAgICAgICBjb25maWcuX2FbTU9OVEhdID0gZGF0ZS5nZXRVVENNb250aCgpO1xuICAgICAgICAgICAgY29uZmlnLl9hW0RBVEVdID0gZGF0ZS5nZXRVVENEYXRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEZWZhdWx0IHRvIGN1cnJlbnQgZGF0ZS5cbiAgICAgICAgLy8gKiBpZiBubyB5ZWFyLCBtb250aCwgZGF5IG9mIG1vbnRoIGFyZSBnaXZlbiwgZGVmYXVsdCB0byB0b2RheVxuICAgICAgICAvLyAqIGlmIGRheSBvZiBtb250aCBpcyBnaXZlbiwgZGVmYXVsdCBtb250aCBhbmQgeWVhclxuICAgICAgICAvLyAqIGlmIG1vbnRoIGlzIGdpdmVuLCBkZWZhdWx0IG9ubHkgeWVhclxuICAgICAgICAvLyAqIGlmIHllYXIgaXMgZ2l2ZW4sIGRvbid0IGRlZmF1bHQgYW55dGhpbmdcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IDMgJiYgY29uZmlnLl9hW2ldID09IG51bGw7ICsraSkge1xuICAgICAgICAgICAgY29uZmlnLl9hW2ldID0gaW5wdXRbaV0gPSBjdXJyZW50RGF0ZVtpXTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFplcm8gb3V0IHdoYXRldmVyIHdhcyBub3QgZGVmYXVsdGVkLCBpbmNsdWRpbmcgdGltZVxuICAgICAgICBmb3IgKDsgaSA8IDc7IGkrKykge1xuICAgICAgICAgICAgY29uZmlnLl9hW2ldID0gaW5wdXRbaV0gPVxuICAgICAgICAgICAgICAgIGNvbmZpZy5fYVtpXSA9PSBudWxsID8gKGkgPT09IDIgPyAxIDogMCkgOiBjb25maWcuX2FbaV07XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDaGVjayBmb3IgMjQ6MDA6MDAuMDAwXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNvbmZpZy5fYVtIT1VSXSA9PT0gMjQgJiZcbiAgICAgICAgICAgIGNvbmZpZy5fYVtNSU5VVEVdID09PSAwICYmXG4gICAgICAgICAgICBjb25maWcuX2FbU0VDT05EXSA9PT0gMCAmJlxuICAgICAgICAgICAgY29uZmlnLl9hW01JTExJU0VDT05EXSA9PT0gMFxuICAgICAgICApIHtcbiAgICAgICAgICAgIGNvbmZpZy5fbmV4dERheSA9IHRydWU7XG4gICAgICAgICAgICBjb25maWcuX2FbSE9VUl0gPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uZmlnLl9kID0gKGNvbmZpZy5fdXNlVVRDID8gY3JlYXRlVVRDRGF0ZSA6IGNyZWF0ZURhdGUpLmFwcGx5KFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIGlucHV0XG4gICAgICAgICk7XG4gICAgICAgIGV4cGVjdGVkV2Vla2RheSA9IGNvbmZpZy5fdXNlVVRDXG4gICAgICAgICAgICA/IGNvbmZpZy5fZC5nZXRVVENEYXkoKVxuICAgICAgICAgICAgOiBjb25maWcuX2QuZ2V0RGF5KCk7XG5cbiAgICAgICAgLy8gQXBwbHkgdGltZXpvbmUgb2Zmc2V0IGZyb20gaW5wdXQuIFRoZSBhY3R1YWwgdXRjT2Zmc2V0IGNhbiBiZSBjaGFuZ2VkXG4gICAgICAgIC8vIHdpdGggcGFyc2Vab25lLlxuICAgICAgICBpZiAoY29uZmlnLl90em0gIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uZmlnLl9kLnNldFVUQ01pbnV0ZXMoY29uZmlnLl9kLmdldFVUQ01pbnV0ZXMoKSAtIGNvbmZpZy5fdHptKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb25maWcuX25leHREYXkpIHtcbiAgICAgICAgICAgIGNvbmZpZy5fYVtIT1VSXSA9IDI0O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY2hlY2sgZm9yIG1pc21hdGNoaW5nIGRheSBvZiB3ZWVrXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNvbmZpZy5fdyAmJlxuICAgICAgICAgICAgdHlwZW9mIGNvbmZpZy5fdy5kICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAgICAgY29uZmlnLl93LmQgIT09IGV4cGVjdGVkV2Vla2RheVxuICAgICAgICApIHtcbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLndlZWtkYXlNaXNtYXRjaCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkYXlPZlllYXJGcm9tV2Vla0luZm8oY29uZmlnKSB7XG4gICAgICAgIHZhciB3LCB3ZWVrWWVhciwgd2Vlaywgd2Vla2RheSwgZG93LCBkb3ksIHRlbXAsIHdlZWtkYXlPdmVyZmxvdywgY3VyV2VlaztcblxuICAgICAgICB3ID0gY29uZmlnLl93O1xuICAgICAgICBpZiAody5HRyAhPSBudWxsIHx8IHcuVyAhPSBudWxsIHx8IHcuRSAhPSBudWxsKSB7XG4gICAgICAgICAgICBkb3cgPSAxO1xuICAgICAgICAgICAgZG95ID0gNDtcblxuICAgICAgICAgICAgLy8gVE9ETzogV2UgbmVlZCB0byB0YWtlIHRoZSBjdXJyZW50IGlzb1dlZWtZZWFyLCBidXQgdGhhdCBkZXBlbmRzIG9uXG4gICAgICAgICAgICAvLyBob3cgd2UgaW50ZXJwcmV0IG5vdyAobG9jYWwsIHV0YywgZml4ZWQgb2Zmc2V0KS4gU28gY3JlYXRlXG4gICAgICAgICAgICAvLyBhIG5vdyB2ZXJzaW9uIG9mIGN1cnJlbnQgY29uZmlnICh0YWtlIGxvY2FsL3V0Yy9vZmZzZXQgZmxhZ3MsIGFuZFxuICAgICAgICAgICAgLy8gY3JlYXRlIG5vdykuXG4gICAgICAgICAgICB3ZWVrWWVhciA9IGRlZmF1bHRzKFxuICAgICAgICAgICAgICAgIHcuR0csXG4gICAgICAgICAgICAgICAgY29uZmlnLl9hW1lFQVJdLFxuICAgICAgICAgICAgICAgIHdlZWtPZlllYXIoY3JlYXRlTG9jYWwoKSwgMSwgNCkueWVhclxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHdlZWsgPSBkZWZhdWx0cyh3LlcsIDEpO1xuICAgICAgICAgICAgd2Vla2RheSA9IGRlZmF1bHRzKHcuRSwgMSk7XG4gICAgICAgICAgICBpZiAod2Vla2RheSA8IDEgfHwgd2Vla2RheSA+IDcpIHtcbiAgICAgICAgICAgICAgICB3ZWVrZGF5T3ZlcmZsb3cgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZG93ID0gY29uZmlnLl9sb2NhbGUuX3dlZWsuZG93O1xuICAgICAgICAgICAgZG95ID0gY29uZmlnLl9sb2NhbGUuX3dlZWsuZG95O1xuXG4gICAgICAgICAgICBjdXJXZWVrID0gd2Vla09mWWVhcihjcmVhdGVMb2NhbCgpLCBkb3csIGRveSk7XG5cbiAgICAgICAgICAgIHdlZWtZZWFyID0gZGVmYXVsdHMody5nZywgY29uZmlnLl9hW1lFQVJdLCBjdXJXZWVrLnllYXIpO1xuXG4gICAgICAgICAgICAvLyBEZWZhdWx0IHRvIGN1cnJlbnQgd2Vlay5cbiAgICAgICAgICAgIHdlZWsgPSBkZWZhdWx0cyh3LncsIGN1cldlZWsud2Vlayk7XG5cbiAgICAgICAgICAgIGlmICh3LmQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIC8vIHdlZWtkYXkgLS0gbG93IGRheSBudW1iZXJzIGFyZSBjb25zaWRlcmVkIG5leHQgd2Vla1xuICAgICAgICAgICAgICAgIHdlZWtkYXkgPSB3LmQ7XG4gICAgICAgICAgICAgICAgaWYgKHdlZWtkYXkgPCAwIHx8IHdlZWtkYXkgPiA2KSB7XG4gICAgICAgICAgICAgICAgICAgIHdlZWtkYXlPdmVyZmxvdyA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmICh3LmUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIC8vIGxvY2FsIHdlZWtkYXkgLS0gY291bnRpbmcgc3RhcnRzIGZyb20gYmVnaW5uaW5nIG9mIHdlZWtcbiAgICAgICAgICAgICAgICB3ZWVrZGF5ID0gdy5lICsgZG93O1xuICAgICAgICAgICAgICAgIGlmICh3LmUgPCAwIHx8IHcuZSA+IDYpIHtcbiAgICAgICAgICAgICAgICAgICAgd2Vla2RheU92ZXJmbG93ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIGRlZmF1bHQgdG8gYmVnaW5uaW5nIG9mIHdlZWtcbiAgICAgICAgICAgICAgICB3ZWVrZGF5ID0gZG93O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh3ZWVrIDwgMSB8fCB3ZWVrID4gd2Vla3NJblllYXIod2Vla1llYXIsIGRvdywgZG95KSkge1xuICAgICAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykuX292ZXJmbG93V2Vla3MgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKHdlZWtkYXlPdmVyZmxvdyAhPSBudWxsKSB7XG4gICAgICAgICAgICBnZXRQYXJzaW5nRmxhZ3MoY29uZmlnKS5fb3ZlcmZsb3dXZWVrZGF5ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRlbXAgPSBkYXlPZlllYXJGcm9tV2Vla3Mod2Vla1llYXIsIHdlZWssIHdlZWtkYXksIGRvdywgZG95KTtcbiAgICAgICAgICAgIGNvbmZpZy5fYVtZRUFSXSA9IHRlbXAueWVhcjtcbiAgICAgICAgICAgIGNvbmZpZy5fZGF5T2ZZZWFyID0gdGVtcC5kYXlPZlllYXI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdGFudCB0aGF0IHJlZmVycyB0byB0aGUgSVNPIHN0YW5kYXJkXG4gICAgaG9va3MuSVNPXzg2MDEgPSBmdW5jdGlvbiAoKSB7fTtcblxuICAgIC8vIGNvbnN0YW50IHRoYXQgcmVmZXJzIHRvIHRoZSBSRkMgMjgyMiBmb3JtXG4gICAgaG9va3MuUkZDXzI4MjIgPSBmdW5jdGlvbiAoKSB7fTtcblxuICAgIC8vIGRhdGUgZnJvbSBzdHJpbmcgYW5kIGZvcm1hdCBzdHJpbmdcbiAgICBmdW5jdGlvbiBjb25maWdGcm9tU3RyaW5nQW5kRm9ybWF0KGNvbmZpZykge1xuICAgICAgICAvLyBUT0RPOiBNb3ZlIHRoaXMgdG8gYW5vdGhlciBwYXJ0IG9mIHRoZSBjcmVhdGlvbiBmbG93IHRvIHByZXZlbnQgY2lyY3VsYXIgZGVwc1xuICAgICAgICBpZiAoY29uZmlnLl9mID09PSBob29rcy5JU09fODYwMSkge1xuICAgICAgICAgICAgY29uZmlnRnJvbUlTTyhjb25maWcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb25maWcuX2YgPT09IGhvb2tzLlJGQ18yODIyKSB7XG4gICAgICAgICAgICBjb25maWdGcm9tUkZDMjgyMihjb25maWcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbmZpZy5fYSA9IFtdO1xuICAgICAgICBnZXRQYXJzaW5nRmxhZ3MoY29uZmlnKS5lbXB0eSA9IHRydWU7XG5cbiAgICAgICAgLy8gVGhpcyBhcnJheSBpcyB1c2VkIHRvIG1ha2UgYSBEYXRlLCBlaXRoZXIgd2l0aCBgbmV3IERhdGVgIG9yIGBEYXRlLlVUQ2BcbiAgICAgICAgdmFyIHN0cmluZyA9ICcnICsgY29uZmlnLl9pLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIHBhcnNlZElucHV0LFxuICAgICAgICAgICAgdG9rZW5zLFxuICAgICAgICAgICAgdG9rZW4sXG4gICAgICAgICAgICBza2lwcGVkLFxuICAgICAgICAgICAgc3RyaW5nTGVuZ3RoID0gc3RyaW5nLmxlbmd0aCxcbiAgICAgICAgICAgIHRvdGFsUGFyc2VkSW5wdXRMZW5ndGggPSAwLFxuICAgICAgICAgICAgZXJhLFxuICAgICAgICAgICAgdG9rZW5MZW47XG5cbiAgICAgICAgdG9rZW5zID1cbiAgICAgICAgICAgIGV4cGFuZEZvcm1hdChjb25maWcuX2YsIGNvbmZpZy5fbG9jYWxlKS5tYXRjaChmb3JtYXR0aW5nVG9rZW5zKSB8fCBbXTtcbiAgICAgICAgdG9rZW5MZW4gPSB0b2tlbnMubGVuZ3RoO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgdG9rZW5MZW47IGkrKykge1xuICAgICAgICAgICAgdG9rZW4gPSB0b2tlbnNbaV07XG4gICAgICAgICAgICBwYXJzZWRJbnB1dCA9IChzdHJpbmcubWF0Y2goZ2V0UGFyc2VSZWdleEZvclRva2VuKHRva2VuLCBjb25maWcpKSB8fFxuICAgICAgICAgICAgICAgIFtdKVswXTtcbiAgICAgICAgICAgIGlmIChwYXJzZWRJbnB1dCkge1xuICAgICAgICAgICAgICAgIHNraXBwZWQgPSBzdHJpbmcuc3Vic3RyKDAsIHN0cmluZy5pbmRleE9mKHBhcnNlZElucHV0KSk7XG4gICAgICAgICAgICAgICAgaWYgKHNraXBwZWQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBnZXRQYXJzaW5nRmxhZ3MoY29uZmlnKS51bnVzZWRJbnB1dC5wdXNoKHNraXBwZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzdHJpbmcgPSBzdHJpbmcuc2xpY2UoXG4gICAgICAgICAgICAgICAgICAgIHN0cmluZy5pbmRleE9mKHBhcnNlZElucHV0KSArIHBhcnNlZElucHV0Lmxlbmd0aFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgdG90YWxQYXJzZWRJbnB1dExlbmd0aCArPSBwYXJzZWRJbnB1dC5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBkb24ndCBwYXJzZSBpZiBpdCdzIG5vdCBhIGtub3duIHRva2VuXG4gICAgICAgICAgICBpZiAoZm9ybWF0VG9rZW5GdW5jdGlvbnNbdG9rZW5dKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcnNlZElucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLmVtcHR5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykudW51c2VkVG9rZW5zLnB1c2godG9rZW4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhZGRUaW1lVG9BcnJheUZyb21Ub2tlbih0b2tlbiwgcGFyc2VkSW5wdXQsIGNvbmZpZyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNvbmZpZy5fc3RyaWN0ICYmICFwYXJzZWRJbnB1dCkge1xuICAgICAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLnVudXNlZFRva2Vucy5wdXNoKHRva2VuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGFkZCByZW1haW5pbmcgdW5wYXJzZWQgaW5wdXQgbGVuZ3RoIHRvIHRoZSBzdHJpbmdcbiAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykuY2hhcnNMZWZ0T3ZlciA9XG4gICAgICAgICAgICBzdHJpbmdMZW5ndGggLSB0b3RhbFBhcnNlZElucHV0TGVuZ3RoO1xuICAgICAgICBpZiAoc3RyaW5nLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLnVudXNlZElucHV0LnB1c2goc3RyaW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNsZWFyIF8xMmggZmxhZyBpZiBob3VyIGlzIDw9IDEyXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNvbmZpZy5fYVtIT1VSXSA8PSAxMiAmJlxuICAgICAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykuYmlnSG91ciA9PT0gdHJ1ZSAmJlxuICAgICAgICAgICAgY29uZmlnLl9hW0hPVVJdID4gMFxuICAgICAgICApIHtcbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLmJpZ0hvdXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICBnZXRQYXJzaW5nRmxhZ3MoY29uZmlnKS5wYXJzZWREYXRlUGFydHMgPSBjb25maWcuX2Euc2xpY2UoMCk7XG4gICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLm1lcmlkaWVtID0gY29uZmlnLl9tZXJpZGllbTtcbiAgICAgICAgLy8gaGFuZGxlIG1lcmlkaWVtXG4gICAgICAgIGNvbmZpZy5fYVtIT1VSXSA9IG1lcmlkaWVtRml4V3JhcChcbiAgICAgICAgICAgIGNvbmZpZy5fbG9jYWxlLFxuICAgICAgICAgICAgY29uZmlnLl9hW0hPVVJdLFxuICAgICAgICAgICAgY29uZmlnLl9tZXJpZGllbVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIGhhbmRsZSBlcmFcbiAgICAgICAgZXJhID0gZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykuZXJhO1xuICAgICAgICBpZiAoZXJhICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25maWcuX2FbWUVBUl0gPSBjb25maWcuX2xvY2FsZS5lcmFzQ29udmVydFllYXIoZXJhLCBjb25maWcuX2FbWUVBUl0pO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uZmlnRnJvbUFycmF5KGNvbmZpZyk7XG4gICAgICAgIGNoZWNrT3ZlcmZsb3coY29uZmlnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtZXJpZGllbUZpeFdyYXAobG9jYWxlLCBob3VyLCBtZXJpZGllbSkge1xuICAgICAgICB2YXIgaXNQbTtcblxuICAgICAgICBpZiAobWVyaWRpZW0gPT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gbm90aGluZyB0byBkb1xuICAgICAgICAgICAgcmV0dXJuIGhvdXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxvY2FsZS5tZXJpZGllbUhvdXIgIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGxvY2FsZS5tZXJpZGllbUhvdXIoaG91ciwgbWVyaWRpZW0pO1xuICAgICAgICB9IGVsc2UgaWYgKGxvY2FsZS5pc1BNICE9IG51bGwpIHtcbiAgICAgICAgICAgIC8vIEZhbGxiYWNrXG4gICAgICAgICAgICBpc1BtID0gbG9jYWxlLmlzUE0obWVyaWRpZW0pO1xuICAgICAgICAgICAgaWYgKGlzUG0gJiYgaG91ciA8IDEyKSB7XG4gICAgICAgICAgICAgICAgaG91ciArPSAxMjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghaXNQbSAmJiBob3VyID09PSAxMikge1xuICAgICAgICAgICAgICAgIGhvdXIgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGhvdXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyB0aGlzIGlzIG5vdCBzdXBwb3NlZCB0byBoYXBwZW5cbiAgICAgICAgICAgIHJldHVybiBob3VyO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gZGF0ZSBmcm9tIHN0cmluZyBhbmQgYXJyYXkgb2YgZm9ybWF0IHN0cmluZ3NcbiAgICBmdW5jdGlvbiBjb25maWdGcm9tU3RyaW5nQW5kQXJyYXkoY29uZmlnKSB7XG4gICAgICAgIHZhciB0ZW1wQ29uZmlnLFxuICAgICAgICAgICAgYmVzdE1vbWVudCxcbiAgICAgICAgICAgIHNjb3JlVG9CZWF0LFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGN1cnJlbnRTY29yZSxcbiAgICAgICAgICAgIHZhbGlkRm9ybWF0Rm91bmQsXG4gICAgICAgICAgICBiZXN0Rm9ybWF0SXNWYWxpZCA9IGZhbHNlLFxuICAgICAgICAgICAgY29uZmlnZkxlbiA9IGNvbmZpZy5fZi5sZW5ndGg7XG5cbiAgICAgICAgaWYgKGNvbmZpZ2ZMZW4gPT09IDApIHtcbiAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLmludmFsaWRGb3JtYXQgPSB0cnVlO1xuICAgICAgICAgICAgY29uZmlnLl9kID0gbmV3IERhdGUoTmFOKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb25maWdmTGVuOyBpKyspIHtcbiAgICAgICAgICAgIGN1cnJlbnRTY29yZSA9IDA7XG4gICAgICAgICAgICB2YWxpZEZvcm1hdEZvdW5kID0gZmFsc2U7XG4gICAgICAgICAgICB0ZW1wQ29uZmlnID0gY29weUNvbmZpZyh7fSwgY29uZmlnKTtcbiAgICAgICAgICAgIGlmIChjb25maWcuX3VzZVVUQyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGVtcENvbmZpZy5fdXNlVVRDID0gY29uZmlnLl91c2VVVEM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0ZW1wQ29uZmlnLl9mID0gY29uZmlnLl9mW2ldO1xuICAgICAgICAgICAgY29uZmlnRnJvbVN0cmluZ0FuZEZvcm1hdCh0ZW1wQ29uZmlnKTtcblxuICAgICAgICAgICAgaWYgKGlzVmFsaWQodGVtcENvbmZpZykpIHtcbiAgICAgICAgICAgICAgICB2YWxpZEZvcm1hdEZvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaWYgdGhlcmUgaXMgYW55IGlucHV0IHRoYXQgd2FzIG5vdCBwYXJzZWQgYWRkIGEgcGVuYWx0eSBmb3IgdGhhdCBmb3JtYXRcbiAgICAgICAgICAgIGN1cnJlbnRTY29yZSArPSBnZXRQYXJzaW5nRmxhZ3ModGVtcENvbmZpZykuY2hhcnNMZWZ0T3ZlcjtcblxuICAgICAgICAgICAgLy9vciB0b2tlbnNcbiAgICAgICAgICAgIGN1cnJlbnRTY29yZSArPSBnZXRQYXJzaW5nRmxhZ3ModGVtcENvbmZpZykudW51c2VkVG9rZW5zLmxlbmd0aCAqIDEwO1xuXG4gICAgICAgICAgICBnZXRQYXJzaW5nRmxhZ3ModGVtcENvbmZpZykuc2NvcmUgPSBjdXJyZW50U2NvcmU7XG5cbiAgICAgICAgICAgIGlmICghYmVzdEZvcm1hdElzVmFsaWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIHNjb3JlVG9CZWF0ID09IG51bGwgfHxcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFNjb3JlIDwgc2NvcmVUb0JlYXQgfHxcbiAgICAgICAgICAgICAgICAgICAgdmFsaWRGb3JtYXRGb3VuZFxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBzY29yZVRvQmVhdCA9IGN1cnJlbnRTY29yZTtcbiAgICAgICAgICAgICAgICAgICAgYmVzdE1vbWVudCA9IHRlbXBDb25maWc7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWxpZEZvcm1hdEZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiZXN0Rm9ybWF0SXNWYWxpZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50U2NvcmUgPCBzY29yZVRvQmVhdCkge1xuICAgICAgICAgICAgICAgICAgICBzY29yZVRvQmVhdCA9IGN1cnJlbnRTY29yZTtcbiAgICAgICAgICAgICAgICAgICAgYmVzdE1vbWVudCA9IHRlbXBDb25maWc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZXh0ZW5kKGNvbmZpZywgYmVzdE1vbWVudCB8fCB0ZW1wQ29uZmlnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb25maWdGcm9tT2JqZWN0KGNvbmZpZykge1xuICAgICAgICBpZiAoY29uZmlnLl9kKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgaSA9IG5vcm1hbGl6ZU9iamVjdFVuaXRzKGNvbmZpZy5faSksXG4gICAgICAgICAgICBkYXlPckRhdGUgPSBpLmRheSA9PT0gdW5kZWZpbmVkID8gaS5kYXRlIDogaS5kYXk7XG4gICAgICAgIGNvbmZpZy5fYSA9IG1hcChcbiAgICAgICAgICAgIFtpLnllYXIsIGkubW9udGgsIGRheU9yRGF0ZSwgaS5ob3VyLCBpLm1pbnV0ZSwgaS5zZWNvbmQsIGkubWlsbGlzZWNvbmRdLFxuICAgICAgICAgICAgZnVuY3Rpb24gKG9iaikge1xuICAgICAgICAgICAgICAgIHJldHVybiBvYmogJiYgcGFyc2VJbnQob2JqLCAxMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgY29uZmlnRnJvbUFycmF5KGNvbmZpZyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlRnJvbUNvbmZpZyhjb25maWcpIHtcbiAgICAgICAgdmFyIHJlcyA9IG5ldyBNb21lbnQoY2hlY2tPdmVyZmxvdyhwcmVwYXJlQ29uZmlnKGNvbmZpZykpKTtcbiAgICAgICAgaWYgKHJlcy5fbmV4dERheSkge1xuICAgICAgICAgICAgLy8gQWRkaW5nIGlzIHNtYXJ0IGVub3VnaCBhcm91bmQgRFNUXG4gICAgICAgICAgICByZXMuYWRkKDEsICdkJyk7XG4gICAgICAgICAgICByZXMuX25leHREYXkgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHByZXBhcmVDb25maWcoY29uZmlnKSB7XG4gICAgICAgIHZhciBpbnB1dCA9IGNvbmZpZy5faSxcbiAgICAgICAgICAgIGZvcm1hdCA9IGNvbmZpZy5fZjtcblxuICAgICAgICBjb25maWcuX2xvY2FsZSA9IGNvbmZpZy5fbG9jYWxlIHx8IGdldExvY2FsZShjb25maWcuX2wpO1xuXG4gICAgICAgIGlmIChpbnB1dCA9PT0gbnVsbCB8fCAoZm9ybWF0ID09PSB1bmRlZmluZWQgJiYgaW5wdXQgPT09ICcnKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUludmFsaWQoeyBudWxsSW5wdXQ6IHRydWUgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgY29uZmlnLl9pID0gaW5wdXQgPSBjb25maWcuX2xvY2FsZS5wcmVwYXJzZShpbnB1dCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNNb21lbnQoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1vbWVudChjaGVja092ZXJmbG93KGlucHV0KSk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNEYXRlKGlucHV0KSkge1xuICAgICAgICAgICAgY29uZmlnLl9kID0gaW5wdXQ7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNBcnJheShmb3JtYXQpKSB7XG4gICAgICAgICAgICBjb25maWdGcm9tU3RyaW5nQW5kQXJyYXkoY29uZmlnKTtcbiAgICAgICAgfSBlbHNlIGlmIChmb3JtYXQpIHtcbiAgICAgICAgICAgIGNvbmZpZ0Zyb21TdHJpbmdBbmRGb3JtYXQoY29uZmlnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbmZpZ0Zyb21JbnB1dChjb25maWcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFpc1ZhbGlkKGNvbmZpZykpIHtcbiAgICAgICAgICAgIGNvbmZpZy5fZCA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbmZpZ0Zyb21JbnB1dChjb25maWcpIHtcbiAgICAgICAgdmFyIGlucHV0ID0gY29uZmlnLl9pO1xuICAgICAgICBpZiAoaXNVbmRlZmluZWQoaW5wdXQpKSB7XG4gICAgICAgICAgICBjb25maWcuX2QgPSBuZXcgRGF0ZShob29rcy5ub3coKSk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNEYXRlKGlucHV0KSkge1xuICAgICAgICAgICAgY29uZmlnLl9kID0gbmV3IERhdGUoaW5wdXQudmFsdWVPZigpKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBjb25maWdGcm9tU3RyaW5nKGNvbmZpZyk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNBcnJheShpbnB1dCkpIHtcbiAgICAgICAgICAgIGNvbmZpZy5fYSA9IG1hcChpbnB1dC5zbGljZSgwKSwgZnVuY3Rpb24gKG9iaikge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUludChvYmosIDEwKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uZmlnRnJvbUFycmF5KGNvbmZpZyk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNPYmplY3QoaW5wdXQpKSB7XG4gICAgICAgICAgICBjb25maWdGcm9tT2JqZWN0KGNvbmZpZyk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNOdW1iZXIoaW5wdXQpKSB7XG4gICAgICAgICAgICAvLyBmcm9tIG1pbGxpc2Vjb25kc1xuICAgICAgICAgICAgY29uZmlnLl9kID0gbmV3IERhdGUoaW5wdXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaG9va3MuY3JlYXRlRnJvbUlucHV0RmFsbGJhY2soY29uZmlnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUxvY2FsT3JVVEMoaW5wdXQsIGZvcm1hdCwgbG9jYWxlLCBzdHJpY3QsIGlzVVRDKSB7XG4gICAgICAgIHZhciBjID0ge307XG5cbiAgICAgICAgaWYgKGZvcm1hdCA9PT0gdHJ1ZSB8fCBmb3JtYXQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBzdHJpY3QgPSBmb3JtYXQ7XG4gICAgICAgICAgICBmb3JtYXQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobG9jYWxlID09PSB0cnVlIHx8IGxvY2FsZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHN0cmljdCA9IGxvY2FsZTtcbiAgICAgICAgICAgIGxvY2FsZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIChpc09iamVjdChpbnB1dCkgJiYgaXNPYmplY3RFbXB0eShpbnB1dCkpIHx8XG4gICAgICAgICAgICAoaXNBcnJheShpbnB1dCkgJiYgaW5wdXQubGVuZ3RoID09PSAwKVxuICAgICAgICApIHtcbiAgICAgICAgICAgIGlucHV0ID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIC8vIG9iamVjdCBjb25zdHJ1Y3Rpb24gbXVzdCBiZSBkb25lIHRoaXMgd2F5LlxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vbW9tZW50L21vbWVudC9pc3N1ZXMvMTQyM1xuICAgICAgICBjLl9pc0FNb21lbnRPYmplY3QgPSB0cnVlO1xuICAgICAgICBjLl91c2VVVEMgPSBjLl9pc1VUQyA9IGlzVVRDO1xuICAgICAgICBjLl9sID0gbG9jYWxlO1xuICAgICAgICBjLl9pID0gaW5wdXQ7XG4gICAgICAgIGMuX2YgPSBmb3JtYXQ7XG4gICAgICAgIGMuX3N0cmljdCA9IHN0cmljdDtcblxuICAgICAgICByZXR1cm4gY3JlYXRlRnJvbUNvbmZpZyhjKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVMb2NhbChpbnB1dCwgZm9ybWF0LCBsb2NhbGUsIHN0cmljdCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlTG9jYWxPclVUQyhpbnB1dCwgZm9ybWF0LCBsb2NhbGUsIHN0cmljdCwgZmFsc2UpO1xuICAgIH1cblxuICAgIHZhciBwcm90b3R5cGVNaW4gPSBkZXByZWNhdGUoXG4gICAgICAgICAgICAnbW9tZW50KCkubWluIGlzIGRlcHJlY2F0ZWQsIHVzZSBtb21lbnQubWF4IGluc3RlYWQuIGh0dHA6Ly9tb21lbnRqcy5jb20vZ3VpZGVzLyMvd2FybmluZ3MvbWluLW1heC8nLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBvdGhlciA9IGNyZWF0ZUxvY2FsLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNWYWxpZCgpICYmIG90aGVyLmlzVmFsaWQoKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3RoZXIgPCB0aGlzID8gdGhpcyA6IG90aGVyO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVJbnZhbGlkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICApLFxuICAgICAgICBwcm90b3R5cGVNYXggPSBkZXByZWNhdGUoXG4gICAgICAgICAgICAnbW9tZW50KCkubWF4IGlzIGRlcHJlY2F0ZWQsIHVzZSBtb21lbnQubWluIGluc3RlYWQuIGh0dHA6Ly9tb21lbnRqcy5jb20vZ3VpZGVzLyMvd2FybmluZ3MvbWluLW1heC8nLFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBvdGhlciA9IGNyZWF0ZUxvY2FsLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNWYWxpZCgpICYmIG90aGVyLmlzVmFsaWQoKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3RoZXIgPiB0aGlzID8gdGhpcyA6IG90aGVyO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVJbnZhbGlkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuXG4gICAgLy8gUGljayBhIG1vbWVudCBtIGZyb20gbW9tZW50cyBzbyB0aGF0IG1bZm5dKG90aGVyKSBpcyB0cnVlIGZvciBhbGxcbiAgICAvLyBvdGhlci4gVGhpcyByZWxpZXMgb24gdGhlIGZ1bmN0aW9uIGZuIHRvIGJlIHRyYW5zaXRpdmUuXG4gICAgLy9cbiAgICAvLyBtb21lbnRzIHNob3VsZCBlaXRoZXIgYmUgYW4gYXJyYXkgb2YgbW9tZW50IG9iamVjdHMgb3IgYW4gYXJyYXksIHdob3NlXG4gICAgLy8gZmlyc3QgZWxlbWVudCBpcyBhbiBhcnJheSBvZiBtb21lbnQgb2JqZWN0cy5cbiAgICBmdW5jdGlvbiBwaWNrQnkoZm4sIG1vbWVudHMpIHtcbiAgICAgICAgdmFyIHJlcywgaTtcbiAgICAgICAgaWYgKG1vbWVudHMubGVuZ3RoID09PSAxICYmIGlzQXJyYXkobW9tZW50c1swXSkpIHtcbiAgICAgICAgICAgIG1vbWVudHMgPSBtb21lbnRzWzBdO1xuICAgICAgICB9XG4gICAgICAgIGlmICghbW9tZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVMb2NhbCgpO1xuICAgICAgICB9XG4gICAgICAgIHJlcyA9IG1vbWVudHNbMF07XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBtb21lbnRzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBpZiAoIW1vbWVudHNbaV0uaXNWYWxpZCgpIHx8IG1vbWVudHNbaV1bZm5dKHJlcykpIHtcbiAgICAgICAgICAgICAgICByZXMgPSBtb21lbnRzW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuXG4gICAgLy8gVE9ETzogVXNlIFtdLnNvcnQgaW5zdGVhZD9cbiAgICBmdW5jdGlvbiBtaW4oKSB7XG4gICAgICAgIHZhciBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMsIDApO1xuXG4gICAgICAgIHJldHVybiBwaWNrQnkoJ2lzQmVmb3JlJywgYXJncyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWF4KCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKTtcblxuICAgICAgICByZXR1cm4gcGlja0J5KCdpc0FmdGVyJywgYXJncyk7XG4gICAgfVxuXG4gICAgdmFyIG5vdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIERhdGUubm93ID8gRGF0ZS5ub3coKSA6ICtuZXcgRGF0ZSgpO1xuICAgIH07XG5cbiAgICB2YXIgb3JkZXJpbmcgPSBbXG4gICAgICAgICd5ZWFyJyxcbiAgICAgICAgJ3F1YXJ0ZXInLFxuICAgICAgICAnbW9udGgnLFxuICAgICAgICAnd2VlaycsXG4gICAgICAgICdkYXknLFxuICAgICAgICAnaG91cicsXG4gICAgICAgICdtaW51dGUnLFxuICAgICAgICAnc2Vjb25kJyxcbiAgICAgICAgJ21pbGxpc2Vjb25kJyxcbiAgICBdO1xuXG4gICAgZnVuY3Rpb24gaXNEdXJhdGlvblZhbGlkKG0pIHtcbiAgICAgICAgdmFyIGtleSxcbiAgICAgICAgICAgIHVuaXRIYXNEZWNpbWFsID0gZmFsc2UsXG4gICAgICAgICAgICBpLFxuICAgICAgICAgICAgb3JkZXJMZW4gPSBvcmRlcmluZy5sZW5ndGg7XG4gICAgICAgIGZvciAoa2V5IGluIG0pIHtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBoYXNPd25Qcm9wKG0sIGtleSkgJiZcbiAgICAgICAgICAgICAgICAhKFxuICAgICAgICAgICAgICAgICAgICBpbmRleE9mLmNhbGwob3JkZXJpbmcsIGtleSkgIT09IC0xICYmXG4gICAgICAgICAgICAgICAgICAgIChtW2tleV0gPT0gbnVsbCB8fCAhaXNOYU4obVtrZXldKSlcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgb3JkZXJMZW47ICsraSkge1xuICAgICAgICAgICAgaWYgKG1bb3JkZXJpbmdbaV1dKSB7XG4gICAgICAgICAgICAgICAgaWYgKHVuaXRIYXNEZWNpbWFsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gb25seSBhbGxvdyBub24taW50ZWdlcnMgZm9yIHNtYWxsZXN0IHVuaXRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHBhcnNlRmxvYXQobVtvcmRlcmluZ1tpXV0pICE9PSB0b0ludChtW29yZGVyaW5nW2ldXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdW5pdEhhc0RlY2ltYWwgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzVmFsaWQkMSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzVmFsaWQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlSW52YWxpZCQxKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlRHVyYXRpb24oTmFOKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBEdXJhdGlvbihkdXJhdGlvbikge1xuICAgICAgICB2YXIgbm9ybWFsaXplZElucHV0ID0gbm9ybWFsaXplT2JqZWN0VW5pdHMoZHVyYXRpb24pLFxuICAgICAgICAgICAgeWVhcnMgPSBub3JtYWxpemVkSW5wdXQueWVhciB8fCAwLFxuICAgICAgICAgICAgcXVhcnRlcnMgPSBub3JtYWxpemVkSW5wdXQucXVhcnRlciB8fCAwLFxuICAgICAgICAgICAgbW9udGhzID0gbm9ybWFsaXplZElucHV0Lm1vbnRoIHx8IDAsXG4gICAgICAgICAgICB3ZWVrcyA9IG5vcm1hbGl6ZWRJbnB1dC53ZWVrIHx8IG5vcm1hbGl6ZWRJbnB1dC5pc29XZWVrIHx8IDAsXG4gICAgICAgICAgICBkYXlzID0gbm9ybWFsaXplZElucHV0LmRheSB8fCAwLFxuICAgICAgICAgICAgaG91cnMgPSBub3JtYWxpemVkSW5wdXQuaG91ciB8fCAwLFxuICAgICAgICAgICAgbWludXRlcyA9IG5vcm1hbGl6ZWRJbnB1dC5taW51dGUgfHwgMCxcbiAgICAgICAgICAgIHNlY29uZHMgPSBub3JtYWxpemVkSW5wdXQuc2Vjb25kIHx8IDAsXG4gICAgICAgICAgICBtaWxsaXNlY29uZHMgPSBub3JtYWxpemVkSW5wdXQubWlsbGlzZWNvbmQgfHwgMDtcblxuICAgICAgICB0aGlzLl9pc1ZhbGlkID0gaXNEdXJhdGlvblZhbGlkKG5vcm1hbGl6ZWRJbnB1dCk7XG5cbiAgICAgICAgLy8gcmVwcmVzZW50YXRpb24gZm9yIGRhdGVBZGRSZW1vdmVcbiAgICAgICAgdGhpcy5fbWlsbGlzZWNvbmRzID1cbiAgICAgICAgICAgICttaWxsaXNlY29uZHMgK1xuICAgICAgICAgICAgc2Vjb25kcyAqIDFlMyArIC8vIDEwMDBcbiAgICAgICAgICAgIG1pbnV0ZXMgKiA2ZTQgKyAvLyAxMDAwICogNjBcbiAgICAgICAgICAgIGhvdXJzICogMTAwMCAqIDYwICogNjA7IC8vdXNpbmcgMTAwMCAqIDYwICogNjAgaW5zdGVhZCBvZiAzNmU1IHRvIGF2b2lkIGZsb2F0aW5nIHBvaW50IHJvdW5kaW5nIGVycm9ycyBodHRwczovL2dpdGh1Yi5jb20vbW9tZW50L21vbWVudC9pc3N1ZXMvMjk3OFxuICAgICAgICAvLyBCZWNhdXNlIG9mIGRhdGVBZGRSZW1vdmUgdHJlYXRzIDI0IGhvdXJzIGFzIGRpZmZlcmVudCBmcm9tIGFcbiAgICAgICAgLy8gZGF5IHdoZW4gd29ya2luZyBhcm91bmQgRFNULCB3ZSBuZWVkIHRvIHN0b3JlIHRoZW0gc2VwYXJhdGVseVxuICAgICAgICB0aGlzLl9kYXlzID0gK2RheXMgKyB3ZWVrcyAqIDc7XG4gICAgICAgIC8vIEl0IGlzIGltcG9zc2libGUgdG8gdHJhbnNsYXRlIG1vbnRocyBpbnRvIGRheXMgd2l0aG91dCBrbm93aW5nXG4gICAgICAgIC8vIHdoaWNoIG1vbnRocyB5b3UgYXJlIGFyZSB0YWxraW5nIGFib3V0LCBzbyB3ZSBoYXZlIHRvIHN0b3JlXG4gICAgICAgIC8vIGl0IHNlcGFyYXRlbHkuXG4gICAgICAgIHRoaXMuX21vbnRocyA9ICttb250aHMgKyBxdWFydGVycyAqIDMgKyB5ZWFycyAqIDEyO1xuXG4gICAgICAgIHRoaXMuX2RhdGEgPSB7fTtcblxuICAgICAgICB0aGlzLl9sb2NhbGUgPSBnZXRMb2NhbGUoKTtcblxuICAgICAgICB0aGlzLl9idWJibGUoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0R1cmF0aW9uKG9iaikge1xuICAgICAgICByZXR1cm4gb2JqIGluc3RhbmNlb2YgRHVyYXRpb247XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYWJzUm91bmQobnVtYmVyKSB7XG4gICAgICAgIGlmIChudW1iZXIgPCAwKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCgtMSAqIG51bWJlcikgKiAtMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKG51bWJlcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb21wYXJlIHR3byBhcnJheXMsIHJldHVybiB0aGUgbnVtYmVyIG9mIGRpZmZlcmVuY2VzXG4gICAgZnVuY3Rpb24gY29tcGFyZUFycmF5cyhhcnJheTEsIGFycmF5MiwgZG9udENvbnZlcnQpIHtcbiAgICAgICAgdmFyIGxlbiA9IE1hdGgubWluKGFycmF5MS5sZW5ndGgsIGFycmF5Mi5sZW5ndGgpLFxuICAgICAgICAgICAgbGVuZ3RoRGlmZiA9IE1hdGguYWJzKGFycmF5MS5sZW5ndGggLSBhcnJheTIubGVuZ3RoKSxcbiAgICAgICAgICAgIGRpZmZzID0gMCxcbiAgICAgICAgICAgIGk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIChkb250Q29udmVydCAmJiBhcnJheTFbaV0gIT09IGFycmF5MltpXSkgfHxcbiAgICAgICAgICAgICAgICAoIWRvbnRDb252ZXJ0ICYmIHRvSW50KGFycmF5MVtpXSkgIT09IHRvSW50KGFycmF5MltpXSkpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBkaWZmcysrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaWZmcyArIGxlbmd0aERpZmY7XG4gICAgfVxuXG4gICAgLy8gRk9STUFUVElOR1xuXG4gICAgZnVuY3Rpb24gb2Zmc2V0KHRva2VuLCBzZXBhcmF0b3IpIHtcbiAgICAgICAgYWRkRm9ybWF0VG9rZW4odG9rZW4sIDAsIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBvZmZzZXQgPSB0aGlzLnV0Y09mZnNldCgpLFxuICAgICAgICAgICAgICAgIHNpZ24gPSAnKyc7XG4gICAgICAgICAgICBpZiAob2Zmc2V0IDwgMCkge1xuICAgICAgICAgICAgICAgIG9mZnNldCA9IC1vZmZzZXQ7XG4gICAgICAgICAgICAgICAgc2lnbiA9ICctJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgc2lnbiArXG4gICAgICAgICAgICAgICAgemVyb0ZpbGwofn4ob2Zmc2V0IC8gNjApLCAyKSArXG4gICAgICAgICAgICAgICAgc2VwYXJhdG9yICtcbiAgICAgICAgICAgICAgICB6ZXJvRmlsbCh+fm9mZnNldCAlIDYwLCAyKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgb2Zmc2V0KCdaJywgJzonKTtcbiAgICBvZmZzZXQoJ1paJywgJycpO1xuXG4gICAgLy8gUEFSU0lOR1xuXG4gICAgYWRkUmVnZXhUb2tlbignWicsIG1hdGNoU2hvcnRPZmZzZXQpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ1paJywgbWF0Y2hTaG9ydE9mZnNldCk7XG4gICAgYWRkUGFyc2VUb2tlbihbJ1onLCAnWlonXSwgZnVuY3Rpb24gKGlucHV0LCBhcnJheSwgY29uZmlnKSB7XG4gICAgICAgIGNvbmZpZy5fdXNlVVRDID0gdHJ1ZTtcbiAgICAgICAgY29uZmlnLl90em0gPSBvZmZzZXRGcm9tU3RyaW5nKG1hdGNoU2hvcnRPZmZzZXQsIGlucHV0KTtcbiAgICB9KTtcblxuICAgIC8vIEhFTFBFUlNcblxuICAgIC8vIHRpbWV6b25lIGNodW5rZXJcbiAgICAvLyAnKzEwOjAwJyA+IFsnMTAnLCAgJzAwJ11cbiAgICAvLyAnLTE1MzAnICA+IFsnLTE1JywgJzMwJ11cbiAgICB2YXIgY2h1bmtPZmZzZXQgPSAvKFtcXCtcXC1dfFxcZFxcZCkvZ2k7XG5cbiAgICBmdW5jdGlvbiBvZmZzZXRGcm9tU3RyaW5nKG1hdGNoZXIsIHN0cmluZykge1xuICAgICAgICB2YXIgbWF0Y2hlcyA9IChzdHJpbmcgfHwgJycpLm1hdGNoKG1hdGNoZXIpLFxuICAgICAgICAgICAgY2h1bmssXG4gICAgICAgICAgICBwYXJ0cyxcbiAgICAgICAgICAgIG1pbnV0ZXM7XG5cbiAgICAgICAgaWYgKG1hdGNoZXMgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgY2h1bmsgPSBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV0gfHwgW107XG4gICAgICAgIHBhcnRzID0gKGNodW5rICsgJycpLm1hdGNoKGNodW5rT2Zmc2V0KSB8fCBbJy0nLCAwLCAwXTtcbiAgICAgICAgbWludXRlcyA9ICsocGFydHNbMV0gKiA2MCkgKyB0b0ludChwYXJ0c1syXSk7XG5cbiAgICAgICAgcmV0dXJuIG1pbnV0ZXMgPT09IDAgPyAwIDogcGFydHNbMF0gPT09ICcrJyA/IG1pbnV0ZXMgOiAtbWludXRlcztcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYSBtb21lbnQgZnJvbSBpbnB1dCwgdGhhdCBpcyBsb2NhbC91dGMvem9uZSBlcXVpdmFsZW50IHRvIG1vZGVsLlxuICAgIGZ1bmN0aW9uIGNsb25lV2l0aE9mZnNldChpbnB1dCwgbW9kZWwpIHtcbiAgICAgICAgdmFyIHJlcywgZGlmZjtcbiAgICAgICAgaWYgKG1vZGVsLl9pc1VUQykge1xuICAgICAgICAgICAgcmVzID0gbW9kZWwuY2xvbmUoKTtcbiAgICAgICAgICAgIGRpZmYgPVxuICAgICAgICAgICAgICAgIChpc01vbWVudChpbnB1dCkgfHwgaXNEYXRlKGlucHV0KVxuICAgICAgICAgICAgICAgICAgICA/IGlucHV0LnZhbHVlT2YoKVxuICAgICAgICAgICAgICAgICAgICA6IGNyZWF0ZUxvY2FsKGlucHV0KS52YWx1ZU9mKCkpIC0gcmVzLnZhbHVlT2YoKTtcbiAgICAgICAgICAgIC8vIFVzZSBsb3ctbGV2ZWwgYXBpLCBiZWNhdXNlIHRoaXMgZm4gaXMgbG93LWxldmVsIGFwaS5cbiAgICAgICAgICAgIHJlcy5fZC5zZXRUaW1lKHJlcy5fZC52YWx1ZU9mKCkgKyBkaWZmKTtcbiAgICAgICAgICAgIGhvb2tzLnVwZGF0ZU9mZnNldChyZXMsIGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlTG9jYWwoaW5wdXQpLmxvY2FsKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXREYXRlT2Zmc2V0KG0pIHtcbiAgICAgICAgLy8gT24gRmlyZWZveC4yNCBEYXRlI2dldFRpbWV6b25lT2Zmc2V0IHJldHVybnMgYSBmbG9hdGluZyBwb2ludC5cbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21vbWVudC9tb21lbnQvcHVsbC8xODcxXG4gICAgICAgIHJldHVybiAtTWF0aC5yb3VuZChtLl9kLmdldFRpbWV6b25lT2Zmc2V0KCkpO1xuICAgIH1cblxuICAgIC8vIEhPT0tTXG5cbiAgICAvLyBUaGlzIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIHdoZW5ldmVyIGEgbW9tZW50IGlzIG11dGF0ZWQuXG4gICAgLy8gSXQgaXMgaW50ZW5kZWQgdG8ga2VlcCB0aGUgb2Zmc2V0IGluIHN5bmMgd2l0aCB0aGUgdGltZXpvbmUuXG4gICAgaG9va3MudXBkYXRlT2Zmc2V0ID0gZnVuY3Rpb24gKCkge307XG5cbiAgICAvLyBNT01FTlRTXG5cbiAgICAvLyBrZWVwTG9jYWxUaW1lID0gdHJ1ZSBtZWFucyBvbmx5IGNoYW5nZSB0aGUgdGltZXpvbmUsIHdpdGhvdXRcbiAgICAvLyBhZmZlY3RpbmcgdGhlIGxvY2FsIGhvdXIuIFNvIDU6MzE6MjYgKzAzMDAgLS1bdXRjT2Zmc2V0KDIsIHRydWUpXS0tPlxuICAgIC8vIDU6MzE6MjYgKzAyMDAgSXQgaXMgcG9zc2libGUgdGhhdCA1OjMxOjI2IGRvZXNuJ3QgZXhpc3Qgd2l0aCBvZmZzZXRcbiAgICAvLyArMDIwMCwgc28gd2UgYWRqdXN0IHRoZSB0aW1lIGFzIG5lZWRlZCwgdG8gYmUgdmFsaWQuXG4gICAgLy9cbiAgICAvLyBLZWVwaW5nIHRoZSB0aW1lIGFjdHVhbGx5IGFkZHMvc3VidHJhY3RzIChvbmUgaG91cilcbiAgICAvLyBmcm9tIHRoZSBhY3R1YWwgcmVwcmVzZW50ZWQgdGltZS4gVGhhdCBpcyB3aHkgd2UgY2FsbCB1cGRhdGVPZmZzZXRcbiAgICAvLyBhIHNlY29uZCB0aW1lLiBJbiBjYXNlIGl0IHdhbnRzIHVzIHRvIGNoYW5nZSB0aGUgb2Zmc2V0IGFnYWluXG4gICAgLy8gX2NoYW5nZUluUHJvZ3Jlc3MgPT0gdHJ1ZSBjYXNlLCB0aGVuIHdlIGhhdmUgdG8gYWRqdXN0LCBiZWNhdXNlXG4gICAgLy8gdGhlcmUgaXMgbm8gc3VjaCB0aW1lIGluIHRoZSBnaXZlbiB0aW1lem9uZS5cbiAgICBmdW5jdGlvbiBnZXRTZXRPZmZzZXQoaW5wdXQsIGtlZXBMb2NhbFRpbWUsIGtlZXBNaW51dGVzKSB7XG4gICAgICAgIHZhciBvZmZzZXQgPSB0aGlzLl9vZmZzZXQgfHwgMCxcbiAgICAgICAgICAgIGxvY2FsQWRqdXN0O1xuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQgIT0gbnVsbCA/IHRoaXMgOiBOYU47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlucHV0ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgaW5wdXQgPSBvZmZzZXRGcm9tU3RyaW5nKG1hdGNoU2hvcnRPZmZzZXQsIGlucHV0KTtcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChNYXRoLmFicyhpbnB1dCkgPCAxNiAmJiAha2VlcE1pbnV0ZXMpIHtcbiAgICAgICAgICAgICAgICBpbnB1dCA9IGlucHV0ICogNjA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRoaXMuX2lzVVRDICYmIGtlZXBMb2NhbFRpbWUpIHtcbiAgICAgICAgICAgICAgICBsb2NhbEFkanVzdCA9IGdldERhdGVPZmZzZXQodGhpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9vZmZzZXQgPSBpbnB1dDtcbiAgICAgICAgICAgIHRoaXMuX2lzVVRDID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChsb2NhbEFkanVzdCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGQobG9jYWxBZGp1c3QsICdtJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob2Zmc2V0ICE9PSBpbnB1dCkge1xuICAgICAgICAgICAgICAgIGlmICgha2VlcExvY2FsVGltZSB8fCB0aGlzLl9jaGFuZ2VJblByb2dyZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZFN1YnRyYWN0KFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZUR1cmF0aW9uKGlucHV0IC0gb2Zmc2V0LCAnbScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICghdGhpcy5fY2hhbmdlSW5Qcm9ncmVzcykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jaGFuZ2VJblByb2dyZXNzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgaG9va3MudXBkYXRlT2Zmc2V0KHRoaXMsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jaGFuZ2VJblByb2dyZXNzID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9pc1VUQyA/IG9mZnNldCA6IGdldERhdGVPZmZzZXQodGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRTZXRab25lKGlucHV0LCBrZWVwTG9jYWxUaW1lKSB7XG4gICAgICAgIGlmIChpbnB1dCAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGlucHV0ID0gLWlucHV0O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnV0Y09mZnNldChpbnB1dCwga2VlcExvY2FsVGltZSk7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIC10aGlzLnV0Y09mZnNldCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0T2Zmc2V0VG9VVEMoa2VlcExvY2FsVGltZSkge1xuICAgICAgICByZXR1cm4gdGhpcy51dGNPZmZzZXQoMCwga2VlcExvY2FsVGltZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0T2Zmc2V0VG9Mb2NhbChrZWVwTG9jYWxUaW1lKSB7XG4gICAgICAgIGlmICh0aGlzLl9pc1VUQykge1xuICAgICAgICAgICAgdGhpcy51dGNPZmZzZXQoMCwga2VlcExvY2FsVGltZSk7XG4gICAgICAgICAgICB0aGlzLl9pc1VUQyA9IGZhbHNlO1xuXG4gICAgICAgICAgICBpZiAoa2VlcExvY2FsVGltZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc3VidHJhY3QoZ2V0RGF0ZU9mZnNldCh0aGlzKSwgJ20nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRPZmZzZXRUb1BhcnNlZE9mZnNldCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3R6bSAhPSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnV0Y09mZnNldCh0aGlzLl90em0sIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5faSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHZhciB0Wm9uZSA9IG9mZnNldEZyb21TdHJpbmcobWF0Y2hPZmZzZXQsIHRoaXMuX2kpO1xuICAgICAgICAgICAgaWYgKHRab25lICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnV0Y09mZnNldCh0Wm9uZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMudXRjT2Zmc2V0KDAsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhc0FsaWduZWRIb3VyT2Zmc2V0KGlucHV0KSB7XG4gICAgICAgIGlmICghdGhpcy5pc1ZhbGlkKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpbnB1dCA9IGlucHV0ID8gY3JlYXRlTG9jYWwoaW5wdXQpLnV0Y09mZnNldCgpIDogMDtcblxuICAgICAgICByZXR1cm4gKHRoaXMudXRjT2Zmc2V0KCkgLSBpbnB1dCkgJSA2MCA9PT0gMDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0RheWxpZ2h0U2F2aW5nVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIHRoaXMudXRjT2Zmc2V0KCkgPiB0aGlzLmNsb25lKCkubW9udGgoMCkudXRjT2Zmc2V0KCkgfHxcbiAgICAgICAgICAgIHRoaXMudXRjT2Zmc2V0KCkgPiB0aGlzLmNsb25lKCkubW9udGgoNSkudXRjT2Zmc2V0KClcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0RheWxpZ2h0U2F2aW5nVGltZVNoaWZ0ZWQoKSB7XG4gICAgICAgIGlmICghaXNVbmRlZmluZWQodGhpcy5faXNEU1RTaGlmdGVkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2lzRFNUU2hpZnRlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBjID0ge30sXG4gICAgICAgICAgICBvdGhlcjtcblxuICAgICAgICBjb3B5Q29uZmlnKGMsIHRoaXMpO1xuICAgICAgICBjID0gcHJlcGFyZUNvbmZpZyhjKTtcblxuICAgICAgICBpZiAoYy5fYSkge1xuICAgICAgICAgICAgb3RoZXIgPSBjLl9pc1VUQyA/IGNyZWF0ZVVUQyhjLl9hKSA6IGNyZWF0ZUxvY2FsKGMuX2EpO1xuICAgICAgICAgICAgdGhpcy5faXNEU1RTaGlmdGVkID1cbiAgICAgICAgICAgICAgICB0aGlzLmlzVmFsaWQoKSAmJiBjb21wYXJlQXJyYXlzKGMuX2EsIG90aGVyLnRvQXJyYXkoKSkgPiAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faXNEU1RTaGlmdGVkID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5faXNEU1RTaGlmdGVkO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzTG9jYWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzVmFsaWQoKSA/ICF0aGlzLl9pc1VUQyA6IGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzVXRjT2Zmc2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc1ZhbGlkKCkgPyB0aGlzLl9pc1VUQyA6IGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzVXRjKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc1ZhbGlkKCkgPyB0aGlzLl9pc1VUQyAmJiB0aGlzLl9vZmZzZXQgPT09IDAgOiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBBU1AuTkVUIGpzb24gZGF0ZSBmb3JtYXQgcmVnZXhcbiAgICB2YXIgYXNwTmV0UmVnZXggPSAvXigtfFxcKyk/KD86KFxcZCopWy4gXSk/KFxcZCspOihcXGQrKSg/OjooXFxkKykoXFwuXFxkKik/KT8kLyxcbiAgICAgICAgLy8gZnJvbSBodHRwOi8vZG9jcy5jbG9zdXJlLWxpYnJhcnkuZ29vZ2xlY29kZS5jb20vZ2l0L2Nsb3N1cmVfZ29vZ19kYXRlX2RhdGUuanMuc291cmNlLmh0bWxcbiAgICAgICAgLy8gc29tZXdoYXQgbW9yZSBpbiBsaW5lIHdpdGggNC40LjMuMiAyMDA0IHNwZWMsIGJ1dCBhbGxvd3MgZGVjaW1hbCBhbnl3aGVyZVxuICAgICAgICAvLyBhbmQgZnVydGhlciBtb2RpZmllZCB0byBhbGxvdyBmb3Igc3RyaW5ncyBjb250YWluaW5nIGJvdGggd2VlayBhbmQgZGF5XG4gICAgICAgIGlzb1JlZ2V4ID1cbiAgICAgICAgICAgIC9eKC18XFwrKT9QKD86KFstK10/WzAtOSwuXSopWSk/KD86KFstK10/WzAtOSwuXSopTSk/KD86KFstK10/WzAtOSwuXSopVyk/KD86KFstK10/WzAtOSwuXSopRCk/KD86VCg/OihbLStdP1swLTksLl0qKUgpPyg/OihbLStdP1swLTksLl0qKU0pPyg/OihbLStdP1swLTksLl0qKVMpPyk/JC87XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVEdXJhdGlvbihpbnB1dCwga2V5KSB7XG4gICAgICAgIHZhciBkdXJhdGlvbiA9IGlucHV0LFxuICAgICAgICAgICAgLy8gbWF0Y2hpbmcgYWdhaW5zdCByZWdleHAgaXMgZXhwZW5zaXZlLCBkbyBpdCBvbiBkZW1hbmRcbiAgICAgICAgICAgIG1hdGNoID0gbnVsbCxcbiAgICAgICAgICAgIHNpZ24sXG4gICAgICAgICAgICByZXQsXG4gICAgICAgICAgICBkaWZmUmVzO1xuXG4gICAgICAgIGlmIChpc0R1cmF0aW9uKGlucHV0KSkge1xuICAgICAgICAgICAgZHVyYXRpb24gPSB7XG4gICAgICAgICAgICAgICAgbXM6IGlucHV0Ll9taWxsaXNlY29uZHMsXG4gICAgICAgICAgICAgICAgZDogaW5wdXQuX2RheXMsXG4gICAgICAgICAgICAgICAgTTogaW5wdXQuX21vbnRocyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAoaXNOdW1iZXIoaW5wdXQpIHx8ICFpc05hTigraW5wdXQpKSB7XG4gICAgICAgICAgICBkdXJhdGlvbiA9IHt9O1xuICAgICAgICAgICAgaWYgKGtleSkge1xuICAgICAgICAgICAgICAgIGR1cmF0aW9uW2tleV0gPSAraW5wdXQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGR1cmF0aW9uLm1pbGxpc2Vjb25kcyA9ICtpbnB1dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmICgobWF0Y2ggPSBhc3BOZXRSZWdleC5leGVjKGlucHV0KSkpIHtcbiAgICAgICAgICAgIHNpZ24gPSBtYXRjaFsxXSA9PT0gJy0nID8gLTEgOiAxO1xuICAgICAgICAgICAgZHVyYXRpb24gPSB7XG4gICAgICAgICAgICAgICAgeTogMCxcbiAgICAgICAgICAgICAgICBkOiB0b0ludChtYXRjaFtEQVRFXSkgKiBzaWduLFxuICAgICAgICAgICAgICAgIGg6IHRvSW50KG1hdGNoW0hPVVJdKSAqIHNpZ24sXG4gICAgICAgICAgICAgICAgbTogdG9JbnQobWF0Y2hbTUlOVVRFXSkgKiBzaWduLFxuICAgICAgICAgICAgICAgIHM6IHRvSW50KG1hdGNoW1NFQ09ORF0pICogc2lnbixcbiAgICAgICAgICAgICAgICBtczogdG9JbnQoYWJzUm91bmQobWF0Y2hbTUlMTElTRUNPTkRdICogMTAwMCkpICogc2lnbiwgLy8gdGhlIG1pbGxpc2Vjb25kIGRlY2ltYWwgcG9pbnQgaXMgaW5jbHVkZWQgaW4gdGhlIG1hdGNoXG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2UgaWYgKChtYXRjaCA9IGlzb1JlZ2V4LmV4ZWMoaW5wdXQpKSkge1xuICAgICAgICAgICAgc2lnbiA9IG1hdGNoWzFdID09PSAnLScgPyAtMSA6IDE7XG4gICAgICAgICAgICBkdXJhdGlvbiA9IHtcbiAgICAgICAgICAgICAgICB5OiBwYXJzZUlzbyhtYXRjaFsyXSwgc2lnbiksXG4gICAgICAgICAgICAgICAgTTogcGFyc2VJc28obWF0Y2hbM10sIHNpZ24pLFxuICAgICAgICAgICAgICAgIHc6IHBhcnNlSXNvKG1hdGNoWzRdLCBzaWduKSxcbiAgICAgICAgICAgICAgICBkOiBwYXJzZUlzbyhtYXRjaFs1XSwgc2lnbiksXG4gICAgICAgICAgICAgICAgaDogcGFyc2VJc28obWF0Y2hbNl0sIHNpZ24pLFxuICAgICAgICAgICAgICAgIG06IHBhcnNlSXNvKG1hdGNoWzddLCBzaWduKSxcbiAgICAgICAgICAgICAgICBzOiBwYXJzZUlzbyhtYXRjaFs4XSwgc2lnbiksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2UgaWYgKGR1cmF0aW9uID09IG51bGwpIHtcbiAgICAgICAgICAgIC8vIGNoZWNrcyBmb3IgbnVsbCBvciB1bmRlZmluZWRcbiAgICAgICAgICAgIGR1cmF0aW9uID0ge307XG4gICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgICB0eXBlb2YgZHVyYXRpb24gPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAoJ2Zyb20nIGluIGR1cmF0aW9uIHx8ICd0bycgaW4gZHVyYXRpb24pXG4gICAgICAgICkge1xuICAgICAgICAgICAgZGlmZlJlcyA9IG1vbWVudHNEaWZmZXJlbmNlKFxuICAgICAgICAgICAgICAgIGNyZWF0ZUxvY2FsKGR1cmF0aW9uLmZyb20pLFxuICAgICAgICAgICAgICAgIGNyZWF0ZUxvY2FsKGR1cmF0aW9uLnRvKVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgZHVyYXRpb24gPSB7fTtcbiAgICAgICAgICAgIGR1cmF0aW9uLm1zID0gZGlmZlJlcy5taWxsaXNlY29uZHM7XG4gICAgICAgICAgICBkdXJhdGlvbi5NID0gZGlmZlJlcy5tb250aHM7XG4gICAgICAgIH1cblxuICAgICAgICByZXQgPSBuZXcgRHVyYXRpb24oZHVyYXRpb24pO1xuXG4gICAgICAgIGlmIChpc0R1cmF0aW9uKGlucHV0KSAmJiBoYXNPd25Qcm9wKGlucHV0LCAnX2xvY2FsZScpKSB7XG4gICAgICAgICAgICByZXQuX2xvY2FsZSA9IGlucHV0Ll9sb2NhbGU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNEdXJhdGlvbihpbnB1dCkgJiYgaGFzT3duUHJvcChpbnB1dCwgJ19pc1ZhbGlkJykpIHtcbiAgICAgICAgICAgIHJldC5faXNWYWxpZCA9IGlucHV0Ll9pc1ZhbGlkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG5cbiAgICBjcmVhdGVEdXJhdGlvbi5mbiA9IER1cmF0aW9uLnByb3RvdHlwZTtcbiAgICBjcmVhdGVEdXJhdGlvbi5pbnZhbGlkID0gY3JlYXRlSW52YWxpZCQxO1xuXG4gICAgZnVuY3Rpb24gcGFyc2VJc28oaW5wLCBzaWduKSB7XG4gICAgICAgIC8vIFdlJ2Qgbm9ybWFsbHkgdXNlIH5+aW5wIGZvciB0aGlzLCBidXQgdW5mb3J0dW5hdGVseSBpdCBhbHNvXG4gICAgICAgIC8vIGNvbnZlcnRzIGZsb2F0cyB0byBpbnRzLlxuICAgICAgICAvLyBpbnAgbWF5IGJlIHVuZGVmaW5lZCwgc28gY2FyZWZ1bCBjYWxsaW5nIHJlcGxhY2Ugb24gaXQuXG4gICAgICAgIHZhciByZXMgPSBpbnAgJiYgcGFyc2VGbG9hdChpbnAucmVwbGFjZSgnLCcsICcuJykpO1xuICAgICAgICAvLyBhcHBseSBzaWduIHdoaWxlIHdlJ3JlIGF0IGl0XG4gICAgICAgIHJldHVybiAoaXNOYU4ocmVzKSA/IDAgOiByZXMpICogc2lnbjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb3NpdGl2ZU1vbWVudHNEaWZmZXJlbmNlKGJhc2UsIG90aGVyKSB7XG4gICAgICAgIHZhciByZXMgPSB7fTtcblxuICAgICAgICByZXMubW9udGhzID1cbiAgICAgICAgICAgIG90aGVyLm1vbnRoKCkgLSBiYXNlLm1vbnRoKCkgKyAob3RoZXIueWVhcigpIC0gYmFzZS55ZWFyKCkpICogMTI7XG4gICAgICAgIGlmIChiYXNlLmNsb25lKCkuYWRkKHJlcy5tb250aHMsICdNJykuaXNBZnRlcihvdGhlcikpIHtcbiAgICAgICAgICAgIC0tcmVzLm1vbnRocztcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcy5taWxsaXNlY29uZHMgPSArb3RoZXIgLSArYmFzZS5jbG9uZSgpLmFkZChyZXMubW9udGhzLCAnTScpO1xuXG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbW9tZW50c0RpZmZlcmVuY2UoYmFzZSwgb3RoZXIpIHtcbiAgICAgICAgdmFyIHJlcztcbiAgICAgICAgaWYgKCEoYmFzZS5pc1ZhbGlkKCkgJiYgb3RoZXIuaXNWYWxpZCgpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgbWlsbGlzZWNvbmRzOiAwLCBtb250aHM6IDAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIG90aGVyID0gY2xvbmVXaXRoT2Zmc2V0KG90aGVyLCBiYXNlKTtcbiAgICAgICAgaWYgKGJhc2UuaXNCZWZvcmUob3RoZXIpKSB7XG4gICAgICAgICAgICByZXMgPSBwb3NpdGl2ZU1vbWVudHNEaWZmZXJlbmNlKGJhc2UsIG90aGVyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcyA9IHBvc2l0aXZlTW9tZW50c0RpZmZlcmVuY2Uob3RoZXIsIGJhc2UpO1xuICAgICAgICAgICAgcmVzLm1pbGxpc2Vjb25kcyA9IC1yZXMubWlsbGlzZWNvbmRzO1xuICAgICAgICAgICAgcmVzLm1vbnRocyA9IC1yZXMubW9udGhzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG5cbiAgICAvLyBUT0RPOiByZW1vdmUgJ25hbWUnIGFyZyBhZnRlciBkZXByZWNhdGlvbiBpcyByZW1vdmVkXG4gICAgZnVuY3Rpb24gY3JlYXRlQWRkZXIoZGlyZWN0aW9uLCBuYW1lKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAodmFsLCBwZXJpb2QpIHtcbiAgICAgICAgICAgIHZhciBkdXIsIHRtcDtcbiAgICAgICAgICAgIC8vaW52ZXJ0IHRoZSBhcmd1bWVudHMsIGJ1dCBjb21wbGFpbiBhYm91dCBpdFxuICAgICAgICAgICAgaWYgKHBlcmlvZCAhPT0gbnVsbCAmJiAhaXNOYU4oK3BlcmlvZCkpIHtcbiAgICAgICAgICAgICAgICBkZXByZWNhdGVTaW1wbGUoXG4gICAgICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICdtb21lbnQoKS4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJyhwZXJpb2QsIG51bWJlcikgaXMgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBtb21lbnQoKS4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJyhudW1iZXIsIHBlcmlvZCkuICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ1NlZSBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2FkZC1pbnZlcnRlZC1wYXJhbS8gZm9yIG1vcmUgaW5mby4nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB0bXAgPSB2YWw7XG4gICAgICAgICAgICAgICAgdmFsID0gcGVyaW9kO1xuICAgICAgICAgICAgICAgIHBlcmlvZCA9IHRtcDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZHVyID0gY3JlYXRlRHVyYXRpb24odmFsLCBwZXJpb2QpO1xuICAgICAgICAgICAgYWRkU3VidHJhY3QodGhpcywgZHVyLCBkaXJlY3Rpb24pO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYWRkU3VidHJhY3QobW9tLCBkdXJhdGlvbiwgaXNBZGRpbmcsIHVwZGF0ZU9mZnNldCkge1xuICAgICAgICB2YXIgbWlsbGlzZWNvbmRzID0gZHVyYXRpb24uX21pbGxpc2Vjb25kcyxcbiAgICAgICAgICAgIGRheXMgPSBhYnNSb3VuZChkdXJhdGlvbi5fZGF5cyksXG4gICAgICAgICAgICBtb250aHMgPSBhYnNSb3VuZChkdXJhdGlvbi5fbW9udGhzKTtcblxuICAgICAgICBpZiAoIW1vbS5pc1ZhbGlkKCkpIHtcbiAgICAgICAgICAgIC8vIE5vIG9wXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB1cGRhdGVPZmZzZXQgPSB1cGRhdGVPZmZzZXQgPT0gbnVsbCA/IHRydWUgOiB1cGRhdGVPZmZzZXQ7XG5cbiAgICAgICAgaWYgKG1vbnRocykge1xuICAgICAgICAgICAgc2V0TW9udGgobW9tLCBnZXQobW9tLCAnTW9udGgnKSArIG1vbnRocyAqIGlzQWRkaW5nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF5cykge1xuICAgICAgICAgICAgc2V0JDEobW9tLCAnRGF0ZScsIGdldChtb20sICdEYXRlJykgKyBkYXlzICogaXNBZGRpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtaWxsaXNlY29uZHMpIHtcbiAgICAgICAgICAgIG1vbS5fZC5zZXRUaW1lKG1vbS5fZC52YWx1ZU9mKCkgKyBtaWxsaXNlY29uZHMgKiBpc0FkZGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHVwZGF0ZU9mZnNldCkge1xuICAgICAgICAgICAgaG9va3MudXBkYXRlT2Zmc2V0KG1vbSwgZGF5cyB8fCBtb250aHMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGFkZCA9IGNyZWF0ZUFkZGVyKDEsICdhZGQnKSxcbiAgICAgICAgc3VidHJhY3QgPSBjcmVhdGVBZGRlcigtMSwgJ3N1YnRyYWN0Jyk7XG5cbiAgICBmdW5jdGlvbiBpc1N0cmluZyhpbnB1dCkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIFN0cmluZztcbiAgICB9XG5cbiAgICAvLyB0eXBlIE1vbWVudElucHV0ID0gTW9tZW50IHwgRGF0ZSB8IHN0cmluZyB8IG51bWJlciB8IChudW1iZXIgfCBzdHJpbmcpW10gfCBNb21lbnRJbnB1dE9iamVjdCB8IHZvaWQ7IC8vIG51bGwgfCB1bmRlZmluZWRcbiAgICBmdW5jdGlvbiBpc01vbWVudElucHV0KGlucHV0KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBpc01vbWVudChpbnB1dCkgfHxcbiAgICAgICAgICAgIGlzRGF0ZShpbnB1dCkgfHxcbiAgICAgICAgICAgIGlzU3RyaW5nKGlucHV0KSB8fFxuICAgICAgICAgICAgaXNOdW1iZXIoaW5wdXQpIHx8XG4gICAgICAgICAgICBpc051bWJlck9yU3RyaW5nQXJyYXkoaW5wdXQpIHx8XG4gICAgICAgICAgICBpc01vbWVudElucHV0T2JqZWN0KGlucHV0KSB8fFxuICAgICAgICAgICAgaW5wdXQgPT09IG51bGwgfHxcbiAgICAgICAgICAgIGlucHV0ID09PSB1bmRlZmluZWRcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc01vbWVudElucHV0T2JqZWN0KGlucHV0KSB7XG4gICAgICAgIHZhciBvYmplY3RUZXN0ID0gaXNPYmplY3QoaW5wdXQpICYmICFpc09iamVjdEVtcHR5KGlucHV0KSxcbiAgICAgICAgICAgIHByb3BlcnR5VGVzdCA9IGZhbHNlLFxuICAgICAgICAgICAgcHJvcGVydGllcyA9IFtcbiAgICAgICAgICAgICAgICAneWVhcnMnLFxuICAgICAgICAgICAgICAgICd5ZWFyJyxcbiAgICAgICAgICAgICAgICAneScsXG4gICAgICAgICAgICAgICAgJ21vbnRocycsXG4gICAgICAgICAgICAgICAgJ21vbnRoJyxcbiAgICAgICAgICAgICAgICAnTScsXG4gICAgICAgICAgICAgICAgJ2RheXMnLFxuICAgICAgICAgICAgICAgICdkYXknLFxuICAgICAgICAgICAgICAgICdkJyxcbiAgICAgICAgICAgICAgICAnZGF0ZXMnLFxuICAgICAgICAgICAgICAgICdkYXRlJyxcbiAgICAgICAgICAgICAgICAnRCcsXG4gICAgICAgICAgICAgICAgJ2hvdXJzJyxcbiAgICAgICAgICAgICAgICAnaG91cicsXG4gICAgICAgICAgICAgICAgJ2gnLFxuICAgICAgICAgICAgICAgICdtaW51dGVzJyxcbiAgICAgICAgICAgICAgICAnbWludXRlJyxcbiAgICAgICAgICAgICAgICAnbScsXG4gICAgICAgICAgICAgICAgJ3NlY29uZHMnLFxuICAgICAgICAgICAgICAgICdzZWNvbmQnLFxuICAgICAgICAgICAgICAgICdzJyxcbiAgICAgICAgICAgICAgICAnbWlsbGlzZWNvbmRzJyxcbiAgICAgICAgICAgICAgICAnbWlsbGlzZWNvbmQnLFxuICAgICAgICAgICAgICAgICdtcycsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIHByb3BlcnR5LFxuICAgICAgICAgICAgcHJvcGVydHlMZW4gPSBwcm9wZXJ0aWVzLmxlbmd0aDtcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcHJvcGVydHlMZW47IGkgKz0gMSkge1xuICAgICAgICAgICAgcHJvcGVydHkgPSBwcm9wZXJ0aWVzW2ldO1xuICAgICAgICAgICAgcHJvcGVydHlUZXN0ID0gcHJvcGVydHlUZXN0IHx8IGhhc093blByb3AoaW5wdXQsIHByb3BlcnR5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvYmplY3RUZXN0ICYmIHByb3BlcnR5VGVzdDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc051bWJlck9yU3RyaW5nQXJyYXkoaW5wdXQpIHtcbiAgICAgICAgdmFyIGFycmF5VGVzdCA9IGlzQXJyYXkoaW5wdXQpLFxuICAgICAgICAgICAgZGF0YVR5cGVUZXN0ID0gZmFsc2U7XG4gICAgICAgIGlmIChhcnJheVRlc3QpIHtcbiAgICAgICAgICAgIGRhdGFUeXBlVGVzdCA9XG4gICAgICAgICAgICAgICAgaW5wdXQuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhaXNOdW1iZXIoaXRlbSkgJiYgaXNTdHJpbmcoaW5wdXQpO1xuICAgICAgICAgICAgICAgIH0pLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXJyYXlUZXN0ICYmIGRhdGFUeXBlVGVzdDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0NhbGVuZGFyU3BlYyhpbnB1dCkge1xuICAgICAgICB2YXIgb2JqZWN0VGVzdCA9IGlzT2JqZWN0KGlucHV0KSAmJiAhaXNPYmplY3RFbXB0eShpbnB1dCksXG4gICAgICAgICAgICBwcm9wZXJ0eVRlc3QgPSBmYWxzZSxcbiAgICAgICAgICAgIHByb3BlcnRpZXMgPSBbXG4gICAgICAgICAgICAgICAgJ3NhbWVEYXknLFxuICAgICAgICAgICAgICAgICduZXh0RGF5JyxcbiAgICAgICAgICAgICAgICAnbGFzdERheScsXG4gICAgICAgICAgICAgICAgJ25leHRXZWVrJyxcbiAgICAgICAgICAgICAgICAnbGFzdFdlZWsnLFxuICAgICAgICAgICAgICAgICdzYW1lRWxzZScsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIHByb3BlcnR5O1xuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBwcm9wZXJ0aWVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBwcm9wZXJ0eSA9IHByb3BlcnRpZXNbaV07XG4gICAgICAgICAgICBwcm9wZXJ0eVRlc3QgPSBwcm9wZXJ0eVRlc3QgfHwgaGFzT3duUHJvcChpbnB1dCwgcHJvcGVydHkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG9iamVjdFRlc3QgJiYgcHJvcGVydHlUZXN0O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldENhbGVuZGFyRm9ybWF0KG15TW9tZW50LCBub3cpIHtcbiAgICAgICAgdmFyIGRpZmYgPSBteU1vbWVudC5kaWZmKG5vdywgJ2RheXMnLCB0cnVlKTtcbiAgICAgICAgcmV0dXJuIGRpZmYgPCAtNlxuICAgICAgICAgICAgPyAnc2FtZUVsc2UnXG4gICAgICAgICAgICA6IGRpZmYgPCAtMVxuICAgICAgICAgICAgICA/ICdsYXN0V2VlaydcbiAgICAgICAgICAgICAgOiBkaWZmIDwgMFxuICAgICAgICAgICAgICAgID8gJ2xhc3REYXknXG4gICAgICAgICAgICAgICAgOiBkaWZmIDwgMVxuICAgICAgICAgICAgICAgICAgPyAnc2FtZURheSdcbiAgICAgICAgICAgICAgICAgIDogZGlmZiA8IDJcbiAgICAgICAgICAgICAgICAgICAgPyAnbmV4dERheSdcbiAgICAgICAgICAgICAgICAgICAgOiBkaWZmIDwgN1xuICAgICAgICAgICAgICAgICAgICAgID8gJ25leHRXZWVrJ1xuICAgICAgICAgICAgICAgICAgICAgIDogJ3NhbWVFbHNlJztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxlbmRhciQxKHRpbWUsIGZvcm1hdHMpIHtcbiAgICAgICAgLy8gU3VwcG9ydCBmb3Igc2luZ2xlIHBhcmFtZXRlciwgZm9ybWF0cyBvbmx5IG92ZXJsb2FkIHRvIHRoZSBjYWxlbmRhciBmdW5jdGlvblxuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHNbMF0pIHtcbiAgICAgICAgICAgICAgICB0aW1lID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIGZvcm1hdHMgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlzTW9tZW50SW5wdXQoYXJndW1lbnRzWzBdKSkge1xuICAgICAgICAgICAgICAgIHRpbWUgPSBhcmd1bWVudHNbMF07XG4gICAgICAgICAgICAgICAgZm9ybWF0cyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNDYWxlbmRhclNwZWMoYXJndW1lbnRzWzBdKSkge1xuICAgICAgICAgICAgICAgIGZvcm1hdHMgPSBhcmd1bWVudHNbMF07XG4gICAgICAgICAgICAgICAgdGltZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBXZSB3YW50IHRvIGNvbXBhcmUgdGhlIHN0YXJ0IG9mIHRvZGF5LCB2cyB0aGlzLlxuICAgICAgICAvLyBHZXR0aW5nIHN0YXJ0LW9mLXRvZGF5IGRlcGVuZHMgb24gd2hldGhlciB3ZSdyZSBsb2NhbC91dGMvb2Zmc2V0IG9yIG5vdC5cbiAgICAgICAgdmFyIG5vdyA9IHRpbWUgfHwgY3JlYXRlTG9jYWwoKSxcbiAgICAgICAgICAgIHNvZCA9IGNsb25lV2l0aE9mZnNldChub3csIHRoaXMpLnN0YXJ0T2YoJ2RheScpLFxuICAgICAgICAgICAgZm9ybWF0ID0gaG9va3MuY2FsZW5kYXJGb3JtYXQodGhpcywgc29kKSB8fCAnc2FtZUVsc2UnLFxuICAgICAgICAgICAgb3V0cHV0ID1cbiAgICAgICAgICAgICAgICBmb3JtYXRzICYmXG4gICAgICAgICAgICAgICAgKGlzRnVuY3Rpb24oZm9ybWF0c1tmb3JtYXRdKVxuICAgICAgICAgICAgICAgICAgICA/IGZvcm1hdHNbZm9ybWF0XS5jYWxsKHRoaXMsIG5vdylcbiAgICAgICAgICAgICAgICAgICAgOiBmb3JtYXRzW2Zvcm1hdF0pO1xuXG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdChcbiAgICAgICAgICAgIG91dHB1dCB8fCB0aGlzLmxvY2FsZURhdGEoKS5jYWxlbmRhcihmb3JtYXQsIHRoaXMsIGNyZWF0ZUxvY2FsKG5vdykpXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiBuZXcgTW9tZW50KHRoaXMpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzQWZ0ZXIoaW5wdXQsIHVuaXRzKSB7XG4gICAgICAgIHZhciBsb2NhbElucHV0ID0gaXNNb21lbnQoaW5wdXQpID8gaW5wdXQgOiBjcmVhdGVMb2NhbChpbnB1dCk7XG4gICAgICAgIGlmICghKHRoaXMuaXNWYWxpZCgpICYmIGxvY2FsSW5wdXQuaXNWYWxpZCgpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModW5pdHMpIHx8ICdtaWxsaXNlY29uZCc7XG4gICAgICAgIGlmICh1bml0cyA9PT0gJ21pbGxpc2Vjb25kJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVPZigpID4gbG9jYWxJbnB1dC52YWx1ZU9mKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxJbnB1dC52YWx1ZU9mKCkgPCB0aGlzLmNsb25lKCkuc3RhcnRPZih1bml0cykudmFsdWVPZigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNCZWZvcmUoaW5wdXQsIHVuaXRzKSB7XG4gICAgICAgIHZhciBsb2NhbElucHV0ID0gaXNNb21lbnQoaW5wdXQpID8gaW5wdXQgOiBjcmVhdGVMb2NhbChpbnB1dCk7XG4gICAgICAgIGlmICghKHRoaXMuaXNWYWxpZCgpICYmIGxvY2FsSW5wdXQuaXNWYWxpZCgpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModW5pdHMpIHx8ICdtaWxsaXNlY29uZCc7XG4gICAgICAgIGlmICh1bml0cyA9PT0gJ21pbGxpc2Vjb25kJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVPZigpIDwgbG9jYWxJbnB1dC52YWx1ZU9mKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmVuZE9mKHVuaXRzKS52YWx1ZU9mKCkgPCBsb2NhbElucHV0LnZhbHVlT2YoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzQmV0d2Vlbihmcm9tLCB0bywgdW5pdHMsIGluY2x1c2l2aXR5KSB7XG4gICAgICAgIHZhciBsb2NhbEZyb20gPSBpc01vbWVudChmcm9tKSA/IGZyb20gOiBjcmVhdGVMb2NhbChmcm9tKSxcbiAgICAgICAgICAgIGxvY2FsVG8gPSBpc01vbWVudCh0bykgPyB0byA6IGNyZWF0ZUxvY2FsKHRvKTtcbiAgICAgICAgaWYgKCEodGhpcy5pc1ZhbGlkKCkgJiYgbG9jYWxGcm9tLmlzVmFsaWQoKSAmJiBsb2NhbFRvLmlzVmFsaWQoKSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpbmNsdXNpdml0eSA9IGluY2x1c2l2aXR5IHx8ICcoKSc7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAoaW5jbHVzaXZpdHlbMF0gPT09ICcoJ1xuICAgICAgICAgICAgICAgID8gdGhpcy5pc0FmdGVyKGxvY2FsRnJvbSwgdW5pdHMpXG4gICAgICAgICAgICAgICAgOiAhdGhpcy5pc0JlZm9yZShsb2NhbEZyb20sIHVuaXRzKSkgJiZcbiAgICAgICAgICAgIChpbmNsdXNpdml0eVsxXSA9PT0gJyknXG4gICAgICAgICAgICAgICAgPyB0aGlzLmlzQmVmb3JlKGxvY2FsVG8sIHVuaXRzKVxuICAgICAgICAgICAgICAgIDogIXRoaXMuaXNBZnRlcihsb2NhbFRvLCB1bml0cykpXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNTYW1lKGlucHV0LCB1bml0cykge1xuICAgICAgICB2YXIgbG9jYWxJbnB1dCA9IGlzTW9tZW50KGlucHV0KSA/IGlucHV0IDogY3JlYXRlTG9jYWwoaW5wdXQpLFxuICAgICAgICAgICAgaW5wdXRNcztcbiAgICAgICAgaWYgKCEodGhpcy5pc1ZhbGlkKCkgJiYgbG9jYWxJbnB1dC5pc1ZhbGlkKCkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdW5pdHMgPSBub3JtYWxpemVVbml0cyh1bml0cykgfHwgJ21pbGxpc2Vjb25kJztcbiAgICAgICAgaWYgKHVuaXRzID09PSAnbWlsbGlzZWNvbmQnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52YWx1ZU9mKCkgPT09IGxvY2FsSW5wdXQudmFsdWVPZigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5wdXRNcyA9IGxvY2FsSW5wdXQudmFsdWVPZigpO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICB0aGlzLmNsb25lKCkuc3RhcnRPZih1bml0cykudmFsdWVPZigpIDw9IGlucHV0TXMgJiZcbiAgICAgICAgICAgICAgICBpbnB1dE1zIDw9IHRoaXMuY2xvbmUoKS5lbmRPZih1bml0cykudmFsdWVPZigpXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNTYW1lT3JBZnRlcihpbnB1dCwgdW5pdHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNTYW1lKGlucHV0LCB1bml0cykgfHwgdGhpcy5pc0FmdGVyKGlucHV0LCB1bml0cyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNTYW1lT3JCZWZvcmUoaW5wdXQsIHVuaXRzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzU2FtZShpbnB1dCwgdW5pdHMpIHx8IHRoaXMuaXNCZWZvcmUoaW5wdXQsIHVuaXRzKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkaWZmKGlucHV0LCB1bml0cywgYXNGbG9hdCkge1xuICAgICAgICB2YXIgdGhhdCwgem9uZURlbHRhLCBvdXRwdXQ7XG5cbiAgICAgICAgaWYgKCF0aGlzLmlzVmFsaWQoKSkge1xuICAgICAgICAgICAgcmV0dXJuIE5hTjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoYXQgPSBjbG9uZVdpdGhPZmZzZXQoaW5wdXQsIHRoaXMpO1xuXG4gICAgICAgIGlmICghdGhhdC5pc1ZhbGlkKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBOYU47XG4gICAgICAgIH1cblxuICAgICAgICB6b25lRGVsdGEgPSAodGhhdC51dGNPZmZzZXQoKSAtIHRoaXMudXRjT2Zmc2V0KCkpICogNmU0O1xuXG4gICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModW5pdHMpO1xuXG4gICAgICAgIHN3aXRjaCAodW5pdHMpIHtcbiAgICAgICAgICAgIGNhc2UgJ3llYXInOlxuICAgICAgICAgICAgICAgIG91dHB1dCA9IG1vbnRoRGlmZih0aGlzLCB0aGF0KSAvIDEyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbW9udGgnOlxuICAgICAgICAgICAgICAgIG91dHB1dCA9IG1vbnRoRGlmZih0aGlzLCB0aGF0KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3F1YXJ0ZXInOlxuICAgICAgICAgICAgICAgIG91dHB1dCA9IG1vbnRoRGlmZih0aGlzLCB0aGF0KSAvIDM7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdzZWNvbmQnOlxuICAgICAgICAgICAgICAgIG91dHB1dCA9ICh0aGlzIC0gdGhhdCkgLyAxZTM7XG4gICAgICAgICAgICAgICAgYnJlYWs7IC8vIDEwMDBcbiAgICAgICAgICAgIGNhc2UgJ21pbnV0ZSc6XG4gICAgICAgICAgICAgICAgb3V0cHV0ID0gKHRoaXMgLSB0aGF0KSAvIDZlNDtcbiAgICAgICAgICAgICAgICBicmVhazsgLy8gMTAwMCAqIDYwXG4gICAgICAgICAgICBjYXNlICdob3VyJzpcbiAgICAgICAgICAgICAgICBvdXRwdXQgPSAodGhpcyAtIHRoYXQpIC8gMzZlNTtcbiAgICAgICAgICAgICAgICBicmVhazsgLy8gMTAwMCAqIDYwICogNjBcbiAgICAgICAgICAgIGNhc2UgJ2RheSc6XG4gICAgICAgICAgICAgICAgb3V0cHV0ID0gKHRoaXMgLSB0aGF0IC0gem9uZURlbHRhKSAvIDg2NGU1O1xuICAgICAgICAgICAgICAgIGJyZWFrOyAvLyAxMDAwICogNjAgKiA2MCAqIDI0LCBuZWdhdGUgZHN0XG4gICAgICAgICAgICBjYXNlICd3ZWVrJzpcbiAgICAgICAgICAgICAgICBvdXRwdXQgPSAodGhpcyAtIHRoYXQgLSB6b25lRGVsdGEpIC8gNjA0OGU1O1xuICAgICAgICAgICAgICAgIGJyZWFrOyAvLyAxMDAwICogNjAgKiA2MCAqIDI0ICogNywgbmVnYXRlIGRzdFxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBvdXRwdXQgPSB0aGlzIC0gdGhhdDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhc0Zsb2F0ID8gb3V0cHV0IDogYWJzRmxvb3Iob3V0cHV0KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtb250aERpZmYoYSwgYikge1xuICAgICAgICBpZiAoYS5kYXRlKCkgPCBiLmRhdGUoKSkge1xuICAgICAgICAgICAgLy8gZW5kLW9mLW1vbnRoIGNhbGN1bGF0aW9ucyB3b3JrIGNvcnJlY3Qgd2hlbiB0aGUgc3RhcnQgbW9udGggaGFzIG1vcmVcbiAgICAgICAgICAgIC8vIGRheXMgdGhhbiB0aGUgZW5kIG1vbnRoLlxuICAgICAgICAgICAgcmV0dXJuIC1tb250aERpZmYoYiwgYSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZGlmZmVyZW5jZSBpbiBtb250aHNcbiAgICAgICAgdmFyIHdob2xlTW9udGhEaWZmID0gKGIueWVhcigpIC0gYS55ZWFyKCkpICogMTIgKyAoYi5tb250aCgpIC0gYS5tb250aCgpKSxcbiAgICAgICAgICAgIC8vIGIgaXMgaW4gKGFuY2hvciAtIDEgbW9udGgsIGFuY2hvciArIDEgbW9udGgpXG4gICAgICAgICAgICBhbmNob3IgPSBhLmNsb25lKCkuYWRkKHdob2xlTW9udGhEaWZmLCAnbW9udGhzJyksXG4gICAgICAgICAgICBhbmNob3IyLFxuICAgICAgICAgICAgYWRqdXN0O1xuXG4gICAgICAgIGlmIChiIC0gYW5jaG9yIDwgMCkge1xuICAgICAgICAgICAgYW5jaG9yMiA9IGEuY2xvbmUoKS5hZGQod2hvbGVNb250aERpZmYgLSAxLCAnbW9udGhzJyk7XG4gICAgICAgICAgICAvLyBsaW5lYXIgYWNyb3NzIHRoZSBtb250aFxuICAgICAgICAgICAgYWRqdXN0ID0gKGIgLSBhbmNob3IpIC8gKGFuY2hvciAtIGFuY2hvcjIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYW5jaG9yMiA9IGEuY2xvbmUoKS5hZGQod2hvbGVNb250aERpZmYgKyAxLCAnbW9udGhzJyk7XG4gICAgICAgICAgICAvLyBsaW5lYXIgYWNyb3NzIHRoZSBtb250aFxuICAgICAgICAgICAgYWRqdXN0ID0gKGIgLSBhbmNob3IpIC8gKGFuY2hvcjIgLSBhbmNob3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9jaGVjayBmb3IgbmVnYXRpdmUgemVybywgcmV0dXJuIHplcm8gaWYgbmVnYXRpdmUgemVyb1xuICAgICAgICByZXR1cm4gLSh3aG9sZU1vbnRoRGlmZiArIGFkanVzdCkgfHwgMDtcbiAgICB9XG5cbiAgICBob29rcy5kZWZhdWx0Rm9ybWF0ID0gJ1lZWVktTU0tRERUSEg6bW06c3NaJztcbiAgICBob29rcy5kZWZhdWx0Rm9ybWF0VXRjID0gJ1lZWVktTU0tRERUSEg6bW06c3NbWl0nO1xuXG4gICAgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNsb25lKCkubG9jYWxlKCdlbicpLmZvcm1hdCgnZGRkIE1NTSBERCBZWVlZIEhIOm1tOnNzIFtHTVRdWlonKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b0lTT1N0cmluZyhrZWVwT2Zmc2V0KSB7XG4gICAgICAgIGlmICghdGhpcy5pc1ZhbGlkKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1dGMgPSBrZWVwT2Zmc2V0ICE9PSB0cnVlLFxuICAgICAgICAgICAgbSA9IHV0YyA/IHRoaXMuY2xvbmUoKS51dGMoKSA6IHRoaXM7XG4gICAgICAgIGlmIChtLnllYXIoKSA8IDAgfHwgbS55ZWFyKCkgPiA5OTk5KSB7XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0TW9tZW50KFxuICAgICAgICAgICAgICAgIG0sXG4gICAgICAgICAgICAgICAgdXRjXG4gICAgICAgICAgICAgICAgICAgID8gJ1lZWVlZWS1NTS1ERFtUXUhIOm1tOnNzLlNTU1taXSdcbiAgICAgICAgICAgICAgICAgICAgOiAnWVlZWVlZLU1NLUREW1RdSEg6bW06c3MuU1NTWidcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRnVuY3Rpb24oRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcpKSB7XG4gICAgICAgICAgICAvLyBuYXRpdmUgaW1wbGVtZW50YXRpb24gaXMgfjUweCBmYXN0ZXIsIHVzZSBpdCB3aGVuIHdlIGNhblxuICAgICAgICAgICAgaWYgKHV0Yykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRvRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZSh0aGlzLnZhbHVlT2YoKSArIHRoaXMudXRjT2Zmc2V0KCkgKiA2MCAqIDEwMDApXG4gICAgICAgICAgICAgICAgICAgIC50b0lTT1N0cmluZygpXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKCdaJywgZm9ybWF0TW9tZW50KG0sICdaJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JtYXRNb21lbnQoXG4gICAgICAgICAgICBtLFxuICAgICAgICAgICAgdXRjID8gJ1lZWVktTU0tRERbVF1ISDptbTpzcy5TU1NbWl0nIDogJ1lZWVktTU0tRERbVF1ISDptbTpzcy5TU1NaJ1xuICAgICAgICApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybiBhIGh1bWFuIHJlYWRhYmxlIHJlcHJlc2VudGF0aW9uIG9mIGEgbW9tZW50IHRoYXQgY2FuXG4gICAgICogYWxzbyBiZSBldmFsdWF0ZWQgdG8gZ2V0IGEgbmV3IG1vbWVudCB3aGljaCBpcyB0aGUgc2FtZVxuICAgICAqXG4gICAgICogQGxpbmsgaHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvbGF0ZXN0L2RvY3MvYXBpL3V0aWwuaHRtbCN1dGlsX2N1c3RvbV9pbnNwZWN0X2Z1bmN0aW9uX29uX29iamVjdHNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpbnNwZWN0KCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gJ21vbWVudC5pbnZhbGlkKC8qICcgKyB0aGlzLl9pICsgJyAqLyknO1xuICAgICAgICB9XG4gICAgICAgIHZhciBmdW5jID0gJ21vbWVudCcsXG4gICAgICAgICAgICB6b25lID0gJycsXG4gICAgICAgICAgICBwcmVmaXgsXG4gICAgICAgICAgICB5ZWFyLFxuICAgICAgICAgICAgZGF0ZXRpbWUsXG4gICAgICAgICAgICBzdWZmaXg7XG4gICAgICAgIGlmICghdGhpcy5pc0xvY2FsKCkpIHtcbiAgICAgICAgICAgIGZ1bmMgPSB0aGlzLnV0Y09mZnNldCgpID09PSAwID8gJ21vbWVudC51dGMnIDogJ21vbWVudC5wYXJzZVpvbmUnO1xuICAgICAgICAgICAgem9uZSA9ICdaJztcbiAgICAgICAgfVxuICAgICAgICBwcmVmaXggPSAnWycgKyBmdW5jICsgJyhcIl0nO1xuICAgICAgICB5ZWFyID0gMCA8PSB0aGlzLnllYXIoKSAmJiB0aGlzLnllYXIoKSA8PSA5OTk5ID8gJ1lZWVknIDogJ1lZWVlZWSc7XG4gICAgICAgIGRhdGV0aW1lID0gJy1NTS1ERFtUXUhIOm1tOnNzLlNTUyc7XG4gICAgICAgIHN1ZmZpeCA9IHpvbmUgKyAnW1wiKV0nO1xuXG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdChwcmVmaXggKyB5ZWFyICsgZGF0ZXRpbWUgKyBzdWZmaXgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGZvcm1hdChpbnB1dFN0cmluZykge1xuICAgICAgICBpZiAoIWlucHV0U3RyaW5nKSB7XG4gICAgICAgICAgICBpbnB1dFN0cmluZyA9IHRoaXMuaXNVdGMoKVxuICAgICAgICAgICAgICAgID8gaG9va3MuZGVmYXVsdEZvcm1hdFV0Y1xuICAgICAgICAgICAgICAgIDogaG9va3MuZGVmYXVsdEZvcm1hdDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgb3V0cHV0ID0gZm9ybWF0TW9tZW50KHRoaXMsIGlucHV0U3RyaW5nKTtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLnBvc3Rmb3JtYXQob3V0cHV0KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmcm9tKHRpbWUsIHdpdGhvdXRTdWZmaXgpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgdGhpcy5pc1ZhbGlkKCkgJiZcbiAgICAgICAgICAgICgoaXNNb21lbnQodGltZSkgJiYgdGltZS5pc1ZhbGlkKCkpIHx8IGNyZWF0ZUxvY2FsKHRpbWUpLmlzVmFsaWQoKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlRHVyYXRpb24oeyB0bzogdGhpcywgZnJvbTogdGltZSB9KVxuICAgICAgICAgICAgICAgIC5sb2NhbGUodGhpcy5sb2NhbGUoKSlcbiAgICAgICAgICAgICAgICAuaHVtYW5pemUoIXdpdGhvdXRTdWZmaXgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLmludmFsaWREYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmcm9tTm93KHdpdGhvdXRTdWZmaXgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnJvbShjcmVhdGVMb2NhbCgpLCB3aXRob3V0U3VmZml4KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0byh0aW1lLCB3aXRob3V0U3VmZml4KSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIHRoaXMuaXNWYWxpZCgpICYmXG4gICAgICAgICAgICAoKGlzTW9tZW50KHRpbWUpICYmIHRpbWUuaXNWYWxpZCgpKSB8fCBjcmVhdGVMb2NhbCh0aW1lKS5pc1ZhbGlkKCkpXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUR1cmF0aW9uKHsgZnJvbTogdGhpcywgdG86IHRpbWUgfSlcbiAgICAgICAgICAgICAgICAubG9jYWxlKHRoaXMubG9jYWxlKCkpXG4gICAgICAgICAgICAgICAgLmh1bWFuaXplKCF3aXRob3V0U3VmZml4KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxvY2FsZURhdGEoKS5pbnZhbGlkRGF0ZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdG9Ob3cod2l0aG91dFN1ZmZpeCkge1xuICAgICAgICByZXR1cm4gdGhpcy50byhjcmVhdGVMb2NhbCgpLCB3aXRob3V0U3VmZml4KTtcbiAgICB9XG5cbiAgICAvLyBJZiBwYXNzZWQgYSBsb2NhbGUga2V5LCBpdCB3aWxsIHNldCB0aGUgbG9jYWxlIGZvciB0aGlzXG4gICAgLy8gaW5zdGFuY2UuICBPdGhlcndpc2UsIGl0IHdpbGwgcmV0dXJuIHRoZSBsb2NhbGUgY29uZmlndXJhdGlvblxuICAgIC8vIHZhcmlhYmxlcyBmb3IgdGhpcyBpbnN0YW5jZS5cbiAgICBmdW5jdGlvbiBsb2NhbGUoa2V5KSB7XG4gICAgICAgIHZhciBuZXdMb2NhbGVEYXRhO1xuXG4gICAgICAgIGlmIChrZXkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xvY2FsZS5fYWJicjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ld0xvY2FsZURhdGEgPSBnZXRMb2NhbGUoa2V5KTtcbiAgICAgICAgICAgIGlmIChuZXdMb2NhbGVEYXRhICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2NhbGUgPSBuZXdMb2NhbGVEYXRhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgbGFuZyA9IGRlcHJlY2F0ZShcbiAgICAgICAgJ21vbWVudCgpLmxhbmcoKSBpcyBkZXByZWNhdGVkLiBJbnN0ZWFkLCB1c2UgbW9tZW50KCkubG9jYWxlRGF0YSgpIHRvIGdldCB0aGUgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbi4gVXNlIG1vbWVudCgpLmxvY2FsZSgpIHRvIGNoYW5nZSBsYW5ndWFnZXMuJyxcbiAgICAgICAgZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGUoa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICk7XG5cbiAgICBmdW5jdGlvbiBsb2NhbGVEYXRhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbG9jYWxlO1xuICAgIH1cblxuICAgIHZhciBNU19QRVJfU0VDT05EID0gMTAwMCxcbiAgICAgICAgTVNfUEVSX01JTlVURSA9IDYwICogTVNfUEVSX1NFQ09ORCxcbiAgICAgICAgTVNfUEVSX0hPVVIgPSA2MCAqIE1TX1BFUl9NSU5VVEUsXG4gICAgICAgIE1TX1BFUl80MDBfWUVBUlMgPSAoMzY1ICogNDAwICsgOTcpICogMjQgKiBNU19QRVJfSE9VUjtcblxuICAgIC8vIGFjdHVhbCBtb2R1bG8gLSBoYW5kbGVzIG5lZ2F0aXZlIG51bWJlcnMgKGZvciBkYXRlcyBiZWZvcmUgMTk3MCk6XG4gICAgZnVuY3Rpb24gbW9kJDEoZGl2aWRlbmQsIGRpdmlzb3IpIHtcbiAgICAgICAgcmV0dXJuICgoZGl2aWRlbmQgJSBkaXZpc29yKSArIGRpdmlzb3IpICUgZGl2aXNvcjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsb2NhbFN0YXJ0T2ZEYXRlKHksIG0sIGQpIHtcbiAgICAgICAgLy8gdGhlIGRhdGUgY29uc3RydWN0b3IgcmVtYXBzIHllYXJzIDAtOTkgdG8gMTkwMC0xOTk5XG4gICAgICAgIGlmICh5IDwgMTAwICYmIHkgPj0gMCkge1xuICAgICAgICAgICAgLy8gcHJlc2VydmUgbGVhcCB5ZWFycyB1c2luZyBhIGZ1bGwgNDAwIHllYXIgY3ljbGUsIHRoZW4gcmVzZXRcbiAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZSh5ICsgNDAwLCBtLCBkKSAtIE1TX1BFUl80MDBfWUVBUlM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoeSwgbSwgZCkudmFsdWVPZigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXRjU3RhcnRPZkRhdGUoeSwgbSwgZCkge1xuICAgICAgICAvLyBEYXRlLlVUQyByZW1hcHMgeWVhcnMgMC05OSB0byAxOTAwLTE5OTlcbiAgICAgICAgaWYgKHkgPCAxMDAgJiYgeSA+PSAwKSB7XG4gICAgICAgICAgICAvLyBwcmVzZXJ2ZSBsZWFwIHllYXJzIHVzaW5nIGEgZnVsbCA0MDAgeWVhciBjeWNsZSwgdGhlbiByZXNldFxuICAgICAgICAgICAgcmV0dXJuIERhdGUuVVRDKHkgKyA0MDAsIG0sIGQpIC0gTVNfUEVSXzQwMF9ZRUFSUztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBEYXRlLlVUQyh5LCBtLCBkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN0YXJ0T2YodW5pdHMpIHtcbiAgICAgICAgdmFyIHRpbWUsIHN0YXJ0T2ZEYXRlO1xuICAgICAgICB1bml0cyA9IG5vcm1hbGl6ZVVuaXRzKHVuaXRzKTtcbiAgICAgICAgaWYgKHVuaXRzID09PSB1bmRlZmluZWQgfHwgdW5pdHMgPT09ICdtaWxsaXNlY29uZCcgfHwgIXRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXJ0T2ZEYXRlID0gdGhpcy5faXNVVEMgPyB1dGNTdGFydE9mRGF0ZSA6IGxvY2FsU3RhcnRPZkRhdGU7XG5cbiAgICAgICAgc3dpdGNoICh1bml0cykge1xuICAgICAgICAgICAgY2FzZSAneWVhcic6XG4gICAgICAgICAgICAgICAgdGltZSA9IHN0YXJ0T2ZEYXRlKHRoaXMueWVhcigpLCAwLCAxKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3F1YXJ0ZXInOlxuICAgICAgICAgICAgICAgIHRpbWUgPSBzdGFydE9mRGF0ZShcbiAgICAgICAgICAgICAgICAgICAgdGhpcy55ZWFyKCksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW9udGgoKSAtICh0aGlzLm1vbnRoKCkgJSAzKSxcbiAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdtb250aCc6XG4gICAgICAgICAgICAgICAgdGltZSA9IHN0YXJ0T2ZEYXRlKHRoaXMueWVhcigpLCB0aGlzLm1vbnRoKCksIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnd2Vlayc6XG4gICAgICAgICAgICAgICAgdGltZSA9IHN0YXJ0T2ZEYXRlKFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnllYXIoKSxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb250aCgpLFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGUoKSAtIHRoaXMud2Vla2RheSgpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2lzb1dlZWsnOlxuICAgICAgICAgICAgICAgIHRpbWUgPSBzdGFydE9mRGF0ZShcbiAgICAgICAgICAgICAgICAgICAgdGhpcy55ZWFyKCksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW9udGgoKSxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRlKCkgLSAodGhpcy5pc29XZWVrZGF5KCkgLSAxKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkYXknOlxuICAgICAgICAgICAgY2FzZSAnZGF0ZSc6XG4gICAgICAgICAgICAgICAgdGltZSA9IHN0YXJ0T2ZEYXRlKHRoaXMueWVhcigpLCB0aGlzLm1vbnRoKCksIHRoaXMuZGF0ZSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2hvdXInOlxuICAgICAgICAgICAgICAgIHRpbWUgPSB0aGlzLl9kLnZhbHVlT2YoKTtcbiAgICAgICAgICAgICAgICB0aW1lIC09IG1vZCQxKFxuICAgICAgICAgICAgICAgICAgICB0aW1lICsgKHRoaXMuX2lzVVRDID8gMCA6IHRoaXMudXRjT2Zmc2V0KCkgKiBNU19QRVJfTUlOVVRFKSxcbiAgICAgICAgICAgICAgICAgICAgTVNfUEVSX0hPVVJcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbWludXRlJzpcbiAgICAgICAgICAgICAgICB0aW1lID0gdGhpcy5fZC52YWx1ZU9mKCk7XG4gICAgICAgICAgICAgICAgdGltZSAtPSBtb2QkMSh0aW1lLCBNU19QRVJfTUlOVVRFKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgICAgICAgICAgICAgdGltZSA9IHRoaXMuX2QudmFsdWVPZigpO1xuICAgICAgICAgICAgICAgIHRpbWUgLT0gbW9kJDEodGltZSwgTVNfUEVSX1NFQ09ORCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9kLnNldFRpbWUodGltZSk7XG4gICAgICAgIGhvb2tzLnVwZGF0ZU9mZnNldCh0aGlzLCB0cnVlKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZW5kT2YodW5pdHMpIHtcbiAgICAgICAgdmFyIHRpbWUsIHN0YXJ0T2ZEYXRlO1xuICAgICAgICB1bml0cyA9IG5vcm1hbGl6ZVVuaXRzKHVuaXRzKTtcbiAgICAgICAgaWYgKHVuaXRzID09PSB1bmRlZmluZWQgfHwgdW5pdHMgPT09ICdtaWxsaXNlY29uZCcgfHwgIXRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXJ0T2ZEYXRlID0gdGhpcy5faXNVVEMgPyB1dGNTdGFydE9mRGF0ZSA6IGxvY2FsU3RhcnRPZkRhdGU7XG5cbiAgICAgICAgc3dpdGNoICh1bml0cykge1xuICAgICAgICAgICAgY2FzZSAneWVhcic6XG4gICAgICAgICAgICAgICAgdGltZSA9IHN0YXJ0T2ZEYXRlKHRoaXMueWVhcigpICsgMSwgMCwgMSkgLSAxO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAncXVhcnRlcic6XG4gICAgICAgICAgICAgICAgdGltZSA9XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0T2ZEYXRlKFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy55ZWFyKCksXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1vbnRoKCkgLSAodGhpcy5tb250aCgpICUgMykgKyAzLFxuICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICApIC0gMTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ21vbnRoJzpcbiAgICAgICAgICAgICAgICB0aW1lID0gc3RhcnRPZkRhdGUodGhpcy55ZWFyKCksIHRoaXMubW9udGgoKSArIDEsIDEpIC0gMTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3dlZWsnOlxuICAgICAgICAgICAgICAgIHRpbWUgPVxuICAgICAgICAgICAgICAgICAgICBzdGFydE9mRGF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMueWVhcigpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tb250aCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRlKCkgLSB0aGlzLndlZWtkYXkoKSArIDdcbiAgICAgICAgICAgICAgICAgICAgKSAtIDE7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdpc29XZWVrJzpcbiAgICAgICAgICAgICAgICB0aW1lID1cbiAgICAgICAgICAgICAgICAgICAgc3RhcnRPZkRhdGUoXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnllYXIoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubW9udGgoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0ZSgpIC0gKHRoaXMuaXNvV2Vla2RheSgpIC0gMSkgKyA3XG4gICAgICAgICAgICAgICAgICAgICkgLSAxO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGF5JzpcbiAgICAgICAgICAgIGNhc2UgJ2RhdGUnOlxuICAgICAgICAgICAgICAgIHRpbWUgPSBzdGFydE9mRGF0ZSh0aGlzLnllYXIoKSwgdGhpcy5tb250aCgpLCB0aGlzLmRhdGUoKSArIDEpIC0gMTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2hvdXInOlxuICAgICAgICAgICAgICAgIHRpbWUgPSB0aGlzLl9kLnZhbHVlT2YoKTtcbiAgICAgICAgICAgICAgICB0aW1lICs9XG4gICAgICAgICAgICAgICAgICAgIE1TX1BFUl9IT1VSIC1cbiAgICAgICAgICAgICAgICAgICAgbW9kJDEoXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lICsgKHRoaXMuX2lzVVRDID8gMCA6IHRoaXMudXRjT2Zmc2V0KCkgKiBNU19QRVJfTUlOVVRFKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1TX1BFUl9IT1VSXG4gICAgICAgICAgICAgICAgICAgICkgLVxuICAgICAgICAgICAgICAgICAgICAxO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbWludXRlJzpcbiAgICAgICAgICAgICAgICB0aW1lID0gdGhpcy5fZC52YWx1ZU9mKCk7XG4gICAgICAgICAgICAgICAgdGltZSArPSBNU19QRVJfTUlOVVRFIC0gbW9kJDEodGltZSwgTVNfUEVSX01JTlVURSkgLSAxO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnc2Vjb25kJzpcbiAgICAgICAgICAgICAgICB0aW1lID0gdGhpcy5fZC52YWx1ZU9mKCk7XG4gICAgICAgICAgICAgICAgdGltZSArPSBNU19QRVJfU0VDT05EIC0gbW9kJDEodGltZSwgTVNfUEVSX1NFQ09ORCkgLSAxO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fZC5zZXRUaW1lKHRpbWUpO1xuICAgICAgICBob29rcy51cGRhdGVPZmZzZXQodGhpcywgdHJ1ZSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHZhbHVlT2YoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kLnZhbHVlT2YoKSAtICh0aGlzLl9vZmZzZXQgfHwgMCkgKiA2MDAwMDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1bml4KCkge1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzLnZhbHVlT2YoKSAvIDEwMDApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRvRGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMudmFsdWVPZigpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b0FycmF5KCkge1xuICAgICAgICB2YXIgbSA9IHRoaXM7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBtLnllYXIoKSxcbiAgICAgICAgICAgIG0ubW9udGgoKSxcbiAgICAgICAgICAgIG0uZGF0ZSgpLFxuICAgICAgICAgICAgbS5ob3VyKCksXG4gICAgICAgICAgICBtLm1pbnV0ZSgpLFxuICAgICAgICAgICAgbS5zZWNvbmQoKSxcbiAgICAgICAgICAgIG0ubWlsbGlzZWNvbmQoKSxcbiAgICAgICAgXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b09iamVjdCgpIHtcbiAgICAgICAgdmFyIG0gPSB0aGlzO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgeWVhcnM6IG0ueWVhcigpLFxuICAgICAgICAgICAgbW9udGhzOiBtLm1vbnRoKCksXG4gICAgICAgICAgICBkYXRlOiBtLmRhdGUoKSxcbiAgICAgICAgICAgIGhvdXJzOiBtLmhvdXJzKCksXG4gICAgICAgICAgICBtaW51dGVzOiBtLm1pbnV0ZXMoKSxcbiAgICAgICAgICAgIHNlY29uZHM6IG0uc2Vjb25kcygpLFxuICAgICAgICAgICAgbWlsbGlzZWNvbmRzOiBtLm1pbGxpc2Vjb25kcygpLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRvSlNPTigpIHtcbiAgICAgICAgLy8gbmV3IERhdGUoTmFOKS50b0pTT04oKSA9PT0gbnVsbFxuICAgICAgICByZXR1cm4gdGhpcy5pc1ZhbGlkKCkgPyB0aGlzLnRvSVNPU3RyaW5nKCkgOiBudWxsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzVmFsaWQkMigpIHtcbiAgICAgICAgcmV0dXJuIGlzVmFsaWQodGhpcyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcGFyc2luZ0ZsYWdzKCkge1xuICAgICAgICByZXR1cm4gZXh0ZW5kKHt9LCBnZXRQYXJzaW5nRmxhZ3ModGhpcykpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGludmFsaWRBdCgpIHtcbiAgICAgICAgcmV0dXJuIGdldFBhcnNpbmdGbGFncyh0aGlzKS5vdmVyZmxvdztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGlvbkRhdGEoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpbnB1dDogdGhpcy5faSxcbiAgICAgICAgICAgIGZvcm1hdDogdGhpcy5fZixcbiAgICAgICAgICAgIGxvY2FsZTogdGhpcy5fbG9jYWxlLFxuICAgICAgICAgICAgaXNVVEM6IHRoaXMuX2lzVVRDLFxuICAgICAgICAgICAgc3RyaWN0OiB0aGlzLl9zdHJpY3QsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ04nLCAwLCAwLCAnZXJhQWJicicpO1xuICAgIGFkZEZvcm1hdFRva2VuKCdOTicsIDAsIDAsICdlcmFBYmJyJyk7XG4gICAgYWRkRm9ybWF0VG9rZW4oJ05OTicsIDAsIDAsICdlcmFBYmJyJyk7XG4gICAgYWRkRm9ybWF0VG9rZW4oJ05OTk4nLCAwLCAwLCAnZXJhTmFtZScpO1xuICAgIGFkZEZvcm1hdFRva2VuKCdOTk5OTicsIDAsIDAsICdlcmFOYXJyb3cnKTtcblxuICAgIGFkZEZvcm1hdFRva2VuKCd5JywgWyd5JywgMV0sICd5bycsICdlcmFZZWFyJyk7XG4gICAgYWRkRm9ybWF0VG9rZW4oJ3knLCBbJ3l5JywgMl0sIDAsICdlcmFZZWFyJyk7XG4gICAgYWRkRm9ybWF0VG9rZW4oJ3knLCBbJ3l5eScsIDNdLCAwLCAnZXJhWWVhcicpO1xuICAgIGFkZEZvcm1hdFRva2VuKCd5JywgWyd5eXl5JywgNF0sIDAsICdlcmFZZWFyJyk7XG5cbiAgICBhZGRSZWdleFRva2VuKCdOJywgbWF0Y2hFcmFBYmJyKTtcbiAgICBhZGRSZWdleFRva2VuKCdOTicsIG1hdGNoRXJhQWJicik7XG4gICAgYWRkUmVnZXhUb2tlbignTk5OJywgbWF0Y2hFcmFBYmJyKTtcbiAgICBhZGRSZWdleFRva2VuKCdOTk5OJywgbWF0Y2hFcmFOYW1lKTtcbiAgICBhZGRSZWdleFRva2VuKCdOTk5OTicsIG1hdGNoRXJhTmFycm93KTtcblxuICAgIGFkZFBhcnNlVG9rZW4oXG4gICAgICAgIFsnTicsICdOTicsICdOTk4nLCAnTk5OTicsICdOTk5OTiddLFxuICAgICAgICBmdW5jdGlvbiAoaW5wdXQsIGFycmF5LCBjb25maWcsIHRva2VuKSB7XG4gICAgICAgICAgICB2YXIgZXJhID0gY29uZmlnLl9sb2NhbGUuZXJhc1BhcnNlKGlucHV0LCB0b2tlbiwgY29uZmlnLl9zdHJpY3QpO1xuICAgICAgICAgICAgaWYgKGVyYSkge1xuICAgICAgICAgICAgICAgIGdldFBhcnNpbmdGbGFncyhjb25maWcpLmVyYSA9IGVyYTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZ2V0UGFyc2luZ0ZsYWdzKGNvbmZpZykuaW52YWxpZEVyYSA9IGlucHV0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgKTtcblxuICAgIGFkZFJlZ2V4VG9rZW4oJ3knLCBtYXRjaFVuc2lnbmVkKTtcbiAgICBhZGRSZWdleFRva2VuKCd5eScsIG1hdGNoVW5zaWduZWQpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ3l5eScsIG1hdGNoVW5zaWduZWQpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ3l5eXknLCBtYXRjaFVuc2lnbmVkKTtcbiAgICBhZGRSZWdleFRva2VuKCd5bycsIG1hdGNoRXJhWWVhck9yZGluYWwpO1xuXG4gICAgYWRkUGFyc2VUb2tlbihbJ3knLCAneXknLCAneXl5JywgJ3l5eXknXSwgWUVBUik7XG4gICAgYWRkUGFyc2VUb2tlbihbJ3lvJ10sIGZ1bmN0aW9uIChpbnB1dCwgYXJyYXksIGNvbmZpZywgdG9rZW4pIHtcbiAgICAgICAgdmFyIG1hdGNoO1xuICAgICAgICBpZiAoY29uZmlnLl9sb2NhbGUuX2VyYVllYXJPcmRpbmFsUmVnZXgpIHtcbiAgICAgICAgICAgIG1hdGNoID0gaW5wdXQubWF0Y2goY29uZmlnLl9sb2NhbGUuX2VyYVllYXJPcmRpbmFsUmVnZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbmZpZy5fbG9jYWxlLmVyYVllYXJPcmRpbmFsUGFyc2UpIHtcbiAgICAgICAgICAgIGFycmF5W1lFQVJdID0gY29uZmlnLl9sb2NhbGUuZXJhWWVhck9yZGluYWxQYXJzZShpbnB1dCwgbWF0Y2gpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXJyYXlbWUVBUl0gPSBwYXJzZUludChpbnB1dCwgMTApO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBsb2NhbGVFcmFzKG0sIGZvcm1hdCkge1xuICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgIGwsXG4gICAgICAgICAgICBkYXRlLFxuICAgICAgICAgICAgZXJhcyA9IHRoaXMuX2VyYXMgfHwgZ2V0TG9jYWxlKCdlbicpLl9lcmFzO1xuICAgICAgICBmb3IgKGkgPSAwLCBsID0gZXJhcy5sZW5ndGg7IGkgPCBsOyArK2kpIHtcbiAgICAgICAgICAgIHN3aXRjaCAodHlwZW9mIGVyYXNbaV0uc2luY2UpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgICAgICAgICAgICAgICAvLyB0cnVuY2F0ZSB0aW1lXG4gICAgICAgICAgICAgICAgICAgIGRhdGUgPSBob29rcyhlcmFzW2ldLnNpbmNlKS5zdGFydE9mKCdkYXknKTtcbiAgICAgICAgICAgICAgICAgICAgZXJhc1tpXS5zaW5jZSA9IGRhdGUudmFsdWVPZigpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3dpdGNoICh0eXBlb2YgZXJhc1tpXS51bnRpbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ3VuZGVmaW5lZCc6XG4gICAgICAgICAgICAgICAgICAgIGVyYXNbaV0udW50aWwgPSArSW5maW5pdHk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgICAgICAgICAgIC8vIHRydW5jYXRlIHRpbWVcbiAgICAgICAgICAgICAgICAgICAgZGF0ZSA9IGhvb2tzKGVyYXNbaV0udW50aWwpLnN0YXJ0T2YoJ2RheScpLnZhbHVlT2YoKTtcbiAgICAgICAgICAgICAgICAgICAgZXJhc1tpXS51bnRpbCA9IGRhdGUudmFsdWVPZigpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXJhcztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsb2NhbGVFcmFzUGFyc2UoZXJhTmFtZSwgZm9ybWF0LCBzdHJpY3QpIHtcbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgICBsLFxuICAgICAgICAgICAgZXJhcyA9IHRoaXMuZXJhcygpLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIGFiYnIsXG4gICAgICAgICAgICBuYXJyb3c7XG4gICAgICAgIGVyYU5hbWUgPSBlcmFOYW1lLnRvVXBwZXJDYXNlKCk7XG5cbiAgICAgICAgZm9yIChpID0gMCwgbCA9IGVyYXMubGVuZ3RoOyBpIDwgbDsgKytpKSB7XG4gICAgICAgICAgICBuYW1lID0gZXJhc1tpXS5uYW1lLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgICBhYmJyID0gZXJhc1tpXS5hYmJyLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgICBuYXJyb3cgPSBlcmFzW2ldLm5hcnJvdy50b1VwcGVyQ2FzZSgpO1xuXG4gICAgICAgICAgICBpZiAoc3RyaWN0KSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnTic6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ05OJzpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnTk5OJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhYmJyID09PSBlcmFOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVyYXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICBjYXNlICdOTk5OJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuYW1lID09PSBlcmFOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVyYXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICBjYXNlICdOTk5OTic6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobmFycm93ID09PSBlcmFOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVyYXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKFtuYW1lLCBhYmJyLCBuYXJyb3ddLmluZGV4T2YoZXJhTmFtZSkgPj0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBlcmFzW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbG9jYWxlRXJhc0NvbnZlcnRZZWFyKGVyYSwgeWVhcikge1xuICAgICAgICB2YXIgZGlyID0gZXJhLnNpbmNlIDw9IGVyYS51bnRpbCA/ICsxIDogLTE7XG4gICAgICAgIGlmICh5ZWFyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBob29rcyhlcmEuc2luY2UpLnllYXIoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBob29rcyhlcmEuc2luY2UpLnllYXIoKSArICh5ZWFyIC0gZXJhLm9mZnNldCkgKiBkaXI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRFcmFOYW1lKCkge1xuICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgIGwsXG4gICAgICAgICAgICB2YWwsXG4gICAgICAgICAgICBlcmFzID0gdGhpcy5sb2NhbGVEYXRhKCkuZXJhcygpO1xuICAgICAgICBmb3IgKGkgPSAwLCBsID0gZXJhcy5sZW5ndGg7IGkgPCBsOyArK2kpIHtcbiAgICAgICAgICAgIC8vIHRydW5jYXRlIHRpbWVcbiAgICAgICAgICAgIHZhbCA9IHRoaXMuY2xvbmUoKS5zdGFydE9mKCdkYXknKS52YWx1ZU9mKCk7XG5cbiAgICAgICAgICAgIGlmIChlcmFzW2ldLnNpbmNlIDw9IHZhbCAmJiB2YWwgPD0gZXJhc1tpXS51bnRpbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBlcmFzW2ldLm5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZXJhc1tpXS51bnRpbCA8PSB2YWwgJiYgdmFsIDw9IGVyYXNbaV0uc2luY2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJhc1tpXS5uYW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldEVyYU5hcnJvdygpIHtcbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgICBsLFxuICAgICAgICAgICAgdmFsLFxuICAgICAgICAgICAgZXJhcyA9IHRoaXMubG9jYWxlRGF0YSgpLmVyYXMoKTtcbiAgICAgICAgZm9yIChpID0gMCwgbCA9IGVyYXMubGVuZ3RoOyBpIDwgbDsgKytpKSB7XG4gICAgICAgICAgICAvLyB0cnVuY2F0ZSB0aW1lXG4gICAgICAgICAgICB2YWwgPSB0aGlzLmNsb25lKCkuc3RhcnRPZignZGF5JykudmFsdWVPZigpO1xuXG4gICAgICAgICAgICBpZiAoZXJhc1tpXS5zaW5jZSA8PSB2YWwgJiYgdmFsIDw9IGVyYXNbaV0udW50aWwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJhc1tpXS5uYXJyb3c7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZXJhc1tpXS51bnRpbCA8PSB2YWwgJiYgdmFsIDw9IGVyYXNbaV0uc2luY2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJhc1tpXS5uYXJyb3c7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0RXJhQWJicigpIHtcbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgICBsLFxuICAgICAgICAgICAgdmFsLFxuICAgICAgICAgICAgZXJhcyA9IHRoaXMubG9jYWxlRGF0YSgpLmVyYXMoKTtcbiAgICAgICAgZm9yIChpID0gMCwgbCA9IGVyYXMubGVuZ3RoOyBpIDwgbDsgKytpKSB7XG4gICAgICAgICAgICAvLyB0cnVuY2F0ZSB0aW1lXG4gICAgICAgICAgICB2YWwgPSB0aGlzLmNsb25lKCkuc3RhcnRPZignZGF5JykudmFsdWVPZigpO1xuXG4gICAgICAgICAgICBpZiAoZXJhc1tpXS5zaW5jZSA8PSB2YWwgJiYgdmFsIDw9IGVyYXNbaV0udW50aWwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJhc1tpXS5hYmJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGVyYXNbaV0udW50aWwgPD0gdmFsICYmIHZhbCA8PSBlcmFzW2ldLnNpbmNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVyYXNbaV0uYWJicjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRFcmFZZWFyKCkge1xuICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgIGwsXG4gICAgICAgICAgICBkaXIsXG4gICAgICAgICAgICB2YWwsXG4gICAgICAgICAgICBlcmFzID0gdGhpcy5sb2NhbGVEYXRhKCkuZXJhcygpO1xuICAgICAgICBmb3IgKGkgPSAwLCBsID0gZXJhcy5sZW5ndGg7IGkgPCBsOyArK2kpIHtcbiAgICAgICAgICAgIGRpciA9IGVyYXNbaV0uc2luY2UgPD0gZXJhc1tpXS51bnRpbCA/ICsxIDogLTE7XG5cbiAgICAgICAgICAgIC8vIHRydW5jYXRlIHRpbWVcbiAgICAgICAgICAgIHZhbCA9IHRoaXMuY2xvbmUoKS5zdGFydE9mKCdkYXknKS52YWx1ZU9mKCk7XG5cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAoZXJhc1tpXS5zaW5jZSA8PSB2YWwgJiYgdmFsIDw9IGVyYXNbaV0udW50aWwpIHx8XG4gICAgICAgICAgICAgICAgKGVyYXNbaV0udW50aWwgPD0gdmFsICYmIHZhbCA8PSBlcmFzW2ldLnNpbmNlKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgKHRoaXMueWVhcigpIC0gaG9va3MoZXJhc1tpXS5zaW5jZSkueWVhcigpKSAqIGRpciArXG4gICAgICAgICAgICAgICAgICAgIGVyYXNbaV0ub2Zmc2V0XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLnllYXIoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBlcmFzTmFtZVJlZ2V4KGlzU3RyaWN0KSB7XG4gICAgICAgIGlmICghaGFzT3duUHJvcCh0aGlzLCAnX2VyYXNOYW1lUmVnZXgnKSkge1xuICAgICAgICAgICAgY29tcHV0ZUVyYXNQYXJzZS5jYWxsKHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpc1N0cmljdCA/IHRoaXMuX2VyYXNOYW1lUmVnZXggOiB0aGlzLl9lcmFzUmVnZXg7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZXJhc0FiYnJSZWdleChpc1N0cmljdCkge1xuICAgICAgICBpZiAoIWhhc093blByb3AodGhpcywgJ19lcmFzQWJiclJlZ2V4JykpIHtcbiAgICAgICAgICAgIGNvbXB1dGVFcmFzUGFyc2UuY2FsbCh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXNTdHJpY3QgPyB0aGlzLl9lcmFzQWJiclJlZ2V4IDogdGhpcy5fZXJhc1JlZ2V4O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVyYXNOYXJyb3dSZWdleChpc1N0cmljdCkge1xuICAgICAgICBpZiAoIWhhc093blByb3AodGhpcywgJ19lcmFzTmFycm93UmVnZXgnKSkge1xuICAgICAgICAgICAgY29tcHV0ZUVyYXNQYXJzZS5jYWxsKHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpc1N0cmljdCA/IHRoaXMuX2VyYXNOYXJyb3dSZWdleCA6IHRoaXMuX2VyYXNSZWdleDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtYXRjaEVyYUFiYnIoaXNTdHJpY3QsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLmVyYXNBYmJyUmVnZXgoaXNTdHJpY3QpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1hdGNoRXJhTmFtZShpc1N0cmljdCwgbG9jYWxlKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUuZXJhc05hbWVSZWdleChpc1N0cmljdCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWF0Y2hFcmFOYXJyb3coaXNTdHJpY3QsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLmVyYXNOYXJyb3dSZWdleChpc1N0cmljdCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWF0Y2hFcmFZZWFyT3JkaW5hbChpc1N0cmljdCwgbG9jYWxlKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUuX2VyYVllYXJPcmRpbmFsUmVnZXggfHwgbWF0Y2hVbnNpZ25lZDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb21wdXRlRXJhc1BhcnNlKCkge1xuICAgICAgICB2YXIgYWJiclBpZWNlcyA9IFtdLFxuICAgICAgICAgICAgbmFtZVBpZWNlcyA9IFtdLFxuICAgICAgICAgICAgbmFycm93UGllY2VzID0gW10sXG4gICAgICAgICAgICBtaXhlZFBpZWNlcyA9IFtdLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGwsXG4gICAgICAgICAgICBlcmFzTmFtZSxcbiAgICAgICAgICAgIGVyYXNBYmJyLFxuICAgICAgICAgICAgZXJhc05hcnJvdyxcbiAgICAgICAgICAgIGVyYXMgPSB0aGlzLmVyYXMoKTtcblxuICAgICAgICBmb3IgKGkgPSAwLCBsID0gZXJhcy5sZW5ndGg7IGkgPCBsOyArK2kpIHtcbiAgICAgICAgICAgIGVyYXNOYW1lID0gcmVnZXhFc2NhcGUoZXJhc1tpXS5uYW1lKTtcbiAgICAgICAgICAgIGVyYXNBYmJyID0gcmVnZXhFc2NhcGUoZXJhc1tpXS5hYmJyKTtcbiAgICAgICAgICAgIGVyYXNOYXJyb3cgPSByZWdleEVzY2FwZShlcmFzW2ldLm5hcnJvdyk7XG5cbiAgICAgICAgICAgIG5hbWVQaWVjZXMucHVzaChlcmFzTmFtZSk7XG4gICAgICAgICAgICBhYmJyUGllY2VzLnB1c2goZXJhc0FiYnIpO1xuICAgICAgICAgICAgbmFycm93UGllY2VzLnB1c2goZXJhc05hcnJvdyk7XG4gICAgICAgICAgICBtaXhlZFBpZWNlcy5wdXNoKGVyYXNOYW1lKTtcbiAgICAgICAgICAgIG1peGVkUGllY2VzLnB1c2goZXJhc0FiYnIpO1xuICAgICAgICAgICAgbWl4ZWRQaWVjZXMucHVzaChlcmFzTmFycm93KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2VyYXNSZWdleCA9IG5ldyBSZWdFeHAoJ14oJyArIG1peGVkUGllY2VzLmpvaW4oJ3wnKSArICcpJywgJ2knKTtcbiAgICAgICAgdGhpcy5fZXJhc05hbWVSZWdleCA9IG5ldyBSZWdFeHAoJ14oJyArIG5hbWVQaWVjZXMuam9pbignfCcpICsgJyknLCAnaScpO1xuICAgICAgICB0aGlzLl9lcmFzQWJiclJlZ2V4ID0gbmV3IFJlZ0V4cCgnXignICsgYWJiclBpZWNlcy5qb2luKCd8JykgKyAnKScsICdpJyk7XG4gICAgICAgIHRoaXMuX2VyYXNOYXJyb3dSZWdleCA9IG5ldyBSZWdFeHAoXG4gICAgICAgICAgICAnXignICsgbmFycm93UGllY2VzLmpvaW4oJ3wnKSArICcpJyxcbiAgICAgICAgICAgICdpJ1xuICAgICAgICApO1xuICAgIH1cblxuICAgIC8vIEZPUk1BVFRJTkdcblxuICAgIGFkZEZvcm1hdFRva2VuKDAsIFsnZ2cnLCAyXSwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy53ZWVrWWVhcigpICUgMTAwO1xuICAgIH0pO1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oMCwgWydHRycsIDJdLCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzb1dlZWtZZWFyKCkgJSAxMDA7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBhZGRXZWVrWWVhckZvcm1hdFRva2VuKHRva2VuLCBnZXR0ZXIpIHtcbiAgICAgICAgYWRkRm9ybWF0VG9rZW4oMCwgW3Rva2VuLCB0b2tlbi5sZW5ndGhdLCAwLCBnZXR0ZXIpO1xuICAgIH1cblxuICAgIGFkZFdlZWtZZWFyRm9ybWF0VG9rZW4oJ2dnZ2cnLCAnd2Vla1llYXInKTtcbiAgICBhZGRXZWVrWWVhckZvcm1hdFRva2VuKCdnZ2dnZycsICd3ZWVrWWVhcicpO1xuICAgIGFkZFdlZWtZZWFyRm9ybWF0VG9rZW4oJ0dHR0cnLCAnaXNvV2Vla1llYXInKTtcbiAgICBhZGRXZWVrWWVhckZvcm1hdFRva2VuKCdHR0dHRycsICdpc29XZWVrWWVhcicpO1xuXG4gICAgLy8gQUxJQVNFU1xuXG4gICAgLy8gUEFSU0lOR1xuXG4gICAgYWRkUmVnZXhUb2tlbignRycsIG1hdGNoU2lnbmVkKTtcbiAgICBhZGRSZWdleFRva2VuKCdnJywgbWF0Y2hTaWduZWQpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ0dHJywgbWF0Y2gxdG8yLCBtYXRjaDIpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ2dnJywgbWF0Y2gxdG8yLCBtYXRjaDIpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ0dHR0cnLCBtYXRjaDF0bzQsIG1hdGNoNCk7XG4gICAgYWRkUmVnZXhUb2tlbignZ2dnZycsIG1hdGNoMXRvNCwgbWF0Y2g0KTtcbiAgICBhZGRSZWdleFRva2VuKCdHR0dHRycsIG1hdGNoMXRvNiwgbWF0Y2g2KTtcbiAgICBhZGRSZWdleFRva2VuKCdnZ2dnZycsIG1hdGNoMXRvNiwgbWF0Y2g2KTtcblxuICAgIGFkZFdlZWtQYXJzZVRva2VuKFxuICAgICAgICBbJ2dnZ2cnLCAnZ2dnZ2cnLCAnR0dHRycsICdHR0dHRyddLFxuICAgICAgICBmdW5jdGlvbiAoaW5wdXQsIHdlZWssIGNvbmZpZywgdG9rZW4pIHtcbiAgICAgICAgICAgIHdlZWtbdG9rZW4uc3Vic3RyKDAsIDIpXSA9IHRvSW50KGlucHV0KTtcbiAgICAgICAgfVxuICAgICk7XG5cbiAgICBhZGRXZWVrUGFyc2VUb2tlbihbJ2dnJywgJ0dHJ10sIGZ1bmN0aW9uIChpbnB1dCwgd2VlaywgY29uZmlnLCB0b2tlbikge1xuICAgICAgICB3ZWVrW3Rva2VuXSA9IGhvb2tzLnBhcnNlVHdvRGlnaXRZZWFyKGlucHV0KTtcbiAgICB9KTtcblxuICAgIC8vIE1PTUVOVFNcblxuICAgIGZ1bmN0aW9uIGdldFNldFdlZWtZZWFyKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBnZXRTZXRXZWVrWWVhckhlbHBlci5jYWxsKFxuICAgICAgICAgICAgdGhpcyxcbiAgICAgICAgICAgIGlucHV0LFxuICAgICAgICAgICAgdGhpcy53ZWVrKCksXG4gICAgICAgICAgICB0aGlzLndlZWtkYXkoKSArIHRoaXMubG9jYWxlRGF0YSgpLl93ZWVrLmRvdyxcbiAgICAgICAgICAgIHRoaXMubG9jYWxlRGF0YSgpLl93ZWVrLmRvdyxcbiAgICAgICAgICAgIHRoaXMubG9jYWxlRGF0YSgpLl93ZWVrLmRveVxuICAgICAgICApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFNldElTT1dlZWtZZWFyKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBnZXRTZXRXZWVrWWVhckhlbHBlci5jYWxsKFxuICAgICAgICAgICAgdGhpcyxcbiAgICAgICAgICAgIGlucHV0LFxuICAgICAgICAgICAgdGhpcy5pc29XZWVrKCksXG4gICAgICAgICAgICB0aGlzLmlzb1dlZWtkYXkoKSxcbiAgICAgICAgICAgIDEsXG4gICAgICAgICAgICA0XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0SVNPV2Vla3NJblllYXIoKSB7XG4gICAgICAgIHJldHVybiB3ZWVrc0luWWVhcih0aGlzLnllYXIoKSwgMSwgNCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0SVNPV2Vla3NJbklTT1dlZWtZZWFyKCkge1xuICAgICAgICByZXR1cm4gd2Vla3NJblllYXIodGhpcy5pc29XZWVrWWVhcigpLCAxLCA0KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRXZWVrc0luWWVhcigpIHtcbiAgICAgICAgdmFyIHdlZWtJbmZvID0gdGhpcy5sb2NhbGVEYXRhKCkuX3dlZWs7XG4gICAgICAgIHJldHVybiB3ZWVrc0luWWVhcih0aGlzLnllYXIoKSwgd2Vla0luZm8uZG93LCB3ZWVrSW5mby5kb3kpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFdlZWtzSW5XZWVrWWVhcigpIHtcbiAgICAgICAgdmFyIHdlZWtJbmZvID0gdGhpcy5sb2NhbGVEYXRhKCkuX3dlZWs7XG4gICAgICAgIHJldHVybiB3ZWVrc0luWWVhcih0aGlzLndlZWtZZWFyKCksIHdlZWtJbmZvLmRvdywgd2Vla0luZm8uZG95KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRTZXRXZWVrWWVhckhlbHBlcihpbnB1dCwgd2Vlaywgd2Vla2RheSwgZG93LCBkb3kpIHtcbiAgICAgICAgdmFyIHdlZWtzVGFyZ2V0O1xuICAgICAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHdlZWtPZlllYXIodGhpcywgZG93LCBkb3kpLnllYXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB3ZWVrc1RhcmdldCA9IHdlZWtzSW5ZZWFyKGlucHV0LCBkb3csIGRveSk7XG4gICAgICAgICAgICBpZiAod2VlayA+IHdlZWtzVGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgd2VlayA9IHdlZWtzVGFyZ2V0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHNldFdlZWtBbGwuY2FsbCh0aGlzLCBpbnB1dCwgd2Vlaywgd2Vla2RheSwgZG93LCBkb3kpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0V2Vla0FsbCh3ZWVrWWVhciwgd2Vlaywgd2Vla2RheSwgZG93LCBkb3kpIHtcbiAgICAgICAgdmFyIGRheU9mWWVhckRhdGEgPSBkYXlPZlllYXJGcm9tV2Vla3Mod2Vla1llYXIsIHdlZWssIHdlZWtkYXksIGRvdywgZG95KSxcbiAgICAgICAgICAgIGRhdGUgPSBjcmVhdGVVVENEYXRlKGRheU9mWWVhckRhdGEueWVhciwgMCwgZGF5T2ZZZWFyRGF0YS5kYXlPZlllYXIpO1xuXG4gICAgICAgIHRoaXMueWVhcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCkpO1xuICAgICAgICB0aGlzLm1vbnRoKGRhdGUuZ2V0VVRDTW9udGgoKSk7XG4gICAgICAgIHRoaXMuZGF0ZShkYXRlLmdldFVUQ0RhdGUoKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8vIEZPUk1BVFRJTkdcblxuICAgIGFkZEZvcm1hdFRva2VuKCdRJywgMCwgJ1FvJywgJ3F1YXJ0ZXInKTtcblxuICAgIC8vIFBBUlNJTkdcblxuICAgIGFkZFJlZ2V4VG9rZW4oJ1EnLCBtYXRjaDEpO1xuICAgIGFkZFBhcnNlVG9rZW4oJ1EnLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5KSB7XG4gICAgICAgIGFycmF5W01PTlRIXSA9ICh0b0ludChpbnB1dCkgLSAxKSAqIDM7XG4gICAgfSk7XG5cbiAgICAvLyBNT01FTlRTXG5cbiAgICBmdW5jdGlvbiBnZXRTZXRRdWFydGVyKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBpbnB1dCA9PSBudWxsXG4gICAgICAgICAgICA/IE1hdGguY2VpbCgodGhpcy5tb250aCgpICsgMSkgLyAzKVxuICAgICAgICAgICAgOiB0aGlzLm1vbnRoKChpbnB1dCAtIDEpICogMyArICh0aGlzLm1vbnRoKCkgJSAzKSk7XG4gICAgfVxuXG4gICAgLy8gRk9STUFUVElOR1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ0QnLCBbJ0REJywgMl0sICdEbycsICdkYXRlJyk7XG5cbiAgICAvLyBQQVJTSU5HXG5cbiAgICBhZGRSZWdleFRva2VuKCdEJywgbWF0Y2gxdG8yLCBtYXRjaDF0bzJOb0xlYWRpbmdaZXJvKTtcbiAgICBhZGRSZWdleFRva2VuKCdERCcsIG1hdGNoMXRvMiwgbWF0Y2gyKTtcbiAgICBhZGRSZWdleFRva2VuKCdEbycsIGZ1bmN0aW9uIChpc1N0cmljdCwgbG9jYWxlKSB7XG4gICAgICAgIC8vIFRPRE86IFJlbW92ZSBcIm9yZGluYWxQYXJzZVwiIGZhbGxiYWNrIGluIG5leHQgbWFqb3IgcmVsZWFzZS5cbiAgICAgICAgcmV0dXJuIGlzU3RyaWN0XG4gICAgICAgICAgICA/IGxvY2FsZS5fZGF5T2ZNb250aE9yZGluYWxQYXJzZSB8fCBsb2NhbGUuX29yZGluYWxQYXJzZVxuICAgICAgICAgICAgOiBsb2NhbGUuX2RheU9mTW9udGhPcmRpbmFsUGFyc2VMZW5pZW50O1xuICAgIH0pO1xuXG4gICAgYWRkUGFyc2VUb2tlbihbJ0QnLCAnREQnXSwgREFURSk7XG4gICAgYWRkUGFyc2VUb2tlbignRG8nLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5KSB7XG4gICAgICAgIGFycmF5W0RBVEVdID0gdG9JbnQoaW5wdXQubWF0Y2gobWF0Y2gxdG8yKVswXSk7XG4gICAgfSk7XG5cbiAgICAvLyBNT01FTlRTXG5cbiAgICB2YXIgZ2V0U2V0RGF5T2ZNb250aCA9IG1ha2VHZXRTZXQoJ0RhdGUnLCB0cnVlKTtcblxuICAgIC8vIEZPUk1BVFRJTkdcblxuICAgIGFkZEZvcm1hdFRva2VuKCdEREQnLCBbJ0REREQnLCAzXSwgJ0RERG8nLCAnZGF5T2ZZZWFyJyk7XG5cbiAgICAvLyBQQVJTSU5HXG5cbiAgICBhZGRSZWdleFRva2VuKCdEREQnLCBtYXRjaDF0bzMpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ0REREQnLCBtYXRjaDMpO1xuICAgIGFkZFBhcnNlVG9rZW4oWydEREQnLCAnRERERCddLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5LCBjb25maWcpIHtcbiAgICAgICAgY29uZmlnLl9kYXlPZlllYXIgPSB0b0ludChpbnB1dCk7XG4gICAgfSk7XG5cbiAgICAvLyBIRUxQRVJTXG5cbiAgICAvLyBNT01FTlRTXG5cbiAgICBmdW5jdGlvbiBnZXRTZXREYXlPZlllYXIoaW5wdXQpIHtcbiAgICAgICAgdmFyIGRheU9mWWVhciA9XG4gICAgICAgICAgICBNYXRoLnJvdW5kKFxuICAgICAgICAgICAgICAgICh0aGlzLmNsb25lKCkuc3RhcnRPZignZGF5JykgLSB0aGlzLmNsb25lKCkuc3RhcnRPZigneWVhcicpKSAvIDg2NGU1XG4gICAgICAgICAgICApICsgMTtcbiAgICAgICAgcmV0dXJuIGlucHV0ID09IG51bGwgPyBkYXlPZlllYXIgOiB0aGlzLmFkZChpbnB1dCAtIGRheU9mWWVhciwgJ2QnKTtcbiAgICB9XG5cbiAgICAvLyBGT1JNQVRUSU5HXG5cbiAgICBhZGRGb3JtYXRUb2tlbignbScsIFsnbW0nLCAyXSwgMCwgJ21pbnV0ZScpO1xuXG4gICAgLy8gUEFSU0lOR1xuXG4gICAgYWRkUmVnZXhUb2tlbignbScsIG1hdGNoMXRvMiwgbWF0Y2gxdG8ySGFzWmVybyk7XG4gICAgYWRkUmVnZXhUb2tlbignbW0nLCBtYXRjaDF0bzIsIG1hdGNoMik7XG4gICAgYWRkUGFyc2VUb2tlbihbJ20nLCAnbW0nXSwgTUlOVVRFKTtcblxuICAgIC8vIE1PTUVOVFNcblxuICAgIHZhciBnZXRTZXRNaW51dGUgPSBtYWtlR2V0U2V0KCdNaW51dGVzJywgZmFsc2UpO1xuXG4gICAgLy8gRk9STUFUVElOR1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oJ3MnLCBbJ3NzJywgMl0sIDAsICdzZWNvbmQnKTtcblxuICAgIC8vIFBBUlNJTkdcblxuICAgIGFkZFJlZ2V4VG9rZW4oJ3MnLCBtYXRjaDF0bzIsIG1hdGNoMXRvMkhhc1plcm8pO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ3NzJywgbWF0Y2gxdG8yLCBtYXRjaDIpO1xuICAgIGFkZFBhcnNlVG9rZW4oWydzJywgJ3NzJ10sIFNFQ09ORCk7XG5cbiAgICAvLyBNT01FTlRTXG5cbiAgICB2YXIgZ2V0U2V0U2Vjb25kID0gbWFrZUdldFNldCgnU2Vjb25kcycsIGZhbHNlKTtcblxuICAgIC8vIEZPUk1BVFRJTkdcblxuICAgIGFkZEZvcm1hdFRva2VuKCdTJywgMCwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gfn4odGhpcy5taWxsaXNlY29uZCgpIC8gMTAwKTtcbiAgICB9KTtcblxuICAgIGFkZEZvcm1hdFRva2VuKDAsIFsnU1MnLCAyXSwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gfn4odGhpcy5taWxsaXNlY29uZCgpIC8gMTApO1xuICAgIH0pO1xuXG4gICAgYWRkRm9ybWF0VG9rZW4oMCwgWydTU1MnLCAzXSwgMCwgJ21pbGxpc2Vjb25kJyk7XG4gICAgYWRkRm9ybWF0VG9rZW4oMCwgWydTU1NTJywgNF0sIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWlsbGlzZWNvbmQoKSAqIDEwO1xuICAgIH0pO1xuICAgIGFkZEZvcm1hdFRva2VuKDAsIFsnU1NTU1MnLCA1XSwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5taWxsaXNlY29uZCgpICogMTAwO1xuICAgIH0pO1xuICAgIGFkZEZvcm1hdFRva2VuKDAsIFsnU1NTU1NTJywgNl0sIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWlsbGlzZWNvbmQoKSAqIDEwMDA7XG4gICAgfSk7XG4gICAgYWRkRm9ybWF0VG9rZW4oMCwgWydTU1NTU1NTJywgN10sIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWlsbGlzZWNvbmQoKSAqIDEwMDAwO1xuICAgIH0pO1xuICAgIGFkZEZvcm1hdFRva2VuKDAsIFsnU1NTU1NTU1MnLCA4XSwgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5taWxsaXNlY29uZCgpICogMTAwMDAwO1xuICAgIH0pO1xuICAgIGFkZEZvcm1hdFRva2VuKDAsIFsnU1NTU1NTU1NTJywgOV0sIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWlsbGlzZWNvbmQoKSAqIDEwMDAwMDA7XG4gICAgfSk7XG5cbiAgICAvLyBQQVJTSU5HXG5cbiAgICBhZGRSZWdleFRva2VuKCdTJywgbWF0Y2gxdG8zLCBtYXRjaDEpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ1NTJywgbWF0Y2gxdG8zLCBtYXRjaDIpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ1NTUycsIG1hdGNoMXRvMywgbWF0Y2gzKTtcblxuICAgIHZhciB0b2tlbiwgZ2V0U2V0TWlsbGlzZWNvbmQ7XG4gICAgZm9yICh0b2tlbiA9ICdTU1NTJzsgdG9rZW4ubGVuZ3RoIDw9IDk7IHRva2VuICs9ICdTJykge1xuICAgICAgICBhZGRSZWdleFRva2VuKHRva2VuLCBtYXRjaFVuc2lnbmVkKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwYXJzZU1zKGlucHV0LCBhcnJheSkge1xuICAgICAgICBhcnJheVtNSUxMSVNFQ09ORF0gPSB0b0ludCgoJzAuJyArIGlucHV0KSAqIDEwMDApO1xuICAgIH1cblxuICAgIGZvciAodG9rZW4gPSAnUyc7IHRva2VuLmxlbmd0aCA8PSA5OyB0b2tlbiArPSAnUycpIHtcbiAgICAgICAgYWRkUGFyc2VUb2tlbih0b2tlbiwgcGFyc2VNcyk7XG4gICAgfVxuXG4gICAgZ2V0U2V0TWlsbGlzZWNvbmQgPSBtYWtlR2V0U2V0KCdNaWxsaXNlY29uZHMnLCBmYWxzZSk7XG5cbiAgICAvLyBGT1JNQVRUSU5HXG5cbiAgICBhZGRGb3JtYXRUb2tlbigneicsIDAsIDAsICd6b25lQWJicicpO1xuICAgIGFkZEZvcm1hdFRva2VuKCd6eicsIDAsIDAsICd6b25lTmFtZScpO1xuXG4gICAgLy8gTU9NRU5UU1xuXG4gICAgZnVuY3Rpb24gZ2V0Wm9uZUFiYnIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc1VUQyA/ICdVVEMnIDogJyc7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Wm9uZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc1VUQyA/ICdDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZScgOiAnJztcbiAgICB9XG5cbiAgICB2YXIgcHJvdG8gPSBNb21lbnQucHJvdG90eXBlO1xuXG4gICAgcHJvdG8uYWRkID0gYWRkO1xuICAgIHByb3RvLmNhbGVuZGFyID0gY2FsZW5kYXIkMTtcbiAgICBwcm90by5jbG9uZSA9IGNsb25lO1xuICAgIHByb3RvLmRpZmYgPSBkaWZmO1xuICAgIHByb3RvLmVuZE9mID0gZW5kT2Y7XG4gICAgcHJvdG8uZm9ybWF0ID0gZm9ybWF0O1xuICAgIHByb3RvLmZyb20gPSBmcm9tO1xuICAgIHByb3RvLmZyb21Ob3cgPSBmcm9tTm93O1xuICAgIHByb3RvLnRvID0gdG87XG4gICAgcHJvdG8udG9Ob3cgPSB0b05vdztcbiAgICBwcm90by5nZXQgPSBzdHJpbmdHZXQ7XG4gICAgcHJvdG8uaW52YWxpZEF0ID0gaW52YWxpZEF0O1xuICAgIHByb3RvLmlzQWZ0ZXIgPSBpc0FmdGVyO1xuICAgIHByb3RvLmlzQmVmb3JlID0gaXNCZWZvcmU7XG4gICAgcHJvdG8uaXNCZXR3ZWVuID0gaXNCZXR3ZWVuO1xuICAgIHByb3RvLmlzU2FtZSA9IGlzU2FtZTtcbiAgICBwcm90by5pc1NhbWVPckFmdGVyID0gaXNTYW1lT3JBZnRlcjtcbiAgICBwcm90by5pc1NhbWVPckJlZm9yZSA9IGlzU2FtZU9yQmVmb3JlO1xuICAgIHByb3RvLmlzVmFsaWQgPSBpc1ZhbGlkJDI7XG4gICAgcHJvdG8ubGFuZyA9IGxhbmc7XG4gICAgcHJvdG8ubG9jYWxlID0gbG9jYWxlO1xuICAgIHByb3RvLmxvY2FsZURhdGEgPSBsb2NhbGVEYXRhO1xuICAgIHByb3RvLm1heCA9IHByb3RvdHlwZU1heDtcbiAgICBwcm90by5taW4gPSBwcm90b3R5cGVNaW47XG4gICAgcHJvdG8ucGFyc2luZ0ZsYWdzID0gcGFyc2luZ0ZsYWdzO1xuICAgIHByb3RvLnNldCA9IHN0cmluZ1NldDtcbiAgICBwcm90by5zdGFydE9mID0gc3RhcnRPZjtcbiAgICBwcm90by5zdWJ0cmFjdCA9IHN1YnRyYWN0O1xuICAgIHByb3RvLnRvQXJyYXkgPSB0b0FycmF5O1xuICAgIHByb3RvLnRvT2JqZWN0ID0gdG9PYmplY3Q7XG4gICAgcHJvdG8udG9EYXRlID0gdG9EYXRlO1xuICAgIHByb3RvLnRvSVNPU3RyaW5nID0gdG9JU09TdHJpbmc7XG4gICAgcHJvdG8uaW5zcGVjdCA9IGluc3BlY3Q7XG4gICAgaWYgKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC5mb3IgIT0gbnVsbCkge1xuICAgICAgICBwcm90b1tTeW1ib2wuZm9yKCdub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbScpXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAnTW9tZW50PCcgKyB0aGlzLmZvcm1hdCgpICsgJz4nO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBwcm90by50b0pTT04gPSB0b0pTT047XG4gICAgcHJvdG8udG9TdHJpbmcgPSB0b1N0cmluZztcbiAgICBwcm90by51bml4ID0gdW5peDtcbiAgICBwcm90by52YWx1ZU9mID0gdmFsdWVPZjtcbiAgICBwcm90by5jcmVhdGlvbkRhdGEgPSBjcmVhdGlvbkRhdGE7XG4gICAgcHJvdG8uZXJhTmFtZSA9IGdldEVyYU5hbWU7XG4gICAgcHJvdG8uZXJhTmFycm93ID0gZ2V0RXJhTmFycm93O1xuICAgIHByb3RvLmVyYUFiYnIgPSBnZXRFcmFBYmJyO1xuICAgIHByb3RvLmVyYVllYXIgPSBnZXRFcmFZZWFyO1xuICAgIHByb3RvLnllYXIgPSBnZXRTZXRZZWFyO1xuICAgIHByb3RvLmlzTGVhcFllYXIgPSBnZXRJc0xlYXBZZWFyO1xuICAgIHByb3RvLndlZWtZZWFyID0gZ2V0U2V0V2Vla1llYXI7XG4gICAgcHJvdG8uaXNvV2Vla1llYXIgPSBnZXRTZXRJU09XZWVrWWVhcjtcbiAgICBwcm90by5xdWFydGVyID0gcHJvdG8ucXVhcnRlcnMgPSBnZXRTZXRRdWFydGVyO1xuICAgIHByb3RvLm1vbnRoID0gZ2V0U2V0TW9udGg7XG4gICAgcHJvdG8uZGF5c0luTW9udGggPSBnZXREYXlzSW5Nb250aDtcbiAgICBwcm90by53ZWVrID0gcHJvdG8ud2Vla3MgPSBnZXRTZXRXZWVrO1xuICAgIHByb3RvLmlzb1dlZWsgPSBwcm90by5pc29XZWVrcyA9IGdldFNldElTT1dlZWs7XG4gICAgcHJvdG8ud2Vla3NJblllYXIgPSBnZXRXZWVrc0luWWVhcjtcbiAgICBwcm90by53ZWVrc0luV2Vla1llYXIgPSBnZXRXZWVrc0luV2Vla1llYXI7XG4gICAgcHJvdG8uaXNvV2Vla3NJblllYXIgPSBnZXRJU09XZWVrc0luWWVhcjtcbiAgICBwcm90by5pc29XZWVrc0luSVNPV2Vla1llYXIgPSBnZXRJU09XZWVrc0luSVNPV2Vla1llYXI7XG4gICAgcHJvdG8uZGF0ZSA9IGdldFNldERheU9mTW9udGg7XG4gICAgcHJvdG8uZGF5ID0gcHJvdG8uZGF5cyA9IGdldFNldERheU9mV2VlaztcbiAgICBwcm90by53ZWVrZGF5ID0gZ2V0U2V0TG9jYWxlRGF5T2ZXZWVrO1xuICAgIHByb3RvLmlzb1dlZWtkYXkgPSBnZXRTZXRJU09EYXlPZldlZWs7XG4gICAgcHJvdG8uZGF5T2ZZZWFyID0gZ2V0U2V0RGF5T2ZZZWFyO1xuICAgIHByb3RvLmhvdXIgPSBwcm90by5ob3VycyA9IGdldFNldEhvdXI7XG4gICAgcHJvdG8ubWludXRlID0gcHJvdG8ubWludXRlcyA9IGdldFNldE1pbnV0ZTtcbiAgICBwcm90by5zZWNvbmQgPSBwcm90by5zZWNvbmRzID0gZ2V0U2V0U2Vjb25kO1xuICAgIHByb3RvLm1pbGxpc2Vjb25kID0gcHJvdG8ubWlsbGlzZWNvbmRzID0gZ2V0U2V0TWlsbGlzZWNvbmQ7XG4gICAgcHJvdG8udXRjT2Zmc2V0ID0gZ2V0U2V0T2Zmc2V0O1xuICAgIHByb3RvLnV0YyA9IHNldE9mZnNldFRvVVRDO1xuICAgIHByb3RvLmxvY2FsID0gc2V0T2Zmc2V0VG9Mb2NhbDtcbiAgICBwcm90by5wYXJzZVpvbmUgPSBzZXRPZmZzZXRUb1BhcnNlZE9mZnNldDtcbiAgICBwcm90by5oYXNBbGlnbmVkSG91ck9mZnNldCA9IGhhc0FsaWduZWRIb3VyT2Zmc2V0O1xuICAgIHByb3RvLmlzRFNUID0gaXNEYXlsaWdodFNhdmluZ1RpbWU7XG4gICAgcHJvdG8uaXNMb2NhbCA9IGlzTG9jYWw7XG4gICAgcHJvdG8uaXNVdGNPZmZzZXQgPSBpc1V0Y09mZnNldDtcbiAgICBwcm90by5pc1V0YyA9IGlzVXRjO1xuICAgIHByb3RvLmlzVVRDID0gaXNVdGM7XG4gICAgcHJvdG8uem9uZUFiYnIgPSBnZXRab25lQWJicjtcbiAgICBwcm90by56b25lTmFtZSA9IGdldFpvbmVOYW1lO1xuICAgIHByb3RvLmRhdGVzID0gZGVwcmVjYXRlKFxuICAgICAgICAnZGF0ZXMgYWNjZXNzb3IgaXMgZGVwcmVjYXRlZC4gVXNlIGRhdGUgaW5zdGVhZC4nLFxuICAgICAgICBnZXRTZXREYXlPZk1vbnRoXG4gICAgKTtcbiAgICBwcm90by5tb250aHMgPSBkZXByZWNhdGUoXG4gICAgICAgICdtb250aHMgYWNjZXNzb3IgaXMgZGVwcmVjYXRlZC4gVXNlIG1vbnRoIGluc3RlYWQnLFxuICAgICAgICBnZXRTZXRNb250aFxuICAgICk7XG4gICAgcHJvdG8ueWVhcnMgPSBkZXByZWNhdGUoXG4gICAgICAgICd5ZWFycyBhY2Nlc3NvciBpcyBkZXByZWNhdGVkLiBVc2UgeWVhciBpbnN0ZWFkJyxcbiAgICAgICAgZ2V0U2V0WWVhclxuICAgICk7XG4gICAgcHJvdG8uem9uZSA9IGRlcHJlY2F0ZShcbiAgICAgICAgJ21vbWVudCgpLnpvbmUgaXMgZGVwcmVjYXRlZCwgdXNlIG1vbWVudCgpLnV0Y09mZnNldCBpbnN0ZWFkLiBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL3pvbmUvJyxcbiAgICAgICAgZ2V0U2V0Wm9uZVxuICAgICk7XG4gICAgcHJvdG8uaXNEU1RTaGlmdGVkID0gZGVwcmVjYXRlKFxuICAgICAgICAnaXNEU1RTaGlmdGVkIGlzIGRlcHJlY2F0ZWQuIFNlZSBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2RzdC1zaGlmdGVkLyBmb3IgbW9yZSBpbmZvcm1hdGlvbicsXG4gICAgICAgIGlzRGF5bGlnaHRTYXZpbmdUaW1lU2hpZnRlZFxuICAgICk7XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVVbml4KGlucHV0KSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVMb2NhbChpbnB1dCAqIDEwMDApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUluWm9uZSgpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUxvY2FsLmFwcGx5KG51bGwsIGFyZ3VtZW50cykucGFyc2Vab25lKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcHJlUGFyc2VQb3N0Rm9ybWF0KHN0cmluZykge1xuICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgIH1cblxuICAgIHZhciBwcm90byQxID0gTG9jYWxlLnByb3RvdHlwZTtcblxuICAgIHByb3RvJDEuY2FsZW5kYXIgPSBjYWxlbmRhcjtcbiAgICBwcm90byQxLmxvbmdEYXRlRm9ybWF0ID0gbG9uZ0RhdGVGb3JtYXQ7XG4gICAgcHJvdG8kMS5pbnZhbGlkRGF0ZSA9IGludmFsaWREYXRlO1xuICAgIHByb3RvJDEub3JkaW5hbCA9IG9yZGluYWw7XG4gICAgcHJvdG8kMS5wcmVwYXJzZSA9IHByZVBhcnNlUG9zdEZvcm1hdDtcbiAgICBwcm90byQxLnBvc3Rmb3JtYXQgPSBwcmVQYXJzZVBvc3RGb3JtYXQ7XG4gICAgcHJvdG8kMS5yZWxhdGl2ZVRpbWUgPSByZWxhdGl2ZVRpbWU7XG4gICAgcHJvdG8kMS5wYXN0RnV0dXJlID0gcGFzdEZ1dHVyZTtcbiAgICBwcm90byQxLnNldCA9IHNldDtcbiAgICBwcm90byQxLmVyYXMgPSBsb2NhbGVFcmFzO1xuICAgIHByb3RvJDEuZXJhc1BhcnNlID0gbG9jYWxlRXJhc1BhcnNlO1xuICAgIHByb3RvJDEuZXJhc0NvbnZlcnRZZWFyID0gbG9jYWxlRXJhc0NvbnZlcnRZZWFyO1xuICAgIHByb3RvJDEuZXJhc0FiYnJSZWdleCA9IGVyYXNBYmJyUmVnZXg7XG4gICAgcHJvdG8kMS5lcmFzTmFtZVJlZ2V4ID0gZXJhc05hbWVSZWdleDtcbiAgICBwcm90byQxLmVyYXNOYXJyb3dSZWdleCA9IGVyYXNOYXJyb3dSZWdleDtcblxuICAgIHByb3RvJDEubW9udGhzID0gbG9jYWxlTW9udGhzO1xuICAgIHByb3RvJDEubW9udGhzU2hvcnQgPSBsb2NhbGVNb250aHNTaG9ydDtcbiAgICBwcm90byQxLm1vbnRoc1BhcnNlID0gbG9jYWxlTW9udGhzUGFyc2U7XG4gICAgcHJvdG8kMS5tb250aHNSZWdleCA9IG1vbnRoc1JlZ2V4O1xuICAgIHByb3RvJDEubW9udGhzU2hvcnRSZWdleCA9IG1vbnRoc1Nob3J0UmVnZXg7XG4gICAgcHJvdG8kMS53ZWVrID0gbG9jYWxlV2VlaztcbiAgICBwcm90byQxLmZpcnN0RGF5T2ZZZWFyID0gbG9jYWxlRmlyc3REYXlPZlllYXI7XG4gICAgcHJvdG8kMS5maXJzdERheU9mV2VlayA9IGxvY2FsZUZpcnN0RGF5T2ZXZWVrO1xuXG4gICAgcHJvdG8kMS53ZWVrZGF5cyA9IGxvY2FsZVdlZWtkYXlzO1xuICAgIHByb3RvJDEud2Vla2RheXNNaW4gPSBsb2NhbGVXZWVrZGF5c01pbjtcbiAgICBwcm90byQxLndlZWtkYXlzU2hvcnQgPSBsb2NhbGVXZWVrZGF5c1Nob3J0O1xuICAgIHByb3RvJDEud2Vla2RheXNQYXJzZSA9IGxvY2FsZVdlZWtkYXlzUGFyc2U7XG5cbiAgICBwcm90byQxLndlZWtkYXlzUmVnZXggPSB3ZWVrZGF5c1JlZ2V4O1xuICAgIHByb3RvJDEud2Vla2RheXNTaG9ydFJlZ2V4ID0gd2Vla2RheXNTaG9ydFJlZ2V4O1xuICAgIHByb3RvJDEud2Vla2RheXNNaW5SZWdleCA9IHdlZWtkYXlzTWluUmVnZXg7XG5cbiAgICBwcm90byQxLmlzUE0gPSBsb2NhbGVJc1BNO1xuICAgIHByb3RvJDEubWVyaWRpZW0gPSBsb2NhbGVNZXJpZGllbTtcblxuICAgIGZ1bmN0aW9uIGdldCQxKGZvcm1hdCwgaW5kZXgsIGZpZWxkLCBzZXR0ZXIpIHtcbiAgICAgICAgdmFyIGxvY2FsZSA9IGdldExvY2FsZSgpLFxuICAgICAgICAgICAgdXRjID0gY3JlYXRlVVRDKCkuc2V0KHNldHRlciwgaW5kZXgpO1xuICAgICAgICByZXR1cm4gbG9jYWxlW2ZpZWxkXSh1dGMsIGZvcm1hdCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGlzdE1vbnRoc0ltcGwoZm9ybWF0LCBpbmRleCwgZmllbGQpIHtcbiAgICAgICAgaWYgKGlzTnVtYmVyKGZvcm1hdCkpIHtcbiAgICAgICAgICAgIGluZGV4ID0gZm9ybWF0O1xuICAgICAgICAgICAgZm9ybWF0ID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9ybWF0ID0gZm9ybWF0IHx8ICcnO1xuXG4gICAgICAgIGlmIChpbmRleCAhPSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0JDEoZm9ybWF0LCBpbmRleCwgZmllbGQsICdtb250aCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgICBvdXQgPSBbXTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IDEyOyBpKyspIHtcbiAgICAgICAgICAgIG91dFtpXSA9IGdldCQxKGZvcm1hdCwgaSwgZmllbGQsICdtb250aCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuXG4gICAgLy8gKClcbiAgICAvLyAoNSlcbiAgICAvLyAoZm10LCA1KVxuICAgIC8vIChmbXQpXG4gICAgLy8gKHRydWUpXG4gICAgLy8gKHRydWUsIDUpXG4gICAgLy8gKHRydWUsIGZtdCwgNSlcbiAgICAvLyAodHJ1ZSwgZm10KVxuICAgIGZ1bmN0aW9uIGxpc3RXZWVrZGF5c0ltcGwobG9jYWxlU29ydGVkLCBmb3JtYXQsIGluZGV4LCBmaWVsZCkge1xuICAgICAgICBpZiAodHlwZW9mIGxvY2FsZVNvcnRlZCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgICAgICBpZiAoaXNOdW1iZXIoZm9ybWF0KSkge1xuICAgICAgICAgICAgICAgIGluZGV4ID0gZm9ybWF0O1xuICAgICAgICAgICAgICAgIGZvcm1hdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9ybWF0ID0gZm9ybWF0IHx8ICcnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZm9ybWF0ID0gbG9jYWxlU29ydGVkO1xuICAgICAgICAgICAgaW5kZXggPSBmb3JtYXQ7XG4gICAgICAgICAgICBsb2NhbGVTb3J0ZWQgPSBmYWxzZTtcblxuICAgICAgICAgICAgaWYgKGlzTnVtYmVyKGZvcm1hdCkpIHtcbiAgICAgICAgICAgICAgICBpbmRleCA9IGZvcm1hdDtcbiAgICAgICAgICAgICAgICBmb3JtYXQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvcm1hdCA9IGZvcm1hdCB8fCAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBsb2NhbGUgPSBnZXRMb2NhbGUoKSxcbiAgICAgICAgICAgIHNoaWZ0ID0gbG9jYWxlU29ydGVkID8gbG9jYWxlLl93ZWVrLmRvdyA6IDAsXG4gICAgICAgICAgICBpLFxuICAgICAgICAgICAgb3V0ID0gW107XG5cbiAgICAgICAgaWYgKGluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXQkMShmb3JtYXQsIChpbmRleCArIHNoaWZ0KSAlIDcsIGZpZWxkLCAnZGF5Jyk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgNzsgaSsrKSB7XG4gICAgICAgICAgICBvdXRbaV0gPSBnZXQkMShmb3JtYXQsIChpICsgc2hpZnQpICUgNywgZmllbGQsICdkYXknKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpc3RNb250aHMoZm9ybWF0LCBpbmRleCkge1xuICAgICAgICByZXR1cm4gbGlzdE1vbnRoc0ltcGwoZm9ybWF0LCBpbmRleCwgJ21vbnRocycpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpc3RNb250aHNTaG9ydChmb3JtYXQsIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBsaXN0TW9udGhzSW1wbChmb3JtYXQsIGluZGV4LCAnbW9udGhzU2hvcnQnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaXN0V2Vla2RheXMobG9jYWxlU29ydGVkLCBmb3JtYXQsIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBsaXN0V2Vla2RheXNJbXBsKGxvY2FsZVNvcnRlZCwgZm9ybWF0LCBpbmRleCwgJ3dlZWtkYXlzJyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGlzdFdlZWtkYXlzU2hvcnQobG9jYWxlU29ydGVkLCBmb3JtYXQsIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBsaXN0V2Vla2RheXNJbXBsKGxvY2FsZVNvcnRlZCwgZm9ybWF0LCBpbmRleCwgJ3dlZWtkYXlzU2hvcnQnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaXN0V2Vla2RheXNNaW4obG9jYWxlU29ydGVkLCBmb3JtYXQsIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBsaXN0V2Vla2RheXNJbXBsKGxvY2FsZVNvcnRlZCwgZm9ybWF0LCBpbmRleCwgJ3dlZWtkYXlzTWluJyk7XG4gICAgfVxuXG4gICAgZ2V0U2V0R2xvYmFsTG9jYWxlKCdlbicsIHtcbiAgICAgICAgZXJhczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNpbmNlOiAnMDAwMS0wMS0wMScsXG4gICAgICAgICAgICAgICAgdW50aWw6ICtJbmZpbml0eSxcbiAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsXG4gICAgICAgICAgICAgICAgbmFtZTogJ0Fubm8gRG9taW5pJyxcbiAgICAgICAgICAgICAgICBuYXJyb3c6ICdBRCcsXG4gICAgICAgICAgICAgICAgYWJicjogJ0FEJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2luY2U6ICcwMDAwLTEyLTMxJyxcbiAgICAgICAgICAgICAgICB1bnRpbDogLUluZmluaXR5LFxuICAgICAgICAgICAgICAgIG9mZnNldDogMSxcbiAgICAgICAgICAgICAgICBuYW1lOiAnQmVmb3JlIENocmlzdCcsXG4gICAgICAgICAgICAgICAgbmFycm93OiAnQkMnLFxuICAgICAgICAgICAgICAgIGFiYnI6ICdCQycsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBkYXlPZk1vbnRoT3JkaW5hbFBhcnNlOiAvXFxkezEsMn0odGh8c3R8bmR8cmQpLyxcbiAgICAgICAgb3JkaW5hbDogZnVuY3Rpb24gKG51bWJlcikge1xuICAgICAgICAgICAgdmFyIGIgPSBudW1iZXIgJSAxMCxcbiAgICAgICAgICAgICAgICBvdXRwdXQgPVxuICAgICAgICAgICAgICAgICAgICB0b0ludCgobnVtYmVyICUgMTAwKSAvIDEwKSA9PT0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgPyAndGgnXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGIgPT09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnc3QnXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogYiA9PT0gMlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ25kJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogYiA9PT0gM1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAncmQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICd0aCc7XG4gICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgb3V0cHV0O1xuICAgICAgICB9LFxuICAgIH0pO1xuXG4gICAgLy8gU2lkZSBlZmZlY3QgaW1wb3J0c1xuXG4gICAgaG9va3MubGFuZyA9IGRlcHJlY2F0ZShcbiAgICAgICAgJ21vbWVudC5sYW5nIGlzIGRlcHJlY2F0ZWQuIFVzZSBtb21lbnQubG9jYWxlIGluc3RlYWQuJyxcbiAgICAgICAgZ2V0U2V0R2xvYmFsTG9jYWxlXG4gICAgKTtcbiAgICBob29rcy5sYW5nRGF0YSA9IGRlcHJlY2F0ZShcbiAgICAgICAgJ21vbWVudC5sYW5nRGF0YSBpcyBkZXByZWNhdGVkLiBVc2UgbW9tZW50LmxvY2FsZURhdGEgaW5zdGVhZC4nLFxuICAgICAgICBnZXRMb2NhbGVcbiAgICApO1xuXG4gICAgdmFyIG1hdGhBYnMgPSBNYXRoLmFicztcblxuICAgIGZ1bmN0aW9uIGFicygpIHtcbiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9kYXRhO1xuXG4gICAgICAgIHRoaXMuX21pbGxpc2Vjb25kcyA9IG1hdGhBYnModGhpcy5fbWlsbGlzZWNvbmRzKTtcbiAgICAgICAgdGhpcy5fZGF5cyA9IG1hdGhBYnModGhpcy5fZGF5cyk7XG4gICAgICAgIHRoaXMuX21vbnRocyA9IG1hdGhBYnModGhpcy5fbW9udGhzKTtcblxuICAgICAgICBkYXRhLm1pbGxpc2Vjb25kcyA9IG1hdGhBYnMoZGF0YS5taWxsaXNlY29uZHMpO1xuICAgICAgICBkYXRhLnNlY29uZHMgPSBtYXRoQWJzKGRhdGEuc2Vjb25kcyk7XG4gICAgICAgIGRhdGEubWludXRlcyA9IG1hdGhBYnMoZGF0YS5taW51dGVzKTtcbiAgICAgICAgZGF0YS5ob3VycyA9IG1hdGhBYnMoZGF0YS5ob3Vycyk7XG4gICAgICAgIGRhdGEubW9udGhzID0gbWF0aEFicyhkYXRhLm1vbnRocyk7XG4gICAgICAgIGRhdGEueWVhcnMgPSBtYXRoQWJzKGRhdGEueWVhcnMpO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZFN1YnRyYWN0JDEoZHVyYXRpb24sIGlucHV0LCB2YWx1ZSwgZGlyZWN0aW9uKSB7XG4gICAgICAgIHZhciBvdGhlciA9IGNyZWF0ZUR1cmF0aW9uKGlucHV0LCB2YWx1ZSk7XG5cbiAgICAgICAgZHVyYXRpb24uX21pbGxpc2Vjb25kcyArPSBkaXJlY3Rpb24gKiBvdGhlci5fbWlsbGlzZWNvbmRzO1xuICAgICAgICBkdXJhdGlvbi5fZGF5cyArPSBkaXJlY3Rpb24gKiBvdGhlci5fZGF5cztcbiAgICAgICAgZHVyYXRpb24uX21vbnRocyArPSBkaXJlY3Rpb24gKiBvdGhlci5fbW9udGhzO1xuXG4gICAgICAgIHJldHVybiBkdXJhdGlvbi5fYnViYmxlKCk7XG4gICAgfVxuXG4gICAgLy8gc3VwcG9ydHMgb25seSAyLjAtc3R5bGUgYWRkKDEsICdzJykgb3IgYWRkKGR1cmF0aW9uKVxuICAgIGZ1bmN0aW9uIGFkZCQxKGlucHV0LCB2YWx1ZSkge1xuICAgICAgICByZXR1cm4gYWRkU3VidHJhY3QkMSh0aGlzLCBpbnB1dCwgdmFsdWUsIDEpO1xuICAgIH1cblxuICAgIC8vIHN1cHBvcnRzIG9ubHkgMi4wLXN0eWxlIHN1YnRyYWN0KDEsICdzJykgb3Igc3VidHJhY3QoZHVyYXRpb24pXG4gICAgZnVuY3Rpb24gc3VidHJhY3QkMShpbnB1dCwgdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGFkZFN1YnRyYWN0JDEodGhpcywgaW5wdXQsIHZhbHVlLCAtMSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYWJzQ2VpbChudW1iZXIpIHtcbiAgICAgICAgaWYgKG51bWJlciA8IDApIHtcbiAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKG51bWJlcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5jZWlsKG51bWJlcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBidWJibGUoKSB7XG4gICAgICAgIHZhciBtaWxsaXNlY29uZHMgPSB0aGlzLl9taWxsaXNlY29uZHMsXG4gICAgICAgICAgICBkYXlzID0gdGhpcy5fZGF5cyxcbiAgICAgICAgICAgIG1vbnRocyA9IHRoaXMuX21vbnRocyxcbiAgICAgICAgICAgIGRhdGEgPSB0aGlzLl9kYXRhLFxuICAgICAgICAgICAgc2Vjb25kcyxcbiAgICAgICAgICAgIG1pbnV0ZXMsXG4gICAgICAgICAgICBob3VycyxcbiAgICAgICAgICAgIHllYXJzLFxuICAgICAgICAgICAgbW9udGhzRnJvbURheXM7XG5cbiAgICAgICAgLy8gaWYgd2UgaGF2ZSBhIG1peCBvZiBwb3NpdGl2ZSBhbmQgbmVnYXRpdmUgdmFsdWVzLCBidWJibGUgZG93biBmaXJzdFxuICAgICAgICAvLyBjaGVjazogaHR0cHM6Ly9naXRodWIuY29tL21vbWVudC9tb21lbnQvaXNzdWVzLzIxNjZcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgIShcbiAgICAgICAgICAgICAgICAobWlsbGlzZWNvbmRzID49IDAgJiYgZGF5cyA+PSAwICYmIG1vbnRocyA+PSAwKSB8fFxuICAgICAgICAgICAgICAgIChtaWxsaXNlY29uZHMgPD0gMCAmJiBkYXlzIDw9IDAgJiYgbW9udGhzIDw9IDApXG4gICAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgICAgbWlsbGlzZWNvbmRzICs9IGFic0NlaWwobW9udGhzVG9EYXlzKG1vbnRocykgKyBkYXlzKSAqIDg2NGU1O1xuICAgICAgICAgICAgZGF5cyA9IDA7XG4gICAgICAgICAgICBtb250aHMgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBjb2RlIGJ1YmJsZXMgdXAgdmFsdWVzLCBzZWUgdGhlIHRlc3RzIGZvclxuICAgICAgICAvLyBleGFtcGxlcyBvZiB3aGF0IHRoYXQgbWVhbnMuXG4gICAgICAgIGRhdGEubWlsbGlzZWNvbmRzID0gbWlsbGlzZWNvbmRzICUgMTAwMDtcblxuICAgICAgICBzZWNvbmRzID0gYWJzRmxvb3IobWlsbGlzZWNvbmRzIC8gMTAwMCk7XG4gICAgICAgIGRhdGEuc2Vjb25kcyA9IHNlY29uZHMgJSA2MDtcblxuICAgICAgICBtaW51dGVzID0gYWJzRmxvb3Ioc2Vjb25kcyAvIDYwKTtcbiAgICAgICAgZGF0YS5taW51dGVzID0gbWludXRlcyAlIDYwO1xuXG4gICAgICAgIGhvdXJzID0gYWJzRmxvb3IobWludXRlcyAvIDYwKTtcbiAgICAgICAgZGF0YS5ob3VycyA9IGhvdXJzICUgMjQ7XG5cbiAgICAgICAgZGF5cyArPSBhYnNGbG9vcihob3VycyAvIDI0KTtcblxuICAgICAgICAvLyBjb252ZXJ0IGRheXMgdG8gbW9udGhzXG4gICAgICAgIG1vbnRoc0Zyb21EYXlzID0gYWJzRmxvb3IoZGF5c1RvTW9udGhzKGRheXMpKTtcbiAgICAgICAgbW9udGhzICs9IG1vbnRoc0Zyb21EYXlzO1xuICAgICAgICBkYXlzIC09IGFic0NlaWwobW9udGhzVG9EYXlzKG1vbnRoc0Zyb21EYXlzKSk7XG5cbiAgICAgICAgLy8gMTIgbW9udGhzIC0+IDEgeWVhclxuICAgICAgICB5ZWFycyA9IGFic0Zsb29yKG1vbnRocyAvIDEyKTtcbiAgICAgICAgbW9udGhzICU9IDEyO1xuXG4gICAgICAgIGRhdGEuZGF5cyA9IGRheXM7XG4gICAgICAgIGRhdGEubW9udGhzID0gbW9udGhzO1xuICAgICAgICBkYXRhLnllYXJzID0geWVhcnM7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGF5c1RvTW9udGhzKGRheXMpIHtcbiAgICAgICAgLy8gNDAwIHllYXJzIGhhdmUgMTQ2MDk3IGRheXMgKHRha2luZyBpbnRvIGFjY291bnQgbGVhcCB5ZWFyIHJ1bGVzKVxuICAgICAgICAvLyA0MDAgeWVhcnMgaGF2ZSAxMiBtb250aHMgPT09IDQ4MDBcbiAgICAgICAgcmV0dXJuIChkYXlzICogNDgwMCkgLyAxNDYwOTc7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbW9udGhzVG9EYXlzKG1vbnRocykge1xuICAgICAgICAvLyB0aGUgcmV2ZXJzZSBvZiBkYXlzVG9Nb250aHNcbiAgICAgICAgcmV0dXJuIChtb250aHMgKiAxNDYwOTcpIC8gNDgwMDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhcyh1bml0cykge1xuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gTmFOO1xuICAgICAgICB9XG4gICAgICAgIHZhciBkYXlzLFxuICAgICAgICAgICAgbW9udGhzLFxuICAgICAgICAgICAgbWlsbGlzZWNvbmRzID0gdGhpcy5fbWlsbGlzZWNvbmRzO1xuXG4gICAgICAgIHVuaXRzID0gbm9ybWFsaXplVW5pdHModW5pdHMpO1xuXG4gICAgICAgIGlmICh1bml0cyA9PT0gJ21vbnRoJyB8fCB1bml0cyA9PT0gJ3F1YXJ0ZXInIHx8IHVuaXRzID09PSAneWVhcicpIHtcbiAgICAgICAgICAgIGRheXMgPSB0aGlzLl9kYXlzICsgbWlsbGlzZWNvbmRzIC8gODY0ZTU7XG4gICAgICAgICAgICBtb250aHMgPSB0aGlzLl9tb250aHMgKyBkYXlzVG9Nb250aHMoZGF5cyk7XG4gICAgICAgICAgICBzd2l0Y2ggKHVuaXRzKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnbW9udGgnOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhzO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3F1YXJ0ZXInOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhzIC8gMztcbiAgICAgICAgICAgICAgICBjYXNlICd5ZWFyJzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vbnRocyAvIDEyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gaGFuZGxlIG1pbGxpc2Vjb25kcyBzZXBhcmF0ZWx5IGJlY2F1c2Ugb2YgZmxvYXRpbmcgcG9pbnQgbWF0aCBlcnJvcnMgKGlzc3VlICMxODY3KVxuICAgICAgICAgICAgZGF5cyA9IHRoaXMuX2RheXMgKyBNYXRoLnJvdW5kKG1vbnRoc1RvRGF5cyh0aGlzLl9tb250aHMpKTtcbiAgICAgICAgICAgIHN3aXRjaCAodW5pdHMpIHtcbiAgICAgICAgICAgICAgICBjYXNlICd3ZWVrJzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRheXMgLyA3ICsgbWlsbGlzZWNvbmRzIC8gNjA0OGU1O1xuICAgICAgICAgICAgICAgIGNhc2UgJ2RheSc6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXlzICsgbWlsbGlzZWNvbmRzIC8gODY0ZTU7XG4gICAgICAgICAgICAgICAgY2FzZSAnaG91cic6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXlzICogMjQgKyBtaWxsaXNlY29uZHMgLyAzNmU1O1xuICAgICAgICAgICAgICAgIGNhc2UgJ21pbnV0ZSc6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXlzICogMTQ0MCArIG1pbGxpc2Vjb25kcyAvIDZlNDtcbiAgICAgICAgICAgICAgICBjYXNlICdzZWNvbmQnOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF5cyAqIDg2NDAwICsgbWlsbGlzZWNvbmRzIC8gMTAwMDtcbiAgICAgICAgICAgICAgICAvLyBNYXRoLmZsb29yIHByZXZlbnRzIGZsb2F0aW5nIHBvaW50IG1hdGggZXJyb3JzIGhlcmVcbiAgICAgICAgICAgICAgICBjYXNlICdtaWxsaXNlY29uZCc6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKGRheXMgKiA4NjRlNSkgKyBtaWxsaXNlY29uZHM7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHVuaXQgJyArIHVuaXRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1ha2VBcyhhbGlhcykge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXMoYWxpYXMpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIHZhciBhc01pbGxpc2Vjb25kcyA9IG1ha2VBcygnbXMnKSxcbiAgICAgICAgYXNTZWNvbmRzID0gbWFrZUFzKCdzJyksXG4gICAgICAgIGFzTWludXRlcyA9IG1ha2VBcygnbScpLFxuICAgICAgICBhc0hvdXJzID0gbWFrZUFzKCdoJyksXG4gICAgICAgIGFzRGF5cyA9IG1ha2VBcygnZCcpLFxuICAgICAgICBhc1dlZWtzID0gbWFrZUFzKCd3JyksXG4gICAgICAgIGFzTW9udGhzID0gbWFrZUFzKCdNJyksXG4gICAgICAgIGFzUXVhcnRlcnMgPSBtYWtlQXMoJ1EnKSxcbiAgICAgICAgYXNZZWFycyA9IG1ha2VBcygneScpLFxuICAgICAgICB2YWx1ZU9mJDEgPSBhc01pbGxpc2Vjb25kcztcblxuICAgIGZ1bmN0aW9uIGNsb25lJDEoKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVEdXJhdGlvbih0aGlzKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXQkMih1bml0cykge1xuICAgICAgICB1bml0cyA9IG5vcm1hbGl6ZVVuaXRzKHVuaXRzKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNWYWxpZCgpID8gdGhpc1t1bml0cyArICdzJ10oKSA6IE5hTjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtYWtlR2V0dGVyKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlzVmFsaWQoKSA/IHRoaXMuX2RhdGFbbmFtZV0gOiBOYU47XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIG1pbGxpc2Vjb25kcyA9IG1ha2VHZXR0ZXIoJ21pbGxpc2Vjb25kcycpLFxuICAgICAgICBzZWNvbmRzID0gbWFrZUdldHRlcignc2Vjb25kcycpLFxuICAgICAgICBtaW51dGVzID0gbWFrZUdldHRlcignbWludXRlcycpLFxuICAgICAgICBob3VycyA9IG1ha2VHZXR0ZXIoJ2hvdXJzJyksXG4gICAgICAgIGRheXMgPSBtYWtlR2V0dGVyKCdkYXlzJyksXG4gICAgICAgIG1vbnRocyA9IG1ha2VHZXR0ZXIoJ21vbnRocycpLFxuICAgICAgICB5ZWFycyA9IG1ha2VHZXR0ZXIoJ3llYXJzJyk7XG5cbiAgICBmdW5jdGlvbiB3ZWVrcygpIHtcbiAgICAgICAgcmV0dXJuIGFic0Zsb29yKHRoaXMuZGF5cygpIC8gNyk7XG4gICAgfVxuXG4gICAgdmFyIHJvdW5kID0gTWF0aC5yb3VuZCxcbiAgICAgICAgdGhyZXNob2xkcyA9IHtcbiAgICAgICAgICAgIHNzOiA0NCwgLy8gYSBmZXcgc2Vjb25kcyB0byBzZWNvbmRzXG4gICAgICAgICAgICBzOiA0NSwgLy8gc2Vjb25kcyB0byBtaW51dGVcbiAgICAgICAgICAgIG06IDQ1LCAvLyBtaW51dGVzIHRvIGhvdXJcbiAgICAgICAgICAgIGg6IDIyLCAvLyBob3VycyB0byBkYXlcbiAgICAgICAgICAgIGQ6IDI2LCAvLyBkYXlzIHRvIG1vbnRoL3dlZWtcbiAgICAgICAgICAgIHc6IG51bGwsIC8vIHdlZWtzIHRvIG1vbnRoXG4gICAgICAgICAgICBNOiAxMSwgLy8gbW9udGhzIHRvIHllYXJcbiAgICAgICAgfTtcblxuICAgIC8vIGhlbHBlciBmdW5jdGlvbiBmb3IgbW9tZW50LmZuLmZyb20sIG1vbWVudC5mbi5mcm9tTm93LCBhbmQgbW9tZW50LmR1cmF0aW9uLmZuLmh1bWFuaXplXG4gICAgZnVuY3Rpb24gc3Vic3RpdHV0ZVRpbWVBZ28oc3RyaW5nLCBudW1iZXIsIHdpdGhvdXRTdWZmaXgsIGlzRnV0dXJlLCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5yZWxhdGl2ZVRpbWUobnVtYmVyIHx8IDEsICEhd2l0aG91dFN1ZmZpeCwgc3RyaW5nLCBpc0Z1dHVyZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVsYXRpdmVUaW1lJDEocG9zTmVnRHVyYXRpb24sIHdpdGhvdXRTdWZmaXgsIHRocmVzaG9sZHMsIGxvY2FsZSkge1xuICAgICAgICB2YXIgZHVyYXRpb24gPSBjcmVhdGVEdXJhdGlvbihwb3NOZWdEdXJhdGlvbikuYWJzKCksXG4gICAgICAgICAgICBzZWNvbmRzID0gcm91bmQoZHVyYXRpb24uYXMoJ3MnKSksXG4gICAgICAgICAgICBtaW51dGVzID0gcm91bmQoZHVyYXRpb24uYXMoJ20nKSksXG4gICAgICAgICAgICBob3VycyA9IHJvdW5kKGR1cmF0aW9uLmFzKCdoJykpLFxuICAgICAgICAgICAgZGF5cyA9IHJvdW5kKGR1cmF0aW9uLmFzKCdkJykpLFxuICAgICAgICAgICAgbW9udGhzID0gcm91bmQoZHVyYXRpb24uYXMoJ00nKSksXG4gICAgICAgICAgICB3ZWVrcyA9IHJvdW5kKGR1cmF0aW9uLmFzKCd3JykpLFxuICAgICAgICAgICAgeWVhcnMgPSByb3VuZChkdXJhdGlvbi5hcygneScpKSxcbiAgICAgICAgICAgIGEgPVxuICAgICAgICAgICAgICAgIChzZWNvbmRzIDw9IHRocmVzaG9sZHMuc3MgJiYgWydzJywgc2Vjb25kc10pIHx8XG4gICAgICAgICAgICAgICAgKHNlY29uZHMgPCB0aHJlc2hvbGRzLnMgJiYgWydzcycsIHNlY29uZHNdKSB8fFxuICAgICAgICAgICAgICAgIChtaW51dGVzIDw9IDEgJiYgWydtJ10pIHx8XG4gICAgICAgICAgICAgICAgKG1pbnV0ZXMgPCB0aHJlc2hvbGRzLm0gJiYgWydtbScsIG1pbnV0ZXNdKSB8fFxuICAgICAgICAgICAgICAgIChob3VycyA8PSAxICYmIFsnaCddKSB8fFxuICAgICAgICAgICAgICAgIChob3VycyA8IHRocmVzaG9sZHMuaCAmJiBbJ2hoJywgaG91cnNdKSB8fFxuICAgICAgICAgICAgICAgIChkYXlzIDw9IDEgJiYgWydkJ10pIHx8XG4gICAgICAgICAgICAgICAgKGRheXMgPCB0aHJlc2hvbGRzLmQgJiYgWydkZCcsIGRheXNdKTtcblxuICAgICAgICBpZiAodGhyZXNob2xkcy53ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGEgPVxuICAgICAgICAgICAgICAgIGEgfHxcbiAgICAgICAgICAgICAgICAod2Vla3MgPD0gMSAmJiBbJ3cnXSkgfHxcbiAgICAgICAgICAgICAgICAod2Vla3MgPCB0aHJlc2hvbGRzLncgJiYgWyd3dycsIHdlZWtzXSk7XG4gICAgICAgIH1cbiAgICAgICAgYSA9IGEgfHxcbiAgICAgICAgICAgIChtb250aHMgPD0gMSAmJiBbJ00nXSkgfHxcbiAgICAgICAgICAgIChtb250aHMgPCB0aHJlc2hvbGRzLk0gJiYgWydNTScsIG1vbnRoc10pIHx8XG4gICAgICAgICAgICAoeWVhcnMgPD0gMSAmJiBbJ3knXSkgfHwgWyd5eScsIHllYXJzXTtcblxuICAgICAgICBhWzJdID0gd2l0aG91dFN1ZmZpeDtcbiAgICAgICAgYVszXSA9ICtwb3NOZWdEdXJhdGlvbiA+IDA7XG4gICAgICAgIGFbNF0gPSBsb2NhbGU7XG4gICAgICAgIHJldHVybiBzdWJzdGl0dXRlVGltZUFnby5hcHBseShudWxsLCBhKTtcbiAgICB9XG5cbiAgICAvLyBUaGlzIGZ1bmN0aW9uIGFsbG93cyB5b3UgdG8gc2V0IHRoZSByb3VuZGluZyBmdW5jdGlvbiBmb3IgcmVsYXRpdmUgdGltZSBzdHJpbmdzXG4gICAgZnVuY3Rpb24gZ2V0U2V0UmVsYXRpdmVUaW1lUm91bmRpbmcocm91bmRpbmdGdW5jdGlvbikge1xuICAgICAgICBpZiAocm91bmRpbmdGdW5jdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcm91bmQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiByb3VuZGluZ0Z1bmN0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByb3VuZCA9IHJvdW5kaW5nRnVuY3Rpb247XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gVGhpcyBmdW5jdGlvbiBhbGxvd3MgeW91IHRvIHNldCBhIHRocmVzaG9sZCBmb3IgcmVsYXRpdmUgdGltZSBzdHJpbmdzXG4gICAgZnVuY3Rpb24gZ2V0U2V0UmVsYXRpdmVUaW1lVGhyZXNob2xkKHRocmVzaG9sZCwgbGltaXQpIHtcbiAgICAgICAgaWYgKHRocmVzaG9sZHNbdGhyZXNob2xkXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxpbWl0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aHJlc2hvbGRzW3RocmVzaG9sZF07XG4gICAgICAgIH1cbiAgICAgICAgdGhyZXNob2xkc1t0aHJlc2hvbGRdID0gbGltaXQ7XG4gICAgICAgIGlmICh0aHJlc2hvbGQgPT09ICdzJykge1xuICAgICAgICAgICAgdGhyZXNob2xkcy5zcyA9IGxpbWl0IC0gMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBodW1hbml6ZShhcmdXaXRoU3VmZml4LCBhcmdUaHJlc2hvbGRzKSB7XG4gICAgICAgIGlmICghdGhpcy5pc1ZhbGlkKCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxvY2FsZURhdGEoKS5pbnZhbGlkRGF0ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHdpdGhTdWZmaXggPSBmYWxzZSxcbiAgICAgICAgICAgIHRoID0gdGhyZXNob2xkcyxcbiAgICAgICAgICAgIGxvY2FsZSxcbiAgICAgICAgICAgIG91dHB1dDtcblxuICAgICAgICBpZiAodHlwZW9mIGFyZ1dpdGhTdWZmaXggPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBhcmdUaHJlc2hvbGRzID0gYXJnV2l0aFN1ZmZpeDtcbiAgICAgICAgICAgIGFyZ1dpdGhTdWZmaXggPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGFyZ1dpdGhTdWZmaXggPT09ICdib29sZWFuJykge1xuICAgICAgICAgICAgd2l0aFN1ZmZpeCA9IGFyZ1dpdGhTdWZmaXg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBhcmdUaHJlc2hvbGRzID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgdGggPSBPYmplY3QuYXNzaWduKHt9LCB0aHJlc2hvbGRzLCBhcmdUaHJlc2hvbGRzKTtcbiAgICAgICAgICAgIGlmIChhcmdUaHJlc2hvbGRzLnMgIT0gbnVsbCAmJiBhcmdUaHJlc2hvbGRzLnNzID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aC5zcyA9IGFyZ1RocmVzaG9sZHMucyAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBsb2NhbGUgPSB0aGlzLmxvY2FsZURhdGEoKTtcbiAgICAgICAgb3V0cHV0ID0gcmVsYXRpdmVUaW1lJDEodGhpcywgIXdpdGhTdWZmaXgsIHRoLCBsb2NhbGUpO1xuXG4gICAgICAgIGlmICh3aXRoU3VmZml4KSB7XG4gICAgICAgICAgICBvdXRwdXQgPSBsb2NhbGUucGFzdEZ1dHVyZSgrdGhpcywgb3V0cHV0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBsb2NhbGUucG9zdGZvcm1hdChvdXRwdXQpO1xuICAgIH1cblxuICAgIHZhciBhYnMkMSA9IE1hdGguYWJzO1xuXG4gICAgZnVuY3Rpb24gc2lnbih4KSB7XG4gICAgICAgIHJldHVybiAoeCA+IDApIC0gKHggPCAwKSB8fCAreDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b0lTT1N0cmluZyQxKCkge1xuICAgICAgICAvLyBmb3IgSVNPIHN0cmluZ3Mgd2UgZG8gbm90IHVzZSB0aGUgbm9ybWFsIGJ1YmJsaW5nIHJ1bGVzOlxuICAgICAgICAvLyAgKiBtaWxsaXNlY29uZHMgYnViYmxlIHVwIHVudGlsIHRoZXkgYmVjb21lIGhvdXJzXG4gICAgICAgIC8vICAqIGRheXMgZG8gbm90IGJ1YmJsZSBhdCBhbGxcbiAgICAgICAgLy8gICogbW9udGhzIGJ1YmJsZSB1cCB1bnRpbCB0aGV5IGJlY29tZSB5ZWFyc1xuICAgICAgICAvLyBUaGlzIGlzIGJlY2F1c2UgdGhlcmUgaXMgbm8gY29udGV4dC1mcmVlIGNvbnZlcnNpb24gYmV0d2VlbiBob3VycyBhbmQgZGF5c1xuICAgICAgICAvLyAodGhpbmsgb2YgY2xvY2sgY2hhbmdlcylcbiAgICAgICAgLy8gYW5kIGFsc28gbm90IGJldHdlZW4gZGF5cyBhbmQgbW9udGhzICgyOC0zMSBkYXlzIHBlciBtb250aClcbiAgICAgICAgaWYgKCF0aGlzLmlzVmFsaWQoKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLmludmFsaWREYXRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc2Vjb25kcyA9IGFicyQxKHRoaXMuX21pbGxpc2Vjb25kcykgLyAxMDAwLFxuICAgICAgICAgICAgZGF5cyA9IGFicyQxKHRoaXMuX2RheXMpLFxuICAgICAgICAgICAgbW9udGhzID0gYWJzJDEodGhpcy5fbW9udGhzKSxcbiAgICAgICAgICAgIG1pbnV0ZXMsXG4gICAgICAgICAgICBob3VycyxcbiAgICAgICAgICAgIHllYXJzLFxuICAgICAgICAgICAgcyxcbiAgICAgICAgICAgIHRvdGFsID0gdGhpcy5hc1NlY29uZHMoKSxcbiAgICAgICAgICAgIHRvdGFsU2lnbixcbiAgICAgICAgICAgIHltU2lnbixcbiAgICAgICAgICAgIGRheXNTaWduLFxuICAgICAgICAgICAgaG1zU2lnbjtcblxuICAgICAgICBpZiAoIXRvdGFsKSB7XG4gICAgICAgICAgICAvLyB0aGlzIGlzIHRoZSBzYW1lIGFzIEMjJ3MgKE5vZGEpIGFuZCBweXRob24gKGlzb2RhdGUpLi4uXG4gICAgICAgICAgICAvLyBidXQgbm90IG90aGVyIEpTIChnb29nLmRhdGUpXG4gICAgICAgICAgICByZXR1cm4gJ1AwRCc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyAzNjAwIHNlY29uZHMgLT4gNjAgbWludXRlcyAtPiAxIGhvdXJcbiAgICAgICAgbWludXRlcyA9IGFic0Zsb29yKHNlY29uZHMgLyA2MCk7XG4gICAgICAgIGhvdXJzID0gYWJzRmxvb3IobWludXRlcyAvIDYwKTtcbiAgICAgICAgc2Vjb25kcyAlPSA2MDtcbiAgICAgICAgbWludXRlcyAlPSA2MDtcblxuICAgICAgICAvLyAxMiBtb250aHMgLT4gMSB5ZWFyXG4gICAgICAgIHllYXJzID0gYWJzRmxvb3IobW9udGhzIC8gMTIpO1xuICAgICAgICBtb250aHMgJT0gMTI7XG5cbiAgICAgICAgLy8gaW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL2RvcmRpbGxlL21vbWVudC1pc29kdXJhdGlvbi9ibG9iL21hc3Rlci9tb21lbnQuaXNvZHVyYXRpb24uanNcbiAgICAgICAgcyA9IHNlY29uZHMgPyBzZWNvbmRzLnRvRml4ZWQoMykucmVwbGFjZSgvXFwuPzArJC8sICcnKSA6ICcnO1xuXG4gICAgICAgIHRvdGFsU2lnbiA9IHRvdGFsIDwgMCA/ICctJyA6ICcnO1xuICAgICAgICB5bVNpZ24gPSBzaWduKHRoaXMuX21vbnRocykgIT09IHNpZ24odG90YWwpID8gJy0nIDogJyc7XG4gICAgICAgIGRheXNTaWduID0gc2lnbih0aGlzLl9kYXlzKSAhPT0gc2lnbih0b3RhbCkgPyAnLScgOiAnJztcbiAgICAgICAgaG1zU2lnbiA9IHNpZ24odGhpcy5fbWlsbGlzZWNvbmRzKSAhPT0gc2lnbih0b3RhbCkgPyAnLScgOiAnJztcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgdG90YWxTaWduICtcbiAgICAgICAgICAgICdQJyArXG4gICAgICAgICAgICAoeWVhcnMgPyB5bVNpZ24gKyB5ZWFycyArICdZJyA6ICcnKSArXG4gICAgICAgICAgICAobW9udGhzID8geW1TaWduICsgbW9udGhzICsgJ00nIDogJycpICtcbiAgICAgICAgICAgIChkYXlzID8gZGF5c1NpZ24gKyBkYXlzICsgJ0QnIDogJycpICtcbiAgICAgICAgICAgIChob3VycyB8fCBtaW51dGVzIHx8IHNlY29uZHMgPyAnVCcgOiAnJykgK1xuICAgICAgICAgICAgKGhvdXJzID8gaG1zU2lnbiArIGhvdXJzICsgJ0gnIDogJycpICtcbiAgICAgICAgICAgIChtaW51dGVzID8gaG1zU2lnbiArIG1pbnV0ZXMgKyAnTScgOiAnJykgK1xuICAgICAgICAgICAgKHNlY29uZHMgPyBobXNTaWduICsgcyArICdTJyA6ICcnKVxuICAgICAgICApO1xuICAgIH1cblxuICAgIHZhciBwcm90byQyID0gRHVyYXRpb24ucHJvdG90eXBlO1xuXG4gICAgcHJvdG8kMi5pc1ZhbGlkID0gaXNWYWxpZCQxO1xuICAgIHByb3RvJDIuYWJzID0gYWJzO1xuICAgIHByb3RvJDIuYWRkID0gYWRkJDE7XG4gICAgcHJvdG8kMi5zdWJ0cmFjdCA9IHN1YnRyYWN0JDE7XG4gICAgcHJvdG8kMi5hcyA9IGFzO1xuICAgIHByb3RvJDIuYXNNaWxsaXNlY29uZHMgPSBhc01pbGxpc2Vjb25kcztcbiAgICBwcm90byQyLmFzU2Vjb25kcyA9IGFzU2Vjb25kcztcbiAgICBwcm90byQyLmFzTWludXRlcyA9IGFzTWludXRlcztcbiAgICBwcm90byQyLmFzSG91cnMgPSBhc0hvdXJzO1xuICAgIHByb3RvJDIuYXNEYXlzID0gYXNEYXlzO1xuICAgIHByb3RvJDIuYXNXZWVrcyA9IGFzV2Vla3M7XG4gICAgcHJvdG8kMi5hc01vbnRocyA9IGFzTW9udGhzO1xuICAgIHByb3RvJDIuYXNRdWFydGVycyA9IGFzUXVhcnRlcnM7XG4gICAgcHJvdG8kMi5hc1llYXJzID0gYXNZZWFycztcbiAgICBwcm90byQyLnZhbHVlT2YgPSB2YWx1ZU9mJDE7XG4gICAgcHJvdG8kMi5fYnViYmxlID0gYnViYmxlO1xuICAgIHByb3RvJDIuY2xvbmUgPSBjbG9uZSQxO1xuICAgIHByb3RvJDIuZ2V0ID0gZ2V0JDI7XG4gICAgcHJvdG8kMi5taWxsaXNlY29uZHMgPSBtaWxsaXNlY29uZHM7XG4gICAgcHJvdG8kMi5zZWNvbmRzID0gc2Vjb25kcztcbiAgICBwcm90byQyLm1pbnV0ZXMgPSBtaW51dGVzO1xuICAgIHByb3RvJDIuaG91cnMgPSBob3VycztcbiAgICBwcm90byQyLmRheXMgPSBkYXlzO1xuICAgIHByb3RvJDIud2Vla3MgPSB3ZWVrcztcbiAgICBwcm90byQyLm1vbnRocyA9IG1vbnRocztcbiAgICBwcm90byQyLnllYXJzID0geWVhcnM7XG4gICAgcHJvdG8kMi5odW1hbml6ZSA9IGh1bWFuaXplO1xuICAgIHByb3RvJDIudG9JU09TdHJpbmcgPSB0b0lTT1N0cmluZyQxO1xuICAgIHByb3RvJDIudG9TdHJpbmcgPSB0b0lTT1N0cmluZyQxO1xuICAgIHByb3RvJDIudG9KU09OID0gdG9JU09TdHJpbmckMTtcbiAgICBwcm90byQyLmxvY2FsZSA9IGxvY2FsZTtcbiAgICBwcm90byQyLmxvY2FsZURhdGEgPSBsb2NhbGVEYXRhO1xuXG4gICAgcHJvdG8kMi50b0lzb1N0cmluZyA9IGRlcHJlY2F0ZShcbiAgICAgICAgJ3RvSXNvU3RyaW5nKCkgaXMgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSB0b0lTT1N0cmluZygpIGluc3RlYWQgKG5vdGljZSB0aGUgY2FwaXRhbHMpJyxcbiAgICAgICAgdG9JU09TdHJpbmckMVxuICAgICk7XG4gICAgcHJvdG8kMi5sYW5nID0gbGFuZztcblxuICAgIC8vIEZPUk1BVFRJTkdcblxuICAgIGFkZEZvcm1hdFRva2VuKCdYJywgMCwgMCwgJ3VuaXgnKTtcbiAgICBhZGRGb3JtYXRUb2tlbigneCcsIDAsIDAsICd2YWx1ZU9mJyk7XG5cbiAgICAvLyBQQVJTSU5HXG5cbiAgICBhZGRSZWdleFRva2VuKCd4JywgbWF0Y2hTaWduZWQpO1xuICAgIGFkZFJlZ2V4VG9rZW4oJ1gnLCBtYXRjaFRpbWVzdGFtcCk7XG4gICAgYWRkUGFyc2VUb2tlbignWCcsIGZ1bmN0aW9uIChpbnB1dCwgYXJyYXksIGNvbmZpZykge1xuICAgICAgICBjb25maWcuX2QgPSBuZXcgRGF0ZShwYXJzZUZsb2F0KGlucHV0KSAqIDEwMDApO1xuICAgIH0pO1xuICAgIGFkZFBhcnNlVG9rZW4oJ3gnLCBmdW5jdGlvbiAoaW5wdXQsIGFycmF5LCBjb25maWcpIHtcbiAgICAgICAgY29uZmlnLl9kID0gbmV3IERhdGUodG9JbnQoaW5wdXQpKTtcbiAgICB9KTtcblxuICAgIC8vISBtb21lbnQuanNcblxuICAgIGhvb2tzLnZlcnNpb24gPSAnMi4zMC4xJztcblxuICAgIHNldEhvb2tDYWxsYmFjayhjcmVhdGVMb2NhbCk7XG5cbiAgICBob29rcy5mbiA9IHByb3RvO1xuICAgIGhvb2tzLm1pbiA9IG1pbjtcbiAgICBob29rcy5tYXggPSBtYXg7XG4gICAgaG9va3Mubm93ID0gbm93O1xuICAgIGhvb2tzLnV0YyA9IGNyZWF0ZVVUQztcbiAgICBob29rcy51bml4ID0gY3JlYXRlVW5peDtcbiAgICBob29rcy5tb250aHMgPSBsaXN0TW9udGhzO1xuICAgIGhvb2tzLmlzRGF0ZSA9IGlzRGF0ZTtcbiAgICBob29rcy5sb2NhbGUgPSBnZXRTZXRHbG9iYWxMb2NhbGU7XG4gICAgaG9va3MuaW52YWxpZCA9IGNyZWF0ZUludmFsaWQ7XG4gICAgaG9va3MuZHVyYXRpb24gPSBjcmVhdGVEdXJhdGlvbjtcbiAgICBob29rcy5pc01vbWVudCA9IGlzTW9tZW50O1xuICAgIGhvb2tzLndlZWtkYXlzID0gbGlzdFdlZWtkYXlzO1xuICAgIGhvb2tzLnBhcnNlWm9uZSA9IGNyZWF0ZUluWm9uZTtcbiAgICBob29rcy5sb2NhbGVEYXRhID0gZ2V0TG9jYWxlO1xuICAgIGhvb2tzLmlzRHVyYXRpb24gPSBpc0R1cmF0aW9uO1xuICAgIGhvb2tzLm1vbnRoc1Nob3J0ID0gbGlzdE1vbnRoc1Nob3J0O1xuICAgIGhvb2tzLndlZWtkYXlzTWluID0gbGlzdFdlZWtkYXlzTWluO1xuICAgIGhvb2tzLmRlZmluZUxvY2FsZSA9IGRlZmluZUxvY2FsZTtcbiAgICBob29rcy51cGRhdGVMb2NhbGUgPSB1cGRhdGVMb2NhbGU7XG4gICAgaG9va3MubG9jYWxlcyA9IGxpc3RMb2NhbGVzO1xuICAgIGhvb2tzLndlZWtkYXlzU2hvcnQgPSBsaXN0V2Vla2RheXNTaG9ydDtcbiAgICBob29rcy5ub3JtYWxpemVVbml0cyA9IG5vcm1hbGl6ZVVuaXRzO1xuICAgIGhvb2tzLnJlbGF0aXZlVGltZVJvdW5kaW5nID0gZ2V0U2V0UmVsYXRpdmVUaW1lUm91bmRpbmc7XG4gICAgaG9va3MucmVsYXRpdmVUaW1lVGhyZXNob2xkID0gZ2V0U2V0UmVsYXRpdmVUaW1lVGhyZXNob2xkO1xuICAgIGhvb2tzLmNhbGVuZGFyRm9ybWF0ID0gZ2V0Q2FsZW5kYXJGb3JtYXQ7XG4gICAgaG9va3MucHJvdG90eXBlID0gcHJvdG87XG5cbiAgICAvLyBjdXJyZW50bHkgSFRNTDUgaW5wdXQgdHlwZSBvbmx5IHN1cHBvcnRzIDI0LWhvdXIgZm9ybWF0c1xuICAgIGhvb2tzLkhUTUw1X0ZNVCA9IHtcbiAgICAgICAgREFURVRJTUVfTE9DQUw6ICdZWVlZLU1NLUREVEhIOm1tJywgLy8gPGlucHV0IHR5cGU9XCJkYXRldGltZS1sb2NhbFwiIC8+XG4gICAgICAgIERBVEVUSU1FX0xPQ0FMX1NFQ09ORFM6ICdZWVlZLU1NLUREVEhIOm1tOnNzJywgLy8gPGlucHV0IHR5cGU9XCJkYXRldGltZS1sb2NhbFwiIHN0ZXA9XCIxXCIgLz5cbiAgICAgICAgREFURVRJTUVfTE9DQUxfTVM6ICdZWVlZLU1NLUREVEhIOm1tOnNzLlNTUycsIC8vIDxpbnB1dCB0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIiBzdGVwPVwiMC4wMDFcIiAvPlxuICAgICAgICBEQVRFOiAnWVlZWS1NTS1ERCcsIC8vIDxpbnB1dCB0eXBlPVwiZGF0ZVwiIC8+XG4gICAgICAgIFRJTUU6ICdISDptbScsIC8vIDxpbnB1dCB0eXBlPVwidGltZVwiIC8+XG4gICAgICAgIFRJTUVfU0VDT05EUzogJ0hIOm1tOnNzJywgLy8gPGlucHV0IHR5cGU9XCJ0aW1lXCIgc3RlcD1cIjFcIiAvPlxuICAgICAgICBUSU1FX01TOiAnSEg6bW06c3MuU1NTJywgLy8gPGlucHV0IHR5cGU9XCJ0aW1lXCIgc3RlcD1cIjAuMDAxXCIgLz5cbiAgICAgICAgV0VFSzogJ0dHR0ctW1ddV1cnLCAvLyA8aW5wdXQgdHlwZT1cIndlZWtcIiAvPlxuICAgICAgICBNT05USDogJ1lZWVktTU0nLCAvLyA8aW5wdXQgdHlwZT1cIm1vbnRoXCIgLz5cbiAgICB9O1xuXG4gICAgcmV0dXJuIGhvb2tzO1xuXG59KSkpO1xuIiwgImltcG9ydCB7IERFRkFVTFRfU0VUVElOR1MsIHNldHRpbmdzU3RvcmUsIFNldHRpbmdzVGFiLCB0eXBlIElTZXR0aW5ncyB9IGZyb20gJ0Avc2V0dGluZ3MnO1xuaW1wb3J0IHsgTm90aWNlLCBQbHVnaW4sIFdvcmtzcGFjZUxlYWYsIFdvcmtzcGFjZVJvb3QgfSBmcm9tICdvYnNpZGlhbic7XG5pbXBvcnQgdHlwZSB7IFN2ZWx0ZUNvbXBvbmVudCB9IGZyb20gJ3N2ZWx0ZSc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdzdmVsdGUvc3RvcmUnO1xuaW1wb3J0IHsgQ0FMRU5EQVJfUE9QT1ZFUl9JRCwgZ3JhbnVsYXJpdGllcywgTkxEQVRFU19QTFVHSU5fSUQsIFBFUklPRElDX05PVEVTX1BMVUdJTl9JRCwgVklFV19UWVBFIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgY3JlYXRlT3JPcGVuTm90ZSwgZ2V0U3RhcnR1cE5vdGVHcmFudWxhcml0eSB9IGZyb20gJy4vaW8nO1xuaW1wb3J0IHsgZ2V0UGVyaW9kaWNpdHlGcm9tR3JhbnVsYXJpdHkgfSBmcm9tICcuL2lvL3BhcnNlJztcbmltcG9ydCB0eXBlIHsgSVBlcmlvZGljaXR5IH0gZnJvbSAnLi9pby90eXBlcyc7XG5pbXBvcnQgbG9jYWxlcyBmcm9tICcuL2xvY2FsZXMnO1xuaW1wb3J0IHtcbiAgICBwbHVnaW5DbGFzc1N0b3JlLFxuICAgIHRoZW1lU3RvcmUsXG4gICAgdXBkYXRlTG9jYWxlLFxuICAgIHVwZGF0ZVdlZWtkYXlzLFxuICAgIHVwZGF0ZVdlZWtTdGFydFxufSBmcm9tICcuL3N0b3Jlcyc7XG5pbXBvcnQgeyBjcmVhdGVObGRhdGVQaWNrZXJEaWFsb2cgfSBmcm9tICcuL3VpL21vZGFscy9ubGRhdGUtcGlja2VyJztcbmltcG9ydCB7IGdldFBvcG92ZXJJbnN0YW5jZSwgUG9wb3ZlciB9IGZyb20gJy4vdWkvcG9wb3ZlcnMnO1xuaW1wb3J0IHsgZ2V0RGFpbHlOb3Rlc1BsdWdpbiwgZ2V0UGx1Z2luIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgeyBDYWxlbmRhclZpZXcgfSBmcm9tICcuL3ZpZXcnO1xuaW1wb3J0IFZpZXcgZnJvbSAnLi9WaWV3LnN2ZWx0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBlcmlvZGljTm90ZXNDYWxlbmRhclBsdWdpbiBleHRlbmRzIFBsdWdpbiB7XG4gICAgcG9wb3ZlcnM6IFJlY29yZDxzdHJpbmcsIFN2ZWx0ZUNvbXBvbmVudCB8IG51bGw+ID0ge307XG4gICAgcG9wb3ZlcnNDbGVhbnVwczogKCgpID0+IHZvaWQpW10gPSBbXTtcbiAgICBwb3BvdmVyQXV0b1VwZGF0ZUNsZWFudXA6ICgoKSA9PiB2b2lkKSB8IG51bGwgPSBudWxsO1xuXG4gICAgb251bmxvYWQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdPTiBVbmxvYWQgXHUyNkYwXHVGRTBGJyk7XG5cbiAgICAgICAgdGhpcy5hcHAud29ya3NwYWNlLmdldExlYXZlc09mVHlwZShWSUVXX1RZUEUpLmZvckVhY2goKGxlYWYpID0+IGxlYWYuZGV0YWNoKCkpO1xuXG4gICAgICAgIHRoaXMucG9wb3ZlcnNDbGVhbnVwcy5sZW5ndGggPiAwICYmIHRoaXMucG9wb3ZlcnNDbGVhbnVwcy5mb3JFYWNoKChjbGVhbnVwKSA9PiBjbGVhbnVwKCkpO1xuICAgIH1cblxuICAgIGFzeW5jIG9ubG9hZCgpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5sb2FkU2V0dGluZ3MoKTtcbiAgICAgICAgY29uc29sZS5sb2coJ09OIExvYWQgXHVEODNFXHVERUY1Jyk7XG5cbiAgICAgICAgcGx1Z2luQ2xhc3NTdG9yZS5zZXQodGhpcyk7XG5cbiAgICAgICAgLy8gdGhlbWVcbiAgICAgICAgY29uc3QgY3JyVGhlbWUgPSB0aGlzLmdldFRoZW1lKCk7XG4gICAgICAgIHRoZW1lU3RvcmUuc2V0KChjcnJUaGVtZSA9PT0gJ21vb25zdG9uZScgfHwgY3JyVGhlbWUgPT09IFwibGlnaHRcIikgPyAnbGlnaHQnIDogJ2RhcmsnKTtcblxuICAgICAgICAvLyBwbHVnaW5zXG4gICAgICAgIGF3YWl0IGdldERhaWx5Tm90ZXNQbHVnaW4oKVxuXG4gICAgICAgIC8vIHN1YiBzZXR0aW5nc1xuICAgICAgICBjb25zdCB1bnN1YlNldHRpbmdzU3RvcmUgPSBzZXR0aW5nc1N0b3JlLnN1YnNjcmliZSh0aGlzLnNhdmVTZXR0aW5ncy5iaW5kKHRoaXMpKVxuICAgICAgICB0aGlzLnJlZ2lzdGVyKHVuc3ViU2V0dGluZ3NTdG9yZSk7XG5cbiAgICAgICAgdGhpcy5hZGRTZXR0aW5nVGFiKG5ldyBTZXR0aW5nc1RhYih0aGlzLmFwcCwgdGhpcykpO1xuXG4gICAgICAgIHRoaXMuaGFuZGxlUmliYm9uKCk7XG5cbiAgICAgICAgLy8gcmVnaXN0ZXIgdmlld1xuICAgICAgICB0aGlzLnJlZ2lzdGVyVmlldyhWSUVXX1RZUEUsIChsZWFmKSA9PiBuZXcgQ2FsZW5kYXJWaWV3KGxlYWYsIHRoaXMpKTtcblxuICAgICAgICAvLyBDb21tYW5kc1xuICAgICAgICB0aGlzLmFkZENvbW1hbmQoe1xuICAgICAgICAgICAgaWQ6ICdvcGVuLWNhbGVuZGFyLXZpZXcnLFxuICAgICAgICAgICAgbmFtZTogJ09wZW4gY2FsZW5kYXIgdmlldycsXG4gICAgICAgICAgICBjYWxsYmFjazogKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlVmlldygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBncmFudWxhcml0aWVzLmZvckVhY2goKGdyYW51bGFyaXR5KSA9PiB7XG4gICAgICAgICAgICAoWydwcmV2aW91cycsICduZXh0J10gYXMgY29uc3QpLmZvckVhY2goKHBvcykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBlcmlvZGljaXR5ID0gZ2V0UGVyaW9kaWNpdHlGcm9tR3JhbnVsYXJpdHkoZ3JhbnVsYXJpdHkpIGFzIEV4Y2x1ZGU8XG4gICAgICAgICAgICAgICAgICAgIElQZXJpb2RpY2l0eSxcbiAgICAgICAgICAgICAgICAgICAgJ2RhaWx5J1xuICAgICAgICAgICAgICAgID47XG5cbiAgICAgICAgICAgICAgICBsZXQgcG9zVGV4dDpcbiAgICAgICAgICAgICAgICAgICAgfCBgJHt0eXBlb2YgcG9zfS0ke0V4Y2x1ZGU8dHlwZW9mIHBlcmlvZGljaXR5LCAnZGFpbHknPn1gXG4gICAgICAgICAgICAgICAgICAgIHwgJ3RvbW9ycm93J1xuICAgICAgICAgICAgICAgICAgICB8ICd5ZXN0ZXJkYXknO1xuXG4gICAgICAgICAgICAgICAgaWYgKGdyYW51bGFyaXR5ID09PSAnZGF5Jykge1xuICAgICAgICAgICAgICAgICAgICBwb3NUZXh0ID0gcG9zID09PSAnbmV4dCcgPyAndG9tb3Jyb3cnIDogJ3llc3RlcmRheSc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zVGV4dCA9IGAke3Bvc30tJHtwZXJpb2RpY2l0eX1gO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuYWRkQ29tbWFuZCh7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBgY3JlYXRlLSR7cG9zVGV4dH0tbm90ZWAsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IGBPcGVuICR7Z3JhbnVsYXJpdHkgPT09ICdkYXknXG4gICAgICAgICAgICAgICAgICAgICAgICA/IGAke3Bvc1RleHR9J3NgXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGAke3Bvc30gJHtnZXRQZXJpb2RpY2l0eUZyb21HcmFudWxhcml0eShncmFudWxhcml0eSl9YFxuICAgICAgICAgICAgICAgICAgICAgICAgfSBub3RlYCxcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgd29ya3NwYWNlIH0gPSB3aW5kb3cuYXBwO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGVhZiA9IHdvcmtzcGFjZS5nZXRMZWFmKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0RhdGUgPSB3aW5kb3dcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAubW9tZW50KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY2xvbmUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgW3BvcyA9PT0gJ25leHQnID8gJ2FkZCcgOiAnc3VidHJhY3QnXSgxLCBncmFudWxhcml0eSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc3RhcnRPZihncmFudWxhcml0eSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZU9yT3Blbk5vdGUoeyBsZWFmLCBkYXRlOiBuZXdEYXRlLCBncmFudWxhcml0eSwgY29uZmlybUJlZm9yZUNyZWF0ZU92ZXJyaWRlOiBmYWxzZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IG5sRGF0ZXNQbHVnaW4gPSBhd2FpdCBnZXRQbHVnaW4oTkxEQVRFU19QTFVHSU5fSUQpO1xuICAgICAgICB0aGlzLmFkZENvbW1hbmQoe1xuICAgICAgICAgICAgaWQ6ICdvcGVuLW5sZGF0ZS1ub3RlJyxcbiAgICAgICAgICAgIG5hbWU6ICdPcGVuIGEgUGVyaW9kaWMgTm90ZSBiYXNlZCBvbiBOYXR1cmFsIExhbmd1YWdlIERhdGUgc2VsZWN0aW9uJyxcbiAgICAgICAgICAgIGNhbGxiYWNrOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG5sRGF0ZXNQbHVnaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlTmxkYXRlUGlja2VyRGlhbG9nKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3IE5vdGljZShgUGxlYXNlIGluc3RhbGwgJyR7TkxEQVRFU19QTFVHSU5fSUR9JyBwbHVnaW4gdG8gdXNlIHRoaXMgY29tbWFuZGApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBhZGQgcXVpY2sgbG9jYWxlcyBzd2l0Y2ggY29tbWFuZHNcbiAgICAgICAgaWYgKGdldChzZXR0aW5nc1N0b3JlKS5hbGxvd0xvY2FsZXNTd2l0Y2hGcm9tQ29tbWFuZFBhbGV0dGUpIHtcbiAgICAgICAgICAgIHdpbmRvdy5tb21lbnQubG9jYWxlcygpLmZvckVhY2goKG1vbWVudExvY2FsZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkQ29tbWFuZCh7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBgc3dpdGNoLXRvIC0gJHttb21lbnRMb2NhbGVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gLWxvY2FsZWAsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IGBTd2l0Y2ggdG8gJHtsb2NhbGVzLmdldChtb21lbnRMb2NhbGUpIHx8IG1vbWVudExvY2FsZX0gbG9jYWxlYCxcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUxvY2FsZShtb21lbnRMb2NhbGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlV2Vla1N0YXJ0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVXZWVrZGF5cygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuYXBwLndvcmtzcGFjZS5vbkxheW91dFJlYWR5KCgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdPTiBMYXlvdXQgUkVhZHkgXHVEODNEXHVERTRDJyk7XG5cbiAgICAgICAgICAgIHRoaXMuaW5pdFZpZXcoeyBhY3RpdmU6IGZhbHNlIH0pO1xuXG4gICAgICAgICAgICBpZiAoZ2V0KHNldHRpbmdzU3RvcmUpLm9wZW5Qb3BvdmVyT25SaWJib25Ib3Zlcikge1xuICAgICAgICAgICAgICAgIFBvcG92ZXIuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IENBTEVOREFSX1BPUE9WRVJfSUQsXG4gICAgICAgICAgICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbXBvbmVudDogVmlld1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIG9wZW4gbm90ZSBhdCBzdGFydHVwXG4gICAgICAgICAgICBjb25zdCBzdGFydHVwTm90ZUdyYW51bGFyaXR5ID0gZ2V0U3RhcnR1cE5vdGVHcmFudWxhcml0eSgpO1xuICAgICAgICAgICAgaWYgKHN0YXJ0dXBOb3RlR3JhbnVsYXJpdHkpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlx1RDgzQ1x1REY4OSBbbGF5b3V0IHJlYWR5XSBhYm91dCB0byBvcGVuIG9yIGNyZWF0ZSBub3RlXCIpO1xuICAgICAgICAgICAgICAgIGNyZWF0ZU9yT3Blbk5vdGUoe1xuICAgICAgICAgICAgICAgICAgICBsZWFmOiB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0TGVhZigpLFxuICAgICAgICAgICAgICAgICAgICBkYXRlOiB3aW5kb3cubW9tZW50KCksXG4gICAgICAgICAgICAgICAgICAgIGdyYW51bGFyaXR5OiBzdGFydHVwTm90ZUdyYW51bGFyaXR5LFxuICAgICAgICAgICAgICAgICAgICBjb25maXJtQmVmb3JlQ3JlYXRlT3ZlcnJpZGU6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFzeW5jIGxvYWRTZXR0aW5ncygpIHtcbiAgICAgICAgY29uc3Qgc2V0dGluZ3MgPSAoYXdhaXQgdGhpcy5sb2FkRGF0YSgpKSBhcyBJU2V0dGluZ3M7XG4gICAgICAgICFzZXR0aW5ncyAmJiAoYXdhaXQgdGhpcy5zYXZlRGF0YShERUZBVUxUX1NFVFRJTkdTKSk7XG5cbiAgICAgICAgc2V0dGluZ3NTdG9yZS51cGRhdGUoKG9sZCkgPT4gKHtcbiAgICAgICAgICAgIC4uLm9sZCxcbiAgICAgICAgICAgIC4uLihzZXR0aW5ncyB8fCB7fSlcbiAgICAgICAgfSkpO1xuICAgIH1cblxuICAgIGFzeW5jIHNhdmVTZXR0aW5ncyhuZXdTZXR0aW5nczogSVNldHRpbmdzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiXHUyNzA1IHNhdmVTZXR0aW5ncyB0cmlnZ2VyZWRcIiwgbmV3U2V0dGluZ3MpO1xuICAgICAgICBhd2FpdCB0aGlzLnNhdmVEYXRhKG5ld1NldHRpbmdzKTtcbiAgICB9XG5cbiAgICBoYW5kbGVSaWJib24oKSB7XG4gICAgICAgIGNvbnN0IHJpYmJvbkVsID0gdGhpcy5hZGRSaWJib25JY29uKCdkaWNlJywgJ09wZW4gY2FsZW5kYXInLCAoZXYpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNhbGVuZGFyUG9wb3ZlciA9IGdldFBvcG92ZXJJbnN0YW5jZShDQUxFTkRBUl9QT1BPVkVSX0lEKTtcblxuICAgICAgICAgICAgaWYgKGdldChzZXR0aW5nc1N0b3JlKS52aWV3TW9kZSA9PT0gXCJkZWRpY2F0ZWQtcGFuZWxcIikge1xuICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlVmlldygpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGdldChzZXR0aW5nc1N0b3JlKS5vcGVuUG9wb3Zlck9uUmliYm9uSG92ZXIgJiYgY2FsZW5kYXJQb3BvdmVyPy5vcGVuZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsZW5kYXJQb3BvdmVyLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxlbmRhckVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7Q0FMRU5EQVJfUE9QT1ZFUl9JRH1bZGF0YS1wb3BvdmVyPVwidHJ1ZVwiXWApIGFzIEhUTUxFbGVtZW50IHwgdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGV2LnRhcmdldCBhcyBFbGVtZW50XG5cbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICFjYWxlbmRhckVsICYmXG4gICAgICAgICAgICAgICAgICAgICFjYWxlbmRhclBvcG92ZXIgJiZcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0XG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIFBvcG92ZXIuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBDQUxFTkRBUl9QT1BPVkVSX0lELFxuICAgICAgICAgICAgICAgICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbXBvbmVudDogVmlld1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KS5vcGVuKHRhcmdldCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsZW5kYXJQb3BvdmVyPy50b2dnbGUodGFyZ2V0KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmliYm9uRWwuaWQgPSBgJHtDQUxFTkRBUl9QT1BPVkVSX0lEfS1yaWJib24tcmVmLWVsYFxuICAgIH1cblxuICAgIGFzeW5jIGluaXRWaWV3KHsgYWN0aXZlIH06IHsgYWN0aXZlOiBib29sZWFuIH0gPSB7IGFjdGl2ZTogdHJ1ZSB9KSB7XG4gICAgICAgIHRoaXMuYXBwLndvcmtzcGFjZS5kZXRhY2hMZWF2ZXNPZlR5cGUoVklFV19UWVBFKTtcblxuICAgICAgICBhd2FpdCB0aGlzLmFwcC53b3Jrc3BhY2VbYGdldCR7Z2V0KHNldHRpbmdzU3RvcmUpLnZpZXdMZWFmUG9zaXRpb259TGVhZmBdKGZhbHNlKT8uc2V0Vmlld1N0YXRlKHtcbiAgICAgICAgICAgIHR5cGU6IFZJRVdfVFlQRSxcbiAgICAgICAgICAgIGFjdGl2ZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV2ZWFsVmlldygpIHtcbiAgICAgICAgLy8gZ2V0IGNhbGVuZGFyIHZpZXcgYW5kIHNldCBpdCBhcyBhY3RpdmVcbiAgICAgICAgdGhpcy5hcHAud29ya3NwYWNlLnJldmVhbExlYWYodGhpcy5hcHAud29ya3NwYWNlLmdldExlYXZlc09mVHlwZShWSUVXX1RZUEUpWzBdKTtcbiAgICAgICAgdGhpcy5hcHAud29ya3NwYWNlLmdldExlYXZlc09mVHlwZShWSUVXX1RZUEUpWzBdLnNldFZpZXdTdGF0ZSh7XG4gICAgICAgICAgICB0eXBlOiBWSUVXX1RZUEUsXG4gICAgICAgICAgICBhY3RpdmU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYXN5bmMgdG9nZ2xlVmlldygpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEhUTUxFbGVtZW50IHdoZXJlIFZpZXcgaXMgcmVuZGVyZWQgYXRcbiAgICAgICAgICovXG4gICAgICAgIGNvbnN0IGxlYWYgPSB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0TGVhdmVzT2ZUeXBlKFZJRVdfVFlQRSlbMF0gYXNcbiAgICAgICAgICAgIHwgKFdvcmtzcGFjZUxlYWYgJiB7IGNvbnRhaW5lckVsOiBIVE1MRWxlbWVudDsgdGFiSGVhZGVyRWw6IEhUTUxFbGVtZW50IH0pXG4gICAgICAgICAgICB8IHVuZGVmaW5lZDtcblxuICAgICAgICBpZiAoIWxlYWYpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuaW5pdFZpZXcoKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZ2V0U3BsaXRQb3MgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjbG9zZXN0V29ya3NwYWNlU3BsaXRDbGFzc05hbWUgPVxuICAgICAgICAgICAgICAgIGxlYWYuY29udGFpbmVyRWwuY2xvc2VzdCgnLndvcmtzcGFjZS1zcGxpdCcpPy5jbGFzc05hbWU7XG5cbiAgICAgICAgICAgIGlmIChjbG9zZXN0V29ya3NwYWNlU3BsaXRDbGFzc05hbWU/LmluY2x1ZGVzKCdsZWZ0JykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2xlZnQnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY2xvc2VzdFdvcmtzcGFjZVNwbGl0Q2xhc3NOYW1lPy5pbmNsdWRlcygncmlnaHQnKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAncmlnaHQnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gJ3Jvb3QnO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgd29yc2twYWNlIHNwbGl0IHdoZXJlIGxlYWYgaXMgY3VycmVudGx5IGF0dGFjaGVkIHRvXG4gICAgICAgICAqIGJhc2VkIG9uIGNsb3Nlc3Qgd29ya3NwYWNlIHNwbGl0IGNsYXNzTmFtZVxuICAgICAgICAgKi9cbiAgICAgICAgY29uc3QgY3JyU3BsaXRQb3MgPSBnZXRTcGxpdFBvcygpO1xuICAgICAgICBjb25zb2xlLmxvZygnY3JyU3BsaXRQb3MnLCBjcnJTcGxpdFBvcyk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBIHNwbGl0IGlzIGEgY29udGFpbmVyIGZvciBsZWFmIG5vZGVzIHRoYXQgc2xpZGVzIGluIHdoZW4gY2xpY2tpbmcgdGhlIGNvbGxhcHNlIGJ1dHRvbiwgZXhjZXB0IGZvciB0aGUgcm9vdCBzcGxpdCAobWFya2Rvd24gZWRpdG9yKS4gVGhlcmUgYXJlIHRocmVlIHR5cGVzOiBsZWZ0LCByb290LCBhbmQgcmlnaHQuXG4gICAgICAgICAqL1xuICAgICAgICBjb25zdCBjcnJTcGxpdCA9IHRoaXMuYXBwLndvcmtzcGFjZVtgJHtjcnJTcGxpdFBvc31TcGxpdGBdO1xuICAgICAgICBjb25zb2xlLmxvZygnY3JyU3BsaXQnLCBjcnJTcGxpdCk7XG5cbiAgICAgICAgY29uc3QgbGVhZkFjdGl2ZSA9IGxlYWYudGFiSGVhZGVyRWwuY2xhc3NOYW1lLmluY2x1ZGVzKCdpcy1hY3RpdmUnKTtcbiAgICAgICAgY29uc29sZS5sb2coJ2xlYWZBY3RpdmUnLCBsZWFmQWN0aXZlKTtcblxuICAgICAgICAvLyBTY25lYXJpb3NcbiAgICAgICAgLy8gZXZhbCByb290IHNwbGl0XG4gICAgICAgIGlmIChjcnJTcGxpdCBpbnN0YW5jZW9mIFdvcmtzcGFjZVJvb3QpIHtcbiAgICAgICAgICAgIGlmIChsZWFmQWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgLy8gMS4gcm9vdCBzcGxpdCAmJiBsZWFmIGFjdGl2ZVxuICAgICAgICAgICAgICAgIGxlYWYudmlldy51bmxvYWQoKTtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmluaXRWaWV3KHsgYWN0aXZlOiBmYWxzZSB9KTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIDIuIHJvb3Qgc3BsaXQgJiYgbGVhZiBOT1QgYWN0aXZlXG4gICAgICAgICAgICB0aGlzLnJldmVhbFZpZXcoKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZXZhbCBsZWZ0IG9yIHJpZ2h0IHNwbGl0XG4gICAgICAgIC8vIG9ubHkgbGVmdFNwbGl0IGFuZCByaWdodFNwbGl0IGNhbiBiZSBjb2xsYXBzZWRcbiAgICAgICAgaWYgKCFjcnJTcGxpdC5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgIGlmIChsZWFmQWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgLy8gMy4gY3JyIHNwbGl0IG9wZW4gYW5kIGxlYWYgYWN0aXZlXG4gICAgICAgICAgICAgICAgY3JyU3BsaXQuY29sbGFwc2UoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gNC4gY3JyIHNwbGl0IG9wZW4gYW5kIGxlYWYgTk9UIGFjdGl2ZVxuICAgICAgICAgICAgICAgIHRoaXMucmV2ZWFsVmlldygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gNS4gY3JyIHNwbGl0IGNvbGxhcHNlZFxuICAgICAgICAgICAgdGhpcy5yZXZlYWxWaWV3KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0VGhlbWUoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5hcHAgYXMgYW55KS5nZXRUaGVtZSgpIGFzIHN0cmluZ1xuICAgIH1cbn1cbiIsICJjb25zdCBsb2NhbGVzTWFwOiBNYXA8c3RyaW5nLCBzdHJpbmc+ID0gbmV3IE1hcCgpXG5cbmNvbnN0IGxvY2FsZXMgPSBbXG5cdHsga2V5OiAnYWYnLCBuYW1lOiAnQWZyaWthYW5zJyB9LFxuXHR7IGtleTogJ2FtJywgbmFtZTogJ0FtaGFyaWMnIH0sXG5cdHsga2V5OiAnYXItZHonLCBuYW1lOiAnQXJhYmljIChBbGdlcmlhKScgfSxcblx0eyBrZXk6ICdhci1pcScsIG5hbWU6ICcgQXJhYmljIChJcmFxKScgfSxcblx0eyBrZXk6ICdhci1rdycsIG5hbWU6ICdBcmFiaWMgKEt1d2FpdCknIH0sXG5cdHsga2V5OiAnYXItbHknLCBuYW1lOiAnQXJhYmljIChMeWJpYSknIH0sXG5cdHsga2V5OiAnYXItbWEnLCBuYW1lOiAnQXJhYmljIChNb3JvY2NvKScgfSxcblx0eyBrZXk6ICdhci1zYScsIG5hbWU6ICdBcmFiaWMgKFNhdWRpIEFyYWJpYSknIH0sXG5cdHsga2V5OiAnYXItdG4nLCBuYW1lOiAnIEFyYWJpYyAoVHVuaXNpYSknIH0sXG5cdHsga2V5OiAnYXInLCBuYW1lOiAnQXJhYmljJyB9LFxuXHR7IGtleTogJ2F6JywgbmFtZTogJ0F6ZXJiYWlqYW5pJyB9LFxuXHR7IGtleTogJ2JlJywgbmFtZTogJ0JlbGFydXNpYW4nIH0sXG5cdHsga2V5OiAnYmcnLCBuYW1lOiAnQnVsZ2FyaWFuJyB9LFxuXHR7IGtleTogJ2JpJywgbmFtZTogJ0Jpc2xhbWEnIH0sXG5cdHsga2V5OiAnYm0nLCBuYW1lOiAnQmFtYmFyYScgfSxcblx0eyBrZXk6ICdibi1iZCcsIG5hbWU6ICdCZW5nYWxpIChCYW5nbGFkZXNoKScgfSxcblx0eyBrZXk6ICdibicsIG5hbWU6ICdCZW5nYWxpJyB9LFxuXHR7IGtleTogJ2JvJywgbmFtZTogJ1RpYmV0YW4nIH0sXG5cdHsga2V5OiAnYnInLCBuYW1lOiAnQnJldG9uJyB9LFxuXHR7IGtleTogJ2JzJywgbmFtZTogJ0Jvc25pYW4nIH0sXG5cdHsga2V5OiAnY2EnLCBuYW1lOiAnQ2F0YWxhbicgfSxcblx0eyBrZXk6ICdjcycsIG5hbWU6ICdDemVjaCcgfSxcblx0eyBrZXk6ICdjdicsIG5hbWU6ICdDaHV2YXNoJyB9LFxuXHR7IGtleTogJ2N5JywgbmFtZTogJ1dlbHNoJyB9LFxuXHR7IGtleTogJ2RhJywgbmFtZTogJ0RhbmlzaCcgfSxcblx0eyBrZXk6ICdkZS1hdCcsIG5hbWU6ICdHZXJtYW4gKEF1c3RyaWEpJyB9LFxuXHR7IGtleTogJ2RlLWNoJywgbmFtZTogJ0dlcm1hbiAoU3dpdHplcmxhbmQpJyB9LFxuXHR7IGtleTogJ2RlJywgbmFtZTogJ0dlcm1hbicgfSxcblx0eyBrZXk6ICdkdicsIG5hbWU6ICdNYWxkaXZpYW4nIH0sXG5cdHsga2V5OiAnZWwnLCBuYW1lOiAnR3JlZWsnIH0sXG5cdHsga2V5OiAnZW4tYXUnLCBuYW1lOiAnRW5nbGlzaCAoQXVzdHJhbGlhKScgfSxcblx0eyBrZXk6ICdlbi1jYScsIG5hbWU6ICdFbmdsaXNoIChDYW5hZGEpJyB9LFxuXHR7IGtleTogJ2VuLWdiJywgbmFtZTogJ0VuZ2xpc2ggKFVuaXRlZCBLaW5nZG9tKScgfSxcblx0eyBrZXk6ICdlbi1pZScsIG5hbWU6ICdFbmdsaXNoIChJcmVsYW5kKScgfSxcblx0eyBrZXk6ICdlbi1pbCcsIG5hbWU6ICdFbmdsaXNoIChJc3JhZWwpJyB9LFxuXHR7IGtleTogJ2VuLWluJywgbmFtZTogJ0VuZ2xpc2ggKEluZGlhKScgfSxcblx0eyBrZXk6ICdlbi1ueicsIG5hbWU6ICdFbmdsaXNoIChOZXcgWmVhbGFuZCknIH0sXG5cdHsga2V5OiAnZW4tc2cnLCBuYW1lOiAnRW5nbGlzaCAoU2luZ2Fwb3JlKScgfSxcblx0eyBrZXk6ICdlbi10dCcsIG5hbWU6ICdFbmdsaXNoIChUcmluaWRhZCAmIFRvYmFnbyknIH0sXG5cdHsga2V5OiAnZW4nLCBuYW1lOiAnRW5nbGlzaCcgfSxcblx0eyBrZXk6ICdlbycsIG5hbWU6ICdFc3BlcmFudG8nIH0sXG5cdHsga2V5OiAnZXMtZG8nLCBuYW1lOiAnU3BhbmlzaCAoRG9taW5pY2FuIFJlcHVibGljKScgfSxcblx0eyBrZXk6ICdlcy1teCcsIG5hbWU6ICdTcGFuaXNoIChNZXhpY28pJyB9LFxuXHR7IGtleTogJ2VzLXByJywgbmFtZTogJ1NwYW5pc2ggKFB1ZXJ0byBSaWNvKScgfSxcblx0eyBrZXk6ICdlcy11cycsIG5hbWU6ICdTcGFuaXNoIChVbml0ZWQgU3RhdGVzKScgfSxcblx0eyBrZXk6ICdlcycsIG5hbWU6ICdTcGFuaXNoJyB9LFxuXHR7IGtleTogJ2V0JywgbmFtZTogJ0VzdG9uaWFuJyB9LFxuXHR7IGtleTogJ2V1JywgbmFtZTogJ0Jhc3F1ZScgfSxcblx0eyBrZXk6ICdmYScsIG5hbWU6ICdQZXJzaWFuJyB9LFxuXHR7IGtleTogJ2ZpJywgbmFtZTogJ0Zpbm5pc2gnIH0sXG5cdHsga2V5OiAnZm8nLCBuYW1lOiAnRmFyb2VzZScgfSxcblx0eyBrZXk6ICdmci1jYScsIG5hbWU6ICdGcmVuY2ggKENhbmFkYSknIH0sXG5cdHsga2V5OiAnZnItY2gnLCBuYW1lOiAnRnJlbmNoIChTd2l0emVybGFuZCknIH0sXG5cdHsga2V5OiAnZnInLCBuYW1lOiAnRnJlbmNoJyB9LFxuXHR7IGtleTogJ2Z5JywgbmFtZTogJ0ZyaXNpYW4nIH0sXG5cdHsga2V5OiAnZ2EnLCBuYW1lOiAnSXJpc2ggb3IgSXJpc2ggR2FlbGljJyB9LFxuXHR7IGtleTogJ2dkJywgbmFtZTogJ1Njb3R0aXNoIEdhZWxpYycgfSxcblx0eyBrZXk6ICdnbCcsIG5hbWU6ICdHYWxpY2lhbicgfSxcblx0eyBrZXk6ICdnb20tbGF0bicsIG5hbWU6ICdLb25rYW5pIExhdGluIHNjcmlwdCcgfSxcblx0eyBrZXk6ICdndScsIG5hbWU6ICdHdWphcmF0aScgfSxcblx0eyBrZXk6ICdoZScsIG5hbWU6ICdIZWJyZXcnIH0sXG5cdHsga2V5OiAnaGknLCBuYW1lOiAnSGluZGknIH0sXG5cdHsga2V5OiAnaHInLCBuYW1lOiAnQ3JvYXRpYW4nIH0sXG5cdHsga2V5OiAnaHQnLCBuYW1lOiAnSGFpdGlhbiBDcmVvbGUgKEhhaXRpKScgfSxcblx0eyBrZXk6ICdodScsIG5hbWU6ICdIdW5nYXJpYW4nIH0sXG5cdHsga2V5OiAnaHktYW0nLCBuYW1lOiAnQXJtZW5pYW4nIH0sXG5cdHsga2V5OiAnaWQnLCBuYW1lOiAnSW5kb25lc2lhbicgfSxcblx0eyBrZXk6ICdpcycsIG5hbWU6ICdJY2VsYW5kaWMnIH0sXG5cdHsga2V5OiAnaXQtY2gnLCBuYW1lOiAnSXRhbGlhbiAoU3dpdHplcmxhbmQpJyB9LFxuXHR7IGtleTogJ2l0JywgbmFtZTogJ0l0YWxpYW4nIH0sXG5cdHsga2V5OiAnamEnLCBuYW1lOiAnSmFwYW5lc2UnIH0sXG5cdHsga2V5OiAnanYnLCBuYW1lOiAnSmF2YW5lc2UnIH0sXG5cdHsga2V5OiAna2EnLCBuYW1lOiAnR2VvcmdpYW4nIH0sXG5cdHsga2V5OiAna2snLCBuYW1lOiAnS2F6YWtoJyB9LFxuXHR7IGtleTogJ2ttJywgbmFtZTogJ0NhbWJvZGlhbicgfSxcblx0eyBrZXk6ICdrbicsIG5hbWU6ICdLYW5uYWRhJyB9LFxuXHR7IGtleTogJ2tvJywgbmFtZTogJ0tvcmVhbicgfSxcblx0eyBrZXk6ICdrdScsIG5hbWU6ICdLdXJkaXNoJyB9LFxuXHR7IGtleTogJ2t5JywgbmFtZTogJ0t5cmd5eicgfSxcblx0eyBrZXk6ICdsYicsIG5hbWU6ICdMdXhlbWJvdXJnaXNoJyB9LFxuXHR7IGtleTogJ2xvJywgbmFtZTogJ0xhbycgfSxcblx0eyBrZXk6ICdsdCcsIG5hbWU6ICdMaXRodWFuaWFuJyB9LFxuXHR7IGtleTogJ2x2JywgbmFtZTogJ0xhdHZpYW4nIH0sXG5cdHsga2V5OiAnbWUnLCBuYW1lOiAnTW9udGVuZWdyaW4nIH0sXG5cdHsga2V5OiAnbWknLCBuYW1lOiAnTWFvcmknIH0sXG5cdHsga2V5OiAnbWsnLCBuYW1lOiAnTWFjZWRvbmlhbicgfSxcblx0eyBrZXk6ICdtbCcsIG5hbWU6ICdNYWxheWFsYW0nIH0sXG5cdHsga2V5OiAnbW4nLCBuYW1lOiAnTW9uZ29saWFuJyB9LFxuXHR7IGtleTogJ21yJywgbmFtZTogJ01hcmF0aGknIH0sXG5cdHsga2V5OiAnbXMtbXknLCBuYW1lOiAnTWFsYXknIH0sXG5cdHsga2V5OiAnbXMnLCBuYW1lOiAnTWFsYXknIH0sXG5cdHsga2V5OiAnbXQnLCBuYW1lOiAnTWFsdGVzZSAoTWFsdGEpJyB9LFxuXHR7IGtleTogJ215JywgbmFtZTogJ0J1cm1lc2UnIH0sXG5cdHsga2V5OiAnbmInLCBuYW1lOiAnTm9yd2VnaWFuIEJva21cdTAwRTVsJyB9LFxuXHR7IGtleTogJ25lJywgbmFtZTogJ05lcGFsZXNlJyB9LFxuXHR7IGtleTogJ25sLWJlJywgbmFtZTogJ0R1dGNoIChCZWxnaXVtKScgfSxcblx0eyBrZXk6ICdubCcsIG5hbWU6ICdEdXRjaCcgfSxcblx0eyBrZXk6ICdubicsIG5hbWU6ICdOeW5vcnNrJyB9LFxuXHR7IGtleTogJ29jLWxuYycsIG5hbWU6ICdPY2NpdGFuLCBsZW5nYWRvY2lhbiBkaWFsZWN0ZScgfSxcblx0eyBrZXk6ICdwYS1pbicsIG5hbWU6ICdQdW5qYWJpIChJbmRpYSknIH0sXG5cdHsga2V5OiAncGwnLCBuYW1lOiAnUG9saXNoJyB9LFxuXHR7IGtleTogJ3B0LWJyJywgbmFtZTogJ1BvcnR1Z3Vlc2UgKEJyYXppbCknIH0sXG5cdHsga2V5OiAncHQnLCBuYW1lOiAnUG9ydHVndWVzZScgfSxcblx0eyBrZXk6ICdybicsIG5hbWU6ICdLaXJ1bmRpJyB9LFxuXHR7IGtleTogJ3NkJywgbmFtZTogJ1NpbmRoaScgfSxcblx0eyBrZXk6ICdzZScsIG5hbWU6ICdOb3J0aGVybiBTYW1pJyB9LFxuXHR7IGtleTogJ3NpJywgbmFtZTogJ1NpbmhhbGVzZScgfSxcblx0eyBrZXk6ICdzaycsIG5hbWU6ICdTbG92YWsnIH0sXG5cdHsga2V5OiAnc2wnLCBuYW1lOiAnU2xvdmVuaWFuJyB9LFxuXHR7IGtleTogJ3NxJywgbmFtZTogJ0FsYmFuaWFuJyB9LFxuXHR7IGtleTogJ3NyLWN5cmwnLCBuYW1lOiAnU2VyYmlhbiBDeXJpbGxpYycgfSxcblx0eyBrZXk6ICdzcicsIG5hbWU6ICdTZXJiaWFuJyB9LFxuXHR7IGtleTogJ3NzJywgbmFtZTogJ3NpU3dhdGknIH0sXG5cdHsga2V5OiAnc3YtZmknLCBuYW1lOiAnRmlubGFuZCBTd2VkaXNoJyB9LFxuXHR7IGtleTogJ3N2JywgbmFtZTogJ1N3ZWRpc2gnIH0sXG5cdHsga2V5OiAnc3cnLCBuYW1lOiAnU3dhaGlsaScgfSxcblx0eyBrZXk6ICd0YScsIG5hbWU6ICdUYW1pbCcgfSxcblx0eyBrZXk6ICd0ZScsIG5hbWU6ICdUZWx1Z3UnIH0sXG5cdHsga2V5OiAndGV0JywgbmFtZTogJ1RldHVuIERpbGkgKEVhc3QgVGltb3IpJyB9LFxuXHR7IGtleTogJ3RnJywgbmFtZTogJ1RhamlrJyB9LFxuXHR7IGtleTogJ3RoJywgbmFtZTogJ1RoYWknIH0sXG5cdHsga2V5OiAndGsnLCBuYW1lOiAnVHVya21lbicgfSxcblx0eyBrZXk6ICd0bC1waCcsIG5hbWU6ICdUYWdhbG9nIChQaGlsaXBwaW5lcyknIH0sXG5cdHsga2V5OiAndGxoJywgbmFtZTogJ0tsaW5nb24nIH0sXG5cdHsga2V5OiAndHInLCBuYW1lOiAnVHVya2lzaCcgfSxcblx0eyBrZXk6ICd0emwnLCBuYW1lOiAnVGFsb3NzYW4nIH0sXG5cdHsga2V5OiAndHptLWxhdG4nLCBuYW1lOiAnQ2VudHJhbCBBdGxhcyBUYW1hemlnaHQgTGF0aW4nIH0sXG5cdHsga2V5OiAndHptJywgbmFtZTogJ0NlbnRyYWwgQXRsYXMgVGFtYXppZ2h0JyB9LFxuXHR7IGtleTogJ3VnLWNuJywgbmFtZTogJ1V5Z2h1ciAoQ2hpbmEpJyB9LFxuXHR7IGtleTogJ3VrJywgbmFtZTogJ1VrcmFpbmlhbicgfSxcblx0eyBrZXk6ICd1cicsIG5hbWU6ICdVcmR1JyB9LFxuXHR7IGtleTogJ3V6LWxhdG4nLCBuYW1lOiAnVXpiZWsgTGF0aW4nIH0sXG5cdHsga2V5OiAndXonLCBuYW1lOiAnVXpiZWsnIH0sXG5cdHsga2V5OiAndmknLCBuYW1lOiAnVmlldG5hbWVzZScgfSxcblx0eyBrZXk6ICd4LXBzZXVkbycsIG5hbWU6ICdQc2V1ZG8nIH0sXG5cdHsga2V5OiAneW8nLCBuYW1lOiAnWW9ydWJhIE5pZ2VyaWEnIH0sXG5cdHsga2V5OiAnemgtY24nLCBuYW1lOiAnQ2hpbmVzZSAoQ2hpbmEpJyB9LFxuXHR7IGtleTogJ3poLWhrJywgbmFtZTogJ0NoaW5lc2UgKEhvbmcgS29uZyknIH0sXG5cdHsga2V5OiAnemgtdHcnLCBuYW1lOiAnQ2hpbmVzZSAoVGFpd2FuKScgfSxcblx0eyBrZXk6ICd6aCcsIG5hbWU6ICdDaGluZXNlJyB9LFxuXHR7IGtleTogJ3J3JywgbmFtZTogJ0tpbnlhcndhbmRhIChSd2FuZGEpJyB9LFxuXHR7IGtleTogJ3J1JywgbmFtZTogJ1J1c3NpYW4nIH0sXG5cdHsga2V5OiAncm8nLCBuYW1lOiAnUm9tYW5pYW4nIH1cbl07XG5cbmxvY2FsZXMuZm9yRWFjaCgob2JqKSA9PiB7XG5cdGxvY2FsZXNNYXAuc2V0KG9iai5rZXksIG9iai5uYW1lKVxufSlcblxuZXhwb3J0IGRlZmF1bHQgbG9jYWxlc01hcDsiLCAiaW1wb3J0IGxvY2FsZXMgZnJvbSAnLi9sb2NhbGVzJztcblxuXG5leHBvcnQgY29uc3QgZGVmYXVsdFdlZWtkYXlzID0gW1xuXHQnU3VuZGF5Jyxcblx0J01vbmRheScsXG5cdCdUdWVzZGF5Jyxcblx0J1dlZG5lc2RheScsXG5cdCdUaHVyc2RheScsXG5cdCdGcmlkYXknLFxuXHQnU2F0dXJkYXknXG5dO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRXZWVrZGF5c1Nob3J0ID0gWydTdScsICdNbycsICdUdScsICdXZScsICdUaCcsICdGcicsICdTYSddO1xuXG5leHBvcnQgY29uc3Qgc3lzTG9jYWxlS2V5ID1cblx0bmF2aWdhdG9yLmxhbmd1YWdlcy5maW5kKChsb2NhbGUpID0+IGxvY2FsZXMuaGFzKGxvY2FsZS50b0xvY2FsZUxvd2VyQ2FzZSgpKSkgfHxcblx0bmF2aWdhdG9yLmxhbmd1YWdlc1swXTtcblxuY29uc3Qgc3lzTG9jYWxlTW9tZW50ID0gd2luZG93Lm1vbWVudCgpLmNsb25lKCkubG9jYWxlKHN5c0xvY2FsZUtleSk7XG5leHBvcnQgY29uc3Qgc3lzV2Vla1N0YXJ0SWQgPSBzeXNMb2NhbGVNb21lbnQubG9jYWxlRGF0YSgpLmZpcnN0RGF5T2ZXZWVrKCk7XG5leHBvcnQgY29uc3Qgc3lzV2Vla1N0YXJ0TmFtZSA9IGRlZmF1bHRXZWVrZGF5c1tzeXNXZWVrU3RhcnRJZF07IiwgImltcG9ydCB7IHR5cGUgSUdyYW51bGFyaXR5IH0gZnJvbSBcIi4vaW9cIjtcblxuZXhwb3J0IGNvbnN0IFZJRVdfVFlQRSA9ICdwZXJpb2RpYy1ub3Rlcy1jYWxlbmRhci12aWV3JztcbmV4cG9ydCBjb25zdCBncmFudWxhcml0aWVzID0gWydkYXknLCAnd2VlaycsICdtb250aCcsICdxdWFydGVyJywgJ3llYXInXSBhcyBjb25zdDtcbmV4cG9ydCBjb25zdCBncmFudWxhcml0aWVzQ2FwaXRhbGl6ZSA9IFsnRGF5JywgJ1dlZWsnLCAnTW9udGgnLCAnUXVhcnRlcicsICdZZWFyJ10gYXMgY29uc3Q7XG5leHBvcnQgY29uc3QgdG9nZ2xlUGVyaW9kcyA9IFsnZGF5cycsICdtb250aHMnLCAneWVhcnMnXSBhcyBjb25zdDtcblxuZXhwb3J0IGNvbnN0IG1vbnRoc0luZGV4ZXNJblF1YXJ0ZXJzID0gW1xuICAgIFswLCAxLCAyXSxcbiAgICBbMywgNCwgNV0sXG4gICAgWzYsIDcsIDhdLFxuICAgIFs5LCAxMCwgMTFdXG5dIGFzIGNvbnN0O1xuZXhwb3J0IGNvbnN0IFlFQVJTX1JBTkdFX1NJWkUgPSAxMlxuXG5leHBvcnQgY29uc3QgU1RJQ0tFUl9UQUdfUFJFRklYID0gJyNzdGlja2VyLSc7XG5cbmV4cG9ydCBjb25zdCBDQUxFTkRBUl9QT1BPVkVSX0lEID0gJ2NhbGVuZGFyLXBvcG92ZXInO1xuZXhwb3J0IGNvbnN0IFNUSUNLRVJfUE9QT1ZFUl9JRCA9ICdzdGlja2VyLXBvcG92ZXInO1xuZXhwb3J0IGNvbnN0IEZJTEVfTUVOVV9QT1BPVkVSX0lEID0gJ2ZpbGUtbWVudS1wb3BvdmVyJztcblxuZXhwb3J0IGNvbnN0IE1PREFMX0NMQVNTID0gJ21vZGFsJztcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfREFJTFlfTk9URV9GT1JNQVQgPSBcIllZWVktTU0tRERcIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1dFRUtMWV9OT1RFX0ZPUk1BVCA9IFwiZ2dnZy1bV113d1wiO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfTU9OVEhMWV9OT1RFX0ZPUk1BVCA9IFwiWVlZWS1NTVwiO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUVVBUlRFUkxZX05PVEVfRk9STUFUID0gXCJZWVlZLVtRXVFcIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1lFQVJMWV9OT1RFX0ZPUk1BVCA9IFwiWVlZWVwiO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9GT1JNQVRTID0ge1xuICAgIGRhaWx5OiBERUZBVUxUX0RBSUxZX05PVEVfRk9STUFULFxuICAgIHdlZWtseTogREVGQVVMVF9XRUVLTFlfTk9URV9GT1JNQVQsXG4gICAgbW9udGhseTogREVGQVVMVF9NT05USExZX05PVEVfRk9STUFULFxuICAgIHF1YXJ0ZXJseTogREVGQVVMVF9RVUFSVEVSTFlfTk9URV9GT1JNQVQsXG4gICAgeWVhcmx5OiBERUZBVUxUX1lFQVJMWV9OT1RFX0ZPUk1BVCxcbn07XG5leHBvcnQgY29uc3QgREVGQVVMVF9GT1JNQVRTX1BFUl9HUkFOVUxBUklUWTogUmVjb3JkPElHcmFudWxhcml0eSwgc3RyaW5nPiA9IHtcbiAgICBkYXk6IERFRkFVTFRfREFJTFlfTk9URV9GT1JNQVQsXG4gICAgd2VlazogREVGQVVMVF9XRUVLTFlfTk9URV9GT1JNQVQsXG4gICAgbW9udGg6IERFRkFVTFRfTU9OVEhMWV9OT1RFX0ZPUk1BVCxcbiAgICBxdWFydGVyOiBERUZBVUxUX1FVQVJURVJMWV9OT1RFX0ZPUk1BVCxcbiAgICB5ZWFyOiBERUZBVUxUX1lFQVJMWV9OT1RFX0ZPUk1BVCxcbn07XG5cblxuZXhwb3J0IGNvbnN0IFBFUklPRElDX05PVEVTX1BMVUdJTl9JRCA9ICdwZXJpb2RpYy1ub3RlcydcbmV4cG9ydCBjb25zdCBEQUlMWV9OT1RFU19QTFVHSU5fSUQgPSAnZGFpbHktbm90ZXMnXG5leHBvcnQgY29uc3QgTkxEQVRFU19QTFVHSU5fSUQgPSAnbmxkYXRlcy1vYnNpZGlhbidcbiIsICJpbXBvcnQgeyB0eXBlIElHcmFudWxhcml0eSB9IGZyb20gXCJAL2lvXCI7XG5pbXBvcnQgeyBzeXNMb2NhbGVLZXksIHN5c1dlZWtTdGFydElkIH0gZnJvbSAnLi4vbG9jYWxpemF0aW9uJztcbmltcG9ydCB7IERFRkFVTFRfRk9STUFUUywgZ3JhbnVsYXJpdGllcyB9IGZyb20gXCJAL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBlcmlvZFNldHRpbmdzIHtcbiAgICBlbmFibGVkOiBib29sZWFuO1xuICAgIG9wZW5BdFN0YXJ0dXA6IGJvb2xlYW47XG5cbiAgICBmb3JtYXQ6IHN0cmluZztcbiAgICBmb2xkZXI6IHN0cmluZztcbiAgICB0ZW1wbGF0ZVBhdGg/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVNldHRpbmdzIHtcbiAgICBub3RlczogUmVjb3JkPElHcmFudWxhcml0eSwgUGVyaW9kU2V0dGluZ3M+O1xuICAgIC8qKiBQb3NpdGlvbiBvZiB0aGUgY2FsZW5kYXIgdmlldyBsZWFmICgnbGVmdCcgb3IgJ3JpZ2h0JykgKi9cbiAgICB2aWV3TGVhZlBvc2l0aW9uOiAnbGVmdCcgfCAncmlnaHQnO1xuXG4gICAgdmlld01vZGU6ICdkZWRpY2F0ZWQtcGFuZWwnIHwgJ2Zsb2F0aW5nLXdpbmRvdyc7XG5cbiAgICAvKiogV2hldGhlciB0byBzaG93IGEgY29uZmlybWF0aW9uIGRpYWxvZyBiZWZvcmUgY3JlYXRpbmcgYSBuZXcgbm90ZSAqL1xuICAgIHNob3VsZENvbmZpcm1CZWZvcmVDcmVhdGU6IGJvb2xlYW47XG5cbiAgICAvKiogU3RhcnRpbmcgeWVhciBmb3IgdGhlIHllYXIgcmFuZ2Ugc2VsZWN0b3IgKi9cbiAgICB5ZWFyc1Jhbmdlc1N0YXJ0OiAyMDIwO1xuXG4gICAgLyoqIFdoZXRoZXIgdG8gYXV0b21hdGljYWxseSBwcmV2aWV3IG5vdGVzIG9uIGhvdmVyICovXG4gICAgYXV0b0hvdmVyUHJldmlldzogYm9vbGVhbjtcblxuICAgIC8qKiBXaGV0aGVyIHRvIG9wZW4gdGhlIGNhbGVuZGFyIHBvcG92ZXIgd2hlbiBob3ZlcmluZyBvdmVyIHRoZSByaWJib24gaWNvbiAqL1xuICAgIG9wZW5Qb3BvdmVyT25SaWJib25Ib3ZlcjogYm9vbGVhbjtcblxuICAgIC8qKiBUT0RPOiBEZWZhdWx0IGdyYW51bGFyaXR5IGZvciB0aGUgY3JlYXRlL3JlcGxhY2UvbGluayBkYXRlIG1vZGFsICovXG4gICAgY3JyTmxkTW9kYWxHcmFudWxhcml0eTogSUdyYW51bGFyaXR5O1xuXG4gICAgLyoqIExvY2FsZSBhbmQgZGlzcGxheSBzZXR0aW5ncyAqL1xuICAgIGxvY2FsZVNldHRpbmdzOiB7XG4gICAgICAgIC8qKiBXaGV0aGVyIHRvIHNob3cgd2VlayBudW1iZXJzIGluIHRoZSBjYWxlbmRhciAqL1xuICAgICAgICBzaG93V2Vla051bXM6IGJvb2xlYW47XG5cbiAgICAgICAgLyoqIFdoZXRoZXIgdG8gc2hvdyBxdWFydGVyIG51bWJlcnMgaW4gdGhlIGNhbGVuZGFyICovXG4gICAgICAgIHNob3dRdWFydGVyTnVtczogYm9vbGVhbjtcblxuICAgICAgICAvKiogT3ZlcnJpZGUgZm9yIHRoZSBkZWZhdWx0IGxvY2FsZSAqL1xuICAgICAgICBsb2NhbGVPdmVycmlkZTogc3RyaW5nO1xuXG4gICAgICAgIC8qKiBJRCBvZiB0aGUgZGF5IHRvIHN0YXJ0IHRoZSB3ZWVrICgwIGZvciBTdW5kYXksIDEgZm9yIE1vbmRheSwgZXRjLikgKi9cbiAgICAgICAgd2Vla1N0YXJ0SWQ6IG51bWJlcjtcbiAgICB9O1xuXG4gICAgLyoqIFNldHRpbmdzIGZvciBjbG9zaW5nIHBvcG92ZXJzICovXG4gICAgcG9wb3ZlcnNDbG9zaW5nOiB7XG4gICAgICAgIC8qKiBXaGV0aGVyIHRvIGNsb3NlIHBvcG92ZXJzIG9uZSBieSBvbmUgd2hlbiBjbGlja2luZyBvdXRzaWRlICovXG4gICAgICAgIGNsb3NlUG9wb3ZlcnNPbmVCeU9uZU9uQ2xpY2tPdXQ6IGJvb2xlYW47XG5cbiAgICAgICAgLyoqIFdoZXRoZXIgdG8gY2xvc2UgcG9wb3ZlcnMgb25lIGJ5IG9uZSB3aGVuIHByZXNzaW5nIEVzYyAqL1xuICAgICAgICBjbG9zZVBvcG92ZXJzT25lQnlPbmVPbkVzY0tleWRvd246IGJvb2xlYW47XG5cbiAgICAgICAgLyoqIENsb3NlIHBvcG92ZXJzIHdoZW4gcHJlc3NpbmcgRXNjIGluIHRoZSBzZWFyY2ggaW5wdXQgaW5zdGVhZCBvZiBkZWZhdWx0IGJsdXIqL1xuICAgICAgICBjbG9zZU9uRXNjU3RpY2tlclNlYXJjaElucHV0OiBib29sZWFuO1xuICAgIH07XG5cbiAgICAvKiogVmFsaWQgZGF0ZSBmb3JtYXRzIGZvciBlYWNoIGdyYW51bGFyaXR5ICovXG4gICAgdmFsaWRGb3JtYXRzOiBSZWNvcmQ8SUdyYW51bGFyaXR5LCBzdHJpbmdbXT47XG5cbiAgICAvKiogV2hldGhlciB0byBhbGxvdyBzd2l0Y2hpbmcgbG9jYWxlcyBmcm9tIHRoZSBDb21tYW5kIFBhbGV0dGUgKi9cbiAgICBhbGxvd0xvY2FsZXNTd2l0Y2hGcm9tQ29tbWFuZFBhbGV0dGU6IGJvb2xlYW47XG5cbiAgICAvKiogRm9ybWF0IHNldHRpbmdzIGZvciBkaWZmZXJlbnQgcGVyaW9kaWNpdGllcyAqL1xuICAgIC8vIGZvcm1hdHM6IElGb3JtYXRzU2V0dGluZ3M7XG59XG5cbmNvbnN0IERFRkFVTFRfUEVSSU9ESUNfQ09ORklHOiBQZXJpb2RTZXR0aW5ncyA9IE9iamVjdC5mcmVlemUoe1xuICAgIGVuYWJsZWQ6IGZhbHNlLFxuICAgIG9wZW5BdFN0YXJ0dXA6IGZhbHNlLFxuXG4gICAgZm9ybWF0OiBcIlwiLFxuICAgIHRlbXBsYXRlUGF0aDogXCJcIixcbiAgICBmb2xkZXI6IFwiXCIsXG59KTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfU0VUVElOR1M6IElTZXR0aW5ncyA9IE9iamVjdC5mcmVlemUoe1xuICAgIG5vdGVzOiBPYmplY3QuZnJvbUVudHJpZXMoZ3JhbnVsYXJpdGllcy5tYXAoXG4gICAgICAgIChncmFudWxhcml0eSkgPT4gW2dyYW51bGFyaXR5LCBERUZBVUxUX1BFUklPRElDX0NPTkZJR10pXG4gICAgKSBhcyBSZWNvcmQ8SUdyYW51bGFyaXR5LCBQZXJpb2RTZXR0aW5ncz4sXG4gICAgdmlld0xlYWZQb3NpdGlvbjogJ2xlZnQnLFxuICAgIHZpZXdNb2RlOiAnZGVkaWNhdGVkLXBhbmVsJyxcbiAgICBzaG91bGRDb25maXJtQmVmb3JlQ3JlYXRlOiB0cnVlLFxuICAgIHllYXJzUmFuZ2VzU3RhcnQ6IDIwMjAsXG4gICAgYXV0b0hvdmVyUHJldmlldzogZmFsc2UsXG4gICAgb3BlblBvcG92ZXJPblJpYmJvbkhvdmVyOiBmYWxzZSxcbiAgICBjcnJObGRNb2RhbEdyYW51bGFyaXR5OiAnZGF5JyxcblxuICAgIGxvY2FsZVNldHRpbmdzOiB7XG4gICAgICAgIHNob3dXZWVrTnVtczogZmFsc2UsXG4gICAgICAgIHNob3dRdWFydGVyTnVtczogZmFsc2UsXG4gICAgICAgIGxvY2FsZU92ZXJyaWRlOiBzeXNMb2NhbGVLZXksXG4gICAgICAgIHdlZWtTdGFydElkOiBzeXNXZWVrU3RhcnRJZFxuICAgIH0sXG5cbiAgICBwb3BvdmVyc0Nsb3Npbmc6IHtcbiAgICAgICAgY2xvc2VQb3BvdmVyc09uZUJ5T25lT25DbGlja091dDogZmFsc2UsXG4gICAgICAgIGNsb3NlUG9wb3ZlcnNPbmVCeU9uZU9uRXNjS2V5ZG93bjogdHJ1ZSxcbiAgICAgICAgY2xvc2VPbkVzY1N0aWNrZXJTZWFyY2hJbnB1dDogdHJ1ZVxuICAgIH0sXG5cbiAgICB2YWxpZEZvcm1hdHM6IHtcbiAgICAgICAgZGF5OiBbREVGQVVMVF9GT1JNQVRTLmRhaWx5XSxcbiAgICAgICAgd2VlazogW0RFRkFVTFRfRk9STUFUUy53ZWVrbHldLFxuICAgICAgICBtb250aDogW0RFRkFVTFRfRk9STUFUUy5tb250aGx5XSxcbiAgICAgICAgcXVhcnRlcjogW0RFRkFVTFRfRk9STUFUUy5xdWFydGVybHldLFxuICAgICAgICB5ZWFyOiBbREVGQVVMVF9GT1JNQVRTLnllYXJseV0sXG4gICAgfSxcbiAgICBhbGxvd0xvY2FsZXNTd2l0Y2hGcm9tQ29tbWFuZFBhbGV0dGU6IGZhbHNlLFxufSk7XG4iLCAiLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5leHBvcnQgY29uc3QgaWRlbnRpdHkgPSAoeCkgPT4geDtcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHRlbXBsYXRlIFNcbiAqIEBwYXJhbSB7VH0gdGFyXG4gKiBAcGFyYW0ge1N9IHNyY1xuICogQHJldHVybnMge1QgJiBTfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzaWduKHRhciwgc3JjKSB7XG5cdC8vIEB0cy1pZ25vcmVcblx0Zm9yIChjb25zdCBrIGluIHNyYykgdGFyW2tdID0gc3JjW2tdO1xuXHRyZXR1cm4gLyoqIEB0eXBlIHtUICYgU30gKi8gKHRhcik7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vdGhlbi9pcy1wcm9taXNlL2Jsb2IvbWFzdGVyL2luZGV4LmpzXG4vLyBEaXN0cmlidXRlZCB1bmRlciBNSVQgTGljZW5zZSBodHRwczovL2dpdGh1Yi5jb20vdGhlbi9pcy1wcm9taXNlL2Jsb2IvbWFzdGVyL0xJQ0VOU0Vcbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJucyB7dmFsdWUgaXMgUHJvbWlzZUxpa2U8YW55Pn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzX3Byb21pc2UodmFsdWUpIHtcblx0cmV0dXJuIChcblx0XHQhIXZhbHVlICYmXG5cdFx0KHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSAmJlxuXHRcdHR5cGVvZiAoLyoqIEB0eXBlIHthbnl9ICovICh2YWx1ZSkudGhlbikgPT09ICdmdW5jdGlvbidcblx0KTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZF9sb2NhdGlvbihlbGVtZW50LCBmaWxlLCBsaW5lLCBjb2x1bW4sIGNoYXIpIHtcblx0ZWxlbWVudC5fX3N2ZWx0ZV9tZXRhID0ge1xuXHRcdGxvYzogeyBmaWxlLCBsaW5lLCBjb2x1bW4sIGNoYXIgfVxuXHR9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVuKGZuKSB7XG5cdHJldHVybiBmbigpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmxhbmtfb2JqZWN0KCkge1xuXHRyZXR1cm4gT2JqZWN0LmNyZWF0ZShudWxsKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0Z1bmN0aW9uW119IGZuc1xuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBydW5fYWxsKGZucykge1xuXHRmbnMuZm9yRWFjaChydW4pO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSB0aGluZ1xuICogQHJldHVybnMge3RoaW5nIGlzIEZ1bmN0aW9ufVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNfZnVuY3Rpb24odGhpbmcpIHtcblx0cmV0dXJuIHR5cGVvZiB0aGluZyA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuLyoqIEByZXR1cm5zIHtib29sZWFufSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVfbm90X2VxdWFsKGEsIGIpIHtcblx0cmV0dXJuIGEgIT0gYSA/IGIgPT0gYiA6IGEgIT09IGIgfHwgKGEgJiYgdHlwZW9mIGEgPT09ICdvYmplY3QnKSB8fCB0eXBlb2YgYSA9PT0gJ2Z1bmN0aW9uJztcbn1cblxubGV0IHNyY191cmxfZXF1YWxfYW5jaG9yO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBlbGVtZW50X3NyY1xuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcmNfdXJsX2VxdWFsKGVsZW1lbnRfc3JjLCB1cmwpIHtcblx0aWYgKGVsZW1lbnRfc3JjID09PSB1cmwpIHJldHVybiB0cnVlO1xuXHRpZiAoIXNyY191cmxfZXF1YWxfYW5jaG9yKSB7XG5cdFx0c3JjX3VybF9lcXVhbF9hbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdH1cblx0Ly8gVGhpcyBpcyBhY3R1YWxseSBmYXN0ZXIgdGhhbiBkb2luZyBVUkwoLi4pLmhyZWZcblx0c3JjX3VybF9lcXVhbF9hbmNob3IuaHJlZiA9IHVybDtcblx0cmV0dXJuIGVsZW1lbnRfc3JjID09PSBzcmNfdXJsX2VxdWFsX2FuY2hvci5ocmVmO1xufVxuXG4vKiogQHBhcmFtIHtzdHJpbmd9IHNyY3NldCAqL1xuZnVuY3Rpb24gc3BsaXRfc3Jjc2V0KHNyY3NldCkge1xuXHRyZXR1cm4gc3Jjc2V0LnNwbGl0KCcsJykubWFwKChzcmMpID0+IHNyYy50cmltKCkuc3BsaXQoJyAnKS5maWx0ZXIoQm9vbGVhbikpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7SFRNTFNvdXJjZUVsZW1lbnQgfCBIVE1MSW1hZ2VFbGVtZW50fSBlbGVtZW50X3NyY3NldFxuICogQHBhcmFtIHtzdHJpbmcgfCB1bmRlZmluZWQgfCBudWxsfSBzcmNzZXRcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgZnVuY3Rpb24gc3Jjc2V0X3VybF9lcXVhbChlbGVtZW50X3NyY3NldCwgc3Jjc2V0KSB7XG5cdGNvbnN0IGVsZW1lbnRfdXJscyA9IHNwbGl0X3NyY3NldChlbGVtZW50X3NyY3NldC5zcmNzZXQpO1xuXHRjb25zdCB1cmxzID0gc3BsaXRfc3Jjc2V0KHNyY3NldCB8fCAnJyk7XG5cblx0cmV0dXJuIChcblx0XHR1cmxzLmxlbmd0aCA9PT0gZWxlbWVudF91cmxzLmxlbmd0aCAmJlxuXHRcdHVybHMuZXZlcnkoXG5cdFx0XHQoW3VybCwgd2lkdGhdLCBpKSA9PlxuXHRcdFx0XHR3aWR0aCA9PT0gZWxlbWVudF91cmxzW2ldWzFdICYmXG5cdFx0XHRcdC8vIFdlIG5lZWQgdG8gdGVzdCBib3RoIHdheXMgYmVjYXVzZSBWaXRlIHdpbGwgY3JlYXRlIGFuIGEgZnVsbCBVUkwgd2l0aFxuXHRcdFx0XHQvLyBgbmV3IFVSTChhc3NldCwgaW1wb3J0Lm1ldGEudXJsKS5ocmVmYCBmb3IgdGhlIGNsaWVudCB3aGVuIGBiYXNlOiAnLi8nYCwgYW5kIHRoZVxuXHRcdFx0XHQvLyByZWxhdGl2ZSBVUkxzIGluc2lkZSBzcmNzZXQgYXJlIG5vdCBhdXRvbWF0aWNhbGx5IHJlc29sdmVkIHRvIGFic29sdXRlIFVSTHMgYnlcblx0XHRcdFx0Ly8gYnJvd3NlcnMgKGluIGNvbnRyYXN0IHRvIGltZy5zcmMpLiBUaGlzIG1lYW5zIGJvdGggU1NSIGFuZCBET00gY29kZSBjb3VsZFxuXHRcdFx0XHQvLyBjb250YWluIHJlbGF0aXZlIG9yIGFic29sdXRlIFVSTHMuXG5cdFx0XHRcdChzcmNfdXJsX2VxdWFsKGVsZW1lbnRfdXJsc1tpXVswXSwgdXJsKSB8fCBzcmNfdXJsX2VxdWFsKHVybCwgZWxlbWVudF91cmxzW2ldWzBdKSlcblx0XHQpXG5cdCk7XG59XG5cbi8qKiBAcmV0dXJucyB7Ym9vbGVhbn0gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3RfZXF1YWwoYSwgYikge1xuXHRyZXR1cm4gYSAhPSBhID8gYiA9PSBiIDogYSAhPT0gYjtcbn1cblxuLyoqIEByZXR1cm5zIHtib29sZWFufSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzX2VtcHR5KG9iaikge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDA7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZV9zdG9yZShzdG9yZSwgbmFtZSkge1xuXHRpZiAoc3RvcmUgIT0gbnVsbCAmJiB0eXBlb2Ygc3RvcmUuc3Vic2NyaWJlICE9PSAnZnVuY3Rpb24nKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKGAnJHtuYW1lfScgaXMgbm90IGEgc3RvcmUgd2l0aCBhICdzdWJzY3JpYmUnIG1ldGhvZGApO1xuXHR9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJzY3JpYmUoc3RvcmUsIC4uLmNhbGxiYWNrcykge1xuXHRpZiAoc3RvcmUgPT0gbnVsbCkge1xuXHRcdGZvciAoY29uc3QgY2FsbGJhY2sgb2YgY2FsbGJhY2tzKSB7XG5cdFx0XHRjYWxsYmFjayh1bmRlZmluZWQpO1xuXHRcdH1cblx0XHRyZXR1cm4gbm9vcDtcblx0fVxuXHRjb25zdCB1bnN1YiA9IHN0b3JlLnN1YnNjcmliZSguLi5jYWxsYmFja3MpO1xuXHRyZXR1cm4gdW5zdWIudW5zdWJzY3JpYmUgPyAoKSA9PiB1bnN1Yi51bnN1YnNjcmliZSgpIDogdW5zdWI7XG59XG5cbi8qKlxuICogR2V0IHRoZSBjdXJyZW50IHZhbHVlIGZyb20gYSBzdG9yZSBieSBzdWJzY3JpYmluZyBhbmQgaW1tZWRpYXRlbHkgdW5zdWJzY3JpYmluZy5cbiAqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtc3RvcmUjZ2V0XG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtpbXBvcnQoJy4uL3N0b3JlL3B1YmxpYy5qcycpLlJlYWRhYmxlPFQ+fSBzdG9yZVxuICogQHJldHVybnMge1R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRfc3RvcmVfdmFsdWUoc3RvcmUpIHtcblx0bGV0IHZhbHVlO1xuXHRzdWJzY3JpYmUoc3RvcmUsIChfKSA9PiAodmFsdWUgPSBfKSkoKTtcblx0cmV0dXJuIHZhbHVlO1xufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gY29tcG9uZW50X3N1YnNjcmliZShjb21wb25lbnQsIHN0b3JlLCBjYWxsYmFjaykge1xuXHRjb21wb25lbnQuJCQub25fZGVzdHJveS5wdXNoKHN1YnNjcmliZShzdG9yZSwgY2FsbGJhY2spKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZV9zbG90KGRlZmluaXRpb24sIGN0eCwgJCRzY29wZSwgZm4pIHtcblx0aWYgKGRlZmluaXRpb24pIHtcblx0XHRjb25zdCBzbG90X2N0eCA9IGdldF9zbG90X2NvbnRleHQoZGVmaW5pdGlvbiwgY3R4LCAkJHNjb3BlLCBmbik7XG5cdFx0cmV0dXJuIGRlZmluaXRpb25bMF0oc2xvdF9jdHgpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGdldF9zbG90X2NvbnRleHQoZGVmaW5pdGlvbiwgY3R4LCAkJHNjb3BlLCBmbikge1xuXHRyZXR1cm4gZGVmaW5pdGlvblsxXSAmJiBmbiA/IGFzc2lnbigkJHNjb3BlLmN0eC5zbGljZSgpLCBkZWZpbml0aW9uWzFdKGZuKGN0eCkpKSA6ICQkc2NvcGUuY3R4O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0X3Nsb3RfY2hhbmdlcyhkZWZpbml0aW9uLCAkJHNjb3BlLCBkaXJ0eSwgZm4pIHtcblx0aWYgKGRlZmluaXRpb25bMl0gJiYgZm4pIHtcblx0XHRjb25zdCBsZXRzID0gZGVmaW5pdGlvblsyXShmbihkaXJ0eSkpO1xuXHRcdGlmICgkJHNjb3BlLmRpcnR5ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHJldHVybiBsZXRzO1xuXHRcdH1cblx0XHRpZiAodHlwZW9mIGxldHMgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRjb25zdCBtZXJnZWQgPSBbXTtcblx0XHRcdGNvbnN0IGxlbiA9IE1hdGgubWF4KCQkc2NvcGUuZGlydHkubGVuZ3RoLCBsZXRzLmxlbmd0aCk7XG5cdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XG5cdFx0XHRcdG1lcmdlZFtpXSA9ICQkc2NvcGUuZGlydHlbaV0gfCBsZXRzW2ldO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1lcmdlZDtcblx0XHR9XG5cdFx0cmV0dXJuICQkc2NvcGUuZGlydHkgfCBsZXRzO1xuXHR9XG5cdHJldHVybiAkJHNjb3BlLmRpcnR5O1xufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlX3Nsb3RfYmFzZShcblx0c2xvdCxcblx0c2xvdF9kZWZpbml0aW9uLFxuXHRjdHgsXG5cdCQkc2NvcGUsXG5cdHNsb3RfY2hhbmdlcyxcblx0Z2V0X3Nsb3RfY29udGV4dF9mblxuKSB7XG5cdGlmIChzbG90X2NoYW5nZXMpIHtcblx0XHRjb25zdCBzbG90X2NvbnRleHQgPSBnZXRfc2xvdF9jb250ZXh0KHNsb3RfZGVmaW5pdGlvbiwgY3R4LCAkJHNjb3BlLCBnZXRfc2xvdF9jb250ZXh0X2ZuKTtcblx0XHRzbG90LnAoc2xvdF9jb250ZXh0LCBzbG90X2NoYW5nZXMpO1xuXHR9XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVfc2xvdChcblx0c2xvdCxcblx0c2xvdF9kZWZpbml0aW9uLFxuXHRjdHgsXG5cdCQkc2NvcGUsXG5cdGRpcnR5LFxuXHRnZXRfc2xvdF9jaGFuZ2VzX2ZuLFxuXHRnZXRfc2xvdF9jb250ZXh0X2ZuXG4pIHtcblx0Y29uc3Qgc2xvdF9jaGFuZ2VzID0gZ2V0X3Nsb3RfY2hhbmdlcyhzbG90X2RlZmluaXRpb24sICQkc2NvcGUsIGRpcnR5LCBnZXRfc2xvdF9jaGFuZ2VzX2ZuKTtcblx0dXBkYXRlX3Nsb3RfYmFzZShzbG90LCBzbG90X2RlZmluaXRpb24sIGN0eCwgJCRzY29wZSwgc2xvdF9jaGFuZ2VzLCBnZXRfc2xvdF9jb250ZXh0X2ZuKTtcbn1cblxuLyoqIEByZXR1cm5zIHthbnlbXSB8IC0xfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldF9hbGxfZGlydHlfZnJvbV9zY29wZSgkJHNjb3BlKSB7XG5cdGlmICgkJHNjb3BlLmN0eC5sZW5ndGggPiAzMikge1xuXHRcdGNvbnN0IGRpcnR5ID0gW107XG5cdFx0Y29uc3QgbGVuZ3RoID0gJCRzY29wZS5jdHgubGVuZ3RoIC8gMzI7XG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuXHRcdFx0ZGlydHlbaV0gPSAtMTtcblx0XHR9XG5cdFx0cmV0dXJuIGRpcnR5O1xuXHR9XG5cdHJldHVybiAtMTtcbn1cblxuLyoqIEByZXR1cm5zIHt7fX0gKi9cbmV4cG9ydCBmdW5jdGlvbiBleGNsdWRlX2ludGVybmFsX3Byb3BzKHByb3BzKSB7XG5cdGNvbnN0IHJlc3VsdCA9IHt9O1xuXHRmb3IgKGNvbnN0IGsgaW4gcHJvcHMpIGlmIChrWzBdICE9PSAnJCcpIHJlc3VsdFtrXSA9IHByb3BzW2tdO1xuXHRyZXR1cm4gcmVzdWx0O1xufVxuXG4vKiogQHJldHVybnMge3t9fSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVfcmVzdF9wcm9wcyhwcm9wcywga2V5cykge1xuXHRjb25zdCByZXN0ID0ge307XG5cdGtleXMgPSBuZXcgU2V0KGtleXMpO1xuXHRmb3IgKGNvbnN0IGsgaW4gcHJvcHMpIGlmICgha2V5cy5oYXMoaykgJiYga1swXSAhPT0gJyQnKSByZXN0W2tdID0gcHJvcHNba107XG5cdHJldHVybiByZXN0O1xufVxuXG4vKiogQHJldHVybnMge3t9fSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVfc2xvdHMoc2xvdHMpIHtcblx0Y29uc3QgcmVzdWx0ID0ge307XG5cdGZvciAoY29uc3Qga2V5IGluIHNsb3RzKSB7XG5cdFx0cmVzdWx0W2tleV0gPSB0cnVlO1xuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59XG5cbi8qKiBAcmV0dXJucyB7KHRoaXM6IGFueSwgLi4uYXJnczogYW55W10pID0+IHZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gb25jZShmbikge1xuXHRsZXQgcmFuID0gZmFsc2U7XG5cdHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuXHRcdGlmIChyYW4pIHJldHVybjtcblx0XHRyYW4gPSB0cnVlO1xuXHRcdGZuLmNhbGwodGhpcywgLi4uYXJncyk7XG5cdH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBudWxsX3RvX2VtcHR5KHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZSA9PSBudWxsID8gJycgOiB2YWx1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldF9zdG9yZV92YWx1ZShzdG9yZSwgcmV0LCB2YWx1ZSkge1xuXHRzdG9yZS5zZXQodmFsdWUpO1xuXHRyZXR1cm4gcmV0O1xufVxuXG5leHBvcnQgY29uc3QgaGFzX3Byb3AgPSAob2JqLCBwcm9wKSA9PiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFjdGlvbl9kZXN0cm95ZXIoYWN0aW9uX3Jlc3VsdCkge1xuXHRyZXR1cm4gYWN0aW9uX3Jlc3VsdCAmJiBpc19mdW5jdGlvbihhY3Rpb25fcmVzdWx0LmRlc3Ryb3kpID8gYWN0aW9uX3Jlc3VsdC5kZXN0cm95IDogbm9vcDtcbn1cblxuLyoqIEBwYXJhbSB7bnVtYmVyIHwgc3RyaW5nfSB2YWx1ZVxuICogQHJldHVybnMge1tudW1iZXIsIHN0cmluZ119XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdF9jc3NfdW5pdCh2YWx1ZSkge1xuXHRjb25zdCBzcGxpdCA9IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUubWF0Y2goL15cXHMqKC0/W1xcZC5dKykoW15cXHNdKilcXHMqJC8pO1xuXHRyZXR1cm4gc3BsaXQgPyBbcGFyc2VGbG9hdChzcGxpdFsxXSksIHNwbGl0WzJdIHx8ICdweCddIDogWy8qKiBAdHlwZSB7bnVtYmVyfSAqLyAodmFsdWUpLCAncHgnXTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRlZGl0YWJsZV90cnV0aHlfdmFsdWVzID0gWycnLCB0cnVlLCAxLCAndHJ1ZScsICdjb250ZW50ZWRpdGFibGUnXTtcbiIsICJpbXBvcnQgeyBub29wIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbmV4cG9ydCBjb25zdCBpc19jbGllbnQgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcblxuLyoqIEB0eXBlIHsoKSA9PiBudW1iZXJ9ICovXG5leHBvcnQgbGV0IG5vdyA9IGlzX2NsaWVudCA/ICgpID0+IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKSA6ICgpID0+IERhdGUubm93KCk7XG5cbmV4cG9ydCBsZXQgcmFmID0gaXNfY2xpZW50ID8gKGNiKSA9PiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoY2IpIDogbm9vcDtcblxuLy8gdXNlZCBpbnRlcm5hbGx5IGZvciB0ZXN0aW5nXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X25vdyhmbikge1xuXHRub3cgPSBmbjtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldF9yYWYoZm4pIHtcblx0cmFmID0gZm47XG59XG4iLCAiaW1wb3J0IHsgcmFmIH0gZnJvbSAnLi9lbnZpcm9ubWVudC5qcyc7XG5cbmNvbnN0IHRhc2tzID0gbmV3IFNldCgpO1xuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBub3dcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiBydW5fdGFza3Mobm93KSB7XG5cdHRhc2tzLmZvckVhY2goKHRhc2spID0+IHtcblx0XHRpZiAoIXRhc2suYyhub3cpKSB7XG5cdFx0XHR0YXNrcy5kZWxldGUodGFzayk7XG5cdFx0XHR0YXNrLmYoKTtcblx0XHR9XG5cdH0pO1xuXHRpZiAodGFza3Muc2l6ZSAhPT0gMCkgcmFmKHJ1bl90YXNrcyk7XG59XG5cbi8qKlxuICogRm9yIHRlc3RpbmcgcHVycG9zZXMgb25seSFcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJfbG9vcHMoKSB7XG5cdHRhc2tzLmNsZWFyKCk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyB0YXNrIHRoYXQgcnVucyBvbiBlYWNoIHJhZiBmcmFtZVxuICogdW50aWwgaXQgcmV0dXJucyBhIGZhbHN5IHZhbHVlIG9yIGlzIGFib3J0ZWRcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3ByaXZhdGUuanMnKS5UYXNrQ2FsbGJhY2t9IGNhbGxiYWNrXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL3ByaXZhdGUuanMnKS5UYXNrfVxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9vcChjYWxsYmFjaykge1xuXHQvKiogQHR5cGUge2ltcG9ydCgnLi9wcml2YXRlLmpzJykuVGFza0VudHJ5fSAqL1xuXHRsZXQgdGFzaztcblx0aWYgKHRhc2tzLnNpemUgPT09IDApIHJhZihydW5fdGFza3MpO1xuXHRyZXR1cm4ge1xuXHRcdHByb21pc2U6IG5ldyBQcm9taXNlKChmdWxmaWxsKSA9PiB7XG5cdFx0XHR0YXNrcy5hZGQoKHRhc2sgPSB7IGM6IGNhbGxiYWNrLCBmOiBmdWxmaWxsIH0pKTtcblx0XHR9KSxcblx0XHRhYm9ydCgpIHtcblx0XHRcdHRhc2tzLmRlbGV0ZSh0YXNrKTtcblx0XHR9XG5cdH07XG59XG4iLCAiLyoqIEB0eXBlIHt0eXBlb2YgZ2xvYmFsVGhpc30gKi9cbmV4cG9ydCBjb25zdCBnbG9iYWxzID1cblx0dHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCdcblx0XHQ/IHdpbmRvd1xuXHRcdDogdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnXG5cdFx0PyBnbG9iYWxUaGlzXG5cdFx0OiAvLyBAdHMtaWdub3JlIE5vZGUgdHlwaW5ncyBoYXZlIHRoaXNcblx0XHQgIGdsb2JhbDtcbiIsICJpbXBvcnQgeyBnbG9iYWxzIH0gZnJvbSAnLi9nbG9iYWxzLmpzJztcblxuLyoqXG4gKiBSZXNpemUgb2JzZXJ2ZXIgc2luZ2xldG9uLlxuICogT25lIGxpc3RlbmVyIHBlciBlbGVtZW50IG9ubHkhXG4gKiBodHRwczovL2dyb3Vwcy5nb29nbGUuY29tL2EvY2hyb21pdW0ub3JnL2cvYmxpbmstZGV2L2MvejZpZW5PTlViNUEvbS9GNS1WY1VadEJBQUpcbiAqL1xuZXhwb3J0IGNsYXNzIFJlc2l6ZU9ic2VydmVyU2luZ2xldG9uIHtcblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEByZWFkb25seVxuXHQgKiBAdHlwZSB7V2Vha01hcDxFbGVtZW50LCBpbXBvcnQoJy4vcHJpdmF0ZS5qcycpLkxpc3RlbmVyPn1cblx0ICovXG5cdF9saXN0ZW5lcnMgPSAnV2Vha01hcCcgaW4gZ2xvYmFscyA/IG5ldyBXZWFrTWFwKCkgOiB1bmRlZmluZWQ7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEB0eXBlIHtSZXNpemVPYnNlcnZlcn1cblx0ICovXG5cdF9vYnNlcnZlciA9IHVuZGVmaW5lZDtcblxuXHQvKiogQHR5cGUge1Jlc2l6ZU9ic2VydmVyT3B0aW9uc30gKi9cblx0b3B0aW9ucztcblxuXHQvKiogQHBhcmFtIHtSZXNpemVPYnNlcnZlck9wdGlvbnN9IG9wdGlvbnMgKi9cblx0Y29uc3RydWN0b3Iob3B0aW9ucykge1xuXHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG5cdCAqIEBwYXJhbSB7aW1wb3J0KCcuL3ByaXZhdGUuanMnKS5MaXN0ZW5lcn0gbGlzdGVuZXJcblx0ICogQHJldHVybnMgeygpID0+IHZvaWR9XG5cdCAqL1xuXHRvYnNlcnZlKGVsZW1lbnQsIGxpc3RlbmVyKSB7XG5cdFx0dGhpcy5fbGlzdGVuZXJzLnNldChlbGVtZW50LCBsaXN0ZW5lcik7XG5cdFx0dGhpcy5fZ2V0T2JzZXJ2ZXIoKS5vYnNlcnZlKGVsZW1lbnQsIHRoaXMub3B0aW9ucyk7XG5cdFx0cmV0dXJuICgpID0+IHtcblx0XHRcdHRoaXMuX2xpc3RlbmVycy5kZWxldGUoZWxlbWVudCk7XG5cdFx0XHR0aGlzLl9vYnNlcnZlci51bm9ic2VydmUoZWxlbWVudCk7IC8vIHRoaXMgbGluZSBjYW4gcHJvYmFibHkgYmUgcmVtb3ZlZFxuXHRcdH07XG5cdH1cblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICovXG5cdF9nZXRPYnNlcnZlcigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0dGhpcy5fb2JzZXJ2ZXIgPz9cblx0XHRcdCh0aGlzLl9vYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoZW50cmllcykgPT4ge1xuXHRcdFx0XHRmb3IgKGNvbnN0IGVudHJ5IG9mIGVudHJpZXMpIHtcblx0XHRcdFx0XHRSZXNpemVPYnNlcnZlclNpbmdsZXRvbi5lbnRyaWVzLnNldChlbnRyeS50YXJnZXQsIGVudHJ5KTtcblx0XHRcdFx0XHR0aGlzLl9saXN0ZW5lcnMuZ2V0KGVudHJ5LnRhcmdldCk/LihlbnRyeSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pKVxuXHRcdCk7XG5cdH1cbn1cblxuLy8gTmVlZHMgdG8gYmUgd3JpdHRlbiBsaWtlIHRoaXMgdG8gcGFzcyB0aGUgdHJlZS1zaGFrZS10ZXN0XG5SZXNpemVPYnNlcnZlclNpbmdsZXRvbi5lbnRyaWVzID0gJ1dlYWtNYXAnIGluIGdsb2JhbHMgPyBuZXcgV2Vha01hcCgpIDogdW5kZWZpbmVkO1xuIiwgImltcG9ydCB7IGNvbnRlbnRlZGl0YWJsZV90cnV0aHlfdmFsdWVzLCBoYXNfcHJvcCB9IGZyb20gJy4vdXRpbHMuanMnO1xuXG5pbXBvcnQgeyBSZXNpemVPYnNlcnZlclNpbmdsZXRvbiB9IGZyb20gJy4vUmVzaXplT2JzZXJ2ZXJTaW5nbGV0b24uanMnO1xuXG4vLyBUcmFjayB3aGljaCBub2RlcyBhcmUgY2xhaW1lZCBkdXJpbmcgaHlkcmF0aW9uLiBVbmNsYWltZWQgbm9kZXMgY2FuIHRoZW4gYmUgcmVtb3ZlZCBmcm9tIHRoZSBET01cbi8vIGF0IHRoZSBlbmQgb2YgaHlkcmF0aW9uIHdpdGhvdXQgdG91Y2hpbmcgdGhlIHJlbWFpbmluZyBub2Rlcy5cbmxldCBpc19oeWRyYXRpbmcgPSBmYWxzZTtcblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0X2h5ZHJhdGluZygpIHtcblx0aXNfaHlkcmF0aW5nID0gdHJ1ZTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuZF9oeWRyYXRpbmcoKSB7XG5cdGlzX2h5ZHJhdGluZyA9IGZhbHNlO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBsb3dcbiAqIEBwYXJhbSB7bnVtYmVyfSBoaWdoXG4gKiBAcGFyYW0geyhpbmRleDogbnVtYmVyKSA9PiBudW1iZXJ9IGtleVxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5mdW5jdGlvbiB1cHBlcl9ib3VuZChsb3csIGhpZ2gsIGtleSwgdmFsdWUpIHtcblx0Ly8gUmV0dXJuIGZpcnN0IGluZGV4IG9mIHZhbHVlIGxhcmdlciB0aGFuIGlucHV0IHZhbHVlIGluIHRoZSByYW5nZSBbbG93LCBoaWdoKVxuXHR3aGlsZSAobG93IDwgaGlnaCkge1xuXHRcdGNvbnN0IG1pZCA9IGxvdyArICgoaGlnaCAtIGxvdykgPj4gMSk7XG5cdFx0aWYgKGtleShtaWQpIDw9IHZhbHVlKSB7XG5cdFx0XHRsb3cgPSBtaWQgKyAxO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRoaWdoID0gbWlkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gbG93O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Tm9kZUV4fSB0YXJnZXRcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiBpbml0X2h5ZHJhdGUodGFyZ2V0KSB7XG5cdGlmICh0YXJnZXQuaHlkcmF0ZV9pbml0KSByZXR1cm47XG5cdHRhcmdldC5oeWRyYXRlX2luaXQgPSB0cnVlO1xuXHQvLyBXZSBrbm93IHRoYXQgYWxsIGNoaWxkcmVuIGhhdmUgY2xhaW1fb3JkZXIgdmFsdWVzIHNpbmNlIHRoZSB1bmNsYWltZWQgaGF2ZSBiZWVuIGRldGFjaGVkIGlmIHRhcmdldCBpcyBub3QgPGhlYWQ+XG5cblx0bGV0IGNoaWxkcmVuID0gLyoqIEB0eXBlIHtBcnJheUxpa2U8Tm9kZUV4Mj59ICovICh0YXJnZXQuY2hpbGROb2Rlcyk7XG5cdC8vIElmIHRhcmdldCBpcyA8aGVhZD4sIHRoZXJlIG1heSBiZSBjaGlsZHJlbiB3aXRob3V0IGNsYWltX29yZGVyXG5cdGlmICh0YXJnZXQubm9kZU5hbWUgPT09ICdIRUFEJykge1xuXHRcdGNvbnN0IG15X2NoaWxkcmVuID0gW107XG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuXHRcdFx0Y29uc3Qgbm9kZSA9IGNoaWxkcmVuW2ldO1xuXHRcdFx0aWYgKG5vZGUuY2xhaW1fb3JkZXIgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRteV9jaGlsZHJlbi5wdXNoKG5vZGUpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRjaGlsZHJlbiA9IG15X2NoaWxkcmVuO1xuXHR9XG5cdC8qXG5cdCAqIFJlb3JkZXIgY2xhaW1lZCBjaGlsZHJlbiBvcHRpbWFsbHkuXG5cdCAqIFdlIGNhbiByZW9yZGVyIGNsYWltZWQgY2hpbGRyZW4gb3B0aW1hbGx5IGJ5IGZpbmRpbmcgdGhlIGxvbmdlc3Qgc3Vic2VxdWVuY2Ugb2Zcblx0ICogbm9kZXMgdGhhdCBhcmUgYWxyZWFkeSBjbGFpbWVkIGluIG9yZGVyIGFuZCBvbmx5IG1vdmluZyB0aGUgcmVzdC4gVGhlIGxvbmdlc3Rcblx0ICogc3Vic2VxdWVuY2Ugb2Ygbm9kZXMgdGhhdCBhcmUgY2xhaW1lZCBpbiBvcmRlciBjYW4gYmUgZm91bmQgYnlcblx0ICogY29tcHV0aW5nIHRoZSBsb25nZXN0IGluY3JlYXNpbmcgc3Vic2VxdWVuY2Ugb2YgLmNsYWltX29yZGVyIHZhbHVlcy5cblx0ICpcblx0ICogVGhpcyBhbGdvcml0aG0gaXMgb3B0aW1hbCBpbiBnZW5lcmF0aW5nIHRoZSBsZWFzdCBhbW91bnQgb2YgcmVvcmRlciBvcGVyYXRpb25zXG5cdCAqIHBvc3NpYmxlLlxuXHQgKlxuXHQgKiBQcm9vZjpcblx0ICogV2Uga25vdyB0aGF0LCBnaXZlbiBhIHNldCBvZiByZW9yZGVyaW5nIG9wZXJhdGlvbnMsIHRoZSBub2RlcyB0aGF0IGRvIG5vdCBtb3ZlXG5cdCAqIGFsd2F5cyBmb3JtIGFuIGluY3JlYXNpbmcgc3Vic2VxdWVuY2UsIHNpbmNlIHRoZXkgZG8gbm90IG1vdmUgYW1vbmcgZWFjaCBvdGhlclxuXHQgKiBtZWFuaW5nIHRoYXQgdGhleSBtdXN0IGJlIGFscmVhZHkgb3JkZXJlZCBhbW9uZyBlYWNoIG90aGVyLiBUaHVzLCB0aGUgbWF4aW1hbFxuXHQgKiBzZXQgb2Ygbm9kZXMgdGhhdCBkbyBub3QgbW92ZSBmb3JtIGEgbG9uZ2VzdCBpbmNyZWFzaW5nIHN1YnNlcXVlbmNlLlxuXHQgKi9cblx0Ly8gQ29tcHV0ZSBsb25nZXN0IGluY3JlYXNpbmcgc3Vic2VxdWVuY2Vcblx0Ly8gbTogc3Vic2VxdWVuY2UgbGVuZ3RoIGogPT4gaW5kZXggayBvZiBzbWFsbGVzdCB2YWx1ZSB0aGF0IGVuZHMgYW4gaW5jcmVhc2luZyBzdWJzZXF1ZW5jZSBvZiBsZW5ndGggalxuXHRjb25zdCBtID0gbmV3IEludDMyQXJyYXkoY2hpbGRyZW4ubGVuZ3RoICsgMSk7XG5cdC8vIFByZWRlY2Vzc29yIGluZGljZXMgKyAxXG5cdGNvbnN0IHAgPSBuZXcgSW50MzJBcnJheShjaGlsZHJlbi5sZW5ndGgpO1xuXHRtWzBdID0gLTE7XG5cdGxldCBsb25nZXN0ID0gMDtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuXHRcdGNvbnN0IGN1cnJlbnQgPSBjaGlsZHJlbltpXS5jbGFpbV9vcmRlcjtcblx0XHQvLyBGaW5kIHRoZSBsYXJnZXN0IHN1YnNlcXVlbmNlIGxlbmd0aCBzdWNoIHRoYXQgaXQgZW5kcyBpbiBhIHZhbHVlIGxlc3MgdGhhbiBvdXIgY3VycmVudCB2YWx1ZVxuXHRcdC8vIHVwcGVyX2JvdW5kIHJldHVybnMgZmlyc3QgZ3JlYXRlciB2YWx1ZSwgc28gd2Ugc3VidHJhY3Qgb25lXG5cdFx0Ly8gd2l0aCBmYXN0IHBhdGggZm9yIHdoZW4gd2UgYXJlIG9uIHRoZSBjdXJyZW50IGxvbmdlc3Qgc3Vic2VxdWVuY2Vcblx0XHRjb25zdCBzZXFfbGVuID1cblx0XHRcdChsb25nZXN0ID4gMCAmJiBjaGlsZHJlblttW2xvbmdlc3RdXS5jbGFpbV9vcmRlciA8PSBjdXJyZW50XG5cdFx0XHRcdD8gbG9uZ2VzdCArIDFcblx0XHRcdFx0OiB1cHBlcl9ib3VuZCgxLCBsb25nZXN0LCAoaWR4KSA9PiBjaGlsZHJlblttW2lkeF1dLmNsYWltX29yZGVyLCBjdXJyZW50KSkgLSAxO1xuXHRcdHBbaV0gPSBtW3NlcV9sZW5dICsgMTtcblx0XHRjb25zdCBuZXdfbGVuID0gc2VxX2xlbiArIDE7XG5cdFx0Ly8gV2UgY2FuIGd1YXJhbnRlZSB0aGF0IGN1cnJlbnQgaXMgdGhlIHNtYWxsZXN0IHZhbHVlLiBPdGhlcndpc2UsIHdlIHdvdWxkIGhhdmUgZ2VuZXJhdGVkIGEgbG9uZ2VyIHNlcXVlbmNlLlxuXHRcdG1bbmV3X2xlbl0gPSBpO1xuXHRcdGxvbmdlc3QgPSBNYXRoLm1heChuZXdfbGVuLCBsb25nZXN0KTtcblx0fVxuXHQvLyBUaGUgbG9uZ2VzdCBpbmNyZWFzaW5nIHN1YnNlcXVlbmNlIG9mIG5vZGVzIChpbml0aWFsbHkgcmV2ZXJzZWQpXG5cblx0LyoqXG5cdCAqIEB0eXBlIHtOb2RlRXgyW119XG5cdCAqL1xuXHRjb25zdCBsaXMgPSBbXTtcblx0Ly8gVGhlIHJlc3Qgb2YgdGhlIG5vZGVzLCBub2RlcyB0aGF0IHdpbGwgYmUgbW92ZWRcblxuXHQvKipcblx0ICogQHR5cGUge05vZGVFeDJbXX1cblx0ICovXG5cdGNvbnN0IHRvX21vdmUgPSBbXTtcblx0bGV0IGxhc3QgPSBjaGlsZHJlbi5sZW5ndGggLSAxO1xuXHRmb3IgKGxldCBjdXIgPSBtW2xvbmdlc3RdICsgMTsgY3VyICE9IDA7IGN1ciA9IHBbY3VyIC0gMV0pIHtcblx0XHRsaXMucHVzaChjaGlsZHJlbltjdXIgLSAxXSk7XG5cdFx0Zm9yICg7IGxhc3QgPj0gY3VyOyBsYXN0LS0pIHtcblx0XHRcdHRvX21vdmUucHVzaChjaGlsZHJlbltsYXN0XSk7XG5cdFx0fVxuXHRcdGxhc3QtLTtcblx0fVxuXHRmb3IgKDsgbGFzdCA+PSAwOyBsYXN0LS0pIHtcblx0XHR0b19tb3ZlLnB1c2goY2hpbGRyZW5bbGFzdF0pO1xuXHR9XG5cdGxpcy5yZXZlcnNlKCk7XG5cdC8vIFdlIHNvcnQgdGhlIG5vZGVzIGJlaW5nIG1vdmVkIHRvIGd1YXJhbnRlZSB0aGF0IHRoZWlyIGluc2VydGlvbiBvcmRlciBtYXRjaGVzIHRoZSBjbGFpbSBvcmRlclxuXHR0b19tb3ZlLnNvcnQoKGEsIGIpID0+IGEuY2xhaW1fb3JkZXIgLSBiLmNsYWltX29yZGVyKTtcblx0Ly8gRmluYWxseSwgd2UgbW92ZSB0aGUgbm9kZXNcblx0Zm9yIChsZXQgaSA9IDAsIGogPSAwOyBpIDwgdG9fbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdHdoaWxlIChqIDwgbGlzLmxlbmd0aCAmJiB0b19tb3ZlW2ldLmNsYWltX29yZGVyID49IGxpc1tqXS5jbGFpbV9vcmRlcikge1xuXHRcdFx0aisrO1xuXHRcdH1cblx0XHRjb25zdCBhbmNob3IgPSBqIDwgbGlzLmxlbmd0aCA/IGxpc1tqXSA6IG51bGw7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZSh0b19tb3ZlW2ldLCBhbmNob3IpO1xuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtOb2RlfSB0YXJnZXRcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmQodGFyZ2V0LCBub2RlKSB7XG5cdHRhcmdldC5hcHBlbmRDaGlsZChub2RlKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGV9IHRhcmdldFxuICogQHBhcmFtIHtzdHJpbmd9IHN0eWxlX3NoZWV0X2lkXG4gKiBAcGFyYW0ge3N0cmluZ30gc3R5bGVzXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGVuZF9zdHlsZXModGFyZ2V0LCBzdHlsZV9zaGVldF9pZCwgc3R5bGVzKSB7XG5cdGNvbnN0IGFwcGVuZF9zdHlsZXNfdG8gPSBnZXRfcm9vdF9mb3Jfc3R5bGUodGFyZ2V0KTtcblx0aWYgKCFhcHBlbmRfc3R5bGVzX3RvLmdldEVsZW1lbnRCeUlkKHN0eWxlX3NoZWV0X2lkKSkge1xuXHRcdGNvbnN0IHN0eWxlID0gZWxlbWVudCgnc3R5bGUnKTtcblx0XHRzdHlsZS5pZCA9IHN0eWxlX3NoZWV0X2lkO1xuXHRcdHN0eWxlLnRleHRDb250ZW50ID0gc3R5bGVzO1xuXHRcdGFwcGVuZF9zdHlsZXNoZWV0KGFwcGVuZF9zdHlsZXNfdG8sIHN0eWxlKTtcblx0fVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybnMge1NoYWRvd1Jvb3QgfCBEb2N1bWVudH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldF9yb290X2Zvcl9zdHlsZShub2RlKSB7XG5cdGlmICghbm9kZSkgcmV0dXJuIGRvY3VtZW50O1xuXHRjb25zdCByb290ID0gbm9kZS5nZXRSb290Tm9kZSA/IG5vZGUuZ2V0Um9vdE5vZGUoKSA6IG5vZGUub3duZXJEb2N1bWVudDtcblx0aWYgKHJvb3QgJiYgLyoqIEB0eXBlIHtTaGFkb3dSb290fSAqLyAocm9vdCkuaG9zdCkge1xuXHRcdHJldHVybiAvKiogQHR5cGUge1NoYWRvd1Jvb3R9ICovIChyb290KTtcblx0fVxuXHRyZXR1cm4gbm9kZS5vd25lckRvY3VtZW50O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybnMge0NTU1N0eWxlU2hlZXR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmRfZW1wdHlfc3R5bGVzaGVldChub2RlKSB7XG5cdGNvbnN0IHN0eWxlX2VsZW1lbnQgPSBlbGVtZW50KCdzdHlsZScpO1xuXHQvLyBGb3IgdHJhbnNpdGlvbnMgdG8gd29yayB3aXRob3V0ICdzdHlsZS1zcmM6IHVuc2FmZS1pbmxpbmUnIENvbnRlbnQgU2VjdXJpdHkgUG9saWN5LFxuXHQvLyB0aGVzZSBlbXB0eSB0YWdzIG5lZWQgdG8gYmUgYWxsb3dlZCB3aXRoIGEgaGFzaCBhcyBhIHdvcmthcm91bmQgdW50aWwgd2UgbW92ZSB0byB0aGUgV2ViIEFuaW1hdGlvbnMgQVBJLlxuXHQvLyBVc2luZyB0aGUgaGFzaCBmb3IgdGhlIGVtcHR5IHN0cmluZyAoZm9yIGFuIGVtcHR5IHRhZykgd29ya3MgaW4gYWxsIGJyb3dzZXJzIGV4Y2VwdCBTYWZhcmkuXG5cdC8vIFNvIGFzIGEgd29ya2Fyb3VuZCBmb3IgdGhlIHdvcmthcm91bmQsIHdoZW4gd2UgYXBwZW5kIGVtcHR5IHN0eWxlIHRhZ3Mgd2Ugc2V0IHRoZWlyIGNvbnRlbnQgdG8gLyogZW1wdHkgKi8uXG5cdC8vIFRoZSBoYXNoICdzaGEyNTYtOU9sTk8wRE5FZWFWekhMNFJad0NMc0JIQThXQlE4dG9CcC80RjVYVjJuYz0nIHdpbGwgdGhlbiB3b3JrIGV2ZW4gaW4gU2FmYXJpLlxuXHRzdHlsZV9lbGVtZW50LnRleHRDb250ZW50ID0gJy8qIGVtcHR5ICovJztcblx0YXBwZW5kX3N0eWxlc2hlZXQoZ2V0X3Jvb3RfZm9yX3N0eWxlKG5vZGUpLCBzdHlsZV9lbGVtZW50KTtcblx0cmV0dXJuIHN0eWxlX2VsZW1lbnQuc2hlZXQ7XG59XG5cbi8qKlxuICogQHBhcmFtIHtTaGFkb3dSb290IHwgRG9jdW1lbnR9IG5vZGVcbiAqIEBwYXJhbSB7SFRNTFN0eWxlRWxlbWVudH0gc3R5bGVcbiAqIEByZXR1cm5zIHtDU1NTdHlsZVNoZWV0fVxuICovXG5mdW5jdGlvbiBhcHBlbmRfc3R5bGVzaGVldChub2RlLCBzdHlsZSkge1xuXHRhcHBlbmQoLyoqIEB0eXBlIHtEb2N1bWVudH0gKi8gKG5vZGUpLmhlYWQgfHwgbm9kZSwgc3R5bGUpO1xuXHRyZXR1cm4gc3R5bGUuc2hlZXQ7XG59XG5cbi8qKlxuICogQHBhcmFtIHtOb2RlRXh9IHRhcmdldFxuICogQHBhcmFtIHtOb2RlRXh9IG5vZGVcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kX2h5ZHJhdGlvbih0YXJnZXQsIG5vZGUpIHtcblx0aWYgKGlzX2h5ZHJhdGluZykge1xuXHRcdGluaXRfaHlkcmF0ZSh0YXJnZXQpO1xuXHRcdGlmIChcblx0XHRcdHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkID09PSB1bmRlZmluZWQgfHxcblx0XHRcdCh0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCAhPT0gbnVsbCAmJiB0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZC5wYXJlbnROb2RlICE9PSB0YXJnZXQpXG5cdFx0KSB7XG5cdFx0XHR0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCA9IHRhcmdldC5maXJzdENoaWxkO1xuXHRcdH1cblx0XHQvLyBTa2lwIG5vZGVzIG9mIHVuZGVmaW5lZCBvcmRlcmluZ1xuXHRcdHdoaWxlICh0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCAhPT0gbnVsbCAmJiB0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZC5jbGFpbV9vcmRlciA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHR0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCA9IHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkLm5leHRTaWJsaW5nO1xuXHRcdH1cblx0XHRpZiAobm9kZSAhPT0gdGFyZ2V0LmFjdHVhbF9lbmRfY2hpbGQpIHtcblx0XHRcdC8vIFdlIG9ubHkgaW5zZXJ0IGlmIHRoZSBvcmRlcmluZyBvZiB0aGlzIG5vZGUgc2hvdWxkIGJlIG1vZGlmaWVkIG9yIHRoZSBwYXJlbnQgbm9kZSBpcyBub3QgdGFyZ2V0XG5cdFx0XHRpZiAobm9kZS5jbGFpbV9vcmRlciAhPT0gdW5kZWZpbmVkIHx8IG5vZGUucGFyZW50Tm9kZSAhPT0gdGFyZ2V0KSB7XG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUobm9kZSwgdGFyZ2V0LmFjdHVhbF9lbmRfY2hpbGQpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCA9IG5vZGUubmV4dFNpYmxpbmc7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKG5vZGUucGFyZW50Tm9kZSAhPT0gdGFyZ2V0IHx8IG5vZGUubmV4dFNpYmxpbmcgIT09IG51bGwpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQobm9kZSk7XG5cdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGV9IHRhcmdldFxuICogQHBhcmFtIHtOb2RlfSBub2RlXG4gKiBAcGFyYW0ge05vZGV9IFthbmNob3JdXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluc2VydCh0YXJnZXQsIG5vZGUsIGFuY2hvcikge1xuXHR0YXJnZXQuaW5zZXJ0QmVmb3JlKG5vZGUsIGFuY2hvciB8fCBudWxsKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGVFeH0gdGFyZ2V0XG4gKiBAcGFyYW0ge05vZGVFeH0gbm9kZVxuICogQHBhcmFtIHtOb2RlRXh9IFthbmNob3JdXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluc2VydF9oeWRyYXRpb24odGFyZ2V0LCBub2RlLCBhbmNob3IpIHtcblx0aWYgKGlzX2h5ZHJhdGluZyAmJiAhYW5jaG9yKSB7XG5cdFx0YXBwZW5kX2h5ZHJhdGlvbih0YXJnZXQsIG5vZGUpO1xuXHR9IGVsc2UgaWYgKG5vZGUucGFyZW50Tm9kZSAhPT0gdGFyZ2V0IHx8IG5vZGUubmV4dFNpYmxpbmcgIT0gYW5jaG9yKSB7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShub2RlLCBhbmNob3IgfHwgbnVsbCk7XG5cdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGV0YWNoKG5vZGUpIHtcblx0aWYgKG5vZGUucGFyZW50Tm9kZSkge1xuXHRcdG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcblx0fVxufVxuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlc3Ryb3lfZWFjaChpdGVyYXRpb25zLCBkZXRhY2hpbmcpIHtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBpdGVyYXRpb25zLmxlbmd0aDsgaSArPSAxKSB7XG5cdFx0aWYgKGl0ZXJhdGlvbnNbaV0pIGl0ZXJhdGlvbnNbaV0uZChkZXRhY2hpbmcpO1xuXHR9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtrZXlvZiBIVE1MRWxlbWVudFRhZ05hbWVNYXB9IEtcbiAqIEBwYXJhbSB7S30gbmFtZVxuICogQHJldHVybnMge0hUTUxFbGVtZW50VGFnTmFtZU1hcFtLXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVsZW1lbnQobmFtZSkge1xuXHRyZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKTtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge2tleW9mIEhUTUxFbGVtZW50VGFnTmFtZU1hcH0gS1xuICogQHBhcmFtIHtLfSBuYW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gaXNcbiAqIEByZXR1cm5zIHtIVE1MRWxlbWVudFRhZ05hbWVNYXBbS119XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbGVtZW50X2lzKG5hbWUsIGlzKSB7XG5cdHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KG5hbWUsIHsgaXMgfSk7XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0ZW1wbGF0ZSB7a2V5b2YgVH0gS1xuICogQHBhcmFtIHtUfSBvYmpcbiAqIEBwYXJhbSB7S1tdfSBleGNsdWRlXG4gKiBAcmV0dXJucyB7UGljazxULCBFeGNsdWRlPGtleW9mIFQsIEs+Pn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9iamVjdF93aXRob3V0X3Byb3BlcnRpZXMob2JqLCBleGNsdWRlKSB7XG5cdGNvbnN0IHRhcmdldCA9IC8qKiBAdHlwZSB7UGljazxULCBFeGNsdWRlPGtleW9mIFQsIEs+Pn0gKi8gKHt9KTtcblx0Zm9yIChjb25zdCBrIGluIG9iaikge1xuXHRcdGlmIChcblx0XHRcdGhhc19wcm9wKG9iaiwgaykgJiZcblx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdGV4Y2x1ZGUuaW5kZXhPZihrKSA9PT0gLTFcblx0XHQpIHtcblx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdHRhcmdldFtrXSA9IG9ialtrXTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHRhcmdldDtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge2tleW9mIFNWR0VsZW1lbnRUYWdOYW1lTWFwfSBLXG4gKiBAcGFyYW0ge0t9IG5hbWVcbiAqIEByZXR1cm5zIHtTVkdFbGVtZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gc3ZnX2VsZW1lbnQobmFtZSkge1xuXHRyZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsIG5hbWUpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhXG4gKiBAcmV0dXJucyB7VGV4dH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRleHQoZGF0YSkge1xuXHRyZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZGF0YSk7XG59XG5cbi8qKlxuICogQHJldHVybnMge1RleHR9ICovXG5leHBvcnQgZnVuY3Rpb24gc3BhY2UoKSB7XG5cdHJldHVybiB0ZXh0KCcgJyk7XG59XG5cbi8qKlxuICogQHJldHVybnMge1RleHR9ICovXG5leHBvcnQgZnVuY3Rpb24gZW1wdHkoKSB7XG5cdHJldHVybiB0ZXh0KCcnKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29udGVudFxuICogQHJldHVybnMge0NvbW1lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21tZW50KGNvbnRlbnQpIHtcblx0cmV0dXJuIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoY29udGVudCk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtFdmVudFRhcmdldH0gbm9kZVxuICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50XG4gKiBAcGFyYW0ge0V2ZW50TGlzdGVuZXJPckV2ZW50TGlzdGVuZXJPYmplY3R9IGhhbmRsZXJcbiAqIEBwYXJhbSB7Ym9vbGVhbiB8IEFkZEV2ZW50TGlzdGVuZXJPcHRpb25zIHwgRXZlbnRMaXN0ZW5lck9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMgeygpID0+IHZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsaXN0ZW4obm9kZSwgZXZlbnQsIGhhbmRsZXIsIG9wdGlvbnMpIHtcblx0bm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKTtcblx0cmV0dXJuICgpID0+IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG59XG5cbi8qKlxuICogQHJldHVybnMgeyhldmVudDogYW55KSA9PiBhbnl9ICovXG5leHBvcnQgZnVuY3Rpb24gcHJldmVudF9kZWZhdWx0KGZuKSB7XG5cdHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdC8vIEB0cy1pZ25vcmVcblx0XHRyZXR1cm4gZm4uY2FsbCh0aGlzLCBldmVudCk7XG5cdH07XG59XG5cbi8qKlxuICogQHJldHVybnMgeyhldmVudDogYW55KSA9PiBhbnl9ICovXG5leHBvcnQgZnVuY3Rpb24gc3RvcF9wcm9wYWdhdGlvbihmbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG5cdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdHJldHVybiBmbi5jYWxsKHRoaXMsIGV2ZW50KTtcblx0fTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7KGV2ZW50OiBhbnkpID0+IGFueX0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdG9wX2ltbWVkaWF0ZV9wcm9wYWdhdGlvbihmbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG5cdFx0ZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdHJldHVybiBmbi5jYWxsKHRoaXMsIGV2ZW50KTtcblx0fTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7KGV2ZW50OiBhbnkpID0+IHZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gc2VsZihmbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdGlmIChldmVudC50YXJnZXQgPT09IHRoaXMpIGZuLmNhbGwodGhpcywgZXZlbnQpO1xuXHR9O1xufVxuXG4vKipcbiAqIEByZXR1cm5zIHsoZXZlbnQ6IGFueSkgPT4gdm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cnVzdGVkKGZuKSB7XG5cdHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcblx0XHQvLyBAdHMtaWdub3JlXG5cdFx0aWYgKGV2ZW50LmlzVHJ1c3RlZCkgZm4uY2FsbCh0aGlzLCBldmVudCk7XG5cdH07XG59XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSBub2RlXG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0cmlidXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gW3ZhbHVlXVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhdHRyKG5vZGUsIGF0dHJpYnV0ZSwgdmFsdWUpIHtcblx0aWYgKHZhbHVlID09IG51bGwpIG5vZGUucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZSk7XG5cdGVsc2UgaWYgKG5vZGUuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZSkgIT09IHZhbHVlKSBub2RlLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGUsIHZhbHVlKTtcbn1cbi8qKlxuICogTGlzdCBvZiBhdHRyaWJ1dGVzIHRoYXQgc2hvdWxkIGFsd2F5cyBiZSBzZXQgdGhyb3VnaCB0aGUgYXR0ciBtZXRob2QsXG4gKiBiZWNhdXNlIHVwZGF0aW5nIHRoZW0gdGhyb3VnaCB0aGUgcHJvcGVydHkgc2V0dGVyIGRvZXNuJ3Qgd29yayByZWxpYWJseS5cbiAqIEluIHRoZSBleGFtcGxlIG9mIGB3aWR0aGAvYGhlaWdodGAsIHRoZSBwcm9ibGVtIGlzIHRoYXQgdGhlIHNldHRlciBvbmx5XG4gKiBhY2NlcHRzIG51bWVyaWMgdmFsdWVzLCBidXQgdGhlIGF0dHJpYnV0ZSBjYW4gYWxzbyBiZSBzZXQgdG8gYSBzdHJpbmcgbGlrZSBgNTAlYC5cbiAqIElmIHRoaXMgbGlzdCBiZWNvbWVzIHRvbyBiaWcsIHJldGhpbmsgdGhpcyBhcHByb2FjaC5cbiAqL1xuY29uc3QgYWx3YXlzX3NldF90aHJvdWdoX3NldF9hdHRyaWJ1dGUgPSBbJ3dpZHRoJywgJ2hlaWdodCddO1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudCAmIEVsZW1lbnRDU1NJbmxpbmVTdHlsZX0gbm9kZVxuICogQHBhcmFtIHt7IFt4OiBzdHJpbmddOiBzdHJpbmcgfX0gYXR0cmlidXRlc1xuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfYXR0cmlidXRlcyhub2RlLCBhdHRyaWJ1dGVzKSB7XG5cdC8vIEB0cy1pZ25vcmVcblx0Y29uc3QgZGVzY3JpcHRvcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhub2RlLl9fcHJvdG9fXyk7XG5cdGZvciAoY29uc3Qga2V5IGluIGF0dHJpYnV0ZXMpIHtcblx0XHRpZiAoYXR0cmlidXRlc1trZXldID09IG51bGwpIHtcblx0XHRcdG5vZGUucmVtb3ZlQXR0cmlidXRlKGtleSk7XG5cdFx0fSBlbHNlIGlmIChrZXkgPT09ICdzdHlsZScpIHtcblx0XHRcdG5vZGUuc3R5bGUuY3NzVGV4dCA9IGF0dHJpYnV0ZXNba2V5XTtcblx0XHR9IGVsc2UgaWYgKGtleSA9PT0gJ19fdmFsdWUnKSB7XG5cdFx0XHQvKiogQHR5cGUge2FueX0gKi8gKG5vZGUpLnZhbHVlID0gbm9kZVtrZXldID0gYXR0cmlidXRlc1trZXldO1xuXHRcdH0gZWxzZSBpZiAoXG5cdFx0XHRkZXNjcmlwdG9yc1trZXldICYmXG5cdFx0XHRkZXNjcmlwdG9yc1trZXldLnNldCAmJlxuXHRcdFx0YWx3YXlzX3NldF90aHJvdWdoX3NldF9hdHRyaWJ1dGUuaW5kZXhPZihrZXkpID09PSAtMVxuXHRcdCkge1xuXHRcdFx0bm9kZVtrZXldID0gYXR0cmlidXRlc1trZXldO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRhdHRyKG5vZGUsIGtleSwgYXR0cmlidXRlc1trZXldKTtcblx0XHR9XG5cdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnQgJiBFbGVtZW50Q1NTSW5saW5lU3R5bGV9IG5vZGVcbiAqIEBwYXJhbSB7eyBbeDogc3RyaW5nXTogc3RyaW5nIH19IGF0dHJpYnV0ZXNcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X3N2Z19hdHRyaWJ1dGVzKG5vZGUsIGF0dHJpYnV0ZXMpIHtcblx0Zm9yIChjb25zdCBrZXkgaW4gYXR0cmlidXRlcykge1xuXHRcdGF0dHIobm9kZSwga2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtSZWNvcmQ8c3RyaW5nLCB1bmtub3duPn0gZGF0YV9tYXBcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2N1c3RvbV9lbGVtZW50X2RhdGFfbWFwKG5vZGUsIGRhdGFfbWFwKSB7XG5cdE9iamVjdC5rZXlzKGRhdGFfbWFwKS5mb3JFYWNoKChrZXkpID0+IHtcblx0XHRzZXRfY3VzdG9tX2VsZW1lbnRfZGF0YShub2RlLCBrZXksIGRhdGFfbWFwW2tleV0pO1xuXHR9KTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfY3VzdG9tX2VsZW1lbnRfZGF0YShub2RlLCBwcm9wLCB2YWx1ZSkge1xuXHRjb25zdCBsb3dlciA9IHByb3AudG9Mb3dlckNhc2UoKTsgLy8gZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IHdpdGggZXhpc3RpbmcgYmVoYXZpb3Igd2UgZG8gbG93ZXJjYXNlIGZpcnN0XG5cdGlmIChsb3dlciBpbiBub2RlKSB7XG5cdFx0bm9kZVtsb3dlcl0gPSB0eXBlb2Ygbm9kZVtsb3dlcl0gPT09ICdib29sZWFuJyAmJiB2YWx1ZSA9PT0gJycgPyB0cnVlIDogdmFsdWU7XG5cdH0gZWxzZSBpZiAocHJvcCBpbiBub2RlKSB7XG5cdFx0bm9kZVtwcm9wXSA9IHR5cGVvZiBub2RlW3Byb3BdID09PSAnYm9vbGVhbicgJiYgdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuXHR9IGVsc2Uge1xuXHRcdGF0dHIobm9kZSwgcHJvcCwgdmFsdWUpO1xuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHRhZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2R5bmFtaWNfZWxlbWVudF9kYXRhKHRhZykge1xuXHRyZXR1cm4gLy0vLnRlc3QodGFnKSA/IHNldF9jdXN0b21fZWxlbWVudF9kYXRhX21hcCA6IHNldF9hdHRyaWJ1dGVzO1xufVxuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24geGxpbmtfYXR0cihub2RlLCBhdHRyaWJ1dGUsIHZhbHVlKSB7XG5cdG5vZGUuc2V0QXR0cmlidXRlTlMoJ2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnLCBhdHRyaWJ1dGUsIHZhbHVlKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBub2RlXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0X3N2ZWx0ZV9kYXRhc2V0KG5vZGUpIHtcblx0cmV0dXJuIG5vZGUuZGF0YXNldC5zdmVsdGVIO1xufVxuXG4vKipcbiAqIEByZXR1cm5zIHt1bmtub3duW119ICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0X2JpbmRpbmdfZ3JvdXBfdmFsdWUoZ3JvdXAsIF9fdmFsdWUsIGNoZWNrZWQpIHtcblx0Y29uc3QgdmFsdWUgPSBuZXcgU2V0KCk7XG5cdGZvciAobGV0IGkgPSAwOyBpIDwgZ3JvdXAubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRpZiAoZ3JvdXBbaV0uY2hlY2tlZCkgdmFsdWUuYWRkKGdyb3VwW2ldLl9fdmFsdWUpO1xuXHR9XG5cdGlmICghY2hlY2tlZCkge1xuXHRcdHZhbHVlLmRlbGV0ZShfX3ZhbHVlKTtcblx0fVxuXHRyZXR1cm4gQXJyYXkuZnJvbSh2YWx1ZSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50W119IGdyb3VwXG4gKiBAcmV0dXJucyB7eyBwKC4uLmlucHV0czogSFRNTElucHV0RWxlbWVudFtdKTogdm9pZDsgcigpOiB2b2lkOyB9fVxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdF9iaW5kaW5nX2dyb3VwKGdyb3VwKSB7XG5cdC8qKlxuXHQgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudFtdfSAqL1xuXHRsZXQgX2lucHV0cztcblx0cmV0dXJuIHtcblx0XHQvKiBwdXNoICovIHAoLi4uaW5wdXRzKSB7XG5cdFx0XHRfaW5wdXRzID0gaW5wdXRzO1xuXHRcdFx0X2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4gZ3JvdXAucHVzaChpbnB1dCkpO1xuXHRcdH0sXG5cdFx0LyogcmVtb3ZlICovIHIoKSB7XG5cdFx0XHRfaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiBncm91cC5zcGxpY2UoZ3JvdXAuaW5kZXhPZihpbnB1dCksIDEpKTtcblx0XHR9XG5cdH07XG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJbXX0gaW5kZXhlc1xuICogQHJldHVybnMge3sgdShuZXdfaW5kZXhlczogbnVtYmVyW10pOiB2b2lkOyBwKC4uLmlucHV0czogSFRNTElucHV0RWxlbWVudFtdKTogdm9pZDsgcjogKCkgPT4gdm9pZDsgfX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXRfYmluZGluZ19ncm91cF9keW5hbWljKGdyb3VwLCBpbmRleGVzKSB7XG5cdC8qKlxuXHQgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudFtdfSAqL1xuXHRsZXQgX2dyb3VwID0gZ2V0X2JpbmRpbmdfZ3JvdXAoZ3JvdXApO1xuXG5cdC8qKlxuXHQgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudFtdfSAqL1xuXHRsZXQgX2lucHV0cztcblxuXHRmdW5jdGlvbiBnZXRfYmluZGluZ19ncm91cChncm91cCkge1xuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgaW5kZXhlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0Z3JvdXAgPSBncm91cFtpbmRleGVzW2ldXSA9IGdyb3VwW2luZGV4ZXNbaV1dIHx8IFtdO1xuXHRcdH1cblx0XHRyZXR1cm4gZ3JvdXA7XG5cdH1cblxuXHQvKipcblx0ICogQHJldHVybnMge3ZvaWR9ICovXG5cdGZ1bmN0aW9uIHB1c2goKSB7XG5cdFx0X2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4gX2dyb3VwLnB1c2goaW5wdXQpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcmV0dXJucyB7dm9pZH0gKi9cblx0ZnVuY3Rpb24gcmVtb3ZlKCkge1xuXHRcdF9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IF9ncm91cC5zcGxpY2UoX2dyb3VwLmluZGV4T2YoaW5wdXQpLCAxKSk7XG5cdH1cblx0cmV0dXJuIHtcblx0XHQvKiB1cGRhdGUgKi8gdShuZXdfaW5kZXhlcykge1xuXHRcdFx0aW5kZXhlcyA9IG5ld19pbmRleGVzO1xuXHRcdFx0Y29uc3QgbmV3X2dyb3VwID0gZ2V0X2JpbmRpbmdfZ3JvdXAoZ3JvdXApO1xuXHRcdFx0aWYgKG5ld19ncm91cCAhPT0gX2dyb3VwKSB7XG5cdFx0XHRcdHJlbW92ZSgpO1xuXHRcdFx0XHRfZ3JvdXAgPSBuZXdfZ3JvdXA7XG5cdFx0XHRcdHB1c2goKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdC8qIHB1c2ggKi8gcCguLi5pbnB1dHMpIHtcblx0XHRcdF9pbnB1dHMgPSBpbnB1dHM7XG5cdFx0XHRwdXNoKCk7XG5cdFx0fSxcblx0XHQvKiByZW1vdmUgKi8gcjogcmVtb3ZlXG5cdH07XG59XG5cbi8qKiBAcmV0dXJucyB7bnVtYmVyfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvX251bWJlcih2YWx1ZSkge1xuXHRyZXR1cm4gdmFsdWUgPT09ICcnID8gbnVsbCA6ICt2YWx1ZTtcbn1cblxuLyoqIEByZXR1cm5zIHthbnlbXX0gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aW1lX3Jhbmdlc190b19hcnJheShyYW5nZXMpIHtcblx0Y29uc3QgYXJyYXkgPSBbXTtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCByYW5nZXMubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRhcnJheS5wdXNoKHsgc3RhcnQ6IHJhbmdlcy5zdGFydChpKSwgZW5kOiByYW5nZXMuZW5kKGkpIH0pO1xuXHR9XG5cdHJldHVybiBhcnJheTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEByZXR1cm5zIHtDaGlsZE5vZGVbXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoaWxkcmVuKGVsZW1lbnQpIHtcblx0cmV0dXJuIEFycmF5LmZyb20oZWxlbWVudC5jaGlsZE5vZGVzKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0NoaWxkTm9kZUFycmF5fSBub2Rlc1xuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIGluaXRfY2xhaW1faW5mbyhub2Rlcykge1xuXHRpZiAobm9kZXMuY2xhaW1faW5mbyA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0bm9kZXMuY2xhaW1faW5mbyA9IHsgbGFzdF9pbmRleDogMCwgdG90YWxfY2xhaW1lZDogMCB9O1xuXHR9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtDaGlsZE5vZGVFeH0gUlxuICogQHBhcmFtIHtDaGlsZE5vZGVBcnJheX0gbm9kZXNcbiAqIEBwYXJhbSB7KG5vZGU6IENoaWxkTm9kZUV4KSA9PiBub2RlIGlzIFJ9IHByZWRpY2F0ZVxuICogQHBhcmFtIHsobm9kZTogQ2hpbGROb2RlRXgpID0+IENoaWxkTm9kZUV4IHwgdW5kZWZpbmVkfSBwcm9jZXNzX25vZGVcbiAqIEBwYXJhbSB7KCkgPT4gUn0gY3JlYXRlX25vZGVcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gZG9udF91cGRhdGVfbGFzdF9pbmRleFxuICogQHJldHVybnMge1J9XG4gKi9cbmZ1bmN0aW9uIGNsYWltX25vZGUobm9kZXMsIHByZWRpY2F0ZSwgcHJvY2Vzc19ub2RlLCBjcmVhdGVfbm9kZSwgZG9udF91cGRhdGVfbGFzdF9pbmRleCA9IGZhbHNlKSB7XG5cdC8vIFRyeSB0byBmaW5kIG5vZGVzIGluIGFuIG9yZGVyIHN1Y2ggdGhhdCB3ZSBsZW5ndGhlbiB0aGUgbG9uZ2VzdCBpbmNyZWFzaW5nIHN1YnNlcXVlbmNlXG5cdGluaXRfY2xhaW1faW5mbyhub2Rlcyk7XG5cdGNvbnN0IHJlc3VsdF9ub2RlID0gKCgpID0+IHtcblx0XHQvLyBXZSBmaXJzdCB0cnkgdG8gZmluZCBhbiBlbGVtZW50IGFmdGVyIHRoZSBwcmV2aW91cyBvbmVcblx0XHRmb3IgKGxldCBpID0gbm9kZXMuY2xhaW1faW5mby5sYXN0X2luZGV4OyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGNvbnN0IG5vZGUgPSBub2Rlc1tpXTtcblx0XHRcdGlmIChwcmVkaWNhdGUobm9kZSkpIHtcblx0XHRcdFx0Y29uc3QgcmVwbGFjZW1lbnQgPSBwcm9jZXNzX25vZGUobm9kZSk7XG5cdFx0XHRcdGlmIChyZXBsYWNlbWVudCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0bm9kZXMuc3BsaWNlKGksIDEpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdG5vZGVzW2ldID0gcmVwbGFjZW1lbnQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFkb250X3VwZGF0ZV9sYXN0X2luZGV4KSB7XG5cdFx0XHRcdFx0bm9kZXMuY2xhaW1faW5mby5sYXN0X2luZGV4ID0gaTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gbm9kZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0Ly8gT3RoZXJ3aXNlLCB3ZSB0cnkgdG8gZmluZCBvbmUgYmVmb3JlXG5cdFx0Ly8gV2UgaXRlcmF0ZSBpbiByZXZlcnNlIHNvIHRoYXQgd2UgZG9uJ3QgZ28gdG9vIGZhciBiYWNrXG5cdFx0Zm9yIChsZXQgaSA9IG5vZGVzLmNsYWltX2luZm8ubGFzdF9pbmRleCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRjb25zdCBub2RlID0gbm9kZXNbaV07XG5cdFx0XHRpZiAocHJlZGljYXRlKG5vZGUpKSB7XG5cdFx0XHRcdGNvbnN0IHJlcGxhY2VtZW50ID0gcHJvY2Vzc19ub2RlKG5vZGUpO1xuXHRcdFx0XHRpZiAocmVwbGFjZW1lbnQgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdG5vZGVzLnNwbGljZShpLCAxKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRub2Rlc1tpXSA9IHJlcGxhY2VtZW50O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICghZG9udF91cGRhdGVfbGFzdF9pbmRleCkge1xuXHRcdFx0XHRcdG5vZGVzLmNsYWltX2luZm8ubGFzdF9pbmRleCA9IGk7XG5cdFx0XHRcdH0gZWxzZSBpZiAocmVwbGFjZW1lbnQgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdC8vIFNpbmNlIHdlIHNwbGljZWQgYmVmb3JlIHRoZSBsYXN0X2luZGV4LCB3ZSBkZWNyZWFzZSBpdFxuXHRcdFx0XHRcdG5vZGVzLmNsYWltX2luZm8ubGFzdF9pbmRleC0tO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBub2RlO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQvLyBJZiB3ZSBjYW4ndCBmaW5kIGFueSBtYXRjaGluZyBub2RlLCB3ZSBjcmVhdGUgYSBuZXcgb25lXG5cdFx0cmV0dXJuIGNyZWF0ZV9ub2RlKCk7XG5cdH0pKCk7XG5cdHJlc3VsdF9ub2RlLmNsYWltX29yZGVyID0gbm9kZXMuY2xhaW1faW5mby50b3RhbF9jbGFpbWVkO1xuXHRub2Rlcy5jbGFpbV9pbmZvLnRvdGFsX2NsYWltZWQgKz0gMTtcblx0cmV0dXJuIHJlc3VsdF9ub2RlO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Q2hpbGROb2RlQXJyYXl9IG5vZGVzXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHBhcmFtIHt7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfX0gYXR0cmlidXRlc1xuICogQHBhcmFtIHsobmFtZTogc3RyaW5nKSA9PiBFbGVtZW50IHwgU1ZHRWxlbWVudH0gY3JlYXRlX2VsZW1lbnRcbiAqIEByZXR1cm5zIHtFbGVtZW50IHwgU1ZHRWxlbWVudH1cbiAqL1xuZnVuY3Rpb24gY2xhaW1fZWxlbWVudF9iYXNlKG5vZGVzLCBuYW1lLCBhdHRyaWJ1dGVzLCBjcmVhdGVfZWxlbWVudCkge1xuXHRyZXR1cm4gY2xhaW1fbm9kZShcblx0XHRub2Rlcyxcblx0XHQvKiogQHJldHVybnMge25vZGUgaXMgRWxlbWVudCB8IFNWR0VsZW1lbnR9ICovXG5cdFx0KG5vZGUpID0+IG5vZGUubm9kZU5hbWUgPT09IG5hbWUsXG5cdFx0LyoqIEBwYXJhbSB7RWxlbWVudH0gbm9kZSAqL1xuXHRcdChub2RlKSA9PiB7XG5cdFx0XHRjb25zdCByZW1vdmUgPSBbXTtcblx0XHRcdGZvciAobGV0IGogPSAwOyBqIDwgbm9kZS5hdHRyaWJ1dGVzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGNvbnN0IGF0dHJpYnV0ZSA9IG5vZGUuYXR0cmlidXRlc1tqXTtcblx0XHRcdFx0aWYgKCFhdHRyaWJ1dGVzW2F0dHJpYnV0ZS5uYW1lXSkge1xuXHRcdFx0XHRcdHJlbW92ZS5wdXNoKGF0dHJpYnV0ZS5uYW1lKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmVtb3ZlLmZvckVhY2goKHYpID0+IG5vZGUucmVtb3ZlQXR0cmlidXRlKHYpKTtcblx0XHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdFx0fSxcblx0XHQoKSA9PiBjcmVhdGVfZWxlbWVudChuYW1lKVxuXHQpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Q2hpbGROb2RlQXJyYXl9IG5vZGVzXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHBhcmFtIHt7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfX0gYXR0cmlidXRlc1xuICogQHJldHVybnMge0VsZW1lbnQgfCBTVkdFbGVtZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xhaW1fZWxlbWVudChub2RlcywgbmFtZSwgYXR0cmlidXRlcykge1xuXHRyZXR1cm4gY2xhaW1fZWxlbWVudF9iYXNlKG5vZGVzLCBuYW1lLCBhdHRyaWJ1dGVzLCBlbGVtZW50KTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0NoaWxkTm9kZUFycmF5fSBub2Rlc1xuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7eyBba2V5OiBzdHJpbmddOiBib29sZWFuIH19IGF0dHJpYnV0ZXNcbiAqIEByZXR1cm5zIHtFbGVtZW50IHwgU1ZHRWxlbWVudH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsYWltX3N2Z19lbGVtZW50KG5vZGVzLCBuYW1lLCBhdHRyaWJ1dGVzKSB7XG5cdHJldHVybiBjbGFpbV9lbGVtZW50X2Jhc2Uobm9kZXMsIG5hbWUsIGF0dHJpYnV0ZXMsIHN2Z19lbGVtZW50KTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0NoaWxkTm9kZUFycmF5fSBub2Rlc1xuICogQHJldHVybnMge1RleHR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFpbV90ZXh0KG5vZGVzLCBkYXRhKSB7XG5cdHJldHVybiBjbGFpbV9ub2RlKFxuXHRcdG5vZGVzLFxuXHRcdC8qKiBAcmV0dXJucyB7bm9kZSBpcyBUZXh0fSAqL1xuXHRcdChub2RlKSA9PiBub2RlLm5vZGVUeXBlID09PSAzLFxuXHRcdC8qKiBAcGFyYW0ge1RleHR9IG5vZGUgKi9cblx0XHQobm9kZSkgPT4ge1xuXHRcdFx0Y29uc3QgZGF0YV9zdHIgPSAnJyArIGRhdGE7XG5cdFx0XHRpZiAobm9kZS5kYXRhLnN0YXJ0c1dpdGgoZGF0YV9zdHIpKSB7XG5cdFx0XHRcdGlmIChub2RlLmRhdGEubGVuZ3RoICE9PSBkYXRhX3N0ci5sZW5ndGgpIHtcblx0XHRcdFx0XHRyZXR1cm4gbm9kZS5zcGxpdFRleHQoZGF0YV9zdHIubGVuZ3RoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bm9kZS5kYXRhID0gZGF0YV9zdHI7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHQoKSA9PiB0ZXh0KGRhdGEpLFxuXHRcdHRydWUgLy8gVGV4dCBub2RlcyBzaG91bGQgbm90IHVwZGF0ZSBsYXN0IGluZGV4IHNpbmNlIGl0IGlzIGxpa2VseSBub3Qgd29ydGggaXQgdG8gZWxpbWluYXRlIGFuIGluY3JlYXNpbmcgc3Vic2VxdWVuY2Ugb2YgYWN0dWFsIGVsZW1lbnRzXG5cdCk7XG59XG5cbi8qKlxuICogQHJldHVybnMge1RleHR9ICovXG5leHBvcnQgZnVuY3Rpb24gY2xhaW1fc3BhY2Uobm9kZXMpIHtcblx0cmV0dXJuIGNsYWltX3RleHQobm9kZXMsICcgJyk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtDaGlsZE5vZGVBcnJheX0gbm9kZXNcbiAqIEByZXR1cm5zIHtDb21tZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xhaW1fY29tbWVudChub2RlcywgZGF0YSkge1xuXHRyZXR1cm4gY2xhaW1fbm9kZShcblx0XHRub2Rlcyxcblx0XHQvKiogQHJldHVybnMge25vZGUgaXMgQ29tbWVudH0gKi9cblx0XHQobm9kZSkgPT4gbm9kZS5ub2RlVHlwZSA9PT0gOCxcblx0XHQvKiogQHBhcmFtIHtDb21tZW50fSBub2RlICovXG5cdFx0KG5vZGUpID0+IHtcblx0XHRcdG5vZGUuZGF0YSA9ICcnICsgZGF0YTtcblx0XHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdFx0fSxcblx0XHQoKSA9PiBjb21tZW50KGRhdGEpLFxuXHRcdHRydWVcblx0KTtcbn1cblxuZnVuY3Rpb24gZ2V0X2NvbW1lbnRfaWR4KG5vZGVzLCB0ZXh0LCBzdGFydCkge1xuXHRmb3IgKGxldCBpID0gc3RhcnQ7IGkgPCBub2Rlcy5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdGNvbnN0IG5vZGUgPSBub2Rlc1tpXTtcblx0XHRpZiAobm9kZS5ub2RlVHlwZSA9PT0gOCAvKiBjb21tZW50IG5vZGUgKi8gJiYgbm9kZS50ZXh0Q29udGVudC50cmltKCkgPT09IHRleHQpIHtcblx0XHRcdHJldHVybiBpO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gLTE7XG59XG5cbi8qKlxuICogQHBhcmFtIHtib29sZWFufSBpc19zdmdcbiAqIEByZXR1cm5zIHtIdG1sVGFnSHlkcmF0aW9ufVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xhaW1faHRtbF90YWcobm9kZXMsIGlzX3N2Zykge1xuXHQvLyBmaW5kIGh0bWwgb3BlbmluZyB0YWdcblx0Y29uc3Qgc3RhcnRfaW5kZXggPSBnZXRfY29tbWVudF9pZHgobm9kZXMsICdIVE1MX1RBR19TVEFSVCcsIDApO1xuXHRjb25zdCBlbmRfaW5kZXggPSBnZXRfY29tbWVudF9pZHgobm9kZXMsICdIVE1MX1RBR19FTkQnLCBzdGFydF9pbmRleCArIDEpO1xuXHRpZiAoc3RhcnRfaW5kZXggPT09IC0xIHx8IGVuZF9pbmRleCA9PT0gLTEpIHtcblx0XHRyZXR1cm4gbmV3IEh0bWxUYWdIeWRyYXRpb24oaXNfc3ZnKTtcblx0fVxuXG5cdGluaXRfY2xhaW1faW5mbyhub2Rlcyk7XG5cdGNvbnN0IGh0bWxfdGFnX25vZGVzID0gbm9kZXMuc3BsaWNlKHN0YXJ0X2luZGV4LCBlbmRfaW5kZXggLSBzdGFydF9pbmRleCArIDEpO1xuXHRkZXRhY2goaHRtbF90YWdfbm9kZXNbMF0pO1xuXHRkZXRhY2goaHRtbF90YWdfbm9kZXNbaHRtbF90YWdfbm9kZXMubGVuZ3RoIC0gMV0pO1xuXHRjb25zdCBjbGFpbWVkX25vZGVzID0gaHRtbF90YWdfbm9kZXMuc2xpY2UoMSwgaHRtbF90YWdfbm9kZXMubGVuZ3RoIC0gMSk7XG5cdGlmIChjbGFpbWVkX25vZGVzLmxlbmd0aCA9PT0gMCkge1xuXHRcdHJldHVybiBuZXcgSHRtbFRhZ0h5ZHJhdGlvbihpc19zdmcpO1xuXHR9XG5cdGZvciAoY29uc3QgbiBvZiBjbGFpbWVkX25vZGVzKSB7XG5cdFx0bi5jbGFpbV9vcmRlciA9IG5vZGVzLmNsYWltX2luZm8udG90YWxfY2xhaW1lZDtcblx0XHRub2Rlcy5jbGFpbV9pbmZvLnRvdGFsX2NsYWltZWQgKz0gMTtcblx0fVxuXHRyZXR1cm4gbmV3IEh0bWxUYWdIeWRyYXRpb24oaXNfc3ZnLCBjbGFpbWVkX25vZGVzKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1RleHR9IHRleHRcbiAqIEBwYXJhbSB7dW5rbm93bn0gZGF0YVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfZGF0YSh0ZXh0LCBkYXRhKSB7XG5cdGRhdGEgPSAnJyArIGRhdGE7XG5cdGlmICh0ZXh0LmRhdGEgPT09IGRhdGEpIHJldHVybjtcblx0dGV4dC5kYXRhID0gLyoqIEB0eXBlIHtzdHJpbmd9ICovIChkYXRhKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1RleHR9IHRleHRcbiAqIEBwYXJhbSB7dW5rbm93bn0gZGF0YVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfZGF0YV9jb250ZW50ZWRpdGFibGUodGV4dCwgZGF0YSkge1xuXHRkYXRhID0gJycgKyBkYXRhO1xuXHRpZiAodGV4dC53aG9sZVRleHQgPT09IGRhdGEpIHJldHVybjtcblx0dGV4dC5kYXRhID0gLyoqIEB0eXBlIHtzdHJpbmd9ICovIChkYXRhKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1RleHR9IHRleHRcbiAqIEBwYXJhbSB7dW5rbm93bn0gZGF0YVxuICogQHBhcmFtIHtzdHJpbmd9IGF0dHJfdmFsdWVcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2RhdGFfbWF5YmVfY29udGVudGVkaXRhYmxlKHRleHQsIGRhdGEsIGF0dHJfdmFsdWUpIHtcblx0aWYgKH5jb250ZW50ZWRpdGFibGVfdHJ1dGh5X3ZhbHVlcy5pbmRleE9mKGF0dHJfdmFsdWUpKSB7XG5cdFx0c2V0X2RhdGFfY29udGVudGVkaXRhYmxlKHRleHQsIGRhdGEpO1xuXHR9IGVsc2Uge1xuXHRcdHNldF9kYXRhKHRleHQsIGRhdGEpO1xuXHR9XG59XG5cbi8qKlxuICogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2lucHV0X3ZhbHVlKGlucHV0LCB2YWx1ZSkge1xuXHRpbnB1dC52YWx1ZSA9IHZhbHVlID09IG51bGwgPyAnJyA6IHZhbHVlO1xufVxuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldF9pbnB1dF90eXBlKGlucHV0LCB0eXBlKSB7XG5cdHRyeSB7XG5cdFx0aW5wdXQudHlwZSA9IHR5cGU7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHQvLyBkbyBub3RoaW5nXG5cdH1cbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfc3R5bGUobm9kZSwga2V5LCB2YWx1ZSwgaW1wb3J0YW50KSB7XG5cdGlmICh2YWx1ZSA9PSBudWxsKSB7XG5cdFx0bm9kZS5zdHlsZS5yZW1vdmVQcm9wZXJ0eShrZXkpO1xuXHR9IGVsc2Uge1xuXHRcdG5vZGUuc3R5bGUuc2V0UHJvcGVydHkoa2V5LCB2YWx1ZSwgaW1wb3J0YW50ID8gJ2ltcG9ydGFudCcgOiAnJyk7XG5cdH1cbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3Rfb3B0aW9uKHNlbGVjdCwgdmFsdWUsIG1vdW50aW5nKSB7XG5cdGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0Lm9wdGlvbnMubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRjb25zdCBvcHRpb24gPSBzZWxlY3Qub3B0aW9uc1tpXTtcblx0XHRpZiAob3B0aW9uLl9fdmFsdWUgPT09IHZhbHVlKSB7XG5cdFx0XHRvcHRpb24uc2VsZWN0ZWQgPSB0cnVlO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0fVxuXHRpZiAoIW1vdW50aW5nIHx8IHZhbHVlICE9PSB1bmRlZmluZWQpIHtcblx0XHRzZWxlY3Quc2VsZWN0ZWRJbmRleCA9IC0xOyAvLyBubyBvcHRpb24gc2hvdWxkIGJlIHNlbGVjdGVkXG5cdH1cbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3Rfb3B0aW9ucyhzZWxlY3QsIHZhbHVlKSB7XG5cdGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0Lm9wdGlvbnMubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRjb25zdCBvcHRpb24gPSBzZWxlY3Qub3B0aW9uc1tpXTtcblx0XHRvcHRpb24uc2VsZWN0ZWQgPSB+dmFsdWUuaW5kZXhPZihvcHRpb24uX192YWx1ZSk7XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdF92YWx1ZShzZWxlY3QpIHtcblx0Y29uc3Qgc2VsZWN0ZWRfb3B0aW9uID0gc2VsZWN0LnF1ZXJ5U2VsZWN0b3IoJzpjaGVja2VkJyk7XG5cdHJldHVybiBzZWxlY3RlZF9vcHRpb24gJiYgc2VsZWN0ZWRfb3B0aW9uLl9fdmFsdWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3RfbXVsdGlwbGVfdmFsdWUoc2VsZWN0KSB7XG5cdHJldHVybiBbXS5tYXAuY2FsbChzZWxlY3QucXVlcnlTZWxlY3RvckFsbCgnOmNoZWNrZWQnKSwgKG9wdGlvbikgPT4gb3B0aW9uLl9fdmFsdWUpO1xufVxuLy8gdW5mb3J0dW5hdGVseSB0aGlzIGNhbid0IGJlIGEgY29uc3RhbnQgYXMgdGhhdCB3b3VsZG4ndCBiZSB0cmVlLXNoYWtlYWJsZVxuLy8gc28gd2UgY2FjaGUgdGhlIHJlc3VsdCBpbnN0ZWFkXG5cbi8qKlxuICogQHR5cGUge2Jvb2xlYW59ICovXG5sZXQgY3Jvc3NvcmlnaW47XG5cbi8qKlxuICogQHJldHVybnMge2Jvb2xlYW59ICovXG5leHBvcnQgZnVuY3Rpb24gaXNfY3Jvc3NvcmlnaW4oKSB7XG5cdGlmIChjcm9zc29yaWdpbiA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0Y3Jvc3NvcmlnaW4gPSBmYWxzZTtcblx0XHR0cnkge1xuXHRcdFx0aWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5wYXJlbnQpIHtcblx0XHRcdFx0dm9pZCB3aW5kb3cucGFyZW50LmRvY3VtZW50O1xuXHRcdFx0fVxuXHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRjcm9zc29yaWdpbiA9IHRydWU7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBjcm9zc29yaWdpbjtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBub2RlXG4gKiBAcGFyYW0geygpID0+IHZvaWR9IGZuXG4gKiBAcmV0dXJucyB7KCkgPT4gdm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZF9pZnJhbWVfcmVzaXplX2xpc3RlbmVyKG5vZGUsIGZuKSB7XG5cdGNvbnN0IGNvbXB1dGVkX3N0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcblx0aWYgKGNvbXB1dGVkX3N0eWxlLnBvc2l0aW9uID09PSAnc3RhdGljJykge1xuXHRcdG5vZGUuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuXHR9XG5cdGNvbnN0IGlmcmFtZSA9IGVsZW1lbnQoJ2lmcmFtZScpO1xuXHRpZnJhbWUuc2V0QXR0cmlidXRlKFxuXHRcdCdzdHlsZScsXG5cdFx0J2Rpc3BsYXk6IGJsb2NrOyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDsgbGVmdDogMDsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTsgJyArXG5cdFx0XHQnb3ZlcmZsb3c6IGhpZGRlbjsgYm9yZGVyOiAwOyBvcGFjaXR5OiAwOyBwb2ludGVyLWV2ZW50czogbm9uZTsgei1pbmRleDogLTE7J1xuXHQpO1xuXHRpZnJhbWUuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICd0cnVlJyk7XG5cdGlmcmFtZS50YWJJbmRleCA9IC0xO1xuXHRjb25zdCBjcm9zc29yaWdpbiA9IGlzX2Nyb3Nzb3JpZ2luKCk7XG5cblx0LyoqXG5cdCAqIEB0eXBlIHsoKSA9PiB2b2lkfVxuXHQgKi9cblx0bGV0IHVuc3Vic2NyaWJlO1xuXHRpZiAoY3Jvc3NvcmlnaW4pIHtcblx0XHRpZnJhbWUuc3JjID0gXCJkYXRhOnRleHQvaHRtbCw8c2NyaXB0Pm9ucmVzaXplPWZ1bmN0aW9uKCl7cGFyZW50LnBvc3RNZXNzYWdlKDAsJyonKX08L3NjcmlwdD5cIjtcblx0XHR1bnN1YnNjcmliZSA9IGxpc3Rlbihcblx0XHRcdHdpbmRvdyxcblx0XHRcdCdtZXNzYWdlJyxcblx0XHRcdC8qKiBAcGFyYW0ge01lc3NhZ2VFdmVudH0gZXZlbnQgKi8gKGV2ZW50KSA9PiB7XG5cdFx0XHRcdGlmIChldmVudC5zb3VyY2UgPT09IGlmcmFtZS5jb250ZW50V2luZG93KSBmbigpO1xuXHRcdFx0fVxuXHRcdCk7XG5cdH0gZWxzZSB7XG5cdFx0aWZyYW1lLnNyYyA9ICdhYm91dDpibGFuayc7XG5cdFx0aWZyYW1lLm9ubG9hZCA9ICgpID0+IHtcblx0XHRcdHVuc3Vic2NyaWJlID0gbGlzdGVuKGlmcmFtZS5jb250ZW50V2luZG93LCAncmVzaXplJywgZm4pO1xuXHRcdFx0Ly8gbWFrZSBzdXJlIGFuIGluaXRpYWwgcmVzaXplIGV2ZW50IGlzIGZpcmVkIF9hZnRlcl8gdGhlIGlmcmFtZSBpcyBsb2FkZWQgKHdoaWNoIGlzIGFzeW5jaHJvbm91cylcblx0XHRcdC8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vc3ZlbHRlanMvc3ZlbHRlL2lzc3Vlcy80MjMzXG5cdFx0XHRmbigpO1xuXHRcdH07XG5cdH1cblx0YXBwZW5kKG5vZGUsIGlmcmFtZSk7XG5cdHJldHVybiAoKSA9PiB7XG5cdFx0aWYgKGNyb3Nzb3JpZ2luKSB7XG5cdFx0XHR1bnN1YnNjcmliZSgpO1xuXHRcdH0gZWxzZSBpZiAodW5zdWJzY3JpYmUgJiYgaWZyYW1lLmNvbnRlbnRXaW5kb3cpIHtcblx0XHRcdHVuc3Vic2NyaWJlKCk7XG5cdFx0fVxuXHRcdGRldGFjaChpZnJhbWUpO1xuXHR9O1xufVxuZXhwb3J0IGNvbnN0IHJlc2l6ZV9vYnNlcnZlcl9jb250ZW50X2JveCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgUmVzaXplT2JzZXJ2ZXJTaW5nbGV0b24oe1xuXHRib3g6ICdjb250ZW50LWJveCdcbn0pO1xuZXhwb3J0IGNvbnN0IHJlc2l6ZV9vYnNlcnZlcl9ib3JkZXJfYm94ID0gLyogQF9fUFVSRV9fICovIG5ldyBSZXNpemVPYnNlcnZlclNpbmdsZXRvbih7XG5cdGJveDogJ2JvcmRlci1ib3gnXG59KTtcbmV4cG9ydCBjb25zdCByZXNpemVfb2JzZXJ2ZXJfZGV2aWNlX3BpeGVsX2NvbnRlbnRfYm94ID0gLyogQF9fUFVSRV9fICovIG5ldyBSZXNpemVPYnNlcnZlclNpbmdsZXRvbihcblx0eyBib3g6ICdkZXZpY2UtcGl4ZWwtY29udGVudC1ib3gnIH1cbik7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZlclNpbmdsZXRvbiB9O1xuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZV9jbGFzcyhlbGVtZW50LCBuYW1lLCB0b2dnbGUpIHtcblx0Ly8gVGhlIGAhIWAgaXMgcmVxdWlyZWQgYmVjYXVzZSBhbiBgdW5kZWZpbmVkYCBmbGFnIG1lYW5zIGZsaXBwaW5nIHRoZSBjdXJyZW50IHN0YXRlLlxuXHRlbGVtZW50LmNsYXNzTGlzdC50b2dnbGUobmFtZSwgISF0b2dnbGUpO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHBhcmFtIHtUfSBbZGV0YWlsXVxuICogQHBhcmFtIHt7IGJ1YmJsZXM/OiBib29sZWFuLCBjYW5jZWxhYmxlPzogYm9vbGVhbiB9fSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtDdXN0b21FdmVudDxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGN1c3RvbV9ldmVudCh0eXBlLCBkZXRhaWwsIHsgYnViYmxlcyA9IGZhbHNlLCBjYW5jZWxhYmxlID0gZmFsc2UgfSA9IHt9KSB7XG5cdHJldHVybiBuZXcgQ3VzdG9tRXZlbnQodHlwZSwgeyBkZXRhaWwsIGJ1YmJsZXMsIGNhbmNlbGFibGUgfSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBwYXJlbnRcbiAqIEByZXR1cm5zIHtDaGlsZE5vZGVBcnJheX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1ZXJ5X3NlbGVjdG9yX2FsbChzZWxlY3RvciwgcGFyZW50ID0gZG9jdW1lbnQuYm9keSkge1xuXHRyZXR1cm4gQXJyYXkuZnJvbShwYXJlbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcikpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBub2RlSWRcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGhlYWRcbiAqIEByZXR1cm5zIHthbnlbXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhlYWRfc2VsZWN0b3Iobm9kZUlkLCBoZWFkKSB7XG5cdGNvbnN0IHJlc3VsdCA9IFtdO1xuXHRsZXQgc3RhcnRlZCA9IDA7XG5cdGZvciAoY29uc3Qgbm9kZSBvZiBoZWFkLmNoaWxkTm9kZXMpIHtcblx0XHRpZiAobm9kZS5ub2RlVHlwZSA9PT0gOCAvKiBjb21tZW50IG5vZGUgKi8pIHtcblx0XHRcdGNvbnN0IGNvbW1lbnQgPSBub2RlLnRleHRDb250ZW50LnRyaW0oKTtcblx0XHRcdGlmIChjb21tZW50ID09PSBgSEVBRF8ke25vZGVJZH1fRU5EYCkge1xuXHRcdFx0XHRzdGFydGVkIC09IDE7XG5cdFx0XHRcdHJlc3VsdC5wdXNoKG5vZGUpO1xuXHRcdFx0fSBlbHNlIGlmIChjb21tZW50ID09PSBgSEVBRF8ke25vZGVJZH1fU1RBUlRgKSB7XG5cdFx0XHRcdHN0YXJ0ZWQgKz0gMTtcblx0XHRcdFx0cmVzdWx0LnB1c2gobm9kZSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIGlmIChzdGFydGVkID4gMCkge1xuXHRcdFx0cmVzdWx0LnB1c2gobm9kZSk7XG5cdFx0fVxuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59XG4vKiogKi9cbmV4cG9ydCBjbGFzcyBIdG1sVGFnIHtcblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBkZWZhdWx0IGZhbHNlXG5cdCAqL1xuXHRpc19zdmcgPSBmYWxzZTtcblx0LyoqIHBhcmVudCBmb3IgY3JlYXRpbmcgbm9kZSAqL1xuXHRlID0gdW5kZWZpbmVkO1xuXHQvKiogaHRtbCB0YWcgbm9kZXMgKi9cblx0biA9IHVuZGVmaW5lZDtcblx0LyoqIHRhcmdldCAqL1xuXHR0ID0gdW5kZWZpbmVkO1xuXHQvKiogYW5jaG9yICovXG5cdGEgPSB1bmRlZmluZWQ7XG5cdGNvbnN0cnVjdG9yKGlzX3N2ZyA9IGZhbHNlKSB7XG5cdFx0dGhpcy5pc19zdmcgPSBpc19zdmc7XG5cdFx0dGhpcy5lID0gdGhpcy5uID0gbnVsbDtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge3N0cmluZ30gaHRtbFxuXHQgKiBAcmV0dXJucyB7dm9pZH1cblx0ICovXG5cdGMoaHRtbCkge1xuXHRcdHRoaXMuaChodG1sKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge3N0cmluZ30gaHRtbFxuXHQgKiBAcGFyYW0ge0hUTUxFbGVtZW50IHwgU1ZHRWxlbWVudH0gdGFyZ2V0XG5cdCAqIEBwYXJhbSB7SFRNTEVsZW1lbnQgfCBTVkdFbGVtZW50fSBhbmNob3Jcblx0ICogQHJldHVybnMge3ZvaWR9XG5cdCAqL1xuXHRtKGh0bWwsIHRhcmdldCwgYW5jaG9yID0gbnVsbCkge1xuXHRcdGlmICghdGhpcy5lKSB7XG5cdFx0XHRpZiAodGhpcy5pc19zdmcpXG5cdFx0XHRcdHRoaXMuZSA9IHN2Z19lbGVtZW50KC8qKiBAdHlwZSB7a2V5b2YgU1ZHRWxlbWVudFRhZ05hbWVNYXB9ICovICh0YXJnZXQubm9kZU5hbWUpKTtcblx0XHRcdC8qKiAjNzM2NCAgdGFyZ2V0IGZvciA8dGVtcGxhdGU+IG1heSBiZSBwcm92aWRlZCBhcyAjZG9jdW1lbnQtZnJhZ21lbnQoMTEpICovIGVsc2Vcblx0XHRcdFx0dGhpcy5lID0gZWxlbWVudChcblx0XHRcdFx0XHQvKiogQHR5cGUge2tleW9mIEhUTUxFbGVtZW50VGFnTmFtZU1hcH0gKi8gKFxuXHRcdFx0XHRcdFx0dGFyZ2V0Lm5vZGVUeXBlID09PSAxMSA/ICdURU1QTEFURScgOiB0YXJnZXQubm9kZU5hbWVcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCk7XG5cdFx0XHR0aGlzLnQgPVxuXHRcdFx0XHR0YXJnZXQudGFnTmFtZSAhPT0gJ1RFTVBMQVRFJ1xuXHRcdFx0XHRcdD8gdGFyZ2V0XG5cdFx0XHRcdFx0OiAvKiogQHR5cGUge0hUTUxUZW1wbGF0ZUVsZW1lbnR9ICovICh0YXJnZXQpLmNvbnRlbnQ7XG5cdFx0XHR0aGlzLmMoaHRtbCk7XG5cdFx0fVxuXHRcdHRoaXMuaShhbmNob3IpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBodG1sXG5cdCAqIEByZXR1cm5zIHt2b2lkfVxuXHQgKi9cblx0aChodG1sKSB7XG5cdFx0dGhpcy5lLmlubmVySFRNTCA9IGh0bWw7XG5cdFx0dGhpcy5uID0gQXJyYXkuZnJvbShcblx0XHRcdHRoaXMuZS5ub2RlTmFtZSA9PT0gJ1RFTVBMQVRFJyA/IHRoaXMuZS5jb250ZW50LmNoaWxkTm9kZXMgOiB0aGlzLmUuY2hpbGROb2Rlc1xuXHRcdCk7XG5cdH1cblxuXHQvKipcblx0ICogQHJldHVybnMge3ZvaWR9ICovXG5cdGkoYW5jaG9yKSB7XG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm4ubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRcdGluc2VydCh0aGlzLnQsIHRoaXMubltpXSwgYW5jaG9yKTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtzdHJpbmd9IGh0bWxcblx0ICogQHJldHVybnMge3ZvaWR9XG5cdCAqL1xuXHRwKGh0bWwpIHtcblx0XHR0aGlzLmQoKTtcblx0XHR0aGlzLmgoaHRtbCk7XG5cdFx0dGhpcy5pKHRoaXMuYSk7XG5cdH1cblxuXHQvKipcblx0ICogQHJldHVybnMge3ZvaWR9ICovXG5cdGQoKSB7XG5cdFx0dGhpcy5uLmZvckVhY2goZGV0YWNoKTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgSHRtbFRhZ0h5ZHJhdGlvbiBleHRlbmRzIEh0bWxUYWcge1xuXHQvKiogQHR5cGUge0VsZW1lbnRbXX0gaHlkcmF0aW9uIGNsYWltZWQgbm9kZXMgKi9cblx0bCA9IHVuZGVmaW5lZDtcblxuXHRjb25zdHJ1Y3Rvcihpc19zdmcgPSBmYWxzZSwgY2xhaW1lZF9ub2Rlcykge1xuXHRcdHN1cGVyKGlzX3N2Zyk7XG5cdFx0dGhpcy5lID0gdGhpcy5uID0gbnVsbDtcblx0XHR0aGlzLmwgPSBjbGFpbWVkX25vZGVzO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBodG1sXG5cdCAqIEByZXR1cm5zIHt2b2lkfVxuXHQgKi9cblx0YyhodG1sKSB7XG5cdFx0aWYgKHRoaXMubCkge1xuXHRcdFx0dGhpcy5uID0gdGhpcy5sO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzdXBlci5jKGh0bWwpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBAcmV0dXJucyB7dm9pZH0gKi9cblx0aShhbmNob3IpIHtcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubi5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdFx0aW5zZXJ0X2h5ZHJhdGlvbih0aGlzLnQsIHRoaXMubltpXSwgYW5jaG9yKTtcblx0XHR9XG5cdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge05hbWVkTm9kZU1hcH0gYXR0cmlidXRlc1xuICogQHJldHVybnMge3t9fVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXR0cmlidXRlX3RvX29iamVjdChhdHRyaWJ1dGVzKSB7XG5cdGNvbnN0IHJlc3VsdCA9IHt9O1xuXHRmb3IgKGNvbnN0IGF0dHJpYnV0ZSBvZiBhdHRyaWJ1dGVzKSB7XG5cdFx0cmVzdWx0W2F0dHJpYnV0ZS5uYW1lXSA9IGF0dHJpYnV0ZS52YWx1ZTtcblx0fVxuXHRyZXR1cm4gcmVzdWx0O1xufVxuXG5jb25zdCBlc2NhcGVkID0ge1xuXHQnXCInOiAnJnF1b3Q7Jyxcblx0JyYnOiAnJmFtcDsnLFxuXHQnPCc6ICcmbHQ7J1xufTtcblxuY29uc3QgcmVnZXhfYXR0cmlidXRlX2NoYXJhY3RlcnNfdG9fZXNjYXBlID0gL1tcIiY8XS9nO1xuXG4vKipcbiAqIE5vdGUgdGhhdCB0aGUgYXR0cmlidXRlIGl0c2VsZiBzaG91bGQgYmUgc3Vycm91bmRlZCBpbiBkb3VibGUgcXVvdGVzXG4gKiBAcGFyYW0ge2FueX0gYXR0cmlidXRlXG4gKi9cbmZ1bmN0aW9uIGVzY2FwZV9hdHRyaWJ1dGUoYXR0cmlidXRlKSB7XG5cdHJldHVybiBTdHJpbmcoYXR0cmlidXRlKS5yZXBsYWNlKHJlZ2V4X2F0dHJpYnV0ZV9jaGFyYWN0ZXJzX3RvX2VzY2FwZSwgKG1hdGNoKSA9PiBlc2NhcGVkW21hdGNoXSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+fSBhdHRyaWJ1dGVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnlfc3ByZWFkKGF0dHJpYnV0ZXMpIHtcblx0bGV0IHN0ciA9ICcgJztcblx0Zm9yIChjb25zdCBrZXkgaW4gYXR0cmlidXRlcykge1xuXHRcdGlmIChhdHRyaWJ1dGVzW2tleV0gIT0gbnVsbCkge1xuXHRcdFx0c3RyICs9IGAke2tleX09XCIke2VzY2FwZV9hdHRyaWJ1dGUoYXR0cmlidXRlc1trZXldKX1cIiBgO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBzdHI7XG59XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybnMge3t9fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0X2N1c3RvbV9lbGVtZW50c19zbG90cyhlbGVtZW50KSB7XG5cdGNvbnN0IHJlc3VsdCA9IHt9O1xuXHRlbGVtZW50LmNoaWxkTm9kZXMuZm9yRWFjaChcblx0XHQvKiogQHBhcmFtIHtFbGVtZW50fSBub2RlICovIChub2RlKSA9PiB7XG5cdFx0XHRyZXN1bHRbbm9kZS5zbG90IHx8ICdkZWZhdWx0J10gPSB0cnVlO1xuXHRcdH1cblx0KTtcblx0cmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnN0cnVjdF9zdmVsdGVfY29tcG9uZW50KGNvbXBvbmVudCwgcHJvcHMpIHtcblx0cmV0dXJuIG5ldyBjb21wb25lbnQocHJvcHMpO1xufVxuXG4vKipcbiAqIEB0eXBlZGVmIHtOb2RlICYge1xuICogXHRjbGFpbV9vcmRlcj86IG51bWJlcjtcbiAqIFx0aHlkcmF0ZV9pbml0PzogdHJ1ZTtcbiAqIFx0YWN0dWFsX2VuZF9jaGlsZD86IE5vZGVFeDtcbiAqIFx0Y2hpbGROb2RlczogTm9kZUxpc3RPZjxOb2RlRXg+O1xuICogfX0gTm9kZUV4XG4gKi9cblxuLyoqIEB0eXBlZGVmIHtDaGlsZE5vZGUgJiBOb2RlRXh9IENoaWxkTm9kZUV4ICovXG5cbi8qKiBAdHlwZWRlZiB7Tm9kZUV4ICYgeyBjbGFpbV9vcmRlcjogbnVtYmVyIH19IE5vZGVFeDIgKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7Q2hpbGROb2RlRXhbXSAmIHtcbiAqIFx0Y2xhaW1faW5mbz86IHtcbiAqIFx0XHRsYXN0X2luZGV4OiBudW1iZXI7XG4gKiBcdFx0dG90YWxfY2xhaW1lZDogbnVtYmVyO1xuICogXHR9O1xuICogfX0gQ2hpbGROb2RlQXJyYXlcbiAqL1xuIiwgImltcG9ydCB7IGFwcGVuZF9lbXB0eV9zdHlsZXNoZWV0LCBkZXRhY2gsIGdldF9yb290X2Zvcl9zdHlsZSB9IGZyb20gJy4vZG9tLmpzJztcbmltcG9ydCB7IHJhZiB9IGZyb20gJy4vZW52aXJvbm1lbnQuanMnO1xuXG4vLyB3ZSBuZWVkIHRvIHN0b3JlIHRoZSBpbmZvcm1hdGlvbiBmb3IgbXVsdGlwbGUgZG9jdW1lbnRzIGJlY2F1c2UgYSBTdmVsdGUgYXBwbGljYXRpb24gY291bGQgYWxzbyBjb250YWluIGlmcmFtZXNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zdmVsdGVqcy9zdmVsdGUvaXNzdWVzLzM2MjRcbi8qKiBAdHlwZSB7TWFwPERvY3VtZW50IHwgU2hhZG93Um9vdCwgaW1wb3J0KCcuL3ByaXZhdGUuZC50cycpLlN0eWxlSW5mb3JtYXRpb24+fSAqL1xuY29uc3QgbWFuYWdlZF9zdHlsZXMgPSBuZXcgTWFwKCk7XG5cbmxldCBhY3RpdmUgPSAwO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZGFya3NreWFwcC9zdHJpbmctaGFzaC9ibG9iL21hc3Rlci9pbmRleC5qc1xuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5mdW5jdGlvbiBoYXNoKHN0cikge1xuXHRsZXQgaGFzaCA9IDUzODE7XG5cdGxldCBpID0gc3RyLmxlbmd0aDtcblx0d2hpbGUgKGktLSkgaGFzaCA9ICgoaGFzaCA8PCA1KSAtIGhhc2gpIF4gc3RyLmNoYXJDb2RlQXQoaSk7XG5cdHJldHVybiBoYXNoID4+PiAwO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7RG9jdW1lbnQgfCBTaGFkb3dSb290fSBkb2NcbiAqIEBwYXJhbSB7RWxlbWVudCAmIEVsZW1lbnRDU1NJbmxpbmVTdHlsZX0gbm9kZVxuICogQHJldHVybnMge3sgc3R5bGVzaGVldDogYW55OyBydWxlczoge307IH19XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZV9zdHlsZV9pbmZvcm1hdGlvbihkb2MsIG5vZGUpIHtcblx0Y29uc3QgaW5mbyA9IHsgc3R5bGVzaGVldDogYXBwZW5kX2VtcHR5X3N0eWxlc2hlZXQobm9kZSksIHJ1bGVzOiB7fSB9O1xuXHRtYW5hZ2VkX3N0eWxlcy5zZXQoZG9jLCBpbmZvKTtcblx0cmV0dXJuIGluZm87XG59XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50ICYgRWxlbWVudENTU0lubGluZVN0eWxlfSBub2RlXG4gKiBAcGFyYW0ge251bWJlcn0gYVxuICogQHBhcmFtIHtudW1iZXJ9IGJcbiAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvblxuICogQHBhcmFtIHtudW1iZXJ9IGRlbGF5XG4gKiBAcGFyYW0geyh0OiBudW1iZXIpID0+IG51bWJlcn0gZWFzZVxuICogQHBhcmFtIHsodDogbnVtYmVyLCB1OiBudW1iZXIpID0+IHN0cmluZ30gZm5cbiAqIEBwYXJhbSB7bnVtYmVyfSB1aWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVfcnVsZShub2RlLCBhLCBiLCBkdXJhdGlvbiwgZGVsYXksIGVhc2UsIGZuLCB1aWQgPSAwKSB7XG5cdGNvbnN0IHN0ZXAgPSAxNi42NjYgLyBkdXJhdGlvbjtcblx0bGV0IGtleWZyYW1lcyA9ICd7XFxuJztcblx0Zm9yIChsZXQgcCA9IDA7IHAgPD0gMTsgcCArPSBzdGVwKSB7XG5cdFx0Y29uc3QgdCA9IGEgKyAoYiAtIGEpICogZWFzZShwKTtcblx0XHRrZXlmcmFtZXMgKz0gcCAqIDEwMCArIGAleyR7Zm4odCwgMSAtIHQpfX1cXG5gO1xuXHR9XG5cdGNvbnN0IHJ1bGUgPSBrZXlmcmFtZXMgKyBgMTAwJSB7JHtmbihiLCAxIC0gYil9fVxcbn1gO1xuXHRjb25zdCBuYW1lID0gYF9fc3ZlbHRlXyR7aGFzaChydWxlKX1fJHt1aWR9YDtcblx0Y29uc3QgZG9jID0gZ2V0X3Jvb3RfZm9yX3N0eWxlKG5vZGUpO1xuXHRjb25zdCB7IHN0eWxlc2hlZXQsIHJ1bGVzIH0gPSBtYW5hZ2VkX3N0eWxlcy5nZXQoZG9jKSB8fCBjcmVhdGVfc3R5bGVfaW5mb3JtYXRpb24oZG9jLCBub2RlKTtcblx0aWYgKCFydWxlc1tuYW1lXSkge1xuXHRcdHJ1bGVzW25hbWVdID0gdHJ1ZTtcblx0XHRzdHlsZXNoZWV0Lmluc2VydFJ1bGUoYEBrZXlmcmFtZXMgJHtuYW1lfSAke3J1bGV9YCwgc3R5bGVzaGVldC5jc3NSdWxlcy5sZW5ndGgpO1xuXHR9XG5cdGNvbnN0IGFuaW1hdGlvbiA9IG5vZGUuc3R5bGUuYW5pbWF0aW9uIHx8ICcnO1xuXHRub2RlLnN0eWxlLmFuaW1hdGlvbiA9IGAke1xuXHRcdGFuaW1hdGlvbiA/IGAke2FuaW1hdGlvbn0sIGAgOiAnJ1xuXHR9JHtuYW1lfSAke2R1cmF0aW9ufW1zIGxpbmVhciAke2RlbGF5fW1zIDEgYm90aGA7XG5cdGFjdGl2ZSArPSAxO1xuXHRyZXR1cm4gbmFtZTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnQgJiBFbGVtZW50Q1NTSW5saW5lU3R5bGV9IG5vZGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBbbmFtZV1cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlX3J1bGUobm9kZSwgbmFtZSkge1xuXHRjb25zdCBwcmV2aW91cyA9IChub2RlLnN0eWxlLmFuaW1hdGlvbiB8fCAnJykuc3BsaXQoJywgJyk7XG5cdGNvbnN0IG5leHQgPSBwcmV2aW91cy5maWx0ZXIoXG5cdFx0bmFtZVxuXHRcdFx0PyAoYW5pbSkgPT4gYW5pbS5pbmRleE9mKG5hbWUpIDwgMCAvLyByZW1vdmUgc3BlY2lmaWMgYW5pbWF0aW9uXG5cdFx0XHQ6IChhbmltKSA9PiBhbmltLmluZGV4T2YoJ19fc3ZlbHRlJykgPT09IC0xIC8vIHJlbW92ZSBhbGwgU3ZlbHRlIGFuaW1hdGlvbnNcblx0KTtcblx0Y29uc3QgZGVsZXRlZCA9IHByZXZpb3VzLmxlbmd0aCAtIG5leHQubGVuZ3RoO1xuXHRpZiAoZGVsZXRlZCkge1xuXHRcdG5vZGUuc3R5bGUuYW5pbWF0aW9uID0gbmV4dC5qb2luKCcsICcpO1xuXHRcdGFjdGl2ZSAtPSBkZWxldGVkO1xuXHRcdGlmICghYWN0aXZlKSBjbGVhcl9ydWxlcygpO1xuXHR9XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGVhcl9ydWxlcygpIHtcblx0cmFmKCgpID0+IHtcblx0XHRpZiAoYWN0aXZlKSByZXR1cm47XG5cdFx0bWFuYWdlZF9zdHlsZXMuZm9yRWFjaCgoaW5mbykgPT4ge1xuXHRcdFx0Y29uc3QgeyBvd25lck5vZGUgfSA9IGluZm8uc3R5bGVzaGVldDtcblx0XHRcdC8vIHRoZXJlIGlzIG5vIG93bmVyTm9kZSBpZiBpdCBydW5zIG9uIGpzZG9tLlxuXHRcdFx0aWYgKG93bmVyTm9kZSkgZGV0YWNoKG93bmVyTm9kZSk7XG5cdFx0fSk7XG5cdFx0bWFuYWdlZF9zdHlsZXMuY2xlYXIoKTtcblx0fSk7XG59XG4iLCAiaW1wb3J0IHsgY3VzdG9tX2V2ZW50IH0gZnJvbSAnLi9kb20uanMnO1xuXG5leHBvcnQgbGV0IGN1cnJlbnRfY29tcG9uZW50O1xuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2N1cnJlbnRfY29tcG9uZW50KGNvbXBvbmVudCkge1xuXHRjdXJyZW50X2NvbXBvbmVudCA9IGNvbXBvbmVudDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldF9jdXJyZW50X2NvbXBvbmVudCgpIHtcblx0aWYgKCFjdXJyZW50X2NvbXBvbmVudCkgdGhyb3cgbmV3IEVycm9yKCdGdW5jdGlvbiBjYWxsZWQgb3V0c2lkZSBjb21wb25lbnQgaW5pdGlhbGl6YXRpb24nKTtcblx0cmV0dXJuIGN1cnJlbnRfY29tcG9uZW50O1xufVxuXG4vKipcbiAqIFNjaGVkdWxlcyBhIGNhbGxiYWNrIHRvIHJ1biBpbW1lZGlhdGVseSBiZWZvcmUgdGhlIGNvbXBvbmVudCBpcyB1cGRhdGVkIGFmdGVyIGFueSBzdGF0ZSBjaGFuZ2UuXG4gKlxuICogVGhlIGZpcnN0IHRpbWUgdGhlIGNhbGxiYWNrIHJ1bnMgd2lsbCBiZSBiZWZvcmUgdGhlIGluaXRpYWwgYG9uTW91bnRgXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI2JlZm9yZXVwZGF0ZVxuICogQHBhcmFtIHsoKSA9PiBhbnl9IGZuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJlZm9yZVVwZGF0ZShmbikge1xuXHRnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5iZWZvcmVfdXBkYXRlLnB1c2goZm4pO1xufVxuXG4vKipcbiAqIFRoZSBgb25Nb3VudGAgZnVuY3Rpb24gc2NoZWR1bGVzIGEgY2FsbGJhY2sgdG8gcnVuIGFzIHNvb24gYXMgdGhlIGNvbXBvbmVudCBoYXMgYmVlbiBtb3VudGVkIHRvIHRoZSBET00uXG4gKiBJdCBtdXN0IGJlIGNhbGxlZCBkdXJpbmcgdGhlIGNvbXBvbmVudCdzIGluaXRpYWxpc2F0aW9uIChidXQgZG9lc24ndCBuZWVkIHRvIGxpdmUgKmluc2lkZSogdGhlIGNvbXBvbmVudDtcbiAqIGl0IGNhbiBiZSBjYWxsZWQgZnJvbSBhbiBleHRlcm5hbCBtb2R1bGUpLlxuICpcbiAqIElmIGEgZnVuY3Rpb24gaXMgcmV0dXJuZWQgX3N5bmNocm9ub3VzbHlfIGZyb20gYG9uTW91bnRgLCBpdCB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkLlxuICpcbiAqIGBvbk1vdW50YCBkb2VzIG5vdCBydW4gaW5zaWRlIGEgW3NlcnZlci1zaWRlIGNvbXBvbmVudF0oaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3MjcnVuLXRpbWUtc2VydmVyLXNpZGUtY29tcG9uZW50LWFwaSkuXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI29ubW91bnRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0geygpID0+IGltcG9ydCgnLi9wcml2YXRlLmpzJykuTm90RnVuY3Rpb248VD4gfCBQcm9taXNlPGltcG9ydCgnLi9wcml2YXRlLmpzJykuTm90RnVuY3Rpb248VD4+IHwgKCgpID0+IGFueSl9IGZuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoZm4pIHtcblx0Z2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQub25fbW91bnQucHVzaChmbik7XG59XG5cbi8qKlxuICogU2NoZWR1bGVzIGEgY2FsbGJhY2sgdG8gcnVuIGltbWVkaWF0ZWx5IGFmdGVyIHRoZSBjb21wb25lbnQgaGFzIGJlZW4gdXBkYXRlZC5cbiAqXG4gKiBUaGUgZmlyc3QgdGltZSB0aGUgY2FsbGJhY2sgcnVucyB3aWxsIGJlIGFmdGVyIHRoZSBpbml0aWFsIGBvbk1vdW50YFxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZSNhZnRlcnVwZGF0ZVxuICogQHBhcmFtIHsoKSA9PiBhbnl9IGZuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFmdGVyVXBkYXRlKGZuKSB7XG5cdGdldF9jdXJyZW50X2NvbXBvbmVudCgpLiQkLmFmdGVyX3VwZGF0ZS5wdXNoKGZuKTtcbn1cblxuLyoqXG4gKiBTY2hlZHVsZXMgYSBjYWxsYmFjayB0byBydW4gaW1tZWRpYXRlbHkgYmVmb3JlIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkLlxuICpcbiAqIE91dCBvZiBgb25Nb3VudGAsIGBiZWZvcmVVcGRhdGVgLCBgYWZ0ZXJVcGRhdGVgIGFuZCBgb25EZXN0cm95YCwgdGhpcyBpcyB0aGVcbiAqIG9ubHkgb25lIHRoYXQgcnVucyBpbnNpZGUgYSBzZXJ2ZXItc2lkZSBjb21wb25lbnQuXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI29uZGVzdHJveVxuICogQHBhcmFtIHsoKSA9PiBhbnl9IGZuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uRGVzdHJveShmbikge1xuXHRnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5vbl9kZXN0cm95LnB1c2goZm4pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYW4gZXZlbnQgZGlzcGF0Y2hlciB0aGF0IGNhbiBiZSB1c2VkIHRvIGRpc3BhdGNoIFtjb21wb25lbnQgZXZlbnRzXShodHRwczovL3N2ZWx0ZS5kZXYvZG9jcyN0ZW1wbGF0ZS1zeW50YXgtY29tcG9uZW50LWRpcmVjdGl2ZXMtb24tZXZlbnRuYW1lKS5cbiAqIEV2ZW50IGRpc3BhdGNoZXJzIGFyZSBmdW5jdGlvbnMgdGhhdCBjYW4gdGFrZSB0d28gYXJndW1lbnRzOiBgbmFtZWAgYW5kIGBkZXRhaWxgLlxuICpcbiAqIENvbXBvbmVudCBldmVudHMgY3JlYXRlZCB3aXRoIGBjcmVhdGVFdmVudERpc3BhdGNoZXJgIGNyZWF0ZSBhXG4gKiBbQ3VzdG9tRXZlbnRdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9DdXN0b21FdmVudCkuXG4gKiBUaGVzZSBldmVudHMgZG8gbm90IFtidWJibGVdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvTGVhcm4vSmF2YVNjcmlwdC9CdWlsZGluZ19ibG9ja3MvRXZlbnRzI0V2ZW50X2J1YmJsaW5nX2FuZF9jYXB0dXJlKS5cbiAqIFRoZSBgZGV0YWlsYCBhcmd1bWVudCBjb3JyZXNwb25kcyB0byB0aGUgW0N1c3RvbUV2ZW50LmRldGFpbF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0N1c3RvbUV2ZW50L2RldGFpbClcbiAqIHByb3BlcnR5IGFuZCBjYW4gY29udGFpbiBhbnkgdHlwZSBvZiBkYXRhLlxuICpcbiAqIFRoZSBldmVudCBkaXNwYXRjaGVyIGNhbiBiZSB0eXBlZCB0byBuYXJyb3cgdGhlIGFsbG93ZWQgZXZlbnQgbmFtZXMgYW5kIHRoZSB0eXBlIG9mIHRoZSBgZGV0YWlsYCBhcmd1bWVudDpcbiAqIGBgYHRzXG4gKiBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcjx7XG4gKiAgbG9hZGVkOiBuZXZlcjsgLy8gZG9lcyBub3QgdGFrZSBhIGRldGFpbCBhcmd1bWVudFxuICogIGNoYW5nZTogc3RyaW5nOyAvLyB0YWtlcyBhIGRldGFpbCBhcmd1bWVudCBvZiB0eXBlIHN0cmluZywgd2hpY2ggaXMgcmVxdWlyZWRcbiAqICBvcHRpb25hbDogbnVtYmVyIHwgbnVsbDsgLy8gdGFrZXMgYW4gb3B0aW9uYWwgZGV0YWlsIGFyZ3VtZW50IG9mIHR5cGUgbnVtYmVyXG4gKiB9PigpO1xuICogYGBgXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI2NyZWF0ZWV2ZW50ZGlzcGF0Y2hlclxuICogQHRlbXBsYXRlIHtSZWNvcmQ8c3RyaW5nLCBhbnk+fSBbRXZlbnRNYXA9YW55XVxuICogQHJldHVybnMge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5FdmVudERpc3BhdGNoZXI8RXZlbnRNYXA+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCkge1xuXHRjb25zdCBjb21wb25lbnQgPSBnZXRfY3VycmVudF9jb21wb25lbnQoKTtcblx0cmV0dXJuICh0eXBlLCBkZXRhaWwsIHsgY2FuY2VsYWJsZSA9IGZhbHNlIH0gPSB7fSkgPT4ge1xuXHRcdGNvbnN0IGNhbGxiYWNrcyA9IGNvbXBvbmVudC4kJC5jYWxsYmFja3NbdHlwZV07XG5cdFx0aWYgKGNhbGxiYWNrcykge1xuXHRcdFx0Ly8gVE9ETyBhcmUgdGhlcmUgc2l0dWF0aW9ucyB3aGVyZSBldmVudHMgY291bGQgYmUgZGlzcGF0Y2hlZFxuXHRcdFx0Ly8gaW4gYSBzZXJ2ZXIgKG5vbi1ET00pIGVudmlyb25tZW50P1xuXHRcdFx0Y29uc3QgZXZlbnQgPSBjdXN0b21fZXZlbnQoLyoqIEB0eXBlIHtzdHJpbmd9ICovICh0eXBlKSwgZGV0YWlsLCB7IGNhbmNlbGFibGUgfSk7XG5cdFx0XHRjYWxsYmFja3Muc2xpY2UoKS5mb3JFYWNoKChmbikgPT4ge1xuXHRcdFx0XHRmbi5jYWxsKGNvbXBvbmVudCwgZXZlbnQpO1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQ7XG5cdFx0fVxuXHRcdHJldHVybiB0cnVlO1xuXHR9O1xufVxuXG4vKipcbiAqIEFzc29jaWF0ZXMgYW4gYXJiaXRyYXJ5IGBjb250ZXh0YCBvYmplY3Qgd2l0aCB0aGUgY3VycmVudCBjb21wb25lbnQgYW5kIHRoZSBzcGVjaWZpZWQgYGtleWBcbiAqIGFuZCByZXR1cm5zIHRoYXQgb2JqZWN0LiBUaGUgY29udGV4dCBpcyB0aGVuIGF2YWlsYWJsZSB0byBjaGlsZHJlbiBvZiB0aGUgY29tcG9uZW50XG4gKiAoaW5jbHVkaW5nIHNsb3R0ZWQgY29udGVudCkgd2l0aCBgZ2V0Q29udGV4dGAuXG4gKlxuICogTGlrZSBsaWZlY3ljbGUgZnVuY3Rpb25zLCB0aGlzIG11c3QgYmUgY2FsbGVkIGR1cmluZyBjb21wb25lbnQgaW5pdGlhbGlzYXRpb24uXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI3NldGNvbnRleHRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2FueX0ga2V5XG4gKiBAcGFyYW0ge1R9IGNvbnRleHRcbiAqIEByZXR1cm5zIHtUfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0Q29udGV4dChrZXksIGNvbnRleHQpIHtcblx0Z2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQuY29udGV4dC5zZXQoa2V5LCBjb250ZXh0KTtcblx0cmV0dXJuIGNvbnRleHQ7XG59XG5cbi8qKlxuICogUmV0cmlldmVzIHRoZSBjb250ZXh0IHRoYXQgYmVsb25ncyB0byB0aGUgY2xvc2VzdCBwYXJlbnQgY29tcG9uZW50IHdpdGggdGhlIHNwZWNpZmllZCBga2V5YC5cbiAqIE11c3QgYmUgY2FsbGVkIGR1cmluZyBjb21wb25lbnQgaW5pdGlhbGlzYXRpb24uXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI2dldGNvbnRleHRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2FueX0ga2V5XG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRleHQoa2V5KSB7XG5cdHJldHVybiBnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5jb250ZXh0LmdldChrZXkpO1xufVxuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgd2hvbGUgY29udGV4dCBtYXAgdGhhdCBiZWxvbmdzIHRvIHRoZSBjbG9zZXN0IHBhcmVudCBjb21wb25lbnQuXG4gKiBNdXN0IGJlIGNhbGxlZCBkdXJpbmcgY29tcG9uZW50IGluaXRpYWxpc2F0aW9uLiBVc2VmdWwsIGZvciBleGFtcGxlLCBpZiB5b3VcbiAqIHByb2dyYW1tYXRpY2FsbHkgY3JlYXRlIGEgY29tcG9uZW50IGFuZCB3YW50IHRvIHBhc3MgdGhlIGV4aXN0aW5nIGNvbnRleHQgdG8gaXQuXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI2dldGFsbGNvbnRleHRzXG4gKiBAdGVtcGxhdGUge01hcDxhbnksIGFueT59IFtUPU1hcDxhbnksIGFueT5dXG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFsbENvbnRleHRzKCkge1xuXHRyZXR1cm4gZ2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQuY29udGV4dDtcbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBhIGdpdmVuIGBrZXlgIGhhcyBiZWVuIHNldCBpbiB0aGUgY29udGV4dCBvZiBhIHBhcmVudCBjb21wb25lbnQuXG4gKiBNdXN0IGJlIGNhbGxlZCBkdXJpbmcgY29tcG9uZW50IGluaXRpYWxpc2F0aW9uLlxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZSNoYXNjb250ZXh0XG4gKiBAcGFyYW0ge2FueX0ga2V5XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0NvbnRleHQoa2V5KSB7XG5cdHJldHVybiBnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5jb250ZXh0LmhhcyhrZXkpO1xufVxuXG4vLyBUT0RPIGZpZ3VyZSBvdXQgaWYgd2Ugc3RpbGwgd2FudCB0byBzdXBwb3J0XG4vLyBzaG9ydGhhbmQgZXZlbnRzLCBvciBpZiB3ZSB3YW50IHRvIGltcGxlbWVudFxuLy8gYSByZWFsIGJ1YmJsaW5nIG1lY2hhbmlzbVxuLyoqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKiBAcGFyYW0gZXZlbnRcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYnViYmxlKGNvbXBvbmVudCwgZXZlbnQpIHtcblx0Y29uc3QgY2FsbGJhY2tzID0gY29tcG9uZW50LiQkLmNhbGxiYWNrc1tldmVudC50eXBlXTtcblx0aWYgKGNhbGxiYWNrcykge1xuXHRcdC8vIEB0cy1pZ25vcmVcblx0XHRjYWxsYmFja3Muc2xpY2UoKS5mb3JFYWNoKChmbikgPT4gZm4uY2FsbCh0aGlzLCBldmVudCkpO1xuXHR9XG59XG4iLCAiaW1wb3J0IHsgcnVuX2FsbCB9IGZyb20gJy4vdXRpbHMuanMnO1xuaW1wb3J0IHsgY3VycmVudF9jb21wb25lbnQsIHNldF9jdXJyZW50X2NvbXBvbmVudCB9IGZyb20gJy4vbGlmZWN5Y2xlLmpzJztcblxuZXhwb3J0IGNvbnN0IGRpcnR5X2NvbXBvbmVudHMgPSBbXTtcbmV4cG9ydCBjb25zdCBpbnRyb3MgPSB7IGVuYWJsZWQ6IGZhbHNlIH07XG5leHBvcnQgY29uc3QgYmluZGluZ19jYWxsYmFja3MgPSBbXTtcblxubGV0IHJlbmRlcl9jYWxsYmFja3MgPSBbXTtcblxuY29uc3QgZmx1c2hfY2FsbGJhY2tzID0gW107XG5cbmNvbnN0IHJlc29sdmVkX3Byb21pc2UgPSAvKiBAX19QVVJFX18gKi8gUHJvbWlzZS5yZXNvbHZlKCk7XG5cbmxldCB1cGRhdGVfc2NoZWR1bGVkID0gZmFsc2U7XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzY2hlZHVsZV91cGRhdGUoKSB7XG5cdGlmICghdXBkYXRlX3NjaGVkdWxlZCkge1xuXHRcdHVwZGF0ZV9zY2hlZHVsZWQgPSB0cnVlO1xuXHRcdHJlc29sdmVkX3Byb21pc2UudGhlbihmbHVzaCk7XG5cdH1cbn1cblxuLyoqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRpY2soKSB7XG5cdHNjaGVkdWxlX3VwZGF0ZSgpO1xuXHRyZXR1cm4gcmVzb2x2ZWRfcHJvbWlzZTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZF9yZW5kZXJfY2FsbGJhY2soZm4pIHtcblx0cmVuZGVyX2NhbGxiYWNrcy5wdXNoKGZuKTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZF9mbHVzaF9jYWxsYmFjayhmbikge1xuXHRmbHVzaF9jYWxsYmFja3MucHVzaChmbik7XG59XG5cbi8vIGZsdXNoKCkgY2FsbHMgY2FsbGJhY2tzIGluIHRoaXMgb3JkZXI6XG4vLyAxLiBBbGwgYmVmb3JlVXBkYXRlIGNhbGxiYWNrcywgaW4gb3JkZXI6IHBhcmVudHMgYmVmb3JlIGNoaWxkcmVuXG4vLyAyLiBBbGwgYmluZDp0aGlzIGNhbGxiYWNrcywgaW4gcmV2ZXJzZSBvcmRlcjogY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMuXG4vLyAzLiBBbGwgYWZ0ZXJVcGRhdGUgY2FsbGJhY2tzLCBpbiBvcmRlcjogcGFyZW50cyBiZWZvcmUgY2hpbGRyZW4uIEVYQ0VQVFxuLy8gICAgZm9yIGFmdGVyVXBkYXRlcyBjYWxsZWQgZHVyaW5nIHRoZSBpbml0aWFsIG9uTW91bnQsIHdoaWNoIGFyZSBjYWxsZWQgaW5cbi8vICAgIHJldmVyc2Ugb3JkZXI6IGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLlxuLy8gU2luY2UgY2FsbGJhY2tzIG1pZ2h0IHVwZGF0ZSBjb21wb25lbnQgdmFsdWVzLCB3aGljaCBjb3VsZCB0cmlnZ2VyIGFub3RoZXJcbi8vIGNhbGwgdG8gZmx1c2goKSwgdGhlIGZvbGxvd2luZyBzdGVwcyBndWFyZCBhZ2FpbnN0IHRoaXM6XG4vLyAxLiBEdXJpbmcgYmVmb3JlVXBkYXRlLCBhbnkgdXBkYXRlZCBjb21wb25lbnRzIHdpbGwgYmUgYWRkZWQgdG8gdGhlXG4vLyAgICBkaXJ0eV9jb21wb25lbnRzIGFycmF5IGFuZCB3aWxsIGNhdXNlIGEgcmVlbnRyYW50IGNhbGwgdG8gZmx1c2goKS4gQmVjYXVzZVxuLy8gICAgdGhlIGZsdXNoIGluZGV4IGlzIGtlcHQgb3V0c2lkZSB0aGUgZnVuY3Rpb24sIHRoZSByZWVudHJhbnQgY2FsbCB3aWxsIHBpY2tcbi8vICAgIHVwIHdoZXJlIHRoZSBlYXJsaWVyIGNhbGwgbGVmdCBvZmYgYW5kIGdvIHRocm91Z2ggYWxsIGRpcnR5IGNvbXBvbmVudHMuIFRoZVxuLy8gICAgY3VycmVudF9jb21wb25lbnQgdmFsdWUgaXMgc2F2ZWQgYW5kIHJlc3RvcmVkIHNvIHRoYXQgdGhlIHJlZW50cmFudCBjYWxsIHdpbGxcbi8vICAgIG5vdCBpbnRlcmZlcmUgd2l0aCB0aGUgXCJwYXJlbnRcIiBmbHVzaCgpIGNhbGwuXG4vLyAyLiBiaW5kOnRoaXMgY2FsbGJhY2tzIGNhbm5vdCB0cmlnZ2VyIG5ldyBmbHVzaCgpIGNhbGxzLlxuLy8gMy4gRHVyaW5nIGFmdGVyVXBkYXRlLCBhbnkgdXBkYXRlZCBjb21wb25lbnRzIHdpbGwgTk9UIGhhdmUgdGhlaXIgYWZ0ZXJVcGRhdGVcbi8vICAgIGNhbGxiYWNrIGNhbGxlZCBhIHNlY29uZCB0aW1lOyB0aGUgc2Vlbl9jYWxsYmFja3Mgc2V0LCBvdXRzaWRlIHRoZSBmbHVzaCgpXG4vLyAgICBmdW5jdGlvbiwgZ3VhcmFudGVlcyB0aGlzIGJlaGF2aW9yLlxuY29uc3Qgc2Vlbl9jYWxsYmFja3MgPSBuZXcgU2V0KCk7XG5cbmxldCBmbHVzaGlkeCA9IDA7IC8vIERvICpub3QqIG1vdmUgdGhpcyBpbnNpZGUgdGhlIGZsdXNoKCkgZnVuY3Rpb25cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZsdXNoKCkge1xuXHQvLyBEbyBub3QgcmVlbnRlciBmbHVzaCB3aGlsZSBkaXJ0eSBjb21wb25lbnRzIGFyZSB1cGRhdGVkLCBhcyB0aGlzIGNhblxuXHQvLyByZXN1bHQgaW4gYW4gaW5maW5pdGUgbG9vcC4gSW5zdGVhZCwgbGV0IHRoZSBpbm5lciBmbHVzaCBoYW5kbGUgaXQuXG5cdC8vIFJlZW50cmFuY3kgaXMgb2sgYWZ0ZXJ3YXJkcyBmb3IgYmluZGluZ3MgZXRjLlxuXHRpZiAoZmx1c2hpZHggIT09IDApIHtcblx0XHRyZXR1cm47XG5cdH1cblx0Y29uc3Qgc2F2ZWRfY29tcG9uZW50ID0gY3VycmVudF9jb21wb25lbnQ7XG5cdGRvIHtcblx0XHQvLyBmaXJzdCwgY2FsbCBiZWZvcmVVcGRhdGUgZnVuY3Rpb25zXG5cdFx0Ly8gYW5kIHVwZGF0ZSBjb21wb25lbnRzXG5cdFx0dHJ5IHtcblx0XHRcdHdoaWxlIChmbHVzaGlkeCA8IGRpcnR5X2NvbXBvbmVudHMubGVuZ3RoKSB7XG5cdFx0XHRcdGNvbnN0IGNvbXBvbmVudCA9IGRpcnR5X2NvbXBvbmVudHNbZmx1c2hpZHhdO1xuXHRcdFx0XHRmbHVzaGlkeCsrO1xuXHRcdFx0XHRzZXRfY3VycmVudF9jb21wb25lbnQoY29tcG9uZW50KTtcblx0XHRcdFx0dXBkYXRlKGNvbXBvbmVudC4kJCk7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0Ly8gcmVzZXQgZGlydHkgc3RhdGUgdG8gbm90IGVuZCB1cCBpbiBhIGRlYWRsb2NrZWQgc3RhdGUgYW5kIHRoZW4gcmV0aHJvd1xuXHRcdFx0ZGlydHlfY29tcG9uZW50cy5sZW5ndGggPSAwO1xuXHRcdFx0Zmx1c2hpZHggPSAwO1xuXHRcdFx0dGhyb3cgZTtcblx0XHR9XG5cdFx0c2V0X2N1cnJlbnRfY29tcG9uZW50KG51bGwpO1xuXHRcdGRpcnR5X2NvbXBvbmVudHMubGVuZ3RoID0gMDtcblx0XHRmbHVzaGlkeCA9IDA7XG5cdFx0d2hpbGUgKGJpbmRpbmdfY2FsbGJhY2tzLmxlbmd0aCkgYmluZGluZ19jYWxsYmFja3MucG9wKCkoKTtcblx0XHQvLyB0aGVuLCBvbmNlIGNvbXBvbmVudHMgYXJlIHVwZGF0ZWQsIGNhbGxcblx0XHQvLyBhZnRlclVwZGF0ZSBmdW5jdGlvbnMuIFRoaXMgbWF5IGNhdXNlXG5cdFx0Ly8gc3Vic2VxdWVudCB1cGRhdGVzLi4uXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCByZW5kZXJfY2FsbGJhY2tzLmxlbmd0aDsgaSArPSAxKSB7XG5cdFx0XHRjb25zdCBjYWxsYmFjayA9IHJlbmRlcl9jYWxsYmFja3NbaV07XG5cdFx0XHRpZiAoIXNlZW5fY2FsbGJhY2tzLmhhcyhjYWxsYmFjaykpIHtcblx0XHRcdFx0Ly8gLi4uc28gZ3VhcmQgYWdhaW5zdCBpbmZpbml0ZSBsb29wc1xuXHRcdFx0XHRzZWVuX2NhbGxiYWNrcy5hZGQoY2FsbGJhY2spO1xuXHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZW5kZXJfY2FsbGJhY2tzLmxlbmd0aCA9IDA7XG5cdH0gd2hpbGUgKGRpcnR5X2NvbXBvbmVudHMubGVuZ3RoKTtcblx0d2hpbGUgKGZsdXNoX2NhbGxiYWNrcy5sZW5ndGgpIHtcblx0XHRmbHVzaF9jYWxsYmFja3MucG9wKCkoKTtcblx0fVxuXHR1cGRhdGVfc2NoZWR1bGVkID0gZmFsc2U7XG5cdHNlZW5fY2FsbGJhY2tzLmNsZWFyKCk7XG5cdHNldF9jdXJyZW50X2NvbXBvbmVudChzYXZlZF9jb21wb25lbnQpO1xufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5mdW5jdGlvbiB1cGRhdGUoJCQpIHtcblx0aWYgKCQkLmZyYWdtZW50ICE9PSBudWxsKSB7XG5cdFx0JCQudXBkYXRlKCk7XG5cdFx0cnVuX2FsbCgkJC5iZWZvcmVfdXBkYXRlKTtcblx0XHRjb25zdCBkaXJ0eSA9ICQkLmRpcnR5O1xuXHRcdCQkLmRpcnR5ID0gWy0xXTtcblx0XHQkJC5mcmFnbWVudCAmJiAkJC5mcmFnbWVudC5wKCQkLmN0eCwgZGlydHkpO1xuXHRcdCQkLmFmdGVyX3VwZGF0ZS5mb3JFYWNoKGFkZF9yZW5kZXJfY2FsbGJhY2spO1xuXHR9XG59XG5cbi8qKlxuICogVXNlZnVsIGZvciBleGFtcGxlIHRvIGV4ZWN1dGUgcmVtYWluaW5nIGBhZnRlclVwZGF0ZWAgY2FsbGJhY2tzIGJlZm9yZSBleGVjdXRpbmcgYGRlc3Ryb3lgLlxuICogQHBhcmFtIHtGdW5jdGlvbltdfSBmbnNcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZmx1c2hfcmVuZGVyX2NhbGxiYWNrcyhmbnMpIHtcblx0Y29uc3QgZmlsdGVyZWQgPSBbXTtcblx0Y29uc3QgdGFyZ2V0cyA9IFtdO1xuXHRyZW5kZXJfY2FsbGJhY2tzLmZvckVhY2goKGMpID0+IChmbnMuaW5kZXhPZihjKSA9PT0gLTEgPyBmaWx0ZXJlZC5wdXNoKGMpIDogdGFyZ2V0cy5wdXNoKGMpKSk7XG5cdHRhcmdldHMuZm9yRWFjaCgoYykgPT4gYygpKTtcblx0cmVuZGVyX2NhbGxiYWNrcyA9IGZpbHRlcmVkO1xufVxuIiwgImltcG9ydCB7IGlkZW50aXR5IGFzIGxpbmVhciwgaXNfZnVuY3Rpb24sIG5vb3AsIHJ1bl9hbGwgfSBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCB7IG5vdyB9IGZyb20gJy4vZW52aXJvbm1lbnQuanMnO1xuaW1wb3J0IHsgbG9vcCB9IGZyb20gJy4vbG9vcC5qcyc7XG5pbXBvcnQgeyBjcmVhdGVfcnVsZSwgZGVsZXRlX3J1bGUgfSBmcm9tICcuL3N0eWxlX21hbmFnZXIuanMnO1xuaW1wb3J0IHsgY3VzdG9tX2V2ZW50IH0gZnJvbSAnLi9kb20uanMnO1xuaW1wb3J0IHsgYWRkX3JlbmRlcl9jYWxsYmFjayB9IGZyb20gJy4vc2NoZWR1bGVyLmpzJztcblxuLyoqXG4gKiBAdHlwZSB7UHJvbWlzZTx2b2lkPiB8IG51bGx9XG4gKi9cbmxldCBwcm9taXNlO1xuXG4vKipcbiAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxuICovXG5mdW5jdGlvbiB3YWl0KCkge1xuXHRpZiAoIXByb21pc2UpIHtcblx0XHRwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG5cdFx0cHJvbWlzZS50aGVuKCgpID0+IHtcblx0XHRcdHByb21pc2UgPSBudWxsO1xuXHRcdH0pO1xuXHR9XG5cdHJldHVybiBwcm9taXNlO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gbm9kZVxuICogQHBhcmFtIHtJTlRSTyB8IE9VVFJPIHwgYm9vbGVhbn0gZGlyZWN0aW9uXG4gKiBAcGFyYW0geydzdGFydCcgfCAnZW5kJ30ga2luZFxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIGRpc3BhdGNoKG5vZGUsIGRpcmVjdGlvbiwga2luZCkge1xuXHRub2RlLmRpc3BhdGNoRXZlbnQoY3VzdG9tX2V2ZW50KGAke2RpcmVjdGlvbiA/ICdpbnRybycgOiAnb3V0cm8nfSR7a2luZH1gKSk7XG59XG5cbmNvbnN0IG91dHJvaW5nID0gbmV3IFNldCgpO1xuXG4vKipcbiAqIEB0eXBlIHtPdXRyb31cbiAqL1xubGV0IG91dHJvcztcblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBncm91cF9vdXRyb3MoKSB7XG5cdG91dHJvcyA9IHtcblx0XHRyOiAwLFxuXHRcdGM6IFtdLFxuXHRcdHA6IG91dHJvcyAvLyBwYXJlbnQgZ3JvdXBcblx0fTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBjaGVja19vdXRyb3MoKSB7XG5cdGlmICghb3V0cm9zLnIpIHtcblx0XHRydW5fYWxsKG91dHJvcy5jKTtcblx0fVxuXHRvdXRyb3MgPSBvdXRyb3MucDtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9wcml2YXRlLmpzJykuRnJhZ21lbnR9IGJsb2NrXG4gKiBAcGFyYW0gezAgfCAxfSBbbG9jYWxdXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zaXRpb25faW4oYmxvY2ssIGxvY2FsKSB7XG5cdGlmIChibG9jayAmJiBibG9jay5pKSB7XG5cdFx0b3V0cm9pbmcuZGVsZXRlKGJsb2NrKTtcblx0XHRibG9jay5pKGxvY2FsKTtcblx0fVxufVxuXG4vKipcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3ByaXZhdGUuanMnKS5GcmFnbWVudH0gYmxvY2tcbiAqIEBwYXJhbSB7MCB8IDF9IGxvY2FsXG4gKiBAcGFyYW0gezAgfCAxfSBbZGV0YWNoXVxuICogQHBhcmFtIHsoKSA9PiB2b2lkfSBbY2FsbGJhY2tdXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zaXRpb25fb3V0KGJsb2NrLCBsb2NhbCwgZGV0YWNoLCBjYWxsYmFjaykge1xuXHRpZiAoYmxvY2sgJiYgYmxvY2subykge1xuXHRcdGlmIChvdXRyb2luZy5oYXMoYmxvY2spKSByZXR1cm47XG5cdFx0b3V0cm9pbmcuYWRkKGJsb2NrKTtcblx0XHRvdXRyb3MuYy5wdXNoKCgpID0+IHtcblx0XHRcdG91dHJvaW5nLmRlbGV0ZShibG9jayk7XG5cdFx0XHRpZiAoY2FsbGJhY2spIHtcblx0XHRcdFx0aWYgKGRldGFjaCkgYmxvY2suZCgxKTtcblx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRibG9jay5vKGxvY2FsKTtcblx0fSBlbHNlIGlmIChjYWxsYmFjaykge1xuXHRcdGNhbGxiYWNrKCk7XG5cdH1cbn1cblxuLyoqXG4gKiBAdHlwZSB7aW1wb3J0KCcuLi90cmFuc2l0aW9uL3B1YmxpYy5qcycpLlRyYW5zaXRpb25Db25maWd9XG4gKi9cbmNvbnN0IG51bGxfdHJhbnNpdGlvbiA9IHsgZHVyYXRpb246IDAgfTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnQgJiBFbGVtZW50Q1NTSW5saW5lU3R5bGV9IG5vZGVcbiAqIEBwYXJhbSB7VHJhbnNpdGlvbkZufSBmblxuICogQHBhcmFtIHthbnl9IHBhcmFtc1xuICogQHJldHVybnMge3sgc3RhcnQoKTogdm9pZDsgaW52YWxpZGF0ZSgpOiB2b2lkOyBlbmQoKTogdm9pZDsgfX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZV9pbl90cmFuc2l0aW9uKG5vZGUsIGZuLCBwYXJhbXMpIHtcblx0LyoqXG5cdCAqIEB0eXBlIHtUcmFuc2l0aW9uT3B0aW9uc30gKi9cblx0Y29uc3Qgb3B0aW9ucyA9IHsgZGlyZWN0aW9uOiAnaW4nIH07XG5cdGxldCBjb25maWcgPSBmbihub2RlLCBwYXJhbXMsIG9wdGlvbnMpO1xuXHRsZXQgcnVubmluZyA9IGZhbHNlO1xuXHRsZXQgYW5pbWF0aW9uX25hbWU7XG5cdGxldCB0YXNrO1xuXHRsZXQgdWlkID0gMDtcblxuXHQvKipcblx0ICogQHJldHVybnMge3ZvaWR9ICovXG5cdGZ1bmN0aW9uIGNsZWFudXAoKSB7XG5cdFx0aWYgKGFuaW1hdGlvbl9uYW1lKSBkZWxldGVfcnVsZShub2RlLCBhbmltYXRpb25fbmFtZSk7XG5cdH1cblxuXHQvKipcblx0ICogQHJldHVybnMge3ZvaWR9ICovXG5cdGZ1bmN0aW9uIGdvKCkge1xuXHRcdGNvbnN0IHtcblx0XHRcdGRlbGF5ID0gMCxcblx0XHRcdGR1cmF0aW9uID0gMzAwLFxuXHRcdFx0ZWFzaW5nID0gbGluZWFyLFxuXHRcdFx0dGljayA9IG5vb3AsXG5cdFx0XHRjc3Ncblx0XHR9ID0gY29uZmlnIHx8IG51bGxfdHJhbnNpdGlvbjtcblx0XHRpZiAoY3NzKSBhbmltYXRpb25fbmFtZSA9IGNyZWF0ZV9ydWxlKG5vZGUsIDAsIDEsIGR1cmF0aW9uLCBkZWxheSwgZWFzaW5nLCBjc3MsIHVpZCsrKTtcblx0XHR0aWNrKDAsIDEpO1xuXHRcdGNvbnN0IHN0YXJ0X3RpbWUgPSBub3coKSArIGRlbGF5O1xuXHRcdGNvbnN0IGVuZF90aW1lID0gc3RhcnRfdGltZSArIGR1cmF0aW9uO1xuXHRcdGlmICh0YXNrKSB0YXNrLmFib3J0KCk7XG5cdFx0cnVubmluZyA9IHRydWU7XG5cdFx0YWRkX3JlbmRlcl9jYWxsYmFjaygoKSA9PiBkaXNwYXRjaChub2RlLCB0cnVlLCAnc3RhcnQnKSk7XG5cdFx0dGFzayA9IGxvb3AoKG5vdykgPT4ge1xuXHRcdFx0aWYgKHJ1bm5pbmcpIHtcblx0XHRcdFx0aWYgKG5vdyA+PSBlbmRfdGltZSkge1xuXHRcdFx0XHRcdHRpY2soMSwgMCk7XG5cdFx0XHRcdFx0ZGlzcGF0Y2gobm9kZSwgdHJ1ZSwgJ2VuZCcpO1xuXHRcdFx0XHRcdGNsZWFudXAoKTtcblx0XHRcdFx0XHRyZXR1cm4gKHJ1bm5pbmcgPSBmYWxzZSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKG5vdyA+PSBzdGFydF90aW1lKSB7XG5cdFx0XHRcdFx0Y29uc3QgdCA9IGVhc2luZygobm93IC0gc3RhcnRfdGltZSkgLyBkdXJhdGlvbik7XG5cdFx0XHRcdFx0dGljayh0LCAxIC0gdCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBydW5uaW5nO1xuXHRcdH0pO1xuXHR9XG5cdGxldCBzdGFydGVkID0gZmFsc2U7XG5cdHJldHVybiB7XG5cdFx0c3RhcnQoKSB7XG5cdFx0XHRpZiAoc3RhcnRlZCkgcmV0dXJuO1xuXHRcdFx0c3RhcnRlZCA9IHRydWU7XG5cdFx0XHRkZWxldGVfcnVsZShub2RlKTtcblx0XHRcdGlmIChpc19mdW5jdGlvbihjb25maWcpKSB7XG5cdFx0XHRcdGNvbmZpZyA9IGNvbmZpZyhvcHRpb25zKTtcblx0XHRcdFx0d2FpdCgpLnRoZW4oZ28pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Z28oKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdGludmFsaWRhdGUoKSB7XG5cdFx0XHRzdGFydGVkID0gZmFsc2U7XG5cdFx0fSxcblx0XHRlbmQoKSB7XG5cdFx0XHRpZiAocnVubmluZykge1xuXHRcdFx0XHRjbGVhbnVwKCk7XG5cdFx0XHRcdHJ1bm5pbmcgPSBmYWxzZTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50ICYgRWxlbWVudENTU0lubGluZVN0eWxlfSBub2RlXG4gKiBAcGFyYW0ge1RyYW5zaXRpb25Gbn0gZm5cbiAqIEBwYXJhbSB7YW55fSBwYXJhbXNcbiAqIEByZXR1cm5zIHt7IGVuZChyZXNldDogYW55KTogdm9pZDsgfX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZV9vdXRfdHJhbnNpdGlvbihub2RlLCBmbiwgcGFyYW1zKSB7XG5cdC8qKiBAdHlwZSB7VHJhbnNpdGlvbk9wdGlvbnN9ICovXG5cdGNvbnN0IG9wdGlvbnMgPSB7IGRpcmVjdGlvbjogJ291dCcgfTtcblx0bGV0IGNvbmZpZyA9IGZuKG5vZGUsIHBhcmFtcywgb3B0aW9ucyk7XG5cdGxldCBydW5uaW5nID0gdHJ1ZTtcblx0bGV0IGFuaW1hdGlvbl9uYW1lO1xuXHRjb25zdCBncm91cCA9IG91dHJvcztcblx0Z3JvdXAuciArPSAxO1xuXHQvKiogQHR5cGUge2Jvb2xlYW59ICovXG5cdGxldCBvcmlnaW5hbF9pbmVydF92YWx1ZTtcblxuXHQvKipcblx0ICogQHJldHVybnMge3ZvaWR9ICovXG5cdGZ1bmN0aW9uIGdvKCkge1xuXHRcdGNvbnN0IHtcblx0XHRcdGRlbGF5ID0gMCxcblx0XHRcdGR1cmF0aW9uID0gMzAwLFxuXHRcdFx0ZWFzaW5nID0gbGluZWFyLFxuXHRcdFx0dGljayA9IG5vb3AsXG5cdFx0XHRjc3Ncblx0XHR9ID0gY29uZmlnIHx8IG51bGxfdHJhbnNpdGlvbjtcblxuXHRcdGlmIChjc3MpIGFuaW1hdGlvbl9uYW1lID0gY3JlYXRlX3J1bGUobm9kZSwgMSwgMCwgZHVyYXRpb24sIGRlbGF5LCBlYXNpbmcsIGNzcyk7XG5cblx0XHRjb25zdCBzdGFydF90aW1lID0gbm93KCkgKyBkZWxheTtcblx0XHRjb25zdCBlbmRfdGltZSA9IHN0YXJ0X3RpbWUgKyBkdXJhdGlvbjtcblx0XHRhZGRfcmVuZGVyX2NhbGxiYWNrKCgpID0+IGRpc3BhdGNoKG5vZGUsIGZhbHNlLCAnc3RhcnQnKSk7XG5cblx0XHRpZiAoJ2luZXJ0JyBpbiBub2RlKSB7XG5cdFx0XHRvcmlnaW5hbF9pbmVydF92YWx1ZSA9IC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR9ICovIChub2RlKS5pbmVydDtcblx0XHRcdG5vZGUuaW5lcnQgPSB0cnVlO1xuXHRcdH1cblxuXHRcdGxvb3AoKG5vdykgPT4ge1xuXHRcdFx0aWYgKHJ1bm5pbmcpIHtcblx0XHRcdFx0aWYgKG5vdyA+PSBlbmRfdGltZSkge1xuXHRcdFx0XHRcdHRpY2soMCwgMSk7XG5cdFx0XHRcdFx0ZGlzcGF0Y2gobm9kZSwgZmFsc2UsICdlbmQnKTtcblx0XHRcdFx0XHRpZiAoIS0tZ3JvdXAucikge1xuXHRcdFx0XHRcdFx0Ly8gdGhpcyB3aWxsIHJlc3VsdCBpbiBgZW5kKClgIGJlaW5nIGNhbGxlZCxcblx0XHRcdFx0XHRcdC8vIHNvIHdlIGRvbid0IG5lZWQgdG8gY2xlYW4gdXAgaGVyZVxuXHRcdFx0XHRcdFx0cnVuX2FsbChncm91cC5jKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChub3cgPj0gc3RhcnRfdGltZSkge1xuXHRcdFx0XHRcdGNvbnN0IHQgPSBlYXNpbmcoKG5vdyAtIHN0YXJ0X3RpbWUpIC8gZHVyYXRpb24pO1xuXHRcdFx0XHRcdHRpY2soMSAtIHQsIHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcnVubmluZztcblx0XHR9KTtcblx0fVxuXG5cdGlmIChpc19mdW5jdGlvbihjb25maWcpKSB7XG5cdFx0d2FpdCgpLnRoZW4oKCkgPT4ge1xuXHRcdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdFx0Y29uZmlnID0gY29uZmlnKG9wdGlvbnMpO1xuXHRcdFx0Z28oKTtcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHRnbygpO1xuXHR9XG5cblx0cmV0dXJuIHtcblx0XHRlbmQocmVzZXQpIHtcblx0XHRcdGlmIChyZXNldCAmJiAnaW5lcnQnIGluIG5vZGUpIHtcblx0XHRcdFx0bm9kZS5pbmVydCA9IG9yaWdpbmFsX2luZXJ0X3ZhbHVlO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHJlc2V0ICYmIGNvbmZpZy50aWNrKSB7XG5cdFx0XHRcdGNvbmZpZy50aWNrKDEsIDApO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHJ1bm5pbmcpIHtcblx0XHRcdFx0aWYgKGFuaW1hdGlvbl9uYW1lKSBkZWxldGVfcnVsZShub2RlLCBhbmltYXRpb25fbmFtZSk7XG5cdFx0XHRcdHJ1bm5pbmcgPSBmYWxzZTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50ICYgRWxlbWVudENTU0lubGluZVN0eWxlfSBub2RlXG4gKiBAcGFyYW0ge1RyYW5zaXRpb25Gbn0gZm5cbiAqIEBwYXJhbSB7YW55fSBwYXJhbXNcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaW50cm9cbiAqIEByZXR1cm5zIHt7IHJ1bihiOiAwIHwgMSk6IHZvaWQ7IGVuZCgpOiB2b2lkOyB9fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlX2JpZGlyZWN0aW9uYWxfdHJhbnNpdGlvbihub2RlLCBmbiwgcGFyYW1zLCBpbnRybykge1xuXHQvKipcblx0ICogQHR5cGUge1RyYW5zaXRpb25PcHRpb25zfSAqL1xuXHRjb25zdCBvcHRpb25zID0geyBkaXJlY3Rpb246ICdib3RoJyB9O1xuXHRsZXQgY29uZmlnID0gZm4obm9kZSwgcGFyYW1zLCBvcHRpb25zKTtcblx0bGV0IHQgPSBpbnRybyA/IDAgOiAxO1xuXG5cdC8qKlxuXHQgKiBAdHlwZSB7UHJvZ3JhbSB8IG51bGx9ICovXG5cdGxldCBydW5uaW5nX3Byb2dyYW0gPSBudWxsO1xuXG5cdC8qKlxuXHQgKiBAdHlwZSB7UGVuZGluZ1Byb2dyYW0gfCBudWxsfSAqL1xuXHRsZXQgcGVuZGluZ19wcm9ncmFtID0gbnVsbDtcblx0bGV0IGFuaW1hdGlvbl9uYW1lID0gbnVsbDtcblxuXHQvKiogQHR5cGUge2Jvb2xlYW59ICovXG5cdGxldCBvcmlnaW5hbF9pbmVydF92YWx1ZTtcblxuXHQvKipcblx0ICogQHJldHVybnMge3ZvaWR9ICovXG5cdGZ1bmN0aW9uIGNsZWFyX2FuaW1hdGlvbigpIHtcblx0XHRpZiAoYW5pbWF0aW9uX25hbWUpIGRlbGV0ZV9ydWxlKG5vZGUsIGFuaW1hdGlvbl9uYW1lKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge1BlbmRpbmdQcm9ncmFtfSBwcm9ncmFtXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvblxuXHQgKiBAcmV0dXJucyB7UHJvZ3JhbX1cblx0ICovXG5cdGZ1bmN0aW9uIGluaXQocHJvZ3JhbSwgZHVyYXRpb24pIHtcblx0XHRjb25zdCBkID0gLyoqIEB0eXBlIHtQcm9ncmFtWydkJ119ICovIChwcm9ncmFtLmIgLSB0KTtcblx0XHRkdXJhdGlvbiAqPSBNYXRoLmFicyhkKTtcblx0XHRyZXR1cm4ge1xuXHRcdFx0YTogdCxcblx0XHRcdGI6IHByb2dyYW0uYixcblx0XHRcdGQsXG5cdFx0XHRkdXJhdGlvbixcblx0XHRcdHN0YXJ0OiBwcm9ncmFtLnN0YXJ0LFxuXHRcdFx0ZW5kOiBwcm9ncmFtLnN0YXJ0ICsgZHVyYXRpb24sXG5cdFx0XHRncm91cDogcHJvZ3JhbS5ncm91cFxuXHRcdH07XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtJTlRSTyB8IE9VVFJPfSBiXG5cdCAqIEByZXR1cm5zIHt2b2lkfVxuXHQgKi9cblx0ZnVuY3Rpb24gZ28oYikge1xuXHRcdGNvbnN0IHtcblx0XHRcdGRlbGF5ID0gMCxcblx0XHRcdGR1cmF0aW9uID0gMzAwLFxuXHRcdFx0ZWFzaW5nID0gbGluZWFyLFxuXHRcdFx0dGljayA9IG5vb3AsXG5cdFx0XHRjc3Ncblx0XHR9ID0gY29uZmlnIHx8IG51bGxfdHJhbnNpdGlvbjtcblxuXHRcdC8qKlxuXHRcdCAqIEB0eXBlIHtQZW5kaW5nUHJvZ3JhbX0gKi9cblx0XHRjb25zdCBwcm9ncmFtID0ge1xuXHRcdFx0c3RhcnQ6IG5vdygpICsgZGVsYXksXG5cdFx0XHRiXG5cdFx0fTtcblxuXHRcdGlmICghYikge1xuXHRcdFx0Ly8gQHRzLWlnbm9yZSB0b2RvOiBpbXByb3ZlIHR5cGluZ3Ncblx0XHRcdHByb2dyYW0uZ3JvdXAgPSBvdXRyb3M7XG5cdFx0XHRvdXRyb3MuciArPSAxO1xuXHRcdH1cblxuXHRcdGlmICgnaW5lcnQnIGluIG5vZGUpIHtcblx0XHRcdGlmIChiKSB7XG5cdFx0XHRcdGlmIChvcmlnaW5hbF9pbmVydF92YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0Ly8gYWJvcnRlZC9yZXZlcnNlZCBvdXRybyBcdTIwMTQgcmVzdG9yZSBwcmV2aW91cyBpbmVydCB2YWx1ZVxuXHRcdFx0XHRcdG5vZGUuaW5lcnQgPSBvcmlnaW5hbF9pbmVydF92YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0b3JpZ2luYWxfaW5lcnRfdmFsdWUgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAobm9kZSkuaW5lcnQ7XG5cdFx0XHRcdG5vZGUuaW5lcnQgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChydW5uaW5nX3Byb2dyYW0gfHwgcGVuZGluZ19wcm9ncmFtKSB7XG5cdFx0XHRwZW5kaW5nX3Byb2dyYW0gPSBwcm9ncmFtO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBpZiB0aGlzIGlzIGFuIGludHJvLCBhbmQgdGhlcmUncyBhIGRlbGF5LCB3ZSBuZWVkIHRvIGRvXG5cdFx0XHQvLyBhbiBpbml0aWFsIHRpY2sgYW5kL29yIGFwcGx5IENTUyBhbmltYXRpb24gaW1tZWRpYXRlbHlcblx0XHRcdGlmIChjc3MpIHtcblx0XHRcdFx0Y2xlYXJfYW5pbWF0aW9uKCk7XG5cdFx0XHRcdGFuaW1hdGlvbl9uYW1lID0gY3JlYXRlX3J1bGUobm9kZSwgdCwgYiwgZHVyYXRpb24sIGRlbGF5LCBlYXNpbmcsIGNzcyk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoYikgdGljaygwLCAxKTtcblx0XHRcdHJ1bm5pbmdfcHJvZ3JhbSA9IGluaXQocHJvZ3JhbSwgZHVyYXRpb24pO1xuXHRcdFx0YWRkX3JlbmRlcl9jYWxsYmFjaygoKSA9PiBkaXNwYXRjaChub2RlLCBiLCAnc3RhcnQnKSk7XG5cdFx0XHRsb29wKChub3cpID0+IHtcblx0XHRcdFx0aWYgKHBlbmRpbmdfcHJvZ3JhbSAmJiBub3cgPiBwZW5kaW5nX3Byb2dyYW0uc3RhcnQpIHtcblx0XHRcdFx0XHRydW5uaW5nX3Byb2dyYW0gPSBpbml0KHBlbmRpbmdfcHJvZ3JhbSwgZHVyYXRpb24pO1xuXHRcdFx0XHRcdHBlbmRpbmdfcHJvZ3JhbSA9IG51bGw7XG5cdFx0XHRcdFx0ZGlzcGF0Y2gobm9kZSwgcnVubmluZ19wcm9ncmFtLmIsICdzdGFydCcpO1xuXHRcdFx0XHRcdGlmIChjc3MpIHtcblx0XHRcdFx0XHRcdGNsZWFyX2FuaW1hdGlvbigpO1xuXHRcdFx0XHRcdFx0YW5pbWF0aW9uX25hbWUgPSBjcmVhdGVfcnVsZShcblx0XHRcdFx0XHRcdFx0bm9kZSxcblx0XHRcdFx0XHRcdFx0dCxcblx0XHRcdFx0XHRcdFx0cnVubmluZ19wcm9ncmFtLmIsXG5cdFx0XHRcdFx0XHRcdHJ1bm5pbmdfcHJvZ3JhbS5kdXJhdGlvbixcblx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0ZWFzaW5nLFxuXHRcdFx0XHRcdFx0XHRjb25maWcuY3NzXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAocnVubmluZ19wcm9ncmFtKSB7XG5cdFx0XHRcdFx0aWYgKG5vdyA+PSBydW5uaW5nX3Byb2dyYW0uZW5kKSB7XG5cdFx0XHRcdFx0XHR0aWNrKCh0ID0gcnVubmluZ19wcm9ncmFtLmIpLCAxIC0gdCk7XG5cdFx0XHRcdFx0XHRkaXNwYXRjaChub2RlLCBydW5uaW5nX3Byb2dyYW0uYiwgJ2VuZCcpO1xuXHRcdFx0XHRcdFx0aWYgKCFwZW5kaW5nX3Byb2dyYW0pIHtcblx0XHRcdFx0XHRcdFx0Ly8gd2UncmUgZG9uZVxuXHRcdFx0XHRcdFx0XHRpZiAocnVubmluZ19wcm9ncmFtLmIpIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBpbnRybyBcdTIwMTQgd2UgY2FuIHRpZHkgdXAgaW1tZWRpYXRlbHlcblx0XHRcdFx0XHRcdFx0XHRjbGVhcl9hbmltYXRpb24oKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBvdXRybyBcdTIwMTQgbmVlZHMgdG8gYmUgY29vcmRpbmF0ZWRcblx0XHRcdFx0XHRcdFx0XHRpZiAoIS0tcnVubmluZ19wcm9ncmFtLmdyb3VwLnIpIHJ1bl9hbGwocnVubmluZ19wcm9ncmFtLmdyb3VwLmMpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRydW5uaW5nX3Byb2dyYW0gPSBudWxsO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAobm93ID49IHJ1bm5pbmdfcHJvZ3JhbS5zdGFydCkge1xuXHRcdFx0XHRcdFx0Y29uc3QgcCA9IG5vdyAtIHJ1bm5pbmdfcHJvZ3JhbS5zdGFydDtcblx0XHRcdFx0XHRcdHQgPSBydW5uaW5nX3Byb2dyYW0uYSArIHJ1bm5pbmdfcHJvZ3JhbS5kICogZWFzaW5nKHAgLyBydW5uaW5nX3Byb2dyYW0uZHVyYXRpb24pO1xuXHRcdFx0XHRcdFx0dGljayh0LCAxIC0gdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiAhIShydW5uaW5nX3Byb2dyYW0gfHwgcGVuZGluZ19wcm9ncmFtKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4ge1xuXHRcdHJ1bihiKSB7XG5cdFx0XHRpZiAoaXNfZnVuY3Rpb24oY29uZmlnKSkge1xuXHRcdFx0XHR3YWl0KCkudGhlbigoKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3Qgb3B0cyA9IHsgZGlyZWN0aW9uOiBiID8gJ2luJyA6ICdvdXQnIH07XG5cdFx0XHRcdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdFx0XHRcdGNvbmZpZyA9IGNvbmZpZyhvcHRzKTtcblx0XHRcdFx0XHRnbyhiKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRnbyhiKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdGVuZCgpIHtcblx0XHRcdGNsZWFyX2FuaW1hdGlvbigpO1xuXHRcdFx0cnVubmluZ19wcm9ncmFtID0gcGVuZGluZ19wcm9ncmFtID0gbnVsbDtcblx0XHR9XG5cdH07XG59XG5cbi8qKiBAdHlwZWRlZiB7MX0gSU5UUk8gKi9cbi8qKiBAdHlwZWRlZiB7MH0gT1VUUk8gKi9cbi8qKiBAdHlwZWRlZiB7eyBkaXJlY3Rpb246ICdpbicgfCAnb3V0JyB8ICdib3RoJyB9fSBUcmFuc2l0aW9uT3B0aW9ucyAqL1xuLyoqIEB0eXBlZGVmIHsobm9kZTogRWxlbWVudCwgcGFyYW1zOiBhbnksIG9wdGlvbnM6IFRyYW5zaXRpb25PcHRpb25zKSA9PiBpbXBvcnQoJy4uL3RyYW5zaXRpb24vcHVibGljLmpzJykuVHJhbnNpdGlvbkNvbmZpZ30gVHJhbnNpdGlvbkZuICovXG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gT3V0cm9cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSByXG4gKiBAcHJvcGVydHkge0Z1bmN0aW9uW119IGNcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBwXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBQZW5kaW5nUHJvZ3JhbVxuICogQHByb3BlcnR5IHtudW1iZXJ9IHN0YXJ0XG4gKiBAcHJvcGVydHkge0lOVFJPfE9VVFJPfSBiXG4gKiBAcHJvcGVydHkge091dHJvfSBbZ3JvdXBdXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBQcm9ncmFtXG4gKiBAcHJvcGVydHkge251bWJlcn0gYVxuICogQHByb3BlcnR5IHtJTlRST3xPVVRST30gYlxuICogQHByb3BlcnR5IHsxfC0xfSBkXG4gKiBAcHJvcGVydHkge251bWJlcn0gZHVyYXRpb25cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBzdGFydFxuICogQHByb3BlcnR5IHtudW1iZXJ9IGVuZFxuICogQHByb3BlcnR5IHtPdXRyb30gW2dyb3VwXVxuICovXG4iLCAiaW1wb3J0IHsgdHJhbnNpdGlvbl9pbiwgdHJhbnNpdGlvbl9vdXQgfSBmcm9tICcuL3RyYW5zaXRpb25zLmpzJztcbmltcG9ydCB7IHJ1bl9hbGwgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuLy8gZ2VuZXJhbCBlYWNoIGZ1bmN0aW9uczpcblxuZXhwb3J0IGZ1bmN0aW9uIGVuc3VyZV9hcnJheV9saWtlKGFycmF5X2xpa2Vfb3JfaXRlcmF0b3IpIHtcblx0cmV0dXJuIGFycmF5X2xpa2Vfb3JfaXRlcmF0b3I/Lmxlbmd0aCAhPT0gdW5kZWZpbmVkXG5cdFx0PyBhcnJheV9saWtlX29yX2l0ZXJhdG9yXG5cdFx0OiBBcnJheS5mcm9tKGFycmF5X2xpa2Vfb3JfaXRlcmF0b3IpO1xufVxuXG4vLyBrZXllZCBlYWNoIGZ1bmN0aW9uczpcblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlc3Ryb3lfYmxvY2soYmxvY2ssIGxvb2t1cCkge1xuXHRibG9jay5kKDEpO1xuXHRsb29rdXAuZGVsZXRlKGJsb2NrLmtleSk7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBvdXRyb19hbmRfZGVzdHJveV9ibG9jayhibG9jaywgbG9va3VwKSB7XG5cdHRyYW5zaXRpb25fb3V0KGJsb2NrLCAxLCAxLCAoKSA9PiB7XG5cdFx0bG9va3VwLmRlbGV0ZShibG9jay5rZXkpO1xuXHR9KTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpeF9hbmRfZGVzdHJveV9ibG9jayhibG9jaywgbG9va3VwKSB7XG5cdGJsb2NrLmYoKTtcblx0ZGVzdHJveV9ibG9jayhibG9jaywgbG9va3VwKTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpeF9hbmRfb3V0cm9fYW5kX2Rlc3Ryb3lfYmxvY2soYmxvY2ssIGxvb2t1cCkge1xuXHRibG9jay5mKCk7XG5cdG91dHJvX2FuZF9kZXN0cm95X2Jsb2NrKGJsb2NrLCBsb29rdXApO1xufVxuXG4vKiogQHJldHVybnMge2FueVtdfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZV9rZXllZF9lYWNoKFxuXHRvbGRfYmxvY2tzLFxuXHRkaXJ0eSxcblx0Z2V0X2tleSxcblx0ZHluYW1pYyxcblx0Y3R4LFxuXHRsaXN0LFxuXHRsb29rdXAsXG5cdG5vZGUsXG5cdGRlc3Ryb3ksXG5cdGNyZWF0ZV9lYWNoX2Jsb2NrLFxuXHRuZXh0LFxuXHRnZXRfY29udGV4dFxuKSB7XG5cdGxldCBvID0gb2xkX2Jsb2Nrcy5sZW5ndGg7XG5cdGxldCBuID0gbGlzdC5sZW5ndGg7XG5cdGxldCBpID0gbztcblx0Y29uc3Qgb2xkX2luZGV4ZXMgPSB7fTtcblx0d2hpbGUgKGktLSkgb2xkX2luZGV4ZXNbb2xkX2Jsb2Nrc1tpXS5rZXldID0gaTtcblx0Y29uc3QgbmV3X2Jsb2NrcyA9IFtdO1xuXHRjb25zdCBuZXdfbG9va3VwID0gbmV3IE1hcCgpO1xuXHRjb25zdCBkZWx0YXMgPSBuZXcgTWFwKCk7XG5cdGNvbnN0IHVwZGF0ZXMgPSBbXTtcblx0aSA9IG47XG5cdHdoaWxlIChpLS0pIHtcblx0XHRjb25zdCBjaGlsZF9jdHggPSBnZXRfY29udGV4dChjdHgsIGxpc3QsIGkpO1xuXHRcdGNvbnN0IGtleSA9IGdldF9rZXkoY2hpbGRfY3R4KTtcblx0XHRsZXQgYmxvY2sgPSBsb29rdXAuZ2V0KGtleSk7XG5cdFx0aWYgKCFibG9jaykge1xuXHRcdFx0YmxvY2sgPSBjcmVhdGVfZWFjaF9ibG9jayhrZXksIGNoaWxkX2N0eCk7XG5cdFx0XHRibG9jay5jKCk7XG5cdFx0fSBlbHNlIGlmIChkeW5hbWljKSB7XG5cdFx0XHQvLyBkZWZlciB1cGRhdGVzIHVudGlsIGFsbCB0aGUgRE9NIHNodWZmbGluZyBpcyBkb25lXG5cdFx0XHR1cGRhdGVzLnB1c2goKCkgPT4gYmxvY2sucChjaGlsZF9jdHgsIGRpcnR5KSk7XG5cdFx0fVxuXHRcdG5ld19sb29rdXAuc2V0KGtleSwgKG5ld19ibG9ja3NbaV0gPSBibG9jaykpO1xuXHRcdGlmIChrZXkgaW4gb2xkX2luZGV4ZXMpIGRlbHRhcy5zZXQoa2V5LCBNYXRoLmFicyhpIC0gb2xkX2luZGV4ZXNba2V5XSkpO1xuXHR9XG5cdGNvbnN0IHdpbGxfbW92ZSA9IG5ldyBTZXQoKTtcblx0Y29uc3QgZGlkX21vdmUgPSBuZXcgU2V0KCk7XG5cdC8qKiBAcmV0dXJucyB7dm9pZH0gKi9cblx0ZnVuY3Rpb24gaW5zZXJ0KGJsb2NrKSB7XG5cdFx0dHJhbnNpdGlvbl9pbihibG9jaywgMSk7XG5cdFx0YmxvY2subShub2RlLCBuZXh0KTtcblx0XHRsb29rdXAuc2V0KGJsb2NrLmtleSwgYmxvY2spO1xuXHRcdG5leHQgPSBibG9jay5maXJzdDtcblx0XHRuLS07XG5cdH1cblx0d2hpbGUgKG8gJiYgbikge1xuXHRcdGNvbnN0IG5ld19ibG9jayA9IG5ld19ibG9ja3NbbiAtIDFdO1xuXHRcdGNvbnN0IG9sZF9ibG9jayA9IG9sZF9ibG9ja3NbbyAtIDFdO1xuXHRcdGNvbnN0IG5ld19rZXkgPSBuZXdfYmxvY2sua2V5O1xuXHRcdGNvbnN0IG9sZF9rZXkgPSBvbGRfYmxvY2sua2V5O1xuXHRcdGlmIChuZXdfYmxvY2sgPT09IG9sZF9ibG9jaykge1xuXHRcdFx0Ly8gZG8gbm90aGluZ1xuXHRcdFx0bmV4dCA9IG5ld19ibG9jay5maXJzdDtcblx0XHRcdG8tLTtcblx0XHRcdG4tLTtcblx0XHR9IGVsc2UgaWYgKCFuZXdfbG9va3VwLmhhcyhvbGRfa2V5KSkge1xuXHRcdFx0Ly8gcmVtb3ZlIG9sZCBibG9ja1xuXHRcdFx0ZGVzdHJveShvbGRfYmxvY2ssIGxvb2t1cCk7XG5cdFx0XHRvLS07XG5cdFx0fSBlbHNlIGlmICghbG9va3VwLmhhcyhuZXdfa2V5KSB8fCB3aWxsX21vdmUuaGFzKG5ld19rZXkpKSB7XG5cdFx0XHRpbnNlcnQobmV3X2Jsb2NrKTtcblx0XHR9IGVsc2UgaWYgKGRpZF9tb3ZlLmhhcyhvbGRfa2V5KSkge1xuXHRcdFx0by0tO1xuXHRcdH0gZWxzZSBpZiAoZGVsdGFzLmdldChuZXdfa2V5KSA+IGRlbHRhcy5nZXQob2xkX2tleSkpIHtcblx0XHRcdGRpZF9tb3ZlLmFkZChuZXdfa2V5KTtcblx0XHRcdGluc2VydChuZXdfYmxvY2spO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR3aWxsX21vdmUuYWRkKG9sZF9rZXkpO1xuXHRcdFx0by0tO1xuXHRcdH1cblx0fVxuXHR3aGlsZSAoby0tKSB7XG5cdFx0Y29uc3Qgb2xkX2Jsb2NrID0gb2xkX2Jsb2Nrc1tvXTtcblx0XHRpZiAoIW5ld19sb29rdXAuaGFzKG9sZF9ibG9jay5rZXkpKSBkZXN0cm95KG9sZF9ibG9jaywgbG9va3VwKTtcblx0fVxuXHR3aGlsZSAobikgaW5zZXJ0KG5ld19ibG9ja3NbbiAtIDFdKTtcblx0cnVuX2FsbCh1cGRhdGVzKTtcblx0cmV0dXJuIG5ld19ibG9ja3M7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZV9lYWNoX2tleXMoY3R4LCBsaXN0LCBnZXRfY29udGV4dCwgZ2V0X2tleSkge1xuXHRjb25zdCBrZXlzID0gbmV3IE1hcCgpO1xuXHRmb3IgKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHRjb25zdCBrZXkgPSBnZXRfa2V5KGdldF9jb250ZXh0KGN0eCwgbGlzdCwgaSkpO1xuXHRcdGlmIChrZXlzLmhhcyhrZXkpKSB7XG5cdFx0XHRsZXQgdmFsdWUgPSAnJztcblx0XHRcdHRyeSB7XG5cdFx0XHRcdHZhbHVlID0gYHdpdGggdmFsdWUgJyR7U3RyaW5nKGtleSl9JyBgO1xuXHRcdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0XHQvLyBjYW4ndCBzdHJpbmdpZnlcblx0XHRcdH1cblx0XHRcdHRocm93IG5ldyBFcnJvcihcblx0XHRcdFx0YENhbm5vdCBoYXZlIGR1cGxpY2F0ZSBrZXlzIGluIGEga2V5ZWQgZWFjaDogS2V5cyBhdCBpbmRleCAke2tleXMuZ2V0KFxuXHRcdFx0XHRcdGtleVxuXHRcdFx0XHQpfSBhbmQgJHtpfSAke3ZhbHVlfWFyZSBkdXBsaWNhdGVzYFxuXHRcdFx0KTtcblx0XHR9XG5cdFx0a2V5cy5zZXQoa2V5LCBpKTtcblx0fVxufVxuIiwgImNvbnN0IF9ib29sZWFuX2F0dHJpYnV0ZXMgPSAvKiogQHR5cGUge2NvbnN0fSAqLyAoW1xuXHQnYWxsb3dmdWxsc2NyZWVuJyxcblx0J2FsbG93cGF5bWVudHJlcXVlc3QnLFxuXHQnYXN5bmMnLFxuXHQnYXV0b2ZvY3VzJyxcblx0J2F1dG9wbGF5Jyxcblx0J2NoZWNrZWQnLFxuXHQnY29udHJvbHMnLFxuXHQnZGVmYXVsdCcsXG5cdCdkZWZlcicsXG5cdCdkaXNhYmxlZCcsXG5cdCdmb3Jtbm92YWxpZGF0ZScsXG5cdCdoaWRkZW4nLFxuXHQnaW5lcnQnLFxuXHQnaXNtYXAnLFxuXHQnbG9vcCcsXG5cdCdtdWx0aXBsZScsXG5cdCdtdXRlZCcsXG5cdCdub21vZHVsZScsXG5cdCdub3ZhbGlkYXRlJyxcblx0J29wZW4nLFxuXHQncGxheXNpbmxpbmUnLFxuXHQncmVhZG9ubHknLFxuXHQncmVxdWlyZWQnLFxuXHQncmV2ZXJzZWQnLFxuXHQnc2VsZWN0ZWQnXG5dKTtcblxuLyoqXG4gKiBMaXN0IG9mIEhUTUwgYm9vbGVhbiBhdHRyaWJ1dGVzIChlLmcuIGA8aW5wdXQgZGlzYWJsZWQ+YCkuXG4gKiBTb3VyY2U6IGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2luZGljZXMuaHRtbFxuICpcbiAqIEB0eXBlIHtTZXQ8c3RyaW5nPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGJvb2xlYW5fYXR0cmlidXRlcyA9IG5ldyBTZXQoWy4uLl9ib29sZWFuX2F0dHJpYnV0ZXNdKTtcblxuLyoqIEB0eXBlZGVmIHt0eXBlb2YgX2Jvb2xlYW5fYXR0cmlidXRlc1tudW1iZXJdfSBCb29sZWFuQXR0cmlidXRlcyAqL1xuIiwgImltcG9ydCB7XG5cdGFkZF9yZW5kZXJfY2FsbGJhY2ssXG5cdGZsdXNoLFxuXHRmbHVzaF9yZW5kZXJfY2FsbGJhY2tzLFxuXHRzY2hlZHVsZV91cGRhdGUsXG5cdGRpcnR5X2NvbXBvbmVudHNcbn0gZnJvbSAnLi9zY2hlZHVsZXIuanMnO1xuaW1wb3J0IHsgY3VycmVudF9jb21wb25lbnQsIHNldF9jdXJyZW50X2NvbXBvbmVudCB9IGZyb20gJy4vbGlmZWN5Y2xlLmpzJztcbmltcG9ydCB7IGJsYW5rX29iamVjdCwgaXNfZW1wdHksIGlzX2Z1bmN0aW9uLCBydW4sIHJ1bl9hbGwsIG5vb3AgfSBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCB7XG5cdGNoaWxkcmVuLFxuXHRkZXRhY2gsXG5cdHN0YXJ0X2h5ZHJhdGluZyxcblx0ZW5kX2h5ZHJhdGluZyxcblx0Z2V0X2N1c3RvbV9lbGVtZW50c19zbG90cyxcblx0aW5zZXJ0LFxuXHRlbGVtZW50LFxuXHRhdHRyXG59IGZyb20gJy4vZG9tLmpzJztcbmltcG9ydCB7IHRyYW5zaXRpb25faW4gfSBmcm9tICcuL3RyYW5zaXRpb25zLmpzJztcblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJpbmQoY29tcG9uZW50LCBuYW1lLCBjYWxsYmFjaykge1xuXHRjb25zdCBpbmRleCA9IGNvbXBvbmVudC4kJC5wcm9wc1tuYW1lXTtcblx0aWYgKGluZGV4ICE9PSB1bmRlZmluZWQpIHtcblx0XHRjb21wb25lbnQuJCQuYm91bmRbaW5kZXhdID0gY2FsbGJhY2s7XG5cdFx0Y2FsbGJhY2soY29tcG9uZW50LiQkLmN0eFtpbmRleF0pO1xuXHR9XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVfY29tcG9uZW50KGJsb2NrKSB7XG5cdGJsb2NrICYmIGJsb2NrLmMoKTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsYWltX2NvbXBvbmVudChibG9jaywgcGFyZW50X25vZGVzKSB7XG5cdGJsb2NrICYmIGJsb2NrLmwocGFyZW50X25vZGVzKTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1vdW50X2NvbXBvbmVudChjb21wb25lbnQsIHRhcmdldCwgYW5jaG9yKSB7XG5cdGNvbnN0IHsgZnJhZ21lbnQsIGFmdGVyX3VwZGF0ZSB9ID0gY29tcG9uZW50LiQkO1xuXHRmcmFnbWVudCAmJiBmcmFnbWVudC5tKHRhcmdldCwgYW5jaG9yKTtcblx0Ly8gb25Nb3VudCBoYXBwZW5zIGJlZm9yZSB0aGUgaW5pdGlhbCBhZnRlclVwZGF0ZVxuXHRhZGRfcmVuZGVyX2NhbGxiYWNrKCgpID0+IHtcblx0XHRjb25zdCBuZXdfb25fZGVzdHJveSA9IGNvbXBvbmVudC4kJC5vbl9tb3VudC5tYXAocnVuKS5maWx0ZXIoaXNfZnVuY3Rpb24pO1xuXHRcdC8vIGlmIHRoZSBjb21wb25lbnQgd2FzIGRlc3Ryb3llZCBpbW1lZGlhdGVseVxuXHRcdC8vIGl0IHdpbGwgdXBkYXRlIHRoZSBgJCQub25fZGVzdHJveWAgcmVmZXJlbmNlIHRvIGBudWxsYC5cblx0XHQvLyB0aGUgZGVzdHJ1Y3R1cmVkIG9uX2Rlc3Ryb3kgbWF5IHN0aWxsIHJlZmVyZW5jZSB0byB0aGUgb2xkIGFycmF5XG5cdFx0aWYgKGNvbXBvbmVudC4kJC5vbl9kZXN0cm95KSB7XG5cdFx0XHRjb21wb25lbnQuJCQub25fZGVzdHJveS5wdXNoKC4uLm5ld19vbl9kZXN0cm95KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gRWRnZSBjYXNlIC0gY29tcG9uZW50IHdhcyBkZXN0cm95ZWQgaW1tZWRpYXRlbHksXG5cdFx0XHQvLyBtb3N0IGxpa2VseSBhcyBhIHJlc3VsdCBvZiBhIGJpbmRpbmcgaW5pdGlhbGlzaW5nXG5cdFx0XHRydW5fYWxsKG5ld19vbl9kZXN0cm95KTtcblx0XHR9XG5cdFx0Y29tcG9uZW50LiQkLm9uX21vdW50ID0gW107XG5cdH0pO1xuXHRhZnRlcl91cGRhdGUuZm9yRWFjaChhZGRfcmVuZGVyX2NhbGxiYWNrKTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlc3Ryb3lfY29tcG9uZW50KGNvbXBvbmVudCwgZGV0YWNoaW5nKSB7XG5cdGNvbnN0ICQkID0gY29tcG9uZW50LiQkO1xuXHRpZiAoJCQuZnJhZ21lbnQgIT09IG51bGwpIHtcblx0XHRmbHVzaF9yZW5kZXJfY2FsbGJhY2tzKCQkLmFmdGVyX3VwZGF0ZSk7XG5cdFx0cnVuX2FsbCgkJC5vbl9kZXN0cm95KTtcblx0XHQkJC5mcmFnbWVudCAmJiAkJC5mcmFnbWVudC5kKGRldGFjaGluZyk7XG5cdFx0Ly8gVE9ETyBudWxsIG91dCBvdGhlciByZWZzLCBpbmNsdWRpbmcgY29tcG9uZW50LiQkIChidXQgbmVlZCB0b1xuXHRcdC8vIHByZXNlcnZlIGZpbmFsIHN0YXRlPylcblx0XHQkJC5vbl9kZXN0cm95ID0gJCQuZnJhZ21lbnQgPSBudWxsO1xuXHRcdCQkLmN0eCA9IFtdO1xuXHR9XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmZ1bmN0aW9uIG1ha2VfZGlydHkoY29tcG9uZW50LCBpKSB7XG5cdGlmIChjb21wb25lbnQuJCQuZGlydHlbMF0gPT09IC0xKSB7XG5cdFx0ZGlydHlfY29tcG9uZW50cy5wdXNoKGNvbXBvbmVudCk7XG5cdFx0c2NoZWR1bGVfdXBkYXRlKCk7XG5cdFx0Y29tcG9uZW50LiQkLmRpcnR5LmZpbGwoMCk7XG5cdH1cblx0Y29tcG9uZW50LiQkLmRpcnR5WyhpIC8gMzEpIHwgMF0gfD0gMSA8PCBpICUgMzE7XG59XG5cbi8vIFRPRE86IERvY3VtZW50IHRoZSBvdGhlciBwYXJhbXNcbi8qKlxuICogQHBhcmFtIHtTdmVsdGVDb21wb25lbnR9IGNvbXBvbmVudFxuICogQHBhcmFtIHtpbXBvcnQoJy4vcHVibGljLmpzJykuQ29tcG9uZW50Q29uc3RydWN0b3JPcHRpb25zfSBvcHRpb25zXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJy4vdXRpbHMuanMnKVsnbm90X2VxdWFsJ119IG5vdF9lcXVhbCBVc2VkIHRvIGNvbXBhcmUgcHJvcHMgYW5kIHN0YXRlIHZhbHVlcy5cbiAqIEBwYXJhbSB7KHRhcmdldDogRWxlbWVudCB8IFNoYWRvd1Jvb3QpID0+IHZvaWR9IFthcHBlbmRfc3R5bGVzXSBGdW5jdGlvbiB0aGF0IGFwcGVuZHMgc3R5bGVzIHRvIHRoZSBET00gd2hlbiB0aGUgY29tcG9uZW50IGlzIGZpcnN0IGluaXRpYWxpc2VkLlxuICogVGhpcyB3aWxsIGJlIHRoZSBgYWRkX2Nzc2AgZnVuY3Rpb24gZnJvbSB0aGUgY29tcGlsZWQgY29tcG9uZW50LlxuICpcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdChcblx0Y29tcG9uZW50LFxuXHRvcHRpb25zLFxuXHRpbnN0YW5jZSxcblx0Y3JlYXRlX2ZyYWdtZW50LFxuXHRub3RfZXF1YWwsXG5cdHByb3BzLFxuXHRhcHBlbmRfc3R5bGVzID0gbnVsbCxcblx0ZGlydHkgPSBbLTFdXG4pIHtcblx0Y29uc3QgcGFyZW50X2NvbXBvbmVudCA9IGN1cnJlbnRfY29tcG9uZW50O1xuXHRzZXRfY3VycmVudF9jb21wb25lbnQoY29tcG9uZW50KTtcblx0LyoqIEB0eXBlIHtpbXBvcnQoJy4vcHJpdmF0ZS5qcycpLlQkJH0gKi9cblx0Y29uc3QgJCQgPSAoY29tcG9uZW50LiQkID0ge1xuXHRcdGZyYWdtZW50OiBudWxsLFxuXHRcdGN0eDogW10sXG5cdFx0Ly8gc3RhdGVcblx0XHRwcm9wcyxcblx0XHR1cGRhdGU6IG5vb3AsXG5cdFx0bm90X2VxdWFsLFxuXHRcdGJvdW5kOiBibGFua19vYmplY3QoKSxcblx0XHQvLyBsaWZlY3ljbGVcblx0XHRvbl9tb3VudDogW10sXG5cdFx0b25fZGVzdHJveTogW10sXG5cdFx0b25fZGlzY29ubmVjdDogW10sXG5cdFx0YmVmb3JlX3VwZGF0ZTogW10sXG5cdFx0YWZ0ZXJfdXBkYXRlOiBbXSxcblx0XHRjb250ZXh0OiBuZXcgTWFwKG9wdGlvbnMuY29udGV4dCB8fCAocGFyZW50X2NvbXBvbmVudCA/IHBhcmVudF9jb21wb25lbnQuJCQuY29udGV4dCA6IFtdKSksXG5cdFx0Ly8gZXZlcnl0aGluZyBlbHNlXG5cdFx0Y2FsbGJhY2tzOiBibGFua19vYmplY3QoKSxcblx0XHRkaXJ0eSxcblx0XHRza2lwX2JvdW5kOiBmYWxzZSxcblx0XHRyb290OiBvcHRpb25zLnRhcmdldCB8fCBwYXJlbnRfY29tcG9uZW50LiQkLnJvb3Rcblx0fSk7XG5cdGFwcGVuZF9zdHlsZXMgJiYgYXBwZW5kX3N0eWxlcygkJC5yb290KTtcblx0bGV0IHJlYWR5ID0gZmFsc2U7XG5cdCQkLmN0eCA9IGluc3RhbmNlXG5cdFx0PyBpbnN0YW5jZShjb21wb25lbnQsIG9wdGlvbnMucHJvcHMgfHwge30sIChpLCByZXQsIC4uLnJlc3QpID0+IHtcblx0XHRcdFx0Y29uc3QgdmFsdWUgPSByZXN0Lmxlbmd0aCA/IHJlc3RbMF0gOiByZXQ7XG5cdFx0XHRcdGlmICgkJC5jdHggJiYgbm90X2VxdWFsKCQkLmN0eFtpXSwgKCQkLmN0eFtpXSA9IHZhbHVlKSkpIHtcblx0XHRcdFx0XHRpZiAoISQkLnNraXBfYm91bmQgJiYgJCQuYm91bmRbaV0pICQkLmJvdW5kW2ldKHZhbHVlKTtcblx0XHRcdFx0XHRpZiAocmVhZHkpIG1ha2VfZGlydHkoY29tcG9uZW50LCBpKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdCAgfSlcblx0XHQ6IFtdO1xuXHQkJC51cGRhdGUoKTtcblx0cmVhZHkgPSB0cnVlO1xuXHRydW5fYWxsKCQkLmJlZm9yZV91cGRhdGUpO1xuXHQvLyBgZmFsc2VgIGFzIGEgc3BlY2lhbCBjYXNlIG9mIG5vIERPTSBjb21wb25lbnRcblx0JCQuZnJhZ21lbnQgPSBjcmVhdGVfZnJhZ21lbnQgPyBjcmVhdGVfZnJhZ21lbnQoJCQuY3R4KSA6IGZhbHNlO1xuXHRpZiAob3B0aW9ucy50YXJnZXQpIHtcblx0XHRpZiAob3B0aW9ucy5oeWRyYXRlKSB7XG5cdFx0XHRzdGFydF9oeWRyYXRpbmcoKTtcblx0XHRcdC8vIFRPRE86IHdoYXQgaXMgdGhlIGNvcnJlY3QgdHlwZSBoZXJlP1xuXHRcdFx0Ly8gQHRzLWV4cGVjdC1lcnJvclxuXHRcdFx0Y29uc3Qgbm9kZXMgPSBjaGlsZHJlbihvcHRpb25zLnRhcmdldCk7XG5cdFx0XHQkJC5mcmFnbWVudCAmJiAkJC5mcmFnbWVudC5sKG5vZGVzKTtcblx0XHRcdG5vZGVzLmZvckVhY2goZGV0YWNoKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cblx0XHRcdCQkLmZyYWdtZW50ICYmICQkLmZyYWdtZW50LmMoKTtcblx0XHR9XG5cdFx0aWYgKG9wdGlvbnMuaW50cm8pIHRyYW5zaXRpb25faW4oY29tcG9uZW50LiQkLmZyYWdtZW50KTtcblx0XHRtb3VudF9jb21wb25lbnQoY29tcG9uZW50LCBvcHRpb25zLnRhcmdldCwgb3B0aW9ucy5hbmNob3IpO1xuXHRcdGVuZF9oeWRyYXRpbmcoKTtcblx0XHRmbHVzaCgpO1xuXHR9XG5cdHNldF9jdXJyZW50X2NvbXBvbmVudChwYXJlbnRfY29tcG9uZW50KTtcbn1cblxuZXhwb3J0IGxldCBTdmVsdGVFbGVtZW50O1xuXG5pZiAodHlwZW9mIEhUTUxFbGVtZW50ID09PSAnZnVuY3Rpb24nKSB7XG5cdFN2ZWx0ZUVsZW1lbnQgPSBjbGFzcyBleHRlbmRzIEhUTUxFbGVtZW50IHtcblx0XHQvKiogVGhlIFN2ZWx0ZSBjb21wb25lbnQgY29uc3RydWN0b3IgKi9cblx0XHQkJGN0b3I7XG5cdFx0LyoqIFNsb3RzICovXG5cdFx0JCRzO1xuXHRcdC8qKiBUaGUgU3ZlbHRlIGNvbXBvbmVudCBpbnN0YW5jZSAqL1xuXHRcdCQkYztcblx0XHQvKiogV2hldGhlciBvciBub3QgdGhlIGN1c3RvbSBlbGVtZW50IGlzIGNvbm5lY3RlZCAqL1xuXHRcdCQkY24gPSBmYWxzZTtcblx0XHQvKiogQ29tcG9uZW50IHByb3BzIGRhdGEgKi9cblx0XHQkJGQgPSB7fTtcblx0XHQvKiogYHRydWVgIGlmIGN1cnJlbnRseSBpbiB0aGUgcHJvY2VzcyBvZiByZWZsZWN0aW5nIGNvbXBvbmVudCBwcm9wcyBiYWNrIHRvIGF0dHJpYnV0ZXMgKi9cblx0XHQkJHIgPSBmYWxzZTtcblx0XHQvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIEN1c3RvbUVsZW1lbnRQcm9wRGVmaW5pdGlvbj59IFByb3BzIGRlZmluaXRpb24gKG5hbWUsIHJlZmxlY3RlZCwgdHlwZSBldGMpICovXG5cdFx0JCRwX2QgPSB7fTtcblx0XHQvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIEZ1bmN0aW9uW10+fSBFdmVudCBsaXN0ZW5lcnMgKi9cblx0XHQkJGwgPSB7fTtcblx0XHQvKiogQHR5cGUge01hcDxGdW5jdGlvbiwgRnVuY3Rpb24+fSBFdmVudCBsaXN0ZW5lciB1bnN1YnNjcmliZSBmdW5jdGlvbnMgKi9cblx0XHQkJGxfdSA9IG5ldyBNYXAoKTtcblxuXHRcdGNvbnN0cnVjdG9yKCQkY29tcG9uZW50Q3RvciwgJCRzbG90cywgdXNlX3NoYWRvd19kb20pIHtcblx0XHRcdHN1cGVyKCk7XG5cdFx0XHR0aGlzLiQkY3RvciA9ICQkY29tcG9uZW50Q3Rvcjtcblx0XHRcdHRoaXMuJCRzID0gJCRzbG90cztcblx0XHRcdGlmICh1c2Vfc2hhZG93X2RvbSkge1xuXHRcdFx0XHR0aGlzLmF0dGFjaFNoYWRvdyh7IG1vZGU6ICdvcGVuJyB9KTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRhZGRFdmVudExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyLCBvcHRpb25zKSB7XG5cdFx0XHQvLyBXZSBjYW4ndCBkZXRlcm1pbmUgdXBmcm9udCBpZiB0aGUgZXZlbnQgaXMgYSBjdXN0b20gZXZlbnQgb3Igbm90LCBzbyB3ZSBoYXZlIHRvXG5cdFx0XHQvLyBsaXN0ZW4gdG8gYm90aC4gSWYgc29tZW9uZSB1c2VzIGEgY3VzdG9tIGV2ZW50IHdpdGggdGhlIHNhbWUgbmFtZSBhcyBhIHJlZ3VsYXJcblx0XHRcdC8vIGJyb3dzZXIgZXZlbnQsIHRoaXMgZmlyZXMgdHdpY2UgLSB3ZSBjYW4ndCBhdm9pZCB0aGF0LlxuXHRcdFx0dGhpcy4kJGxbdHlwZV0gPSB0aGlzLiQkbFt0eXBlXSB8fCBbXTtcblx0XHRcdHRoaXMuJCRsW3R5cGVdLnB1c2gobGlzdGVuZXIpO1xuXHRcdFx0aWYgKHRoaXMuJCRjKSB7XG5cdFx0XHRcdGNvbnN0IHVuc3ViID0gdGhpcy4kJGMuJG9uKHR5cGUsIGxpc3RlbmVyKTtcblx0XHRcdFx0dGhpcy4kJGxfdS5zZXQobGlzdGVuZXIsIHVuc3ViKTtcblx0XHRcdH1cblx0XHRcdHN1cGVyLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgbGlzdGVuZXIsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdHJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgbGlzdGVuZXIsIG9wdGlvbnMpIHtcblx0XHRcdHN1cGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgbGlzdGVuZXIsIG9wdGlvbnMpO1xuXHRcdFx0aWYgKHRoaXMuJCRjKSB7XG5cdFx0XHRcdGNvbnN0IHVuc3ViID0gdGhpcy4kJGxfdS5nZXQobGlzdGVuZXIpO1xuXHRcdFx0XHRpZiAodW5zdWIpIHtcblx0XHRcdFx0XHR1bnN1YigpO1xuXHRcdFx0XHRcdHRoaXMuJCRsX3UuZGVsZXRlKGxpc3RlbmVyKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGFzeW5jIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuXHRcdFx0dGhpcy4kJGNuID0gdHJ1ZTtcblx0XHRcdGlmICghdGhpcy4kJGMpIHtcblx0XHRcdFx0Ly8gV2Ugd2FpdCBvbmUgdGljayB0byBsZXQgcG9zc2libGUgY2hpbGQgc2xvdCBlbGVtZW50cyBiZSBjcmVhdGVkL21vdW50ZWRcblx0XHRcdFx0YXdhaXQgUHJvbWlzZS5yZXNvbHZlKCk7XG5cdFx0XHRcdGlmICghdGhpcy4kJGNuIHx8IHRoaXMuJCRjKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGZ1bmN0aW9uIGNyZWF0ZV9zbG90KG5hbWUpIHtcblx0XHRcdFx0XHRyZXR1cm4gKCkgPT4ge1xuXHRcdFx0XHRcdFx0bGV0IG5vZGU7XG5cdFx0XHRcdFx0XHRjb25zdCBvYmogPSB7XG5cdFx0XHRcdFx0XHRcdGM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbWVudCgnc2xvdCcpO1xuXHRcdFx0XHRcdFx0XHRcdGlmIChuYW1lICE9PSAnZGVmYXVsdCcpIHtcblx0XHRcdFx0XHRcdFx0XHRcdGF0dHIobm9kZSwgJ25hbWUnLCBuYW1lKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdC8qKlxuXHRcdFx0XHRcdFx0XHQgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSB0YXJnZXRcblx0XHRcdFx0XHRcdFx0ICogQHBhcmFtIHtIVE1MRWxlbWVudH0gW2FuY2hvcl1cblx0XHRcdFx0XHRcdFx0ICovXG5cdFx0XHRcdFx0XHRcdG06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7XG5cdFx0XHRcdFx0XHRcdFx0aW5zZXJ0KHRhcmdldCwgbm9kZSwgYW5jaG9yKTtcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0ZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoZGV0YWNoaW5nKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRkZXRhY2gobm9kZSk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0cmV0dXJuIG9iajtcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnN0ICQkc2xvdHMgPSB7fTtcblx0XHRcdFx0Y29uc3QgZXhpc3Rpbmdfc2xvdHMgPSBnZXRfY3VzdG9tX2VsZW1lbnRzX3Nsb3RzKHRoaXMpO1xuXHRcdFx0XHRmb3IgKGNvbnN0IG5hbWUgb2YgdGhpcy4kJHMpIHtcblx0XHRcdFx0XHRpZiAobmFtZSBpbiBleGlzdGluZ19zbG90cykge1xuXHRcdFx0XHRcdFx0JCRzbG90c1tuYW1lXSA9IFtjcmVhdGVfc2xvdChuYW1lKV07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGZvciAoY29uc3QgYXR0cmlidXRlIG9mIHRoaXMuYXR0cmlidXRlcykge1xuXHRcdFx0XHRcdC8vIHRoaXMuJCRkYXRhIHRha2VzIHByZWNlZGVuY2Ugb3ZlciB0aGlzLmF0dHJpYnV0ZXNcblx0XHRcdFx0XHRjb25zdCBuYW1lID0gdGhpcy4kJGdfcChhdHRyaWJ1dGUubmFtZSk7XG5cdFx0XHRcdFx0aWYgKCEobmFtZSBpbiB0aGlzLiQkZCkpIHtcblx0XHRcdFx0XHRcdHRoaXMuJCRkW25hbWVdID0gZ2V0X2N1c3RvbV9lbGVtZW50X3ZhbHVlKG5hbWUsIGF0dHJpYnV0ZS52YWx1ZSwgdGhpcy4kJHBfZCwgJ3RvUHJvcCcpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBQb3J0IG92ZXIgcHJvcHMgdGhhdCB3ZXJlIHNldCBwcm9ncmFtbWF0aWNhbGx5IGJlZm9yZSBjZSB3YXMgaW5pdGlhbGl6ZWRcblx0XHRcdFx0Zm9yIChjb25zdCBrZXkgaW4gdGhpcy4kJHBfZCkge1xuXHRcdFx0XHRcdGlmICghKGtleSBpbiB0aGlzLiQkZCkgJiYgdGhpc1trZXldICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRcdHRoaXMuJCRkW2tleV0gPSB0aGlzW2tleV07IC8vIGRvbid0IHRyYW5zZm9ybSwgdGhlc2Ugd2VyZSBzZXQgdGhyb3VnaCBKYXZhU2NyaXB0XG5cdFx0XHRcdFx0XHRkZWxldGUgdGhpc1trZXldOyAvLyByZW1vdmUgdGhlIHByb3BlcnR5IHRoYXQgc2hhZG93cyB0aGUgZ2V0dGVyL3NldHRlclxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLiQkYyA9IG5ldyB0aGlzLiQkY3Rvcih7XG5cdFx0XHRcdFx0dGFyZ2V0OiB0aGlzLnNoYWRvd1Jvb3QgfHwgdGhpcyxcblx0XHRcdFx0XHRwcm9wczoge1xuXHRcdFx0XHRcdFx0Li4udGhpcy4kJGQsXG5cdFx0XHRcdFx0XHQkJHNsb3RzLFxuXHRcdFx0XHRcdFx0JCRzY29wZToge1xuXHRcdFx0XHRcdFx0XHRjdHg6IFtdXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHQvLyBSZWZsZWN0IGNvbXBvbmVudCBwcm9wcyBhcyBhdHRyaWJ1dGVzXG5cdFx0XHRcdGNvbnN0IHJlZmxlY3RfYXR0cmlidXRlcyA9ICgpID0+IHtcblx0XHRcdFx0XHR0aGlzLiQkciA9IHRydWU7XG5cdFx0XHRcdFx0Zm9yIChjb25zdCBrZXkgaW4gdGhpcy4kJHBfZCkge1xuXHRcdFx0XHRcdFx0dGhpcy4kJGRba2V5XSA9IHRoaXMuJCRjLiQkLmN0eFt0aGlzLiQkYy4kJC5wcm9wc1trZXldXTtcblx0XHRcdFx0XHRcdGlmICh0aGlzLiQkcF9kW2tleV0ucmVmbGVjdCkge1xuXHRcdFx0XHRcdFx0XHRjb25zdCBhdHRyaWJ1dGVfdmFsdWUgPSBnZXRfY3VzdG9tX2VsZW1lbnRfdmFsdWUoXG5cdFx0XHRcdFx0XHRcdFx0a2V5LFxuXHRcdFx0XHRcdFx0XHRcdHRoaXMuJCRkW2tleV0sXG5cdFx0XHRcdFx0XHRcdFx0dGhpcy4kJHBfZCxcblx0XHRcdFx0XHRcdFx0XHQndG9BdHRyaWJ1dGUnXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdGlmIChhdHRyaWJ1dGVfdmFsdWUgPT0gbnVsbCkge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMucmVtb3ZlQXR0cmlidXRlKHRoaXMuJCRwX2Rba2V5XS5hdHRyaWJ1dGUgfHwga2V5KTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLnNldEF0dHJpYnV0ZSh0aGlzLiQkcF9kW2tleV0uYXR0cmlidXRlIHx8IGtleSwgYXR0cmlidXRlX3ZhbHVlKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0aGlzLiQkciA9IGZhbHNlO1xuXHRcdFx0XHR9O1xuXHRcdFx0XHR0aGlzLiQkYy4kJC5hZnRlcl91cGRhdGUucHVzaChyZWZsZWN0X2F0dHJpYnV0ZXMpO1xuXHRcdFx0XHRyZWZsZWN0X2F0dHJpYnV0ZXMoKTsgLy8gb25jZSBpbml0aWFsbHkgYmVjYXVzZSBhZnRlcl91cGRhdGUgaXMgYWRkZWQgdG9vIGxhdGUgZm9yIGZpcnN0IHJlbmRlclxuXG5cdFx0XHRcdGZvciAoY29uc3QgdHlwZSBpbiB0aGlzLiQkbCkge1xuXHRcdFx0XHRcdGZvciAoY29uc3QgbGlzdGVuZXIgb2YgdGhpcy4kJGxbdHlwZV0pIHtcblx0XHRcdFx0XHRcdGNvbnN0IHVuc3ViID0gdGhpcy4kJGMuJG9uKHR5cGUsIGxpc3RlbmVyKTtcblx0XHRcdFx0XHRcdHRoaXMuJCRsX3Uuc2V0KGxpc3RlbmVyLCB1bnN1Yik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuJCRsID0ge307XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gV2UgZG9uJ3QgbmVlZCB0aGlzIHdoZW4gd29ya2luZyB3aXRoaW4gU3ZlbHRlIGNvZGUsIGJ1dCBmb3IgY29tcGF0aWJpbGl0eSBvZiBwZW9wbGUgdXNpbmcgdGhpcyBvdXRzaWRlIG9mIFN2ZWx0ZVxuXHRcdC8vIGFuZCBzZXR0aW5nIGF0dHJpYnV0ZXMgdGhyb3VnaCBzZXRBdHRyaWJ1dGUgZXRjLCB0aGlzIGlzIGhlbHBmdWxcblx0XHRhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soYXR0ciwgX29sZFZhbHVlLCBuZXdWYWx1ZSkge1xuXHRcdFx0aWYgKHRoaXMuJCRyKSByZXR1cm47XG5cdFx0XHRhdHRyID0gdGhpcy4kJGdfcChhdHRyKTtcblx0XHRcdHRoaXMuJCRkW2F0dHJdID0gZ2V0X2N1c3RvbV9lbGVtZW50X3ZhbHVlKGF0dHIsIG5ld1ZhbHVlLCB0aGlzLiQkcF9kLCAndG9Qcm9wJyk7XG5cdFx0XHR0aGlzLiQkYz8uJHNldCh7IFthdHRyXTogdGhpcy4kJGRbYXR0cl0gfSk7XG5cdFx0fVxuXG5cdFx0ZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG5cdFx0XHR0aGlzLiQkY24gPSBmYWxzZTtcblx0XHRcdC8vIEluIGEgbWljcm90YXNrLCBiZWNhdXNlIHRoaXMgY291bGQgYmUgYSBtb3ZlIHdpdGhpbiB0aGUgRE9NXG5cdFx0XHRQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHtcblx0XHRcdFx0aWYgKCF0aGlzLiQkY24gJiYgdGhpcy4kJGMpIHtcblx0XHRcdFx0XHR0aGlzLiQkYy4kZGVzdHJveSgpO1xuXHRcdFx0XHRcdHRoaXMuJCRjID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHQkJGdfcChhdHRyaWJ1dGVfbmFtZSkge1xuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0T2JqZWN0LmtleXModGhpcy4kJHBfZCkuZmluZChcblx0XHRcdFx0XHQoa2V5KSA9PlxuXHRcdFx0XHRcdFx0dGhpcy4kJHBfZFtrZXldLmF0dHJpYnV0ZSA9PT0gYXR0cmlidXRlX25hbWUgfHxcblx0XHRcdFx0XHRcdCghdGhpcy4kJHBfZFtrZXldLmF0dHJpYnV0ZSAmJiBrZXkudG9Mb3dlckNhc2UoKSA9PT0gYXR0cmlidXRlX25hbWUpXG5cdFx0XHRcdCkgfHwgYXR0cmlidXRlX25hbWVcblx0XHRcdCk7XG5cdFx0fVxuXHR9O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEBwYXJhbSB7UmVjb3JkPHN0cmluZywgQ3VzdG9tRWxlbWVudFByb3BEZWZpbml0aW9uPn0gcHJvcHNfZGVmaW5pdGlvblxuICogQHBhcmFtIHsndG9BdHRyaWJ1dGUnIHwgJ3RvUHJvcCd9IFt0cmFuc2Zvcm1dXG4gKi9cbmZ1bmN0aW9uIGdldF9jdXN0b21fZWxlbWVudF92YWx1ZShwcm9wLCB2YWx1ZSwgcHJvcHNfZGVmaW5pdGlvbiwgdHJhbnNmb3JtKSB7XG5cdGNvbnN0IHR5cGUgPSBwcm9wc19kZWZpbml0aW9uW3Byb3BdPy50eXBlO1xuXHR2YWx1ZSA9IHR5cGUgPT09ICdCb29sZWFuJyAmJiB0eXBlb2YgdmFsdWUgIT09ICdib29sZWFuJyA/IHZhbHVlICE9IG51bGwgOiB2YWx1ZTtcblx0aWYgKCF0cmFuc2Zvcm0gfHwgIXByb3BzX2RlZmluaXRpb25bcHJvcF0pIHtcblx0XHRyZXR1cm4gdmFsdWU7XG5cdH0gZWxzZSBpZiAodHJhbnNmb3JtID09PSAndG9BdHRyaWJ1dGUnKSB7XG5cdFx0c3dpdGNoICh0eXBlKSB7XG5cdFx0XHRjYXNlICdPYmplY3QnOlxuXHRcdFx0Y2FzZSAnQXJyYXknOlxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT0gbnVsbCA/IG51bGwgOiBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG5cdFx0XHRjYXNlICdCb29sZWFuJzpcblx0XHRcdFx0cmV0dXJuIHZhbHVlID8gJycgOiBudWxsO1xuXHRcdFx0Y2FzZSAnTnVtYmVyJzpcblx0XHRcdFx0cmV0dXJuIHZhbHVlID09IG51bGwgPyBudWxsIDogdmFsdWU7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHN3aXRjaCAodHlwZSkge1xuXHRcdFx0Y2FzZSAnT2JqZWN0Jzpcblx0XHRcdGNhc2UgJ0FycmF5Jzpcblx0XHRcdFx0cmV0dXJuIHZhbHVlICYmIEpTT04ucGFyc2UodmFsdWUpO1xuXHRcdFx0Y2FzZSAnQm9vbGVhbic6XG5cdFx0XHRcdHJldHVybiB2YWx1ZTsgLy8gY29udmVyc2lvbiBhbHJlYWR5IGhhbmRsZWQgYWJvdmVcblx0XHRcdGNhc2UgJ051bWJlcic6XG5cdFx0XHRcdHJldHVybiB2YWx1ZSAhPSBudWxsID8gK3ZhbHVlIDogdmFsdWU7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXHR9XG59XG5cbi8qKlxuICogQGludGVybmFsXG4gKlxuICogVHVybiBhIFN2ZWx0ZSBjb21wb25lbnQgaW50byBhIGN1c3RvbSBlbGVtZW50LlxuICogQHBhcmFtIHtpbXBvcnQoJy4vcHVibGljLmpzJykuQ29tcG9uZW50VHlwZX0gQ29tcG9uZW50ICBBIFN2ZWx0ZSBjb21wb25lbnQgY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7UmVjb3JkPHN0cmluZywgQ3VzdG9tRWxlbWVudFByb3BEZWZpbml0aW9uPn0gcHJvcHNfZGVmaW5pdGlvbiAgVGhlIHByb3BzIHRvIG9ic2VydmVcbiAqIEBwYXJhbSB7c3RyaW5nW119IHNsb3RzICBUaGUgc2xvdHMgdG8gY3JlYXRlXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBhY2Nlc3NvcnMgIE90aGVyIGFjY2Vzc29ycyBiZXNpZGVzIHRoZSBvbmVzIGZvciBwcm9wcyB0aGUgY29tcG9uZW50IGhhc1xuICogQHBhcmFtIHtib29sZWFufSB1c2Vfc2hhZG93X2RvbSAgV2hldGhlciB0byB1c2Ugc2hhZG93IERPTVxuICogQHBhcmFtIHsoY2U6IG5ldyAoKSA9PiBIVE1MRWxlbWVudCkgPT4gbmV3ICgpID0+IEhUTUxFbGVtZW50fSBbZXh0ZW5kXVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlX2N1c3RvbV9lbGVtZW50KFxuXHRDb21wb25lbnQsXG5cdHByb3BzX2RlZmluaXRpb24sXG5cdHNsb3RzLFxuXHRhY2Nlc3NvcnMsXG5cdHVzZV9zaGFkb3dfZG9tLFxuXHRleHRlbmRcbikge1xuXHRsZXQgQ2xhc3MgPSBjbGFzcyBleHRlbmRzIFN2ZWx0ZUVsZW1lbnQge1xuXHRcdGNvbnN0cnVjdG9yKCkge1xuXHRcdFx0c3VwZXIoQ29tcG9uZW50LCBzbG90cywgdXNlX3NoYWRvd19kb20pO1xuXHRcdFx0dGhpcy4kJHBfZCA9IHByb3BzX2RlZmluaXRpb247XG5cdFx0fVxuXHRcdHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuXHRcdFx0cmV0dXJuIE9iamVjdC5rZXlzKHByb3BzX2RlZmluaXRpb24pLm1hcCgoa2V5KSA9PlxuXHRcdFx0XHQocHJvcHNfZGVmaW5pdGlvbltrZXldLmF0dHJpYnV0ZSB8fCBrZXkpLnRvTG93ZXJDYXNlKClcblx0XHRcdCk7XG5cdFx0fVxuXHR9O1xuXHRPYmplY3Qua2V5cyhwcm9wc19kZWZpbml0aW9uKS5mb3JFYWNoKChwcm9wKSA9PiB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KENsYXNzLnByb3RvdHlwZSwgcHJvcCwge1xuXHRcdFx0Z2V0KCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy4kJGMgJiYgcHJvcCBpbiB0aGlzLiQkYyA/IHRoaXMuJCRjW3Byb3BdIDogdGhpcy4kJGRbcHJvcF07XG5cdFx0XHR9LFxuXHRcdFx0c2V0KHZhbHVlKSB7XG5cdFx0XHRcdHZhbHVlID0gZ2V0X2N1c3RvbV9lbGVtZW50X3ZhbHVlKHByb3AsIHZhbHVlLCBwcm9wc19kZWZpbml0aW9uKTtcblx0XHRcdFx0dGhpcy4kJGRbcHJvcF0gPSB2YWx1ZTtcblx0XHRcdFx0dGhpcy4kJGM/LiRzZXQoeyBbcHJvcF06IHZhbHVlIH0pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcblx0YWNjZXNzb3JzLmZvckVhY2goKGFjY2Vzc29yKSA9PiB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KENsYXNzLnByb3RvdHlwZSwgYWNjZXNzb3IsIHtcblx0XHRcdGdldCgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuJCRjPy5bYWNjZXNzb3JdO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcblx0aWYgKGV4dGVuZCkge1xuXHRcdC8vIEB0cy1leHBlY3QtZXJyb3IgLSBhc3NpZ25pbmcgaGVyZSBpcyBmaW5lXG5cdFx0Q2xhc3MgPSBleHRlbmQoQ2xhc3MpO1xuXHR9XG5cdENvbXBvbmVudC5lbGVtZW50ID0gLyoqIEB0eXBlIHthbnl9ICovIChDbGFzcyk7XG5cdHJldHVybiBDbGFzcztcbn1cblxuLyoqXG4gKiBCYXNlIGNsYXNzIGZvciBTdmVsdGUgY29tcG9uZW50cy4gVXNlZCB3aGVuIGRldj1mYWxzZS5cbiAqXG4gKiBAdGVtcGxhdGUge1JlY29yZDxzdHJpbmcsIGFueT59IFtQcm9wcz1hbnldXG4gKiBAdGVtcGxhdGUge1JlY29yZDxzdHJpbmcsIGFueT59IFtFdmVudHM9YW55XVxuICovXG5leHBvcnQgY2xhc3MgU3ZlbHRlQ29tcG9uZW50IHtcblx0LyoqXG5cdCAqICMjIyBQUklWQVRFIEFQSVxuXHQgKlxuXHQgKiBEbyBub3QgdXNlLCBtYXkgY2hhbmdlIGF0IGFueSB0aW1lXG5cdCAqXG5cdCAqIEB0eXBlIHthbnl9XG5cdCAqL1xuXHQkJCA9IHVuZGVmaW5lZDtcblx0LyoqXG5cdCAqICMjIyBQUklWQVRFIEFQSVxuXHQgKlxuXHQgKiBEbyBub3QgdXNlLCBtYXkgY2hhbmdlIGF0IGFueSB0aW1lXG5cdCAqXG5cdCAqIEB0eXBlIHthbnl9XG5cdCAqL1xuXHQkJHNldCA9IHVuZGVmaW5lZDtcblxuXHQvKiogQHJldHVybnMge3ZvaWR9ICovXG5cdCRkZXN0cm95KCkge1xuXHRcdGRlc3Ryb3lfY29tcG9uZW50KHRoaXMsIDEpO1xuXHRcdHRoaXMuJGRlc3Ryb3kgPSBub29wO1xuXHR9XG5cblx0LyoqXG5cdCAqIEB0ZW1wbGF0ZSB7RXh0cmFjdDxrZXlvZiBFdmVudHMsIHN0cmluZz59IEtcblx0ICogQHBhcmFtIHtLfSB0eXBlXG5cdCAqIEBwYXJhbSB7KChlOiBFdmVudHNbS10pID0+IHZvaWQpIHwgbnVsbCB8IHVuZGVmaW5lZH0gY2FsbGJhY2tcblx0ICogQHJldHVybnMgeygpID0+IHZvaWR9XG5cdCAqL1xuXHQkb24odHlwZSwgY2FsbGJhY2spIHtcblx0XHRpZiAoIWlzX2Z1bmN0aW9uKGNhbGxiYWNrKSkge1xuXHRcdFx0cmV0dXJuIG5vb3A7XG5cdFx0fVxuXHRcdGNvbnN0IGNhbGxiYWNrcyA9IHRoaXMuJCQuY2FsbGJhY2tzW3R5cGVdIHx8ICh0aGlzLiQkLmNhbGxiYWNrc1t0eXBlXSA9IFtdKTtcblx0XHRjYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG5cdFx0cmV0dXJuICgpID0+IHtcblx0XHRcdGNvbnN0IGluZGV4ID0gY2FsbGJhY2tzLmluZGV4T2YoY2FsbGJhY2spO1xuXHRcdFx0aWYgKGluZGV4ICE9PSAtMSkgY2FsbGJhY2tzLnNwbGljZShpbmRleCwgMSk7XG5cdFx0fTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge1BhcnRpYWw8UHJvcHM+fSBwcm9wc1xuXHQgKiBAcmV0dXJucyB7dm9pZH1cblx0ICovXG5cdCRzZXQocHJvcHMpIHtcblx0XHRpZiAodGhpcy4kJHNldCAmJiAhaXNfZW1wdHkocHJvcHMpKSB7XG5cdFx0XHR0aGlzLiQkLnNraXBfYm91bmQgPSB0cnVlO1xuXHRcdFx0dGhpcy4kJHNldChwcm9wcyk7XG5cdFx0XHR0aGlzLiQkLnNraXBfYm91bmQgPSBmYWxzZTtcblx0XHR9XG5cdH1cbn1cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBDdXN0b21FbGVtZW50UHJvcERlZmluaXRpb25cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbYXR0cmlidXRlXVxuICogQHByb3BlcnR5IHtib29sZWFufSBbcmVmbGVjdF1cbiAqIEBwcm9wZXJ0eSB7J1N0cmluZyd8J0Jvb2xlYW4nfCdOdW1iZXInfCdBcnJheSd8J09iamVjdCd9IFt0eXBlXVxuICovXG4iLCAiLy8gZ2VuZXJhdGVkIGR1cmluZyByZWxlYXNlLCBkbyBub3QgbW9kaWZ5XG5cbi8qKlxuICogVGhlIGN1cnJlbnQgdmVyc2lvbiwgYXMgc2V0IGluIHBhY2thZ2UuanNvbi5cbiAqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtY29tcGlsZXIjc3ZlbHRlLXZlcnNpb25cbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzQuMi4xOSc7XG5leHBvcnQgY29uc3QgUFVCTElDX1ZFUlNJT04gPSAnNCc7XG4iLCAiaW1wb3J0IHsgUFVCTElDX1ZFUlNJT04gfSBmcm9tICcuLi8uLi8uLi9zaGFyZWQvdmVyc2lvbi5qcyc7XG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJylcblx0Ly8gQHRzLWlnbm9yZVxuXHQod2luZG93Ll9fc3ZlbHRlIHx8ICh3aW5kb3cuX19zdmVsdGUgPSB7IHY6IG5ldyBTZXQoKSB9KSkudi5hZGQoUFVCTElDX1ZFUlNJT04pO1xuIiwgImZ1bmN0aW9uIHIoZSl7dmFyIHQsZixuPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGV8fFwibnVtYmVyXCI9PXR5cGVvZiBlKW4rPWU7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgZSlpZihBcnJheS5pc0FycmF5KGUpKXt2YXIgbz1lLmxlbmd0aDtmb3IodD0wO3Q8bzt0KyspZVt0XSYmKGY9cihlW3RdKSkmJihuJiYobis9XCIgXCIpLG4rPWYpfWVsc2UgZm9yKGYgaW4gZSllW2ZdJiYobiYmKG4rPVwiIFwiKSxuKz1mKTtyZXR1cm4gbn1leHBvcnQgZnVuY3Rpb24gY2xzeCgpe2Zvcih2YXIgZSx0LGY9MCxuPVwiXCIsbz1hcmd1bWVudHMubGVuZ3RoO2Y8bztmKyspKGU9YXJndW1lbnRzW2ZdKSYmKHQ9cihlKSkmJihuJiYobis9XCIgXCIpLG4rPXQpO3JldHVybiBufWV4cG9ydCBkZWZhdWx0IGNsc3g7IiwgImltcG9ydCB7IE5vdGljZSB9IGZyb20gJ29ic2lkaWFuJztcbmltcG9ydCB0eXBlIHsgSUdyYW51bGFyaXR5IH0gZnJvbSAnLi9pbyc7XG5pbXBvcnQgeyBnZXRQZXJpb2RpY2l0eUZyb21HcmFudWxhcml0eSB9IGZyb20gJy4vaW8vcGFyc2UnO1xuaW1wb3J0IHsgREFJTFlfTk9URVNfUExVR0lOX0lELCBQRVJJT0RJQ19OT1RFU19QTFVHSU5fSUQgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFdpdGhSZXRyeTxUPih1cmw6IHN0cmluZywgcmV0cmllcyA9IDApOiBQcm9taXNlPFQgfCBudWxsPiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgcmVzcG9uc2Ugd2FzIG5vdCBPSycpO1xuXG4gICAgICAgIGNvbnN0IGxvY2FsZXNBcnIgPSAoYXdhaXQgcmVzcG9uc2UuanNvbigpKSBhcyBUO1xuICAgICAgICByZXR1cm4gbG9jYWxlc0FycjtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAocmV0cmllcyA8IDMpIHtcbiAgICAgICAgICAgIG5ldyBOb3RpY2UoYFNvbWV0aGluZyB3ZW50IHdyb25nLiBSZXRyeSAke3JldHJpZXMgKyAxfWApO1xuICAgICAgICAgICAgcmV0dXJuIGZldGNoV2l0aFJldHJ5KHVybCwgcmV0cmllcyArIDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmV3IE5vdGljZShcbiAgICAgICAgICAgICAgICBgRmV0Y2ggZmFpbGVkIGFmdGVyICR7cmV0cmllc30gYXR0ZW1wdHMuIFVzaW5nIGxvY2FsLCBwb3NzaWJseSBvdXRkYXRlZCBsb2NhbGVzLiBDaGVjayBpbnRlcm5ldCBhbmQgcmVzdGFydCBwbHVnaW4uYFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXBpdGFsaXplKHN0cmluZzogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0cmluZ1swXS50b1VwcGVyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRPbkNyZWF0ZU5vdGVEaWFsb2dOb3RlRnJvbUdyYW51bGFyaXR5KGdyYW51bGFyaXR5OiBJR3JhbnVsYXJpdHkpIHtcbiAgICBjb25zdCBwZXJpb2RpY2l0eSA9IGdldFBlcmlvZGljaXR5RnJvbUdyYW51bGFyaXR5KGdyYW51bGFyaXR5KTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IHBlcmlvZGljTm90ZXNQbHVnaW4gPSAoPGFueT53aW5kb3cuYXBwKS5wbHVnaW5zLmdldFBsdWdpbihQRVJJT0RJQ19OT1RFU19QTFVHSU5fSUQpO1xuICAgIGNvbnN0IG5vdGVTZXR0aW5nc0Zyb21QZXJpb2RpY05vdGVzUGx1Z2luID0gcGVyaW9kaWNOb3Rlc1BsdWdpbj8uc2V0dGluZ3NbcGVyaW9kaWNpdHldLmVuYWJsZWQ7XG5cbiAgICBpZiAoZ3JhbnVsYXJpdHkgPT09ICdkYXknKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICAgIGNvbnN0IGRhaWx5Tm90ZXNQbHVnaW4gPSAoPGFueT53aW5kb3cuYXBwKS5pbnRlcm5hbFBsdWdpbnMucGx1Z2luc1tEQUlMWV9OT1RFU19QTFVHSU5fSURdPy5lbmFibGVkO1xuXG4gICAgICAgIGlmIChwZXJpb2RpY05vdGVzUGx1Z2luKSB7XG4gICAgICAgICAgICBpZiAobm90ZVNldHRpbmdzRnJvbVBlcmlvZGljTm90ZXNQbHVnaW4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ05vdGU6IFVzaW5nIERhaWx5IG5vdGVzIGNvbmZpZyBmcm9tIFBlcmlvZGljIE5vdGVzIHBsdWdpbi4nO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoZGFpbHlOb3Rlc1BsdWdpbikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ05vdGU6IERhaWx5IG5vdGVzIGZyb20gUGVyaW9kaWMgTm90ZXMgcGx1Z2luIGFyZSBkaXNhYmxlZC4gVXNpbmcgRGFpbHkgTm90ZXMgcGx1Z2luIGNvbmZpZyBmb3Igbm93Lic7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdOb3RlOiBEYWlseSBub3RlcyBmcm9tIFBlcmlvZGljIE5vdGVzIHBsdWdpbiBhbmQgRGFpbHkgTm90ZXMgcGx1Z2luIGFyZSBkaXNhYmxlZC4gVXNpbmcgZGVmYXVsdCBjb25maWcgZm9yIG5vdy4nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChkYWlseU5vdGVzUGx1Z2luKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdOb3RlOiBNaXNzaW5nIFBlcmlvZGljIE5vdGVzIHBsdWdpbiEgUGxlYXNlIGluc3RhbGwgb3IgYWN0aXZhdGUuIFVzaW5nIERhaWx5IE5vdGVzIHBsdWdpbiBjb25maWcgZm9yIG5vdy4nO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ05vdGU6IE1pc3NpbmcgUGVyaW9kaWMgTm90ZXMgYW5kIERhaWx5IE5vdGVzIHBsdWdpbiEgUGxlYXNlIGluc3RhbGwgb3IgYWN0aXZhdGUuIFVzaW5nIGRlZmF1bHQgY29uZmlnIGZvciBub3cuJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwZXJpb2RpY05vdGVzUGx1Z2luKSB7XG4gICAgICAgIGlmIChub3RlU2V0dGluZ3NGcm9tUGVyaW9kaWNOb3Rlc1BsdWdpbikge1xuICAgICAgICAgICAgcmV0dXJuIGBOb3RlOiBVc2luZyAke2NhcGl0YWxpemUocGVyaW9kaWNpdHkpfSBub3RlcyBjb25maWcgZnJvbSBQZXJpb2RpYyBOb3RlcyBwbHVnaW4uYDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBgTm90ZTogJHtjYXBpdGFsaXplKFxuICAgICAgICAgICAgICAgIHBlcmlvZGljaXR5XG4gICAgICAgICAgICApfSBub3RlcyBmcm9tIFBlcmlvZGljIE5vdGVzIHBsdWdpbiBhcmUgZGlzYWJsZWQuIFVzaW5nIGRlZmF1bHQgY29uZmlnIGZvciBub3cuYDtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAnTm90ZTogTWlzc2luZyBQZXJpb2RpYyBOb3RlcyBwbHVnaW4hIFBsZWFzZSBpbnN0YWxsIG9yIGFjdGl2YXRlLiBEZWZhdWx0cyB3aWxsIGJlIHVzZWQgZm9yIG5vdy4nO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvZ2dlcihtb2R1bGU6IHN0cmluZywgLi4ubWVzc2FnZXM6IHVua25vd25bXSkge1xuICAgIGNvbnN0IHByZWZpeCA9IGBbJHttb2R1bGV9XWA7XG5cbiAgICBtZXNzYWdlcy5mb3JFYWNoKChtZXNzYWdlKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHByZWZpeCwgXCIgXCIsIG1lc3NhZ2UpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIi1cIi5yZXBlYXQoMjApKVxuICAgIH0pXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQbHVnaW4ocGx1Z2luSWQ6IHN0cmluZyk6IFByb21pc2U8YW55IHwgbnVsbD4ge1xuICAgIGNvbnN0IHBsdWdpbnMgPSAoPGFueT53aW5kb3cuYXBwKS5wbHVnaW5zO1xuICAgIGNvbnN0IGVuYWJsZWRQbHVnaW5zID0gcGx1Z2lucz8uZW5hYmxlZFBsdWdpbnMgYXMgU2V0PHN0cmluZz5cblxuICAgIGlmICghZW5hYmxlZFBsdWdpbnMuaGFzKHBsdWdpbklkKSkge1xuICAgICAgICBhd2FpdCBwbHVnaW5zPy5lbmFibGVQbHVnaW5BbmRTYXZlKHBsdWdpbklkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGx1Z2lucz8uZ2V0UGx1Z2luKHBsdWdpbklkKVxufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldERhaWx5Tm90ZXNQbHVnaW4oKSB7XG4gICAgY29uc3QgaW50ZXJuYWxQbHVnaW5zID0gKDxhbnk+d2luZG93LmFwcCkuaW50ZXJuYWxQbHVnaW5zO1xuICAgIGNvbnN0IGRhaWx5Tm90ZXNQbHVnaW4gPSBpbnRlcm5hbFBsdWdpbnM/LmdldFBsdWdpbkJ5SWQoREFJTFlfTk9URVNfUExVR0lOX0lEKTtcblxuICAgIGlmICghZGFpbHlOb3Rlc1BsdWdpbj8uZW5hYmxlZCkge1xuICAgICAgICBhd2FpdCBkYWlseU5vdGVzUGx1Z2luLmVuYWJsZSgpXG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcbmltcG9ydCB0eXBlIHsgSUdyYW51bGFyaXR5LCBJUGVyaW9kaWNpdHkgfSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBub3RlRGF0ZVVJRCBpcyBhIHdheSBvZiBpZGVudGlmeWluZyBwZXJpb2RpYyBub3Rlcy5cbiAqIFRoZXkgYXJlIHByZWZpeGVkIHdpdGggdGhlIGdpdmVuIGdyYW51bGFyaXR5IHRvIGF2b2lkIGFtYmlndWl0eS5cbiAqIGUuZy46IFwiZGF5LTIwMjIvMDEvMDFcIiwgXCJ3ZWVrLTIwXCJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5vdGVEYXRlVUlEKHtcbiAgICBkYXRlLFxuICAgIGdyYW51bGFyaXR5LFxuICAgIGxvY2FsZUF3YXJlXG59OiB7XG4gICAgZGF0ZTogTW9tZW50O1xuICAgIGdyYW51bGFyaXR5OiBJR3JhbnVsYXJpdHk7XG4gICAgbG9jYWxlQXdhcmU/OiBib29sZWFuO1xufSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGAke2dyYW51bGFyaXR5fS0ke2RhdGVcbiAgICAgICAgLnN0YXJ0T2YoZ3JhbnVsYXJpdHkgfHwgJ2RheScpXG4gICAgICAgIC5jbG9uZSgpXG4gICAgICAgIC5sb2NhbGUobG9jYWxlQXdhcmUgPyB3aW5kb3cubW9tZW50LmxvY2FsZSgpIDogJ2VuJylcbiAgICAgICAgLmZvcm1hdCgpfWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQZXJpb2RpY2l0eUZyb21HcmFudWxhcml0eShncmFudWxhcml0eTogSUdyYW51bGFyaXR5KTogSVBlcmlvZGljaXR5IHtcbiAgICByZXR1cm4gZ3JhbnVsYXJpdHkgPT09ICdkYXknID8gJ2RhaWx5JyA6IGAke2dyYW51bGFyaXR5fWx5YDtcbn1cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgY2xzeCBmcm9tICdjbHN4Jztcblx0aW1wb3J0IHsgY2FwaXRhbGl6ZSB9IGZyb20gJ0AvdXRpbHMnO1xuXG5cdGV4cG9ydCBsZXQgdGFiczogc3RyaW5nW10gPSBbXTtcblx0ZXhwb3J0IGxldCBzZWxlY3RlZFRhYjogc3RyaW5nO1xuXHRleHBvcnQgbGV0IGlkOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG5cdGV4cG9ydCBsZXQgdGFiSWQ6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbjwvc2NyaXB0PlxuXG48ZGl2XG5cdGNsYXNzPVwiZmxleCByb3VuZGVkLVstLXRhYi1jdXJ2ZV0gbXgtYXV0byB3LWZ1bGwgbWF4LXcteHMgc3BhY2UteC0xIHAtMSBiZy1bLS1iYWNrZ3JvdW5kLW1vZGlmaWVyLWhvdmVyXVwiXG5cdHtpZH1cbj5cblx0eyNlYWNoIHRhYnMgYXMgdGFifVxuXHRcdDxidXR0b25cblx0XHRcdGNsYXNzPXtjbHN4KFxuXHRcdFx0XHQnWyY6bm90KDpmb2N1cy12aXNpYmxlKV06c2hhZG93LW5vbmUgdy1mdWxsIHJvdW5kZWQtWy0tcmFkaXVzLXNdIHB5LTIgdHJhbnNpdGlvbicsXG5cdFx0XHRcdHNlbGVjdGVkVGFiID09PSB0YWJcblx0XHRcdFx0XHQ/ICd0ZXh0LVstLXRleHQtb24tYWNjZW50XSBiZy1bLS1pbnRlcmFjdGl2ZS1hY2NlbnRdIGhvdmVyOmJnLVstLWludGVyYWN0aXZlLWFjY2VudC1ob3Zlcl0nXG5cdFx0XHRcdFx0OiAndGV4dC1bLS1pY29uLWNvbG9yXSBvcGFjaXR5LVstLWljb24tb3BhY2l0eV0gaG92ZXI6b3BhY2l0eS1bLS1pY29uLW9wYWNpdHktaG92ZXJdIGhvdmVyOnRleHQtWy0taWNvbi1jb2xvci1ob3Zlcl0gaG92ZXI6YmctWy0tYmFja2dyb3VuZC1tb2RpZmllci1ob3Zlcl0nXG5cdFx0XHQpfVxuXHRcdFx0aWQ9e3RhYklkfVxuXHRcdFx0b246Y2xpY2s9eygpID0+IChzZWxlY3RlZFRhYiA9IHRhYil9PntjYXBpdGFsaXplKHRhYil9PC9idXR0b25cblx0XHQ+XG5cdHsvZWFjaH1cbjwvZGl2PlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIGJhc2U7XG5cdEB0YWlsd2luZCBjb21wb25lbnRzO1xuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgeyBzZXRJY29uIH0gZnJvbSAnb2JzaWRpYW4nO1xuXHRpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJztcblx0aW1wb3J0IHsgZmFkZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJztcblxuXHRleHBvcnQgbGV0IGlzRXhwYW5kZWQ6IGJvb2xlYW47XG5cdGxldCBhcnJvd0VsOiBIVE1MRWxlbWVudDtcblxuXHRvbk1vdW50KCgpID0+IHtcblx0XHRzZXRJY29uKGFycm93RWwsICdjaGV2cm9uLXJpZ2h0Jyk7XG5cdH0pO1xuPC9zY3JpcHQ+XG5cbjxkaXZcblx0YmluZDp0aGlzPXthcnJvd0VsfVxuXHRjbGFzcz17YGZsZXggaXRlbXMtY2VudGVyIG1yLTIgdHJhbnNpdGlvbi10cmFuc2Zvcm0gZHVyYXRpb24tMjAwIGVhc2UtaW4gJHtcblx0XHRpc0V4cGFuZGVkID8gJ3JvdGF0ZS05MCcgOiAnJ1xuXHR9YH1cblx0dHJhbnNpdGlvbjpmYWRlXG4vPlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIHV0aWxpdGllcztcbjwvc3R5bGU+XG4iLCAiLypcbkFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbWF0dGRlc2xcbkRpc3RyaWJ1dGVkIHVuZGVyIE1JVCBMaWNlbnNlIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXR0ZGVzbC9lYXNlcy9ibG9iL21hc3Rlci9MSUNFTlNFLm1kXG4qL1xuZXhwb3J0IHsgaWRlbnRpdHkgYXMgbGluZWFyIH0gZnJvbSAnLi4vaW50ZXJuYWwvaW5kZXguanMnO1xuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYmFja0luT3V0KHQpIHtcblx0Y29uc3QgcyA9IDEuNzAxNTggKiAxLjUyNTtcblx0aWYgKCh0ICo9IDIpIDwgMSkgcmV0dXJuIDAuNSAqICh0ICogdCAqICgocyArIDEpICogdCAtIHMpKTtcblx0cmV0dXJuIDAuNSAqICgodCAtPSAyKSAqIHQgKiAoKHMgKyAxKSAqIHQgKyBzKSArIDIpO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYmFja0luKHQpIHtcblx0Y29uc3QgcyA9IDEuNzAxNTg7XG5cdHJldHVybiB0ICogdCAqICgocyArIDEpICogdCAtIHMpO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYmFja091dCh0KSB7XG5cdGNvbnN0IHMgPSAxLjcwMTU4O1xuXHRyZXR1cm4gLS10ICogdCAqICgocyArIDEpICogdCArIHMpICsgMTtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJvdW5jZU91dCh0KSB7XG5cdGNvbnN0IGEgPSA0LjAgLyAxMS4wO1xuXHRjb25zdCBiID0gOC4wIC8gMTEuMDtcblx0Y29uc3QgYyA9IDkuMCAvIDEwLjA7XG5cdGNvbnN0IGNhID0gNDM1Ni4wIC8gMzYxLjA7XG5cdGNvbnN0IGNiID0gMzU0NDIuMCAvIDE4MDUuMDtcblx0Y29uc3QgY2MgPSAxNjA2MS4wIC8gMTgwNS4wO1xuXHRjb25zdCB0MiA9IHQgKiB0O1xuXHRyZXR1cm4gdCA8IGFcblx0XHQ/IDcuNTYyNSAqIHQyXG5cdFx0OiB0IDwgYlxuXHRcdD8gOS4wNzUgKiB0MiAtIDkuOSAqIHQgKyAzLjRcblx0XHQ6IHQgPCBjXG5cdFx0PyBjYSAqIHQyIC0gY2IgKiB0ICsgY2Ncblx0XHQ6IDEwLjggKiB0ICogdCAtIDIwLjUyICogdCArIDEwLjcyO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYm91bmNlSW5PdXQodCkge1xuXHRyZXR1cm4gdCA8IDAuNSA/IDAuNSAqICgxLjAgLSBib3VuY2VPdXQoMS4wIC0gdCAqIDIuMCkpIDogMC41ICogYm91bmNlT3V0KHQgKiAyLjAgLSAxLjApICsgMC41O1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYm91bmNlSW4odCkge1xuXHRyZXR1cm4gMS4wIC0gYm91bmNlT3V0KDEuMCAtIHQpO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2lyY0luT3V0KHQpIHtcblx0aWYgKCh0ICo9IDIpIDwgMSkgcmV0dXJuIC0wLjUgKiAoTWF0aC5zcXJ0KDEgLSB0ICogdCkgLSAxKTtcblx0cmV0dXJuIDAuNSAqIChNYXRoLnNxcnQoMSAtICh0IC09IDIpICogdCkgKyAxKTtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNpcmNJbih0KSB7XG5cdHJldHVybiAxLjAgLSBNYXRoLnNxcnQoMS4wIC0gdCAqIHQpO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2lyY091dCh0KSB7XG5cdHJldHVybiBNYXRoLnNxcnQoMSAtIC0tdCAqIHQpO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNJbk91dCh0KSB7XG5cdHJldHVybiB0IDwgMC41ID8gNC4wICogdCAqIHQgKiB0IDogMC41ICogTWF0aC5wb3coMi4wICogdCAtIDIuMCwgMy4wKSArIDEuMDtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGN1YmljSW4odCkge1xuXHRyZXR1cm4gdCAqIHQgKiB0O1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNPdXQodCkge1xuXHRjb25zdCBmID0gdCAtIDEuMDtcblx0cmV0dXJuIGYgKiBmICogZiArIDEuMDtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVsYXN0aWNJbk91dCh0KSB7XG5cdHJldHVybiB0IDwgMC41XG5cdFx0PyAwLjUgKiBNYXRoLnNpbigoKCsxMy4wICogTWF0aC5QSSkgLyAyKSAqIDIuMCAqIHQpICogTWF0aC5wb3coMi4wLCAxMC4wICogKDIuMCAqIHQgLSAxLjApKVxuXHRcdDogMC41ICpcblx0XHRcdFx0TWF0aC5zaW4oKCgtMTMuMCAqIE1hdGguUEkpIC8gMikgKiAoMi4wICogdCAtIDEuMCArIDEuMCkpICpcblx0XHRcdFx0TWF0aC5wb3coMi4wLCAtMTAuMCAqICgyLjAgKiB0IC0gMS4wKSkgK1xuXHRcdFx0XHQxLjA7XG59XG5cbi8qKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlLWVhc2luZ1xuICogQHBhcmFtIHtudW1iZXJ9IHRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbGFzdGljSW4odCkge1xuXHRyZXR1cm4gTWF0aC5zaW4oKDEzLjAgKiB0ICogTWF0aC5QSSkgLyAyKSAqIE1hdGgucG93KDIuMCwgMTAuMCAqICh0IC0gMS4wKSk7XG59XG5cbi8qKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlLWVhc2luZ1xuICogQHBhcmFtIHtudW1iZXJ9IHRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbGFzdGljT3V0KHQpIHtcblx0cmV0dXJuIE1hdGguc2luKCgtMTMuMCAqICh0ICsgMS4wKSAqIE1hdGguUEkpIC8gMikgKiBNYXRoLnBvdygyLjAsIC0xMC4wICogdCkgKyAxLjA7XG59XG5cbi8qKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlLWVhc2luZ1xuICogQHBhcmFtIHtudW1iZXJ9IHRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHBvSW5PdXQodCkge1xuXHRyZXR1cm4gdCA9PT0gMC4wIHx8IHQgPT09IDEuMFxuXHRcdD8gdFxuXHRcdDogdCA8IDAuNVxuXHRcdD8gKzAuNSAqIE1hdGgucG93KDIuMCwgMjAuMCAqIHQgLSAxMC4wKVxuXHRcdDogLTAuNSAqIE1hdGgucG93KDIuMCwgMTAuMCAtIHQgKiAyMC4wKSArIDEuMDtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9Jbih0KSB7XG5cdHJldHVybiB0ID09PSAwLjAgPyB0IDogTWF0aC5wb3coMi4wLCAxMC4wICogKHQgLSAxLjApKTtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9PdXQodCkge1xuXHRyZXR1cm4gdCA9PT0gMS4wID8gdCA6IDEuMCAtIE1hdGgucG93KDIuMCwgLTEwLjAgKiB0KTtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1YWRJbk91dCh0KSB7XG5cdHQgLz0gMC41O1xuXHRpZiAodCA8IDEpIHJldHVybiAwLjUgKiB0ICogdDtcblx0dC0tO1xuXHRyZXR1cm4gLTAuNSAqICh0ICogKHQgLSAyKSAtIDEpO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcXVhZEluKHQpIHtcblx0cmV0dXJuIHQgKiB0O1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcXVhZE91dCh0KSB7XG5cdHJldHVybiAtdCAqICh0IC0gMi4wKTtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1YXJ0SW5PdXQodCkge1xuXHRyZXR1cm4gdCA8IDAuNSA/ICs4LjAgKiBNYXRoLnBvdyh0LCA0LjApIDogLTguMCAqIE1hdGgucG93KHQgLSAxLjAsIDQuMCkgKyAxLjA7XG59XG5cbi8qKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlLWVhc2luZ1xuICogQHBhcmFtIHtudW1iZXJ9IHRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBxdWFydEluKHQpIHtcblx0cmV0dXJuIE1hdGgucG93KHQsIDQuMCk7XG59XG5cbi8qKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlLWVhc2luZ1xuICogQHBhcmFtIHtudW1iZXJ9IHRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBxdWFydE91dCh0KSB7XG5cdHJldHVybiBNYXRoLnBvdyh0IC0gMS4wLCAzLjApICogKDEuMCAtIHQpICsgMS4wO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcXVpbnRJbk91dCh0KSB7XG5cdGlmICgodCAqPSAyKSA8IDEpIHJldHVybiAwLjUgKiB0ICogdCAqIHQgKiB0ICogdDtcblx0cmV0dXJuIDAuNSAqICgodCAtPSAyKSAqIHQgKiB0ICogdCAqIHQgKyAyKTtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1aW50SW4odCkge1xuXHRyZXR1cm4gdCAqIHQgKiB0ICogdCAqIHQ7XG59XG5cbi8qKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlLWVhc2luZ1xuICogQHBhcmFtIHtudW1iZXJ9IHRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBxdWludE91dCh0KSB7XG5cdHJldHVybiAtLXQgKiB0ICogdCAqIHQgKiB0ICsgMTtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpbmVJbk91dCh0KSB7XG5cdHJldHVybiAtMC41ICogKE1hdGguY29zKE1hdGguUEkgKiB0KSAtIDEpO1xufVxuXG4vKipcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1lYXNpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2luZUluKHQpIHtcblx0Y29uc3QgdiA9IE1hdGguY29zKHQgKiBNYXRoLlBJICogMC41KTtcblx0aWYgKE1hdGguYWJzKHYpIDwgMWUtMTQpIHJldHVybiAxO1xuXHRlbHNlIHJldHVybiAxIC0gdjtcbn1cblxuLyoqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gdFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpbmVPdXQodCkge1xuXHRyZXR1cm4gTWF0aC5zaW4oKHQgKiBNYXRoLlBJKSAvIDIpO1xufVxuIiwgImltcG9ydCB7IGN1YmljT3V0LCBjdWJpY0luT3V0LCBsaW5lYXIgfSBmcm9tICcuLi9lYXNpbmcvaW5kZXguanMnO1xuaW1wb3J0IHsgYXNzaWduLCBzcGxpdF9jc3NfdW5pdCwgaXNfZnVuY3Rpb24gfSBmcm9tICcuLi9pbnRlcm5hbC9pbmRleC5qcyc7XG5cbi8qKlxuICogQW5pbWF0ZXMgYSBgYmx1cmAgZmlsdGVyIGFsb25nc2lkZSBhbiBlbGVtZW50J3Mgb3BhY2l0eS5cbiAqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtdHJhbnNpdGlvbiNibHVyXG4gKiBAcGFyYW0ge0VsZW1lbnR9IG5vZGVcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3B1YmxpYycpLkJsdXJQYXJhbXN9IFtwYXJhbXNdXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL3B1YmxpYycpLlRyYW5zaXRpb25Db25maWd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBibHVyKFxuXHRub2RlLFxuXHR7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSA0MDAsIGVhc2luZyA9IGN1YmljSW5PdXQsIGFtb3VudCA9IDUsIG9wYWNpdHkgPSAwIH0gPSB7fVxuKSB7XG5cdGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcblx0Y29uc3QgdGFyZ2V0X29wYWNpdHkgPSArc3R5bGUub3BhY2l0eTtcblx0Y29uc3QgZiA9IHN0eWxlLmZpbHRlciA9PT0gJ25vbmUnID8gJycgOiBzdHlsZS5maWx0ZXI7XG5cdGNvbnN0IG9kID0gdGFyZ2V0X29wYWNpdHkgKiAoMSAtIG9wYWNpdHkpO1xuXHRjb25zdCBbdmFsdWUsIHVuaXRdID0gc3BsaXRfY3NzX3VuaXQoYW1vdW50KTtcblx0cmV0dXJuIHtcblx0XHRkZWxheSxcblx0XHRkdXJhdGlvbixcblx0XHRlYXNpbmcsXG5cdFx0Y3NzOiAoX3QsIHUpID0+IGBvcGFjaXR5OiAke3RhcmdldF9vcGFjaXR5IC0gb2QgKiB1fTsgZmlsdGVyOiAke2Z9IGJsdXIoJHt1ICogdmFsdWV9JHt1bml0fSk7YFxuXHR9O1xufVxuXG4vKipcbiAqIEFuaW1hdGVzIHRoZSBvcGFjaXR5IG9mIGFuIGVsZW1lbnQgZnJvbSAwIHRvIHRoZSBjdXJyZW50IG9wYWNpdHkgZm9yIGBpbmAgdHJhbnNpdGlvbnMgYW5kIGZyb20gdGhlIGN1cnJlbnQgb3BhY2l0eSB0byAwIGZvciBgb3V0YCB0cmFuc2l0aW9ucy5cbiAqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtdHJhbnNpdGlvbiNmYWRlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IG5vZGVcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3B1YmxpYycpLkZhZGVQYXJhbXN9IFtwYXJhbXNdXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL3B1YmxpYycpLlRyYW5zaXRpb25Db25maWd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmYWRlKG5vZGUsIHsgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDQwMCwgZWFzaW5nID0gbGluZWFyIH0gPSB7fSkge1xuXHRjb25zdCBvID0gK2dldENvbXB1dGVkU3R5bGUobm9kZSkub3BhY2l0eTtcblx0cmV0dXJuIHtcblx0XHRkZWxheSxcblx0XHRkdXJhdGlvbixcblx0XHRlYXNpbmcsXG5cdFx0Y3NzOiAodCkgPT4gYG9wYWNpdHk6ICR7dCAqIG99YFxuXHR9O1xufVxuXG4vKipcbiAqIEFuaW1hdGVzIHRoZSB4IGFuZCB5IHBvc2l0aW9ucyBhbmQgdGhlIG9wYWNpdHkgb2YgYW4gZWxlbWVudC4gYGluYCB0cmFuc2l0aW9ucyBhbmltYXRlIGZyb20gdGhlIHByb3ZpZGVkIHZhbHVlcywgcGFzc2VkIGFzIHBhcmFtZXRlcnMgdG8gdGhlIGVsZW1lbnQncyBkZWZhdWx0IHZhbHVlcy4gYG91dGAgdHJhbnNpdGlvbnMgYW5pbWF0ZSBmcm9tIHRoZSBlbGVtZW50J3MgZGVmYXVsdCB2YWx1ZXMgdG8gdGhlIHByb3ZpZGVkIHZhbHVlcy5cbiAqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtdHJhbnNpdGlvbiNmbHlcbiAqIEBwYXJhbSB7RWxlbWVudH0gbm9kZVxuICogQHBhcmFtIHtpbXBvcnQoJy4vcHVibGljJykuRmx5UGFyYW1zfSBbcGFyYW1zXVxuICogQHJldHVybnMge2ltcG9ydCgnLi9wdWJsaWMnKS5UcmFuc2l0aW9uQ29uZmlnfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZmx5KFxuXHRub2RlLFxuXHR7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSA0MDAsIGVhc2luZyA9IGN1YmljT3V0LCB4ID0gMCwgeSA9IDAsIG9wYWNpdHkgPSAwIH0gPSB7fVxuKSB7XG5cdGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcblx0Y29uc3QgdGFyZ2V0X29wYWNpdHkgPSArc3R5bGUub3BhY2l0eTtcblx0Y29uc3QgdHJhbnNmb3JtID0gc3R5bGUudHJhbnNmb3JtID09PSAnbm9uZScgPyAnJyA6IHN0eWxlLnRyYW5zZm9ybTtcblx0Y29uc3Qgb2QgPSB0YXJnZXRfb3BhY2l0eSAqICgxIC0gb3BhY2l0eSk7XG5cdGNvbnN0IFt4VmFsdWUsIHhVbml0XSA9IHNwbGl0X2Nzc191bml0KHgpO1xuXHRjb25zdCBbeVZhbHVlLCB5VW5pdF0gPSBzcGxpdF9jc3NfdW5pdCh5KTtcblx0cmV0dXJuIHtcblx0XHRkZWxheSxcblx0XHRkdXJhdGlvbixcblx0XHRlYXNpbmcsXG5cdFx0Y3NzOiAodCwgdSkgPT4gYFxuXHRcdFx0dHJhbnNmb3JtOiAke3RyYW5zZm9ybX0gdHJhbnNsYXRlKCR7KDEgLSB0KSAqIHhWYWx1ZX0ke3hVbml0fSwgJHsoMSAtIHQpICogeVZhbHVlfSR7eVVuaXR9KTtcblx0XHRcdG9wYWNpdHk6ICR7dGFyZ2V0X29wYWNpdHkgLSBvZCAqIHV9YFxuXHR9O1xufVxuXG4vKipcbiAqIFNsaWRlcyBhbiBlbGVtZW50IGluIGFuZCBvdXQuXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlLXRyYW5zaXRpb24jc2xpZGVcbiAqIEBwYXJhbSB7RWxlbWVudH0gbm9kZVxuICogQHBhcmFtIHtpbXBvcnQoJy4vcHVibGljJykuU2xpZGVQYXJhbXN9IFtwYXJhbXNdXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL3B1YmxpYycpLlRyYW5zaXRpb25Db25maWd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzbGlkZShub2RlLCB7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSA0MDAsIGVhc2luZyA9IGN1YmljT3V0LCBheGlzID0gJ3knIH0gPSB7fSkge1xuXHRjb25zdCBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUobm9kZSk7XG5cdGNvbnN0IG9wYWNpdHkgPSArc3R5bGUub3BhY2l0eTtcblx0Y29uc3QgcHJpbWFyeV9wcm9wZXJ0eSA9IGF4aXMgPT09ICd5JyA/ICdoZWlnaHQnIDogJ3dpZHRoJztcblx0Y29uc3QgcHJpbWFyeV9wcm9wZXJ0eV92YWx1ZSA9IHBhcnNlRmxvYXQoc3R5bGVbcHJpbWFyeV9wcm9wZXJ0eV0pO1xuXHRjb25zdCBzZWNvbmRhcnlfcHJvcGVydGllcyA9IGF4aXMgPT09ICd5JyA/IFsndG9wJywgJ2JvdHRvbSddIDogWydsZWZ0JywgJ3JpZ2h0J107XG5cdGNvbnN0IGNhcGl0YWxpemVkX3NlY29uZGFyeV9wcm9wZXJ0aWVzID0gc2Vjb25kYXJ5X3Byb3BlcnRpZXMubWFwKFxuXHRcdChlKSA9PiBgJHtlWzBdLnRvVXBwZXJDYXNlKCl9JHtlLnNsaWNlKDEpfWBcblx0KTtcblx0Y29uc3QgcGFkZGluZ19zdGFydF92YWx1ZSA9IHBhcnNlRmxvYXQoc3R5bGVbYHBhZGRpbmcke2NhcGl0YWxpemVkX3NlY29uZGFyeV9wcm9wZXJ0aWVzWzBdfWBdKTtcblx0Y29uc3QgcGFkZGluZ19lbmRfdmFsdWUgPSBwYXJzZUZsb2F0KHN0eWxlW2BwYWRkaW5nJHtjYXBpdGFsaXplZF9zZWNvbmRhcnlfcHJvcGVydGllc1sxXX1gXSk7XG5cdGNvbnN0IG1hcmdpbl9zdGFydF92YWx1ZSA9IHBhcnNlRmxvYXQoc3R5bGVbYG1hcmdpbiR7Y2FwaXRhbGl6ZWRfc2Vjb25kYXJ5X3Byb3BlcnRpZXNbMF19YF0pO1xuXHRjb25zdCBtYXJnaW5fZW5kX3ZhbHVlID0gcGFyc2VGbG9hdChzdHlsZVtgbWFyZ2luJHtjYXBpdGFsaXplZF9zZWNvbmRhcnlfcHJvcGVydGllc1sxXX1gXSk7XG5cdGNvbnN0IGJvcmRlcl93aWR0aF9zdGFydF92YWx1ZSA9IHBhcnNlRmxvYXQoXG5cdFx0c3R5bGVbYGJvcmRlciR7Y2FwaXRhbGl6ZWRfc2Vjb25kYXJ5X3Byb3BlcnRpZXNbMF19V2lkdGhgXVxuXHQpO1xuXHRjb25zdCBib3JkZXJfd2lkdGhfZW5kX3ZhbHVlID0gcGFyc2VGbG9hdChcblx0XHRzdHlsZVtgYm9yZGVyJHtjYXBpdGFsaXplZF9zZWNvbmRhcnlfcHJvcGVydGllc1sxXX1XaWR0aGBdXG5cdCk7XG5cdHJldHVybiB7XG5cdFx0ZGVsYXksXG5cdFx0ZHVyYXRpb24sXG5cdFx0ZWFzaW5nLFxuXHRcdGNzczogKHQpID0+XG5cdFx0XHQnb3ZlcmZsb3c6IGhpZGRlbjsnICtcblx0XHRcdGBvcGFjaXR5OiAke01hdGgubWluKHQgKiAyMCwgMSkgKiBvcGFjaXR5fTtgICtcblx0XHRcdGAke3ByaW1hcnlfcHJvcGVydHl9OiAke3QgKiBwcmltYXJ5X3Byb3BlcnR5X3ZhbHVlfXB4O2AgK1xuXHRcdFx0YHBhZGRpbmctJHtzZWNvbmRhcnlfcHJvcGVydGllc1swXX06ICR7dCAqIHBhZGRpbmdfc3RhcnRfdmFsdWV9cHg7YCArXG5cdFx0XHRgcGFkZGluZy0ke3NlY29uZGFyeV9wcm9wZXJ0aWVzWzFdfTogJHt0ICogcGFkZGluZ19lbmRfdmFsdWV9cHg7YCArXG5cdFx0XHRgbWFyZ2luLSR7c2Vjb25kYXJ5X3Byb3BlcnRpZXNbMF19OiAke3QgKiBtYXJnaW5fc3RhcnRfdmFsdWV9cHg7YCArXG5cdFx0XHRgbWFyZ2luLSR7c2Vjb25kYXJ5X3Byb3BlcnRpZXNbMV19OiAke3QgKiBtYXJnaW5fZW5kX3ZhbHVlfXB4O2AgK1xuXHRcdFx0YGJvcmRlci0ke3NlY29uZGFyeV9wcm9wZXJ0aWVzWzBdfS13aWR0aDogJHt0ICogYm9yZGVyX3dpZHRoX3N0YXJ0X3ZhbHVlfXB4O2AgK1xuXHRcdFx0YGJvcmRlci0ke3NlY29uZGFyeV9wcm9wZXJ0aWVzWzFdfS13aWR0aDogJHt0ICogYm9yZGVyX3dpZHRoX2VuZF92YWx1ZX1weDtgXG5cdH07XG59XG5cbi8qKlxuICogQW5pbWF0ZXMgdGhlIG9wYWNpdHkgYW5kIHNjYWxlIG9mIGFuIGVsZW1lbnQuIGBpbmAgdHJhbnNpdGlvbnMgYW5pbWF0ZSBmcm9tIGFuIGVsZW1lbnQncyBjdXJyZW50IChkZWZhdWx0KSB2YWx1ZXMgdG8gdGhlIHByb3ZpZGVkIHZhbHVlcywgcGFzc2VkIGFzIHBhcmFtZXRlcnMuIGBvdXRgIHRyYW5zaXRpb25zIGFuaW1hdGUgZnJvbSB0aGUgcHJvdmlkZWQgdmFsdWVzIHRvIGFuIGVsZW1lbnQncyBkZWZhdWx0IHZhbHVlcy5cbiAqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtdHJhbnNpdGlvbiNzY2FsZVxuICogQHBhcmFtIHtFbGVtZW50fSBub2RlXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9wdWJsaWMnKS5TY2FsZVBhcmFtc30gW3BhcmFtc11cbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4vcHVibGljJykuVHJhbnNpdGlvbkNvbmZpZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNjYWxlKFxuXHRub2RlLFxuXHR7IGRlbGF5ID0gMCwgZHVyYXRpb24gPSA0MDAsIGVhc2luZyA9IGN1YmljT3V0LCBzdGFydCA9IDAsIG9wYWNpdHkgPSAwIH0gPSB7fVxuKSB7XG5cdGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcblx0Y29uc3QgdGFyZ2V0X29wYWNpdHkgPSArc3R5bGUub3BhY2l0eTtcblx0Y29uc3QgdHJhbnNmb3JtID0gc3R5bGUudHJhbnNmb3JtID09PSAnbm9uZScgPyAnJyA6IHN0eWxlLnRyYW5zZm9ybTtcblx0Y29uc3Qgc2QgPSAxIC0gc3RhcnQ7XG5cdGNvbnN0IG9kID0gdGFyZ2V0X29wYWNpdHkgKiAoMSAtIG9wYWNpdHkpO1xuXHRyZXR1cm4ge1xuXHRcdGRlbGF5LFxuXHRcdGR1cmF0aW9uLFxuXHRcdGVhc2luZyxcblx0XHRjc3M6IChfdCwgdSkgPT4gYFxuXHRcdFx0dHJhbnNmb3JtOiAke3RyYW5zZm9ybX0gc2NhbGUoJHsxIC0gc2QgKiB1fSk7XG5cdFx0XHRvcGFjaXR5OiAke3RhcmdldF9vcGFjaXR5IC0gb2QgKiB1fVxuXHRcdGBcblx0fTtcbn1cblxuLyoqXG4gKiBBbmltYXRlcyB0aGUgc3Ryb2tlIG9mIGFuIFNWRyBlbGVtZW50LCBsaWtlIGEgc25ha2UgaW4gYSB0dWJlLiBgaW5gIHRyYW5zaXRpb25zIGJlZ2luIHdpdGggdGhlIHBhdGggaW52aXNpYmxlIGFuZCBkcmF3IHRoZSBwYXRoIHRvIHRoZSBzY3JlZW4gb3ZlciB0aW1lLiBgb3V0YCB0cmFuc2l0aW9ucyBzdGFydCBpbiBhIHZpc2libGUgc3RhdGUgYW5kIGdyYWR1YWxseSBlcmFzZSB0aGUgcGF0aC4gYGRyYXdgIG9ubHkgd29ya3Mgd2l0aCBlbGVtZW50cyB0aGF0IGhhdmUgYSBgZ2V0VG90YWxMZW5ndGhgIG1ldGhvZCwgbGlrZSBgPHBhdGg+YCBhbmQgYDxwb2x5bGluZT5gLlxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS10cmFuc2l0aW9uI2RyYXdcbiAqIEBwYXJhbSB7U1ZHRWxlbWVudCAmIHsgZ2V0VG90YWxMZW5ndGgoKTogbnVtYmVyIH19IG5vZGVcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3B1YmxpYycpLkRyYXdQYXJhbXN9IFtwYXJhbXNdXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL3B1YmxpYycpLlRyYW5zaXRpb25Db25maWd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkcmF3KG5vZGUsIHsgZGVsYXkgPSAwLCBzcGVlZCwgZHVyYXRpb24sIGVhc2luZyA9IGN1YmljSW5PdXQgfSA9IHt9KSB7XG5cdGxldCBsZW4gPSBub2RlLmdldFRvdGFsTGVuZ3RoKCk7XG5cdGNvbnN0IHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcblx0aWYgKHN0eWxlLnN0cm9rZUxpbmVjYXAgIT09ICdidXR0Jykge1xuXHRcdGxlbiArPSBwYXJzZUludChzdHlsZS5zdHJva2VXaWR0aCk7XG5cdH1cblx0aWYgKGR1cmF0aW9uID09PSB1bmRlZmluZWQpIHtcblx0XHRpZiAoc3BlZWQgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0ZHVyYXRpb24gPSA4MDA7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGR1cmF0aW9uID0gbGVuIC8gc3BlZWQ7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKHR5cGVvZiBkdXJhdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdGR1cmF0aW9uID0gZHVyYXRpb24obGVuKTtcblx0fVxuXHRyZXR1cm4ge1xuXHRcdGRlbGF5LFxuXHRcdGR1cmF0aW9uLFxuXHRcdGVhc2luZyxcblx0XHRjc3M6IChfLCB1KSA9PiBgXG5cdFx0XHRzdHJva2UtZGFzaGFycmF5OiAke2xlbn07XG5cdFx0XHRzdHJva2UtZGFzaG9mZnNldDogJHt1ICogbGVufTtcblx0XHRgXG5cdH07XG59XG5cbi8qKlxuICogVGhlIGBjcm9zc2ZhZGVgIGZ1bmN0aW9uIGNyZWF0ZXMgYSBwYWlyIG9mIFt0cmFuc2l0aW9uc10oaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3MjdGVtcGxhdGUtc3ludGF4LWVsZW1lbnQtZGlyZWN0aXZlcy10cmFuc2l0aW9uLWZuKSBjYWxsZWQgYHNlbmRgIGFuZCBgcmVjZWl2ZWAuIFdoZW4gYW4gZWxlbWVudCBpcyAnc2VudCcsIGl0IGxvb2tzIGZvciBhIGNvcnJlc3BvbmRpbmcgZWxlbWVudCBiZWluZyAncmVjZWl2ZWQnLCBhbmQgZ2VuZXJhdGVzIGEgdHJhbnNpdGlvbiB0aGF0IHRyYW5zZm9ybXMgdGhlIGVsZW1lbnQgdG8gaXRzIGNvdW50ZXJwYXJ0J3MgcG9zaXRpb24gYW5kIGZhZGVzIGl0IG91dC4gV2hlbiBhbiBlbGVtZW50IGlzICdyZWNlaXZlZCcsIHRoZSByZXZlcnNlIGhhcHBlbnMuIElmIHRoZXJlIGlzIG5vIGNvdW50ZXJwYXJ0LCB0aGUgYGZhbGxiYWNrYCB0cmFuc2l0aW9uIGlzIHVzZWQuXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlLXRyYW5zaXRpb24jY3Jvc3NmYWRlXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9wdWJsaWMnKS5Dcm9zc2ZhZGVQYXJhbXMgJiB7XG4gKiBcdGZhbGxiYWNrPzogKG5vZGU6IEVsZW1lbnQsIHBhcmFtczogaW1wb3J0KCcuL3B1YmxpYycpLkNyb3NzZmFkZVBhcmFtcywgaW50cm86IGJvb2xlYW4pID0+IGltcG9ydCgnLi9wdWJsaWMnKS5UcmFuc2l0aW9uQ29uZmlnO1xuICogfX0gcGFyYW1zXG4gKiBAcmV0dXJucyB7Wyhub2RlOiBhbnksIHBhcmFtczogaW1wb3J0KCcuL3B1YmxpYycpLkNyb3NzZmFkZVBhcmFtcyAmIHsga2V5OiBhbnk7IH0pID0+ICgpID0+IGltcG9ydCgnLi9wdWJsaWMnKS5UcmFuc2l0aW9uQ29uZmlnLCAobm9kZTogYW55LCBwYXJhbXM6IGltcG9ydCgnLi9wdWJsaWMnKS5Dcm9zc2ZhZGVQYXJhbXMgJiB7IGtleTogYW55OyB9KSA9PiAoKSA9PiBpbXBvcnQoJy4vcHVibGljJykuVHJhbnNpdGlvbkNvbmZpZ119XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcm9zc2ZhZGUoeyBmYWxsYmFjaywgLi4uZGVmYXVsdHMgfSkge1xuXHQvKiogQHR5cGUge01hcDxhbnksIEVsZW1lbnQ+fSAqL1xuXHRjb25zdCB0b19yZWNlaXZlID0gbmV3IE1hcCgpO1xuXHQvKiogQHR5cGUge01hcDxhbnksIEVsZW1lbnQ+fSAqL1xuXHRjb25zdCB0b19zZW5kID0gbmV3IE1hcCgpO1xuXHQvKipcblx0ICogQHBhcmFtIHtFbGVtZW50fSBmcm9tX25vZGVcblx0ICogQHBhcmFtIHtFbGVtZW50fSBub2RlXG5cdCAqIEBwYXJhbSB7aW1wb3J0KCcuL3B1YmxpYycpLkNyb3NzZmFkZVBhcmFtc30gcGFyYW1zXG5cdCAqIEByZXR1cm5zIHtpbXBvcnQoJy4vcHVibGljJykuVHJhbnNpdGlvbkNvbmZpZ31cblx0ICovXG5cdGZ1bmN0aW9uIGNyb3NzZmFkZShmcm9tX25vZGUsIG5vZGUsIHBhcmFtcykge1xuXHRcdGNvbnN0IHtcblx0XHRcdGRlbGF5ID0gMCxcblx0XHRcdGR1cmF0aW9uID0gKGQpID0+IE1hdGguc3FydChkKSAqIDMwLFxuXHRcdFx0ZWFzaW5nID0gY3ViaWNPdXRcblx0XHR9ID0gYXNzaWduKGFzc2lnbih7fSwgZGVmYXVsdHMpLCBwYXJhbXMpO1xuXHRcdGNvbnN0IGZyb20gPSBmcm9tX25vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0Y29uc3QgdG8gPSBub2RlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRcdGNvbnN0IGR4ID0gZnJvbS5sZWZ0IC0gdG8ubGVmdDtcblx0XHRjb25zdCBkeSA9IGZyb20udG9wIC0gdG8udG9wO1xuXHRcdGNvbnN0IGR3ID0gZnJvbS53aWR0aCAvIHRvLndpZHRoO1xuXHRcdGNvbnN0IGRoID0gZnJvbS5oZWlnaHQgLyB0by5oZWlnaHQ7XG5cdFx0Y29uc3QgZCA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG5cdFx0Y29uc3Qgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xuXHRcdGNvbnN0IHRyYW5zZm9ybSA9IHN0eWxlLnRyYW5zZm9ybSA9PT0gJ25vbmUnID8gJycgOiBzdHlsZS50cmFuc2Zvcm07XG5cdFx0Y29uc3Qgb3BhY2l0eSA9ICtzdHlsZS5vcGFjaXR5O1xuXHRcdHJldHVybiB7XG5cdFx0XHRkZWxheSxcblx0XHRcdGR1cmF0aW9uOiBpc19mdW5jdGlvbihkdXJhdGlvbikgPyBkdXJhdGlvbihkKSA6IGR1cmF0aW9uLFxuXHRcdFx0ZWFzaW5nLFxuXHRcdFx0Y3NzOiAodCwgdSkgPT4gYFxuXHRcdFx0XHRvcGFjaXR5OiAke3QgKiBvcGFjaXR5fTtcblx0XHRcdFx0dHJhbnNmb3JtLW9yaWdpbjogdG9wIGxlZnQ7XG5cdFx0XHRcdHRyYW5zZm9ybTogJHt0cmFuc2Zvcm19IHRyYW5zbGF0ZSgke3UgKiBkeH1weCwke3UgKiBkeX1weCkgc2NhbGUoJHt0ICsgKDEgLSB0KSAqIGR3fSwgJHtcblx0XHRcdFx0dCArICgxIC0gdCkgKiBkaFxuXHRcdFx0fSk7XG5cdFx0XHRgXG5cdFx0fTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge01hcDxhbnksIEVsZW1lbnQ+fSBpdGVtc1xuXHQgKiBAcGFyYW0ge01hcDxhbnksIEVsZW1lbnQ+fSBjb3VudGVycGFydHNcblx0ICogQHBhcmFtIHtib29sZWFufSBpbnRyb1xuXHQgKiBAcmV0dXJucyB7KG5vZGU6IGFueSwgcGFyYW1zOiBpbXBvcnQoJy4vcHVibGljJykuQ3Jvc3NmYWRlUGFyYW1zICYgeyBrZXk6IGFueTsgfSkgPT4gKCkgPT4gaW1wb3J0KCcuL3B1YmxpYycpLlRyYW5zaXRpb25Db25maWd9XG5cdCAqL1xuXHRmdW5jdGlvbiB0cmFuc2l0aW9uKGl0ZW1zLCBjb3VudGVycGFydHMsIGludHJvKSB7XG5cdFx0cmV0dXJuIChub2RlLCBwYXJhbXMpID0+IHtcblx0XHRcdGl0ZW1zLnNldChwYXJhbXMua2V5LCBub2RlKTtcblx0XHRcdHJldHVybiAoKSA9PiB7XG5cdFx0XHRcdGlmIChjb3VudGVycGFydHMuaGFzKHBhcmFtcy5rZXkpKSB7XG5cdFx0XHRcdFx0Y29uc3Qgb3RoZXJfbm9kZSA9IGNvdW50ZXJwYXJ0cy5nZXQocGFyYW1zLmtleSk7XG5cdFx0XHRcdFx0Y291bnRlcnBhcnRzLmRlbGV0ZShwYXJhbXMua2V5KTtcblx0XHRcdFx0XHRyZXR1cm4gY3Jvc3NmYWRlKG90aGVyX25vZGUsIG5vZGUsIHBhcmFtcyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gaWYgdGhlIG5vZGUgaXMgZGlzYXBwZWFyaW5nIGFsdG9nZXRoZXJcblx0XHRcdFx0Ly8gKGkuZS4gd2Fzbid0IGNsYWltZWQgYnkgdGhlIG90aGVyIGxpc3QpXG5cdFx0XHRcdC8vIHRoZW4gd2UgbmVlZCB0byBzdXBwbHkgYW4gb3V0cm9cblx0XHRcdFx0aXRlbXMuZGVsZXRlKHBhcmFtcy5rZXkpO1xuXHRcdFx0XHRyZXR1cm4gZmFsbGJhY2sgJiYgZmFsbGJhY2sobm9kZSwgcGFyYW1zLCBpbnRybyk7XG5cdFx0XHR9O1xuXHRcdH07XG5cdH1cblx0cmV0dXJuIFt0cmFuc2l0aW9uKHRvX3NlbmQsIHRvX3JlY2VpdmUsIGZhbHNlKSwgdHJhbnNpdGlvbih0b19yZWNlaXZlLCB0b19zZW5kLCB0cnVlKV07XG59XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0aW50ZXJmYWNlIElPcHRpb24ge1xuXHRcdGxhYmVsOiBzdHJpbmc7XG5cdFx0dmFsdWU6IHN0cmluZztcblx0fVxuXG5cdGV4cG9ydCBsZXQgb25DaGFuZ2U6ICh2YWx1ZTogc3RyaW5nIHwgdW5kZWZpbmVkKSA9PiB2b2lkIHwgUHJvbWlzZTx2b2lkPjtcblx0ZXhwb3J0IGxldCBvcHRpb25zOiBJT3B0aW9uW10gPSBbXTtcblx0ZXhwb3J0IGxldCB2YWx1ZTogc3RyaW5nO1xuPC9zY3JpcHQ+XG5cbjxzZWxlY3Rcblx0Y2xhc3M9XCJkcm9wZG93blwiXG5cdG9uOmNoYW5nZT17KGV2ZW50KSA9PiB7XG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdG9uQ2hhbmdlKGV2ZW50LnRhcmdldD8udmFsdWUpO1xuXHR9fVxuXHR7dmFsdWV9XG4+XG5cdHsjZWFjaCBvcHRpb25zIGFzIHsgbGFiZWwsIHZhbHVlIH19XG5cdFx0PG9wdGlvbiB7dmFsdWV9PntsYWJlbH08L29wdGlvbj5cblx0ey9lYWNofVxuPC9zZWxlY3Q+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0ZXhwb3J0IGxldCBuYW1lOiBzdHJpbmc7XG5cdGV4cG9ydCBsZXQgZGVzY3JpcHRpb246IHN0cmluZztcblx0ZXhwb3J0IGxldCBpc0hlYWRpbmc6IGJvb2xlYW4gPSBmYWxzZTtcblx0ZXhwb3J0IGxldCB0eXBlOiAnZHJvcGRvd24nIHwgJ3RvZ2dsZScgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG48L3NjcmlwdD5cblxuPCEtLSBkb3VibGVzIGFzIHNlY3Rpb24gdGl0bGUgdGhhbmtzIHRvIGBzZXR0aW5nLWl0ZW0taGVhZGluZ2AgLS0+XG48ZGl2XG5cdGNsYXNzPVwic2V0dGluZy1pdGVtXCJcblx0Y2xhc3M6c2V0dGluZy1pdGVtLWhlYWRpbmc9e2lzSGVhZGluZ31cblx0Y2xhc3M6bW9kLWRyb3Bkb3duPXt0eXBlID09PSAnZHJvcGRvd24nfVxuPlxuXHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWluZm9cIj5cblx0XHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLW5hbWVcIj5cblx0XHRcdDxkaXY+XG5cdFx0XHRcdHtuYW1lfVxuXHRcdFx0PC9kaXY+XG5cdFx0PC9kaXY+XG5cdFx0eyNpZiBkZXNjcmlwdGlvbn1cblx0XHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIj5cblx0XHRcdFx0e2Rlc2NyaXB0aW9ufVxuXHRcdFx0PC9kaXY+XG5cdFx0ey9pZn1cblx0PC9kaXY+XG5cdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tY29udHJvbFwiPlxuXHRcdDxzbG90IG5hbWU9XCJjb250cm9sXCIgLz5cblx0PC9kaXY+XG48L2Rpdj5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRleHBvcnQgbGV0IGlzRW5hYmxlZDogYm9vbGVhbjtcblx0ZXhwb3J0IGxldCBvbkNoYW5nZTogKHZhbHVlOiBib29sZWFuKSA9PiB2b2lkO1xuPC9zY3JpcHQ+XG5cbjxkaXZcblx0Y2xhc3M9XCJjaGVja2JveC1jb250YWluZXJcIlxuXHRjbGFzczppcy1lbmFibGVkPXtpc0VuYWJsZWR9XG5cdG9uOmNsaWNrPXsoKSA9PiBvbkNoYW5nZSghaXNFbmFibGVkKX1cbi8+XG4iLCAiLyoqXG4gKiBDdXN0b20gcG9zaXRpb25pbmcgcmVmZXJlbmNlIGVsZW1lbnQuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3MvdmlydHVhbC1lbGVtZW50c1xuICovXG5cbmNvbnN0IHNpZGVzID0gWyd0b3AnLCAncmlnaHQnLCAnYm90dG9tJywgJ2xlZnQnXTtcbmNvbnN0IGFsaWdubWVudHMgPSBbJ3N0YXJ0JywgJ2VuZCddO1xuY29uc3QgcGxhY2VtZW50cyA9IC8qI19fUFVSRV9fKi9zaWRlcy5yZWR1Y2UoKGFjYywgc2lkZSkgPT4gYWNjLmNvbmNhdChzaWRlLCBzaWRlICsgXCItXCIgKyBhbGlnbm1lbnRzWzBdLCBzaWRlICsgXCItXCIgKyBhbGlnbm1lbnRzWzFdKSwgW10pO1xuY29uc3QgbWluID0gTWF0aC5taW47XG5jb25zdCBtYXggPSBNYXRoLm1heDtcbmNvbnN0IHJvdW5kID0gTWF0aC5yb3VuZDtcbmNvbnN0IGZsb29yID0gTWF0aC5mbG9vcjtcbmNvbnN0IGNyZWF0ZUNvb3JkcyA9IHYgPT4gKHtcbiAgeDogdixcbiAgeTogdlxufSk7XG5jb25zdCBvcHBvc2l0ZVNpZGVNYXAgPSB7XG4gIGxlZnQ6ICdyaWdodCcsXG4gIHJpZ2h0OiAnbGVmdCcsXG4gIGJvdHRvbTogJ3RvcCcsXG4gIHRvcDogJ2JvdHRvbSdcbn07XG5jb25zdCBvcHBvc2l0ZUFsaWdubWVudE1hcCA9IHtcbiAgc3RhcnQ6ICdlbmQnLFxuICBlbmQ6ICdzdGFydCdcbn07XG5mdW5jdGlvbiBjbGFtcChzdGFydCwgdmFsdWUsIGVuZCkge1xuICByZXR1cm4gbWF4KHN0YXJ0LCBtaW4odmFsdWUsIGVuZCkpO1xufVxuZnVuY3Rpb24gZXZhbHVhdGUodmFsdWUsIHBhcmFtKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicgPyB2YWx1ZShwYXJhbSkgOiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGdldFNpZGUocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQuc3BsaXQoJy0nKVswXTtcbn1cbmZ1bmN0aW9uIGdldEFsaWdubWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdCgnLScpWzFdO1xufVxuZnVuY3Rpb24gZ2V0T3Bwb3NpdGVBeGlzKGF4aXMpIHtcbiAgcmV0dXJuIGF4aXMgPT09ICd4JyA/ICd5JyA6ICd4Jztcbn1cbmZ1bmN0aW9uIGdldEF4aXNMZW5ndGgoYXhpcykge1xuICByZXR1cm4gYXhpcyA9PT0gJ3knID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xufVxuZnVuY3Rpb24gZ2V0U2lkZUF4aXMocGxhY2VtZW50KSB7XG4gIHJldHVybiBbJ3RvcCcsICdib3R0b20nXS5pbmNsdWRlcyhnZXRTaWRlKHBsYWNlbWVudCkpID8gJ3knIDogJ3gnO1xufVxuZnVuY3Rpb24gZ2V0QWxpZ25tZW50QXhpcyhwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIGdldE9wcG9zaXRlQXhpcyhnZXRTaWRlQXhpcyhwbGFjZW1lbnQpKTtcbn1cbmZ1bmN0aW9uIGdldEFsaWdubWVudFNpZGVzKHBsYWNlbWVudCwgcmVjdHMsIHJ0bCkge1xuICBpZiAocnRsID09PSB2b2lkIDApIHtcbiAgICBydGwgPSBmYWxzZTtcbiAgfVxuICBjb25zdCBhbGlnbm1lbnQgPSBnZXRBbGlnbm1lbnQocGxhY2VtZW50KTtcbiAgY29uc3QgYWxpZ25tZW50QXhpcyA9IGdldEFsaWdubWVudEF4aXMocGxhY2VtZW50KTtcbiAgY29uc3QgbGVuZ3RoID0gZ2V0QXhpc0xlbmd0aChhbGlnbm1lbnRBeGlzKTtcbiAgbGV0IG1haW5BbGlnbm1lbnRTaWRlID0gYWxpZ25tZW50QXhpcyA9PT0gJ3gnID8gYWxpZ25tZW50ID09PSAocnRsID8gJ2VuZCcgOiAnc3RhcnQnKSA/ICdyaWdodCcgOiAnbGVmdCcgOiBhbGlnbm1lbnQgPT09ICdzdGFydCcgPyAnYm90dG9tJyA6ICd0b3AnO1xuICBpZiAocmVjdHMucmVmZXJlbmNlW2xlbmd0aF0gPiByZWN0cy5mbG9hdGluZ1tsZW5ndGhdKSB7XG4gICAgbWFpbkFsaWdubWVudFNpZGUgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluQWxpZ25tZW50U2lkZSk7XG4gIH1cbiAgcmV0dXJuIFttYWluQWxpZ25tZW50U2lkZSwgZ2V0T3Bwb3NpdGVQbGFjZW1lbnQobWFpbkFsaWdubWVudFNpZGUpXTtcbn1cbmZ1bmN0aW9uIGdldEV4cGFuZGVkUGxhY2VtZW50cyhwbGFjZW1lbnQpIHtcbiAgY29uc3Qgb3Bwb3NpdGVQbGFjZW1lbnQgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChwbGFjZW1lbnQpO1xuICByZXR1cm4gW2dldE9wcG9zaXRlQWxpZ25tZW50UGxhY2VtZW50KHBsYWNlbWVudCksIG9wcG9zaXRlUGxhY2VtZW50LCBnZXRPcHBvc2l0ZUFsaWdubWVudFBsYWNlbWVudChvcHBvc2l0ZVBsYWNlbWVudCldO1xufVxuZnVuY3Rpb24gZ2V0T3Bwb3NpdGVBbGlnbm1lbnRQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvc3RhcnR8ZW5kL2csIGFsaWdubWVudCA9PiBvcHBvc2l0ZUFsaWdubWVudE1hcFthbGlnbm1lbnRdKTtcbn1cbmZ1bmN0aW9uIGdldFNpZGVMaXN0KHNpZGUsIGlzU3RhcnQsIHJ0bCkge1xuICBjb25zdCBsciA9IFsnbGVmdCcsICdyaWdodCddO1xuICBjb25zdCBybCA9IFsncmlnaHQnLCAnbGVmdCddO1xuICBjb25zdCB0YiA9IFsndG9wJywgJ2JvdHRvbSddO1xuICBjb25zdCBidCA9IFsnYm90dG9tJywgJ3RvcCddO1xuICBzd2l0Y2ggKHNpZGUpIHtcbiAgICBjYXNlICd0b3AnOlxuICAgIGNhc2UgJ2JvdHRvbSc6XG4gICAgICBpZiAocnRsKSByZXR1cm4gaXNTdGFydCA/IHJsIDogbHI7XG4gICAgICByZXR1cm4gaXNTdGFydCA/IGxyIDogcmw7XG4gICAgY2FzZSAnbGVmdCc6XG4gICAgY2FzZSAncmlnaHQnOlxuICAgICAgcmV0dXJuIGlzU3RhcnQgPyB0YiA6IGJ0O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gW107XG4gIH1cbn1cbmZ1bmN0aW9uIGdldE9wcG9zaXRlQXhpc1BsYWNlbWVudHMocGxhY2VtZW50LCBmbGlwQWxpZ25tZW50LCBkaXJlY3Rpb24sIHJ0bCkge1xuICBjb25zdCBhbGlnbm1lbnQgPSBnZXRBbGlnbm1lbnQocGxhY2VtZW50KTtcbiAgbGV0IGxpc3QgPSBnZXRTaWRlTGlzdChnZXRTaWRlKHBsYWNlbWVudCksIGRpcmVjdGlvbiA9PT0gJ3N0YXJ0JywgcnRsKTtcbiAgaWYgKGFsaWdubWVudCkge1xuICAgIGxpc3QgPSBsaXN0Lm1hcChzaWRlID0+IHNpZGUgKyBcIi1cIiArIGFsaWdubWVudCk7XG4gICAgaWYgKGZsaXBBbGlnbm1lbnQpIHtcbiAgICAgIGxpc3QgPSBsaXN0LmNvbmNhdChsaXN0Lm1hcChnZXRPcHBvc2l0ZUFsaWdubWVudFBsYWNlbWVudCkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbGlzdDtcbn1cbmZ1bmN0aW9uIGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnJlcGxhY2UoL2xlZnR8cmlnaHR8Ym90dG9tfHRvcC9nLCBzaWRlID0+IG9wcG9zaXRlU2lkZU1hcFtzaWRlXSk7XG59XG5mdW5jdGlvbiBleHBhbmRQYWRkaW5nT2JqZWN0KHBhZGRpbmcpIHtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IDAsXG4gICAgcmlnaHQ6IDAsXG4gICAgYm90dG9tOiAwLFxuICAgIGxlZnQ6IDAsXG4gICAgLi4ucGFkZGluZ1xuICB9O1xufVxuZnVuY3Rpb24gZ2V0UGFkZGluZ09iamVjdChwYWRkaW5nKSB7XG4gIHJldHVybiB0eXBlb2YgcGFkZGluZyAhPT0gJ251bWJlcicgPyBleHBhbmRQYWRkaW5nT2JqZWN0KHBhZGRpbmcpIDoge1xuICAgIHRvcDogcGFkZGluZyxcbiAgICByaWdodDogcGFkZGluZyxcbiAgICBib3R0b206IHBhZGRpbmcsXG4gICAgbGVmdDogcGFkZGluZ1xuICB9O1xufVxuZnVuY3Rpb24gcmVjdFRvQ2xpZW50UmVjdChyZWN0KSB7XG4gIGNvbnN0IHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH0gPSByZWN0O1xuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB0b3A6IHksXG4gICAgbGVmdDogeCxcbiAgICByaWdodDogeCArIHdpZHRoLFxuICAgIGJvdHRvbTogeSArIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cblxuZXhwb3J0IHsgYWxpZ25tZW50cywgY2xhbXAsIGNyZWF0ZUNvb3JkcywgZXZhbHVhdGUsIGV4cGFuZFBhZGRpbmdPYmplY3QsIGZsb29yLCBnZXRBbGlnbm1lbnQsIGdldEFsaWdubWVudEF4aXMsIGdldEFsaWdubWVudFNpZGVzLCBnZXRBeGlzTGVuZ3RoLCBnZXRFeHBhbmRlZFBsYWNlbWVudHMsIGdldE9wcG9zaXRlQWxpZ25tZW50UGxhY2VtZW50LCBnZXRPcHBvc2l0ZUF4aXMsIGdldE9wcG9zaXRlQXhpc1BsYWNlbWVudHMsIGdldE9wcG9zaXRlUGxhY2VtZW50LCBnZXRQYWRkaW5nT2JqZWN0LCBnZXRTaWRlLCBnZXRTaWRlQXhpcywgbWF4LCBtaW4sIHBsYWNlbWVudHMsIHJlY3RUb0NsaWVudFJlY3QsIHJvdW5kLCBzaWRlcyB9O1xuIiwgImltcG9ydCB7IGdldFNpZGVBeGlzLCBnZXRBbGlnbm1lbnRBeGlzLCBnZXRBeGlzTGVuZ3RoLCBnZXRTaWRlLCBnZXRBbGlnbm1lbnQsIGV2YWx1YXRlLCBnZXRQYWRkaW5nT2JqZWN0LCByZWN0VG9DbGllbnRSZWN0LCBtaW4sIGNsYW1wLCBwbGFjZW1lbnRzLCBnZXRBbGlnbm1lbnRTaWRlcywgZ2V0T3Bwb3NpdGVBbGlnbm1lbnRQbGFjZW1lbnQsIGdldE9wcG9zaXRlUGxhY2VtZW50LCBnZXRFeHBhbmRlZFBsYWNlbWVudHMsIGdldE9wcG9zaXRlQXhpc1BsYWNlbWVudHMsIHNpZGVzLCBtYXgsIGdldE9wcG9zaXRlQXhpcyB9IGZyb20gJ0BmbG9hdGluZy11aS91dGlscyc7XG5leHBvcnQgeyByZWN0VG9DbGllbnRSZWN0IH0gZnJvbSAnQGZsb2F0aW5nLXVpL3V0aWxzJztcblxuZnVuY3Rpb24gY29tcHV0ZUNvb3Jkc0Zyb21QbGFjZW1lbnQoX3JlZiwgcGxhY2VtZW50LCBydGwpIHtcbiAgbGV0IHtcbiAgICByZWZlcmVuY2UsXG4gICAgZmxvYXRpbmdcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IHNpZGVBeGlzID0gZ2V0U2lkZUF4aXMocGxhY2VtZW50KTtcbiAgY29uc3QgYWxpZ25tZW50QXhpcyA9IGdldEFsaWdubWVudEF4aXMocGxhY2VtZW50KTtcbiAgY29uc3QgYWxpZ25MZW5ndGggPSBnZXRBeGlzTGVuZ3RoKGFsaWdubWVudEF4aXMpO1xuICBjb25zdCBzaWRlID0gZ2V0U2lkZShwbGFjZW1lbnQpO1xuICBjb25zdCBpc1ZlcnRpY2FsID0gc2lkZUF4aXMgPT09ICd5JztcbiAgY29uc3QgY29tbW9uWCA9IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoIC8gMiAtIGZsb2F0aW5nLndpZHRoIC8gMjtcbiAgY29uc3QgY29tbW9uWSA9IHJlZmVyZW5jZS55ICsgcmVmZXJlbmNlLmhlaWdodCAvIDIgLSBmbG9hdGluZy5oZWlnaHQgLyAyO1xuICBjb25zdCBjb21tb25BbGlnbiA9IHJlZmVyZW5jZVthbGlnbkxlbmd0aF0gLyAyIC0gZmxvYXRpbmdbYWxpZ25MZW5ndGhdIC8gMjtcbiAgbGV0IGNvb3JkcztcbiAgc3dpdGNoIChzaWRlKSB7XG4gICAgY2FzZSAndG9wJzpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogY29tbW9uWCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnkgLSBmbG9hdGluZy5oZWlnaHRcbiAgICAgIH07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdib3R0b20nOlxuICAgICAgY29vcmRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSArIHJlZmVyZW5jZS5oZWlnaHRcbiAgICAgIH07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdyaWdodCc6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbGVmdCc6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54IC0gZmxvYXRpbmcud2lkdGgsXG4gICAgICAgIHk6IGNvbW1vbllcbiAgICAgIH07XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29vcmRzID0ge1xuICAgICAgICB4OiByZWZlcmVuY2UueCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnlcbiAgICAgIH07XG4gIH1cbiAgc3dpdGNoIChnZXRBbGlnbm1lbnQocGxhY2VtZW50KSkge1xuICAgIGNhc2UgJ3N0YXJ0JzpcbiAgICAgIGNvb3Jkc1thbGlnbm1lbnRBeGlzXSAtPSBjb21tb25BbGlnbiAqIChydGwgJiYgaXNWZXJ0aWNhbCA/IC0xIDogMSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlbmQnOlxuICAgICAgY29vcmRzW2FsaWdubWVudEF4aXNdICs9IGNvbW1vbkFsaWduICogKHJ0bCAmJiBpc1ZlcnRpY2FsID8gLTEgOiAxKTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBjb29yZHM7XG59XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIGB4YCBhbmQgYHlgIGNvb3JkaW5hdGVzIHRoYXQgd2lsbCBwbGFjZSB0aGUgZmxvYXRpbmcgZWxlbWVudFxuICogbmV4dCB0byBhIGdpdmVuIHJlZmVyZW5jZSBlbGVtZW50LlxuICpcbiAqIFRoaXMgZXhwb3J0IGRvZXMgbm90IGhhdmUgYW55IGBwbGF0Zm9ybWAgaW50ZXJmYWNlIGxvZ2ljLiBZb3Ugd2lsbCBuZWVkIHRvXG4gKiB3cml0ZSBvbmUgZm9yIHRoZSBwbGF0Zm9ybSB5b3UgYXJlIHVzaW5nIEZsb2F0aW5nIFVJIHdpdGguXG4gKi9cbmNvbnN0IGNvbXB1dGVQb3NpdGlvbiA9IGFzeW5jIChyZWZlcmVuY2UsIGZsb2F0aW5nLCBjb25maWcpID0+IHtcbiAgY29uc3Qge1xuICAgIHBsYWNlbWVudCA9ICdib3R0b20nLFxuICAgIHN0cmF0ZWd5ID0gJ2Fic29sdXRlJyxcbiAgICBtaWRkbGV3YXJlID0gW10sXG4gICAgcGxhdGZvcm1cbiAgfSA9IGNvbmZpZztcbiAgY29uc3QgdmFsaWRNaWRkbGV3YXJlID0gbWlkZGxld2FyZS5maWx0ZXIoQm9vbGVhbik7XG4gIGNvbnN0IHJ0bCA9IGF3YWl0IChwbGF0Zm9ybS5pc1JUTCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0uaXNSVEwoZmxvYXRpbmcpKTtcbiAgbGV0IHJlY3RzID0gYXdhaXQgcGxhdGZvcm0uZ2V0RWxlbWVudFJlY3RzKHtcbiAgICByZWZlcmVuY2UsXG4gICAgZmxvYXRpbmcsXG4gICAgc3RyYXRlZ3lcbiAgfSk7XG4gIGxldCB7XG4gICAgeCxcbiAgICB5XG4gIH0gPSBjb21wdXRlQ29vcmRzRnJvbVBsYWNlbWVudChyZWN0cywgcGxhY2VtZW50LCBydGwpO1xuICBsZXQgc3RhdGVmdWxQbGFjZW1lbnQgPSBwbGFjZW1lbnQ7XG4gIGxldCBtaWRkbGV3YXJlRGF0YSA9IHt9O1xuICBsZXQgcmVzZXRDb3VudCA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsaWRNaWRkbGV3YXJlLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qge1xuICAgICAgbmFtZSxcbiAgICAgIGZuXG4gICAgfSA9IHZhbGlkTWlkZGxld2FyZVtpXTtcbiAgICBjb25zdCB7XG4gICAgICB4OiBuZXh0WCxcbiAgICAgIHk6IG5leHRZLFxuICAgICAgZGF0YSxcbiAgICAgIHJlc2V0XG4gICAgfSA9IGF3YWl0IGZuKHtcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgaW5pdGlhbFBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgcGxhY2VtZW50OiBzdGF0ZWZ1bFBsYWNlbWVudCxcbiAgICAgIHN0cmF0ZWd5LFxuICAgICAgbWlkZGxld2FyZURhdGEsXG4gICAgICByZWN0cyxcbiAgICAgIHBsYXRmb3JtLFxuICAgICAgZWxlbWVudHM6IHtcbiAgICAgICAgcmVmZXJlbmNlLFxuICAgICAgICBmbG9hdGluZ1xuICAgICAgfVxuICAgIH0pO1xuICAgIHggPSBuZXh0WCAhPSBudWxsID8gbmV4dFggOiB4O1xuICAgIHkgPSBuZXh0WSAhPSBudWxsID8gbmV4dFkgOiB5O1xuICAgIG1pZGRsZXdhcmVEYXRhID0ge1xuICAgICAgLi4ubWlkZGxld2FyZURhdGEsXG4gICAgICBbbmFtZV06IHtcbiAgICAgICAgLi4ubWlkZGxld2FyZURhdGFbbmFtZV0sXG4gICAgICAgIC4uLmRhdGFcbiAgICAgIH1cbiAgICB9O1xuICAgIGlmIChyZXNldCAmJiByZXNldENvdW50IDw9IDUwKSB7XG4gICAgICByZXNldENvdW50Kys7XG4gICAgICBpZiAodHlwZW9mIHJlc2V0ID09PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAocmVzZXQucGxhY2VtZW50KSB7XG4gICAgICAgICAgc3RhdGVmdWxQbGFjZW1lbnQgPSByZXNldC5wbGFjZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc2V0LnJlY3RzKSB7XG4gICAgICAgICAgcmVjdHMgPSByZXNldC5yZWN0cyA9PT0gdHJ1ZSA/IGF3YWl0IHBsYXRmb3JtLmdldEVsZW1lbnRSZWN0cyh7XG4gICAgICAgICAgICByZWZlcmVuY2UsXG4gICAgICAgICAgICBmbG9hdGluZyxcbiAgICAgICAgICAgIHN0cmF0ZWd5XG4gICAgICAgICAgfSkgOiByZXNldC5yZWN0cztcbiAgICAgICAgfVxuICAgICAgICAoe1xuICAgICAgICAgIHgsXG4gICAgICAgICAgeVxuICAgICAgICB9ID0gY29tcHV0ZUNvb3Jkc0Zyb21QbGFjZW1lbnQocmVjdHMsIHN0YXRlZnVsUGxhY2VtZW50LCBydGwpKTtcbiAgICAgIH1cbiAgICAgIGkgPSAtMTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB4LFxuICAgIHksXG4gICAgcGxhY2VtZW50OiBzdGF0ZWZ1bFBsYWNlbWVudCxcbiAgICBzdHJhdGVneSxcbiAgICBtaWRkbGV3YXJlRGF0YVxuICB9O1xufTtcblxuLyoqXG4gKiBSZXNvbHZlcyB3aXRoIGFuIG9iamVjdCBvZiBvdmVyZmxvdyBzaWRlIG9mZnNldHMgdGhhdCBkZXRlcm1pbmUgaG93IG11Y2ggdGhlXG4gKiBlbGVtZW50IGlzIG92ZXJmbG93aW5nIGEgZ2l2ZW4gY2xpcHBpbmcgYm91bmRhcnkgb24gZWFjaCBzaWRlLlxuICogLSBwb3NpdGl2ZSA9IG92ZXJmbG93aW5nIHRoZSBib3VuZGFyeSBieSB0aGF0IG51bWJlciBvZiBwaXhlbHNcbiAqIC0gbmVnYXRpdmUgPSBob3cgbWFueSBwaXhlbHMgbGVmdCBiZWZvcmUgaXQgd2lsbCBvdmVyZmxvd1xuICogLSAwID0gbGllcyBmbHVzaCB3aXRoIHRoZSBib3VuZGFyeVxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2RldGVjdE92ZXJmbG93XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGRldGVjdE92ZXJmbG93KHN0YXRlLCBvcHRpb25zKSB7XG4gIHZhciBfYXdhaXQkcGxhdGZvcm0kaXNFbGU7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgY29uc3Qge1xuICAgIHgsXG4gICAgeSxcbiAgICBwbGF0Zm9ybSxcbiAgICByZWN0cyxcbiAgICBlbGVtZW50cyxcbiAgICBzdHJhdGVneVxuICB9ID0gc3RhdGU7XG4gIGNvbnN0IHtcbiAgICBib3VuZGFyeSA9ICdjbGlwcGluZ0FuY2VzdG9ycycsXG4gICAgcm9vdEJvdW5kYXJ5ID0gJ3ZpZXdwb3J0JyxcbiAgICBlbGVtZW50Q29udGV4dCA9ICdmbG9hdGluZycsXG4gICAgYWx0Qm91bmRhcnkgPSBmYWxzZSxcbiAgICBwYWRkaW5nID0gMFxuICB9ID0gZXZhbHVhdGUob3B0aW9ucywgc3RhdGUpO1xuICBjb25zdCBwYWRkaW5nT2JqZWN0ID0gZ2V0UGFkZGluZ09iamVjdChwYWRkaW5nKTtcbiAgY29uc3QgYWx0Q29udGV4dCA9IGVsZW1lbnRDb250ZXh0ID09PSAnZmxvYXRpbmcnID8gJ3JlZmVyZW5jZScgOiAnZmxvYXRpbmcnO1xuICBjb25zdCBlbGVtZW50ID0gZWxlbWVudHNbYWx0Qm91bmRhcnkgPyBhbHRDb250ZXh0IDogZWxlbWVudENvbnRleHRdO1xuICBjb25zdCBjbGlwcGluZ0NsaWVudFJlY3QgPSByZWN0VG9DbGllbnRSZWN0KGF3YWl0IHBsYXRmb3JtLmdldENsaXBwaW5nUmVjdCh7XG4gICAgZWxlbWVudDogKChfYXdhaXQkcGxhdGZvcm0kaXNFbGUgPSBhd2FpdCAocGxhdGZvcm0uaXNFbGVtZW50ID09IG51bGwgPyB2b2lkIDAgOiBwbGF0Zm9ybS5pc0VsZW1lbnQoZWxlbWVudCkpKSAhPSBudWxsID8gX2F3YWl0JHBsYXRmb3JtJGlzRWxlIDogdHJ1ZSkgPyBlbGVtZW50IDogZWxlbWVudC5jb250ZXh0RWxlbWVudCB8fCAoYXdhaXQgKHBsYXRmb3JtLmdldERvY3VtZW50RWxlbWVudCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0uZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnRzLmZsb2F0aW5nKSkpLFxuICAgIGJvdW5kYXJ5LFxuICAgIHJvb3RCb3VuZGFyeSxcbiAgICBzdHJhdGVneVxuICB9KSk7XG4gIGNvbnN0IHJlY3QgPSBlbGVtZW50Q29udGV4dCA9PT0gJ2Zsb2F0aW5nJyA/IHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGg6IHJlY3RzLmZsb2F0aW5nLndpZHRoLFxuICAgIGhlaWdodDogcmVjdHMuZmxvYXRpbmcuaGVpZ2h0XG4gIH0gOiByZWN0cy5yZWZlcmVuY2U7XG4gIGNvbnN0IG9mZnNldFBhcmVudCA9IGF3YWl0IChwbGF0Zm9ybS5nZXRPZmZzZXRQYXJlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtLmdldE9mZnNldFBhcmVudChlbGVtZW50cy5mbG9hdGluZykpO1xuICBjb25zdCBvZmZzZXRTY2FsZSA9IChhd2FpdCAocGxhdGZvcm0uaXNFbGVtZW50ID09IG51bGwgPyB2b2lkIDAgOiBwbGF0Zm9ybS5pc0VsZW1lbnQob2Zmc2V0UGFyZW50KSkpID8gKGF3YWl0IChwbGF0Zm9ybS5nZXRTY2FsZSA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0uZ2V0U2NhbGUob2Zmc2V0UGFyZW50KSkpIHx8IHtcbiAgICB4OiAxLFxuICAgIHk6IDFcbiAgfSA6IHtcbiAgICB4OiAxLFxuICAgIHk6IDFcbiAgfTtcbiAgY29uc3QgZWxlbWVudENsaWVudFJlY3QgPSByZWN0VG9DbGllbnRSZWN0KHBsYXRmb3JtLmNvbnZlcnRPZmZzZXRQYXJlbnRSZWxhdGl2ZVJlY3RUb1ZpZXdwb3J0UmVsYXRpdmVSZWN0ID8gYXdhaXQgcGxhdGZvcm0uY29udmVydE9mZnNldFBhcmVudFJlbGF0aXZlUmVjdFRvVmlld3BvcnRSZWxhdGl2ZVJlY3Qoe1xuICAgIGVsZW1lbnRzLFxuICAgIHJlY3QsXG4gICAgb2Zmc2V0UGFyZW50LFxuICAgIHN0cmF0ZWd5XG4gIH0pIDogcmVjdCk7XG4gIHJldHVybiB7XG4gICAgdG9wOiAoY2xpcHBpbmdDbGllbnRSZWN0LnRvcCAtIGVsZW1lbnRDbGllbnRSZWN0LnRvcCArIHBhZGRpbmdPYmplY3QudG9wKSAvIG9mZnNldFNjYWxlLnksXG4gICAgYm90dG9tOiAoZWxlbWVudENsaWVudFJlY3QuYm90dG9tIC0gY2xpcHBpbmdDbGllbnRSZWN0LmJvdHRvbSArIHBhZGRpbmdPYmplY3QuYm90dG9tKSAvIG9mZnNldFNjYWxlLnksXG4gICAgbGVmdDogKGNsaXBwaW5nQ2xpZW50UmVjdC5sZWZ0IC0gZWxlbWVudENsaWVudFJlY3QubGVmdCArIHBhZGRpbmdPYmplY3QubGVmdCkgLyBvZmZzZXRTY2FsZS54LFxuICAgIHJpZ2h0OiAoZWxlbWVudENsaWVudFJlY3QucmlnaHQgLSBjbGlwcGluZ0NsaWVudFJlY3QucmlnaHQgKyBwYWRkaW5nT2JqZWN0LnJpZ2h0KSAvIG9mZnNldFNjYWxlLnhcbiAgfTtcbn1cblxuLyoqXG4gKiBQcm92aWRlcyBkYXRhIHRvIHBvc2l0aW9uIGFuIGlubmVyIGVsZW1lbnQgb2YgdGhlIGZsb2F0aW5nIGVsZW1lbnQgc28gdGhhdCBpdFxuICogYXBwZWFycyBjZW50ZXJlZCB0byB0aGUgcmVmZXJlbmNlIGVsZW1lbnQuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3MvYXJyb3dcbiAqL1xuY29uc3QgYXJyb3cgPSBvcHRpb25zID0+ICh7XG4gIG5hbWU6ICdhcnJvdycsXG4gIG9wdGlvbnMsXG4gIGFzeW5jIGZuKHN0YXRlKSB7XG4gICAgY29uc3Qge1xuICAgICAgeCxcbiAgICAgIHksXG4gICAgICBwbGFjZW1lbnQsXG4gICAgICByZWN0cyxcbiAgICAgIHBsYXRmb3JtLFxuICAgICAgZWxlbWVudHMsXG4gICAgICBtaWRkbGV3YXJlRGF0YVxuICAgIH0gPSBzdGF0ZTtcbiAgICAvLyBTaW5jZSBgZWxlbWVudGAgaXMgcmVxdWlyZWQsIHdlIGRvbid0IFBhcnRpYWw8PiB0aGUgdHlwZS5cbiAgICBjb25zdCB7XG4gICAgICBlbGVtZW50LFxuICAgICAgcGFkZGluZyA9IDBcbiAgICB9ID0gZXZhbHVhdGUob3B0aW9ucywgc3RhdGUpIHx8IHt9O1xuICAgIGlmIChlbGVtZW50ID09IG51bGwpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgY29uc3QgcGFkZGluZ09iamVjdCA9IGdldFBhZGRpbmdPYmplY3QocGFkZGluZyk7XG4gICAgY29uc3QgY29vcmRzID0ge1xuICAgICAgeCxcbiAgICAgIHlcbiAgICB9O1xuICAgIGNvbnN0IGF4aXMgPSBnZXRBbGlnbm1lbnRBeGlzKHBsYWNlbWVudCk7XG4gICAgY29uc3QgbGVuZ3RoID0gZ2V0QXhpc0xlbmd0aChheGlzKTtcbiAgICBjb25zdCBhcnJvd0RpbWVuc2lvbnMgPSBhd2FpdCBwbGF0Zm9ybS5nZXREaW1lbnNpb25zKGVsZW1lbnQpO1xuICAgIGNvbnN0IGlzWUF4aXMgPSBheGlzID09PSAneSc7XG4gICAgY29uc3QgbWluUHJvcCA9IGlzWUF4aXMgPyAndG9wJyA6ICdsZWZ0JztcbiAgICBjb25zdCBtYXhQcm9wID0gaXNZQXhpcyA/ICdib3R0b20nIDogJ3JpZ2h0JztcbiAgICBjb25zdCBjbGllbnRQcm9wID0gaXNZQXhpcyA/ICdjbGllbnRIZWlnaHQnIDogJ2NsaWVudFdpZHRoJztcbiAgICBjb25zdCBlbmREaWZmID0gcmVjdHMucmVmZXJlbmNlW2xlbmd0aF0gKyByZWN0cy5yZWZlcmVuY2VbYXhpc10gLSBjb29yZHNbYXhpc10gLSByZWN0cy5mbG9hdGluZ1tsZW5ndGhdO1xuICAgIGNvbnN0IHN0YXJ0RGlmZiA9IGNvb3Jkc1theGlzXSAtIHJlY3RzLnJlZmVyZW5jZVtheGlzXTtcbiAgICBjb25zdCBhcnJvd09mZnNldFBhcmVudCA9IGF3YWl0IChwbGF0Zm9ybS5nZXRPZmZzZXRQYXJlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtLmdldE9mZnNldFBhcmVudChlbGVtZW50KSk7XG4gICAgbGV0IGNsaWVudFNpemUgPSBhcnJvd09mZnNldFBhcmVudCA/IGFycm93T2Zmc2V0UGFyZW50W2NsaWVudFByb3BdIDogMDtcblxuICAgIC8vIERPTSBwbGF0Zm9ybSBjYW4gcmV0dXJuIGB3aW5kb3dgIGFzIHRoZSBgb2Zmc2V0UGFyZW50YC5cbiAgICBpZiAoIWNsaWVudFNpemUgfHwgIShhd2FpdCAocGxhdGZvcm0uaXNFbGVtZW50ID09IG51bGwgPyB2b2lkIDAgOiBwbGF0Zm9ybS5pc0VsZW1lbnQoYXJyb3dPZmZzZXRQYXJlbnQpKSkpIHtcbiAgICAgIGNsaWVudFNpemUgPSBlbGVtZW50cy5mbG9hdGluZ1tjbGllbnRQcm9wXSB8fCByZWN0cy5mbG9hdGluZ1tsZW5ndGhdO1xuICAgIH1cbiAgICBjb25zdCBjZW50ZXJUb1JlZmVyZW5jZSA9IGVuZERpZmYgLyAyIC0gc3RhcnREaWZmIC8gMjtcblxuICAgIC8vIElmIHRoZSBwYWRkaW5nIGlzIGxhcmdlIGVub3VnaCB0aGF0IGl0IGNhdXNlcyB0aGUgYXJyb3cgdG8gbm8gbG9uZ2VyIGJlXG4gICAgLy8gY2VudGVyZWQsIG1vZGlmeSB0aGUgcGFkZGluZyBzbyB0aGF0IGl0IGlzIGNlbnRlcmVkLlxuICAgIGNvbnN0IGxhcmdlc3RQb3NzaWJsZVBhZGRpbmcgPSBjbGllbnRTaXplIC8gMiAtIGFycm93RGltZW5zaW9uc1tsZW5ndGhdIC8gMiAtIDE7XG4gICAgY29uc3QgbWluUGFkZGluZyA9IG1pbihwYWRkaW5nT2JqZWN0W21pblByb3BdLCBsYXJnZXN0UG9zc2libGVQYWRkaW5nKTtcbiAgICBjb25zdCBtYXhQYWRkaW5nID0gbWluKHBhZGRpbmdPYmplY3RbbWF4UHJvcF0sIGxhcmdlc3RQb3NzaWJsZVBhZGRpbmcpO1xuXG4gICAgLy8gTWFrZSBzdXJlIHRoZSBhcnJvdyBkb2Vzbid0IG92ZXJmbG93IHRoZSBmbG9hdGluZyBlbGVtZW50IGlmIHRoZSBjZW50ZXJcbiAgICAvLyBwb2ludCBpcyBvdXRzaWRlIHRoZSBmbG9hdGluZyBlbGVtZW50J3MgYm91bmRzLlxuICAgIGNvbnN0IG1pbiQxID0gbWluUGFkZGluZztcbiAgICBjb25zdCBtYXggPSBjbGllbnRTaXplIC0gYXJyb3dEaW1lbnNpb25zW2xlbmd0aF0gLSBtYXhQYWRkaW5nO1xuICAgIGNvbnN0IGNlbnRlciA9IGNsaWVudFNpemUgLyAyIC0gYXJyb3dEaW1lbnNpb25zW2xlbmd0aF0gLyAyICsgY2VudGVyVG9SZWZlcmVuY2U7XG4gICAgY29uc3Qgb2Zmc2V0ID0gY2xhbXAobWluJDEsIGNlbnRlciwgbWF4KTtcblxuICAgIC8vIElmIHRoZSByZWZlcmVuY2UgaXMgc21hbGwgZW5vdWdoIHRoYXQgdGhlIGFycm93J3MgcGFkZGluZyBjYXVzZXMgaXQgdG9cbiAgICAvLyB0byBwb2ludCB0byBub3RoaW5nIGZvciBhbiBhbGlnbmVkIHBsYWNlbWVudCwgYWRqdXN0IHRoZSBvZmZzZXQgb2YgdGhlXG4gICAgLy8gZmxvYXRpbmcgZWxlbWVudCBpdHNlbGYuIFRvIGVuc3VyZSBgc2hpZnQoKWAgY29udGludWVzIHRvIHRha2UgYWN0aW9uLFxuICAgIC8vIGEgc2luZ2xlIHJlc2V0IGlzIHBlcmZvcm1lZCB3aGVuIHRoaXMgaXMgdHJ1ZS5cbiAgICBjb25zdCBzaG91bGRBZGRPZmZzZXQgPSAhbWlkZGxld2FyZURhdGEuYXJyb3cgJiYgZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkgIT0gbnVsbCAmJiBjZW50ZXIgIT09IG9mZnNldCAmJiByZWN0cy5yZWZlcmVuY2VbbGVuZ3RoXSAvIDIgLSAoY2VudGVyIDwgbWluJDEgPyBtaW5QYWRkaW5nIDogbWF4UGFkZGluZykgLSBhcnJvd0RpbWVuc2lvbnNbbGVuZ3RoXSAvIDIgPCAwO1xuICAgIGNvbnN0IGFsaWdubWVudE9mZnNldCA9IHNob3VsZEFkZE9mZnNldCA/IGNlbnRlciA8IG1pbiQxID8gY2VudGVyIC0gbWluJDEgOiBjZW50ZXIgLSBtYXggOiAwO1xuICAgIHJldHVybiB7XG4gICAgICBbYXhpc106IGNvb3Jkc1theGlzXSArIGFsaWdubWVudE9mZnNldCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgW2F4aXNdOiBvZmZzZXQsXG4gICAgICAgIGNlbnRlck9mZnNldDogY2VudGVyIC0gb2Zmc2V0IC0gYWxpZ25tZW50T2Zmc2V0LFxuICAgICAgICAuLi4oc2hvdWxkQWRkT2Zmc2V0ICYmIHtcbiAgICAgICAgICBhbGlnbm1lbnRPZmZzZXRcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZXNldDogc2hvdWxkQWRkT2Zmc2V0XG4gICAgfTtcbiAgfVxufSk7XG5cbmZ1bmN0aW9uIGdldFBsYWNlbWVudExpc3QoYWxpZ25tZW50LCBhdXRvQWxpZ25tZW50LCBhbGxvd2VkUGxhY2VtZW50cykge1xuICBjb25zdCBhbGxvd2VkUGxhY2VtZW50c1NvcnRlZEJ5QWxpZ25tZW50ID0gYWxpZ25tZW50ID8gWy4uLmFsbG93ZWRQbGFjZW1lbnRzLmZpbHRlcihwbGFjZW1lbnQgPT4gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkgPT09IGFsaWdubWVudCksIC4uLmFsbG93ZWRQbGFjZW1lbnRzLmZpbHRlcihwbGFjZW1lbnQgPT4gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkgIT09IGFsaWdubWVudCldIDogYWxsb3dlZFBsYWNlbWVudHMuZmlsdGVyKHBsYWNlbWVudCA9PiBnZXRTaWRlKHBsYWNlbWVudCkgPT09IHBsYWNlbWVudCk7XG4gIHJldHVybiBhbGxvd2VkUGxhY2VtZW50c1NvcnRlZEJ5QWxpZ25tZW50LmZpbHRlcihwbGFjZW1lbnQgPT4ge1xuICAgIGlmIChhbGlnbm1lbnQpIHtcbiAgICAgIHJldHVybiBnZXRBbGlnbm1lbnQocGxhY2VtZW50KSA9PT0gYWxpZ25tZW50IHx8IChhdXRvQWxpZ25tZW50ID8gZ2V0T3Bwb3NpdGVBbGlnbm1lbnRQbGFjZW1lbnQocGxhY2VtZW50KSAhPT0gcGxhY2VtZW50IDogZmFsc2UpO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSk7XG59XG4vKipcbiAqIE9wdGltaXplcyB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgZmxvYXRpbmcgZWxlbWVudCBieSBjaG9vc2luZyB0aGUgcGxhY2VtZW50XG4gKiB0aGF0IGhhcyB0aGUgbW9zdCBzcGFjZSBhdmFpbGFibGUgYXV0b21hdGljYWxseSwgd2l0aG91dCBuZWVkaW5nIHRvIHNwZWNpZnkgYVxuICogcHJlZmVycmVkIHBsYWNlbWVudC4gQWx0ZXJuYXRpdmUgdG8gYGZsaXBgLlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2F1dG9QbGFjZW1lbnRcbiAqL1xuY29uc3QgYXV0b1BsYWNlbWVudCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnYXV0b1BsYWNlbWVudCcsXG4gICAgb3B0aW9ucyxcbiAgICBhc3luYyBmbihzdGF0ZSkge1xuICAgICAgdmFyIF9taWRkbGV3YXJlRGF0YSRhdXRvUCwgX21pZGRsZXdhcmVEYXRhJGF1dG9QMiwgX3BsYWNlbWVudHNUaGF0Rml0T25FO1xuICAgICAgY29uc3Qge1xuICAgICAgICByZWN0cyxcbiAgICAgICAgbWlkZGxld2FyZURhdGEsXG4gICAgICAgIHBsYWNlbWVudCxcbiAgICAgICAgcGxhdGZvcm0sXG4gICAgICAgIGVsZW1lbnRzXG4gICAgICB9ID0gc3RhdGU7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNyb3NzQXhpcyA9IGZhbHNlLFxuICAgICAgICBhbGlnbm1lbnQsXG4gICAgICAgIGFsbG93ZWRQbGFjZW1lbnRzID0gcGxhY2VtZW50cyxcbiAgICAgICAgYXV0b0FsaWdubWVudCA9IHRydWUsXG4gICAgICAgIC4uLmRldGVjdE92ZXJmbG93T3B0aW9uc1xuICAgICAgfSA9IGV2YWx1YXRlKG9wdGlvbnMsIHN0YXRlKTtcbiAgICAgIGNvbnN0IHBsYWNlbWVudHMkMSA9IGFsaWdubWVudCAhPT0gdW5kZWZpbmVkIHx8IGFsbG93ZWRQbGFjZW1lbnRzID09PSBwbGFjZW1lbnRzID8gZ2V0UGxhY2VtZW50TGlzdChhbGlnbm1lbnQgfHwgbnVsbCwgYXV0b0FsaWdubWVudCwgYWxsb3dlZFBsYWNlbWVudHMpIDogYWxsb3dlZFBsYWNlbWVudHM7XG4gICAgICBjb25zdCBvdmVyZmxvdyA9IGF3YWl0IGRldGVjdE92ZXJmbG93KHN0YXRlLCBkZXRlY3RPdmVyZmxvd09wdGlvbnMpO1xuICAgICAgY29uc3QgY3VycmVudEluZGV4ID0gKChfbWlkZGxld2FyZURhdGEkYXV0b1AgPSBtaWRkbGV3YXJlRGF0YS5hdXRvUGxhY2VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX21pZGRsZXdhcmVEYXRhJGF1dG9QLmluZGV4KSB8fCAwO1xuICAgICAgY29uc3QgY3VycmVudFBsYWNlbWVudCA9IHBsYWNlbWVudHMkMVtjdXJyZW50SW5kZXhdO1xuICAgICAgaWYgKGN1cnJlbnRQbGFjZW1lbnQgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgICB9XG4gICAgICBjb25zdCBhbGlnbm1lbnRTaWRlcyA9IGdldEFsaWdubWVudFNpZGVzKGN1cnJlbnRQbGFjZW1lbnQsIHJlY3RzLCBhd2FpdCAocGxhdGZvcm0uaXNSVEwgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtLmlzUlRMKGVsZW1lbnRzLmZsb2F0aW5nKSkpO1xuXG4gICAgICAvLyBNYWtlIGBjb21wdXRlQ29vcmRzYCBzdGFydCBmcm9tIHRoZSByaWdodCBwbGFjZS5cbiAgICAgIGlmIChwbGFjZW1lbnQgIT09IGN1cnJlbnRQbGFjZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICByZXNldDoge1xuICAgICAgICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnRzJDFbMF1cbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBjb25zdCBjdXJyZW50T3ZlcmZsb3dzID0gW292ZXJmbG93W2dldFNpZGUoY3VycmVudFBsYWNlbWVudCldLCBvdmVyZmxvd1thbGlnbm1lbnRTaWRlc1swXV0sIG92ZXJmbG93W2FsaWdubWVudFNpZGVzWzFdXV07XG4gICAgICBjb25zdCBhbGxPdmVyZmxvd3MgPSBbLi4uKCgoX21pZGRsZXdhcmVEYXRhJGF1dG9QMiA9IG1pZGRsZXdhcmVEYXRhLmF1dG9QbGFjZW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfbWlkZGxld2FyZURhdGEkYXV0b1AyLm92ZXJmbG93cykgfHwgW10pLCB7XG4gICAgICAgIHBsYWNlbWVudDogY3VycmVudFBsYWNlbWVudCxcbiAgICAgICAgb3ZlcmZsb3dzOiBjdXJyZW50T3ZlcmZsb3dzXG4gICAgICB9XTtcbiAgICAgIGNvbnN0IG5leHRQbGFjZW1lbnQgPSBwbGFjZW1lbnRzJDFbY3VycmVudEluZGV4ICsgMV07XG5cbiAgICAgIC8vIFRoZXJlIGFyZSBtb3JlIHBsYWNlbWVudHMgdG8gY2hlY2suXG4gICAgICBpZiAobmV4dFBsYWNlbWVudCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGluZGV4OiBjdXJyZW50SW5kZXggKyAxLFxuICAgICAgICAgICAgb3ZlcmZsb3dzOiBhbGxPdmVyZmxvd3NcbiAgICAgICAgICB9LFxuICAgICAgICAgIHJlc2V0OiB7XG4gICAgICAgICAgICBwbGFjZW1lbnQ6IG5leHRQbGFjZW1lbnRcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBjb25zdCBwbGFjZW1lbnRzU29ydGVkQnlNb3N0U3BhY2UgPSBhbGxPdmVyZmxvd3MubWFwKGQgPT4ge1xuICAgICAgICBjb25zdCBhbGlnbm1lbnQgPSBnZXRBbGlnbm1lbnQoZC5wbGFjZW1lbnQpO1xuICAgICAgICByZXR1cm4gW2QucGxhY2VtZW50LCBhbGlnbm1lbnQgJiYgY3Jvc3NBeGlzID9cbiAgICAgICAgLy8gQ2hlY2sgYWxvbmcgdGhlIG1haW5BeGlzIGFuZCBtYWluIGNyb3NzQXhpcyBzaWRlLlxuICAgICAgICBkLm92ZXJmbG93cy5zbGljZSgwLCAyKS5yZWR1Y2UoKGFjYywgdikgPT4gYWNjICsgdiwgMCkgOlxuICAgICAgICAvLyBDaGVjayBvbmx5IHRoZSBtYWluQXhpcy5cbiAgICAgICAgZC5vdmVyZmxvd3NbMF0sIGQub3ZlcmZsb3dzXTtcbiAgICAgIH0pLnNvcnQoKGEsIGIpID0+IGFbMV0gLSBiWzFdKTtcbiAgICAgIGNvbnN0IHBsYWNlbWVudHNUaGF0Rml0T25FYWNoU2lkZSA9IHBsYWNlbWVudHNTb3J0ZWRCeU1vc3RTcGFjZS5maWx0ZXIoZCA9PiBkWzJdLnNsaWNlKDAsXG4gICAgICAvLyBBbGlnbmVkIHBsYWNlbWVudHMgc2hvdWxkIG5vdCBjaGVjayB0aGVpciBvcHBvc2l0ZSBjcm9zc0F4aXNcbiAgICAgIC8vIHNpZGUuXG4gICAgICBnZXRBbGlnbm1lbnQoZFswXSkgPyAyIDogMykuZXZlcnkodiA9PiB2IDw9IDApKTtcbiAgICAgIGNvbnN0IHJlc2V0UGxhY2VtZW50ID0gKChfcGxhY2VtZW50c1RoYXRGaXRPbkUgPSBwbGFjZW1lbnRzVGhhdEZpdE9uRWFjaFNpZGVbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfcGxhY2VtZW50c1RoYXRGaXRPbkVbMF0pIHx8IHBsYWNlbWVudHNTb3J0ZWRCeU1vc3RTcGFjZVswXVswXTtcbiAgICAgIGlmIChyZXNldFBsYWNlbWVudCAhPT0gcGxhY2VtZW50KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgaW5kZXg6IGN1cnJlbnRJbmRleCArIDEsXG4gICAgICAgICAgICBvdmVyZmxvd3M6IGFsbE92ZXJmbG93c1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcmVzZXQ6IHtcbiAgICAgICAgICAgIHBsYWNlbWVudDogcmVzZXRQbGFjZW1lbnRcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuICB9O1xufTtcblxuLyoqXG4gKiBPcHRpbWl6ZXMgdGhlIHZpc2liaWxpdHkgb2YgdGhlIGZsb2F0aW5nIGVsZW1lbnQgYnkgZmxpcHBpbmcgdGhlIGBwbGFjZW1lbnRgXG4gKiBpbiBvcmRlciB0byBrZWVwIGl0IGluIHZpZXcgd2hlbiB0aGUgcHJlZmVycmVkIHBsYWNlbWVudChzKSB3aWxsIG92ZXJmbG93IHRoZVxuICogY2xpcHBpbmcgYm91bmRhcnkuIEFsdGVybmF0aXZlIHRvIGBhdXRvUGxhY2VtZW50YC5cbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9mbGlwXG4gKi9cbmNvbnN0IGZsaXAgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHJldHVybiB7XG4gICAgbmFtZTogJ2ZsaXAnLFxuICAgIG9wdGlvbnMsXG4gICAgYXN5bmMgZm4oc3RhdGUpIHtcbiAgICAgIHZhciBfbWlkZGxld2FyZURhdGEkYXJyb3csIF9taWRkbGV3YXJlRGF0YSRmbGlwO1xuICAgICAgY29uc3Qge1xuICAgICAgICBwbGFjZW1lbnQsXG4gICAgICAgIG1pZGRsZXdhcmVEYXRhLFxuICAgICAgICByZWN0cyxcbiAgICAgICAgaW5pdGlhbFBsYWNlbWVudCxcbiAgICAgICAgcGxhdGZvcm0sXG4gICAgICAgIGVsZW1lbnRzXG4gICAgICB9ID0gc3RhdGU7XG4gICAgICBjb25zdCB7XG4gICAgICAgIG1haW5BeGlzOiBjaGVja01haW5BeGlzID0gdHJ1ZSxcbiAgICAgICAgY3Jvc3NBeGlzOiBjaGVja0Nyb3NzQXhpcyA9IHRydWUsXG4gICAgICAgIGZhbGxiYWNrUGxhY2VtZW50czogc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzLFxuICAgICAgICBmYWxsYmFja1N0cmF0ZWd5ID0gJ2Jlc3RGaXQnLFxuICAgICAgICBmYWxsYmFja0F4aXNTaWRlRGlyZWN0aW9uID0gJ25vbmUnLFxuICAgICAgICBmbGlwQWxpZ25tZW50ID0gdHJ1ZSxcbiAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zXG4gICAgICB9ID0gZXZhbHVhdGUob3B0aW9ucywgc3RhdGUpO1xuXG4gICAgICAvLyBJZiBhIHJlc2V0IGJ5IHRoZSBhcnJvdyB3YXMgY2F1c2VkIGR1ZSB0byBhbiBhbGlnbm1lbnQgb2Zmc2V0IGJlaW5nXG4gICAgICAvLyBhZGRlZCwgd2Ugc2hvdWxkIHNraXAgYW55IGxvZ2ljIG5vdyBzaW5jZSBgZmxpcCgpYCBoYXMgYWxyZWFkeSBkb25lIGl0c1xuICAgICAgLy8gd29yay5cbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9mbG9hdGluZy11aS9mbG9hdGluZy11aS9pc3N1ZXMvMjU0OSNpc3N1ZWNvbW1lbnQtMTcxOTYwMTY0M1xuICAgICAgaWYgKChfbWlkZGxld2FyZURhdGEkYXJyb3cgPSBtaWRkbGV3YXJlRGF0YS5hcnJvdykgIT0gbnVsbCAmJiBfbWlkZGxld2FyZURhdGEkYXJyb3cuYWxpZ25tZW50T2Zmc2V0KSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHNpZGUgPSBnZXRTaWRlKHBsYWNlbWVudCk7XG4gICAgICBjb25zdCBpbml0aWFsU2lkZUF4aXMgPSBnZXRTaWRlQXhpcyhpbml0aWFsUGxhY2VtZW50KTtcbiAgICAgIGNvbnN0IGlzQmFzZVBsYWNlbWVudCA9IGdldFNpZGUoaW5pdGlhbFBsYWNlbWVudCkgPT09IGluaXRpYWxQbGFjZW1lbnQ7XG4gICAgICBjb25zdCBydGwgPSBhd2FpdCAocGxhdGZvcm0uaXNSVEwgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtLmlzUlRMKGVsZW1lbnRzLmZsb2F0aW5nKSk7XG4gICAgICBjb25zdCBmYWxsYmFja1BsYWNlbWVudHMgPSBzcGVjaWZpZWRGYWxsYmFja1BsYWNlbWVudHMgfHwgKGlzQmFzZVBsYWNlbWVudCB8fCAhZmxpcEFsaWdubWVudCA/IFtnZXRPcHBvc2l0ZVBsYWNlbWVudChpbml0aWFsUGxhY2VtZW50KV0gOiBnZXRFeHBhbmRlZFBsYWNlbWVudHMoaW5pdGlhbFBsYWNlbWVudCkpO1xuICAgICAgY29uc3QgaGFzRmFsbGJhY2tBeGlzU2lkZURpcmVjdGlvbiA9IGZhbGxiYWNrQXhpc1NpZGVEaXJlY3Rpb24gIT09ICdub25lJztcbiAgICAgIGlmICghc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzICYmIGhhc0ZhbGxiYWNrQXhpc1NpZGVEaXJlY3Rpb24pIHtcbiAgICAgICAgZmFsbGJhY2tQbGFjZW1lbnRzLnB1c2goLi4uZ2V0T3Bwb3NpdGVBeGlzUGxhY2VtZW50cyhpbml0aWFsUGxhY2VtZW50LCBmbGlwQWxpZ25tZW50LCBmYWxsYmFja0F4aXNTaWRlRGlyZWN0aW9uLCBydGwpKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHBsYWNlbWVudHMgPSBbaW5pdGlhbFBsYWNlbWVudCwgLi4uZmFsbGJhY2tQbGFjZW1lbnRzXTtcbiAgICAgIGNvbnN0IG92ZXJmbG93ID0gYXdhaXQgZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIGRldGVjdE92ZXJmbG93T3B0aW9ucyk7XG4gICAgICBjb25zdCBvdmVyZmxvd3MgPSBbXTtcbiAgICAgIGxldCBvdmVyZmxvd3NEYXRhID0gKChfbWlkZGxld2FyZURhdGEkZmxpcCA9IG1pZGRsZXdhcmVEYXRhLmZsaXApID09IG51bGwgPyB2b2lkIDAgOiBfbWlkZGxld2FyZURhdGEkZmxpcC5vdmVyZmxvd3MpIHx8IFtdO1xuICAgICAgaWYgKGNoZWNrTWFpbkF4aXMpIHtcbiAgICAgICAgb3ZlcmZsb3dzLnB1c2gob3ZlcmZsb3dbc2lkZV0pO1xuICAgICAgfVxuICAgICAgaWYgKGNoZWNrQ3Jvc3NBeGlzKSB7XG4gICAgICAgIGNvbnN0IHNpZGVzID0gZ2V0QWxpZ25tZW50U2lkZXMocGxhY2VtZW50LCByZWN0cywgcnRsKTtcbiAgICAgICAgb3ZlcmZsb3dzLnB1c2gob3ZlcmZsb3dbc2lkZXNbMF1dLCBvdmVyZmxvd1tzaWRlc1sxXV0pO1xuICAgICAgfVxuICAgICAgb3ZlcmZsb3dzRGF0YSA9IFsuLi5vdmVyZmxvd3NEYXRhLCB7XG4gICAgICAgIHBsYWNlbWVudCxcbiAgICAgICAgb3ZlcmZsb3dzXG4gICAgICB9XTtcblxuICAgICAgLy8gT25lIG9yIG1vcmUgc2lkZXMgaXMgb3ZlcmZsb3dpbmcuXG4gICAgICBpZiAoIW92ZXJmbG93cy5ldmVyeShzaWRlID0+IHNpZGUgPD0gMCkpIHtcbiAgICAgICAgdmFyIF9taWRkbGV3YXJlRGF0YSRmbGlwMiwgX292ZXJmbG93c0RhdGEkZmlsdGVyO1xuICAgICAgICBjb25zdCBuZXh0SW5kZXggPSAoKChfbWlkZGxld2FyZURhdGEkZmxpcDIgPSBtaWRkbGV3YXJlRGF0YS5mbGlwKSA9PSBudWxsID8gdm9pZCAwIDogX21pZGRsZXdhcmVEYXRhJGZsaXAyLmluZGV4KSB8fCAwKSArIDE7XG4gICAgICAgIGNvbnN0IG5leHRQbGFjZW1lbnQgPSBwbGFjZW1lbnRzW25leHRJbmRleF07XG4gICAgICAgIGlmIChuZXh0UGxhY2VtZW50KSB7XG4gICAgICAgICAgLy8gVHJ5IG5leHQgcGxhY2VtZW50IGFuZCByZS1ydW4gdGhlIGxpZmVjeWNsZS5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICAgICAgICBvdmVyZmxvd3M6IG92ZXJmbG93c0RhdGFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZXNldDoge1xuICAgICAgICAgICAgICBwbGFjZW1lbnQ6IG5leHRQbGFjZW1lbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRmlyc3QsIGZpbmQgdGhlIGNhbmRpZGF0ZXMgdGhhdCBmaXQgb24gdGhlIG1haW5BeGlzIHNpZGUgb2Ygb3ZlcmZsb3csXG4gICAgICAgIC8vIHRoZW4gZmluZCB0aGUgcGxhY2VtZW50IHRoYXQgZml0cyB0aGUgYmVzdCBvbiB0aGUgbWFpbiBjcm9zc0F4aXMgc2lkZS5cbiAgICAgICAgbGV0IHJlc2V0UGxhY2VtZW50ID0gKF9vdmVyZmxvd3NEYXRhJGZpbHRlciA9IG92ZXJmbG93c0RhdGEuZmlsdGVyKGQgPT4gZC5vdmVyZmxvd3NbMF0gPD0gMCkuc29ydCgoYSwgYikgPT4gYS5vdmVyZmxvd3NbMV0gLSBiLm92ZXJmbG93c1sxXSlbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfb3ZlcmZsb3dzRGF0YSRmaWx0ZXIucGxhY2VtZW50O1xuXG4gICAgICAgIC8vIE90aGVyd2lzZSBmYWxsYmFjay5cbiAgICAgICAgaWYgKCFyZXNldFBsYWNlbWVudCkge1xuICAgICAgICAgIHN3aXRjaCAoZmFsbGJhY2tTdHJhdGVneSkge1xuICAgICAgICAgICAgY2FzZSAnYmVzdEZpdCc6XG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2YXIgX292ZXJmbG93c0RhdGEkZmlsdGVyMjtcbiAgICAgICAgICAgICAgICBjb25zdCBwbGFjZW1lbnQgPSAoX292ZXJmbG93c0RhdGEkZmlsdGVyMiA9IG92ZXJmbG93c0RhdGEuZmlsdGVyKGQgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKGhhc0ZhbGxiYWNrQXhpc1NpZGVEaXJlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3VycmVudFNpZGVBeGlzID0gZ2V0U2lkZUF4aXMoZC5wbGFjZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudFNpZGVBeGlzID09PSBpbml0aWFsU2lkZUF4aXMgfHxcbiAgICAgICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgYmlhcyB0byB0aGUgYHlgIHNpZGUgYXhpcyBkdWUgdG8gaG9yaXpvbnRhbFxuICAgICAgICAgICAgICAgICAgICAvLyByZWFkaW5nIGRpcmVjdGlvbnMgZmF2b3JpbmcgZ3JlYXRlciB3aWR0aC5cbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFNpZGVBeGlzID09PSAneSc7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KS5tYXAoZCA9PiBbZC5wbGFjZW1lbnQsIGQub3ZlcmZsb3dzLmZpbHRlcihvdmVyZmxvdyA9PiBvdmVyZmxvdyA+IDApLnJlZHVjZSgoYWNjLCBvdmVyZmxvdykgPT4gYWNjICsgb3ZlcmZsb3csIDApXSkuc29ydCgoYSwgYikgPT4gYVsxXSAtIGJbMV0pWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX292ZXJmbG93c0RhdGEkZmlsdGVyMlswXTtcbiAgICAgICAgICAgICAgICBpZiAocGxhY2VtZW50KSB7XG4gICAgICAgICAgICAgICAgICByZXNldFBsYWNlbWVudCA9IHBsYWNlbWVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2luaXRpYWxQbGFjZW1lbnQnOlxuICAgICAgICAgICAgICByZXNldFBsYWNlbWVudCA9IGluaXRpYWxQbGFjZW1lbnQ7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocGxhY2VtZW50ICE9PSByZXNldFBsYWNlbWVudCkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZXNldDoge1xuICAgICAgICAgICAgICBwbGFjZW1lbnQ6IHJlc2V0UGxhY2VtZW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgfTtcbn07XG5cbmZ1bmN0aW9uIGdldFNpZGVPZmZzZXRzKG92ZXJmbG93LCByZWN0KSB7XG4gIHJldHVybiB7XG4gICAgdG9wOiBvdmVyZmxvdy50b3AgLSByZWN0LmhlaWdodCxcbiAgICByaWdodDogb3ZlcmZsb3cucmlnaHQgLSByZWN0LndpZHRoLFxuICAgIGJvdHRvbTogb3ZlcmZsb3cuYm90dG9tIC0gcmVjdC5oZWlnaHQsXG4gICAgbGVmdDogb3ZlcmZsb3cubGVmdCAtIHJlY3Qud2lkdGhcbiAgfTtcbn1cbmZ1bmN0aW9uIGlzQW55U2lkZUZ1bGx5Q2xpcHBlZChvdmVyZmxvdykge1xuICByZXR1cm4gc2lkZXMuc29tZShzaWRlID0+IG92ZXJmbG93W3NpZGVdID49IDApO1xufVxuLyoqXG4gKiBQcm92aWRlcyBkYXRhIHRvIGhpZGUgdGhlIGZsb2F0aW5nIGVsZW1lbnQgaW4gYXBwbGljYWJsZSBzaXR1YXRpb25zLCBzdWNoIGFzXG4gKiB3aGVuIGl0IGlzIG5vdCBpbiB0aGUgc2FtZSBjbGlwcGluZyBjb250ZXh0IGFzIHRoZSByZWZlcmVuY2UgZWxlbWVudC5cbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9oaWRlXG4gKi9cbmNvbnN0IGhpZGUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHJldHVybiB7XG4gICAgbmFtZTogJ2hpZGUnLFxuICAgIG9wdGlvbnMsXG4gICAgYXN5bmMgZm4oc3RhdGUpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgcmVjdHNcbiAgICAgIH0gPSBzdGF0ZTtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgc3RyYXRlZ3kgPSAncmVmZXJlbmNlSGlkZGVuJyxcbiAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zXG4gICAgICB9ID0gZXZhbHVhdGUob3B0aW9ucywgc3RhdGUpO1xuICAgICAgc3dpdGNoIChzdHJhdGVneSkge1xuICAgICAgICBjYXNlICdyZWZlcmVuY2VIaWRkZW4nOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGNvbnN0IG92ZXJmbG93ID0gYXdhaXQgZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICAgICAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zLFxuICAgICAgICAgICAgICBlbGVtZW50Q29udGV4dDogJ3JlZmVyZW5jZSdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3Qgb2Zmc2V0cyA9IGdldFNpZGVPZmZzZXRzKG92ZXJmbG93LCByZWN0cy5yZWZlcmVuY2UpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIHJlZmVyZW5jZUhpZGRlbk9mZnNldHM6IG9mZnNldHMsXG4gICAgICAgICAgICAgICAgcmVmZXJlbmNlSGlkZGVuOiBpc0FueVNpZGVGdWxseUNsaXBwZWQob2Zmc2V0cylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgIGNhc2UgJ2VzY2FwZWQnOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGNvbnN0IG92ZXJmbG93ID0gYXdhaXQgZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICAgICAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zLFxuICAgICAgICAgICAgICBhbHRCb3VuZGFyeTogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBvZmZzZXRzID0gZ2V0U2lkZU9mZnNldHMob3ZlcmZsb3csIHJlY3RzLmZsb2F0aW5nKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBlc2NhcGVkT2Zmc2V0czogb2Zmc2V0cyxcbiAgICAgICAgICAgICAgICBlc2NhcGVkOiBpc0FueVNpZGVGdWxseUNsaXBwZWQob2Zmc2V0cylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuXG5mdW5jdGlvbiBnZXRCb3VuZGluZ1JlY3QocmVjdHMpIHtcbiAgY29uc3QgbWluWCA9IG1pbiguLi5yZWN0cy5tYXAocmVjdCA9PiByZWN0LmxlZnQpKTtcbiAgY29uc3QgbWluWSA9IG1pbiguLi5yZWN0cy5tYXAocmVjdCA9PiByZWN0LnRvcCkpO1xuICBjb25zdCBtYXhYID0gbWF4KC4uLnJlY3RzLm1hcChyZWN0ID0+IHJlY3QucmlnaHQpKTtcbiAgY29uc3QgbWF4WSA9IG1heCguLi5yZWN0cy5tYXAocmVjdCA9PiByZWN0LmJvdHRvbSkpO1xuICByZXR1cm4ge1xuICAgIHg6IG1pblgsXG4gICAgeTogbWluWSxcbiAgICB3aWR0aDogbWF4WCAtIG1pblgsXG4gICAgaGVpZ2h0OiBtYXhZIC0gbWluWVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0UmVjdHNCeUxpbmUocmVjdHMpIHtcbiAgY29uc3Qgc29ydGVkUmVjdHMgPSByZWN0cy5zbGljZSgpLnNvcnQoKGEsIGIpID0+IGEueSAtIGIueSk7XG4gIGNvbnN0IGdyb3VwcyA9IFtdO1xuICBsZXQgcHJldlJlY3QgPSBudWxsO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNvcnRlZFJlY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgcmVjdCA9IHNvcnRlZFJlY3RzW2ldO1xuICAgIGlmICghcHJldlJlY3QgfHwgcmVjdC55IC0gcHJldlJlY3QueSA+IHByZXZSZWN0LmhlaWdodCAvIDIpIHtcbiAgICAgIGdyb3Vwcy5wdXNoKFtyZWN0XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdyb3Vwc1tncm91cHMubGVuZ3RoIC0gMV0ucHVzaChyZWN0KTtcbiAgICB9XG4gICAgcHJldlJlY3QgPSByZWN0O1xuICB9XG4gIHJldHVybiBncm91cHMubWFwKHJlY3QgPT4gcmVjdFRvQ2xpZW50UmVjdChnZXRCb3VuZGluZ1JlY3QocmVjdCkpKTtcbn1cbi8qKlxuICogUHJvdmlkZXMgaW1wcm92ZWQgcG9zaXRpb25pbmcgZm9yIGlubGluZSByZWZlcmVuY2UgZWxlbWVudHMgdGhhdCBjYW4gc3BhblxuICogb3ZlciBtdWx0aXBsZSBsaW5lcywgc3VjaCBhcyBoeXBlcmxpbmtzIG9yIHJhbmdlIHNlbGVjdGlvbnMuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3MvaW5saW5lXG4gKi9cbmNvbnN0IGlubGluZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnaW5saW5lJyxcbiAgICBvcHRpb25zLFxuICAgIGFzeW5jIGZuKHN0YXRlKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHBsYWNlbWVudCxcbiAgICAgICAgZWxlbWVudHMsXG4gICAgICAgIHJlY3RzLFxuICAgICAgICBwbGF0Zm9ybSxcbiAgICAgICAgc3RyYXRlZ3lcbiAgICAgIH0gPSBzdGF0ZTtcbiAgICAgIC8vIEEgTW91c2VFdmVudCdzIGNsaWVudHtYLFl9IGNvb3JkcyBjYW4gYmUgdXAgdG8gMiBwaXhlbHMgb2ZmIGFcbiAgICAgIC8vIENsaWVudFJlY3QncyBib3VuZHMsIGRlc3BpdGUgdGhlIGV2ZW50IGxpc3RlbmVyIGJlaW5nIHRyaWdnZXJlZC4gQVxuICAgICAgLy8gcGFkZGluZyBvZiAyIHNlZW1zIHRvIGhhbmRsZSB0aGlzIGlzc3VlLlxuICAgICAgY29uc3Qge1xuICAgICAgICBwYWRkaW5nID0gMixcbiAgICAgICAgeCxcbiAgICAgICAgeVxuICAgICAgfSA9IGV2YWx1YXRlKG9wdGlvbnMsIHN0YXRlKTtcbiAgICAgIGNvbnN0IG5hdGl2ZUNsaWVudFJlY3RzID0gQXJyYXkuZnJvbSgoYXdhaXQgKHBsYXRmb3JtLmdldENsaWVudFJlY3RzID09IG51bGwgPyB2b2lkIDAgOiBwbGF0Zm9ybS5nZXRDbGllbnRSZWN0cyhlbGVtZW50cy5yZWZlcmVuY2UpKSkgfHwgW10pO1xuICAgICAgY29uc3QgY2xpZW50UmVjdHMgPSBnZXRSZWN0c0J5TGluZShuYXRpdmVDbGllbnRSZWN0cyk7XG4gICAgICBjb25zdCBmYWxsYmFjayA9IHJlY3RUb0NsaWVudFJlY3QoZ2V0Qm91bmRpbmdSZWN0KG5hdGl2ZUNsaWVudFJlY3RzKSk7XG4gICAgICBjb25zdCBwYWRkaW5nT2JqZWN0ID0gZ2V0UGFkZGluZ09iamVjdChwYWRkaW5nKTtcbiAgICAgIGZ1bmN0aW9uIGdldEJvdW5kaW5nQ2xpZW50UmVjdCgpIHtcbiAgICAgICAgLy8gVGhlcmUgYXJlIHR3byByZWN0cyBhbmQgdGhleSBhcmUgZGlzam9pbmVkLlxuICAgICAgICBpZiAoY2xpZW50UmVjdHMubGVuZ3RoID09PSAyICYmIGNsaWVudFJlY3RzWzBdLmxlZnQgPiBjbGllbnRSZWN0c1sxXS5yaWdodCAmJiB4ICE9IG51bGwgJiYgeSAhPSBudWxsKSB7XG4gICAgICAgICAgLy8gRmluZCB0aGUgZmlyc3QgcmVjdCBpbiB3aGljaCB0aGUgcG9pbnQgaXMgZnVsbHkgaW5zaWRlLlxuICAgICAgICAgIHJldHVybiBjbGllbnRSZWN0cy5maW5kKHJlY3QgPT4geCA+IHJlY3QubGVmdCAtIHBhZGRpbmdPYmplY3QubGVmdCAmJiB4IDwgcmVjdC5yaWdodCArIHBhZGRpbmdPYmplY3QucmlnaHQgJiYgeSA+IHJlY3QudG9wIC0gcGFkZGluZ09iamVjdC50b3AgJiYgeSA8IHJlY3QuYm90dG9tICsgcGFkZGluZ09iamVjdC5ib3R0b20pIHx8IGZhbGxiYWNrO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVGhlcmUgYXJlIDIgb3IgbW9yZSBjb25uZWN0ZWQgcmVjdHMuXG4gICAgICAgIGlmIChjbGllbnRSZWN0cy5sZW5ndGggPj0gMikge1xuICAgICAgICAgIGlmIChnZXRTaWRlQXhpcyhwbGFjZW1lbnQpID09PSAneScpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpcnN0UmVjdCA9IGNsaWVudFJlY3RzWzBdO1xuICAgICAgICAgICAgY29uc3QgbGFzdFJlY3QgPSBjbGllbnRSZWN0c1tjbGllbnRSZWN0cy5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgIGNvbnN0IGlzVG9wID0gZ2V0U2lkZShwbGFjZW1lbnQpID09PSAndG9wJztcbiAgICAgICAgICAgIGNvbnN0IHRvcCA9IGZpcnN0UmVjdC50b3A7XG4gICAgICAgICAgICBjb25zdCBib3R0b20gPSBsYXN0UmVjdC5ib3R0b207XG4gICAgICAgICAgICBjb25zdCBsZWZ0ID0gaXNUb3AgPyBmaXJzdFJlY3QubGVmdCA6IGxhc3RSZWN0LmxlZnQ7XG4gICAgICAgICAgICBjb25zdCByaWdodCA9IGlzVG9wID8gZmlyc3RSZWN0LnJpZ2h0IDogbGFzdFJlY3QucmlnaHQ7XG4gICAgICAgICAgICBjb25zdCB3aWR0aCA9IHJpZ2h0IC0gbGVmdDtcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IGJvdHRvbSAtIHRvcDtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIHRvcCxcbiAgICAgICAgICAgICAgYm90dG9tLFxuICAgICAgICAgICAgICBsZWZ0LFxuICAgICAgICAgICAgICByaWdodCxcbiAgICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICAgIGhlaWdodCxcbiAgICAgICAgICAgICAgeDogbGVmdCxcbiAgICAgICAgICAgICAgeTogdG9wXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBpc0xlZnRTaWRlID0gZ2V0U2lkZShwbGFjZW1lbnQpID09PSAnbGVmdCc7XG4gICAgICAgICAgY29uc3QgbWF4UmlnaHQgPSBtYXgoLi4uY2xpZW50UmVjdHMubWFwKHJlY3QgPT4gcmVjdC5yaWdodCkpO1xuICAgICAgICAgIGNvbnN0IG1pbkxlZnQgPSBtaW4oLi4uY2xpZW50UmVjdHMubWFwKHJlY3QgPT4gcmVjdC5sZWZ0KSk7XG4gICAgICAgICAgY29uc3QgbWVhc3VyZVJlY3RzID0gY2xpZW50UmVjdHMuZmlsdGVyKHJlY3QgPT4gaXNMZWZ0U2lkZSA/IHJlY3QubGVmdCA9PT0gbWluTGVmdCA6IHJlY3QucmlnaHQgPT09IG1heFJpZ2h0KTtcbiAgICAgICAgICBjb25zdCB0b3AgPSBtZWFzdXJlUmVjdHNbMF0udG9wO1xuICAgICAgICAgIGNvbnN0IGJvdHRvbSA9IG1lYXN1cmVSZWN0c1ttZWFzdXJlUmVjdHMubGVuZ3RoIC0gMV0uYm90dG9tO1xuICAgICAgICAgIGNvbnN0IGxlZnQgPSBtaW5MZWZ0O1xuICAgICAgICAgIGNvbnN0IHJpZ2h0ID0gbWF4UmlnaHQ7XG4gICAgICAgICAgY29uc3Qgd2lkdGggPSByaWdodCAtIGxlZnQ7XG4gICAgICAgICAgY29uc3QgaGVpZ2h0ID0gYm90dG9tIC0gdG9wO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b3AsXG4gICAgICAgICAgICBib3R0b20sXG4gICAgICAgICAgICBsZWZ0LFxuICAgICAgICAgICAgcmlnaHQsXG4gICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgIGhlaWdodCxcbiAgICAgICAgICAgIHg6IGxlZnQsXG4gICAgICAgICAgICB5OiB0b3BcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxsYmFjaztcbiAgICAgIH1cbiAgICAgIGNvbnN0IHJlc2V0UmVjdHMgPSBhd2FpdCBwbGF0Zm9ybS5nZXRFbGVtZW50UmVjdHMoe1xuICAgICAgICByZWZlcmVuY2U6IHtcbiAgICAgICAgICBnZXRCb3VuZGluZ0NsaWVudFJlY3RcbiAgICAgICAgfSxcbiAgICAgICAgZmxvYXRpbmc6IGVsZW1lbnRzLmZsb2F0aW5nLFxuICAgICAgICBzdHJhdGVneVxuICAgICAgfSk7XG4gICAgICBpZiAocmVjdHMucmVmZXJlbmNlLnggIT09IHJlc2V0UmVjdHMucmVmZXJlbmNlLnggfHwgcmVjdHMucmVmZXJlbmNlLnkgIT09IHJlc2V0UmVjdHMucmVmZXJlbmNlLnkgfHwgcmVjdHMucmVmZXJlbmNlLndpZHRoICE9PSByZXNldFJlY3RzLnJlZmVyZW5jZS53aWR0aCB8fCByZWN0cy5yZWZlcmVuY2UuaGVpZ2h0ICE9PSByZXNldFJlY3RzLnJlZmVyZW5jZS5oZWlnaHQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICByZXNldDoge1xuICAgICAgICAgICAgcmVjdHM6IHJlc2V0UmVjdHNcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuICB9O1xufTtcblxuLy8gRm9yIHR5cGUgYmFja3dhcmRzLWNvbXBhdGliaWxpdHksIHRoZSBgT2Zmc2V0T3B0aW9uc2AgdHlwZSB3YXMgYWxzb1xuLy8gRGVyaXZhYmxlLlxuXG5hc3luYyBmdW5jdGlvbiBjb252ZXJ0VmFsdWVUb0Nvb3JkcyhzdGF0ZSwgb3B0aW9ucykge1xuICBjb25zdCB7XG4gICAgcGxhY2VtZW50LFxuICAgIHBsYXRmb3JtLFxuICAgIGVsZW1lbnRzXG4gIH0gPSBzdGF0ZTtcbiAgY29uc3QgcnRsID0gYXdhaXQgKHBsYXRmb3JtLmlzUlRMID09IG51bGwgPyB2b2lkIDAgOiBwbGF0Zm9ybS5pc1JUTChlbGVtZW50cy5mbG9hdGluZykpO1xuICBjb25zdCBzaWRlID0gZ2V0U2lkZShwbGFjZW1lbnQpO1xuICBjb25zdCBhbGlnbm1lbnQgPSBnZXRBbGlnbm1lbnQocGxhY2VtZW50KTtcbiAgY29uc3QgaXNWZXJ0aWNhbCA9IGdldFNpZGVBeGlzKHBsYWNlbWVudCkgPT09ICd5JztcbiAgY29uc3QgbWFpbkF4aXNNdWx0aSA9IFsnbGVmdCcsICd0b3AnXS5pbmNsdWRlcyhzaWRlKSA/IC0xIDogMTtcbiAgY29uc3QgY3Jvc3NBeGlzTXVsdGkgPSBydGwgJiYgaXNWZXJ0aWNhbCA/IC0xIDogMTtcbiAgY29uc3QgcmF3VmFsdWUgPSBldmFsdWF0ZShvcHRpb25zLCBzdGF0ZSk7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1jb25zdFxuICBsZXQge1xuICAgIG1haW5BeGlzLFxuICAgIGNyb3NzQXhpcyxcbiAgICBhbGlnbm1lbnRBeGlzXG4gIH0gPSB0eXBlb2YgcmF3VmFsdWUgPT09ICdudW1iZXInID8ge1xuICAgIG1haW5BeGlzOiByYXdWYWx1ZSxcbiAgICBjcm9zc0F4aXM6IDAsXG4gICAgYWxpZ25tZW50QXhpczogbnVsbFxuICB9IDoge1xuICAgIG1haW5BeGlzOiAwLFxuICAgIGNyb3NzQXhpczogMCxcbiAgICBhbGlnbm1lbnRBeGlzOiBudWxsLFxuICAgIC4uLnJhd1ZhbHVlXG4gIH07XG4gIGlmIChhbGlnbm1lbnQgJiYgdHlwZW9mIGFsaWdubWVudEF4aXMgPT09ICdudW1iZXInKSB7XG4gICAgY3Jvc3NBeGlzID0gYWxpZ25tZW50ID09PSAnZW5kJyA/IGFsaWdubWVudEF4aXMgKiAtMSA6IGFsaWdubWVudEF4aXM7XG4gIH1cbiAgcmV0dXJuIGlzVmVydGljYWwgPyB7XG4gICAgeDogY3Jvc3NBeGlzICogY3Jvc3NBeGlzTXVsdGksXG4gICAgeTogbWFpbkF4aXMgKiBtYWluQXhpc011bHRpXG4gIH0gOiB7XG4gICAgeDogbWFpbkF4aXMgKiBtYWluQXhpc011bHRpLFxuICAgIHk6IGNyb3NzQXhpcyAqIGNyb3NzQXhpc011bHRpXG4gIH07XG59XG5cbi8qKlxuICogTW9kaWZpZXMgdGhlIHBsYWNlbWVudCBieSB0cmFuc2xhdGluZyB0aGUgZmxvYXRpbmcgZWxlbWVudCBhbG9uZyB0aGVcbiAqIHNwZWNpZmllZCBheGVzLlxuICogQSBudW1iZXIgKHNob3J0aGFuZCBmb3IgYG1haW5BeGlzYCBvciBkaXN0YW5jZSksIG9yIGFuIGF4ZXMgY29uZmlndXJhdGlvblxuICogb2JqZWN0IG1heSBiZSBwYXNzZWQuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3Mvb2Zmc2V0XG4gKi9cbmNvbnN0IG9mZnNldCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0gMDtcbiAgfVxuICByZXR1cm4ge1xuICAgIG5hbWU6ICdvZmZzZXQnLFxuICAgIG9wdGlvbnMsXG4gICAgYXN5bmMgZm4oc3RhdGUpIHtcbiAgICAgIHZhciBfbWlkZGxld2FyZURhdGEkb2Zmc2UsIF9taWRkbGV3YXJlRGF0YSRhcnJvdztcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgeCxcbiAgICAgICAgeSxcbiAgICAgICAgcGxhY2VtZW50LFxuICAgICAgICBtaWRkbGV3YXJlRGF0YVxuICAgICAgfSA9IHN0YXRlO1xuICAgICAgY29uc3QgZGlmZkNvb3JkcyA9IGF3YWl0IGNvbnZlcnRWYWx1ZVRvQ29vcmRzKHN0YXRlLCBvcHRpb25zKTtcblxuICAgICAgLy8gSWYgdGhlIHBsYWNlbWVudCBpcyB0aGUgc2FtZSBhbmQgdGhlIGFycm93IGNhdXNlZCBhbiBhbGlnbm1lbnQgb2Zmc2V0XG4gICAgICAvLyB0aGVuIHdlIGRvbid0IG5lZWQgdG8gY2hhbmdlIHRoZSBwb3NpdGlvbmluZyBjb29yZGluYXRlcy5cbiAgICAgIGlmIChwbGFjZW1lbnQgPT09ICgoX21pZGRsZXdhcmVEYXRhJG9mZnNlID0gbWlkZGxld2FyZURhdGEub2Zmc2V0KSA9PSBudWxsID8gdm9pZCAwIDogX21pZGRsZXdhcmVEYXRhJG9mZnNlLnBsYWNlbWVudCkgJiYgKF9taWRkbGV3YXJlRGF0YSRhcnJvdyA9IG1pZGRsZXdhcmVEYXRhLmFycm93KSAhPSBudWxsICYmIF9taWRkbGV3YXJlRGF0YSRhcnJvdy5hbGlnbm1lbnRPZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgeDogeCArIGRpZmZDb29yZHMueCxcbiAgICAgICAgeTogeSArIGRpZmZDb29yZHMueSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIC4uLmRpZmZDb29yZHMsXG4gICAgICAgICAgcGxhY2VtZW50XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9O1xufTtcblxuLyoqXG4gKiBPcHRpbWl6ZXMgdGhlIHZpc2liaWxpdHkgb2YgdGhlIGZsb2F0aW5nIGVsZW1lbnQgYnkgc2hpZnRpbmcgaXQgaW4gb3JkZXIgdG9cbiAqIGtlZXAgaXQgaW4gdmlldyB3aGVuIGl0IHdpbGwgb3ZlcmZsb3cgdGhlIGNsaXBwaW5nIGJvdW5kYXJ5LlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL3NoaWZ0XG4gKi9cbmNvbnN0IHNoaWZ0ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICByZXR1cm4ge1xuICAgIG5hbWU6ICdzaGlmdCcsXG4gICAgb3B0aW9ucyxcbiAgICBhc3luYyBmbihzdGF0ZSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICB4LFxuICAgICAgICB5LFxuICAgICAgICBwbGFjZW1lbnRcbiAgICAgIH0gPSBzdGF0ZTtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgbWFpbkF4aXM6IGNoZWNrTWFpbkF4aXMgPSB0cnVlLFxuICAgICAgICBjcm9zc0F4aXM6IGNoZWNrQ3Jvc3NBeGlzID0gZmFsc2UsXG4gICAgICAgIGxpbWl0ZXIgPSB7XG4gICAgICAgICAgZm46IF9yZWYgPT4ge1xuICAgICAgICAgICAgbGV0IHtcbiAgICAgICAgICAgICAgeCxcbiAgICAgICAgICAgICAgeVxuICAgICAgICAgICAgfSA9IF9yZWY7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICB4LFxuICAgICAgICAgICAgICB5XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zXG4gICAgICB9ID0gZXZhbHVhdGUob3B0aW9ucywgc3RhdGUpO1xuICAgICAgY29uc3QgY29vcmRzID0ge1xuICAgICAgICB4LFxuICAgICAgICB5XG4gICAgICB9O1xuICAgICAgY29uc3Qgb3ZlcmZsb3cgPSBhd2FpdCBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwgZGV0ZWN0T3ZlcmZsb3dPcHRpb25zKTtcbiAgICAgIGNvbnN0IGNyb3NzQXhpcyA9IGdldFNpZGVBeGlzKGdldFNpZGUocGxhY2VtZW50KSk7XG4gICAgICBjb25zdCBtYWluQXhpcyA9IGdldE9wcG9zaXRlQXhpcyhjcm9zc0F4aXMpO1xuICAgICAgbGV0IG1haW5BeGlzQ29vcmQgPSBjb29yZHNbbWFpbkF4aXNdO1xuICAgICAgbGV0IGNyb3NzQXhpc0Nvb3JkID0gY29vcmRzW2Nyb3NzQXhpc107XG4gICAgICBpZiAoY2hlY2tNYWluQXhpcykge1xuICAgICAgICBjb25zdCBtaW5TaWRlID0gbWFpbkF4aXMgPT09ICd5JyA/ICd0b3AnIDogJ2xlZnQnO1xuICAgICAgICBjb25zdCBtYXhTaWRlID0gbWFpbkF4aXMgPT09ICd5JyA/ICdib3R0b20nIDogJ3JpZ2h0JztcbiAgICAgICAgY29uc3QgbWluID0gbWFpbkF4aXNDb29yZCArIG92ZXJmbG93W21pblNpZGVdO1xuICAgICAgICBjb25zdCBtYXggPSBtYWluQXhpc0Nvb3JkIC0gb3ZlcmZsb3dbbWF4U2lkZV07XG4gICAgICAgIG1haW5BeGlzQ29vcmQgPSBjbGFtcChtaW4sIG1haW5BeGlzQ29vcmQsIG1heCk7XG4gICAgICB9XG4gICAgICBpZiAoY2hlY2tDcm9zc0F4aXMpIHtcbiAgICAgICAgY29uc3QgbWluU2lkZSA9IGNyb3NzQXhpcyA9PT0gJ3knID8gJ3RvcCcgOiAnbGVmdCc7XG4gICAgICAgIGNvbnN0IG1heFNpZGUgPSBjcm9zc0F4aXMgPT09ICd5JyA/ICdib3R0b20nIDogJ3JpZ2h0JztcbiAgICAgICAgY29uc3QgbWluID0gY3Jvc3NBeGlzQ29vcmQgKyBvdmVyZmxvd1ttaW5TaWRlXTtcbiAgICAgICAgY29uc3QgbWF4ID0gY3Jvc3NBeGlzQ29vcmQgLSBvdmVyZmxvd1ttYXhTaWRlXTtcbiAgICAgICAgY3Jvc3NBeGlzQ29vcmQgPSBjbGFtcChtaW4sIGNyb3NzQXhpc0Nvb3JkLCBtYXgpO1xuICAgICAgfVxuICAgICAgY29uc3QgbGltaXRlZENvb3JkcyA9IGxpbWl0ZXIuZm4oe1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgW21haW5BeGlzXTogbWFpbkF4aXNDb29yZCxcbiAgICAgICAgW2Nyb3NzQXhpc106IGNyb3NzQXhpc0Nvb3JkXG4gICAgICB9KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmxpbWl0ZWRDb29yZHMsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICB4OiBsaW1pdGVkQ29vcmRzLnggLSB4LFxuICAgICAgICAgIHk6IGxpbWl0ZWRDb29yZHMueSAtIHlcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH07XG59O1xuLyoqXG4gKiBCdWlsdC1pbiBgbGltaXRlcmAgdGhhdCB3aWxsIHN0b3AgYHNoaWZ0KClgIGF0IGEgY2VydGFpbiBwb2ludC5cbiAqL1xuY29uc3QgbGltaXRTaGlmdCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBvcHRpb25zLFxuICAgIGZuKHN0YXRlKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHgsXG4gICAgICAgIHksXG4gICAgICAgIHBsYWNlbWVudCxcbiAgICAgICAgcmVjdHMsXG4gICAgICAgIG1pZGRsZXdhcmVEYXRhXG4gICAgICB9ID0gc3RhdGU7XG4gICAgICBjb25zdCB7XG4gICAgICAgIG9mZnNldCA9IDAsXG4gICAgICAgIG1haW5BeGlzOiBjaGVja01haW5BeGlzID0gdHJ1ZSxcbiAgICAgICAgY3Jvc3NBeGlzOiBjaGVja0Nyb3NzQXhpcyA9IHRydWVcbiAgICAgIH0gPSBldmFsdWF0ZShvcHRpb25zLCBzdGF0ZSk7XG4gICAgICBjb25zdCBjb29yZHMgPSB7XG4gICAgICAgIHgsXG4gICAgICAgIHlcbiAgICAgIH07XG4gICAgICBjb25zdCBjcm9zc0F4aXMgPSBnZXRTaWRlQXhpcyhwbGFjZW1lbnQpO1xuICAgICAgY29uc3QgbWFpbkF4aXMgPSBnZXRPcHBvc2l0ZUF4aXMoY3Jvc3NBeGlzKTtcbiAgICAgIGxldCBtYWluQXhpc0Nvb3JkID0gY29vcmRzW21haW5BeGlzXTtcbiAgICAgIGxldCBjcm9zc0F4aXNDb29yZCA9IGNvb3Jkc1tjcm9zc0F4aXNdO1xuICAgICAgY29uc3QgcmF3T2Zmc2V0ID0gZXZhbHVhdGUob2Zmc2V0LCBzdGF0ZSk7XG4gICAgICBjb25zdCBjb21wdXRlZE9mZnNldCA9IHR5cGVvZiByYXdPZmZzZXQgPT09ICdudW1iZXInID8ge1xuICAgICAgICBtYWluQXhpczogcmF3T2Zmc2V0LFxuICAgICAgICBjcm9zc0F4aXM6IDBcbiAgICAgIH0gOiB7XG4gICAgICAgIG1haW5BeGlzOiAwLFxuICAgICAgICBjcm9zc0F4aXM6IDAsXG4gICAgICAgIC4uLnJhd09mZnNldFxuICAgICAgfTtcbiAgICAgIGlmIChjaGVja01haW5BeGlzKSB7XG4gICAgICAgIGNvbnN0IGxlbiA9IG1haW5BeGlzID09PSAneScgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG4gICAgICAgIGNvbnN0IGxpbWl0TWluID0gcmVjdHMucmVmZXJlbmNlW21haW5BeGlzXSAtIHJlY3RzLmZsb2F0aW5nW2xlbl0gKyBjb21wdXRlZE9mZnNldC5tYWluQXhpcztcbiAgICAgICAgY29uc3QgbGltaXRNYXggPSByZWN0cy5yZWZlcmVuY2VbbWFpbkF4aXNdICsgcmVjdHMucmVmZXJlbmNlW2xlbl0gLSBjb21wdXRlZE9mZnNldC5tYWluQXhpcztcbiAgICAgICAgaWYgKG1haW5BeGlzQ29vcmQgPCBsaW1pdE1pbikge1xuICAgICAgICAgIG1haW5BeGlzQ29vcmQgPSBsaW1pdE1pbjtcbiAgICAgICAgfSBlbHNlIGlmIChtYWluQXhpc0Nvb3JkID4gbGltaXRNYXgpIHtcbiAgICAgICAgICBtYWluQXhpc0Nvb3JkID0gbGltaXRNYXg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChjaGVja0Nyb3NzQXhpcykge1xuICAgICAgICB2YXIgX21pZGRsZXdhcmVEYXRhJG9mZnNlLCBfbWlkZGxld2FyZURhdGEkb2Zmc2UyO1xuICAgICAgICBjb25zdCBsZW4gPSBtYWluQXhpcyA9PT0gJ3knID8gJ3dpZHRoJyA6ICdoZWlnaHQnO1xuICAgICAgICBjb25zdCBpc09yaWdpblNpZGUgPSBbJ3RvcCcsICdsZWZ0J10uaW5jbHVkZXMoZ2V0U2lkZShwbGFjZW1lbnQpKTtcbiAgICAgICAgY29uc3QgbGltaXRNaW4gPSByZWN0cy5yZWZlcmVuY2VbY3Jvc3NBeGlzXSAtIHJlY3RzLmZsb2F0aW5nW2xlbl0gKyAoaXNPcmlnaW5TaWRlID8gKChfbWlkZGxld2FyZURhdGEkb2Zmc2UgPSBtaWRkbGV3YXJlRGF0YS5vZmZzZXQpID09IG51bGwgPyB2b2lkIDAgOiBfbWlkZGxld2FyZURhdGEkb2Zmc2VbY3Jvc3NBeGlzXSkgfHwgMCA6IDApICsgKGlzT3JpZ2luU2lkZSA/IDAgOiBjb21wdXRlZE9mZnNldC5jcm9zc0F4aXMpO1xuICAgICAgICBjb25zdCBsaW1pdE1heCA9IHJlY3RzLnJlZmVyZW5jZVtjcm9zc0F4aXNdICsgcmVjdHMucmVmZXJlbmNlW2xlbl0gKyAoaXNPcmlnaW5TaWRlID8gMCA6ICgoX21pZGRsZXdhcmVEYXRhJG9mZnNlMiA9IG1pZGRsZXdhcmVEYXRhLm9mZnNldCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9taWRkbGV3YXJlRGF0YSRvZmZzZTJbY3Jvc3NBeGlzXSkgfHwgMCkgLSAoaXNPcmlnaW5TaWRlID8gY29tcHV0ZWRPZmZzZXQuY3Jvc3NBeGlzIDogMCk7XG4gICAgICAgIGlmIChjcm9zc0F4aXNDb29yZCA8IGxpbWl0TWluKSB7XG4gICAgICAgICAgY3Jvc3NBeGlzQ29vcmQgPSBsaW1pdE1pbjtcbiAgICAgICAgfSBlbHNlIGlmIChjcm9zc0F4aXNDb29yZCA+IGxpbWl0TWF4KSB7XG4gICAgICAgICAgY3Jvc3NBeGlzQ29vcmQgPSBsaW1pdE1heDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgW21haW5BeGlzXTogbWFpbkF4aXNDb29yZCxcbiAgICAgICAgW2Nyb3NzQXhpc106IGNyb3NzQXhpc0Nvb3JkXG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn07XG5cbi8qKlxuICogUHJvdmlkZXMgZGF0YSB0aGF0IGFsbG93cyB5b3UgdG8gY2hhbmdlIHRoZSBzaXplIG9mIHRoZSBmbG9hdGluZyBlbGVtZW50IFx1MjAxNFxuICogZm9yIGluc3RhbmNlLCBwcmV2ZW50IGl0IGZyb20gb3ZlcmZsb3dpbmcgdGhlIGNsaXBwaW5nIGJvdW5kYXJ5IG9yIG1hdGNoIHRoZVxuICogd2lkdGggb2YgdGhlIHJlZmVyZW5jZSBlbGVtZW50LlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL3NpemVcbiAqL1xuY29uc3Qgc2l6ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnc2l6ZScsXG4gICAgb3B0aW9ucyxcbiAgICBhc3luYyBmbihzdGF0ZSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBwbGFjZW1lbnQsXG4gICAgICAgIHJlY3RzLFxuICAgICAgICBwbGF0Zm9ybSxcbiAgICAgICAgZWxlbWVudHNcbiAgICAgIH0gPSBzdGF0ZTtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgYXBwbHkgPSAoKSA9PiB7fSxcbiAgICAgICAgLi4uZGV0ZWN0T3ZlcmZsb3dPcHRpb25zXG4gICAgICB9ID0gZXZhbHVhdGUob3B0aW9ucywgc3RhdGUpO1xuICAgICAgY29uc3Qgb3ZlcmZsb3cgPSBhd2FpdCBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwgZGV0ZWN0T3ZlcmZsb3dPcHRpb25zKTtcbiAgICAgIGNvbnN0IHNpZGUgPSBnZXRTaWRlKHBsYWNlbWVudCk7XG4gICAgICBjb25zdCBhbGlnbm1lbnQgPSBnZXRBbGlnbm1lbnQocGxhY2VtZW50KTtcbiAgICAgIGNvbnN0IGlzWUF4aXMgPSBnZXRTaWRlQXhpcyhwbGFjZW1lbnQpID09PSAneSc7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHdpZHRoLFxuICAgICAgICBoZWlnaHRcbiAgICAgIH0gPSByZWN0cy5mbG9hdGluZztcbiAgICAgIGxldCBoZWlnaHRTaWRlO1xuICAgICAgbGV0IHdpZHRoU2lkZTtcbiAgICAgIGlmIChzaWRlID09PSAndG9wJyB8fCBzaWRlID09PSAnYm90dG9tJykge1xuICAgICAgICBoZWlnaHRTaWRlID0gc2lkZTtcbiAgICAgICAgd2lkdGhTaWRlID0gYWxpZ25tZW50ID09PSAoKGF3YWl0IChwbGF0Zm9ybS5pc1JUTCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0uaXNSVEwoZWxlbWVudHMuZmxvYXRpbmcpKSkgPyAnc3RhcnQnIDogJ2VuZCcpID8gJ2xlZnQnIDogJ3JpZ2h0JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpZHRoU2lkZSA9IHNpZGU7XG4gICAgICAgIGhlaWdodFNpZGUgPSBhbGlnbm1lbnQgPT09ICdlbmQnID8gJ3RvcCcgOiAnYm90dG9tJztcbiAgICAgIH1cbiAgICAgIGNvbnN0IG1heGltdW1DbGlwcGluZ0hlaWdodCA9IGhlaWdodCAtIG92ZXJmbG93LnRvcCAtIG92ZXJmbG93LmJvdHRvbTtcbiAgICAgIGNvbnN0IG1heGltdW1DbGlwcGluZ1dpZHRoID0gd2lkdGggLSBvdmVyZmxvdy5sZWZ0IC0gb3ZlcmZsb3cucmlnaHQ7XG4gICAgICBjb25zdCBvdmVyZmxvd0F2YWlsYWJsZUhlaWdodCA9IG1pbihoZWlnaHQgLSBvdmVyZmxvd1toZWlnaHRTaWRlXSwgbWF4aW11bUNsaXBwaW5nSGVpZ2h0KTtcbiAgICAgIGNvbnN0IG92ZXJmbG93QXZhaWxhYmxlV2lkdGggPSBtaW4od2lkdGggLSBvdmVyZmxvd1t3aWR0aFNpZGVdLCBtYXhpbXVtQ2xpcHBpbmdXaWR0aCk7XG4gICAgICBjb25zdCBub1NoaWZ0ID0gIXN0YXRlLm1pZGRsZXdhcmVEYXRhLnNoaWZ0O1xuICAgICAgbGV0IGF2YWlsYWJsZUhlaWdodCA9IG92ZXJmbG93QXZhaWxhYmxlSGVpZ2h0O1xuICAgICAgbGV0IGF2YWlsYWJsZVdpZHRoID0gb3ZlcmZsb3dBdmFpbGFibGVXaWR0aDtcbiAgICAgIGlmIChpc1lBeGlzKSB7XG4gICAgICAgIGF2YWlsYWJsZVdpZHRoID0gYWxpZ25tZW50IHx8IG5vU2hpZnQgPyBtaW4ob3ZlcmZsb3dBdmFpbGFibGVXaWR0aCwgbWF4aW11bUNsaXBwaW5nV2lkdGgpIDogbWF4aW11bUNsaXBwaW5nV2lkdGg7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhdmFpbGFibGVIZWlnaHQgPSBhbGlnbm1lbnQgfHwgbm9TaGlmdCA/IG1pbihvdmVyZmxvd0F2YWlsYWJsZUhlaWdodCwgbWF4aW11bUNsaXBwaW5nSGVpZ2h0KSA6IG1heGltdW1DbGlwcGluZ0hlaWdodDtcbiAgICAgIH1cbiAgICAgIGlmIChub1NoaWZ0ICYmICFhbGlnbm1lbnQpIHtcbiAgICAgICAgY29uc3QgeE1pbiA9IG1heChvdmVyZmxvdy5sZWZ0LCAwKTtcbiAgICAgICAgY29uc3QgeE1heCA9IG1heChvdmVyZmxvdy5yaWdodCwgMCk7XG4gICAgICAgIGNvbnN0IHlNaW4gPSBtYXgob3ZlcmZsb3cudG9wLCAwKTtcbiAgICAgICAgY29uc3QgeU1heCA9IG1heChvdmVyZmxvdy5ib3R0b20sIDApO1xuICAgICAgICBpZiAoaXNZQXhpcykge1xuICAgICAgICAgIGF2YWlsYWJsZVdpZHRoID0gd2lkdGggLSAyICogKHhNaW4gIT09IDAgfHwgeE1heCAhPT0gMCA/IHhNaW4gKyB4TWF4IDogbWF4KG92ZXJmbG93LmxlZnQsIG92ZXJmbG93LnJpZ2h0KSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYXZhaWxhYmxlSGVpZ2h0ID0gaGVpZ2h0IC0gMiAqICh5TWluICE9PSAwIHx8IHlNYXggIT09IDAgPyB5TWluICsgeU1heCA6IG1heChvdmVyZmxvdy50b3AsIG92ZXJmbG93LmJvdHRvbSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBhd2FpdCBhcHBseSh7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBhdmFpbGFibGVXaWR0aCxcbiAgICAgICAgYXZhaWxhYmxlSGVpZ2h0XG4gICAgICB9KTtcbiAgICAgIGNvbnN0IG5leHREaW1lbnNpb25zID0gYXdhaXQgcGxhdGZvcm0uZ2V0RGltZW5zaW9ucyhlbGVtZW50cy5mbG9hdGluZyk7XG4gICAgICBpZiAod2lkdGggIT09IG5leHREaW1lbnNpb25zLndpZHRoIHx8IGhlaWdodCAhPT0gbmV4dERpbWVuc2lvbnMuaGVpZ2h0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcmVzZXQ6IHtcbiAgICAgICAgICAgIHJlY3RzOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgfTtcbn07XG5cbmV4cG9ydCB7IGFycm93LCBhdXRvUGxhY2VtZW50LCBjb21wdXRlUG9zaXRpb24sIGRldGVjdE92ZXJmbG93LCBmbGlwLCBoaWRlLCBpbmxpbmUsIGxpbWl0U2hpZnQsIG9mZnNldCwgc2hpZnQsIHNpemUgfTtcbiIsICJmdW5jdGlvbiBnZXROb2RlTmFtZShub2RlKSB7XG4gIGlmIChpc05vZGUobm9kZSkpIHtcbiAgICByZXR1cm4gKG5vZGUubm9kZU5hbWUgfHwgJycpLnRvTG93ZXJDYXNlKCk7XG4gIH1cbiAgLy8gTW9ja2VkIG5vZGVzIGluIHRlc3RpbmcgZW52aXJvbm1lbnRzIG1heSBub3QgYmUgaW5zdGFuY2VzIG9mIE5vZGUuIEJ5XG4gIC8vIHJldHVybmluZyBgI2RvY3VtZW50YCBhbiBpbmZpbml0ZSBsb29wIHdvbid0IG9jY3VyLlxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vZmxvYXRpbmctdWkvZmxvYXRpbmctdWkvaXNzdWVzLzIzMTdcbiAgcmV0dXJuICcjZG9jdW1lbnQnO1xufVxuZnVuY3Rpb24gZ2V0V2luZG93KG5vZGUpIHtcbiAgdmFyIF9ub2RlJG93bmVyRG9jdW1lbnQ7XG4gIHJldHVybiAobm9kZSA9PSBudWxsIHx8IChfbm9kZSRvd25lckRvY3VtZW50ID0gbm9kZS5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX25vZGUkb3duZXJEb2N1bWVudC5kZWZhdWx0VmlldykgfHwgd2luZG93O1xufVxuZnVuY3Rpb24gZ2V0RG9jdW1lbnRFbGVtZW50KG5vZGUpIHtcbiAgdmFyIF9yZWY7XG4gIHJldHVybiAoX3JlZiA9IChpc05vZGUobm9kZSkgPyBub2RlLm93bmVyRG9jdW1lbnQgOiBub2RlLmRvY3VtZW50KSB8fCB3aW5kb3cuZG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfcmVmLmRvY3VtZW50RWxlbWVudDtcbn1cbmZ1bmN0aW9uIGlzTm9kZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBOb2RlIHx8IHZhbHVlIGluc3RhbmNlb2YgZ2V0V2luZG93KHZhbHVlKS5Ob2RlO1xufVxuZnVuY3Rpb24gaXNFbGVtZW50KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIEVsZW1lbnQgfHwgdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3codmFsdWUpLkVsZW1lbnQ7XG59XG5mdW5jdGlvbiBpc0hUTUxFbGVtZW50KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50IHx8IHZhbHVlIGluc3RhbmNlb2YgZ2V0V2luZG93KHZhbHVlKS5IVE1MRWxlbWVudDtcbn1cbmZ1bmN0aW9uIGlzU2hhZG93Um9vdCh2YWx1ZSkge1xuICAvLyBCcm93c2VycyB3aXRob3V0IGBTaGFkb3dSb290YCBzdXBwb3J0LlxuICBpZiAodHlwZW9mIFNoYWRvd1Jvb3QgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFNoYWRvd1Jvb3QgfHwgdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3codmFsdWUpLlNoYWRvd1Jvb3Q7XG59XG5mdW5jdGlvbiBpc092ZXJmbG93RWxlbWVudChlbGVtZW50KSB7XG4gIGNvbnN0IHtcbiAgICBvdmVyZmxvdyxcbiAgICBvdmVyZmxvd1gsXG4gICAgb3ZlcmZsb3dZLFxuICAgIGRpc3BsYXlcbiAgfSA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG4gIHJldHVybiAvYXV0b3xzY3JvbGx8b3ZlcmxheXxoaWRkZW58Y2xpcC8udGVzdChvdmVyZmxvdyArIG92ZXJmbG93WSArIG92ZXJmbG93WCkgJiYgIVsnaW5saW5lJywgJ2NvbnRlbnRzJ10uaW5jbHVkZXMoZGlzcGxheSk7XG59XG5mdW5jdGlvbiBpc1RhYmxlRWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiBbJ3RhYmxlJywgJ3RkJywgJ3RoJ10uaW5jbHVkZXMoZ2V0Tm9kZU5hbWUoZWxlbWVudCkpO1xufVxuZnVuY3Rpb24gaXNUb3BMYXllcihlbGVtZW50KSB7XG4gIHJldHVybiBbJzpwb3BvdmVyLW9wZW4nLCAnOm1vZGFsJ10uc29tZShzZWxlY3RvciA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBlbGVtZW50Lm1hdGNoZXMoc2VsZWN0b3IpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gaXNDb250YWluaW5nQmxvY2soZWxlbWVudE9yQ3NzKSB7XG4gIGNvbnN0IHdlYmtpdCA9IGlzV2ViS2l0KCk7XG4gIGNvbnN0IGNzcyA9IGlzRWxlbWVudChlbGVtZW50T3JDc3MpID8gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50T3JDc3MpIDogZWxlbWVudE9yQ3NzO1xuXG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9Db250YWluaW5nX2Jsb2NrI2lkZW50aWZ5aW5nX3RoZV9jb250YWluaW5nX2Jsb2NrXG4gIHJldHVybiBjc3MudHJhbnNmb3JtICE9PSAnbm9uZScgfHwgY3NzLnBlcnNwZWN0aXZlICE9PSAnbm9uZScgfHwgKGNzcy5jb250YWluZXJUeXBlID8gY3NzLmNvbnRhaW5lclR5cGUgIT09ICdub3JtYWwnIDogZmFsc2UpIHx8ICF3ZWJraXQgJiYgKGNzcy5iYWNrZHJvcEZpbHRlciA/IGNzcy5iYWNrZHJvcEZpbHRlciAhPT0gJ25vbmUnIDogZmFsc2UpIHx8ICF3ZWJraXQgJiYgKGNzcy5maWx0ZXIgPyBjc3MuZmlsdGVyICE9PSAnbm9uZScgOiBmYWxzZSkgfHwgWyd0cmFuc2Zvcm0nLCAncGVyc3BlY3RpdmUnLCAnZmlsdGVyJ10uc29tZSh2YWx1ZSA9PiAoY3NzLndpbGxDaGFuZ2UgfHwgJycpLmluY2x1ZGVzKHZhbHVlKSkgfHwgWydwYWludCcsICdsYXlvdXQnLCAnc3RyaWN0JywgJ2NvbnRlbnQnXS5zb21lKHZhbHVlID0+IChjc3MuY29udGFpbiB8fCAnJykuaW5jbHVkZXModmFsdWUpKTtcbn1cbmZ1bmN0aW9uIGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB7XG4gIGxldCBjdXJyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUoZWxlbWVudCk7XG4gIHdoaWxlIChpc0hUTUxFbGVtZW50KGN1cnJlbnROb2RlKSAmJiAhaXNMYXN0VHJhdmVyc2FibGVOb2RlKGN1cnJlbnROb2RlKSkge1xuICAgIGlmIChpc0NvbnRhaW5pbmdCbG9jayhjdXJyZW50Tm9kZSkpIHtcbiAgICAgIHJldHVybiBjdXJyZW50Tm9kZTtcbiAgICB9IGVsc2UgaWYgKGlzVG9wTGF5ZXIoY3VycmVudE5vZGUpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGN1cnJlbnROb2RlKTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIGlzV2ViS2l0KCkge1xuICBpZiAodHlwZW9mIENTUyA9PT0gJ3VuZGVmaW5lZCcgfHwgIUNTUy5zdXBwb3J0cykgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gQ1NTLnN1cHBvcnRzKCctd2Via2l0LWJhY2tkcm9wLWZpbHRlcicsICdub25lJyk7XG59XG5mdW5jdGlvbiBpc0xhc3RUcmF2ZXJzYWJsZU5vZGUobm9kZSkge1xuICByZXR1cm4gWydodG1sJywgJ2JvZHknLCAnI2RvY3VtZW50J10uaW5jbHVkZXMoZ2V0Tm9kZU5hbWUobm9kZSkpO1xufVxuZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KSB7XG4gIHJldHVybiBnZXRXaW5kb3coZWxlbWVudCkuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcbn1cbmZ1bmN0aW9uIGdldE5vZGVTY3JvbGwoZWxlbWVudCkge1xuICBpZiAoaXNFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNjcm9sbExlZnQ6IGVsZW1lbnQuc2Nyb2xsTGVmdCxcbiAgICAgIHNjcm9sbFRvcDogZWxlbWVudC5zY3JvbGxUb3BcbiAgICB9O1xuICB9XG4gIHJldHVybiB7XG4gICAgc2Nyb2xsTGVmdDogZWxlbWVudC5zY3JvbGxYLFxuICAgIHNjcm9sbFRvcDogZWxlbWVudC5zY3JvbGxZXG4gIH07XG59XG5mdW5jdGlvbiBnZXRQYXJlbnROb2RlKG5vZGUpIHtcbiAgaWYgKGdldE5vZGVOYW1lKG5vZGUpID09PSAnaHRtbCcpIHtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuICBjb25zdCByZXN1bHQgPVxuICAvLyBTdGVwIGludG8gdGhlIHNoYWRvdyBET00gb2YgdGhlIHBhcmVudCBvZiBhIHNsb3R0ZWQgbm9kZS5cbiAgbm9kZS5hc3NpZ25lZFNsb3QgfHxcbiAgLy8gRE9NIEVsZW1lbnQgZGV0ZWN0ZWQuXG4gIG5vZGUucGFyZW50Tm9kZSB8fFxuICAvLyBTaGFkb3dSb290IGRldGVjdGVkLlxuICBpc1NoYWRvd1Jvb3Qobm9kZSkgJiYgbm9kZS5ob3N0IHx8XG4gIC8vIEZhbGxiYWNrLlxuICBnZXREb2N1bWVudEVsZW1lbnQobm9kZSk7XG4gIHJldHVybiBpc1NoYWRvd1Jvb3QocmVzdWx0KSA/IHJlc3VsdC5ob3N0IDogcmVzdWx0O1xufVxuZnVuY3Rpb24gZ2V0TmVhcmVzdE92ZXJmbG93QW5jZXN0b3Iobm9kZSkge1xuICBjb25zdCBwYXJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShub2RlKTtcbiAgaWYgKGlzTGFzdFRyYXZlcnNhYmxlTm9kZShwYXJlbnROb2RlKSkge1xuICAgIHJldHVybiBub2RlLm93bmVyRG9jdW1lbnQgPyBub2RlLm93bmVyRG9jdW1lbnQuYm9keSA6IG5vZGUuYm9keTtcbiAgfVxuICBpZiAoaXNIVE1MRWxlbWVudChwYXJlbnROb2RlKSAmJiBpc092ZXJmbG93RWxlbWVudChwYXJlbnROb2RlKSkge1xuICAgIHJldHVybiBwYXJlbnROb2RlO1xuICB9XG4gIHJldHVybiBnZXROZWFyZXN0T3ZlcmZsb3dBbmNlc3RvcihwYXJlbnROb2RlKTtcbn1cbmZ1bmN0aW9uIGdldE92ZXJmbG93QW5jZXN0b3JzKG5vZGUsIGxpc3QsIHRyYXZlcnNlSWZyYW1lcykge1xuICB2YXIgX25vZGUkb3duZXJEb2N1bWVudDI7XG4gIGlmIChsaXN0ID09PSB2b2lkIDApIHtcbiAgICBsaXN0ID0gW107XG4gIH1cbiAgaWYgKHRyYXZlcnNlSWZyYW1lcyA9PT0gdm9pZCAwKSB7XG4gICAgdHJhdmVyc2VJZnJhbWVzID0gdHJ1ZTtcbiAgfVxuICBjb25zdCBzY3JvbGxhYmxlQW5jZXN0b3IgPSBnZXROZWFyZXN0T3ZlcmZsb3dBbmNlc3Rvcihub2RlKTtcbiAgY29uc3QgaXNCb2R5ID0gc2Nyb2xsYWJsZUFuY2VzdG9yID09PSAoKF9ub2RlJG93bmVyRG9jdW1lbnQyID0gbm9kZS5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX25vZGUkb3duZXJEb2N1bWVudDIuYm9keSk7XG4gIGNvbnN0IHdpbiA9IGdldFdpbmRvdyhzY3JvbGxhYmxlQW5jZXN0b3IpO1xuICBpZiAoaXNCb2R5KSB7XG4gICAgY29uc3QgZnJhbWVFbGVtZW50ID0gZ2V0RnJhbWVFbGVtZW50KHdpbik7XG4gICAgcmV0dXJuIGxpc3QuY29uY2F0KHdpbiwgd2luLnZpc3VhbFZpZXdwb3J0IHx8IFtdLCBpc092ZXJmbG93RWxlbWVudChzY3JvbGxhYmxlQW5jZXN0b3IpID8gc2Nyb2xsYWJsZUFuY2VzdG9yIDogW10sIGZyYW1lRWxlbWVudCAmJiB0cmF2ZXJzZUlmcmFtZXMgPyBnZXRPdmVyZmxvd0FuY2VzdG9ycyhmcmFtZUVsZW1lbnQpIDogW10pO1xuICB9XG4gIHJldHVybiBsaXN0LmNvbmNhdChzY3JvbGxhYmxlQW5jZXN0b3IsIGdldE92ZXJmbG93QW5jZXN0b3JzKHNjcm9sbGFibGVBbmNlc3RvciwgW10sIHRyYXZlcnNlSWZyYW1lcykpO1xufVxuZnVuY3Rpb24gZ2V0RnJhbWVFbGVtZW50KHdpbikge1xuICByZXR1cm4gd2luLnBhcmVudCAmJiBPYmplY3QuZ2V0UHJvdG90eXBlT2Yod2luLnBhcmVudCkgPyB3aW4uZnJhbWVFbGVtZW50IDogbnVsbDtcbn1cblxuZXhwb3J0IHsgZ2V0Q29tcHV0ZWRTdHlsZSwgZ2V0Q29udGFpbmluZ0Jsb2NrLCBnZXREb2N1bWVudEVsZW1lbnQsIGdldEZyYW1lRWxlbWVudCwgZ2V0TmVhcmVzdE92ZXJmbG93QW5jZXN0b3IsIGdldE5vZGVOYW1lLCBnZXROb2RlU2Nyb2xsLCBnZXRPdmVyZmxvd0FuY2VzdG9ycywgZ2V0UGFyZW50Tm9kZSwgZ2V0V2luZG93LCBpc0NvbnRhaW5pbmdCbG9jaywgaXNFbGVtZW50LCBpc0hUTUxFbGVtZW50LCBpc0xhc3RUcmF2ZXJzYWJsZU5vZGUsIGlzTm9kZSwgaXNPdmVyZmxvd0VsZW1lbnQsIGlzU2hhZG93Um9vdCwgaXNUYWJsZUVsZW1lbnQsIGlzVG9wTGF5ZXIsIGlzV2ViS2l0IH07XG4iLCAiaW1wb3J0IHsgcmVjdFRvQ2xpZW50UmVjdCwgZGV0ZWN0T3ZlcmZsb3cgYXMgZGV0ZWN0T3ZlcmZsb3ckMSwgb2Zmc2V0IGFzIG9mZnNldCQxLCBhdXRvUGxhY2VtZW50IGFzIGF1dG9QbGFjZW1lbnQkMSwgc2hpZnQgYXMgc2hpZnQkMSwgZmxpcCBhcyBmbGlwJDEsIHNpemUgYXMgc2l6ZSQxLCBoaWRlIGFzIGhpZGUkMSwgYXJyb3cgYXMgYXJyb3ckMSwgaW5saW5lIGFzIGlubGluZSQxLCBsaW1pdFNoaWZ0IGFzIGxpbWl0U2hpZnQkMSwgY29tcHV0ZVBvc2l0aW9uIGFzIGNvbXB1dGVQb3NpdGlvbiQxIH0gZnJvbSAnQGZsb2F0aW5nLXVpL2NvcmUnO1xuaW1wb3J0IHsgcm91bmQsIGNyZWF0ZUNvb3JkcywgbWF4LCBtaW4sIGZsb29yIH0gZnJvbSAnQGZsb2F0aW5nLXVpL3V0aWxzJztcbmltcG9ydCB7IGdldENvbXB1dGVkU3R5bGUsIGlzSFRNTEVsZW1lbnQsIGlzRWxlbWVudCwgZ2V0V2luZG93LCBpc1dlYktpdCwgZ2V0RnJhbWVFbGVtZW50LCBnZXREb2N1bWVudEVsZW1lbnQsIGlzVG9wTGF5ZXIsIGdldE5vZGVOYW1lLCBpc092ZXJmbG93RWxlbWVudCwgZ2V0Tm9kZVNjcm9sbCwgZ2V0T3ZlcmZsb3dBbmNlc3RvcnMsIGdldFBhcmVudE5vZGUsIGlzTGFzdFRyYXZlcnNhYmxlTm9kZSwgaXNDb250YWluaW5nQmxvY2ssIGlzVGFibGVFbGVtZW50LCBnZXRDb250YWluaW5nQmxvY2sgfSBmcm9tICdAZmxvYXRpbmctdWkvdXRpbHMvZG9tJztcbmV4cG9ydCB7IGdldE92ZXJmbG93QW5jZXN0b3JzIH0gZnJvbSAnQGZsb2F0aW5nLXVpL3V0aWxzL2RvbSc7XG5cbmZ1bmN0aW9uIGdldENzc0RpbWVuc2lvbnMoZWxlbWVudCkge1xuICBjb25zdCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xuICAvLyBJbiB0ZXN0aW5nIGVudmlyb25tZW50cywgdGhlIGB3aWR0aGAgYW5kIGBoZWlnaHRgIHByb3BlcnRpZXMgYXJlIGVtcHR5XG4gIC8vIHN0cmluZ3MgZm9yIFNWRyBlbGVtZW50cywgcmV0dXJuaW5nIE5hTi4gRmFsbGJhY2sgdG8gYDBgIGluIHRoaXMgY2FzZS5cbiAgbGV0IHdpZHRoID0gcGFyc2VGbG9hdChjc3Mud2lkdGgpIHx8IDA7XG4gIGxldCBoZWlnaHQgPSBwYXJzZUZsb2F0KGNzcy5oZWlnaHQpIHx8IDA7XG4gIGNvbnN0IGhhc09mZnNldCA9IGlzSFRNTEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IG9mZnNldFdpZHRoID0gaGFzT2Zmc2V0ID8gZWxlbWVudC5vZmZzZXRXaWR0aCA6IHdpZHRoO1xuICBjb25zdCBvZmZzZXRIZWlnaHQgPSBoYXNPZmZzZXQgPyBlbGVtZW50Lm9mZnNldEhlaWdodCA6IGhlaWdodDtcbiAgY29uc3Qgc2hvdWxkRmFsbGJhY2sgPSByb3VuZCh3aWR0aCkgIT09IG9mZnNldFdpZHRoIHx8IHJvdW5kKGhlaWdodCkgIT09IG9mZnNldEhlaWdodDtcbiAgaWYgKHNob3VsZEZhbGxiYWNrKSB7XG4gICAgd2lkdGggPSBvZmZzZXRXaWR0aDtcbiAgICBoZWlnaHQgPSBvZmZzZXRIZWlnaHQ7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgJDogc2hvdWxkRmFsbGJhY2tcbiAgfTtcbn1cblxuZnVuY3Rpb24gdW53cmFwRWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiAhaXNFbGVtZW50KGVsZW1lbnQpID8gZWxlbWVudC5jb250ZXh0RWxlbWVudCA6IGVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGdldFNjYWxlKGVsZW1lbnQpIHtcbiAgY29uc3QgZG9tRWxlbWVudCA9IHVud3JhcEVsZW1lbnQoZWxlbWVudCk7XG4gIGlmICghaXNIVE1MRWxlbWVudChkb21FbGVtZW50KSkge1xuICAgIHJldHVybiBjcmVhdGVDb29yZHMoMSk7XG4gIH1cbiAgY29uc3QgcmVjdCA9IGRvbUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIGNvbnN0IHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgJFxuICB9ID0gZ2V0Q3NzRGltZW5zaW9ucyhkb21FbGVtZW50KTtcbiAgbGV0IHggPSAoJCA/IHJvdW5kKHJlY3Qud2lkdGgpIDogcmVjdC53aWR0aCkgLyB3aWR0aDtcbiAgbGV0IHkgPSAoJCA/IHJvdW5kKHJlY3QuaGVpZ2h0KSA6IHJlY3QuaGVpZ2h0KSAvIGhlaWdodDtcblxuICAvLyAwLCBOYU4sIG9yIEluZmluaXR5IHNob3VsZCBhbHdheXMgZmFsbGJhY2sgdG8gMS5cblxuICBpZiAoIXggfHwgIU51bWJlci5pc0Zpbml0ZSh4KSkge1xuICAgIHggPSAxO1xuICB9XG4gIGlmICgheSB8fCAhTnVtYmVyLmlzRmluaXRlKHkpKSB7XG4gICAgeSA9IDE7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cblxuY29uc3Qgbm9PZmZzZXRzID0gLyojX19QVVJFX18qL2NyZWF0ZUNvb3JkcygwKTtcbmZ1bmN0aW9uIGdldFZpc3VhbE9mZnNldHMoZWxlbWVudCkge1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIGlmICghaXNXZWJLaXQoKSB8fCAhd2luLnZpc3VhbFZpZXdwb3J0KSB7XG4gICAgcmV0dXJuIG5vT2Zmc2V0cztcbiAgfVxuICByZXR1cm4ge1xuICAgIHg6IHdpbi52aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0LFxuICAgIHk6IHdpbi52aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3BcbiAgfTtcbn1cbmZ1bmN0aW9uIHNob3VsZEFkZFZpc3VhbE9mZnNldHMoZWxlbWVudCwgaXNGaXhlZCwgZmxvYXRpbmdPZmZzZXRQYXJlbnQpIHtcbiAgaWYgKGlzRml4ZWQgPT09IHZvaWQgMCkge1xuICAgIGlzRml4ZWQgPSBmYWxzZTtcbiAgfVxuICBpZiAoIWZsb2F0aW5nT2Zmc2V0UGFyZW50IHx8IGlzRml4ZWQgJiYgZmxvYXRpbmdPZmZzZXRQYXJlbnQgIT09IGdldFdpbmRvdyhlbGVtZW50KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gaXNGaXhlZDtcbn1cblxuZnVuY3Rpb24gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIGluY2x1ZGVTY2FsZSwgaXNGaXhlZFN0cmF0ZWd5LCBvZmZzZXRQYXJlbnQpIHtcbiAgaWYgKGluY2x1ZGVTY2FsZSA9PT0gdm9pZCAwKSB7XG4gICAgaW5jbHVkZVNjYWxlID0gZmFsc2U7XG4gIH1cbiAgaWYgKGlzRml4ZWRTdHJhdGVneSA9PT0gdm9pZCAwKSB7XG4gICAgaXNGaXhlZFN0cmF0ZWd5ID0gZmFsc2U7XG4gIH1cbiAgY29uc3QgY2xpZW50UmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSB1bndyYXBFbGVtZW50KGVsZW1lbnQpO1xuICBsZXQgc2NhbGUgPSBjcmVhdGVDb29yZHMoMSk7XG4gIGlmIChpbmNsdWRlU2NhbGUpIHtcbiAgICBpZiAob2Zmc2V0UGFyZW50KSB7XG4gICAgICBpZiAoaXNFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgICAgc2NhbGUgPSBnZXRTY2FsZShvZmZzZXRQYXJlbnQpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzY2FsZSA9IGdldFNjYWxlKGVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICBjb25zdCB2aXN1YWxPZmZzZXRzID0gc2hvdWxkQWRkVmlzdWFsT2Zmc2V0cyhkb21FbGVtZW50LCBpc0ZpeGVkU3RyYXRlZ3ksIG9mZnNldFBhcmVudCkgPyBnZXRWaXN1YWxPZmZzZXRzKGRvbUVsZW1lbnQpIDogY3JlYXRlQ29vcmRzKDApO1xuICBsZXQgeCA9IChjbGllbnRSZWN0LmxlZnQgKyB2aXN1YWxPZmZzZXRzLngpIC8gc2NhbGUueDtcbiAgbGV0IHkgPSAoY2xpZW50UmVjdC50b3AgKyB2aXN1YWxPZmZzZXRzLnkpIC8gc2NhbGUueTtcbiAgbGV0IHdpZHRoID0gY2xpZW50UmVjdC53aWR0aCAvIHNjYWxlLng7XG4gIGxldCBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodCAvIHNjYWxlLnk7XG4gIGlmIChkb21FbGVtZW50KSB7XG4gICAgY29uc3Qgd2luID0gZ2V0V2luZG93KGRvbUVsZW1lbnQpO1xuICAgIGNvbnN0IG9mZnNldFdpbiA9IG9mZnNldFBhcmVudCAmJiBpc0VsZW1lbnQob2Zmc2V0UGFyZW50KSA/IGdldFdpbmRvdyhvZmZzZXRQYXJlbnQpIDogb2Zmc2V0UGFyZW50O1xuICAgIGxldCBjdXJyZW50V2luID0gd2luO1xuICAgIGxldCBjdXJyZW50SUZyYW1lID0gZ2V0RnJhbWVFbGVtZW50KGN1cnJlbnRXaW4pO1xuICAgIHdoaWxlIChjdXJyZW50SUZyYW1lICYmIG9mZnNldFBhcmVudCAmJiBvZmZzZXRXaW4gIT09IGN1cnJlbnRXaW4pIHtcbiAgICAgIGNvbnN0IGlmcmFtZVNjYWxlID0gZ2V0U2NhbGUoY3VycmVudElGcmFtZSk7XG4gICAgICBjb25zdCBpZnJhbWVSZWN0ID0gY3VycmVudElGcmFtZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIGNvbnN0IGNzcyA9IGdldENvbXB1dGVkU3R5bGUoY3VycmVudElGcmFtZSk7XG4gICAgICBjb25zdCBsZWZ0ID0gaWZyYW1lUmVjdC5sZWZ0ICsgKGN1cnJlbnRJRnJhbWUuY2xpZW50TGVmdCArIHBhcnNlRmxvYXQoY3NzLnBhZGRpbmdMZWZ0KSkgKiBpZnJhbWVTY2FsZS54O1xuICAgICAgY29uc3QgdG9wID0gaWZyYW1lUmVjdC50b3AgKyAoY3VycmVudElGcmFtZS5jbGllbnRUb3AgKyBwYXJzZUZsb2F0KGNzcy5wYWRkaW5nVG9wKSkgKiBpZnJhbWVTY2FsZS55O1xuICAgICAgeCAqPSBpZnJhbWVTY2FsZS54O1xuICAgICAgeSAqPSBpZnJhbWVTY2FsZS55O1xuICAgICAgd2lkdGggKj0gaWZyYW1lU2NhbGUueDtcbiAgICAgIGhlaWdodCAqPSBpZnJhbWVTY2FsZS55O1xuICAgICAgeCArPSBsZWZ0O1xuICAgICAgeSArPSB0b3A7XG4gICAgICBjdXJyZW50V2luID0gZ2V0V2luZG93KGN1cnJlbnRJRnJhbWUpO1xuICAgICAgY3VycmVudElGcmFtZSA9IGdldEZyYW1lRWxlbWVudChjdXJyZW50V2luKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlY3RUb0NsaWVudFJlY3Qoe1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRPZmZzZXRQYXJlbnRSZWxhdGl2ZVJlY3RUb1ZpZXdwb3J0UmVsYXRpdmVSZWN0KF9yZWYpIHtcbiAgbGV0IHtcbiAgICBlbGVtZW50cyxcbiAgICByZWN0LFxuICAgIG9mZnNldFBhcmVudCxcbiAgICBzdHJhdGVneVxuICB9ID0gX3JlZjtcbiAgY29uc3QgaXNGaXhlZCA9IHN0cmF0ZWd5ID09PSAnZml4ZWQnO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgY29uc3QgdG9wTGF5ZXIgPSBlbGVtZW50cyA/IGlzVG9wTGF5ZXIoZWxlbWVudHMuZmxvYXRpbmcpIDogZmFsc2U7XG4gIGlmIChvZmZzZXRQYXJlbnQgPT09IGRvY3VtZW50RWxlbWVudCB8fCB0b3BMYXllciAmJiBpc0ZpeGVkKSB7XG4gICAgcmV0dXJuIHJlY3Q7XG4gIH1cbiAgbGV0IHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICBsZXQgc2NhbGUgPSBjcmVhdGVDb29yZHMoMSk7XG4gIGNvbnN0IG9mZnNldHMgPSBjcmVhdGVDb29yZHMoMCk7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBpZiAoaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgfHwgIWlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ICYmICFpc0ZpeGVkKSB7XG4gICAgaWYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgIT09ICdib2R5JyB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50KTtcbiAgICAgIHNjYWxlID0gZ2V0U2NhbGUob2Zmc2V0UGFyZW50KTtcbiAgICAgIG9mZnNldHMueCA9IG9mZnNldFJlY3QueCArIG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ID0gb2Zmc2V0UmVjdC55ICsgb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogcmVjdC53aWR0aCAqIHNjYWxlLngsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodCAqIHNjYWxlLnksXG4gICAgeDogcmVjdC54ICogc2NhbGUueCAtIHNjcm9sbC5zY3JvbGxMZWZ0ICogc2NhbGUueCArIG9mZnNldHMueCxcbiAgICB5OiByZWN0LnkgKiBzY2FsZS55IC0gc2Nyb2xsLnNjcm9sbFRvcCAqIHNjYWxlLnkgKyBvZmZzZXRzLnlcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0Q2xpZW50UmVjdHMoZWxlbWVudCkge1xuICByZXR1cm4gQXJyYXkuZnJvbShlbGVtZW50LmdldENsaWVudFJlY3RzKCkpO1xufVxuXG5mdW5jdGlvbiBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpIHtcbiAgLy8gSWYgPGh0bWw+IGhhcyBhIENTUyB3aWR0aCBncmVhdGVyIHRoYW4gdGhlIHZpZXdwb3J0LCB0aGVuIHRoaXMgd2lsbCBiZVxuICAvLyBpbmNvcnJlY3QgZm9yIFJUTC5cbiAgcmV0dXJuIGdldEJvdW5kaW5nQ2xpZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpLmxlZnQgKyBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpLnNjcm9sbExlZnQ7XG59XG5cbi8vIEdldHMgdGhlIGVudGlyZSBzaXplIG9mIHRoZSBzY3JvbGxhYmxlIGRvY3VtZW50IGFyZWEsIGV2ZW4gZXh0ZW5kaW5nIG91dHNpZGVcbi8vIG9mIHRoZSBgPGh0bWw+YCBhbmQgYDxib2R5PmAgcmVjdCBib3VuZHMgaWYgaG9yaXpvbnRhbGx5IHNjcm9sbGFibGUuXG5mdW5jdGlvbiBnZXREb2N1bWVudFJlY3QoZWxlbWVudCkge1xuICBjb25zdCBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICBjb25zdCBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpO1xuICBjb25zdCBib2R5ID0gZWxlbWVudC5vd25lckRvY3VtZW50LmJvZHk7XG4gIGNvbnN0IHdpZHRoID0gbWF4KGh0bWwuc2Nyb2xsV2lkdGgsIGh0bWwuY2xpZW50V2lkdGgsIGJvZHkuc2Nyb2xsV2lkdGgsIGJvZHkuY2xpZW50V2lkdGgpO1xuICBjb25zdCBoZWlnaHQgPSBtYXgoaHRtbC5zY3JvbGxIZWlnaHQsIGh0bWwuY2xpZW50SGVpZ2h0LCBib2R5LnNjcm9sbEhlaWdodCwgYm9keS5jbGllbnRIZWlnaHQpO1xuICBsZXQgeCA9IC1zY3JvbGwuc2Nyb2xsTGVmdCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCk7XG4gIGNvbnN0IHkgPSAtc2Nyb2xsLnNjcm9sbFRvcDtcbiAgaWYgKGdldENvbXB1dGVkU3R5bGUoYm9keSkuZGlyZWN0aW9uID09PSAncnRsJykge1xuICAgIHggKz0gbWF4KGh0bWwuY2xpZW50V2lkdGgsIGJvZHkuY2xpZW50V2lkdGgpIC0gd2lkdGg7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgeCxcbiAgICB5XG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkge1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIGNvbnN0IGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0O1xuICBsZXQgd2lkdGggPSBodG1sLmNsaWVudFdpZHRoO1xuICBsZXQgaGVpZ2h0ID0gaHRtbC5jbGllbnRIZWlnaHQ7XG4gIGxldCB4ID0gMDtcbiAgbGV0IHkgPSAwO1xuICBpZiAodmlzdWFsVmlld3BvcnQpIHtcbiAgICB3aWR0aCA9IHZpc3VhbFZpZXdwb3J0LndpZHRoO1xuICAgIGhlaWdodCA9IHZpc3VhbFZpZXdwb3J0LmhlaWdodDtcbiAgICBjb25zdCB2aXN1YWxWaWV3cG9ydEJhc2VkID0gaXNXZWJLaXQoKTtcbiAgICBpZiAoIXZpc3VhbFZpZXdwb3J0QmFzZWQgfHwgdmlzdWFsVmlld3BvcnRCYXNlZCAmJiBzdHJhdGVneSA9PT0gJ2ZpeGVkJykge1xuICAgICAgeCA9IHZpc3VhbFZpZXdwb3J0Lm9mZnNldExlZnQ7XG4gICAgICB5ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0VG9wO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cblxuLy8gUmV0dXJucyB0aGUgaW5uZXIgY2xpZW50IHJlY3QsIHN1YnRyYWN0aW5nIHNjcm9sbGJhcnMgaWYgcHJlc2VudC5cbmZ1bmN0aW9uIGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSB7XG4gIGNvbnN0IGNsaWVudFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgdHJ1ZSwgc3RyYXRlZ3kgPT09ICdmaXhlZCcpO1xuICBjb25zdCB0b3AgPSBjbGllbnRSZWN0LnRvcCArIGVsZW1lbnQuY2xpZW50VG9wO1xuICBjb25zdCBsZWZ0ID0gY2xpZW50UmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRMZWZ0O1xuICBjb25zdCBzY2FsZSA9IGlzSFRNTEVsZW1lbnQoZWxlbWVudCkgPyBnZXRTY2FsZShlbGVtZW50KSA6IGNyZWF0ZUNvb3JkcygxKTtcbiAgY29uc3Qgd2lkdGggPSBlbGVtZW50LmNsaWVudFdpZHRoICogc2NhbGUueDtcbiAgY29uc3QgaGVpZ2h0ID0gZWxlbWVudC5jbGllbnRIZWlnaHQgKiBzY2FsZS55O1xuICBjb25zdCB4ID0gbGVmdCAqIHNjYWxlLng7XG4gIGNvbnN0IHkgPSB0b3AgKiBzY2FsZS55O1xuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldENsaWVudFJlY3RGcm9tQ2xpcHBpbmdBbmNlc3RvcihlbGVtZW50LCBjbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSkge1xuICBsZXQgcmVjdDtcbiAgaWYgKGNsaXBwaW5nQW5jZXN0b3IgPT09ICd2aWV3cG9ydCcpIHtcbiAgICByZWN0ID0gZ2V0Vmlld3BvcnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KTtcbiAgfSBlbHNlIGlmIChjbGlwcGluZ0FuY2VzdG9yID09PSAnZG9jdW1lbnQnKSB7XG4gICAgcmVjdCA9IGdldERvY3VtZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpO1xuICB9IGVsc2UgaWYgKGlzRWxlbWVudChjbGlwcGluZ0FuY2VzdG9yKSkge1xuICAgIHJlY3QgPSBnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdChjbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgdmlzdWFsT2Zmc2V0cyA9IGdldFZpc3VhbE9mZnNldHMoZWxlbWVudCk7XG4gICAgcmVjdCA9IHtcbiAgICAgIC4uLmNsaXBwaW5nQW5jZXN0b3IsXG4gICAgICB4OiBjbGlwcGluZ0FuY2VzdG9yLnggLSB2aXN1YWxPZmZzZXRzLngsXG4gICAgICB5OiBjbGlwcGluZ0FuY2VzdG9yLnkgLSB2aXN1YWxPZmZzZXRzLnlcbiAgICB9O1xuICB9XG4gIHJldHVybiByZWN0VG9DbGllbnRSZWN0KHJlY3QpO1xufVxuZnVuY3Rpb24gaGFzRml4ZWRQb3NpdGlvbkFuY2VzdG9yKGVsZW1lbnQsIHN0b3BOb2RlKSB7XG4gIGNvbnN0IHBhcmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuICBpZiAocGFyZW50Tm9kZSA9PT0gc3RvcE5vZGUgfHwgIWlzRWxlbWVudChwYXJlbnROb2RlKSB8fCBpc0xhc3RUcmF2ZXJzYWJsZU5vZGUocGFyZW50Tm9kZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIGdldENvbXB1dGVkU3R5bGUocGFyZW50Tm9kZSkucG9zaXRpb24gPT09ICdmaXhlZCcgfHwgaGFzRml4ZWRQb3NpdGlvbkFuY2VzdG9yKHBhcmVudE5vZGUsIHN0b3BOb2RlKTtcbn1cblxuLy8gQSBcImNsaXBwaW5nIGFuY2VzdG9yXCIgaXMgYW4gYG92ZXJmbG93YCBlbGVtZW50IHdpdGggdGhlIGNoYXJhY3RlcmlzdGljIG9mXG4vLyBjbGlwcGluZyAob3IgaGlkaW5nKSBjaGlsZCBlbGVtZW50cy4gVGhpcyByZXR1cm5zIGFsbCBjbGlwcGluZyBhbmNlc3RvcnNcbi8vIG9mIHRoZSBnaXZlbiBlbGVtZW50IHVwIHRoZSB0cmVlLlxuZnVuY3Rpb24gZ2V0Q2xpcHBpbmdFbGVtZW50QW5jZXN0b3JzKGVsZW1lbnQsIGNhY2hlKSB7XG4gIGNvbnN0IGNhY2hlZFJlc3VsdCA9IGNhY2hlLmdldChlbGVtZW50KTtcbiAgaWYgKGNhY2hlZFJlc3VsdCkge1xuICAgIHJldHVybiBjYWNoZWRSZXN1bHQ7XG4gIH1cbiAgbGV0IHJlc3VsdCA9IGdldE92ZXJmbG93QW5jZXN0b3JzKGVsZW1lbnQsIFtdLCBmYWxzZSkuZmlsdGVyKGVsID0+IGlzRWxlbWVudChlbCkgJiYgZ2V0Tm9kZU5hbWUoZWwpICE9PSAnYm9keScpO1xuICBsZXQgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBudWxsO1xuICBjb25zdCBlbGVtZW50SXNGaXhlZCA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24gPT09ICdmaXhlZCc7XG4gIGxldCBjdXJyZW50Tm9kZSA9IGVsZW1lbnRJc0ZpeGVkID8gZ2V0UGFyZW50Tm9kZShlbGVtZW50KSA6IGVsZW1lbnQ7XG5cbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NvbnRhaW5pbmdfYmxvY2sjaWRlbnRpZnlpbmdfdGhlX2NvbnRhaW5pbmdfYmxvY2tcbiAgd2hpbGUgKGlzRWxlbWVudChjdXJyZW50Tm9kZSkgJiYgIWlzTGFzdFRyYXZlcnNhYmxlTm9kZShjdXJyZW50Tm9kZSkpIHtcbiAgICBjb25zdCBjb21wdXRlZFN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShjdXJyZW50Tm9kZSk7XG4gICAgY29uc3QgY3VycmVudE5vZGVJc0NvbnRhaW5pbmcgPSBpc0NvbnRhaW5pbmdCbG9jayhjdXJyZW50Tm9kZSk7XG4gICAgaWYgKCFjdXJyZW50Tm9kZUlzQ29udGFpbmluZyAmJiBjb21wdXRlZFN0eWxlLnBvc2l0aW9uID09PSAnZml4ZWQnKSB7XG4gICAgICBjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZSA9IG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHNob3VsZERyb3BDdXJyZW50Tm9kZSA9IGVsZW1lbnRJc0ZpeGVkID8gIWN1cnJlbnROb2RlSXNDb250YWluaW5nICYmICFjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZSA6ICFjdXJyZW50Tm9kZUlzQ29udGFpbmluZyAmJiBjb21wdXRlZFN0eWxlLnBvc2l0aW9uID09PSAnc3RhdGljJyAmJiAhIWN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlICYmIFsnYWJzb2x1dGUnLCAnZml4ZWQnXS5pbmNsdWRlcyhjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZS5wb3NpdGlvbikgfHwgaXNPdmVyZmxvd0VsZW1lbnQoY3VycmVudE5vZGUpICYmICFjdXJyZW50Tm9kZUlzQ29udGFpbmluZyAmJiBoYXNGaXhlZFBvc2l0aW9uQW5jZXN0b3IoZWxlbWVudCwgY3VycmVudE5vZGUpO1xuICAgIGlmIChzaG91bGREcm9wQ3VycmVudE5vZGUpIHtcbiAgICAgIC8vIERyb3Agbm9uLWNvbnRhaW5pbmcgYmxvY2tzLlxuICAgICAgcmVzdWx0ID0gcmVzdWx0LmZpbHRlcihhbmNlc3RvciA9PiBhbmNlc3RvciAhPT0gY3VycmVudE5vZGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZWNvcmQgbGFzdCBjb250YWluaW5nIGJsb2NrIGZvciBuZXh0IGl0ZXJhdGlvbi5cbiAgICAgIGN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlID0gY29tcHV0ZWRTdHlsZTtcbiAgICB9XG4gICAgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGN1cnJlbnROb2RlKTtcbiAgfVxuICBjYWNoZS5zZXQoZWxlbWVudCwgcmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLy8gR2V0cyB0aGUgbWF4aW11bSBhcmVhIHRoYXQgdGhlIGVsZW1lbnQgaXMgdmlzaWJsZSBpbiBkdWUgdG8gYW55IG51bWJlciBvZlxuLy8gY2xpcHBpbmcgYW5jZXN0b3JzLlxuZnVuY3Rpb24gZ2V0Q2xpcHBpbmdSZWN0KF9yZWYpIHtcbiAgbGV0IHtcbiAgICBlbGVtZW50LFxuICAgIGJvdW5kYXJ5LFxuICAgIHJvb3RCb3VuZGFyeSxcbiAgICBzdHJhdGVneVxuICB9ID0gX3JlZjtcbiAgY29uc3QgZWxlbWVudENsaXBwaW5nQW5jZXN0b3JzID0gYm91bmRhcnkgPT09ICdjbGlwcGluZ0FuY2VzdG9ycycgPyBpc1RvcExheWVyKGVsZW1lbnQpID8gW10gOiBnZXRDbGlwcGluZ0VsZW1lbnRBbmNlc3RvcnMoZWxlbWVudCwgdGhpcy5fYykgOiBbXS5jb25jYXQoYm91bmRhcnkpO1xuICBjb25zdCBjbGlwcGluZ0FuY2VzdG9ycyA9IFsuLi5lbGVtZW50Q2xpcHBpbmdBbmNlc3RvcnMsIHJvb3RCb3VuZGFyeV07XG4gIGNvbnN0IGZpcnN0Q2xpcHBpbmdBbmNlc3RvciA9IGNsaXBwaW5nQW5jZXN0b3JzWzBdO1xuICBjb25zdCBjbGlwcGluZ1JlY3QgPSBjbGlwcGluZ0FuY2VzdG9ycy5yZWR1Y2UoKGFjY1JlY3QsIGNsaXBwaW5nQW5jZXN0b3IpID0+IHtcbiAgICBjb25zdCByZWN0ID0gZ2V0Q2xpZW50UmVjdEZyb21DbGlwcGluZ0FuY2VzdG9yKGVsZW1lbnQsIGNsaXBwaW5nQW5jZXN0b3IsIHN0cmF0ZWd5KTtcbiAgICBhY2NSZWN0LnRvcCA9IG1heChyZWN0LnRvcCwgYWNjUmVjdC50b3ApO1xuICAgIGFjY1JlY3QucmlnaHQgPSBtaW4ocmVjdC5yaWdodCwgYWNjUmVjdC5yaWdodCk7XG4gICAgYWNjUmVjdC5ib3R0b20gPSBtaW4ocmVjdC5ib3R0b20sIGFjY1JlY3QuYm90dG9tKTtcbiAgICBhY2NSZWN0LmxlZnQgPSBtYXgocmVjdC5sZWZ0LCBhY2NSZWN0LmxlZnQpO1xuICAgIHJldHVybiBhY2NSZWN0O1xuICB9LCBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgZmlyc3RDbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSkpO1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdCxcbiAgICBoZWlnaHQ6IGNsaXBwaW5nUmVjdC5ib3R0b20gLSBjbGlwcGluZ1JlY3QudG9wLFxuICAgIHg6IGNsaXBwaW5nUmVjdC5sZWZ0LFxuICAgIHk6IGNsaXBwaW5nUmVjdC50b3BcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RGltZW5zaW9ucyhlbGVtZW50KSB7XG4gIGNvbnN0IHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfSA9IGdldENzc0RpbWVuc2lvbnMoZWxlbWVudCk7XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KGVsZW1lbnQsIG9mZnNldFBhcmVudCwgc3RyYXRlZ3kpIHtcbiAgY29uc3QgaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIGNvbnN0IGRvY3VtZW50RWxlbWVudCA9IGdldERvY3VtZW50RWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBpc0ZpeGVkID0gc3RyYXRlZ3kgPT09ICdmaXhlZCc7XG4gIGNvbnN0IHJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgdHJ1ZSwgaXNGaXhlZCwgb2Zmc2V0UGFyZW50KTtcbiAgbGV0IHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICBjb25zdCBvZmZzZXRzID0gY3JlYXRlQ29vcmRzKDApO1xuICBpZiAoaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgfHwgIWlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ICYmICFpc0ZpeGVkKSB7XG4gICAgaWYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgIT09ICdib2R5JyB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCkge1xuICAgICAgY29uc3Qgb2Zmc2V0UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChvZmZzZXRQYXJlbnQsIHRydWUsIGlzRml4ZWQsIG9mZnNldFBhcmVudCk7XG4gICAgICBvZmZzZXRzLnggPSBvZmZzZXRSZWN0LnggKyBvZmZzZXRQYXJlbnQuY2xpZW50TGVmdDtcbiAgICAgIG9mZnNldHMueSA9IG9mZnNldFJlY3QueSArIG9mZnNldFBhcmVudC5jbGllbnRUb3A7XG4gICAgfSBlbHNlIGlmIChkb2N1bWVudEVsZW1lbnQpIHtcbiAgICAgIG9mZnNldHMueCA9IGdldFdpbmRvd1Njcm9sbEJhclgoZG9jdW1lbnRFbGVtZW50KTtcbiAgICB9XG4gIH1cbiAgY29uc3QgeCA9IHJlY3QubGVmdCArIHNjcm9sbC5zY3JvbGxMZWZ0IC0gb2Zmc2V0cy54O1xuICBjb25zdCB5ID0gcmVjdC50b3AgKyBzY3JvbGwuc2Nyb2xsVG9wIC0gb2Zmc2V0cy55O1xuICByZXR1cm4ge1xuICAgIHgsXG4gICAgeSxcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gIH07XG59XG5cbmZ1bmN0aW9uIGlzU3RhdGljUG9zaXRpb25lZChlbGVtZW50KSB7XG4gIHJldHVybiBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLnBvc2l0aW9uID09PSAnc3RhdGljJztcbn1cblxuZnVuY3Rpb24gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50LCBwb2x5ZmlsbCkge1xuICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkgfHwgZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS5wb3NpdGlvbiA9PT0gJ2ZpeGVkJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGlmIChwb2x5ZmlsbCkge1xuICAgIHJldHVybiBwb2x5ZmlsbChlbGVtZW50KTtcbiAgfVxuICByZXR1cm4gZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG59XG5cbi8vIEdldHMgdGhlIGNsb3Nlc3QgYW5jZXN0b3IgcG9zaXRpb25lZCBlbGVtZW50LiBIYW5kbGVzIHNvbWUgZWRnZSBjYXNlcyxcbi8vIHN1Y2ggYXMgdGFibGUgYW5jZXN0b3JzIGFuZCBjcm9zcyBicm93c2VyIGJ1Z3MuXG5mdW5jdGlvbiBnZXRPZmZzZXRQYXJlbnQoZWxlbWVudCwgcG9seWZpbGwpIHtcbiAgY29uc3Qgd2luID0gZ2V0V2luZG93KGVsZW1lbnQpO1xuICBpZiAoaXNUb3BMYXllcihlbGVtZW50KSkge1xuICAgIHJldHVybiB3aW47XG4gIH1cbiAgaWYgKCFpc0hUTUxFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgbGV0IHN2Z09mZnNldFBhcmVudCA9IGdldFBhcmVudE5vZGUoZWxlbWVudCk7XG4gICAgd2hpbGUgKHN2Z09mZnNldFBhcmVudCAmJiAhaXNMYXN0VHJhdmVyc2FibGVOb2RlKHN2Z09mZnNldFBhcmVudCkpIHtcbiAgICAgIGlmIChpc0VsZW1lbnQoc3ZnT2Zmc2V0UGFyZW50KSAmJiAhaXNTdGF0aWNQb3NpdGlvbmVkKHN2Z09mZnNldFBhcmVudCkpIHtcbiAgICAgICAgcmV0dXJuIHN2Z09mZnNldFBhcmVudDtcbiAgICAgIH1cbiAgICAgIHN2Z09mZnNldFBhcmVudCA9IGdldFBhcmVudE5vZGUoc3ZnT2Zmc2V0UGFyZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHdpbjtcbiAgfVxuICBsZXQgb2Zmc2V0UGFyZW50ID0gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50LCBwb2x5ZmlsbCk7XG4gIHdoaWxlIChvZmZzZXRQYXJlbnQgJiYgaXNUYWJsZUVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBpc1N0YXRpY1Bvc2l0aW9uZWQob2Zmc2V0UGFyZW50KSkge1xuICAgIG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQob2Zmc2V0UGFyZW50LCBwb2x5ZmlsbCk7XG4gIH1cbiAgaWYgKG9mZnNldFBhcmVudCAmJiBpc0xhc3RUcmF2ZXJzYWJsZU5vZGUob2Zmc2V0UGFyZW50KSAmJiBpc1N0YXRpY1Bvc2l0aW9uZWQob2Zmc2V0UGFyZW50KSAmJiAhaXNDb250YWluaW5nQmxvY2sob2Zmc2V0UGFyZW50KSkge1xuICAgIHJldHVybiB3aW47XG4gIH1cbiAgcmV0dXJuIG9mZnNldFBhcmVudCB8fCBnZXRDb250YWluaW5nQmxvY2soZWxlbWVudCkgfHwgd2luO1xufVxuXG5jb25zdCBnZXRFbGVtZW50UmVjdHMgPSBhc3luYyBmdW5jdGlvbiAoZGF0YSkge1xuICBjb25zdCBnZXRPZmZzZXRQYXJlbnRGbiA9IHRoaXMuZ2V0T2Zmc2V0UGFyZW50IHx8IGdldE9mZnNldFBhcmVudDtcbiAgY29uc3QgZ2V0RGltZW5zaW9uc0ZuID0gdGhpcy5nZXREaW1lbnNpb25zO1xuICBjb25zdCBmbG9hdGluZ0RpbWVuc2lvbnMgPSBhd2FpdCBnZXREaW1lbnNpb25zRm4oZGF0YS5mbG9hdGluZyk7XG4gIHJldHVybiB7XG4gICAgcmVmZXJlbmNlOiBnZXRSZWN0UmVsYXRpdmVUb09mZnNldFBhcmVudChkYXRhLnJlZmVyZW5jZSwgYXdhaXQgZ2V0T2Zmc2V0UGFyZW50Rm4oZGF0YS5mbG9hdGluZyksIGRhdGEuc3RyYXRlZ3kpLFxuICAgIGZsb2F0aW5nOiB7XG4gICAgICB4OiAwLFxuICAgICAgeTogMCxcbiAgICAgIHdpZHRoOiBmbG9hdGluZ0RpbWVuc2lvbnMud2lkdGgsXG4gICAgICBoZWlnaHQ6IGZsb2F0aW5nRGltZW5zaW9ucy5oZWlnaHRcbiAgICB9XG4gIH07XG59O1xuXG5mdW5jdGlvbiBpc1JUTChlbGVtZW50KSB7XG4gIHJldHVybiBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLmRpcmVjdGlvbiA9PT0gJ3J0bCc7XG59XG5cbmNvbnN0IHBsYXRmb3JtID0ge1xuICBjb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdCxcbiAgZ2V0RG9jdW1lbnRFbGVtZW50LFxuICBnZXRDbGlwcGluZ1JlY3QsXG4gIGdldE9mZnNldFBhcmVudCxcbiAgZ2V0RWxlbWVudFJlY3RzLFxuICBnZXRDbGllbnRSZWN0cyxcbiAgZ2V0RGltZW5zaW9ucyxcbiAgZ2V0U2NhbGUsXG4gIGlzRWxlbWVudCxcbiAgaXNSVExcbn07XG5cbi8vIGh0dHBzOi8vc2FtdGhvci5hdS8yMDIxL29ic2VydmluZy1kb20vXG5mdW5jdGlvbiBvYnNlcnZlTW92ZShlbGVtZW50LCBvbk1vdmUpIHtcbiAgbGV0IGlvID0gbnVsbDtcbiAgbGV0IHRpbWVvdXRJZDtcbiAgY29uc3Qgcm9vdCA9IGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KTtcbiAgZnVuY3Rpb24gY2xlYW51cCgpIHtcbiAgICB2YXIgX2lvO1xuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgIChfaW8gPSBpbykgPT0gbnVsbCB8fCBfaW8uZGlzY29ubmVjdCgpO1xuICAgIGlvID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiByZWZyZXNoKHNraXAsIHRocmVzaG9sZCkge1xuICAgIGlmIChza2lwID09PSB2b2lkIDApIHtcbiAgICAgIHNraXAgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHRocmVzaG9sZCA9PT0gdm9pZCAwKSB7XG4gICAgICB0aHJlc2hvbGQgPSAxO1xuICAgIH1cbiAgICBjbGVhbnVwKCk7XG4gICAgY29uc3Qge1xuICAgICAgbGVmdCxcbiAgICAgIHRvcCxcbiAgICAgIHdpZHRoLFxuICAgICAgaGVpZ2h0XG4gICAgfSA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgaWYgKCFza2lwKSB7XG4gICAgICBvbk1vdmUoKTtcbiAgICB9XG4gICAgaWYgKCF3aWR0aCB8fCAhaGVpZ2h0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGluc2V0VG9wID0gZmxvb3IodG9wKTtcbiAgICBjb25zdCBpbnNldFJpZ2h0ID0gZmxvb3Iocm9vdC5jbGllbnRXaWR0aCAtIChsZWZ0ICsgd2lkdGgpKTtcbiAgICBjb25zdCBpbnNldEJvdHRvbSA9IGZsb29yKHJvb3QuY2xpZW50SGVpZ2h0IC0gKHRvcCArIGhlaWdodCkpO1xuICAgIGNvbnN0IGluc2V0TGVmdCA9IGZsb29yKGxlZnQpO1xuICAgIGNvbnN0IHJvb3RNYXJnaW4gPSAtaW5zZXRUb3AgKyBcInB4IFwiICsgLWluc2V0UmlnaHQgKyBcInB4IFwiICsgLWluc2V0Qm90dG9tICsgXCJweCBcIiArIC1pbnNldExlZnQgKyBcInB4XCI7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgIHJvb3RNYXJnaW4sXG4gICAgICB0aHJlc2hvbGQ6IG1heCgwLCBtaW4oMSwgdGhyZXNob2xkKSkgfHwgMVxuICAgIH07XG4gICAgbGV0IGlzRmlyc3RVcGRhdGUgPSB0cnVlO1xuICAgIGZ1bmN0aW9uIGhhbmRsZU9ic2VydmUoZW50cmllcykge1xuICAgICAgY29uc3QgcmF0aW8gPSBlbnRyaWVzWzBdLmludGVyc2VjdGlvblJhdGlvO1xuICAgICAgaWYgKHJhdGlvICE9PSB0aHJlc2hvbGQpIHtcbiAgICAgICAgaWYgKCFpc0ZpcnN0VXBkYXRlKSB7XG4gICAgICAgICAgcmV0dXJuIHJlZnJlc2goKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJhdGlvKSB7XG4gICAgICAgICAgLy8gSWYgdGhlIHJlZmVyZW5jZSBpcyBjbGlwcGVkLCB0aGUgcmF0aW8gaXMgMC4gVGhyb3R0bGUgdGhlIHJlZnJlc2hcbiAgICAgICAgICAvLyB0byBwcmV2ZW50IGFuIGluZmluaXRlIGxvb3Agb2YgdXBkYXRlcy5cbiAgICAgICAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHJlZnJlc2goZmFsc2UsIDFlLTcpO1xuICAgICAgICAgIH0sIDEwMDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlZnJlc2goZmFsc2UsIHJhdGlvKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaXNGaXJzdFVwZGF0ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIC8vIE9sZGVyIGJyb3dzZXJzIGRvbid0IHN1cHBvcnQgYSBgZG9jdW1lbnRgIGFzIHRoZSByb290IGFuZCB3aWxsIHRocm93IGFuXG4gICAgLy8gZXJyb3IuXG4gICAgdHJ5IHtcbiAgICAgIGlvID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGhhbmRsZU9ic2VydmUsIHtcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgLy8gSGFuZGxlIDxpZnJhbWU+c1xuICAgICAgICByb290OiByb290Lm93bmVyRG9jdW1lbnRcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlvID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGhhbmRsZU9ic2VydmUsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBpby5vYnNlcnZlKGVsZW1lbnQpO1xuICB9XG4gIHJlZnJlc2godHJ1ZSk7XG4gIHJldHVybiBjbGVhbnVwO1xufVxuXG4vKipcbiAqIEF1dG9tYXRpY2FsbHkgdXBkYXRlcyB0aGUgcG9zaXRpb24gb2YgdGhlIGZsb2F0aW5nIGVsZW1lbnQgd2hlbiBuZWNlc3NhcnkuXG4gKiBTaG91bGQgb25seSBiZSBjYWxsZWQgd2hlbiB0aGUgZmxvYXRpbmcgZWxlbWVudCBpcyBtb3VudGVkIG9uIHRoZSBET00gb3JcbiAqIHZpc2libGUgb24gdGhlIHNjcmVlbi5cbiAqIEByZXR1cm5zIGNsZWFudXAgZnVuY3Rpb24gdGhhdCBzaG91bGQgYmUgaW52b2tlZCB3aGVuIHRoZSBmbG9hdGluZyBlbGVtZW50IGlzXG4gKiByZW1vdmVkIGZyb20gdGhlIERPTSBvciBoaWRkZW4gZnJvbSB0aGUgc2NyZWVuLlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2F1dG9VcGRhdGVcbiAqL1xuZnVuY3Rpb24gYXV0b1VwZGF0ZShyZWZlcmVuY2UsIGZsb2F0aW5nLCB1cGRhdGUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBjb25zdCB7XG4gICAgYW5jZXN0b3JTY3JvbGwgPSB0cnVlLFxuICAgIGFuY2VzdG9yUmVzaXplID0gdHJ1ZSxcbiAgICBlbGVtZW50UmVzaXplID0gdHlwZW9mIFJlc2l6ZU9ic2VydmVyID09PSAnZnVuY3Rpb24nLFxuICAgIGxheW91dFNoaWZ0ID0gdHlwZW9mIEludGVyc2VjdGlvbk9ic2VydmVyID09PSAnZnVuY3Rpb24nLFxuICAgIGFuaW1hdGlvbkZyYW1lID0gZmFsc2VcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHJlZmVyZW5jZUVsID0gdW53cmFwRWxlbWVudChyZWZlcmVuY2UpO1xuICBjb25zdCBhbmNlc3RvcnMgPSBhbmNlc3RvclNjcm9sbCB8fCBhbmNlc3RvclJlc2l6ZSA/IFsuLi4ocmVmZXJlbmNlRWwgPyBnZXRPdmVyZmxvd0FuY2VzdG9ycyhyZWZlcmVuY2VFbCkgOiBbXSksIC4uLmdldE92ZXJmbG93QW5jZXN0b3JzKGZsb2F0aW5nKV0gOiBbXTtcbiAgYW5jZXN0b3JzLmZvckVhY2goYW5jZXN0b3IgPT4ge1xuICAgIGFuY2VzdG9yU2Nyb2xsICYmIGFuY2VzdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHVwZGF0ZSwge1xuICAgICAgcGFzc2l2ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGFuY2VzdG9yUmVzaXplICYmIGFuY2VzdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHVwZGF0ZSk7XG4gIH0pO1xuICBjb25zdCBjbGVhbnVwSW8gPSByZWZlcmVuY2VFbCAmJiBsYXlvdXRTaGlmdCA/IG9ic2VydmVNb3ZlKHJlZmVyZW5jZUVsLCB1cGRhdGUpIDogbnVsbDtcbiAgbGV0IHJlb2JzZXJ2ZUZyYW1lID0gLTE7XG4gIGxldCByZXNpemVPYnNlcnZlciA9IG51bGw7XG4gIGlmIChlbGVtZW50UmVzaXplKSB7XG4gICAgcmVzaXplT2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoX3JlZiA9PiB7XG4gICAgICBsZXQgW2ZpcnN0RW50cnldID0gX3JlZjtcbiAgICAgIGlmIChmaXJzdEVudHJ5ICYmIGZpcnN0RW50cnkudGFyZ2V0ID09PSByZWZlcmVuY2VFbCAmJiByZXNpemVPYnNlcnZlcikge1xuICAgICAgICAvLyBQcmV2ZW50IHVwZGF0ZSBsb29wcyB3aGVuIHVzaW5nIHRoZSBgc2l6ZWAgbWlkZGxld2FyZS5cbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2Zsb2F0aW5nLXVpL2Zsb2F0aW5nLXVpL2lzc3Vlcy8xNzQwXG4gICAgICAgIHJlc2l6ZU9ic2VydmVyLnVub2JzZXJ2ZShmbG9hdGluZyk7XG4gICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHJlb2JzZXJ2ZUZyYW1lKTtcbiAgICAgICAgcmVvYnNlcnZlRnJhbWUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgIHZhciBfcmVzaXplT2JzZXJ2ZXI7XG4gICAgICAgICAgKF9yZXNpemVPYnNlcnZlciA9IHJlc2l6ZU9ic2VydmVyKSA9PSBudWxsIHx8IF9yZXNpemVPYnNlcnZlci5vYnNlcnZlKGZsb2F0aW5nKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB1cGRhdGUoKTtcbiAgICB9KTtcbiAgICBpZiAocmVmZXJlbmNlRWwgJiYgIWFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICByZXNpemVPYnNlcnZlci5vYnNlcnZlKHJlZmVyZW5jZUVsKTtcbiAgICB9XG4gICAgcmVzaXplT2JzZXJ2ZXIub2JzZXJ2ZShmbG9hdGluZyk7XG4gIH1cbiAgbGV0IGZyYW1lSWQ7XG4gIGxldCBwcmV2UmVmUmVjdCA9IGFuaW1hdGlvbkZyYW1lID8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KHJlZmVyZW5jZSkgOiBudWxsO1xuICBpZiAoYW5pbWF0aW9uRnJhbWUpIHtcbiAgICBmcmFtZUxvb3AoKTtcbiAgfVxuICBmdW5jdGlvbiBmcmFtZUxvb3AoKSB7XG4gICAgY29uc3QgbmV4dFJlZlJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QocmVmZXJlbmNlKTtcbiAgICBpZiAocHJldlJlZlJlY3QgJiYgKG5leHRSZWZSZWN0LnggIT09IHByZXZSZWZSZWN0LnggfHwgbmV4dFJlZlJlY3QueSAhPT0gcHJldlJlZlJlY3QueSB8fCBuZXh0UmVmUmVjdC53aWR0aCAhPT0gcHJldlJlZlJlY3Qud2lkdGggfHwgbmV4dFJlZlJlY3QuaGVpZ2h0ICE9PSBwcmV2UmVmUmVjdC5oZWlnaHQpKSB7XG4gICAgICB1cGRhdGUoKTtcbiAgICB9XG4gICAgcHJldlJlZlJlY3QgPSBuZXh0UmVmUmVjdDtcbiAgICBmcmFtZUlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZyYW1lTG9vcCk7XG4gIH1cbiAgdXBkYXRlKCk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgdmFyIF9yZXNpemVPYnNlcnZlcjI7XG4gICAgYW5jZXN0b3JzLmZvckVhY2goYW5jZXN0b3IgPT4ge1xuICAgICAgYW5jZXN0b3JTY3JvbGwgJiYgYW5jZXN0b3IucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdXBkYXRlKTtcbiAgICAgIGFuY2VzdG9yUmVzaXplICYmIGFuY2VzdG9yLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHVwZGF0ZSk7XG4gICAgfSk7XG4gICAgY2xlYW51cElvID09IG51bGwgfHwgY2xlYW51cElvKCk7XG4gICAgKF9yZXNpemVPYnNlcnZlcjIgPSByZXNpemVPYnNlcnZlcikgPT0gbnVsbCB8fCBfcmVzaXplT2JzZXJ2ZXIyLmRpc2Nvbm5lY3QoKTtcbiAgICByZXNpemVPYnNlcnZlciA9IG51bGw7XG4gICAgaWYgKGFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShmcmFtZUlkKTtcbiAgICB9XG4gIH07XG59XG5cbi8qKlxuICogUmVzb2x2ZXMgd2l0aCBhbiBvYmplY3Qgb2Ygb3ZlcmZsb3cgc2lkZSBvZmZzZXRzIHRoYXQgZGV0ZXJtaW5lIGhvdyBtdWNoIHRoZVxuICogZWxlbWVudCBpcyBvdmVyZmxvd2luZyBhIGdpdmVuIGNsaXBwaW5nIGJvdW5kYXJ5IG9uIGVhY2ggc2lkZS5cbiAqIC0gcG9zaXRpdmUgPSBvdmVyZmxvd2luZyB0aGUgYm91bmRhcnkgYnkgdGhhdCBudW1iZXIgb2YgcGl4ZWxzXG4gKiAtIG5lZ2F0aXZlID0gaG93IG1hbnkgcGl4ZWxzIGxlZnQgYmVmb3JlIGl0IHdpbGwgb3ZlcmZsb3dcbiAqIC0gMCA9IGxpZXMgZmx1c2ggd2l0aCB0aGUgYm91bmRhcnlcbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9kZXRlY3RPdmVyZmxvd1xuICovXG5jb25zdCBkZXRlY3RPdmVyZmxvdyA9IGRldGVjdE92ZXJmbG93JDE7XG5cbi8qKlxuICogTW9kaWZpZXMgdGhlIHBsYWNlbWVudCBieSB0cmFuc2xhdGluZyB0aGUgZmxvYXRpbmcgZWxlbWVudCBhbG9uZyB0aGVcbiAqIHNwZWNpZmllZCBheGVzLlxuICogQSBudW1iZXIgKHNob3J0aGFuZCBmb3IgYG1haW5BeGlzYCBvciBkaXN0YW5jZSksIG9yIGFuIGF4ZXMgY29uZmlndXJhdGlvblxuICogb2JqZWN0IG1heSBiZSBwYXNzZWQuXG4gKiBAc2VlIGh0dHBzOi8vZmxvYXRpbmctdWkuY29tL2RvY3Mvb2Zmc2V0XG4gKi9cbmNvbnN0IG9mZnNldCA9IG9mZnNldCQxO1xuXG4vKipcbiAqIE9wdGltaXplcyB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgZmxvYXRpbmcgZWxlbWVudCBieSBjaG9vc2luZyB0aGUgcGxhY2VtZW50XG4gKiB0aGF0IGhhcyB0aGUgbW9zdCBzcGFjZSBhdmFpbGFibGUgYXV0b21hdGljYWxseSwgd2l0aG91dCBuZWVkaW5nIHRvIHNwZWNpZnkgYVxuICogcHJlZmVycmVkIHBsYWNlbWVudC4gQWx0ZXJuYXRpdmUgdG8gYGZsaXBgLlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2F1dG9QbGFjZW1lbnRcbiAqL1xuY29uc3QgYXV0b1BsYWNlbWVudCA9IGF1dG9QbGFjZW1lbnQkMTtcblxuLyoqXG4gKiBPcHRpbWl6ZXMgdGhlIHZpc2liaWxpdHkgb2YgdGhlIGZsb2F0aW5nIGVsZW1lbnQgYnkgc2hpZnRpbmcgaXQgaW4gb3JkZXIgdG9cbiAqIGtlZXAgaXQgaW4gdmlldyB3aGVuIGl0IHdpbGwgb3ZlcmZsb3cgdGhlIGNsaXBwaW5nIGJvdW5kYXJ5LlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL3NoaWZ0XG4gKi9cbmNvbnN0IHNoaWZ0ID0gc2hpZnQkMTtcblxuLyoqXG4gKiBPcHRpbWl6ZXMgdGhlIHZpc2liaWxpdHkgb2YgdGhlIGZsb2F0aW5nIGVsZW1lbnQgYnkgZmxpcHBpbmcgdGhlIGBwbGFjZW1lbnRgXG4gKiBpbiBvcmRlciB0byBrZWVwIGl0IGluIHZpZXcgd2hlbiB0aGUgcHJlZmVycmVkIHBsYWNlbWVudChzKSB3aWxsIG92ZXJmbG93IHRoZVxuICogY2xpcHBpbmcgYm91bmRhcnkuIEFsdGVybmF0aXZlIHRvIGBhdXRvUGxhY2VtZW50YC5cbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9mbGlwXG4gKi9cbmNvbnN0IGZsaXAgPSBmbGlwJDE7XG5cbi8qKlxuICogUHJvdmlkZXMgZGF0YSB0aGF0IGFsbG93cyB5b3UgdG8gY2hhbmdlIHRoZSBzaXplIG9mIHRoZSBmbG9hdGluZyBlbGVtZW50IFx1MjAxNFxuICogZm9yIGluc3RhbmNlLCBwcmV2ZW50IGl0IGZyb20gb3ZlcmZsb3dpbmcgdGhlIGNsaXBwaW5nIGJvdW5kYXJ5IG9yIG1hdGNoIHRoZVxuICogd2lkdGggb2YgdGhlIHJlZmVyZW5jZSBlbGVtZW50LlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL3NpemVcbiAqL1xuY29uc3Qgc2l6ZSA9IHNpemUkMTtcblxuLyoqXG4gKiBQcm92aWRlcyBkYXRhIHRvIGhpZGUgdGhlIGZsb2F0aW5nIGVsZW1lbnQgaW4gYXBwbGljYWJsZSBzaXR1YXRpb25zLCBzdWNoIGFzXG4gKiB3aGVuIGl0IGlzIG5vdCBpbiB0aGUgc2FtZSBjbGlwcGluZyBjb250ZXh0IGFzIHRoZSByZWZlcmVuY2UgZWxlbWVudC5cbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9oaWRlXG4gKi9cbmNvbnN0IGhpZGUgPSBoaWRlJDE7XG5cbi8qKlxuICogUHJvdmlkZXMgZGF0YSB0byBwb3NpdGlvbiBhbiBpbm5lciBlbGVtZW50IG9mIHRoZSBmbG9hdGluZyBlbGVtZW50IHNvIHRoYXQgaXRcbiAqIGFwcGVhcnMgY2VudGVyZWQgdG8gdGhlIHJlZmVyZW5jZSBlbGVtZW50LlxuICogQHNlZSBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL2Fycm93XG4gKi9cbmNvbnN0IGFycm93ID0gYXJyb3ckMTtcblxuLyoqXG4gKiBQcm92aWRlcyBpbXByb3ZlZCBwb3NpdGlvbmluZyBmb3IgaW5saW5lIHJlZmVyZW5jZSBlbGVtZW50cyB0aGF0IGNhbiBzcGFuXG4gKiBvdmVyIG11bHRpcGxlIGxpbmVzLCBzdWNoIGFzIGh5cGVybGlua3Mgb3IgcmFuZ2Ugc2VsZWN0aW9ucy5cbiAqIEBzZWUgaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9pbmxpbmVcbiAqL1xuY29uc3QgaW5saW5lID0gaW5saW5lJDE7XG5cbi8qKlxuICogQnVpbHQtaW4gYGxpbWl0ZXJgIHRoYXQgd2lsbCBzdG9wIGBzaGlmdCgpYCBhdCBhIGNlcnRhaW4gcG9pbnQuXG4gKi9cbmNvbnN0IGxpbWl0U2hpZnQgPSBsaW1pdFNoaWZ0JDE7XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIGB4YCBhbmQgYHlgIGNvb3JkaW5hdGVzIHRoYXQgd2lsbCBwbGFjZSB0aGUgZmxvYXRpbmcgZWxlbWVudFxuICogbmV4dCB0byBhIGdpdmVuIHJlZmVyZW5jZSBlbGVtZW50LlxuICovXG5jb25zdCBjb21wdXRlUG9zaXRpb24gPSAocmVmZXJlbmNlLCBmbG9hdGluZywgb3B0aW9ucykgPT4ge1xuICAvLyBUaGlzIGNhY2hlcyB0aGUgZXhwZW5zaXZlIGBnZXRDbGlwcGluZ0VsZW1lbnRBbmNlc3RvcnNgIGZ1bmN0aW9uIHNvIHRoYXRcbiAgLy8gbXVsdGlwbGUgbGlmZWN5Y2xlIHJlc2V0cyByZS11c2UgdGhlIHNhbWUgcmVzdWx0LiBJdCBvbmx5IGxpdmVzIGZvciBhXG4gIC8vIHNpbmdsZSBjYWxsLiBJZiBvdGhlciBmdW5jdGlvbnMgYmVjb21lIGV4cGVuc2l2ZSwgd2UgY2FuIGFkZCB0aGVtIGFzIHdlbGwuXG4gIGNvbnN0IGNhY2hlID0gbmV3IE1hcCgpO1xuICBjb25zdCBtZXJnZWRPcHRpb25zID0ge1xuICAgIHBsYXRmb3JtLFxuICAgIC4uLm9wdGlvbnNcbiAgfTtcbiAgY29uc3QgcGxhdGZvcm1XaXRoQ2FjaGUgPSB7XG4gICAgLi4ubWVyZ2VkT3B0aW9ucy5wbGF0Zm9ybSxcbiAgICBfYzogY2FjaGVcbiAgfTtcbiAgcmV0dXJuIGNvbXB1dGVQb3NpdGlvbiQxKHJlZmVyZW5jZSwgZmxvYXRpbmcsIHtcbiAgICAuLi5tZXJnZWRPcHRpb25zLFxuICAgIHBsYXRmb3JtOiBwbGF0Zm9ybVdpdGhDYWNoZVxuICB9KTtcbn07XG5cbmV4cG9ydCB7IGFycm93LCBhdXRvUGxhY2VtZW50LCBhdXRvVXBkYXRlLCBjb21wdXRlUG9zaXRpb24sIGRldGVjdE92ZXJmbG93LCBmbGlwLCBoaWRlLCBpbmxpbmUsIGxpbWl0U2hpZnQsIG9mZnNldCwgcGxhdGZvcm0sIHNoaWZ0LCBzaXplIH07XG4iLCAiaW1wb3J0IHsgdHlwZSBUV2luZG93RXZlbnRzLCB0eXBlIFdpbmRvd0V2ZW50SGFuZGxlciB9IGZyb20gXCJAL3VpL3R5cGVzXCI7XG5pbXBvcnQgeyBhdXRvVXBkYXRlLCBjb21wdXRlUG9zaXRpb24sIGZsaXAgfSBmcm9tIFwiQGZsb2F0aW5nLXVpL2RvbVwiO1xuaW1wb3J0IHsgZGVib3VuY2UsIFBvcG92ZXJTdWdnZXN0LCBTY29wZSwgVEFic3RyYWN0RmlsZSwgVEZpbGUsIFRGb2xkZXIgfSBmcm9tIFwib2JzaWRpYW5cIjtcblxuaW50ZXJmYWNlIFN1Z2dlc3Rpb248VD4ge1xuICAgIHZhbHVlOiBULFxuICAgIGVsOiBIVE1MRWxlbWVudCxcbn1cblxuLyoqXG4gICAgKiBHZXQgc3VnZ2VzdGlvbiB2YWx1ZXMgYmFzZWQgb24gYGlucHV0RWwudmFsdWVgIGFuZCByZW5kZXIgdGhlbSBpbnNpZGUgYHN1Z2dlc3Rpb25Db250YWluZXJFbGAsXG4gICAgKiB0aGV5IHdpbGwgb25seSBiZSB2aXNpYmxlIHRvIHRoZSB1c2VyIGFmdGVyIG9wZW5pbmcgdGhlIHBvcG92ZXIgb24gYHRoaXMub3BlbigpYC5cbiAgICAqXG4gICAgKiBFdmVyeXRoaW5nIGlzIGNvbnRyb2xsZWQgYnkgZXZlbnQgaGFuZGxlcnMgYWRkZWQgdG8gYm90aCBgaW5wdXRFbGAgYW5kIGBzdWdnZXN0aW9uQ29udGFpbmVyRWxgLCBhbGwgbG9jYXRlZCBpbiBgdGhpcy5zZXR1cEV2ZW50TGlzdGVuZXJzYFxuKi9cbmFic3RyYWN0IGNsYXNzIEJhc2VTdWdnZXN0PFQ+IGV4dGVuZHMgUG9wb3ZlclN1Z2dlc3Q8VD4ge1xuICAgIHN1Z2dlc3Rpb25Db250YWluZXJFbDogSFRNTERpdkVsZW1lbnQ7XG4gICAgc3VnZ2VzdGlvbkl0ZW1zQ29udGFpbmVyRWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIHN1Z2dlc3Rpb25zQ29udGFpbmVyQ3JlYXRlZDogYm9vbGVhbjtcbiAgICBpbnB1dEVsOiBIVE1MSW5wdXRFbGVtZW50O1xuICAgIHN1Z2dlc3Rpb25zOiBTdWdnZXN0aW9uPFQ+W10gPSBbXTtcbiAgICBzZWxlY3RlZFN1Z2dlc3Rpb25JZHg6IG51bWJlcjtcbiAgICBzdWdnZXN0aW9uU2VsZWN0ZWQgPSBmYWxzZTtcblxuICAgIHByaXZhdGUgaW5wdXRFdkhhbmRsZXJzOiBUV2luZG93RXZlbnRzIHwgbnVsbCA9IG51bGw7XG4gICAgcHJpdmF0ZSBhdXRvVXBkYXRlQ2xlYW51cDogKCgpID0+IHZvaWQpIHwgbnVsbCA9IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcihpbnB1dEVsOiBIVE1MSW5wdXRFbGVtZW50KSB7XG4gICAgICAgIHN1cGVyKHdpbmRvdy5hcHApO1xuICAgICAgICB0aGlzLmlucHV0RWwgPSBpbnB1dEVsO1xuICAgICAgICB0aGlzLnNlbGVjdGVkU3VnZ2VzdGlvbklkeCA9IDBcbiAgICAgICAgdGhpcy5zY29wZSA9IG5ldyBTY29wZSgpO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBkaXZzIGFuZCBhZGQgZXZlbnQgaGFuZGxlcnMuIERpdnMgYW5kIGV2ZW50IGhhbmRsZXJzIHJlbW92ZWQgaW4gYHRoaXMuZGVzdHJveSgpYFxuICAgICAgICB0aGlzLnN1Z2dlc3Rpb25Db250YWluZXJFbCA9IGNyZWF0ZURpdih7XG4gICAgICAgICAgICBjbHM6ICdzdWdnZXN0aW9uLWNvbnRhaW5lcicsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnN1Z2dlc3Rpb25JdGVtc0NvbnRhaW5lckVsID0gdGhpcy5zdWdnZXN0aW9uQ29udGFpbmVyRWwuY3JlYXRlRGl2KHtcbiAgICAgICAgICAgIGNsczogXCJzdWdnZXN0aW9uXCIsXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvbnNDb250YWluZXJDcmVhdGVkID0gdHJ1ZTtcblxuICAgICAgICB0aGlzLnNldHVwRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9XG5cblxuICAgIG9wZW4oKSB7XG4gICAgICAgIGNvbnN0IHN1Z2dlc3Rpb25WYWx1ZXMgPSB0aGlzLmdldFN1Z2dlc3Rpb25zKHRoaXMuaW5wdXRFbC52YWx1ZSlcblxuICAgICAgICBpZiAoc3VnZ2VzdGlvblZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLmNsZWFyKClcbiAgICAgICAgICAgIC8vIGFkZCBnbG9iYWwgZXZlbnQgaGFuZGxlcnMsIGNsZWFuZWQgaW4gYHRoaXMuY2xvc2UoKWBcbiAgICAgICAgICAgIHdpbmRvdy5hcHAua2V5bWFwLnB1c2hTY29wZSh0aGlzLnNjb3BlKTtcbiAgICAgICAgICAgIC8vIGF0dGFjaGVkIHRvIHRoZSBET00sIGRldGFjaGVkIGluIGB0aGlzLmNsb3NlKClgXG4gICAgICAgICAgICB3aW5kb3cuYXBwLndvcmtzcGFjZS5jb250YWluZXJFbC5hcHBlbmRDaGlsZCh0aGlzLnN1Z2dlc3Rpb25Db250YWluZXJFbCk7XG5cbiAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gKCkgPT4gY29tcHV0ZVBvc2l0aW9uKHRoaXMuaW5wdXRFbCwgdGhpcy5zdWdnZXN0aW9uQ29udGFpbmVyRWwsIHtcbiAgICAgICAgICAgICAgICBwbGFjZW1lbnQ6IFwiYm90dG9tLXN0YXJ0XCIsXG4gICAgICAgICAgICAgICAgbWlkZGxld2FyZTogW2ZsaXAoKV1cbiAgICAgICAgICAgIH0pLnRoZW4oKHsgeCwgeSB9KSA9PiB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLnN1Z2dlc3Rpb25Db250YWluZXJFbC5zdHlsZSwge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiBgJHt4fXB4YCxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiBgJHt5ICsgNX1weGBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5hdXRvVXBkYXRlQ2xlYW51cCA9IGF1dG9VcGRhdGUodGhpcy5pbnB1dEVsLCB0aGlzLnN1Z2dlc3Rpb25Db250YWluZXJFbCwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uKCk7XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICB0aGlzLnJlbmRlclN1Z2dlc3Rpb25zKHN1Z2dlc3Rpb25WYWx1ZXMpXG4gICAgICAgIH1cbiAgICB9XG4gICAgY2xvc2UoKSB7XG4gICAgICAgIC8vIHJlbW92ZSBnbG9iYWwgZXZlbnQgaGFuZGxlcnMsIGFkZGVkIGluIGB0aGlzLm9wZW4oKWBcbiAgICAgICAgd2luZG93LmFwcC5rZXltYXAucG9wU2NvcGUodGhpcy5zY29wZSk7XG5cbiAgICAgICAgdGhpcy5jbGVhcigpXG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvbkNvbnRhaW5lckVsLmRldGFjaCgpO1xuICAgICAgICB0aGlzLmF1dG9VcGRhdGVDbGVhbnVwPy4oKTtcbiAgICAgICAgdGhpcy5hdXRvVXBkYXRlQ2xlYW51cCA9IG51bGw7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiXHVEODNDXHVERjg5IGRlc3Ryb3lcIilcbiAgICAgICAgdGhpcy5zdWdnZXN0aW9uQ29udGFpbmVyRWwucmVtb3ZlKCk7XG4gICAgICAgIHRoaXMuaW5wdXRFdkhhbmRsZXJzICYmIChPYmplY3QuZW50cmllcyh0aGlzLmlucHV0RXZIYW5kbGVycykgYXMgW2tleW9mIFdpbmRvd0V2ZW50TWFwLCBXaW5kb3dFdmVudEhhbmRsZXI8a2V5b2YgV2luZG93RXZlbnRNYXA+XVtdKS5mb3JFYWNoKChbZXZlbnQsIGhhbmRsZXJdKSA9PlxuICAgICAgICAgICAgdGhpcy5pbnB1dEVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIpXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuaW5wdXRFdkhhbmRsZXJzID0gbnVsbDtcbiAgICB9XG4gICAgcHJpdmF0ZSBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5zdWdnZXN0aW9uSXRlbXNDb250YWluZXJFbC5lbXB0eSgpO1xuICAgICAgICB0aGlzLnN1Z2dlc3Rpb25zID0gW107XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzZXR1cEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgICAvLyByZWdpc3RlciBpbnB1dCBldmVudCBoYW5kbGVyc1xuICAgICAgICB0aGlzLmlucHV0RXZIYW5kbGVycyA9IHtcbiAgICAgICAgICAgIGNsaWNrOiAoKSA9PiB0aGlzLm9wZW4oKSxcbiAgICAgICAgICAgIGlucHV0OiBkZWJvdW5jZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gbmVlZCB0byBtYWtlIHN1cmUgaXQgZG9lc250IHJlb3BlbiBwb3BvdmVyIG5vdyB0aGF0IGlzIGNhbGxlZCA1MDBtcyBhZnRlciBcbiAgICAgICAgICAgICAgICAvLyBpbnB1dCB0cmlnZ2VyZWQgaW4gdGhpcy5zZWxlY3RTdWdnZXN0aW9uIGFuZCBhZnRlciB0aGlzLmNsb3NlKClcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc3VnZ2VzdGlvblNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3BlbigpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdWdnZXN0aW9uU2VsZWN0ZWQgPSBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDIwMCwgdHJ1ZSksXG4gICAgICAgICAgICBmb2N1czogKCkgPT4gdGhpcy5vcGVuKCksXG4gICAgICAgICAgICBibHVyOiAoKSA9PiB0aGlzLmNsb3NlKCksXG4gICAgICAgIH07XG5cbiAgICAgICAgKE9iamVjdC5lbnRyaWVzKHRoaXMuaW5wdXRFdkhhbmRsZXJzKSBhcyBba2V5b2YgV2luZG93RXZlbnRNYXAsIFdpbmRvd0V2ZW50SGFuZGxlcjxrZXlvZiBXaW5kb3dFdmVudE1hcD5dW10pLmZvckVhY2goKFtldmVudCwgaGFuZGxlcl0pID0+XG4gICAgICAgICAgICB0aGlzLmlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlcilcbiAgICAgICAgKTtcblxuICAgICAgICAvLyByZWdpc3RlciBnbG9iYWwgZXZlbnQgaGFuZGxlcnMsIGxvYWRlZCBpbiB0aGlzLnNldHVwLCBjbGVhbmVkIGluIHRoaXMuY2xvc2VcbiAgICAgICAgdGhpcy5zY29wZS5yZWdpc3RlcihbXSwgXCJBcnJvd1VwXCIsIChldikgPT4ge1xuICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgdGhpcy5oaWdobGlnaHRTdWdnZXN0aW9uKHRoaXMuc2VsZWN0ZWRTdWdnZXN0aW9uSWR4IC0gMSwgdHJ1ZSlcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2NvcGUucmVnaXN0ZXIoW10sIFwiQXJyb3dEb3duXCIsIChldikgPT4ge1xuICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgdGhpcy5oaWdobGlnaHRTdWdnZXN0aW9uKHRoaXMuc2VsZWN0ZWRTdWdnZXN0aW9uSWR4ICsgMSwgdHJ1ZSlcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5zY29wZS5yZWdpc3RlcihbXSwgXCJFbnRlclwiLCAoZXYpID0+IHtcbiAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgIGNvbnN0IHN1Z2dlc3Rpb24gPSB0aGlzLnN1Z2dlc3Rpb25zW3RoaXMuc2VsZWN0ZWRTdWdnZXN0aW9uSWR4XTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0U3VnZ2VzdGlvbihzdWdnZXN0aW9uLnZhbHVlLCBldilcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5zY29wZS5yZWdpc3RlcihbXSwgXCJFc2NhcGVcIiwgKCkgPT4gdGhpcy5jbG9zZSgpKVxuXG4gICAgICAgIC8vIHJlZ2lzdGVyIHN1Z2dlc3Rpb24gaXRlbXMgY29udGFpbmVyIGV2ZW50IGhhbmRsZXJzXG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvbkl0ZW1zQ29udGFpbmVyRWwub24oXCJjbGlja1wiLCBcIi5zdWdnZXN0aW9uLWl0ZW1cIiwgKGV2KSA9PiB7XG4gICAgICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICAgICAgICAgIGNvbnN0IHN1Z2dlc3Rpb24gPSB0aGlzLnN1Z2dlc3Rpb25zW3RoaXMuc2VsZWN0ZWRTdWdnZXN0aW9uSWR4XTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkU3VnZ2VzdGlvbklkeCAhPT0gLTEgJiYgc3VnZ2VzdGlvbikge1xuICAgICAgICAgICAgICAgIHRoaXMuaGlnaGxpZ2h0U3VnZ2VzdGlvbih0aGlzLnNlbGVjdGVkU3VnZ2VzdGlvbklkeCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0U3VnZ2VzdGlvbihzdWdnZXN0aW9uLnZhbHVlLCBldik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvbkl0ZW1zQ29udGFpbmVyRWwub24oXCJtb3VzZW1vdmVcIiwgXCIuc3VnZ2VzdGlvbi1pdGVtXCIsIChldiwgdGFyZ2V0KSA9PiB7XG4gICAgICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICAgICAgICAgIGNvbnN0IHN1Z2dlc3Rpb25JZHggPSB0aGlzLnN1Z2dlc3Rpb25zLmZpbmRJbmRleChzID0+IHMuZWwgPT09IHRhcmdldClcbiAgICAgICAgICAgIGlmIChzdWdnZXN0aW9uSWR4ICE9PSAtMSkge1xuICAgICAgICAgICAgICAgIHRoaXMuaGlnaGxpZ2h0U3VnZ2VzdGlvbihzdWdnZXN0aW9uSWR4LCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvbkl0ZW1zQ29udGFpbmVyRWwub24oXCJtb3VzZWRvd25cIiwgXCIuc3VnZ2VzdGlvbi1pdGVtXCIsIChldikgPT4gZXYucHJldmVudERlZmF1bHQoKSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgICAgKiBHZXQgc3VnZ2VzdGlvbnMgYmFzZWQgb24gaW5wdXQgc3RyaW5nIGFuZCBhZGQgdGhlbSBpbnNpZGUgc3VnZ2VzdGlvbkNvbnRhaW5lckVsLFxuICAgICAgICAqIHRoZXkgd2lsbCBvbmx5IGJlIHZpc2libGUgdG8gdGhlIHVzZXIgYWZ0ZXIgb3BlbmluZyB0aGUgcG9wb3ZlciBvbiB0aGlzLm9wZW4oKVxuICAgICAgICAqL1xuICAgIHByaXZhdGUgcmVuZGVyU3VnZ2VzdGlvbnModmFsdWVzOiBUW10pIHtcbiAgICAgICAgdmFsdWVzLmZvckVhY2godmFsdWUgPT4ge1xuICAgICAgICAgICAgY29uc3QgZWwgPSB0aGlzLnN1Z2dlc3Rpb25JdGVtc0NvbnRhaW5lckVsLmNyZWF0ZURpdih7IGNsczogJ3N1Z2dlc3Rpb24taXRlbScgfSk7XG4gICAgICAgICAgICBlbC5zdHlsZS5jdXJzb3IgPSAncG9pbnRlcic7XG4gICAgICAgICAgICBpZiAoZWwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlclN1Z2dlc3Rpb24odmFsdWUsIGVsKTtcbiAgICAgICAgICAgICAgICB0aGlzLnN1Z2dlc3Rpb25zLnB1c2goeyB2YWx1ZSwgZWwgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5zZWxlY3RlZFN1Z2dlc3Rpb25JZHggPSAwO1xuICAgICAgICB0aGlzLmhpZ2hsaWdodFN1Z2dlc3Rpb24oMCwgZmFsc2UpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAgICAqIHVwZGF0ZSBhIHN1Z2dlc3Rpb24gZWxlbWVudCdzIGNsYXNzZXMgdG8gbWFrZSBpdCBsb29rIHNlbGVjdGVkXG4gICAgKi9cbiAgICBwcml2YXRlIGhpZ2hsaWdodFN1Z2dlc3Rpb24oc2VsZWN0ZWRJbmRleDogbnVtYmVyLCBzY3JvbGxJbnRvVmlldzogYm9vbGVhbikge1xuICAgICAgICBjb25zdCBub3JtYWxpemVkSW5kZXggPSB3cmFwQXJvdW5kKHNlbGVjdGVkSW5kZXgsIHRoaXMuc3VnZ2VzdGlvbnMubGVuZ3RoKTtcblxuICAgICAgICBjb25zdCBvbGRTZWxlY3RlZFN1Z2dlc3Rpb24gPSB0aGlzLnN1Z2dlc3Rpb25zW3RoaXMuc2VsZWN0ZWRTdWdnZXN0aW9uSWR4XTtcbiAgICAgICAgY29uc3QgbmV3U2VsZWN0ZWRTdWdnZXN0aW9uID0gdGhpcy5zdWdnZXN0aW9uc1tub3JtYWxpemVkSW5kZXhdO1xuXG4gICAgICAgIG9sZFNlbGVjdGVkU3VnZ2VzdGlvbi5lbC5yZW1vdmVDbGFzcyhcImlzLXNlbGVjdGVkXCIpO1xuICAgICAgICBuZXdTZWxlY3RlZFN1Z2dlc3Rpb24uZWwuYWRkQ2xhc3MoXCJpcy1zZWxlY3RlZFwiKTtcblxuICAgICAgICB0aGlzLnNlbGVjdGVkU3VnZ2VzdGlvbklkeCA9IG5vcm1hbGl6ZWRJbmRleDtcblxuICAgICAgICBpZiAoc2Nyb2xsSW50b1ZpZXcpIHtcbiAgICAgICAgICAgIG5ld1NlbGVjdGVkU3VnZ2VzdGlvbi5lbC5zY3JvbGxJbnRvVmlldyhmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhYnN0cmFjdCBnZXRTdWdnZXN0aW9ucyhpbnB1dFZhbDogc3RyaW5nKTogVFtdO1xufVxuXG5leHBvcnQgY2xhc3MgRm9sZGVyU3VnZ2VzdCBleHRlbmRzIEJhc2VTdWdnZXN0PFRGb2xkZXI+IHtcbiAgICBnZXRTdWdnZXN0aW9ucyhpbnB1dFZhbDogc3RyaW5nKTogVEZvbGRlcltdIHtcbiAgICAgICAgY29uc3QgYWxsVmF1bHRGaWxlcyA9IHdpbmRvdy5hcHAudmF1bHQuZ2V0QWxsTG9hZGVkRmlsZXMoKTtcbiAgICAgICAgY29uc3QgZm9sZGVyczogVEZvbGRlcltdID0gW107XG5cbiAgICAgICAgYWxsVmF1bHRGaWxlcy5mb3JFYWNoKChmaWxlOiBUQWJzdHJhY3RGaWxlKSA9PiB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgZmlsZSBpbnN0YW5jZW9mIFRGb2xkZXIgJiZcbiAgICAgICAgICAgICAgICBmaWxlLnBhdGgudG9Mb3dlckNhc2UoKS5jb250YWlucyhpbnB1dFZhbC50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgZm9sZGVycy5wdXNoKGZpbGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZm9sZGVycztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgICAgKiBTZXQgY29udGVudCBvZiBlYWNoIGluZGl2aWR1YWwgc3VnZ2VzdGlvbiBkaXYgZWxlbWVudFxuICAgICAgICAqXG4gICAgICAgICogY2FsbGVkIGZvciBlYWNoIHN1Z2dlc3Rpb24gaXRlbSBmcm9tIGdldFN1Z2dlc3Rpb25zKCkgaW4gcmVuZGVyU3VnZ2VzdGlvbnMoKVxuICAgICovXG4gICAgcmVuZGVyU3VnZ2VzdGlvbihmaWxlOiBURm9sZGVyLCBlbDogSFRNTEVsZW1lbnQpOiB2b2lkIHtcbiAgICAgICAgZWwuc2V0VGV4dChmaWxlLnBhdGgpO1xuICAgIH1cblxuICAgIHNlbGVjdFN1Z2dlc3Rpb24odmFsdWU6IFRGb2xkZXIsIF86IEtleWJvYXJkRXZlbnQgfCBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgICAgIHRoaXMuaW5wdXRFbC52YWx1ZSA9IHZhbHVlLnBhdGg7XG4gICAgICAgIHRoaXMuaW5wdXRFbC50cmlnZ2VyKFwiaW5wdXRcIik7XG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvblNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEZpbGVTdWdnZXN0IGV4dGVuZHMgQmFzZVN1Z2dlc3Q8VEZpbGU+IHtcbiAgICBnZXRTdWdnZXN0aW9ucyhpbnB1dFZhbDogc3RyaW5nKTogVEZpbGVbXSB7XG4gICAgICAgIGNvbnN0IGFsbFZhdWx0RmlsZXMgPSB3aW5kb3cuYXBwLnZhdWx0LmdldEFsbExvYWRlZEZpbGVzKCk7XG4gICAgICAgIGNvbnN0IGZpbGVzOiBURmlsZVtdID0gW107XG5cbiAgICAgICAgYWxsVmF1bHRGaWxlcy5mb3JFYWNoKChmaWxlOiBUQWJzdHJhY3RGaWxlKSA9PiB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgZmlsZSBpbnN0YW5jZW9mIFRGaWxlICYmXG4gICAgICAgICAgICAgICAgZmlsZS5leHRlbnNpb24gPT09IFwibWRcIiAmJlxuICAgICAgICAgICAgICAgIGZpbGUucGF0aC50b0xvd2VyQ2FzZSgpLmNvbnRhaW5zKGlucHV0VmFsLnRvTG93ZXJDYXNlKCkpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBmaWxlcy5wdXNoKGZpbGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZmlsZXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICAgICogU2V0IGNvbnRlbnQgb2YgZWFjaCBpbmRpdmlkdWFsIHN1Z2dlc3Rpb24gZGl2IGVsZW1lbnRcbiAgICAgICAgKlxuICAgICAgICAqIGNhbGxlZCBmb3IgZWFjaCBzdWdnZXN0aW9uIGl0ZW0gZnJvbSBnZXRTdWdnZXN0aW9ucygpIGluIHJlbmRlclN1Z2dlc3Rpb25zKClcbiAgICAqL1xuICAgIHJlbmRlclN1Z2dlc3Rpb24oZmlsZTogVEZpbGUsIGVsOiBIVE1MRWxlbWVudCk6IHZvaWQge1xuICAgICAgICBlbC5zZXRUZXh0KGZpbGUucGF0aCk7XG4gICAgfVxuXG4gICAgc2VsZWN0U3VnZ2VzdGlvbih2YWx1ZTogVEZpbGUsIF86IEtleWJvYXJkRXZlbnQgfCBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgICAgIHRoaXMuaW5wdXRFbC52YWx1ZSA9IHZhbHVlLnBhdGg7XG4gICAgICAgIHRoaXMuaW5wdXRFbC50cmlnZ2VyKFwiaW5wdXRcIik7XG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvblNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gd3JhcEFyb3VuZCh2YWx1ZTogbnVtYmVyLCBzaXplOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGlmICh2YWx1ZSA8IDApIHtcbiAgICAgICAgcmV0dXJuIHNpemUgLSAxO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPj0gc2l6ZSkge1xuICAgICAgICByZXR1cm4gMFxuICAgIH1cbiAgICByZXR1cm4gdmFsdWVcbn07XG5cbiIsICJpbXBvcnQge1xuXHRydW5fYWxsLFxuXHRzdWJzY3JpYmUsXG5cdG5vb3AsXG5cdHNhZmVfbm90X2VxdWFsLFxuXHRpc19mdW5jdGlvbixcblx0Z2V0X3N0b3JlX3ZhbHVlXG59IGZyb20gJy4uL2ludGVybmFsL2luZGV4LmpzJztcblxuY29uc3Qgc3Vic2NyaWJlcl9xdWV1ZSA9IFtdO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBgUmVhZGFibGVgIHN0b3JlIHRoYXQgYWxsb3dzIHJlYWRpbmcgYnkgc3Vic2NyaXB0aW9uLlxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1zdG9yZSNyZWFkYWJsZVxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7VH0gW3ZhbHVlXSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5TdGFydFN0b3BOb3RpZmllcjxUPn0gW3N0YXJ0XVxuICogQHJldHVybnMge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5SZWFkYWJsZTxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlYWRhYmxlKHZhbHVlLCBzdGFydCkge1xuXHRyZXR1cm4ge1xuXHRcdHN1YnNjcmliZTogd3JpdGFibGUodmFsdWUsIHN0YXJ0KS5zdWJzY3JpYmVcblx0fTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBgV3JpdGFibGVgIHN0b3JlIHRoYXQgYWxsb3dzIGJvdGggdXBkYXRpbmcgYW5kIHJlYWRpbmcgYnkgc3Vic2NyaXB0aW9uLlxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1zdG9yZSN3cml0YWJsZVxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7VH0gW3ZhbHVlXSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5TdGFydFN0b3BOb3RpZmllcjxUPn0gW3N0YXJ0XVxuICogQHJldHVybnMge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5Xcml0YWJsZTxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdyaXRhYmxlKHZhbHVlLCBzdGFydCA9IG5vb3ApIHtcblx0LyoqIEB0eXBlIHtpbXBvcnQoJy4vcHVibGljLmpzJykuVW5zdWJzY3JpYmVyfSAqL1xuXHRsZXQgc3RvcDtcblx0LyoqIEB0eXBlIHtTZXQ8aW1wb3J0KCcuL3ByaXZhdGUuanMnKS5TdWJzY3JpYmVJbnZhbGlkYXRlVHVwbGU8VD4+fSAqL1xuXHRjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQoKTtcblx0LyoqIEBwYXJhbSB7VH0gbmV3X3ZhbHVlXG5cdCAqIEByZXR1cm5zIHt2b2lkfVxuXHQgKi9cblx0ZnVuY3Rpb24gc2V0KG5ld192YWx1ZSkge1xuXHRcdGlmIChzYWZlX25vdF9lcXVhbCh2YWx1ZSwgbmV3X3ZhbHVlKSkge1xuXHRcdFx0dmFsdWUgPSBuZXdfdmFsdWU7XG5cdFx0XHRpZiAoc3RvcCkge1xuXHRcdFx0XHQvLyBzdG9yZSBpcyByZWFkeVxuXHRcdFx0XHRjb25zdCBydW5fcXVldWUgPSAhc3Vic2NyaWJlcl9xdWV1ZS5sZW5ndGg7XG5cdFx0XHRcdGZvciAoY29uc3Qgc3Vic2NyaWJlciBvZiBzdWJzY3JpYmVycykge1xuXHRcdFx0XHRcdHN1YnNjcmliZXJbMV0oKTtcblx0XHRcdFx0XHRzdWJzY3JpYmVyX3F1ZXVlLnB1c2goc3Vic2NyaWJlciwgdmFsdWUpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChydW5fcXVldWUpIHtcblx0XHRcdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHN1YnNjcmliZXJfcXVldWUubGVuZ3RoOyBpICs9IDIpIHtcblx0XHRcdFx0XHRcdHN1YnNjcmliZXJfcXVldWVbaV1bMF0oc3Vic2NyaWJlcl9xdWV1ZVtpICsgMV0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRzdWJzY3JpYmVyX3F1ZXVlLmxlbmd0aCA9IDA7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtpbXBvcnQoJy4vcHVibGljLmpzJykuVXBkYXRlcjxUPn0gZm5cblx0ICogQHJldHVybnMge3ZvaWR9XG5cdCAqL1xuXHRmdW5jdGlvbiB1cGRhdGUoZm4pIHtcblx0XHRzZXQoZm4odmFsdWUpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5TdWJzY3JpYmVyPFQ+fSBydW5cblx0ICogQHBhcmFtIHtpbXBvcnQoJy4vcHJpdmF0ZS5qcycpLkludmFsaWRhdG9yPFQ+fSBbaW52YWxpZGF0ZV1cblx0ICogQHJldHVybnMge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5VbnN1YnNjcmliZXJ9XG5cdCAqL1xuXHRmdW5jdGlvbiBzdWJzY3JpYmUocnVuLCBpbnZhbGlkYXRlID0gbm9vcCkge1xuXHRcdC8qKiBAdHlwZSB7aW1wb3J0KCcuL3ByaXZhdGUuanMnKS5TdWJzY3JpYmVJbnZhbGlkYXRlVHVwbGU8VD59ICovXG5cdFx0Y29uc3Qgc3Vic2NyaWJlciA9IFtydW4sIGludmFsaWRhdGVdO1xuXHRcdHN1YnNjcmliZXJzLmFkZChzdWJzY3JpYmVyKTtcblx0XHRpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMSkge1xuXHRcdFx0c3RvcCA9IHN0YXJ0KHNldCwgdXBkYXRlKSB8fCBub29wO1xuXHRcdH1cblx0XHRydW4odmFsdWUpO1xuXHRcdHJldHVybiAoKSA9PiB7XG5cdFx0XHRzdWJzY3JpYmVycy5kZWxldGUoc3Vic2NyaWJlcik7XG5cdFx0XHRpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCAmJiBzdG9wKSB7XG5cdFx0XHRcdHN0b3AoKTtcblx0XHRcdFx0c3RvcCA9IG51bGw7XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXHRyZXR1cm4geyBzZXQsIHVwZGF0ZSwgc3Vic2NyaWJlIH07XG59XG5cbi8qKlxuICogRGVyaXZlZCB2YWx1ZSBzdG9yZSBieSBzeW5jaHJvbml6aW5nIG9uZSBvciBtb3JlIHJlYWRhYmxlIHN0b3JlcyBhbmRcbiAqIGFwcGx5aW5nIGFuIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG92ZXIgaXRzIGlucHV0IHZhbHVlcy5cbiAqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtc3RvcmUjZGVyaXZlZFxuICogQHRlbXBsYXRlIHtpbXBvcnQoJy4vcHJpdmF0ZS5qcycpLlN0b3Jlc30gU1xuICogQHRlbXBsYXRlIFRcbiAqIEBvdmVybG9hZFxuICogQHBhcmFtIHtTfSBzdG9yZXMgLSBpbnB1dCBzdG9yZXNcbiAqIEBwYXJhbSB7KHZhbHVlczogaW1wb3J0KCcuL3ByaXZhdGUuanMnKS5TdG9yZXNWYWx1ZXM8Uz4sIHNldDogKHZhbHVlOiBUKSA9PiB2b2lkLCB1cGRhdGU6IChmbjogaW1wb3J0KCcuL3B1YmxpYy5qcycpLlVwZGF0ZXI8VD4pID0+IHZvaWQpID0+IGltcG9ydCgnLi9wdWJsaWMuanMnKS5VbnN1YnNjcmliZXIgfCB2b2lkfSBmbiAtIGZ1bmN0aW9uIGNhbGxiYWNrIHRoYXQgYWdncmVnYXRlcyB0aGUgdmFsdWVzXG4gKiBAcGFyYW0ge1R9IFtpbml0aWFsX3ZhbHVlXSAtIGluaXRpYWwgdmFsdWVcbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4vcHVibGljLmpzJykuUmVhZGFibGU8VD59XG4gKi9cblxuLyoqXG4gKiBEZXJpdmVkIHZhbHVlIHN0b3JlIGJ5IHN5bmNocm9uaXppbmcgb25lIG9yIG1vcmUgcmVhZGFibGUgc3RvcmVzIGFuZFxuICogYXBwbHlpbmcgYW4gYWdncmVnYXRpb24gZnVuY3Rpb24gb3ZlciBpdHMgaW5wdXQgdmFsdWVzLlxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1zdG9yZSNkZXJpdmVkXG4gKiBAdGVtcGxhdGUge2ltcG9ydCgnLi9wcml2YXRlLmpzJykuU3RvcmVzfSBTXG4gKiBAdGVtcGxhdGUgVFxuICogQG92ZXJsb2FkXG4gKiBAcGFyYW0ge1N9IHN0b3JlcyAtIGlucHV0IHN0b3Jlc1xuICogQHBhcmFtIHsodmFsdWVzOiBpbXBvcnQoJy4vcHJpdmF0ZS5qcycpLlN0b3Jlc1ZhbHVlczxTPikgPT4gVH0gZm4gLSBmdW5jdGlvbiBjYWxsYmFjayB0aGF0IGFnZ3JlZ2F0ZXMgdGhlIHZhbHVlc1xuICogQHBhcmFtIHtUfSBbaW5pdGlhbF92YWx1ZV0gLSBpbml0aWFsIHZhbHVlXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL3B1YmxpYy5qcycpLlJlYWRhYmxlPFQ+fVxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIHtpbXBvcnQoJy4vcHJpdmF0ZS5qcycpLlN0b3Jlc30gU1xuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7U30gc3RvcmVzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHBhcmFtIHtUfSBbaW5pdGlhbF92YWx1ZV1cbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4vcHVibGljLmpzJykuUmVhZGFibGU8VD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZXJpdmVkKHN0b3JlcywgZm4sIGluaXRpYWxfdmFsdWUpIHtcblx0Y29uc3Qgc2luZ2xlID0gIUFycmF5LmlzQXJyYXkoc3RvcmVzKTtcblx0LyoqIEB0eXBlIHtBcnJheTxpbXBvcnQoJy4vcHVibGljLmpzJykuUmVhZGFibGU8YW55Pj59ICovXG5cdGNvbnN0IHN0b3Jlc19hcnJheSA9IHNpbmdsZSA/IFtzdG9yZXNdIDogc3RvcmVzO1xuXHRpZiAoIXN0b3Jlc19hcnJheS5ldmVyeShCb29sZWFuKSkge1xuXHRcdHRocm93IG5ldyBFcnJvcignZGVyaXZlZCgpIGV4cGVjdHMgc3RvcmVzIGFzIGlucHV0LCBnb3QgYSBmYWxzeSB2YWx1ZScpO1xuXHR9XG5cdGNvbnN0IGF1dG8gPSBmbi5sZW5ndGggPCAyO1xuXHRyZXR1cm4gcmVhZGFibGUoaW5pdGlhbF92YWx1ZSwgKHNldCwgdXBkYXRlKSA9PiB7XG5cdFx0bGV0IHN0YXJ0ZWQgPSBmYWxzZTtcblx0XHRjb25zdCB2YWx1ZXMgPSBbXTtcblx0XHRsZXQgcGVuZGluZyA9IDA7XG5cdFx0bGV0IGNsZWFudXAgPSBub29wO1xuXHRcdGNvbnN0IHN5bmMgPSAoKSA9PiB7XG5cdFx0XHRpZiAocGVuZGluZykge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRjbGVhbnVwKCk7XG5cdFx0XHRjb25zdCByZXN1bHQgPSBmbihzaW5nbGUgPyB2YWx1ZXNbMF0gOiB2YWx1ZXMsIHNldCwgdXBkYXRlKTtcblx0XHRcdGlmIChhdXRvKSB7XG5cdFx0XHRcdHNldChyZXN1bHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y2xlYW51cCA9IGlzX2Z1bmN0aW9uKHJlc3VsdCkgPyByZXN1bHQgOiBub29wO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0Y29uc3QgdW5zdWJzY3JpYmVycyA9IHN0b3Jlc19hcnJheS5tYXAoKHN0b3JlLCBpKSA9PlxuXHRcdFx0c3Vic2NyaWJlKFxuXHRcdFx0XHRzdG9yZSxcblx0XHRcdFx0KHZhbHVlKSA9PiB7XG5cdFx0XHRcdFx0dmFsdWVzW2ldID0gdmFsdWU7XG5cdFx0XHRcdFx0cGVuZGluZyAmPSB+KDEgPDwgaSk7XG5cdFx0XHRcdFx0aWYgKHN0YXJ0ZWQpIHtcblx0XHRcdFx0XHRcdHN5bmMoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdCgpID0+IHtcblx0XHRcdFx0XHRwZW5kaW5nIHw9IDEgPDwgaTtcblx0XHRcdFx0fVxuXHRcdFx0KVxuXHRcdCk7XG5cdFx0c3RhcnRlZCA9IHRydWU7XG5cdFx0c3luYygpO1xuXHRcdHJldHVybiBmdW5jdGlvbiBzdG9wKCkge1xuXHRcdFx0cnVuX2FsbCh1bnN1YnNjcmliZXJzKTtcblx0XHRcdGNsZWFudXAoKTtcblx0XHRcdC8vIFdlIG5lZWQgdG8gc2V0IHRoaXMgdG8gZmFsc2UgYmVjYXVzZSBjYWxsYmFja3MgY2FuIHN0aWxsIGhhcHBlbiBkZXNwaXRlIGhhdmluZyB1bnN1YnNjcmliZWQ6XG5cdFx0XHQvLyBDYWxsYmFja3MgbWlnaHQgYWxyZWFkeSBiZSBwbGFjZWQgaW4gdGhlIHF1ZXVlIHdoaWNoIGRvZXNuJ3Qga25vdyBpdCBzaG91bGQgbm8gbG9uZ2VyXG5cdFx0XHQvLyBpbnZva2UgdGhpcyBkZXJpdmVkIHN0b3JlLlxuXHRcdFx0c3RhcnRlZCA9IGZhbHNlO1xuXHRcdH07XG5cdH0pO1xufVxuXG4vKipcbiAqIFRha2VzIGEgc3RvcmUgYW5kIHJldHVybnMgYSBuZXcgb25lIGRlcml2ZWQgZnJvbSB0aGUgb2xkIG9uZSB0aGF0IGlzIHJlYWRhYmxlLlxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1zdG9yZSNyZWFkb25seVxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL3B1YmxpYy5qcycpLlJlYWRhYmxlPFQ+fSBzdG9yZSAgLSBzdG9yZSB0byBtYWtlIHJlYWRvbmx5XG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL3B1YmxpYy5qcycpLlJlYWRhYmxlPFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVhZG9ubHkoc3RvcmUpIHtcblx0cmV0dXJuIHtcblx0XHRzdWJzY3JpYmU6IHN0b3JlLnN1YnNjcmliZS5iaW5kKHN0b3JlKVxuXHR9O1xufVxuXG5leHBvcnQgeyBnZXRfc3RvcmVfdmFsdWUgYXMgZ2V0IH07XG4iLCAiaW1wb3J0IHsgWUVBUlNfUkFOR0VfU0laRSB9IGZyb20gJ0AvY29uc3RhbnRzJztcbmltcG9ydCB7IERFRkFVTFRfU0VUVElOR1MgfSBmcm9tICdAL3NldHRpbmdzJztcbmltcG9ydCB0eXBlIHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcbmltcG9ydCB7IGdldCwgd3JpdGFibGUgfSBmcm9tICdzdmVsdGUvc3RvcmUnO1xuXG50eXBlIElSYW5nZXMgPSBgJHtzdHJpbmd9LSR7c3RyaW5nfWBbXTtcbmZ1bmN0aW9uIGNyZWF0ZVllYXJzUmFuZ2VzU3RvcmUoKSB7XG4gICAgY29uc3QgZGVmYXVsdFJhbmdlID1cbiAgICAgICAgYCR7REVGQVVMVF9TRVRUSU5HUy55ZWFyc1Jhbmdlc1N0YXJ0fS0ke0RFRkFVTFRfU0VUVElOR1MueWVhcnNSYW5nZXNTdGFydCArIFlFQVJTX1JBTkdFX1NJWkUgLSAxfWAgYXMgYCR7c3RyaW5nfS0ke3N0cmluZ31gO1xuICAgIGNvbnN0IHN0b3JlID0gd3JpdGFibGU8e1xuICAgICAgICByYW5nZXM6IElSYW5nZXM7XG4gICAgICAgIHRvZGF5UmFuZ2U6IGAke3N0cmluZ30tJHtzdHJpbmd9YDtcbiAgICAgICAgY3JyUmFuZ2VJbmRleDogbnVtYmVyO1xuICAgIH0+KHtcbiAgICAgICAgcmFuZ2VzOiBbZGVmYXVsdFJhbmdlXSxcbiAgICAgICAgdG9kYXlSYW5nZTogZGVmYXVsdFJhbmdlLFxuICAgICAgICBjcnJSYW5nZUluZGV4OiAwXG4gICAgfSk7XG5cbiAgICBjb25zdCBhZGROZXdSYW5nZSA9ICh7XG4gICAgICAgIHN0YXJ0WWVhcixcbiAgICAgICAgYWN0aW9uXG4gICAgfToge1xuICAgICAgICBzdGFydFllYXI6IG51bWJlcjtcbiAgICAgICAgYWN0aW9uOiAnaW5jcmVtZW50JyB8ICdkZWNyZW1lbnQnO1xuICAgIH0pID0+IHtcbiAgICAgICAgc3RvcmUudXBkYXRlKCh2YWx1ZXMpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld1JhbmdlcyA9IHZhbHVlcy5yYW5nZXM7XG4gICAgICAgICAgICBuZXdSYW5nZXNbYWN0aW9uID09PSAnaW5jcmVtZW50JyA/ICdwdXNoJyA6ICd1bnNoaWZ0J10oXG4gICAgICAgICAgICAgICAgYCR7c3RhcnRZZWFyfS0ke3N0YXJ0WWVhciArIFlFQVJTX1JBTkdFX1NJWkUgLSAxfWBcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4udmFsdWVzLFxuICAgICAgICAgICAgICAgIHJhbmdlczogbmV3UmFuZ2VzXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGNvbnN0IHVwZGF0ZVJhbmdlcyA9ICh7XG4gICAgICAgIGFjdGlvbixcbiAgICAgICAgZGlzcGxheWVkRGF0ZU1vZGlmaWVyXG4gICAgfToge1xuICAgICAgICBhY3Rpb246ICdkZWNyZW1lbnQnIHwgJ2luY3JlbWVudCc7XG4gICAgICAgIGRpc3BsYXllZERhdGVNb2RpZmllcj86IG51bWJlcjtcbiAgICB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgcmFuZ2VzLCBjcnJSYW5nZUluZGV4IH0gPSBnZXQoc3RvcmUpO1xuICAgICAgICBjb25zdCBjcnJSYW5nZSA9IHJhbmdlc1tjcnJSYW5nZUluZGV4XTtcbiAgICAgICAgY29uc3QgW2NyclJhbmdlU3RhcnRZZWFyLCBjcnJSYW5nZUVuZFllYXJdID0gY3JyUmFuZ2Uuc3BsaXQoJy0nKTtcbiAgICAgICAgY29uc3QgdG9kYXlNb21lbnQgPSB3aW5kb3cubW9tZW50KCkuY2xvbmUoKTtcblxuICAgICAgICBpZiAoYWN0aW9uID09PSAnZGVjcmVtZW50Jykge1xuICAgICAgICAgICAgY29uc3QgcHJldlJhbmdlID0gcmFuZ2VzW2NyclJhbmdlSW5kZXggLSAxXTtcblxuICAgICAgICAgICAgZGlzcGxheWVkRGF0ZVN0b3JlLnNldChcbiAgICAgICAgICAgICAgICB0b2RheU1vbWVudC55ZWFyKCtjcnJSYW5nZVN0YXJ0WWVhciArIChkaXNwbGF5ZWREYXRlTW9kaWZpZXIgfHwgLTEpKS5zdGFydE9mKCd5ZWFyJylcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICFwcmV2UmFuZ2UgJiZcbiAgICAgICAgICAgICAgICBhZGROZXdSYW5nZSh7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0WWVhcjogK2NyclJhbmdlU3RhcnRZZWFyIC0gWUVBUlNfUkFOR0VfU0laRSxcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAnZGVjcmVtZW50J1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoY3JyUmFuZ2VJbmRleCA+IDApIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVDcnJSYW5nZUluZGV4KHsgbW9kaWZpZXI6IC0xIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGFjdGlvbiA9PT0gJ2luY3JlbWVudCcpIHtcbiAgICAgICAgICAgIGNvbnN0IG5leHRSYW5nZSA9IHJhbmdlc1tjcnJSYW5nZUluZGV4ICsgMV07XG5cbiAgICAgICAgICAgIGRpc3BsYXllZERhdGVTdG9yZS5zZXQodG9kYXlNb21lbnQueWVhcigrY3JyUmFuZ2VFbmRZZWFyICsgMSkuc3RhcnRPZigneWVhcicpKTtcblxuICAgICAgICAgICAgIW5leHRSYW5nZSAmJiBhZGROZXdSYW5nZSh7IHN0YXJ0WWVhcjogK2NyclJhbmdlRW5kWWVhciArIDEsIGFjdGlvbjogJ2luY3JlbWVudCcgfSk7XG4gICAgICAgICAgICB1cGRhdGVDcnJSYW5nZUluZGV4KHsgbW9kaWZpZXI6ICsxIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCB1cGRhdGVDcnJSYW5nZUluZGV4ID0gKHsgbW9kaWZpZXIgfTogeyBtb2RpZmllcjogbnVtYmVyIH0pID0+IHtcbiAgICAgICAgc3RvcmUudXBkYXRlKCh2YWx1ZXMpID0+ICh7XG4gICAgICAgICAgICAuLi52YWx1ZXMsXG4gICAgICAgICAgICBjcnJSYW5nZUluZGV4OiB2YWx1ZXMuY3JyUmFuZ2VJbmRleCArIG1vZGlmaWVyXG4gICAgICAgIH0pKTtcbiAgICB9O1xuICAgIGNvbnN0IHNlbGVjdE9yQ3JlYXRlUmFuZ2VzID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7IHJhbmdlcywgY3JyUmFuZ2VJbmRleCwgdG9kYXlSYW5nZSB9ID0gZ2V0KHN0b3JlKTtcbiAgICAgICAgY29uc3QgY3JyRGlzcGxheWVkWWVhciA9IGdldChkaXNwbGF5ZWREYXRlU3RvcmUpLnllYXIoKTtcbiAgICAgICAgY29uc3QgdG9kYXlZZWFyID0gd2luZG93Lm1vbWVudCgpLmNsb25lKCkueWVhcigpO1xuICAgICAgICBjb25zb2xlLmxvZygnc2VsZWN0T3JDcmVhdGVSbmFnZXMoKSwgdG9kYXlSYW5nZTogJywgdG9kYXlSYW5nZSk7XG5cbiAgICAgICAgY29uc3QgZmlyc3RSYW5nZSA9IHJhbmdlc1swXTtcbiAgICAgICAgY29uc3QgbGFzdFJhbmdlID0gcmFuZ2VzW3Jhbmdlcy5sZW5ndGggLSAxXTtcbiAgICAgICAgY29uc3QgZmlyc3RSYW5nZVN0YXJ0WWVhciA9IGZpcnN0UmFuZ2Uuc3BsaXQoJy0nKVswXTtcbiAgICAgICAgY29uc3QgbGFzdFJhbmdlRW5kWWVhciA9IGxhc3RSYW5nZS5zcGxpdCgnLScpWzFdO1xuXG4gICAgICAgIGNvbnN0IG5ld1JhbmdlcyA9IFsuLi5yYW5nZXNdO1xuICAgICAgICBsZXQgbmV3Q3JyUmFuZ2VJbmRleCA9IGNyclJhbmdlSW5kZXg7XG4gICAgICAgIGxldCBuZXdUb2RheVJhbmdlID0gdG9kYXlSYW5nZTtcblxuICAgICAgICBpZiAoK2ZpcnN0UmFuZ2VTdGFydFllYXIgPiBjcnJEaXNwbGF5ZWRZZWFyKSB7XG4gICAgICAgICAgICAvLyBwdXNoIG5ldyByYW5nZXMgYXQgdGhlIHN0YXJ0IG9mIHJhbmdlc1xuICAgICAgICAgICAgbGV0IG5ld0ZpcnN0UmFuZ2VTdGFydFllYXIgPSArZmlyc3RSYW5nZVN0YXJ0WWVhcjtcblxuICAgICAgICAgICAgd2hpbGUgKCtuZXdGaXJzdFJhbmdlU3RhcnRZZWFyID4gY3JyRGlzcGxheWVkWWVhcikge1xuICAgICAgICAgICAgICAgIG5ld1Jhbmdlcy51bnNoaWZ0KFxuICAgICAgICAgICAgICAgICAgICBgJHtuZXdGaXJzdFJhbmdlU3RhcnRZZWFyIC0gWUVBUlNfUkFOR0VfU0laRX0tJHtuZXdGaXJzdFJhbmdlU3RhcnRZZWFyIC0gMX1gXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIG5ld0ZpcnN0UmFuZ2VTdGFydFllYXIgLT0gWUVBUlNfUkFOR0VfU0laRTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbmV3Q3JyUmFuZ2VJbmRleCA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBwdXNoIG5ldyByYW5nZXMgYXQgdGhlIGVuZCBvZiByYW5nZXNcbiAgICAgICAgaWYgKCtsYXN0UmFuZ2VFbmRZZWFyIDwgY3JyRGlzcGxheWVkWWVhcikge1xuICAgICAgICAgICAgbGV0IG5ld0xhc3RSYW5nZUVuZFllYXIgPSArbGFzdFJhbmdlRW5kWWVhcjtcblxuICAgICAgICAgICAgd2hpbGUgKCtuZXdMYXN0UmFuZ2VFbmRZZWFyIDwgY3JyRGlzcGxheWVkWWVhcikge1xuICAgICAgICAgICAgICAgIG5ld1Jhbmdlcy5wdXNoKGAkeytuZXdMYXN0UmFuZ2VFbmRZZWFyICsgMX0tJHtuZXdMYXN0UmFuZ2VFbmRZZWFyICsgWUVBUlNfUkFOR0VfU0laRX1gKTtcblxuICAgICAgICAgICAgICAgIG5ld0xhc3RSYW5nZUVuZFllYXIgKz0gWUVBUlNfUkFOR0VfU0laRTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbmV3Q3JyUmFuZ2VJbmRleCA9IG5ld1Jhbmdlcy5sZW5ndGggLSAxO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gc2VhcmNoIGZvciByYW5nZSBjb250YWluaW5nIGNyckRpc3BsYXllZFllYXIgYW5kIHNldCBpdCBhcyBjdXJyZW50IHJhbmdlXG4gICAgICAgIGlmIChjcnJEaXNwbGF5ZWRZZWFyID49ICtmaXJzdFJhbmdlU3RhcnRZZWFyICYmIGNyckRpc3BsYXllZFllYXIgPD0gK2xhc3RSYW5nZUVuZFllYXIpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2ksIHJhbmdlXSBvZiBuZXdSYW5nZXMuZW50cmllcygpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW3N0YXJ0LCBlbmRdID0gcmFuZ2Uuc3BsaXQoJy0nKTtcblxuICAgICAgICAgICAgICAgIGlmIChjcnJEaXNwbGF5ZWRZZWFyID49ICtzdGFydCAmJiBjcnJEaXNwbGF5ZWRZZWFyIDw9ICtlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3Q3JyUmFuZ2VJbmRleCA9IGk7XG5cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIHRvZGF5UmFuZ2UgaWYgaXQgZG9lc250IGluY2x1ZGUgdG9kYXlZZWFyIGFueW1vcmVcbiAgICAgICAgY29uc3QgW3RvZGF5UmFuZ2VTdGFydFllYXIsIHRvZGF5UmFuZ2VFbmRZZWFyXSA9IHRvZGF5UmFuZ2Uuc3BsaXQoJy0nKTtcbiAgICAgICAgaWYgKCEodG9kYXlZZWFyID49ICt0b2RheVJhbmdlU3RhcnRZZWFyICYmIHRvZGF5WWVhciA8PSArdG9kYXlSYW5nZUVuZFllYXIpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFtfLCByYW5nZV0gb2YgbmV3UmFuZ2VzLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtzdGFydCwgZW5kXSA9IHJhbmdlLnNwbGl0KCctJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAodG9kYXlZZWFyID49ICtzdGFydCAmJiB0b2RheVllYXIgPD0gK2VuZCkge1xuICAgICAgICAgICAgICAgICAgICBuZXdUb2RheVJhbmdlID0gcmFuZ2U7XG5cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIHN0b3JlXG4gICAgICAgIHN0b3JlLnVwZGF0ZSgodmFsdWVzKSA9PiAoe1xuICAgICAgICAgICAgLi4udmFsdWVzLFxuICAgICAgICAgICAgcmFuZ2VzOiBuZXdSYW5nZXMsXG4gICAgICAgICAgICBjcnJSYW5nZUluZGV4OiBuZXdDcnJSYW5nZUluZGV4LFxuICAgICAgICAgICAgdG9kYXlSYW5nZTogbmV3VG9kYXlSYW5nZVxuICAgICAgICB9KSk7XG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGFkZE5ld1JhbmdlLFxuICAgICAgICB1cGRhdGVSYW5nZXMsXG4gICAgICAgIHVwZGF0ZUNyclJhbmdlSW5kZXgsXG4gICAgICAgIHNlbGVjdE9yQ3JlYXRlUmFuZ2VzLFxuICAgICAgICAuLi5zdG9yZVxuICAgIH07XG59XG5cbmNvbnN0IGRpc3BsYXllZERhdGVTdG9yZSA9IHdyaXRhYmxlPE1vbWVudD4od2luZG93Lm1vbWVudCgpKTtcbmNvbnN0IHllYXJzUmFuZ2VzID0gY3JlYXRlWWVhcnNSYW5nZXNTdG9yZSgpO1xuXG5leHBvcnQgeyBkaXNwbGF5ZWREYXRlU3RvcmUsIHllYXJzUmFuZ2VzIH07XG4iLCAiaW1wb3J0IHsgZGVmYXVsdFdlZWtkYXlzLCBkZWZhdWx0V2Vla2RheXNTaG9ydCB9IGZyb20gJ0AvbG9jYWxpemF0aW9uJztcbmltcG9ydCB7IGdldCwgd3JpdGFibGUgfSBmcm9tICdzdmVsdGUvc3RvcmUnO1xuaW1wb3J0IHsgZGlzcGxheWVkRGF0ZVN0b3JlLCBwbHVnaW5DbGFzc1N0b3JlIH0gZnJvbSAnLic7XG5pbXBvcnQgeyBzZXR0aW5nc1N0b3JlIH0gZnJvbSAnQC9zZXR0aW5ncyc7XG5cbnR5cGUgVExvY2FsZURhdGEgPSB7XG4gICAgd2Vla2RheXM6IHN0cmluZ1tdO1xuICAgIHdlZWtkYXlzU2hvcnQ6IHN0cmluZ1tdO1xufTtcbmNvbnN0IGxvY2FsZURhdGFTdG9yZSA9IHdyaXRhYmxlPFRMb2NhbGVEYXRhPih7XG4gICAgd2Vla2RheXM6IGRlZmF1bHRXZWVrZGF5cyxcbiAgICB3ZWVrZGF5c1Nob3J0OiBkZWZhdWx0V2Vla2RheXNTaG9ydFxufSk7XG5cbmZ1bmN0aW9uIHVwZGF0ZUxvY2FsZShsb2NhbGVLZXk6IHN0cmluZykge1xuICAgIHdpbmRvdy5tb21lbnQubG9jYWxlKGxvY2FsZUtleSk7XG5cbiAgICAvLyB1cGRhdGUgc2V0dGluZ3NcbiAgICBzZXR0aW5nc1N0b3JlLnVwZGF0ZSgoc2V0dGluZ3MpID0+ICh7XG4gICAgICAgIC4uLnNldHRpbmdzLFxuICAgICAgICBsb2NhbGVTZXR0aW5nczoge1xuICAgICAgICAgICAgLi4uc2V0dGluZ3MubG9jYWxlU2V0dGluZ3MsXG4gICAgICAgICAgICBsb2NhbGVPdmVycmlkZTogbG9jYWxlS2V5XG4gICAgICAgIH1cbiAgICB9KSlcblxuICAgIC8vIHVwZGF0ZSBVSVxuICAgIGRpc3BsYXllZERhdGVTdG9yZS5zZXQod2luZG93Lm1vbWVudCgpKTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZVdlZWtTdGFydCh3ZWVrU3RhcnRJZDogbnVtYmVyID0gd2luZG93Lm1vbWVudC5sb2NhbGVEYXRhKCkuZmlyc3REYXlPZldlZWsoKSkge1xuICAgIC8vIHVwZGF0ZSBzZXR0aW5nc1xuICAgIHNldHRpbmdzU3RvcmUudXBkYXRlKChzZXR0aW5ncykgPT4gKHtcbiAgICAgICAgLi4uc2V0dGluZ3MsXG4gICAgICAgIGxvY2FsZVNldHRpbmdzOiB7XG4gICAgICAgICAgICAuLi5zZXR0aW5ncy5sb2NhbGVTZXR0aW5ncyxcbiAgICAgICAgICAgIHdlZWtTdGFydElkXG4gICAgICAgIH1cbiAgICB9KSlcblxuICAgIC8vIHVwZGF0ZSBVSVxuICAgIGRpc3BsYXllZERhdGVTdG9yZS5zZXQod2luZG93Lm1vbWVudCgpKTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZVdlZWtkYXlzKCkge1xuICAgIGNvbnN0IHdlZWtTdGFydElkID0gZ2V0KHNldHRpbmdzU3RvcmUpLmxvY2FsZVNldHRpbmdzLndlZWtTdGFydElkO1xuXG4gICAgY29uc3QgbG9jYWxpemVkV2Vla2RheXMgPSB3aW5kb3cubW9tZW50LmxvY2FsZURhdGEoKS53ZWVrZGF5cygpO1xuICAgIGNvbnN0IGxvY2FsaXplZFdlZWtkYXlzU2hvcnQgPSB3aW5kb3cubW9tZW50LmxvY2FsZURhdGEoKS53ZWVrZGF5c01pbigpO1xuICAgIGNvbnN0IHdlZWtkYXlzID0gW1xuICAgICAgICAuLi5sb2NhbGl6ZWRXZWVrZGF5cy5zbGljZSh3ZWVrU3RhcnRJZCksXG4gICAgICAgIC4uLmxvY2FsaXplZFdlZWtkYXlzLnNsaWNlKDAsIHdlZWtTdGFydElkKVxuICAgIF07XG4gICAgY29uc3Qgd2Vla2RheXNTaG9ydCA9IFtcbiAgICAgICAgLi4ubG9jYWxpemVkV2Vla2RheXNTaG9ydC5zbGljZSh3ZWVrU3RhcnRJZCksXG4gICAgICAgIC4uLmxvY2FsaXplZFdlZWtkYXlzU2hvcnQuc2xpY2UoMCwgd2Vla1N0YXJ0SWQpXG4gICAgXTtcblxuICAgIC8vIHVwZGF0ZSBVSVxuICAgIGxvY2FsZURhdGFTdG9yZS51cGRhdGUoKGRhdGEpID0+ICh7XG4gICAgICAgIC4uLmRhdGEsXG4gICAgICAgIHdlZWtkYXlzLFxuICAgICAgICB3ZWVrZGF5c1Nob3J0XG4gICAgfSkpO1xuICAgIGRpc3BsYXllZERhdGVTdG9yZS5zZXQod2luZG93Lm1vbWVudCgpKTtcbn1cbmZ1bmN0aW9uIHNldHVwTG9jYWxlKCkge1xuICAgIHdpbmRvdy5tb21lbnQubG9jYWxlKGdldChzZXR0aW5nc1N0b3JlKS5sb2NhbGVTZXR0aW5ncy5sb2NhbGVPdmVycmlkZSk7XG4gICAgdXBkYXRlV2Vla2RheXMoKTtcbn1cblxuZXhwb3J0IHsgbG9jYWxlRGF0YVN0b3JlLCB1cGRhdGVMb2NhbGUsIHVwZGF0ZVdlZWtTdGFydCwgdXBkYXRlV2Vla2RheXMsIHNldHVwTG9jYWxlIH07XG4iLCAiaW1wb3J0IHsgdHlwZSBJR3JhbnVsYXJpdHkgfSBmcm9tICdAL2lvJztcbmltcG9ydCB0eXBlIHsgVEZpbGUgfSBmcm9tICdvYnNpZGlhbic7XG5pbXBvcnQgeyB0eXBlIFdyaXRhYmxlLCB3cml0YWJsZSB9IGZyb20gJ3N2ZWx0ZS9zdG9yZSc7XG5cbmNvbnN0IG5vdGVzU3RvcmVzOiBSZWNvcmQ8SUdyYW51bGFyaXR5LCBXcml0YWJsZTxSZWNvcmQ8c3RyaW5nLCB7IGZpbGU6IFRGaWxlOyBzdGlja2VyOiBzdHJpbmcgfCBudWxsIH0+Pj4gPSB7XG4gICAgZGF5OiB3cml0YWJsZSh7fSksXG4gICAgd2Vlazogd3JpdGFibGUoe30pLFxuICAgIG1vbnRoOiB3cml0YWJsZSh7fSksXG4gICAgcXVhcnRlcjogd3JpdGFibGUoe30pLFxuICAgIHllYXI6IHdyaXRhYmxlKHt9KVxufTtcblxuY29uc3QgYWN0aXZlRmlsZUlkU3RvcmUgPSB3cml0YWJsZTxzdHJpbmcgfCBudWxsPihudWxsKTtcblxuZXhwb3J0IHsgbm90ZXNTdG9yZXMsIGFjdGl2ZUZpbGVJZFN0b3JlIH07XG4iLCAiaW1wb3J0IHR5cGUgeyBJR3JhbnVsYXJpdHkgfSBmcm9tIFwiQC9pb1wiO1xuaW1wb3J0IHsgdHlwZSBNb21lbnQgfSBmcm9tIFwibW9tZW50XCI7XG5pbXBvcnQgeyBURmlsZSB9IGZyb20gXCJvYnNpZGlhblwiO1xuaW1wb3J0IHsgd3JpdGFibGUgfSBmcm9tIFwic3ZlbHRlL3N0b3JlXCI7XG5cbmV4cG9ydCB0eXBlIFRTdGlja2VyQ29tcG9uZW50UHJvcHMgPSB7XG4gICAgbm90ZTogVEZpbGUgfCB1bmRlZmluZWQgfCBudWxsLFxuICAgIGRhdGU6IE1vbWVudCB8IG51bGwsXG4gICAgZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eSB8IG51bGxcbn1cbmV4cG9ydCBjb25zdCBzdGlja2VyQ29tcG9uZW50UHJvcHNTdG9yZSA9IHdyaXRhYmxlPFRTdGlja2VyQ29tcG9uZW50UHJvcHM+KHtcbiAgICBub3RlOiBudWxsLFxuICAgIGRhdGU6IG51bGwsXG4gICAgZ3JhbnVsYXJpdHk6IG51bGxcbn0pO1xuIiwgImltcG9ydCB0eXBlIHsgTWVudSB9IGZyb20gJ29ic2lkaWFuJztcbmltcG9ydCB7IHdyaXRhYmxlIH0gZnJvbSAnc3ZlbHRlL3N0b3JlJztcbmltcG9ydCB0eXBlIFBlcmlvZGljTm90ZXNDYWxlbmRhclBsdWdpbiBmcm9tICcuLi9tYWluJztcblxuZXhwb3J0IHsgZGlzcGxheWVkRGF0ZVN0b3JlLCB5ZWFyc1JhbmdlcyB9IGZyb20gJy4vZGF0ZXMnO1xuZXhwb3J0IHtcbiAgICBsb2NhbGVEYXRhU3RvcmUsIHNldHVwTG9jYWxlLCB1cGRhdGVMb2NhbGUsIHVwZGF0ZVdlZWtkYXlzLCB1cGRhdGVXZWVrU3RhcnRcbn0gZnJvbSAnLi9sb2NhbGUnO1xuZXhwb3J0IHsgYWN0aXZlRmlsZUlkU3RvcmUsIG5vdGVzU3RvcmVzIH0gZnJvbSAnLi9ub3Rlcyc7XG5leHBvcnQgKiBmcm9tICcuL3BvcG92ZXJzJztcbmV4cG9ydCBjb25zdCBwbHVnaW5DbGFzc1N0b3JlID0gd3JpdGFibGU8UGVyaW9kaWNOb3Rlc0NhbGVuZGFyUGx1Z2luPigpO1xuZXhwb3J0IGNvbnN0IGNyckZpbGVNZW51ID0gd3JpdGFibGU8TWVudSB8IG51bGw+KG51bGwpO1xuZXhwb3J0IGNvbnN0IHJlcmVuZGVyU3RvcmUgPSB3cml0YWJsZSh7IHJlcmVuZGVyOiBmYWxzZSB9KTtcbmV4cG9ydCBjb25zdCB0aGVtZVN0b3JlID0gd3JpdGFibGU8XCJsaWdodFwiIHwgXCJkYXJrXCIgfCBudWxsPihudWxsKTtcbiIsICJpbXBvcnQgeyBNb2RhbCB9IGZyb20gJ29ic2lkaWFuJztcbmltcG9ydCBDb25maXJtYXRpb25Nb2RhbENvbXBvbmVudCBmcm9tICcuLi9jb21wb25lbnRzL0NvbmZpcm1hdGlvbk1vZGFsLnN2ZWx0ZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUNvbmZpcm1hdGlvbkRpYWxvZ1BhcmFtczxUPiB7XG5cdHRleHQ6IHN0cmluZztcblx0dGl0bGU6IHN0cmluZztcblx0Y3RhOiBzdHJpbmc7XG5cdG9uQWNjZXB0OiAoKSA9PiBQcm9taXNlPFQ+O1xuXHRub3RlPzogc3RyaW5nIHwgbnVsbDtcbn1cblxuZXhwb3J0IGNsYXNzIENvbmZpcm1hdGlvbk1vZGFsPFQ+IGV4dGVuZHMgTW9kYWwge1xuXHRjb25zdHJ1Y3Rvcihjb25maWc6IElDb25maXJtYXRpb25EaWFsb2dQYXJhbXM8VD4pIHtcblx0XHRzdXBlcih3aW5kb3cuYXBwKTtcblxuXHRcdGNvbnN0IHsgY29udGVudEVsIH0gPSB0aGlzO1xuXG5cdFx0Ly8gQ3JlYXRlIGEgZGl2IHRvIG1vdW50IHRoZSBTdmVsdGUgY29tcG9uZW50XG5cdFx0Y29uc3Qgc3ZlbHRlQ29udGFpbmVyID0gY29udGVudEVsLmNyZWF0ZURpdigpO1xuXG5cdFx0Ly8gSW5zdGFudGlhdGUgdGhlIFN2ZWx0ZSBjb21wb25lbnRcblx0XHRuZXcgQ29uZmlybWF0aW9uTW9kYWxDb21wb25lbnQoe1xuXHRcdFx0dGFyZ2V0OiBzdmVsdGVDb250YWluZXIsXG5cdFx0XHRwcm9wczoge1xuXHRcdFx0XHRjb25maWcsXG5cdFx0XHRcdG1vZGFsQ2xhc3M6IHRoaXNcblx0XHRcdH1cblx0XHR9KTtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29uZmlybWF0aW9uRGlhbG9nPFQ+KHBhcmFtczogSUNvbmZpcm1hdGlvbkRpYWxvZ1BhcmFtczxUPikge1xuXHRuZXcgQ29uZmlybWF0aW9uTW9kYWwocGFyYW1zKS5vcGVuKCk7XG59XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIiBnZW5lcmljcz1cIlRcIj5cblx0aW1wb3J0IHsgcGx1Z2luQ2xhc3NTdG9yZSB9IGZyb20gJ0Avc3RvcmVzLyc7XG5cblx0aW1wb3J0IHsgc2V0dGluZ3NTdG9yZSwgdHlwZSBJU2V0dGluZ3MgfSBmcm9tICdAL3NldHRpbmdzJztcblxuXHRpbXBvcnQgdHlwZSB7IENvbmZpcm1hdGlvbk1vZGFsLCBJQ29uZmlybWF0aW9uRGlhbG9nUGFyYW1zIH0gZnJvbSAnLi4vbW9kYWxzL2NvbmZpcm1hdGlvbic7XG5cblx0ZXhwb3J0IGxldCBjb25maWc6IElDb25maXJtYXRpb25EaWFsb2dQYXJhbXM8VD47XG5cdGV4cG9ydCBsZXQgbW9kYWxDbGFzczogQ29uZmlybWF0aW9uTW9kYWw8VD47XG5cblx0Y29uc3QgeyB0aXRsZSwgdGV4dCwgbm90ZSwgY3RhLCBvbkFjY2VwdCB9ID0gY29uZmlnO1xuXG5cdGxldCBkb250Q29uZmlybUFnYWluID0gZmFsc2U7XG5cblx0Y29uc3Qgc2hvdWxkQ29uZmlybUJlZm9yZUNyZWF0ZSA9ICgpID0+IHtcblx0XHRpZiAoZG9udENvbmZpcm1BZ2FpbiAmJiAkcGx1Z2luQ2xhc3NTdG9yZSkge1xuXHRcdFx0c2V0dGluZ3NTdG9yZS51cGRhdGUoKG9sZFNldHRpbmdzOiBJU2V0dGluZ3MpID0+IHtcblx0XHRcdFx0Y29uc3QgbmV3U2V0dGluZ3MgPSB7XG5cdFx0XHRcdFx0Li4ub2xkU2V0dGluZ3MsXG5cdFx0XHRcdFx0c2hvdWxkQ29uZmlybUJlZm9yZUNyZWF0ZTogZmFsc2Vcblx0XHRcdFx0fTtcblxuXHRcdFx0XHRyZXR1cm4gbmV3U2V0dGluZ3M7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH07XG5cdGNvbnN0IGhhbmRsZUNhbmNlbCA9IGFzeW5jICgpID0+IHtcblx0XHRtb2RhbENsYXNzLmNsb3NlKCk7XG5cdH07XG5cblx0Y29uc3QgaGFuZGxlQWNjZXB0ID0gYXN5bmMgKCkgPT4ge1xuXHRcdG1vZGFsQ2xhc3MuY2xvc2UoKTtcblxuXHRcdGF3YWl0IG9uQWNjZXB0KCk7XG5cdFx0YXdhaXQgc2hvdWxkQ29uZmlybUJlZm9yZUNyZWF0ZSgpO1xuXHR9O1xuPC9zY3JpcHQ+XG5cbjxkaXY+XG5cdDxoMj57dGl0bGV9PC9oMj5cblx0PHA+e3RleHR9PC9wPlxuXHQ8bGFiZWwgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBob3ZlcjpjdXJzb3ItcG9pbnRlciB0ZXh0LXNtIG10LTdcIj5cblx0XHQ8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJob3ZlcjpjdXJzb3ItcG9pbnRlclwiIGJpbmQ6Y2hlY2tlZD17ZG9udENvbmZpcm1BZ2Fpbn0gLz4gRG9uJ3Qgc2hvd1xuXHRcdGFnYWluXG5cdDwvbGFiZWw+XG5cdHsjaWYgbm90ZX1cblx0XHQ8cCBjbGFzcz1cIm0tMCBtdC0yIHRleHQteHMgdGV4dC1bLS10ZXh0LW11dGVkXVwiPntub3RlfTwvcD5cblx0ey9pZn1cblx0PGRpdiBjbGFzcz1cIm1vZGFsLWJ1dHRvbi1jb250YWluZXIgbXQtM1wiPlxuXHRcdDxidXR0b24gb246Y2xpY2s9e2hhbmRsZUNhbmNlbH0+TmV2ZXIgbWluZDwvYnV0dG9uPlxuXHRcdDxidXR0b24gY2xhc3M9XCJtb2QtY3RhXCIgb246Y2xpY2s9e2hhbmRsZUFjY2VwdH0+e2N0YX08L2J1dHRvbj5cblx0PC9kaXY+XG48L2Rpdj5cblxuPHN0eWxlIGxhbmc9XCJwb3N0Y3NzXCI+XG5cdEB0YWlsd2luZCBjb21wb25lbnRzO1xuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuPC9zdHlsZT5cbiIsICJpbXBvcnQgeyBncmFudWxhcml0aWVzIH0gZnJvbSBcIkAvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBzZXR0aW5nc1N0b3JlIH0gZnJvbSBcIkAvc2V0dGluZ3NcIjtcbmltcG9ydCB7IGFjdGl2ZUZpbGVJZFN0b3JlLCBub3Rlc1N0b3JlcyB9IGZyb20gXCJAL3N0b3Jlc1wiO1xuaW1wb3J0IHsgY3JlYXRlQ29uZmlybWF0aW9uRGlhbG9nIH0gZnJvbSBcIkAvdWkvbW9kYWxzL2NvbmZpcm1hdGlvblwiO1xuaW1wb3J0IHsgY2FwaXRhbGl6ZSwgZ2V0T25DcmVhdGVOb3RlRGlhbG9nTm90ZUZyb21HcmFudWxhcml0eSwgbG9nZ2VyIH0gZnJvbSBcIkAvdXRpbHNcIjtcbmltcG9ydCBtb21lbnQsIHsgdHlwZSBNb21lbnQgfSBmcm9tIFwibW9tZW50XCI7XG5pbXBvcnQgeyBOb3RpY2UsIFRGaWxlLCBXb3Jrc3BhY2VMZWFmIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgeyBnZXQgfSBmcm9tIFwic3ZlbHRlL3N0b3JlXCI7XG5pbXBvcnQgeyBnZXROb3RlRGF0ZVVJRCwgZ2V0UGVyaW9kaWNpdHlGcm9tR3JhbnVsYXJpdHkgfSBmcm9tIFwiLi9wYXJzZVwiO1xuaW1wb3J0IHsgZ2V0Tm90ZVNldHRpbmdzIH0gZnJvbSBcIi4vc2V0dGluZ3NcIjtcbmltcG9ydCB7IHR5cGUgSUdyYW51bGFyaXR5IH0gZnJvbSBcIi4vdHlwZXNcIjtcbmltcG9ydCB7IGdldE5vdGVQYXRoLCBnZXRUZW1wbGF0ZUluZm8gfSBmcm9tIFwiLi92YXVsdFwiO1xuXG5jb25zdCBSRUdFWCA9IChmdW5jdGlvbiBnZW5lcmF0ZVJlZ2V4KCk6IFJlZ0V4cCB7XG4gICAgY29uc3Qgc3RhdGljUGFydHMgPSBbJ3RpdGxlJywgJ2RhdGUnLCAndGltZScsICdjdXJyZW50ZGF0ZScsICdzdW5kYXknLCAnbW9uZGF5JywgJ3R1ZXNkYXknLCAnd2VkbmVzZGF5JywgJ3RodXJzZGF5JywgJ2ZyaWRheScsICdzYXR1cmRheSddO1xuICAgIGNvbnN0IGR5bmFtaWNQYXJ0cyA9IGdyYW51bGFyaXRpZXMuZmxhdE1hcChncmFudWxhcml0eSA9PiB7XG4gICAgICAgIGlmIChncmFudWxhcml0eSA9PT0gJ2RheScpIHtcbiAgICAgICAgICAgIHJldHVybiBbJ3llc3RlcmRheScsICd0b21vcnJvdyddO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFtgcHJldi0ke2dyYW51bGFyaXR5fWAsIGBuZXh0LSR7Z3JhbnVsYXJpdHl9YF1cbiAgICAgICAgfVxuICAgIH0pXG4gICAgY29uc3QgYWxsUGFydHMgPSBbLi4uc3RhdGljUGFydHMsIC4uLmR5bmFtaWNQYXJ0c10uam9pbihcInxcIik7XG4gICAgY29uc3QgcGF0dGVybiA9IGB7e1xcXFxzKigke2FsbFBhcnRzfSkoKFsrLV1cXFxcZCspKFt5UU13V2RobXNdKSk/Oj8oLio/KT9cXFxccyp9fWBcblxuICAgIHJldHVybiBuZXcgUmVnRXhwKHBhdHRlcm4sIFwiZ2lcIilcbn0pKClcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU9yT3Blbk5vdGUoe1xuICAgIGxlYWYsXG4gICAgZGF0ZSxcbiAgICBncmFudWxhcml0eSxcbiAgICBjb25maXJtQmVmb3JlQ3JlYXRlT3ZlcnJpZGUgPSBnZXQoc2V0dGluZ3NTdG9yZSkuc2hvdWxkQ29uZmlybUJlZm9yZUNyZWF0ZVxufToge1xuICAgIGxlYWY6IFdvcmtzcGFjZUxlYWY7XG4gICAgZGF0ZTogTW9tZW50O1xuICAgIGdyYW51bGFyaXR5OiBJR3JhbnVsYXJpdHk7XG4gICAgY29uZmlybUJlZm9yZUNyZWF0ZU92ZXJyaWRlPzogYm9vbGVhbjtcbn0pIHtcbiAgICBjb25zdCB7IGZvcm1hdCwgZm9sZGVyIH0gPSBnZXROb3RlU2V0dGluZ3MoKVtncmFudWxhcml0eV07XG4gICAgY29uc3QgZmlsZW5hbWUgPSBkYXRlLmZvcm1hdChmb3JtYXQpO1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRQYXRoID0gYXdhaXQgZ2V0Tm90ZVBhdGgoZm9sZGVyLCBmaWxlbmFtZSk7XG4gICAgY29uc29sZS5sb2coXCJbY3JlYXRlT3JPcGVuTm90ZSgpXSA+IG5vcm1hbGl6ZWRQYXRoOiBcIiwgbm9ybWFsaXplZFBhdGgpO1xuICAgIGxldCBmaWxlID0gd2luZG93LmFwcC5tZXRhZGF0YUNhY2hlLmdldEZpcnN0TGlua3BhdGhEZXN0KG5vcm1hbGl6ZWRQYXRoLCBcIlwiKVxuICAgIGNvbnNvbGUubG9nKFwiW2NyZWF0ZU9yT3Blbk5vdGUoKV0gPiBmaWxlOiBcIiwgZmlsZSk7XG5cbiAgICBhc3luYyBmdW5jdGlvbiBvcGVuRmlsZShmaWxlOiBURmlsZSB8IG51bGwpIHtcbiAgICAgICAgaWYgKGZpbGUpIHtcbiAgICAgICAgICAgIGZpbGUgJiYgKGF3YWl0IGxlYWYub3BlbkZpbGUoZmlsZSkpO1xuICAgICAgICAgICAgYWN0aXZlRmlsZUlkU3RvcmUuc2V0KGdldE5vdGVEYXRlVUlEKHsgZGF0ZSwgZ3JhbnVsYXJpdHkgfSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGZpbGUpIHtcbiAgICAgICAgYXdhaXQgb3BlbkZpbGUoZmlsZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgcGVyaW9kaWNpdHkgPSBjYXBpdGFsaXplKGdldFBlcmlvZGljaXR5RnJvbUdyYW51bGFyaXR5KGdyYW51bGFyaXR5KSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiW2lvLWNyZWF0ZS1vci1vcGVuLW5vdGVdXCIsIGdyYW51bGFyaXR5LCBmb3JtYXQsIGRhdGUsIGZpbGVuYW1lKTtcblxuICAgICAgICBpZiAoY29uZmlybUJlZm9yZUNyZWF0ZU92ZXJyaWRlKSB7XG4gICAgICAgICAgICBjcmVhdGVDb25maXJtYXRpb25EaWFsb2c8VEZpbGUgfCBudWxsPih7XG4gICAgICAgICAgICAgICAgdGl0bGU6IGBOZXcgJHtwZXJpb2RpY2l0eX0gTm90ZWAsXG4gICAgICAgICAgICAgICAgdGV4dDogYEZpbGUgJHtmaWxlbmFtZX0gZG9lcyBub3QgZXhpc3QuIFdvdWxkIHlvdSBsaWtlIHRvIGNyZWF0ZSBpdD9gLFxuICAgICAgICAgICAgICAgIG5vdGU6IGdldE9uQ3JlYXRlTm90ZURpYWxvZ05vdGVGcm9tR3JhbnVsYXJpdHkoZ3JhbnVsYXJpdHkpLFxuICAgICAgICAgICAgICAgIGN0YTogJ0NyZWF0ZScsXG4gICAgICAgICAgICAgICAgb25BY2NlcHQ6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZmlsZSA9IGF3YWl0IGNyZWF0ZU5vdGUoZ3JhbnVsYXJpdHksIGRhdGUpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY3JlYXRlT3JPcGVuTm90ZSgpID4gb25BY2NlcHQoKSA+IGZpbGU6ICcsIGZpbGUpO1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCBvcGVuRmlsZShmaWxlKTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmlsZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZpbGUgPSBhd2FpdCBjcmVhdGVOb3RlKGdyYW51bGFyaXR5LCBkYXRlKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdcdUQ4M0VcdUREMkZcdUQ4M0RcdUREMjVcdUQ4M0VcdUREMkYgY3JlYXRlT3JPcGVuTm90ZSgpID4gZmlsZTogXHVEODNFXHVERDJGXHVEODNEXHVERDI1XHVEODNFXHVERDJGJywgZmlsZSk7XG4gICAgICAgICAgICBhd2FpdCBvcGVuRmlsZShmaWxlKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjcmVhdGVPck9wZW5Ob3RlKCkgPiBub3Rlc1N0b3JlOiAnLCBnZXQobm90ZXNTdG9yZXNbZ3JhbnVsYXJpdHldKSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU5vdGUoZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eSwgZGF0ZTogTW9tZW50KSB7XG4gICAgY29uc3QgeyB0ZW1wbGF0ZSwgZm9ybWF0LCBmb2xkZXIgfSA9IGdldE5vdGVTZXR0aW5ncygpW2dyYW51bGFyaXR5XTtcbiAgICBsb2dnZXIoXCJbaW8tY3JlYXRlLS1ub3RlXVwiLCBncmFudWxhcml0eSwgZm9ybWF0KTtcblxuICAgIGNvbnN0IGZpbGVuYW1lID0gZGF0ZS5mb3JtYXQoZm9ybWF0KTtcbiAgICBjb25zdCBub3JtYWxpemVkUGF0aCA9IGF3YWl0IGdldE5vdGVQYXRoKGZvbGRlciwgZmlsZW5hbWUpO1xuICAgIGNvbnN0IFt0ZW1wbGF0ZUNvbnRlbnRzLCBJRm9sZEluZm9dID0gYXdhaXQgZ2V0VGVtcGxhdGVJbmZvKHRlbXBsYXRlKTtcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGNyZWF0ZWRGaWxlID0gYXdhaXQgd2luZG93LmFwcC52YXVsdC5jcmVhdGUoXG4gICAgICAgICAgICBub3JtYWxpemVkUGF0aCxcbiAgICAgICAgICAgIHJlcGxhY2VUZW1wbGF0ZUNvbnRlbnRzKGRhdGUsIGZvcm1hdCwgdGVtcGxhdGVDb250ZW50cylcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICAod2luZG93LmFwcCBhcyBhbnkpLmZvbGRNYW5hZ2VyLnNhdmUoY3JlYXRlZEZpbGUsIElGb2xkSW5mbyk7XG5cbiAgICAgICAgcmV0dXJuIGNyZWF0ZWRGaWxlO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gY3JlYXRlIGZpbGU6ICcke25vcm1hbGl6ZWRQYXRofSdgLCBlcnIpO1xuICAgICAgICBuZXcgTm90aWNlKGBGYWlsZWQgdG8gY3JlYXRlIGZpbGU6ICcke25vcm1hbGl6ZWRQYXRofSdgKTtcblxuICAgICAgICByZXR1cm4gbnVsbFxuICAgIH1cbn1cblxuLyoqXG4gKiBSZXBsYWNlcyBkYXRlIGFuZCB0aW1lIHBsYWNlaG9sZGVycyBpbiBhIHRlbXBsYXRlIHN0cmluZyB3aXRoIGZvcm1hdHRlZCBkYXRlIHN0cmluZ3MuXG4gKiBcbiAqIFRoaXMgZnVuY3Rpb24gc3VwcG9ydHMgdmFyaW91cyBkYXRlLXJlbGF0ZWQgcGxhY2Vob2xkZXJzIGFuZCBhbGxvd3MgZm9yIGRhdGUgYWRqdXN0bWVudHNcbiAqIGFuZCBjdXN0b20gZm9ybWF0dGluZy4gSXQncyBkZXNpZ25lZCB0byBiZSBmbGV4aWJsZSBhbmQgaGFuZGxlIGEgd2lkZSByYW5nZSBvZiBkYXRlIGFuZFxuICogdGltZSByZXByZXNlbnRhdGlvbiBuZWVkcyBpbiB0ZW1wbGF0ZXMuXG4gKiBcbiAqIFN1cHBvcnRlZCBwbGFjZWhvbGRlcnM6XG4gKiAtIHt7dGl0bGV9fTogVGhlIG1haW4gZGF0ZSAodXN1YWxseSB0aGUgbm90ZSdzIGRhdGUpXG4gKiAtIHt7ZGF0ZX19OiBTYW1lIGFzIHRpdGxlXG4gKiAtIHt7dGltZX19OiBUaGUgY3VycmVudCB0aW1lXG4gKiAtIHt7Y3VycmVudERhdGV9fTogVGhlIGN1cnJlbnQgZGF0ZSBhbmQgdGltZVxuICogLSB7e3llc3RlcmRheX19OiBUaGUgZGF5IGJlZm9yZSB0aGUgbWFpbiBkYXRlXG4gKiAtIHt7dG9tb3Jyb3d9fTogVGhlIGRheSBhZnRlciB0aGUgbWFpbiBkYXRlXG4gKiAtIHt7cHJldi08Z3JhbnVsYXJpdHk+fX06IFRoZSBwcmV2aW91cyA8Z3JhbnVsYXJpdHk+IGJlZm9yZSB0aGUgbWFpbiBkYXRlXG4gKiAtIHt7bmV4dC08Z3JhbnVsYXJpdHk+fX06IFRoZSBuZXh0IDxncmFudWxhcml0eT4gYWZ0ZXIgdGhlIG1haW4gZGF0ZVxuICogLSB7e3dlZWtkYXl9fTogQW55IGRheSBvZiB0aGUgd2VlayAoZS5nLiwge3ttb25kYXl9fSwge3t0dWVzZGF5fX0sIGV0Yy4pXG4gKiBcbiAqIEVhY2ggcGxhY2Vob2xkZXIgc3VwcG9ydHM6XG4gKiAtIERhdGUgYWRqdXN0bWVudHM6IGUuZy4sIHt7ZGF0ZSsxZH19LCB7e21vbmRheS0xd319XG4gKiAtIEN1c3RvbSBmb3JtYXR0aW5nOiBlLmcuLCB7e2RhdGU6WVlZWS1NTS1ERH19LCB7e3RpbWU6SEg6bW06c3N9fVxuICogXG4gKiBFeGFtcGxlczpcbiAqIC0gVGl0bGU6IHt7dGl0bGV9fVxuKiAtIERhdGU6IHt7ZGF0ZX19XG4qIC0gQ3VycmVudCB0aW1lOiB7e3RpbWV9fVxuKiAtIEN1cnJlbnQgZGF0ZToge3tjdXJyZW50REF0ZTpMTExMfX1cbiogLSBTdW5kYXk6IHt7c3VuZGF5fX1cbiogLSBUb21vcnJvdzoge3t0b21vcnJvdzpkZGRkLCBNTU1NIERvIFlZWVl9fVxuKiAtIENyciBXZWVrOiB7e2RhdGU6d319XG4qIC0gTmV4dCBXZWVrOiB7e25leHQtd2VlazpbbG9jYWxlIHdlZWtdLXcsIFtJU08gV2Vla10tV319XG4qIC0gUHJldiBNb25kYXk6IHt7bW9uZGF5LTF3OkxMTEx9fVxuKiAtIE5leHQgUXVhcnRlcjoge3tuZXh0LXF1YXJ0ZXI6fX1cbiAqIFxuICogQHBhcmFtIGdyYW51bGFyaXR5IFRoZSBncmFudWxhcml0eSBvZiB0aGUgbm90ZSAoZGF5LCB3ZWVrLCBtb250aCwgcXVhcnRlciwgeWVhcilcbiAqIEBwYXJhbSBkYXRlIFRoZSBtYWluIGRhdGUgdG8gdXNlIGZvciByZXBsYWNlbWVudHNcbiAqIEBwYXJhbSBkZWZhdWx0Rm9ybWF0IFRoZSBkZWZhdWx0IGZvcm1hdCB0byB1c2Ugd2hlbiBubyBjdXN0b20gZm9ybWF0IGlzIHNwZWNpZmllZFxuICogQHBhcmFtIHRlbXBsYXRlIFRoZSB0ZW1wbGF0ZSBzdHJpbmcgY29udGFpbmluZyBwbGFjZWhvbGRlcnMgdG8gYmUgcmVwbGFjZWRcbiAqIEByZXR1cm5zIFRoZSB0ZW1wbGF0ZSBzdHJpbmcgd2l0aCBhbGwgcGxhY2Vob2xkZXJzIHJlcGxhY2VkIGJ5IGZvcm1hdHRlZCBkYXRlIHN0cmluZ3NcbiAqL1xuZnVuY3Rpb24gcmVwbGFjZVRlbXBsYXRlQ29udGVudHMoXG4gICAgZGF0ZTogTW9tZW50LFxuICAgIGRlZmF1bHRGb3JtYXQ6IHN0cmluZyxcbiAgICB0ZW1wbGF0ZTogc3RyaW5nXG4pOiBzdHJpbmcge1xuICAgIGNvbnN0IG5vdyA9IG1vbWVudCgpO1xuICAgIGNvbnN0IGxvY2FsZVdlZWtkYXlzID0gKGZ1bmN0aW9uIGdldExvY2FsZVdlZWtkYXlzKCk6IHN0cmluZ1tdIHtcbiAgICAgICAgY29uc3QgeyBtb21lbnQgfSA9IHdpbmRvdztcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgICAgbGV0IHdlZWtTdGFydCA9ICg8YW55Pm1vbWVudC5sb2NhbGVEYXRhKCkpLl93ZWVrLmRvdztcbiAgICAgICAgY29uc3Qgd2Vla2RheXMgPSBbJ3N1bmRheScsICdtb25kYXknLCAndHVlc2RheScsICd3ZWRuZXNkYXknLCAndGh1cnNkYXknLCAnZnJpZGF5JywgJ3NhdHVyZGF5J107XG5cbiAgICAgICAgd2hpbGUgKHdlZWtTdGFydCkge1xuICAgICAgICAgICAgd2Vla2RheXMucHVzaCh3ZWVrZGF5cy5zaGlmdCgpIGFzIHN0cmluZyk7XG4gICAgICAgICAgICB3ZWVrU3RhcnQtLTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB3ZWVrZGF5cztcbiAgICB9KSgpXG5cbiAgICByZXR1cm4gdGVtcGxhdGUucmVwbGFjZShSRUdFWCxcbiAgICAgICAgKG1hdGNoLCB0eXBlLCBhZGp1c3RtZW50LCBkZWx0YSwgdW5pdCwgZm9ybWF0KSA9PiB7XG4gICAgICAgICAgICBsZXQgbW9tZW50RGF0ZTogTW9tZW50O1xuICAgICAgICAgICAgbGV0IG1vZGlmaWVkRGVmYXVsdEZvcm1hdCA9IGRlZmF1bHRGb3JtYXQ7XG5cbiAgICAgICAgICAgIHN3aXRjaCAodHlwZS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAndGl0bGUnOlxuICAgICAgICAgICAgICAgIGNhc2UgJ2RhdGUnOlxuICAgICAgICAgICAgICAgICAgICBtb21lbnREYXRlID0gZGF0ZS5jbG9uZSgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgJ3RpbWUnOlxuICAgICAgICAgICAgICAgICAgICBtb21lbnREYXRlID0gbm93LmNsb25lKCk7XG4gICAgICAgICAgICAgICAgICAgIG1vZGlmaWVkRGVmYXVsdEZvcm1hdCA9ICdISDptbSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAnY3VycmVudGRhdGUnOlxuICAgICAgICAgICAgICAgICAgICBtb21lbnREYXRlID0gbm93LmNsb25lKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAneWVzdGVyZGF5JzpcbiAgICAgICAgICAgICAgICAgICAgbW9tZW50RGF0ZSA9IGRhdGUuY2xvbmUoKS5zdWJ0cmFjdCgxLCAnZGF5Jyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAndG9tb3Jyb3cnOlxuICAgICAgICAgICAgICAgICAgICBtb21lbnREYXRlID0gZGF0ZS5jbG9uZSgpLmFkZCgxLCAnZGF5Jyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKGxvY2FsZVdlZWtkYXlzLmluY2x1ZGVzKHR5cGUudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGhhbmRsZSB3ZWVrZGF5c1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9tZW50RGF0ZSA9IGRhdGUuY2xvbmUoKS53ZWVrZGF5KGxvY2FsZVdlZWtkYXlzLmluZGV4T2YodHlwZS50b0xvd2VyQ2FzZSgpKSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZS5pbmNsdWRlcyhcInByZXZcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGhhbmRsZSBwcmV2aW91cyBncmFudWxhcml0aWVzXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBncmFudWxhcml0eSA9ICh0eXBlIGFzIHN0cmluZykuc3BsaXQoXCItXCIpWzFdIGFzIElHcmFudWxhcml0eTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vbWVudERhdGUgPSBkYXRlLmNsb25lKCkuc3VidHJhY3QoMSwgZ3JhbnVsYXJpdHkpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUuaW5jbHVkZXMoXCJuZXh0XCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBoYW5kbGUgbmV4dCBncmFudWxhcml0aWVzXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBncmFudWxhcml0eSA9ICh0eXBlIGFzIHN0cmluZykuc3BsaXQoXCItXCIpWzFdIGFzIElHcmFudWxhcml0eTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vbWVudERhdGUgPSBkYXRlLmNsb25lKCkuYWRkKDEsIGdyYW51bGFyaXR5KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaDsgLy8gUmV0dXJuIHVuY2hhbmdlZCBpZiBub3QgcmVjb2duaXplZFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoYWRqdXN0bWVudCkge1xuICAgICAgICAgICAgICAgIG1vbWVudERhdGUuYWRkKHBhcnNlSW50KGRlbHRhLCAxMCksIHVuaXQgYXMgbW9tZW50LkR1cmF0aW9uSW5wdXRBcmcyKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG1vbWVudERhdGUuZm9ybWF0KFxuICAgICAgICAgICAgICAgIGZvcm1hdCB8fCBtb2RpZmllZERlZmF1bHRGb3JtYXRcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICApO1xufVxuXG4vLyBFeGFtcGxlIHVzYWdlXG5jb25zdCB0ZW1wbGF0ZSA9IGBcblRpdGxlOiB7e3RpdGxlfX1cbkRhdGU6IHt7ZGF0ZX19XG5DdXJyZW50IHRpbWU6IHt7dGltZX19XG5DdXJyZW50IGRhdGU6IHt7Y3VycmVudERBdGU6TExMTH19XG5TdW5kYXk6IHt7c3VuZGF5fX1cblRvbW9ycm93OiB7e3RvbW9ycm93OmRkZGQsIE1NTU0gRG8gWVlZWX19XG5DcnIgV2Vlazoge3tkYXRlOnd9fVxuTmV4dCBXZWVrOiB7e25leHQtd2VlazpbbG9jYWxlIHdlZWtdLXcsIFtJU08gV2Vla10tV319XG5QcmV2IE1vbmRheToge3ttb25kYXktMXc6TExMTH19XG5OZXh0IFF1YXJ0ZXI6IHt7bmV4dC1xdWFydGVyOn19XG5cbldyb25nOiB7e3dyb25nOld9fVxuYDtcblxuY29uc3QgcmVzdWx0ID0gcmVwbGFjZVRlbXBsYXRlQ29udGVudHMobW9tZW50KCksICdZWVlZLU1NLUREJywgdGVtcGxhdGUpO1xuY29uc29sZS5sb2cocmVzdWx0KTtcbiIsICJpbXBvcnQgeyBEQUlMWV9OT1RFU19QTFVHSU5fSUQsIERFRkFVTFRfRk9STUFUU19QRVJfR1JBTlVMQVJJVFksIGdyYW51bGFyaXRpZXMsIFBFUklPRElDX05PVEVTX1BMVUdJTl9JRCB9IGZyb20gJ0AvY29uc3RhbnRzJztcbmltcG9ydCB0eXBlIHsgSUdyYW51bGFyaXR5IH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdzdmVsdGUvc3RvcmUnO1xuaW1wb3J0IHsgc2V0dGluZ3NTdG9yZSB9IGZyb20gJ0Avc2V0dGluZ3MnO1xuXG50eXBlIFRTZXR0aW5ncyA9IFJlY29yZDxJR3JhbnVsYXJpdHksIHsgZm9ybWF0OiBzdHJpbmcsIGZvbGRlcjogc3RyaW5nLCB0ZW1wbGF0ZTogc3RyaW5nIH0+O1xuLyoqXG4gKiBSZWFkIHVzZXIgc2V0dGluZ3MgZnJvbSBub3RlcyB0YWIgaW4gYHNldHRpbmdzL3BsdWdpbi10YWIudHNgIGFuZCBgZGFpbHktbm90ZXNgIHBsdWdpbnNcbiAqIHRvIGtlZXAgYmVoYXZpb3Igb2YgY3JlYXRpbmcgYSBuZXcgbm90ZSBpbi1zeW5jLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Tm90ZVNldHRpbmdzKCkge1xuICAgIGNvbnN0IGludGVybmFsUGx1Z2lucyA9ICg8YW55PndpbmRvdy5hcHApLmludGVybmFsUGx1Z2lucztcblxuICAgIGNvbnN0IHBuU2V0dGluZ3MgPSBnZXQoc2V0dGluZ3NTdG9yZSkubm90ZXM7XG4gICAgY29uc3QgZG5TZXR0aW5ncyA9IGludGVybmFsUGx1Z2lucz8uZ2V0UGx1Z2luQnlJZChEQUlMWV9OT1RFU19QTFVHSU5fSUQpPy5pbnN0YW5jZT8ub3B0aW9ucztcblxuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoZ3JhbnVsYXJpdGllcy5tYXAoKGdyYW51bGFyaXR5KSA9PiB7XG4gICAgICAgIGNvbnN0IGdyYW51bGFyaXR5U2V0dGluZ3MgPSBwblNldHRpbmdzW2dyYW51bGFyaXR5XS5lbmFibGVkXG4gICAgICAgICAgICA/IHBuU2V0dGluZ3NbZ3JhbnVsYXJpdHldXG4gICAgICAgICAgICA6IGdyYW51bGFyaXR5ID09PSBcImRheVwiID8gZG5TZXR0aW5ncyA6IHt9O1xuXG4gICAgICAgIGNvbnN0IHZhbGlkR3JhbnVsYXJpdHlTZXR0aW5ncyA9IHtcbiAgICAgICAgICAgIGZvcm1hdDogZ3JhbnVsYXJpdHlTZXR0aW5ncy5mb3JtYXQ/LnRyaW0oKSB8fCBERUZBVUxUX0ZPUk1BVFNfUEVSX0dSQU5VTEFSSVRZW2dyYW51bGFyaXR5XSxcbiAgICAgICAgICAgIGZvbGRlcjogZ3JhbnVsYXJpdHlTZXR0aW5ncy5mb2xkZXI/LnRyaW0oKSB8fCAnLycsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogZ3JhbnVsYXJpdHlTZXR0aW5ncy50ZW1wbGF0ZT8udHJpbSgpIHx8ICcnXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gW2dyYW51bGFyaXR5LCB2YWxpZEdyYW51bGFyaXR5U2V0dGluZ3NdXG4gICAgfSkpIGFzIFRTZXR0aW5nc1xufVxuIiwgImltcG9ydCB7IG5vcm1hbGl6ZVBhdGgsIE5vdGljZSwgVEZpbGUgfSBmcm9tIFwib2JzaWRpYW5cIjtcblxuaW50ZXJmYWNlIElGb2xkIHtcbiAgICBmcm9tOiBudW1iZXI7XG4gICAgdG86IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIElGb2xkSW5mbyB7XG4gICAgZm9sZHM6IElGb2xkW107XG59XG5cbi8vIENyZWRpdDogQGNyZWF0aW9uaXgvcGF0aC5qc1xuZXhwb3J0IGZ1bmN0aW9uIGpvaW4oLi4ucGFydFNlZ21lbnRzOiBzdHJpbmdbXSk6IHN0cmluZyB7XG4gICAgLy8gU3BsaXQgdGhlIGlucHV0cyBpbnRvIGEgbGlzdCBvZiBwYXRoIGNvbW1hbmRzLlxuICAgIGxldCBwYXJ0czogc3RyaW5nW10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IHBhcnRTZWdtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgcGFydHMgPSBwYXJ0cy5jb25jYXQocGFydFNlZ21lbnRzW2ldLnNwbGl0KFwiL1wiKSk7XG4gICAgfVxuICAgIC8vIEludGVycHJldCB0aGUgcGF0aCBjb21tYW5kcyB0byBnZXQgdGhlIG5ldyByZXNvbHZlZCBwYXRoLlxuICAgIGNvbnN0IG5ld1BhcnRzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBwYXJ0cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgY29uc3QgcGFydCA9IHBhcnRzW2ldO1xuICAgICAgICAvLyBSZW1vdmUgbGVhZGluZyBhbmQgdHJhaWxpbmcgc2xhc2hlc1xuICAgICAgICAvLyBBbHNvIHJlbW92ZSBcIi5cIiBzZWdtZW50c1xuICAgICAgICBpZiAoIXBhcnQgfHwgcGFydCA9PT0gXCIuXCIpIGNvbnRpbnVlO1xuICAgICAgICAvLyBQdXNoIG5ldyBwYXRoIHNlZ21lbnRzLlxuICAgICAgICBlbHNlIG5ld1BhcnRzLnB1c2gocGFydCk7XG4gICAgfVxuICAgIC8vIFByZXNlcnZlIHRoZSBpbml0aWFsIHNsYXNoIGlmIHRoZXJlIHdhcyBvbmUuXG4gICAgaWYgKHBhcnRzWzBdID09PSBcIlwiKSBuZXdQYXJ0cy51bnNoaWZ0KFwiXCIpO1xuICAgIC8vIFR1cm4gYmFjayBpbnRvIGEgc2luZ2xlIHN0cmluZyBwYXRoLlxuICAgIHJldHVybiBuZXdQYXJ0cy5qb2luKFwiL1wiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJhc2VuYW1lKGZ1bGxQYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGxldCBiYXNlID0gZnVsbFBhdGguc3Vic3RyaW5nKGZ1bGxQYXRoLmxhc3RJbmRleE9mKFwiL1wiKSArIDEpO1xuICAgIGlmIChiYXNlLmxhc3RJbmRleE9mKFwiLlwiKSAhPSAtMSlcbiAgICAgICAgYmFzZSA9IGJhc2Uuc3Vic3RyaW5nKDAsIGJhc2UubGFzdEluZGV4T2YoXCIuXCIpKTtcbiAgICByZXR1cm4gYmFzZTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZW5zdXJlRm9sZGVyRXhpc3RzKHBhdGg6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGNvbnN0IGRpcnMgPSBwYXRoLnJlcGxhY2UoL1xcXFwvZywgXCIvXCIpLnNwbGl0KFwiL1wiKTtcbiAgICBkaXJzLnBvcCgpOyAvLyByZW1vdmUgYmFzZW5hbWVcblxuICAgIGlmIChkaXJzLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBkaXIgPSBqb2luKC4uLmRpcnMpO1xuICAgICAgICBpZiAoIXdpbmRvdy5hcHAudmF1bHQuZ2V0QWJzdHJhY3RGaWxlQnlQYXRoKGRpcikpIHtcbiAgICAgICAgICAgIGF3YWl0IHdpbmRvdy5hcHAudmF1bHQuY3JlYXRlRm9sZGVyKGRpcik7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGVuc3VyZVRlbXBsYXRlRXhpc3RzKHBhdGg6IHN0cmluZykge1xuICAgIC8vIGNyZWF0ZSBkaXJlY3RvcnkgaWYgaXQgZG9lc24ndCBleGlzdFxuICAgIGF3YWl0IGVuc3VyZUZvbGRlckV4aXN0cyhwYXRoKTtcblxuICAgIC8vIGNyZWF0ZSBmaWxlIGlmIGl0IGRvZXNudCBleGlzdFxuICAgIGlmICghd2luZG93LmFwcC52YXVsdC5nZXRBYnN0cmFjdEZpbGVCeVBhdGgocGF0aCkpIHtcbiAgICAgICAgYXdhaXQgd2luZG93LmFwcC52YXVsdC5jcmVhdGUocGF0aCwgXCJcIik7XG4gICAgfVxufVxuXG4vKipcbiAgICAqIHJldHVybnMgYSBub3JtYWxpemVkIHBhdGggYmFzZWQgb24gdGhlIGdpdmVuIGRpcmVjdG9yeSBhbmQgZmlsZW5hbWVcbiAgICAqIGNyZWF0ZXMgYSBuZXcgZGlyZWN0b3J5IGlmIGl0IGRvZXNuJ3QgZXhpc3RcbiovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Tm90ZVBhdGgoXG4gICAgZGlyZWN0b3J5OiBzdHJpbmcsXG4gICAgZmlsZW5hbWU6IHN0cmluZ1xuKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICBpZiAoIWZpbGVuYW1lLmVuZHNXaXRoKFwiLm1kXCIpKSB7XG4gICAgICAgIGZpbGVuYW1lICs9IFwiLm1kXCI7XG4gICAgfVxuICAgIGNvbnN0IHBhdGggPSBub3JtYWxpemVQYXRoKGpvaW4oZGlyZWN0b3J5LCBmaWxlbmFtZSkpO1xuXG4gICAgYXdhaXQgZW5zdXJlRm9sZGVyRXhpc3RzKHBhdGgpO1xuXG4gICAgcmV0dXJuIHBhdGg7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRUZW1wbGF0ZUluZm8oXG4gICAgdGVtcGxhdGU6IHN0cmluZ1xuKTogUHJvbWlzZTxbc3RyaW5nLCBJRm9sZEluZm8gfCBudWxsXT4ge1xuICAgIGNvbnN0IHsgbWV0YWRhdGFDYWNoZSwgdmF1bHQgfSA9IHdpbmRvdy5hcHA7XG5cbiAgICBpZiAoIXRlbXBsYXRlLmVuZHNXaXRoKFwiLm1kXCIpKSB7XG4gICAgICAgIHRlbXBsYXRlICs9IFwiLm1kXCI7XG4gICAgfVxuICAgIGNvbnN0IG5vcm1hbGl6ZWRQYXRoID0gbm9ybWFsaXplUGF0aCh0ZW1wbGF0ZSk7XG4gICAgaWYgKG5vcm1hbGl6ZWRQYXRoID09PSBcIi9cIikge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtcIlwiLCBudWxsXSk7XG4gICAgfVxuICAgIGF3YWl0IGVuc3VyZVRlbXBsYXRlRXhpc3RzKG5vcm1hbGl6ZWRQYXRoKTtcblxuICAgIHRyeSB7XG4gICAgICAgIC8vIGdldCBGaXJzdCBmaWxlIG1hdGNoaW5nIGdpdmVuIG5vcm1hbGl6ZWRQYXRoXG4gICAgICAgIGNvbnN0IHRlbXBsYXRlRmlsZSA9IG1ldGFkYXRhQ2FjaGUuZ2V0Rmlyc3RMaW5rcGF0aERlc3Qobm9ybWFsaXplZFBhdGgsIFwiXCIpO1xuICAgICAgICBjb25zdCBjb250ZW50cyA9IGF3YWl0IHZhdWx0LmNhY2hlZFJlYWQodGVtcGxhdGVGaWxlIGFzIFRGaWxlKTtcblxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICBjb25zdCBJRm9sZEluZm8gPSAod2luZG93LmFwcCBhcyBhbnkpLmZvbGRNYW5hZ2VyLmxvYWQodGVtcGxhdGVGaWxlKTtcbiAgICAgICAgcmV0dXJuIFtjb250ZW50cywgSUZvbGRJbmZvXTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICAgIGBGYWlsZWQgdG8gcmVhZCB0aGUgZGFpbHkgbm90ZSB0ZW1wbGF0ZSAnJHtub3JtYWxpemVkUGF0aH0nYCxcbiAgICAgICAgICAgIGVyclxuICAgICAgICApO1xuICAgICAgICBuZXcgTm90aWNlKFwiRmFpbGVkIHRvIHJlYWQgdGhlIGRhaWx5IG5vdGUgdGVtcGxhdGVcIik7XG4gICAgICAgIHJldHVybiBbXCJcIiwgbnVsbF07XG4gICAgfVxufVxuIiwgIntcImNhdGVnb3JpZXNcIjpbe1wiaWRcIjpcInBlb3BsZVwiLFwiZW1vamlzXCI6W1wiZ3Jpbm5pbmdcIixcInNtaWxleVwiLFwic21pbGVcIixcImdyaW5cIixcImxhdWdoaW5nXCIsXCJzd2VhdF9zbWlsZVwiLFwicm9sbGluZ19vbl90aGVfZmxvb3JfbGF1Z2hpbmdcIixcImpveVwiLFwic2xpZ2h0bHlfc21pbGluZ19mYWNlXCIsXCJ1cHNpZGVfZG93bl9mYWNlXCIsXCJtZWx0aW5nX2ZhY2VcIixcIndpbmtcIixcImJsdXNoXCIsXCJpbm5vY2VudFwiLFwic21pbGluZ19mYWNlX3dpdGhfM19oZWFydHNcIixcImhlYXJ0X2V5ZXNcIixcInN0YXItc3RydWNrXCIsXCJraXNzaW5nX2hlYXJ0XCIsXCJraXNzaW5nXCIsXCJyZWxheGVkXCIsXCJraXNzaW5nX2Nsb3NlZF9leWVzXCIsXCJraXNzaW5nX3NtaWxpbmdfZXllc1wiLFwic21pbGluZ19mYWNlX3dpdGhfdGVhclwiLFwieXVtXCIsXCJzdHVja19vdXRfdG9uZ3VlXCIsXCJzdHVja19vdXRfdG9uZ3VlX3dpbmtpbmdfZXllXCIsXCJ6YW55X2ZhY2VcIixcInN0dWNrX291dF90b25ndWVfY2xvc2VkX2V5ZXNcIixcIm1vbmV5X21vdXRoX2ZhY2VcIixcImh1Z2dpbmdfZmFjZVwiLFwiZmFjZV93aXRoX2hhbmRfb3Zlcl9tb3V0aFwiLFwiZmFjZV93aXRoX29wZW5fZXllc19hbmRfaGFuZF9vdmVyX21vdXRoXCIsXCJmYWNlX3dpdGhfcGVla2luZ19leWVcIixcInNodXNoaW5nX2ZhY2VcIixcInRoaW5raW5nX2ZhY2VcIixcInNhbHV0aW5nX2ZhY2VcIixcInppcHBlcl9tb3V0aF9mYWNlXCIsXCJmYWNlX3dpdGhfcmFpc2VkX2V5ZWJyb3dcIixcIm5ldXRyYWxfZmFjZVwiLFwiZXhwcmVzc2lvbmxlc3NcIixcIm5vX21vdXRoXCIsXCJkb3R0ZWRfbGluZV9mYWNlXCIsXCJmYWNlX2luX2Nsb3Vkc1wiLFwic21pcmtcIixcInVuYW11c2VkXCIsXCJmYWNlX3dpdGhfcm9sbGluZ19leWVzXCIsXCJncmltYWNpbmdcIixcImZhY2VfZXhoYWxpbmdcIixcImx5aW5nX2ZhY2VcIixcInNoYWtpbmdfZmFjZVwiLFwicmVsaWV2ZWRcIixcInBlbnNpdmVcIixcInNsZWVweVwiLFwiZHJvb2xpbmdfZmFjZVwiLFwic2xlZXBpbmdcIixcIm1hc2tcIixcImZhY2Vfd2l0aF90aGVybW9tZXRlclwiLFwiZmFjZV93aXRoX2hlYWRfYmFuZGFnZVwiLFwibmF1c2VhdGVkX2ZhY2VcIixcImZhY2Vfdm9taXRpbmdcIixcInNuZWV6aW5nX2ZhY2VcIixcImhvdF9mYWNlXCIsXCJjb2xkX2ZhY2VcIixcIndvb3p5X2ZhY2VcIixcImRpenp5X2ZhY2VcIixcImZhY2Vfd2l0aF9zcGlyYWxfZXllc1wiLFwiZXhwbG9kaW5nX2hlYWRcIixcImZhY2Vfd2l0aF9jb3dib3lfaGF0XCIsXCJwYXJ0eWluZ19mYWNlXCIsXCJkaXNndWlzZWRfZmFjZVwiLFwic3VuZ2xhc3Nlc1wiLFwibmVyZF9mYWNlXCIsXCJmYWNlX3dpdGhfbW9ub2NsZVwiLFwiY29uZnVzZWRcIixcImZhY2Vfd2l0aF9kaWFnb25hbF9tb3V0aFwiLFwid29ycmllZFwiLFwic2xpZ2h0bHlfZnJvd25pbmdfZmFjZVwiLFwid2hpdGVfZnJvd25pbmdfZmFjZVwiLFwib3Blbl9tb3V0aFwiLFwiaHVzaGVkXCIsXCJhc3RvbmlzaGVkXCIsXCJmbHVzaGVkXCIsXCJwbGVhZGluZ19mYWNlXCIsXCJmYWNlX2hvbGRpbmdfYmFja190ZWFyc1wiLFwiZnJvd25pbmdcIixcImFuZ3Vpc2hlZFwiLFwiZmVhcmZ1bFwiLFwiY29sZF9zd2VhdFwiLFwiZGlzYXBwb2ludGVkX3JlbGlldmVkXCIsXCJjcnlcIixcInNvYlwiLFwic2NyZWFtXCIsXCJjb25mb3VuZGVkXCIsXCJwZXJzZXZlcmVcIixcImRpc2FwcG9pbnRlZFwiLFwic3dlYXRcIixcIndlYXJ5XCIsXCJ0aXJlZF9mYWNlXCIsXCJ5YXduaW5nX2ZhY2VcIixcInRyaXVtcGhcIixcInJhZ2VcIixcImFuZ3J5XCIsXCJmYWNlX3dpdGhfc3ltYm9sc19vbl9tb3V0aFwiLFwic21pbGluZ19pbXBcIixcImltcFwiLFwic2t1bGxcIixcInNrdWxsX2FuZF9jcm9zc2JvbmVzXCIsXCJoYW5rZXlcIixcImNsb3duX2ZhY2VcIixcImphcGFuZXNlX29ncmVcIixcImphcGFuZXNlX2dvYmxpblwiLFwiZ2hvc3RcIixcImFsaWVuXCIsXCJzcGFjZV9pbnZhZGVyXCIsXCJ3YXZlXCIsXCJyYWlzZWRfYmFja19vZl9oYW5kXCIsXCJyYWlzZWRfaGFuZF93aXRoX2ZpbmdlcnNfc3BsYXllZFwiLFwiaGFuZFwiLFwic3BvY2staGFuZFwiLFwicmlnaHR3YXJkc19oYW5kXCIsXCJsZWZ0d2FyZHNfaGFuZFwiLFwicGFsbV9kb3duX2hhbmRcIixcInBhbG1fdXBfaGFuZFwiLFwibGVmdHdhcmRzX3B1c2hpbmdfaGFuZFwiLFwicmlnaHR3YXJkc19wdXNoaW5nX2hhbmRcIixcIm9rX2hhbmRcIixcInBpbmNoZWRfZmluZ2Vyc1wiLFwicGluY2hpbmdfaGFuZFwiLFwidlwiLFwiY3Jvc3NlZF9maW5nZXJzXCIsXCJoYW5kX3dpdGhfaW5kZXhfZmluZ2VyX2FuZF90aHVtYl9jcm9zc2VkXCIsXCJpX2xvdmVfeW91X2hhbmRfc2lnblwiLFwidGhlX2hvcm5zXCIsXCJjYWxsX21lX2hhbmRcIixcInBvaW50X2xlZnRcIixcInBvaW50X3JpZ2h0XCIsXCJwb2ludF91cF8yXCIsXCJtaWRkbGVfZmluZ2VyXCIsXCJwb2ludF9kb3duXCIsXCJwb2ludF91cFwiLFwiaW5kZXhfcG9pbnRpbmdfYXRfdGhlX3ZpZXdlclwiLFwiKzFcIixcIi0xXCIsXCJmaXN0XCIsXCJmYWNlcHVuY2hcIixcImxlZnQtZmFjaW5nX2Zpc3RcIixcInJpZ2h0LWZhY2luZ19maXN0XCIsXCJjbGFwXCIsXCJyYWlzZWRfaGFuZHNcIixcImhlYXJ0X2hhbmRzXCIsXCJvcGVuX2hhbmRzXCIsXCJwYWxtc191cF90b2dldGhlclwiLFwiaGFuZHNoYWtlXCIsXCJwcmF5XCIsXCJ3cml0aW5nX2hhbmRcIixcIm5haWxfY2FyZVwiLFwic2VsZmllXCIsXCJtdXNjbGVcIixcIm1lY2hhbmljYWxfYXJtXCIsXCJtZWNoYW5pY2FsX2xlZ1wiLFwibGVnXCIsXCJmb290XCIsXCJlYXJcIixcImVhcl93aXRoX2hlYXJpbmdfYWlkXCIsXCJub3NlXCIsXCJicmFpblwiLFwiYW5hdG9taWNhbF9oZWFydFwiLFwibHVuZ3NcIixcInRvb3RoXCIsXCJib25lXCIsXCJleWVzXCIsXCJleWVcIixcInRvbmd1ZVwiLFwibGlwc1wiLFwiYml0aW5nX2xpcFwiLFwiYmFieVwiLFwiY2hpbGRcIixcImJveVwiLFwiZ2lybFwiLFwiYWR1bHRcIixcInBlcnNvbl93aXRoX2Jsb25kX2hhaXJcIixcIm1hblwiLFwiYmVhcmRlZF9wZXJzb25cIixcIm1hbl93aXRoX2JlYXJkXCIsXCJ3b21hbl93aXRoX2JlYXJkXCIsXCJyZWRfaGFpcmVkX21hblwiLFwiY3VybHlfaGFpcmVkX21hblwiLFwid2hpdGVfaGFpcmVkX21hblwiLFwiYmFsZF9tYW5cIixcIndvbWFuXCIsXCJyZWRfaGFpcmVkX3dvbWFuXCIsXCJyZWRfaGFpcmVkX3BlcnNvblwiLFwiY3VybHlfaGFpcmVkX3dvbWFuXCIsXCJjdXJseV9oYWlyZWRfcGVyc29uXCIsXCJ3aGl0ZV9oYWlyZWRfd29tYW5cIixcIndoaXRlX2hhaXJlZF9wZXJzb25cIixcImJhbGRfd29tYW5cIixcImJhbGRfcGVyc29uXCIsXCJibG9uZC1oYWlyZWQtd29tYW5cIixcImJsb25kLWhhaXJlZC1tYW5cIixcIm9sZGVyX2FkdWx0XCIsXCJvbGRlcl9tYW5cIixcIm9sZGVyX3dvbWFuXCIsXCJwZXJzb25fZnJvd25pbmdcIixcIm1hbi1mcm93bmluZ1wiLFwid29tYW4tZnJvd25pbmdcIixcInBlcnNvbl93aXRoX3BvdXRpbmdfZmFjZVwiLFwibWFuLXBvdXRpbmdcIixcIndvbWFuLXBvdXRpbmdcIixcIm5vX2dvb2RcIixcIm1hbi1nZXN0dXJpbmctbm9cIixcIndvbWFuLWdlc3R1cmluZy1ub1wiLFwib2tfd29tYW5cIixcIm1hbi1nZXN0dXJpbmctb2tcIixcIndvbWFuLWdlc3R1cmluZy1va1wiLFwiaW5mb3JtYXRpb25fZGVza19wZXJzb25cIixcIm1hbi10aXBwaW5nLWhhbmRcIixcIndvbWFuLXRpcHBpbmctaGFuZFwiLFwicmFpc2luZ19oYW5kXCIsXCJtYW4tcmFpc2luZy1oYW5kXCIsXCJ3b21hbi1yYWlzaW5nLWhhbmRcIixcImRlYWZfcGVyc29uXCIsXCJkZWFmX21hblwiLFwiZGVhZl93b21hblwiLFwiYm93XCIsXCJtYW4tYm93aW5nXCIsXCJ3b21hbi1ib3dpbmdcIixcImZhY2VfcGFsbVwiLFwibWFuLWZhY2VwYWxtaW5nXCIsXCJ3b21hbi1mYWNlcGFsbWluZ1wiLFwic2hydWdcIixcIm1hbi1zaHJ1Z2dpbmdcIixcIndvbWFuLXNocnVnZ2luZ1wiLFwiaGVhbHRoX3dvcmtlclwiLFwibWFsZS1kb2N0b3JcIixcImZlbWFsZS1kb2N0b3JcIixcInN0dWRlbnRcIixcIm1hbGUtc3R1ZGVudFwiLFwiZmVtYWxlLXN0dWRlbnRcIixcInRlYWNoZXJcIixcIm1hbGUtdGVhY2hlclwiLFwiZmVtYWxlLXRlYWNoZXJcIixcImp1ZGdlXCIsXCJtYWxlLWp1ZGdlXCIsXCJmZW1hbGUtanVkZ2VcIixcImZhcm1lclwiLFwibWFsZS1mYXJtZXJcIixcImZlbWFsZS1mYXJtZXJcIixcImNvb2tcIixcIm1hbGUtY29va1wiLFwiZmVtYWxlLWNvb2tcIixcIm1lY2hhbmljXCIsXCJtYWxlLW1lY2hhbmljXCIsXCJmZW1hbGUtbWVjaGFuaWNcIixcImZhY3Rvcnlfd29ya2VyXCIsXCJtYWxlLWZhY3Rvcnktd29ya2VyXCIsXCJmZW1hbGUtZmFjdG9yeS13b3JrZXJcIixcIm9mZmljZV93b3JrZXJcIixcIm1hbGUtb2ZmaWNlLXdvcmtlclwiLFwiZmVtYWxlLW9mZmljZS13b3JrZXJcIixcInNjaWVudGlzdFwiLFwibWFsZS1zY2llbnRpc3RcIixcImZlbWFsZS1zY2llbnRpc3RcIixcInRlY2hub2xvZ2lzdFwiLFwibWFsZS10ZWNobm9sb2dpc3RcIixcImZlbWFsZS10ZWNobm9sb2dpc3RcIixcInNpbmdlclwiLFwibWFsZS1zaW5nZXJcIixcImZlbWFsZS1zaW5nZXJcIixcImFydGlzdFwiLFwibWFsZS1hcnRpc3RcIixcImZlbWFsZS1hcnRpc3RcIixcInBpbG90XCIsXCJtYWxlLXBpbG90XCIsXCJmZW1hbGUtcGlsb3RcIixcImFzdHJvbmF1dFwiLFwibWFsZS1hc3Ryb25hdXRcIixcImZlbWFsZS1hc3Ryb25hdXRcIixcImZpcmVmaWdodGVyXCIsXCJtYWxlLWZpcmVmaWdodGVyXCIsXCJmZW1hbGUtZmlyZWZpZ2h0ZXJcIixcImNvcFwiLFwibWFsZS1wb2xpY2Utb2ZmaWNlclwiLFwiZmVtYWxlLXBvbGljZS1vZmZpY2VyXCIsXCJzbGV1dGhfb3Jfc3B5XCIsXCJtYWxlLWRldGVjdGl2ZVwiLFwiZmVtYWxlLWRldGVjdGl2ZVwiLFwiZ3VhcmRzbWFuXCIsXCJtYWxlLWd1YXJkXCIsXCJmZW1hbGUtZ3VhcmRcIixcIm5pbmphXCIsXCJjb25zdHJ1Y3Rpb25fd29ya2VyXCIsXCJtYWxlLWNvbnN0cnVjdGlvbi13b3JrZXJcIixcImZlbWFsZS1jb25zdHJ1Y3Rpb24td29ya2VyXCIsXCJwZXJzb25fd2l0aF9jcm93blwiLFwicHJpbmNlXCIsXCJwcmluY2Vzc1wiLFwibWFuX3dpdGhfdHVyYmFuXCIsXCJtYW4td2VhcmluZy10dXJiYW5cIixcIndvbWFuLXdlYXJpbmctdHVyYmFuXCIsXCJtYW5fd2l0aF9ndWFfcGlfbWFvXCIsXCJwZXJzb25fd2l0aF9oZWFkc2NhcmZcIixcInBlcnNvbl9pbl90dXhlZG9cIixcIm1hbl9pbl90dXhlZG9cIixcIndvbWFuX2luX3R1eGVkb1wiLFwiYnJpZGVfd2l0aF92ZWlsXCIsXCJtYW5fd2l0aF92ZWlsXCIsXCJ3b21hbl93aXRoX3ZlaWxcIixcInByZWduYW50X3dvbWFuXCIsXCJwcmVnbmFudF9tYW5cIixcInByZWduYW50X3BlcnNvblwiLFwiYnJlYXN0LWZlZWRpbmdcIixcIndvbWFuX2ZlZWRpbmdfYmFieVwiLFwibWFuX2ZlZWRpbmdfYmFieVwiLFwicGVyc29uX2ZlZWRpbmdfYmFieVwiLFwiYW5nZWxcIixcInNhbnRhXCIsXCJtcnNfY2xhdXNcIixcIm14X2NsYXVzXCIsXCJzdXBlcmhlcm9cIixcIm1hbGVfc3VwZXJoZXJvXCIsXCJmZW1hbGVfc3VwZXJoZXJvXCIsXCJzdXBlcnZpbGxhaW5cIixcIm1hbGVfc3VwZXJ2aWxsYWluXCIsXCJmZW1hbGVfc3VwZXJ2aWxsYWluXCIsXCJtYWdlXCIsXCJtYWxlX21hZ2VcIixcImZlbWFsZV9tYWdlXCIsXCJmYWlyeVwiLFwibWFsZV9mYWlyeVwiLFwiZmVtYWxlX2ZhaXJ5XCIsXCJ2YW1waXJlXCIsXCJtYWxlX3ZhbXBpcmVcIixcImZlbWFsZV92YW1waXJlXCIsXCJtZXJwZXJzb25cIixcIm1lcm1hblwiLFwibWVybWFpZFwiLFwiZWxmXCIsXCJtYWxlX2VsZlwiLFwiZmVtYWxlX2VsZlwiLFwiZ2VuaWVcIixcIm1hbGVfZ2VuaWVcIixcImZlbWFsZV9nZW5pZVwiLFwiem9tYmllXCIsXCJtYWxlX3pvbWJpZVwiLFwiZmVtYWxlX3pvbWJpZVwiLFwidHJvbGxcIixcIm1hc3NhZ2VcIixcIm1hbi1nZXR0aW5nLW1hc3NhZ2VcIixcIndvbWFuLWdldHRpbmctbWFzc2FnZVwiLFwiaGFpcmN1dFwiLFwibWFuLWdldHRpbmctaGFpcmN1dFwiLFwid29tYW4tZ2V0dGluZy1oYWlyY3V0XCIsXCJ3YWxraW5nXCIsXCJtYW4td2Fsa2luZ1wiLFwid29tYW4td2Fsa2luZ1wiLFwic3RhbmRpbmdfcGVyc29uXCIsXCJtYW5fc3RhbmRpbmdcIixcIndvbWFuX3N0YW5kaW5nXCIsXCJrbmVlbGluZ19wZXJzb25cIixcIm1hbl9rbmVlbGluZ1wiLFwid29tYW5fa25lZWxpbmdcIixcInBlcnNvbl93aXRoX3Byb2JpbmdfY2FuZVwiLFwibWFuX3dpdGhfcHJvYmluZ19jYW5lXCIsXCJ3b21hbl93aXRoX3Byb2JpbmdfY2FuZVwiLFwicGVyc29uX2luX21vdG9yaXplZF93aGVlbGNoYWlyXCIsXCJtYW5faW5fbW90b3JpemVkX3doZWVsY2hhaXJcIixcIndvbWFuX2luX21vdG9yaXplZF93aGVlbGNoYWlyXCIsXCJwZXJzb25faW5fbWFudWFsX3doZWVsY2hhaXJcIixcIm1hbl9pbl9tYW51YWxfd2hlZWxjaGFpclwiLFwid29tYW5faW5fbWFudWFsX3doZWVsY2hhaXJcIixcInJ1bm5lclwiLFwibWFuLXJ1bm5pbmdcIixcIndvbWFuLXJ1bm5pbmdcIixcImRhbmNlclwiLFwibWFuX2RhbmNpbmdcIixcIm1hbl9pbl9idXNpbmVzc19zdWl0X2xldml0YXRpbmdcIixcImRhbmNlcnNcIixcIm1lbi13aXRoLWJ1bm55LWVhcnMtcGFydHlpbmdcIixcIndvbWVuLXdpdGgtYnVubnktZWFycy1wYXJ0eWluZ1wiLFwicGVyc29uX2luX3N0ZWFteV9yb29tXCIsXCJtYW5faW5fc3RlYW15X3Jvb21cIixcIndvbWFuX2luX3N0ZWFteV9yb29tXCIsXCJwZXJzb25fY2xpbWJpbmdcIixcIm1hbl9jbGltYmluZ1wiLFwid29tYW5fY2xpbWJpbmdcIixcImZlbmNlclwiLFwiaG9yc2VfcmFjaW5nXCIsXCJza2llclwiLFwic25vd2JvYXJkZXJcIixcImdvbGZlclwiLFwibWFuLWdvbGZpbmdcIixcIndvbWFuLWdvbGZpbmdcIixcInN1cmZlclwiLFwibWFuLXN1cmZpbmdcIixcIndvbWFuLXN1cmZpbmdcIixcInJvd2JvYXRcIixcIm1hbi1yb3dpbmctYm9hdFwiLFwid29tYW4tcm93aW5nLWJvYXRcIixcInN3aW1tZXJcIixcIm1hbi1zd2ltbWluZ1wiLFwid29tYW4tc3dpbW1pbmdcIixcInBlcnNvbl93aXRoX2JhbGxcIixcIm1hbi1ib3VuY2luZy1iYWxsXCIsXCJ3b21hbi1ib3VuY2luZy1iYWxsXCIsXCJ3ZWlnaHRfbGlmdGVyXCIsXCJtYW4tbGlmdGluZy13ZWlnaHRzXCIsXCJ3b21hbi1saWZ0aW5nLXdlaWdodHNcIixcImJpY3ljbGlzdFwiLFwibWFuLWJpa2luZ1wiLFwid29tYW4tYmlraW5nXCIsXCJtb3VudGFpbl9iaWN5Y2xpc3RcIixcIm1hbi1tb3VudGFpbi1iaWtpbmdcIixcIndvbWFuLW1vdW50YWluLWJpa2luZ1wiLFwicGVyc29uX2RvaW5nX2NhcnR3aGVlbFwiLFwibWFuLWNhcnR3aGVlbGluZ1wiLFwid29tYW4tY2FydHdoZWVsaW5nXCIsXCJ3cmVzdGxlcnNcIixcIm1hbi13cmVzdGxpbmdcIixcIndvbWFuLXdyZXN0bGluZ1wiLFwid2F0ZXJfcG9sb1wiLFwibWFuLXBsYXlpbmctd2F0ZXItcG9sb1wiLFwid29tYW4tcGxheWluZy13YXRlci1wb2xvXCIsXCJoYW5kYmFsbFwiLFwibWFuLXBsYXlpbmctaGFuZGJhbGxcIixcIndvbWFuLXBsYXlpbmctaGFuZGJhbGxcIixcImp1Z2dsaW5nXCIsXCJtYW4tanVnZ2xpbmdcIixcIndvbWFuLWp1Z2dsaW5nXCIsXCJwZXJzb25faW5fbG90dXNfcG9zaXRpb25cIixcIm1hbl9pbl9sb3R1c19wb3NpdGlvblwiLFwid29tYW5faW5fbG90dXNfcG9zaXRpb25cIixcImJhdGhcIixcInNsZWVwaW5nX2FjY29tbW9kYXRpb25cIixcInBlb3BsZV9ob2xkaW5nX2hhbmRzXCIsXCJ0d29fd29tZW5faG9sZGluZ19oYW5kc1wiLFwibWFuX2FuZF93b21hbl9ob2xkaW5nX2hhbmRzXCIsXCJ0d29fbWVuX2hvbGRpbmdfaGFuZHNcIixcImNvdXBsZWtpc3NcIixcIndvbWFuLWtpc3MtbWFuXCIsXCJtYW4ta2lzcy1tYW5cIixcIndvbWFuLWtpc3Mtd29tYW5cIixcImNvdXBsZV93aXRoX2hlYXJ0XCIsXCJ3b21hbi1oZWFydC1tYW5cIixcIm1hbi1oZWFydC1tYW5cIixcIndvbWFuLWhlYXJ0LXdvbWFuXCIsXCJmYW1pbHlcIixcIm1hbi13b21hbi1ib3lcIixcIm1hbi13b21hbi1naXJsXCIsXCJtYW4td29tYW4tZ2lybC1ib3lcIixcIm1hbi13b21hbi1ib3ktYm95XCIsXCJtYW4td29tYW4tZ2lybC1naXJsXCIsXCJtYW4tbWFuLWJveVwiLFwibWFuLW1hbi1naXJsXCIsXCJtYW4tbWFuLWdpcmwtYm95XCIsXCJtYW4tbWFuLWJveS1ib3lcIixcIm1hbi1tYW4tZ2lybC1naXJsXCIsXCJ3b21hbi13b21hbi1ib3lcIixcIndvbWFuLXdvbWFuLWdpcmxcIixcIndvbWFuLXdvbWFuLWdpcmwtYm95XCIsXCJ3b21hbi13b21hbi1ib3ktYm95XCIsXCJ3b21hbi13b21hbi1naXJsLWdpcmxcIixcIm1hbi1ib3lcIixcIm1hbi1ib3ktYm95XCIsXCJtYW4tZ2lybFwiLFwibWFuLWdpcmwtYm95XCIsXCJtYW4tZ2lybC1naXJsXCIsXCJ3b21hbi1ib3lcIixcIndvbWFuLWJveS1ib3lcIixcIndvbWFuLWdpcmxcIixcIndvbWFuLWdpcmwtYm95XCIsXCJ3b21hbi1naXJsLWdpcmxcIixcInNwZWFraW5nX2hlYWRfaW5fc2lsaG91ZXR0ZVwiLFwiYnVzdF9pbl9zaWxob3VldHRlXCIsXCJidXN0c19pbl9zaWxob3VldHRlXCIsXCJwZW9wbGVfaHVnZ2luZ1wiLFwiZm9vdHByaW50c1wiLFwicm9ib3RfZmFjZVwiLFwic21pbGV5X2NhdFwiLFwic21pbGVfY2F0XCIsXCJqb3lfY2F0XCIsXCJoZWFydF9leWVzX2NhdFwiLFwic21pcmtfY2F0XCIsXCJraXNzaW5nX2NhdFwiLFwic2NyZWFtX2NhdFwiLFwiY3J5aW5nX2NhdF9mYWNlXCIsXCJwb3V0aW5nX2NhdFwiLFwic2VlX25vX2V2aWxcIixcImhlYXJfbm9fZXZpbFwiLFwic3BlYWtfbm9fZXZpbFwiLFwibG92ZV9sZXR0ZXJcIixcImN1cGlkXCIsXCJnaWZ0X2hlYXJ0XCIsXCJzcGFya2xpbmdfaGVhcnRcIixcImhlYXJ0cHVsc2VcIixcImhlYXJ0YmVhdFwiLFwicmV2b2x2aW5nX2hlYXJ0c1wiLFwidHdvX2hlYXJ0c1wiLFwiaGVhcnRfZGVjb3JhdGlvblwiLFwiaGVhdnlfaGVhcnRfZXhjbGFtYXRpb25fbWFya19vcm5hbWVudFwiLFwiYnJva2VuX2hlYXJ0XCIsXCJoZWFydF9vbl9maXJlXCIsXCJtZW5kaW5nX2hlYXJ0XCIsXCJoZWFydFwiLFwicGlua19oZWFydFwiLFwib3JhbmdlX2hlYXJ0XCIsXCJ5ZWxsb3dfaGVhcnRcIixcImdyZWVuX2hlYXJ0XCIsXCJibHVlX2hlYXJ0XCIsXCJsaWdodF9ibHVlX2hlYXJ0XCIsXCJwdXJwbGVfaGVhcnRcIixcImJyb3duX2hlYXJ0XCIsXCJibGFja19oZWFydFwiLFwiZ3JleV9oZWFydFwiLFwid2hpdGVfaGVhcnRcIixcImtpc3NcIixcIjEwMFwiLFwiYW5nZXJcIixcImJvb21cIixcImRpenp5XCIsXCJzd2VhdF9kcm9wc1wiLFwiZGFzaFwiLFwiaG9sZVwiLFwic3BlZWNoX2JhbGxvb25cIixcImV5ZS1pbi1zcGVlY2gtYnViYmxlXCIsXCJsZWZ0X3NwZWVjaF9idWJibGVcIixcInJpZ2h0X2FuZ2VyX2J1YmJsZVwiLFwidGhvdWdodF9iYWxsb29uXCIsXCJ6enpcIl19LHtcImlkXCI6XCJuYXR1cmVcIixcImVtb2ppc1wiOltcIm1vbmtleV9mYWNlXCIsXCJtb25rZXlcIixcImdvcmlsbGFcIixcIm9yYW5ndXRhblwiLFwiZG9nXCIsXCJkb2cyXCIsXCJndWlkZV9kb2dcIixcInNlcnZpY2VfZG9nXCIsXCJwb29kbGVcIixcIndvbGZcIixcImZveF9mYWNlXCIsXCJyYWNjb29uXCIsXCJjYXRcIixcImNhdDJcIixcImJsYWNrX2NhdFwiLFwibGlvbl9mYWNlXCIsXCJ0aWdlclwiLFwidGlnZXIyXCIsXCJsZW9wYXJkXCIsXCJob3JzZVwiLFwibW9vc2VcIixcImRvbmtleVwiLFwicmFjZWhvcnNlXCIsXCJ1bmljb3JuX2ZhY2VcIixcInplYnJhX2ZhY2VcIixcImRlZXJcIixcImJpc29uXCIsXCJjb3dcIixcIm94XCIsXCJ3YXRlcl9idWZmYWxvXCIsXCJjb3cyXCIsXCJwaWdcIixcInBpZzJcIixcImJvYXJcIixcInBpZ19ub3NlXCIsXCJyYW1cIixcInNoZWVwXCIsXCJnb2F0XCIsXCJkcm9tZWRhcnlfY2FtZWxcIixcImNhbWVsXCIsXCJsbGFtYVwiLFwiZ2lyYWZmZV9mYWNlXCIsXCJlbGVwaGFudFwiLFwibWFtbW90aFwiLFwicmhpbm9jZXJvc1wiLFwiaGlwcG9wb3RhbXVzXCIsXCJtb3VzZVwiLFwibW91c2UyXCIsXCJyYXRcIixcImhhbXN0ZXJcIixcInJhYmJpdFwiLFwicmFiYml0MlwiLFwiY2hpcG11bmtcIixcImJlYXZlclwiLFwiaGVkZ2Vob2dcIixcImJhdFwiLFwiYmVhclwiLFwicG9sYXJfYmVhclwiLFwia29hbGFcIixcInBhbmRhX2ZhY2VcIixcInNsb3RoXCIsXCJvdHRlclwiLFwic2t1bmtcIixcImthbmdhcm9vXCIsXCJiYWRnZXJcIixcImZlZXRcIixcInR1cmtleVwiLFwiY2hpY2tlblwiLFwicm9vc3RlclwiLFwiaGF0Y2hpbmdfY2hpY2tcIixcImJhYnlfY2hpY2tcIixcImhhdGNoZWRfY2hpY2tcIixcImJpcmRcIixcInBlbmd1aW5cIixcImRvdmVfb2ZfcGVhY2VcIixcImVhZ2xlXCIsXCJkdWNrXCIsXCJzd2FuXCIsXCJvd2xcIixcImRvZG9cIixcImZlYXRoZXJcIixcImZsYW1pbmdvXCIsXCJwZWFjb2NrXCIsXCJwYXJyb3RcIixcIndpbmdcIixcImJsYWNrX2JpcmRcIixcImdvb3NlXCIsXCJmcm9nXCIsXCJjcm9jb2RpbGVcIixcInR1cnRsZVwiLFwibGl6YXJkXCIsXCJzbmFrZVwiLFwiZHJhZ29uX2ZhY2VcIixcImRyYWdvblwiLFwic2F1cm9wb2RcIixcInQtcmV4XCIsXCJ3aGFsZVwiLFwid2hhbGUyXCIsXCJkb2xwaGluXCIsXCJzZWFsXCIsXCJmaXNoXCIsXCJ0cm9waWNhbF9maXNoXCIsXCJibG93ZmlzaFwiLFwic2hhcmtcIixcIm9jdG9wdXNcIixcInNoZWxsXCIsXCJjb3JhbFwiLFwiamVsbHlmaXNoXCIsXCJzbmFpbFwiLFwiYnV0dGVyZmx5XCIsXCJidWdcIixcImFudFwiLFwiYmVlXCIsXCJiZWV0bGVcIixcImxhZHlidWdcIixcImNyaWNrZXRcIixcImNvY2tyb2FjaFwiLFwic3BpZGVyXCIsXCJzcGlkZXJfd2ViXCIsXCJzY29ycGlvblwiLFwibW9zcXVpdG9cIixcImZseVwiLFwid29ybVwiLFwibWljcm9iZVwiLFwiYm91cXVldFwiLFwiY2hlcnJ5X2Jsb3Nzb21cIixcIndoaXRlX2Zsb3dlclwiLFwibG90dXNcIixcInJvc2V0dGVcIixcInJvc2VcIixcIndpbHRlZF9mbG93ZXJcIixcImhpYmlzY3VzXCIsXCJzdW5mbG93ZXJcIixcImJsb3Nzb21cIixcInR1bGlwXCIsXCJoeWFjaW50aFwiLFwic2VlZGxpbmdcIixcInBvdHRlZF9wbGFudFwiLFwiZXZlcmdyZWVuX3RyZWVcIixcImRlY2lkdW91c190cmVlXCIsXCJwYWxtX3RyZWVcIixcImNhY3R1c1wiLFwiZWFyX29mX3JpY2VcIixcImhlcmJcIixcInNoYW1yb2NrXCIsXCJmb3VyX2xlYWZfY2xvdmVyXCIsXCJtYXBsZV9sZWFmXCIsXCJmYWxsZW5fbGVhZlwiLFwibGVhdmVzXCIsXCJlbXB0eV9uZXN0XCIsXCJuZXN0X3dpdGhfZWdnc1wiLFwibXVzaHJvb21cIl19LHtcImlkXCI6XCJmb29kc1wiLFwiZW1vamlzXCI6W1wiZ3JhcGVzXCIsXCJtZWxvblwiLFwid2F0ZXJtZWxvblwiLFwidGFuZ2VyaW5lXCIsXCJsZW1vblwiLFwiYmFuYW5hXCIsXCJwaW5lYXBwbGVcIixcIm1hbmdvXCIsXCJhcHBsZVwiLFwiZ3JlZW5fYXBwbGVcIixcInBlYXJcIixcInBlYWNoXCIsXCJjaGVycmllc1wiLFwic3RyYXdiZXJyeVwiLFwiYmx1ZWJlcnJpZXNcIixcImtpd2lmcnVpdFwiLFwidG9tYXRvXCIsXCJvbGl2ZVwiLFwiY29jb251dFwiLFwiYXZvY2Fkb1wiLFwiZWdncGxhbnRcIixcInBvdGF0b1wiLFwiY2Fycm90XCIsXCJjb3JuXCIsXCJob3RfcGVwcGVyXCIsXCJiZWxsX3BlcHBlclwiLFwiY3VjdW1iZXJcIixcImxlYWZ5X2dyZWVuXCIsXCJicm9jY29saVwiLFwiZ2FybGljXCIsXCJvbmlvblwiLFwicGVhbnV0c1wiLFwiYmVhbnNcIixcImNoZXN0bnV0XCIsXCJnaW5nZXJfcm9vdFwiLFwicGVhX3BvZFwiLFwiYnJlYWRcIixcImNyb2lzc2FudFwiLFwiYmFndWV0dGVfYnJlYWRcIixcImZsYXRicmVhZFwiLFwicHJldHplbFwiLFwiYmFnZWxcIixcInBhbmNha2VzXCIsXCJ3YWZmbGVcIixcImNoZWVzZV93ZWRnZVwiLFwibWVhdF9vbl9ib25lXCIsXCJwb3VsdHJ5X2xlZ1wiLFwiY3V0X29mX21lYXRcIixcImJhY29uXCIsXCJoYW1idXJnZXJcIixcImZyaWVzXCIsXCJwaXp6YVwiLFwiaG90ZG9nXCIsXCJzYW5kd2ljaFwiLFwidGFjb1wiLFwiYnVycml0b1wiLFwidGFtYWxlXCIsXCJzdHVmZmVkX2ZsYXRicmVhZFwiLFwiZmFsYWZlbFwiLFwiZWdnXCIsXCJmcmllZF9lZ2dcIixcInNoYWxsb3dfcGFuX29mX2Zvb2RcIixcInN0ZXdcIixcImZvbmR1ZVwiLFwiYm93bF93aXRoX3Nwb29uXCIsXCJncmVlbl9zYWxhZFwiLFwicG9wY29yblwiLFwiYnV0dGVyXCIsXCJzYWx0XCIsXCJjYW5uZWRfZm9vZFwiLFwiYmVudG9cIixcInJpY2VfY3JhY2tlclwiLFwicmljZV9iYWxsXCIsXCJyaWNlXCIsXCJjdXJyeVwiLFwicmFtZW5cIixcInNwYWdoZXR0aVwiLFwic3dlZXRfcG90YXRvXCIsXCJvZGVuXCIsXCJzdXNoaVwiLFwiZnJpZWRfc2hyaW1wXCIsXCJmaXNoX2Nha2VcIixcIm1vb25fY2FrZVwiLFwiZGFuZ29cIixcImR1bXBsaW5nXCIsXCJmb3J0dW5lX2Nvb2tpZVwiLFwidGFrZW91dF9ib3hcIixcImNyYWJcIixcImxvYnN0ZXJcIixcInNocmltcFwiLFwic3F1aWRcIixcIm95c3RlclwiLFwiaWNlY3JlYW1cIixcInNoYXZlZF9pY2VcIixcImljZV9jcmVhbVwiLFwiZG91Z2hudXRcIixcImNvb2tpZVwiLFwiYmlydGhkYXlcIixcImNha2VcIixcImN1cGNha2VcIixcInBpZVwiLFwiY2hvY29sYXRlX2JhclwiLFwiY2FuZHlcIixcImxvbGxpcG9wXCIsXCJjdXN0YXJkXCIsXCJob25leV9wb3RcIixcImJhYnlfYm90dGxlXCIsXCJnbGFzc19vZl9taWxrXCIsXCJjb2ZmZWVcIixcInRlYXBvdFwiLFwidGVhXCIsXCJzYWtlXCIsXCJjaGFtcGFnbmVcIixcIndpbmVfZ2xhc3NcIixcImNvY2t0YWlsXCIsXCJ0cm9waWNhbF9kcmlua1wiLFwiYmVlclwiLFwiYmVlcnNcIixcImNsaW5raW5nX2dsYXNzZXNcIixcInR1bWJsZXJfZ2xhc3NcIixcInBvdXJpbmdfbGlxdWlkXCIsXCJjdXBfd2l0aF9zdHJhd1wiLFwiYnViYmxlX3RlYVwiLFwiYmV2ZXJhZ2VfYm94XCIsXCJtYXRlX2RyaW5rXCIsXCJpY2VfY3ViZVwiLFwiY2hvcHN0aWNrc1wiLFwia25pZmVfZm9ya19wbGF0ZVwiLFwiZm9ya19hbmRfa25pZmVcIixcInNwb29uXCIsXCJob2Nob1wiLFwiamFyXCIsXCJhbXBob3JhXCJdfSx7XCJpZFwiOlwiYWN0aXZpdHlcIixcImVtb2ppc1wiOltcImphY2tfb19sYW50ZXJuXCIsXCJjaHJpc3RtYXNfdHJlZVwiLFwiZmlyZXdvcmtzXCIsXCJzcGFya2xlclwiLFwiZmlyZWNyYWNrZXJcIixcInNwYXJrbGVzXCIsXCJiYWxsb29uXCIsXCJ0YWRhXCIsXCJjb25mZXR0aV9iYWxsXCIsXCJ0YW5hYmF0YV90cmVlXCIsXCJiYW1ib29cIixcImRvbGxzXCIsXCJmbGFnc1wiLFwid2luZF9jaGltZVwiLFwicmljZV9zY2VuZVwiLFwicmVkX2VudmVsb3BlXCIsXCJyaWJib25cIixcImdpZnRcIixcInJlbWluZGVyX3JpYmJvblwiLFwiYWRtaXNzaW9uX3RpY2tldHNcIixcInRpY2tldFwiLFwibWVkYWxcIixcInRyb3BoeVwiLFwic3BvcnRzX21lZGFsXCIsXCJmaXJzdF9wbGFjZV9tZWRhbFwiLFwic2Vjb25kX3BsYWNlX21lZGFsXCIsXCJ0aGlyZF9wbGFjZV9tZWRhbFwiLFwic29jY2VyXCIsXCJiYXNlYmFsbFwiLFwic29mdGJhbGxcIixcImJhc2tldGJhbGxcIixcInZvbGxleWJhbGxcIixcImZvb3RiYWxsXCIsXCJydWdieV9mb290YmFsbFwiLFwidGVubmlzXCIsXCJmbHlpbmdfZGlzY1wiLFwiYm93bGluZ1wiLFwiY3JpY2tldF9iYXRfYW5kX2JhbGxcIixcImZpZWxkX2hvY2tleV9zdGlja19hbmRfYmFsbFwiLFwiaWNlX2hvY2tleV9zdGlja19hbmRfcHVja1wiLFwibGFjcm9zc2VcIixcInRhYmxlX3Rlbm5pc19wYWRkbGVfYW5kX2JhbGxcIixcImJhZG1pbnRvbl9yYWNxdWV0X2FuZF9zaHV0dGxlY29ja1wiLFwiYm94aW5nX2dsb3ZlXCIsXCJtYXJ0aWFsX2FydHNfdW5pZm9ybVwiLFwiZ29hbF9uZXRcIixcImdvbGZcIixcImljZV9za2F0ZVwiLFwiZmlzaGluZ19wb2xlX2FuZF9maXNoXCIsXCJkaXZpbmdfbWFza1wiLFwicnVubmluZ19zaGlydF93aXRoX3Nhc2hcIixcInNraVwiLFwic2xlZFwiLFwiY3VybGluZ19zdG9uZVwiLFwiZGFydFwiLFwieW8teW9cIixcImtpdGVcIixcImd1blwiLFwiOGJhbGxcIixcImNyeXN0YWxfYmFsbFwiLFwibWFnaWNfd2FuZFwiLFwidmlkZW9fZ2FtZVwiLFwiam95c3RpY2tcIixcInNsb3RfbWFjaGluZVwiLFwiZ2FtZV9kaWVcIixcImppZ3Nhd1wiLFwidGVkZHlfYmVhclwiLFwicGluYXRhXCIsXCJtaXJyb3JfYmFsbFwiLFwibmVzdGluZ19kb2xsc1wiLFwic3BhZGVzXCIsXCJoZWFydHNcIixcImRpYW1vbmRzXCIsXCJjbHVic1wiLFwiY2hlc3NfcGF3blwiLFwiYmxhY2tfam9rZXJcIixcIm1haGpvbmdcIixcImZsb3dlcl9wbGF5aW5nX2NhcmRzXCIsXCJwZXJmb3JtaW5nX2FydHNcIixcImZyYW1lX3dpdGhfcGljdHVyZVwiLFwiYXJ0XCIsXCJ0aHJlYWRcIixcInNld2luZ19uZWVkbGVcIixcInlhcm5cIixcImtub3RcIl19LHtcImlkXCI6XCJwbGFjZXNcIixcImVtb2ppc1wiOltcImVhcnRoX2FmcmljYVwiLFwiZWFydGhfYW1lcmljYXNcIixcImVhcnRoX2FzaWFcIixcImdsb2JlX3dpdGhfbWVyaWRpYW5zXCIsXCJ3b3JsZF9tYXBcIixcImphcGFuXCIsXCJjb21wYXNzXCIsXCJzbm93X2NhcHBlZF9tb3VudGFpblwiLFwibW91bnRhaW5cIixcInZvbGNhbm9cIixcIm1vdW50X2Z1amlcIixcImNhbXBpbmdcIixcImJlYWNoX3dpdGhfdW1icmVsbGFcIixcImRlc2VydFwiLFwiZGVzZXJ0X2lzbGFuZFwiLFwibmF0aW9uYWxfcGFya1wiLFwic3RhZGl1bVwiLFwiY2xhc3NpY2FsX2J1aWxkaW5nXCIsXCJidWlsZGluZ19jb25zdHJ1Y3Rpb25cIixcImJyaWNrc1wiLFwicm9ja1wiLFwid29vZFwiLFwiaHV0XCIsXCJob3VzZV9idWlsZGluZ3NcIixcImRlcmVsaWN0X2hvdXNlX2J1aWxkaW5nXCIsXCJob3VzZVwiLFwiaG91c2Vfd2l0aF9nYXJkZW5cIixcIm9mZmljZVwiLFwicG9zdF9vZmZpY2VcIixcImV1cm9wZWFuX3Bvc3Rfb2ZmaWNlXCIsXCJob3NwaXRhbFwiLFwiYmFua1wiLFwiaG90ZWxcIixcImxvdmVfaG90ZWxcIixcImNvbnZlbmllbmNlX3N0b3JlXCIsXCJzY2hvb2xcIixcImRlcGFydG1lbnRfc3RvcmVcIixcImZhY3RvcnlcIixcImphcGFuZXNlX2Nhc3RsZVwiLFwiZXVyb3BlYW5fY2FzdGxlXCIsXCJ3ZWRkaW5nXCIsXCJ0b2t5b190b3dlclwiLFwic3RhdHVlX29mX2xpYmVydHlcIixcImNodXJjaFwiLFwibW9zcXVlXCIsXCJoaW5kdV90ZW1wbGVcIixcInN5bmFnb2d1ZVwiLFwic2hpbnRvX3NocmluZVwiLFwia2FhYmFcIixcImZvdW50YWluXCIsXCJ0ZW50XCIsXCJmb2dneVwiLFwibmlnaHRfd2l0aF9zdGFyc1wiLFwiY2l0eXNjYXBlXCIsXCJzdW5yaXNlX292ZXJfbW91bnRhaW5zXCIsXCJzdW5yaXNlXCIsXCJjaXR5X3N1bnNldFwiLFwiY2l0eV9zdW5yaXNlXCIsXCJicmlkZ2VfYXRfbmlnaHRcIixcImhvdHNwcmluZ3NcIixcImNhcm91c2VsX2hvcnNlXCIsXCJwbGF5Z3JvdW5kX3NsaWRlXCIsXCJmZXJyaXNfd2hlZWxcIixcInJvbGxlcl9jb2FzdGVyXCIsXCJiYXJiZXJcIixcImNpcmN1c190ZW50XCIsXCJzdGVhbV9sb2NvbW90aXZlXCIsXCJyYWlsd2F5X2NhclwiLFwiYnVsbGV0dHJhaW5fc2lkZVwiLFwiYnVsbGV0dHJhaW5fZnJvbnRcIixcInRyYWluMlwiLFwibWV0cm9cIixcImxpZ2h0X3JhaWxcIixcInN0YXRpb25cIixcInRyYW1cIixcIm1vbm9yYWlsXCIsXCJtb3VudGFpbl9yYWlsd2F5XCIsXCJ0cmFpblwiLFwiYnVzXCIsXCJvbmNvbWluZ19idXNcIixcInRyb2xsZXlidXNcIixcIm1pbmlidXNcIixcImFtYnVsYW5jZVwiLFwiZmlyZV9lbmdpbmVcIixcInBvbGljZV9jYXJcIixcIm9uY29taW5nX3BvbGljZV9jYXJcIixcInRheGlcIixcIm9uY29taW5nX3RheGlcIixcImNhclwiLFwib25jb21pbmdfYXV0b21vYmlsZVwiLFwiYmx1ZV9jYXJcIixcInBpY2t1cF90cnVja1wiLFwidHJ1Y2tcIixcImFydGljdWxhdGVkX2xvcnJ5XCIsXCJ0cmFjdG9yXCIsXCJyYWNpbmdfY2FyXCIsXCJyYWNpbmdfbW90b3JjeWNsZVwiLFwibW90b3Jfc2Nvb3RlclwiLFwibWFudWFsX3doZWVsY2hhaXJcIixcIm1vdG9yaXplZF93aGVlbGNoYWlyXCIsXCJhdXRvX3JpY2tzaGF3XCIsXCJiaWtlXCIsXCJzY29vdGVyXCIsXCJza2F0ZWJvYXJkXCIsXCJyb2xsZXJfc2thdGVcIixcImJ1c3N0b3BcIixcIm1vdG9yd2F5XCIsXCJyYWlsd2F5X3RyYWNrXCIsXCJvaWxfZHJ1bVwiLFwiZnVlbHB1bXBcIixcIndoZWVsXCIsXCJyb3RhdGluZ19saWdodFwiLFwidHJhZmZpY19saWdodFwiLFwidmVydGljYWxfdHJhZmZpY19saWdodFwiLFwib2N0YWdvbmFsX3NpZ25cIixcImNvbnN0cnVjdGlvblwiLFwiYW5jaG9yXCIsXCJyaW5nX2J1b3lcIixcImJvYXRcIixcImNhbm9lXCIsXCJzcGVlZGJvYXRcIixcInBhc3Nlbmdlcl9zaGlwXCIsXCJmZXJyeVwiLFwibW90b3JfYm9hdFwiLFwic2hpcFwiLFwiYWlycGxhbmVcIixcInNtYWxsX2FpcnBsYW5lXCIsXCJhaXJwbGFuZV9kZXBhcnR1cmVcIixcImFpcnBsYW5lX2Fycml2aW5nXCIsXCJwYXJhY2h1dGVcIixcInNlYXRcIixcImhlbGljb3B0ZXJcIixcInN1c3BlbnNpb25fcmFpbHdheVwiLFwibW91bnRhaW5fY2FibGV3YXlcIixcImFlcmlhbF90cmFtd2F5XCIsXCJzYXRlbGxpdGVcIixcInJvY2tldFwiLFwiZmx5aW5nX3NhdWNlclwiLFwiYmVsbGhvcF9iZWxsXCIsXCJsdWdnYWdlXCIsXCJob3VyZ2xhc3NcIixcImhvdXJnbGFzc19mbG93aW5nX3NhbmRcIixcIndhdGNoXCIsXCJhbGFybV9jbG9ja1wiLFwic3RvcHdhdGNoXCIsXCJ0aW1lcl9jbG9ja1wiLFwibWFudGVscGllY2VfY2xvY2tcIixcImNsb2NrMTJcIixcImNsb2NrMTIzMFwiLFwiY2xvY2sxXCIsXCJjbG9jazEzMFwiLFwiY2xvY2syXCIsXCJjbG9jazIzMFwiLFwiY2xvY2szXCIsXCJjbG9jazMzMFwiLFwiY2xvY2s0XCIsXCJjbG9jazQzMFwiLFwiY2xvY2s1XCIsXCJjbG9jazUzMFwiLFwiY2xvY2s2XCIsXCJjbG9jazYzMFwiLFwiY2xvY2s3XCIsXCJjbG9jazczMFwiLFwiY2xvY2s4XCIsXCJjbG9jazgzMFwiLFwiY2xvY2s5XCIsXCJjbG9jazkzMFwiLFwiY2xvY2sxMFwiLFwiY2xvY2sxMDMwXCIsXCJjbG9jazExXCIsXCJjbG9jazExMzBcIixcIm5ld19tb29uXCIsXCJ3YXhpbmdfY3Jlc2NlbnRfbW9vblwiLFwiZmlyc3RfcXVhcnRlcl9tb29uXCIsXCJtb29uXCIsXCJmdWxsX21vb25cIixcIndhbmluZ19naWJib3VzX21vb25cIixcImxhc3RfcXVhcnRlcl9tb29uXCIsXCJ3YW5pbmdfY3Jlc2NlbnRfbW9vblwiLFwiY3Jlc2NlbnRfbW9vblwiLFwibmV3X21vb25fd2l0aF9mYWNlXCIsXCJmaXJzdF9xdWFydGVyX21vb25fd2l0aF9mYWNlXCIsXCJsYXN0X3F1YXJ0ZXJfbW9vbl93aXRoX2ZhY2VcIixcInRoZXJtb21ldGVyXCIsXCJzdW5ueVwiLFwiZnVsbF9tb29uX3dpdGhfZmFjZVwiLFwic3VuX3dpdGhfZmFjZVwiLFwicmluZ2VkX3BsYW5ldFwiLFwic3RhclwiLFwic3RhcjJcIixcInN0YXJzXCIsXCJtaWxreV93YXlcIixcImNsb3VkXCIsXCJwYXJ0bHlfc3VubnlcIixcInRodW5kZXJfY2xvdWRfYW5kX3JhaW5cIixcIm1vc3RseV9zdW5ueVwiLFwiYmFyZWx5X3N1bm55XCIsXCJwYXJ0bHlfc3VubnlfcmFpblwiLFwicmFpbl9jbG91ZFwiLFwic25vd19jbG91ZFwiLFwibGlnaHRuaW5nXCIsXCJ0b3JuYWRvXCIsXCJmb2dcIixcIndpbmRfYmxvd2luZ19mYWNlXCIsXCJjeWNsb25lXCIsXCJyYWluYm93XCIsXCJjbG9zZWRfdW1icmVsbGFcIixcInVtYnJlbGxhXCIsXCJ1bWJyZWxsYV93aXRoX3JhaW5fZHJvcHNcIixcInVtYnJlbGxhX29uX2dyb3VuZFwiLFwiemFwXCIsXCJzbm93Zmxha2VcIixcInNub3dtYW5cIixcInNub3dtYW5fd2l0aG91dF9zbm93XCIsXCJjb21ldFwiLFwiZmlyZVwiLFwiZHJvcGxldFwiLFwib2NlYW5cIl19LHtcImlkXCI6XCJvYmplY3RzXCIsXCJlbW9qaXNcIjpbXCJleWVnbGFzc2VzXCIsXCJkYXJrX3N1bmdsYXNzZXNcIixcImdvZ2dsZXNcIixcImxhYl9jb2F0XCIsXCJzYWZldHlfdmVzdFwiLFwibmVja3RpZVwiLFwic2hpcnRcIixcImplYW5zXCIsXCJzY2FyZlwiLFwiZ2xvdmVzXCIsXCJjb2F0XCIsXCJzb2Nrc1wiLFwiZHJlc3NcIixcImtpbW9ub1wiLFwic2FyaVwiLFwib25lLXBpZWNlX3N3aW1zdWl0XCIsXCJicmllZnNcIixcInNob3J0c1wiLFwiYmlraW5pXCIsXCJ3b21hbnNfY2xvdGhlc1wiLFwiZm9sZGluZ19oYW5kX2ZhblwiLFwicHVyc2VcIixcImhhbmRiYWdcIixcInBvdWNoXCIsXCJzaG9wcGluZ19iYWdzXCIsXCJzY2hvb2xfc2F0Y2hlbFwiLFwidGhvbmdfc2FuZGFsXCIsXCJtYW5zX3Nob2VcIixcImF0aGxldGljX3Nob2VcIixcImhpa2luZ19ib290XCIsXCJ3b21hbnNfZmxhdF9zaG9lXCIsXCJoaWdoX2hlZWxcIixcInNhbmRhbFwiLFwiYmFsbGV0X3Nob2VzXCIsXCJib290XCIsXCJoYWlyX3BpY2tcIixcImNyb3duXCIsXCJ3b21hbnNfaGF0XCIsXCJ0b3BoYXRcIixcIm1vcnRhcl9ib2FyZFwiLFwiYmlsbGVkX2NhcFwiLFwibWlsaXRhcnlfaGVsbWV0XCIsXCJoZWxtZXRfd2l0aF93aGl0ZV9jcm9zc1wiLFwicHJheWVyX2JlYWRzXCIsXCJsaXBzdGlja1wiLFwicmluZ1wiLFwiZ2VtXCIsXCJtdXRlXCIsXCJzcGVha2VyXCIsXCJzb3VuZFwiLFwibG91ZF9zb3VuZFwiLFwibG91ZHNwZWFrZXJcIixcIm1lZ2FcIixcInBvc3RhbF9ob3JuXCIsXCJiZWxsXCIsXCJub19iZWxsXCIsXCJtdXNpY2FsX3Njb3JlXCIsXCJtdXNpY2FsX25vdGVcIixcIm5vdGVzXCIsXCJzdHVkaW9fbWljcm9waG9uZVwiLFwibGV2ZWxfc2xpZGVyXCIsXCJjb250cm9sX2tub2JzXCIsXCJtaWNyb3Bob25lXCIsXCJoZWFkcGhvbmVzXCIsXCJyYWRpb1wiLFwic2F4b3Bob25lXCIsXCJhY2NvcmRpb25cIixcImd1aXRhclwiLFwibXVzaWNhbF9rZXlib2FyZFwiLFwidHJ1bXBldFwiLFwidmlvbGluXCIsXCJiYW5qb1wiLFwiZHJ1bV93aXRoX2RydW1zdGlja3NcIixcImxvbmdfZHJ1bVwiLFwibWFyYWNhc1wiLFwiZmx1dGVcIixcImlwaG9uZVwiLFwiY2FsbGluZ1wiLFwicGhvbmVcIixcInRlbGVwaG9uZV9yZWNlaXZlclwiLFwicGFnZXJcIixcImZheFwiLFwiYmF0dGVyeVwiLFwibG93X2JhdHRlcnlcIixcImVsZWN0cmljX3BsdWdcIixcImNvbXB1dGVyXCIsXCJkZXNrdG9wX2NvbXB1dGVyXCIsXCJwcmludGVyXCIsXCJrZXlib2FyZFwiLFwidGhyZWVfYnV0dG9uX21vdXNlXCIsXCJ0cmFja2JhbGxcIixcIm1pbmlkaXNjXCIsXCJmbG9wcHlfZGlza1wiLFwiY2RcIixcImR2ZFwiLFwiYWJhY3VzXCIsXCJtb3ZpZV9jYW1lcmFcIixcImZpbG1fZnJhbWVzXCIsXCJmaWxtX3Byb2plY3RvclwiLFwiY2xhcHBlclwiLFwidHZcIixcImNhbWVyYVwiLFwiY2FtZXJhX3dpdGhfZmxhc2hcIixcInZpZGVvX2NhbWVyYVwiLFwidmhzXCIsXCJtYWdcIixcIm1hZ19yaWdodFwiLFwiY2FuZGxlXCIsXCJidWxiXCIsXCJmbGFzaGxpZ2h0XCIsXCJpemFrYXlhX2xhbnRlcm5cIixcImRpeWFfbGFtcFwiLFwibm90ZWJvb2tfd2l0aF9kZWNvcmF0aXZlX2NvdmVyXCIsXCJjbG9zZWRfYm9va1wiLFwiYm9va1wiLFwiZ3JlZW5fYm9va1wiLFwiYmx1ZV9ib29rXCIsXCJvcmFuZ2VfYm9va1wiLFwiYm9va3NcIixcIm5vdGVib29rXCIsXCJsZWRnZXJcIixcInBhZ2Vfd2l0aF9jdXJsXCIsXCJzY3JvbGxcIixcInBhZ2VfZmFjaW5nX3VwXCIsXCJuZXdzcGFwZXJcIixcInJvbGxlZF91cF9uZXdzcGFwZXJcIixcImJvb2ttYXJrX3RhYnNcIixcImJvb2ttYXJrXCIsXCJsYWJlbFwiLFwibW9uZXliYWdcIixcImNvaW5cIixcInllblwiLFwiZG9sbGFyXCIsXCJldXJvXCIsXCJwb3VuZFwiLFwibW9uZXlfd2l0aF93aW5nc1wiLFwiY3JlZGl0X2NhcmRcIixcInJlY2VpcHRcIixcImNoYXJ0XCIsXCJlbWFpbFwiLFwiZS1tYWlsXCIsXCJpbmNvbWluZ19lbnZlbG9wZVwiLFwiZW52ZWxvcGVfd2l0aF9hcnJvd1wiLFwib3V0Ym94X3RyYXlcIixcImluYm94X3RyYXlcIixcInBhY2thZ2VcIixcIm1haWxib3hcIixcIm1haWxib3hfY2xvc2VkXCIsXCJtYWlsYm94X3dpdGhfbWFpbFwiLFwibWFpbGJveF93aXRoX25vX21haWxcIixcInBvc3Rib3hcIixcImJhbGxvdF9ib3hfd2l0aF9iYWxsb3RcIixcInBlbmNpbDJcIixcImJsYWNrX25pYlwiLFwibG93ZXJfbGVmdF9mb3VudGFpbl9wZW5cIixcImxvd2VyX2xlZnRfYmFsbHBvaW50X3BlblwiLFwibG93ZXJfbGVmdF9wYWludGJydXNoXCIsXCJsb3dlcl9sZWZ0X2NyYXlvblwiLFwibWVtb1wiLFwiYnJpZWZjYXNlXCIsXCJmaWxlX2ZvbGRlclwiLFwib3Blbl9maWxlX2ZvbGRlclwiLFwiY2FyZF9pbmRleF9kaXZpZGVyc1wiLFwiZGF0ZVwiLFwiY2FsZW5kYXJcIixcInNwaXJhbF9ub3RlX3BhZFwiLFwic3BpcmFsX2NhbGVuZGFyX3BhZFwiLFwiY2FyZF9pbmRleFwiLFwiY2hhcnRfd2l0aF91cHdhcmRzX3RyZW5kXCIsXCJjaGFydF93aXRoX2Rvd253YXJkc190cmVuZFwiLFwiYmFyX2NoYXJ0XCIsXCJjbGlwYm9hcmRcIixcInB1c2hwaW5cIixcInJvdW5kX3B1c2hwaW5cIixcInBhcGVyY2xpcFwiLFwibGlua2VkX3BhcGVyY2xpcHNcIixcInN0cmFpZ2h0X3J1bGVyXCIsXCJ0cmlhbmd1bGFyX3J1bGVyXCIsXCJzY2lzc29yc1wiLFwiY2FyZF9maWxlX2JveFwiLFwiZmlsZV9jYWJpbmV0XCIsXCJ3YXN0ZWJhc2tldFwiLFwibG9ja1wiLFwidW5sb2NrXCIsXCJsb2NrX3dpdGhfaW5rX3BlblwiLFwiY2xvc2VkX2xvY2tfd2l0aF9rZXlcIixcImtleVwiLFwib2xkX2tleVwiLFwiaGFtbWVyXCIsXCJheGVcIixcInBpY2tcIixcImhhbW1lcl9hbmRfcGlja1wiLFwiaGFtbWVyX2FuZF93cmVuY2hcIixcImRhZ2dlcl9rbmlmZVwiLFwiY3Jvc3NlZF9zd29yZHNcIixcImJvbWJcIixcImJvb21lcmFuZ1wiLFwiYm93X2FuZF9hcnJvd1wiLFwic2hpZWxkXCIsXCJjYXJwZW50cnlfc2F3XCIsXCJ3cmVuY2hcIixcInNjcmV3ZHJpdmVyXCIsXCJudXRfYW5kX2JvbHRcIixcImdlYXJcIixcImNvbXByZXNzaW9uXCIsXCJzY2FsZXNcIixcInByb2JpbmdfY2FuZVwiLFwibGlua1wiLFwiY2hhaW5zXCIsXCJob29rXCIsXCJ0b29sYm94XCIsXCJtYWduZXRcIixcImxhZGRlclwiLFwiYWxlbWJpY1wiLFwidGVzdF90dWJlXCIsXCJwZXRyaV9kaXNoXCIsXCJkbmFcIixcIm1pY3Jvc2NvcGVcIixcInRlbGVzY29wZVwiLFwic2F0ZWxsaXRlX2FudGVubmFcIixcInN5cmluZ2VcIixcImRyb3Bfb2ZfYmxvb2RcIixcInBpbGxcIixcImFkaGVzaXZlX2JhbmRhZ2VcIixcImNydXRjaFwiLFwic3RldGhvc2NvcGVcIixcIngtcmF5XCIsXCJkb29yXCIsXCJlbGV2YXRvclwiLFwibWlycm9yXCIsXCJ3aW5kb3dcIixcImJlZFwiLFwiY291Y2hfYW5kX2xhbXBcIixcImNoYWlyXCIsXCJ0b2lsZXRcIixcInBsdW5nZXJcIixcInNob3dlclwiLFwiYmF0aHR1YlwiLFwibW91c2VfdHJhcFwiLFwicmF6b3JcIixcImxvdGlvbl9ib3R0bGVcIixcInNhZmV0eV9waW5cIixcImJyb29tXCIsXCJiYXNrZXRcIixcInJvbGxfb2ZfcGFwZXJcIixcImJ1Y2tldFwiLFwic29hcFwiLFwiYnViYmxlc1wiLFwidG9vdGhicnVzaFwiLFwic3BvbmdlXCIsXCJmaXJlX2V4dGluZ3Vpc2hlclwiLFwic2hvcHBpbmdfdHJvbGxleVwiLFwic21va2luZ1wiLFwiY29mZmluXCIsXCJoZWFkc3RvbmVcIixcImZ1bmVyYWxfdXJuXCIsXCJuYXphcl9hbXVsZXRcIixcImhhbXNhXCIsXCJtb3lhaVwiLFwicGxhY2FyZFwiLFwiaWRlbnRpZmljYXRpb25fY2FyZFwiXX0se1wiaWRcIjpcInN5bWJvbHNcIixcImVtb2ppc1wiOltcImF0bVwiLFwicHV0X2xpdHRlcl9pbl9pdHNfcGxhY2VcIixcInBvdGFibGVfd2F0ZXJcIixcIndoZWVsY2hhaXJcIixcIm1lbnNcIixcIndvbWVuc1wiLFwicmVzdHJvb21cIixcImJhYnlfc3ltYm9sXCIsXCJ3Y1wiLFwicGFzc3BvcnRfY29udHJvbFwiLFwiY3VzdG9tc1wiLFwiYmFnZ2FnZV9jbGFpbVwiLFwibGVmdF9sdWdnYWdlXCIsXCJ3YXJuaW5nXCIsXCJjaGlsZHJlbl9jcm9zc2luZ1wiLFwibm9fZW50cnlcIixcIm5vX2VudHJ5X3NpZ25cIixcIm5vX2JpY3ljbGVzXCIsXCJub19zbW9raW5nXCIsXCJkb19ub3RfbGl0dGVyXCIsXCJub24tcG90YWJsZV93YXRlclwiLFwibm9fcGVkZXN0cmlhbnNcIixcIm5vX21vYmlsZV9waG9uZXNcIixcInVuZGVyYWdlXCIsXCJyYWRpb2FjdGl2ZV9zaWduXCIsXCJiaW9oYXphcmRfc2lnblwiLFwiYXJyb3dfdXBcIixcImFycm93X3VwcGVyX3JpZ2h0XCIsXCJhcnJvd19yaWdodFwiLFwiYXJyb3dfbG93ZXJfcmlnaHRcIixcImFycm93X2Rvd25cIixcImFycm93X2xvd2VyX2xlZnRcIixcImFycm93X2xlZnRcIixcImFycm93X3VwcGVyX2xlZnRcIixcImFycm93X3VwX2Rvd25cIixcImxlZnRfcmlnaHRfYXJyb3dcIixcImxlZnR3YXJkc19hcnJvd193aXRoX2hvb2tcIixcImFycm93X3JpZ2h0X2hvb2tcIixcImFycm93X2hlYWRpbmdfdXBcIixcImFycm93X2hlYWRpbmdfZG93blwiLFwiYXJyb3dzX2Nsb2Nrd2lzZVwiLFwiYXJyb3dzX2NvdW50ZXJjbG9ja3dpc2VcIixcImJhY2tcIixcImVuZFwiLFwib25cIixcInNvb25cIixcInRvcFwiLFwicGxhY2Vfb2Zfd29yc2hpcFwiLFwiYXRvbV9zeW1ib2xcIixcIm9tX3N5bWJvbFwiLFwic3Rhcl9vZl9kYXZpZFwiLFwid2hlZWxfb2ZfZGhhcm1hXCIsXCJ5aW5feWFuZ1wiLFwibGF0aW5fY3Jvc3NcIixcIm9ydGhvZG94X2Nyb3NzXCIsXCJzdGFyX2FuZF9jcmVzY2VudFwiLFwicGVhY2Vfc3ltYm9sXCIsXCJtZW5vcmFoX3dpdGhfbmluZV9icmFuY2hlc1wiLFwic2l4X3BvaW50ZWRfc3RhclwiLFwia2hhbmRhXCIsXCJhcmllc1wiLFwidGF1cnVzXCIsXCJnZW1pbmlcIixcImNhbmNlclwiLFwibGVvXCIsXCJ2aXJnb1wiLFwibGlicmFcIixcInNjb3JwaXVzXCIsXCJzYWdpdHRhcml1c1wiLFwiY2Fwcmljb3JuXCIsXCJhcXVhcml1c1wiLFwicGlzY2VzXCIsXCJvcGhpdWNodXNcIixcInR3aXN0ZWRfcmlnaHR3YXJkc19hcnJvd3NcIixcInJlcGVhdFwiLFwicmVwZWF0X29uZVwiLFwiYXJyb3dfZm9yd2FyZFwiLFwiZmFzdF9mb3J3YXJkXCIsXCJibGFja19yaWdodF9wb2ludGluZ19kb3VibGVfdHJpYW5nbGVfd2l0aF92ZXJ0aWNhbF9iYXJcIixcImJsYWNrX3JpZ2h0X3BvaW50aW5nX3RyaWFuZ2xlX3dpdGhfZG91YmxlX3ZlcnRpY2FsX2JhclwiLFwiYXJyb3dfYmFja3dhcmRcIixcInJld2luZFwiLFwiYmxhY2tfbGVmdF9wb2ludGluZ19kb3VibGVfdHJpYW5nbGVfd2l0aF92ZXJ0aWNhbF9iYXJcIixcImFycm93X3VwX3NtYWxsXCIsXCJhcnJvd19kb3VibGVfdXBcIixcImFycm93X2Rvd25fc21hbGxcIixcImFycm93X2RvdWJsZV9kb3duXCIsXCJkb3VibGVfdmVydGljYWxfYmFyXCIsXCJibGFja19zcXVhcmVfZm9yX3N0b3BcIixcImJsYWNrX2NpcmNsZV9mb3JfcmVjb3JkXCIsXCJlamVjdFwiLFwiY2luZW1hXCIsXCJsb3dfYnJpZ2h0bmVzc1wiLFwiaGlnaF9icmlnaHRuZXNzXCIsXCJzaWduYWxfc3RyZW5ndGhcIixcIndpcmVsZXNzXCIsXCJ2aWJyYXRpb25fbW9kZVwiLFwibW9iaWxlX3Bob25lX29mZlwiLFwiZmVtYWxlX3NpZ25cIixcIm1hbGVfc2lnblwiLFwidHJhbnNnZW5kZXJfc3ltYm9sXCIsXCJoZWF2eV9tdWx0aXBsaWNhdGlvbl94XCIsXCJoZWF2eV9wbHVzX3NpZ25cIixcImhlYXZ5X21pbnVzX3NpZ25cIixcImhlYXZ5X2RpdmlzaW9uX3NpZ25cIixcImhlYXZ5X2VxdWFsc19zaWduXCIsXCJpbmZpbml0eVwiLFwiYmFuZ2JhbmdcIixcImludGVycm9iYW5nXCIsXCJxdWVzdGlvblwiLFwiZ3JleV9xdWVzdGlvblwiLFwiZ3JleV9leGNsYW1hdGlvblwiLFwiZXhjbGFtYXRpb25cIixcIndhdnlfZGFzaFwiLFwiY3VycmVuY3lfZXhjaGFuZ2VcIixcImhlYXZ5X2RvbGxhcl9zaWduXCIsXCJtZWRpY2FsX3N5bWJvbFwiLFwicmVjeWNsZVwiLFwiZmxldXJfZGVfbGlzXCIsXCJ0cmlkZW50XCIsXCJuYW1lX2JhZGdlXCIsXCJiZWdpbm5lclwiLFwib1wiLFwid2hpdGVfY2hlY2tfbWFya1wiLFwiYmFsbG90X2JveF93aXRoX2NoZWNrXCIsXCJoZWF2eV9jaGVja19tYXJrXCIsXCJ4XCIsXCJuZWdhdGl2ZV9zcXVhcmVkX2Nyb3NzX21hcmtcIixcImN1cmx5X2xvb3BcIixcImxvb3BcIixcInBhcnRfYWx0ZXJuYXRpb25fbWFya1wiLFwiZWlnaHRfc3Bva2VkX2FzdGVyaXNrXCIsXCJlaWdodF9wb2ludGVkX2JsYWNrX3N0YXJcIixcInNwYXJrbGVcIixcImNvcHlyaWdodFwiLFwicmVnaXN0ZXJlZFwiLFwidG1cIixcImhhc2hcIixcImtleWNhcF9zdGFyXCIsXCJ6ZXJvXCIsXCJvbmVcIixcInR3b1wiLFwidGhyZWVcIixcImZvdXJcIixcImZpdmVcIixcInNpeFwiLFwic2V2ZW5cIixcImVpZ2h0XCIsXCJuaW5lXCIsXCJrZXljYXBfdGVuXCIsXCJjYXBpdGFsX2FiY2RcIixcImFiY2RcIixcIjEyMzRcIixcInN5bWJvbHNcIixcImFiY1wiLFwiYVwiLFwiYWJcIixcImJcIixcImNsXCIsXCJjb29sXCIsXCJmcmVlXCIsXCJpbmZvcm1hdGlvbl9zb3VyY2VcIixcImlkXCIsXCJtXCIsXCJuZXdcIixcIm5nXCIsXCJvMlwiLFwib2tcIixcInBhcmtpbmdcIixcInNvc1wiLFwidXBcIixcInZzXCIsXCJrb2tvXCIsXCJzYVwiLFwidTY3MDhcIixcInU2NzA5XCIsXCJ1NjMwN1wiLFwiaWRlb2dyYXBoX2FkdmFudGFnZVwiLFwidTUyNzJcIixcInU3MTIxXCIsXCJ1Nzk4MVwiLFwiYWNjZXB0XCIsXCJ1NzUzM1wiLFwidTU0MDhcIixcInU3YTdhXCIsXCJjb25ncmF0dWxhdGlvbnNcIixcInNlY3JldFwiLFwidTU1YjZcIixcInU2ZTgwXCIsXCJyZWRfY2lyY2xlXCIsXCJsYXJnZV9vcmFuZ2VfY2lyY2xlXCIsXCJsYXJnZV95ZWxsb3dfY2lyY2xlXCIsXCJsYXJnZV9ncmVlbl9jaXJjbGVcIixcImxhcmdlX2JsdWVfY2lyY2xlXCIsXCJsYXJnZV9wdXJwbGVfY2lyY2xlXCIsXCJsYXJnZV9icm93bl9jaXJjbGVcIixcImJsYWNrX2NpcmNsZVwiLFwid2hpdGVfY2lyY2xlXCIsXCJsYXJnZV9yZWRfc3F1YXJlXCIsXCJsYXJnZV9vcmFuZ2Vfc3F1YXJlXCIsXCJsYXJnZV95ZWxsb3dfc3F1YXJlXCIsXCJsYXJnZV9ncmVlbl9zcXVhcmVcIixcImxhcmdlX2JsdWVfc3F1YXJlXCIsXCJsYXJnZV9wdXJwbGVfc3F1YXJlXCIsXCJsYXJnZV9icm93bl9zcXVhcmVcIixcImJsYWNrX2xhcmdlX3NxdWFyZVwiLFwid2hpdGVfbGFyZ2Vfc3F1YXJlXCIsXCJibGFja19tZWRpdW1fc3F1YXJlXCIsXCJ3aGl0ZV9tZWRpdW1fc3F1YXJlXCIsXCJibGFja19tZWRpdW1fc21hbGxfc3F1YXJlXCIsXCJ3aGl0ZV9tZWRpdW1fc21hbGxfc3F1YXJlXCIsXCJibGFja19zbWFsbF9zcXVhcmVcIixcIndoaXRlX3NtYWxsX3NxdWFyZVwiLFwibGFyZ2Vfb3JhbmdlX2RpYW1vbmRcIixcImxhcmdlX2JsdWVfZGlhbW9uZFwiLFwic21hbGxfb3JhbmdlX2RpYW1vbmRcIixcInNtYWxsX2JsdWVfZGlhbW9uZFwiLFwic21hbGxfcmVkX3RyaWFuZ2xlXCIsXCJzbWFsbF9yZWRfdHJpYW5nbGVfZG93blwiLFwiZGlhbW9uZF9zaGFwZV93aXRoX2FfZG90X2luc2lkZVwiLFwicmFkaW9fYnV0dG9uXCIsXCJ3aGl0ZV9zcXVhcmVfYnV0dG9uXCIsXCJibGFja19zcXVhcmVfYnV0dG9uXCJdfSx7XCJpZFwiOlwiZmxhZ3NcIixcImVtb2ppc1wiOltcImNoZWNrZXJlZF9mbGFnXCIsXCJjblwiLFwiY3Jvc3NlZF9mbGFnc1wiLFwiZGVcIixcImVzXCIsXCJmbGFnLWFjXCIsXCJmbGFnLWFkXCIsXCJmbGFnLWFlXCIsXCJmbGFnLWFmXCIsXCJmbGFnLWFnXCIsXCJmbGFnLWFpXCIsXCJmbGFnLWFsXCIsXCJmbGFnLWFtXCIsXCJmbGFnLWFvXCIsXCJmbGFnLWFxXCIsXCJmbGFnLWFyXCIsXCJmbGFnLWFzXCIsXCJmbGFnLWF0XCIsXCJmbGFnLWF1XCIsXCJmbGFnLWF3XCIsXCJmbGFnLWF4XCIsXCJmbGFnLWF6XCIsXCJmbGFnLWJhXCIsXCJmbGFnLWJiXCIsXCJmbGFnLWJkXCIsXCJmbGFnLWJlXCIsXCJmbGFnLWJmXCIsXCJmbGFnLWJnXCIsXCJmbGFnLWJoXCIsXCJmbGFnLWJpXCIsXCJmbGFnLWJqXCIsXCJmbGFnLWJsXCIsXCJmbGFnLWJtXCIsXCJmbGFnLWJuXCIsXCJmbGFnLWJvXCIsXCJmbGFnLWJxXCIsXCJmbGFnLWJyXCIsXCJmbGFnLWJzXCIsXCJmbGFnLWJ0XCIsXCJmbGFnLWJ2XCIsXCJmbGFnLWJ3XCIsXCJmbGFnLWJ5XCIsXCJmbGFnLWJ6XCIsXCJmbGFnLWNhXCIsXCJmbGFnLWNjXCIsXCJmbGFnLWNkXCIsXCJmbGFnLWNmXCIsXCJmbGFnLWNnXCIsXCJmbGFnLWNoXCIsXCJmbGFnLWNpXCIsXCJmbGFnLWNrXCIsXCJmbGFnLWNsXCIsXCJmbGFnLWNtXCIsXCJmbGFnLWNvXCIsXCJmbGFnLWNwXCIsXCJmbGFnLWNyXCIsXCJmbGFnLWN1XCIsXCJmbGFnLWN2XCIsXCJmbGFnLWN3XCIsXCJmbGFnLWN4XCIsXCJmbGFnLWN5XCIsXCJmbGFnLWN6XCIsXCJmbGFnLWRnXCIsXCJmbGFnLWRqXCIsXCJmbGFnLWRrXCIsXCJmbGFnLWRtXCIsXCJmbGFnLWRvXCIsXCJmbGFnLWR6XCIsXCJmbGFnLWVhXCIsXCJmbGFnLWVjXCIsXCJmbGFnLWVlXCIsXCJmbGFnLWVnXCIsXCJmbGFnLWVoXCIsXCJmbGFnLWVuZ2xhbmRcIixcImZsYWctZXJcIixcImZsYWctZXRcIixcImZsYWctZXVcIixcImZsYWctZmlcIixcImZsYWctZmpcIixcImZsYWctZmtcIixcImZsYWctZm1cIixcImZsYWctZm9cIixcImZsYWctZ2FcIixcImZsYWctZ2RcIixcImZsYWctZ2VcIixcImZsYWctZ2ZcIixcImZsYWctZ2dcIixcImZsYWctZ2hcIixcImZsYWctZ2lcIixcImZsYWctZ2xcIixcImZsYWctZ21cIixcImZsYWctZ25cIixcImZsYWctZ3BcIixcImZsYWctZ3FcIixcImZsYWctZ3JcIixcImZsYWctZ3NcIixcImZsYWctZ3RcIixcImZsYWctZ3VcIixcImZsYWctZ3dcIixcImZsYWctZ3lcIixcImZsYWctaGtcIixcImZsYWctaG1cIixcImZsYWctaG5cIixcImZsYWctaHJcIixcImZsYWctaHRcIixcImZsYWctaHVcIixcImZsYWctaWNcIixcImZsYWctaWRcIixcImZsYWctaWVcIixcImZsYWctaWxcIixcImZsYWctaW1cIixcImZsYWctaW5cIixcImZsYWctaW9cIixcImZsYWctaXFcIixcImZsYWctaXJcIixcImZsYWctaXNcIixcImZsYWctamVcIixcImZsYWctam1cIixcImZsYWctam9cIixcImZsYWcta2VcIixcImZsYWcta2dcIixcImZsYWcta2hcIixcImZsYWcta2lcIixcImZsYWcta21cIixcImZsYWcta25cIixcImZsYWcta3BcIixcImZsYWcta3dcIixcImZsYWcta3lcIixcImZsYWcta3pcIixcImZsYWctbGFcIixcImZsYWctbGJcIixcImZsYWctbGNcIixcImZsYWctbGlcIixcImZsYWctbGtcIixcImZsYWctbHJcIixcImZsYWctbHNcIixcImZsYWctbHRcIixcImZsYWctbHVcIixcImZsYWctbHZcIixcImZsYWctbHlcIixcImZsYWctbWFcIixcImZsYWctbWNcIixcImZsYWctbWRcIixcImZsYWctbWVcIixcImZsYWctbWZcIixcImZsYWctbWdcIixcImZsYWctbWhcIixcImZsYWctbWtcIixcImZsYWctbWxcIixcImZsYWctbW1cIixcImZsYWctbW5cIixcImZsYWctbW9cIixcImZsYWctbXBcIixcImZsYWctbXFcIixcImZsYWctbXJcIixcImZsYWctbXNcIixcImZsYWctbXRcIixcImZsYWctbXVcIixcImZsYWctbXZcIixcImZsYWctbXdcIixcImZsYWctbXhcIixcImZsYWctbXlcIixcImZsYWctbXpcIixcImZsYWctbmFcIixcImZsYWctbmNcIixcImZsYWctbmVcIixcImZsYWctbmZcIixcImZsYWctbmdcIixcImZsYWctbmlcIixcImZsYWctbmxcIixcImZsYWctbm9cIixcImZsYWctbnBcIixcImZsYWctbnJcIixcImZsYWctbnVcIixcImZsYWctbnpcIixcImZsYWctb21cIixcImZsYWctcGFcIixcImZsYWctcGVcIixcImZsYWctcGZcIixcImZsYWctcGdcIixcImZsYWctcGhcIixcImZsYWctcGtcIixcImZsYWctcGxcIixcImZsYWctcG1cIixcImZsYWctcG5cIixcImZsYWctcHJcIixcImZsYWctcHNcIixcImZsYWctcHRcIixcImZsYWctcHdcIixcImZsYWctcHlcIixcImZsYWctcWFcIixcImZsYWctcmVcIixcImZsYWctcm9cIixcImZsYWctcnNcIixcImZsYWctcndcIixcImZsYWctc2FcIixcImZsYWctc2JcIixcImZsYWctc2NcIixcImZsYWctc2NvdGxhbmRcIixcImZsYWctc2RcIixcImZsYWctc2VcIixcImZsYWctc2dcIixcImZsYWctc2hcIixcImZsYWctc2lcIixcImZsYWctc2pcIixcImZsYWctc2tcIixcImZsYWctc2xcIixcImZsYWctc21cIixcImZsYWctc25cIixcImZsYWctc29cIixcImZsYWctc3JcIixcImZsYWctc3NcIixcImZsYWctc3RcIixcImZsYWctc3ZcIixcImZsYWctc3hcIixcImZsYWctc3lcIixcImZsYWctc3pcIixcImZsYWctdGFcIixcImZsYWctdGNcIixcImZsYWctdGRcIixcImZsYWctdGZcIixcImZsYWctdGdcIixcImZsYWctdGhcIixcImZsYWctdGpcIixcImZsYWctdGtcIixcImZsYWctdGxcIixcImZsYWctdG1cIixcImZsYWctdG5cIixcImZsYWctdG9cIixcImZsYWctdHJcIixcImZsYWctdHRcIixcImZsYWctdHZcIixcImZsYWctdHdcIixcImZsYWctdHpcIixcImZsYWctdWFcIixcImZsYWctdWdcIixcImZsYWctdW1cIixcImZsYWctdW5cIixcImZsYWctdXlcIixcImZsYWctdXpcIixcImZsYWctdmFcIixcImZsYWctdmNcIixcImZsYWctdmVcIixcImZsYWctdmdcIixcImZsYWctdmlcIixcImZsYWctdm5cIixcImZsYWctdnVcIixcImZsYWctd2FsZXNcIixcImZsYWctd2ZcIixcImZsYWctd3NcIixcImZsYWcteGtcIixcImZsYWcteWVcIixcImZsYWcteXRcIixcImZsYWctemFcIixcImZsYWctem1cIixcImZsYWctendcIixcImZyXCIsXCJnYlwiLFwiaXRcIixcImpwXCIsXCJrclwiLFwicGlyYXRlX2ZsYWdcIixcInJhaW5ib3ctZmxhZ1wiLFwicnVcIixcInRyYW5zZ2VuZGVyX2ZsYWdcIixcInRyaWFuZ3VsYXJfZmxhZ19vbl9wb3N0XCIsXCJ1c1wiLFwid2F2aW5nX2JsYWNrX2ZsYWdcIixcIndhdmluZ193aGl0ZV9mbGFnXCJdfV0sXCJlbW9qaXNcIjp7XCIxMDBcIjp7XCJpZFwiOlwiMTAwXCIsXCJuYW1lXCI6XCJIdW5kcmVkIFBvaW50c1wiLFwia2V5d29yZHNcIjpbXCIxMDBcIixcInNjb3JlXCIsXCJwZXJmZWN0XCIsXCJudW1iZXJzXCIsXCJjZW50dXJ5XCIsXCJleGFtXCIsXCJxdWl6XCIsXCJ0ZXN0XCIsXCJwYXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0FGXCJ9XSxcInZlcnNpb25cIjoxfSxcIjEyMzRcIjp7XCJpZFwiOlwiMTIzNFwiLFwibmFtZVwiOlwiSW5wdXQgTnVtYmVyc1wiLFwia2V5d29yZHNcIjpbXCIxMjM0XCIsXCJibHVlXCIsXCJzcXVhcmVcIixcIjFcIixcIjJcIixcIjNcIixcIjRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUyMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMjJcIn1dLFwidmVyc2lvblwiOjF9LFwiZ3Jpbm5pbmdcIjp7XCJpZFwiOlwiZ3Jpbm5pbmdcIixcIm5hbWVcIjpcIkdyaW5uaW5nIEZhY2VcIixcImVtb3RpY29uc1wiOltcIjpEXCJdLFwia2V5d29yZHNcIjpbXCJzbWlsZVwiLFwiaGFwcHlcIixcImpveVwiLFwiOkRcIixcImdyaW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYwMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMDBcIn1dLFwidmVyc2lvblwiOjF9LFwic21pbGV5XCI6e1wiaWRcIjpcInNtaWxleVwiLFwibmFtZVwiOlwiR3Jpbm5pbmcgRmFjZSB3aXRoIEJpZyBFeWVzXCIsXCJlbW90aWNvbnNcIjpbXCI6KVwiLFwiPSlcIixcIj0tKVwiXSxcImtleXdvcmRzXCI6W1wic21pbGV5XCIsXCJoYXBweVwiLFwiam95XCIsXCJoYWhhXCIsXCI6RFwiLFwiOilcIixcInNtaWxlXCIsXCJmdW5ueVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjAzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUwM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzbWlsZVwiOntcImlkXCI6XCJzbWlsZVwiLFwibmFtZVwiOlwiR3Jpbm5pbmcgRmFjZSB3aXRoIFNtaWxpbmcgRXllc1wiLFwiZW1vdGljb25zXCI6W1wiOilcIixcIkM6XCIsXCJjOlwiLFwiOkRcIixcIjotRFwiXSxcImtleXdvcmRzXCI6W1wic21pbGVcIixcImhhcHB5XCIsXCJqb3lcIixcImZ1bm55XCIsXCJoYWhhXCIsXCJsYXVnaFwiLFwibGlrZVwiLFwiOkRcIixcIjopXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MDRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTA0XCJ9XSxcInZlcnNpb25cIjoxfSxcImdyaW5cIjp7XCJpZFwiOlwiZ3JpblwiLFwibmFtZVwiOlwiQmVhbWluZyBGYWNlIHdpdGggU21pbGluZyBFeWVzXCIsXCJrZXl3b3Jkc1wiOltcImdyaW5cIixcImhhcHB5XCIsXCJzbWlsZVwiLFwiam95XCIsXCJrYXdhaWlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYwMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMDFcIn1dLFwidmVyc2lvblwiOjF9LFwibGF1Z2hpbmdcIjp7XCJpZFwiOlwibGF1Z2hpbmdcIixcIm5hbWVcIjpcIkdyaW5uaW5nIFNxdWludGluZyBGYWNlXCIsXCJlbW90aWNvbnNcIjpbXCI6PlwiLFwiOi0+XCJdLFwia2V5d29yZHNcIjpbXCJsYXVnaGluZ1wiLFwic2F0aXNmaWVkXCIsXCJoYXBweVwiLFwiam95XCIsXCJsb2xcIixcImhhaGFcIixcImdsYWRcIixcIlhEXCIsXCJsYXVnaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjA2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUwNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzd2VhdF9zbWlsZVwiOntcImlkXCI6XCJzd2VhdF9zbWlsZVwiLFwibmFtZVwiOlwiR3Jpbm5pbmcgRmFjZSB3aXRoIFN3ZWF0XCIsXCJrZXl3b3Jkc1wiOltcInNtaWxlXCIsXCJob3RcIixcImhhcHB5XCIsXCJsYXVnaFwiLFwicmVsaWVmXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MDVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTA1XCJ9XSxcInZlcnNpb25cIjoxfSxcInJvbGxpbmdfb25fdGhlX2Zsb29yX2xhdWdoaW5nXCI6e1wiaWRcIjpcInJvbGxpbmdfb25fdGhlX2Zsb29yX2xhdWdoaW5nXCIsXCJuYW1lXCI6XCJSb2xsaW5nIG9uIHRoZSBGbG9vciBMYXVnaGluZ1wiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJsb2xcIixcImhhaGFcIixcInJvZmxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkyM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMjNcIn1dLFwidmVyc2lvblwiOjN9LFwiam95XCI6e1wiaWRcIjpcImpveVwiLFwibmFtZVwiOlwiRmFjZSB3aXRoIFRlYXJzIG9mIEpveVwiLFwia2V5d29yZHNcIjpbXCJjcnlcIixcIndlZXBcIixcImhhcHB5XCIsXCJoYXBweXRlYXJzXCIsXCJoYWhhXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MDJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTAyXCJ9XSxcInZlcnNpb25cIjoxfSxcInNsaWdodGx5X3NtaWxpbmdfZmFjZVwiOntcImlkXCI6XCJzbGlnaHRseV9zbWlsaW5nX2ZhY2VcIixcIm5hbWVcIjpcIlNsaWdodGx5IFNtaWxpbmcgRmFjZVwiLFwiZW1vdGljb25zXCI6W1wiOilcIixcIig6XCIsXCI6LSlcIl0sXCJrZXl3b3Jkc1wiOltcInNtaWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2NDJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQyXCJ9XSxcInZlcnNpb25cIjoxfSxcInVwc2lkZV9kb3duX2ZhY2VcIjp7XCJpZFwiOlwidXBzaWRlX2Rvd25fZmFjZVwiLFwibmFtZVwiOlwiVXBzaWRlLURvd24gRmFjZVwiLFwia2V5d29yZHNcIjpbXCJ1cHNpZGVcIixcImRvd25cIixcImZsaXBwZWRcIixcInNpbGx5XCIsXCJzbWlsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0M1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtZWx0aW5nX2ZhY2VcIjp7XCJpZFwiOlwibWVsdGluZ19mYWNlXCIsXCJuYW1lXCI6XCJNZWx0aW5nIEZhY2VcIixcImtleXdvcmRzXCI6W1wiaG90XCIsXCJoZWF0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZTBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUUwXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJ3aW5rXCI6e1wiaWRcIjpcIndpbmtcIixcIm5hbWVcIjpcIldpbmtpbmcgRmFjZVwiLFwiZW1vdGljb25zXCI6W1wiOylcIixcIjstKVwiXSxcImtleXdvcmRzXCI6W1wid2lua1wiLFwiaGFwcHlcIixcIm1pc2NoaWV2b3VzXCIsXCJzZWNyZXRcIixcIjspXCIsXCJzbWlsZVwiLFwiZXllXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MDlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTA5XCJ9XSxcInZlcnNpb25cIjoxfSxcImJsdXNoXCI6e1wiaWRcIjpcImJsdXNoXCIsXCJuYW1lXCI6XCJTbWlsaW5nIEZhY2Ugd2l0aCBTbWlsaW5nIEV5ZXNcIixcImVtb3RpY29uc1wiOltcIjopXCJdLFwia2V5d29yZHNcIjpbXCJibHVzaFwiLFwic21pbGVcIixcImhhcHB5XCIsXCJmbHVzaGVkXCIsXCJjcnVzaFwiLFwiZW1iYXJyYXNzZWRcIixcInNoeVwiLFwiam95XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MGFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTBBXCJ9XSxcInZlcnNpb25cIjoxfSxcImlubm9jZW50XCI6e1wiaWRcIjpcImlubm9jZW50XCIsXCJuYW1lXCI6XCJTbWlsaW5nIEZhY2Ugd2l0aCBIYWxvXCIsXCJrZXl3b3Jkc1wiOltcImlubm9jZW50XCIsXCJhbmdlbFwiLFwiaGVhdmVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MDdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTA3XCJ9XSxcInZlcnNpb25cIjoxfSxcInNtaWxpbmdfZmFjZV93aXRoXzNfaGVhcnRzXCI6e1wiaWRcIjpcInNtaWxpbmdfZmFjZV93aXRoXzNfaGVhcnRzXCIsXCJuYW1lXCI6XCJTbWlsaW5nIEZhY2Ugd2l0aCBIZWFydHNcIixcImtleXdvcmRzXCI6W1wiM1wiLFwibG92ZVwiLFwibGlrZVwiLFwiYWZmZWN0aW9uXCIsXCJ2YWxlbnRpbmVzXCIsXCJpbmZhdHVhdGlvblwiLFwiY3J1c2hcIixcImFkb3JlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NzBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDcwXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJoZWFydF9leWVzXCI6e1wiaWRcIjpcImhlYXJ0X2V5ZXNcIixcIm5hbWVcIjpcIlNtaWxpbmcgRmFjZSB3aXRoIEhlYXJ0LUV5ZXNcIixcImtleXdvcmRzXCI6W1wiaGVhcnRcIixcImV5ZXNcIixcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwidmFsZW50aW5lc1wiLFwiaW5mYXR1YXRpb25cIixcImNydXNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MGRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTBEXCJ9XSxcInZlcnNpb25cIjoxfSxcInN0YXItc3RydWNrXCI6e1wiaWRcIjpcInN0YXItc3RydWNrXCIsXCJuYW1lXCI6XCJTdGFyLVN0cnVja1wiLFwia2V5d29yZHNcIjpbXCJzdGFyXCIsXCJzdHJ1Y2tcIixcImdyaW5uaW5nXCIsXCJmYWNlXCIsXCJ3aXRoXCIsXCJleWVzXCIsXCJzbWlsZVwiLFwic3RhcnJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MjlcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDI5XCJ9XSxcInZlcnNpb25cIjo1fSxcImtpc3NpbmdfaGVhcnRcIjp7XCJpZFwiOlwia2lzc2luZ19oZWFydFwiLFwibmFtZVwiOlwiRmFjZSBCbG93aW5nIGEgS2lzc1wiLFwiZW1vdGljb25zXCI6W1wiOipcIixcIjotKlwiXSxcImtleXdvcmRzXCI6W1wia2lzc2luZ1wiLFwiaGVhcnRcIixcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwidmFsZW50aW5lc1wiLFwiaW5mYXR1YXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYxOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMThcIn1dLFwidmVyc2lvblwiOjF9LFwia2lzc2luZ1wiOntcImlkXCI6XCJraXNzaW5nXCIsXCJuYW1lXCI6XCJLaXNzaW5nIEZhY2VcIixcImtleXdvcmRzXCI6W1wibG92ZVwiLFwibGlrZVwiLFwiM1wiLFwidmFsZW50aW5lc1wiLFwiaW5mYXR1YXRpb25cIixcImtpc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYxN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMTdcIn1dLFwidmVyc2lvblwiOjF9LFwicmVsYXhlZFwiOntcImlkXCI6XCJyZWxheGVkXCIsXCJuYW1lXCI6XCJTbWlsaW5nIEZhY2VcIixcImtleXdvcmRzXCI6W1wicmVsYXhlZFwiLFwiYmx1c2hcIixcIm1hc3NhZ2VcIixcImhhcHBpbmVzc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2M2EtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2M0FcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwia2lzc2luZ19jbG9zZWRfZXllc1wiOntcImlkXCI6XCJraXNzaW5nX2Nsb3NlZF9leWVzXCIsXCJuYW1lXCI6XCJLaXNzaW5nIEZhY2Ugd2l0aCBDbG9zZWQgRXllc1wiLFwia2V5d29yZHNcIjpbXCJsb3ZlXCIsXCJsaWtlXCIsXCJhZmZlY3Rpb25cIixcInZhbGVudGluZXNcIixcImluZmF0dWF0aW9uXCIsXCJraXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MWFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTFBXCJ9XSxcInZlcnNpb25cIjoxfSxcImtpc3Npbmdfc21pbGluZ19leWVzXCI6e1wiaWRcIjpcImtpc3Npbmdfc21pbGluZ19leWVzXCIsXCJuYW1lXCI6XCJLaXNzaW5nIEZhY2Ugd2l0aCBTbWlsaW5nIEV5ZXNcIixcImtleXdvcmRzXCI6W1wiYWZmZWN0aW9uXCIsXCJ2YWxlbnRpbmVzXCIsXCJpbmZhdHVhdGlvblwiLFwia2lzc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjE5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUxOVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzbWlsaW5nX2ZhY2Vfd2l0aF90ZWFyXCI6e1wiaWRcIjpcInNtaWxpbmdfZmFjZV93aXRoX3RlYXJcIixcIm5hbWVcIjpcIlNtaWxpbmcgRmFjZSB3aXRoIFRlYXJcIixcImtleXdvcmRzXCI6W1wic2FkXCIsXCJjcnlcIixcInByZXRlbmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk3MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENzJcIn1dLFwidmVyc2lvblwiOjEzfSxcInl1bVwiOntcImlkXCI6XCJ5dW1cIixcIm5hbWVcIjpcIkZhY2UgU2F2b3JpbmcgRm9vZFwiLFwia2V5d29yZHNcIjpbXCJ5dW1cIixcImhhcHB5XCIsXCJqb3lcIixcInRvbmd1ZVwiLFwic21pbGVcIixcInNpbGx5XCIsXCJ5dW1teVwiLFwibm9tXCIsXCJkZWxpY2lvdXNcIixcInNhdm91cmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjBiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUwQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzdHVja19vdXRfdG9uZ3VlXCI6e1wiaWRcIjpcInN0dWNrX291dF90b25ndWVcIixcIm5hbWVcIjpcIkZhY2Ugd2l0aCBUb25ndWVcIixcImVtb3RpY29uc1wiOltcIjpwXCIsXCI6LXBcIixcIjpQXCIsXCI6LVBcIixcIjpiXCIsXCI6LWJcIl0sXCJrZXl3b3Jkc1wiOltcInN0dWNrXCIsXCJvdXRcIixcInByYW5rXCIsXCJjaGlsZGlzaFwiLFwicGxheWZ1bFwiLFwibWlzY2hpZXZvdXNcIixcInNtaWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTFCXCJ9XSxcInZlcnNpb25cIjoxfSxcInN0dWNrX291dF90b25ndWVfd2lua2luZ19leWVcIjp7XCJpZFwiOlwic3R1Y2tfb3V0X3Rvbmd1ZV93aW5raW5nX2V5ZVwiLFwibmFtZVwiOlwiV2lua2luZyBGYWNlIHdpdGggVG9uZ3VlXCIsXCJlbW90aWNvbnNcIjpbXCI7cFwiLFwiOy1wXCIsXCI7YlwiLFwiOy1iXCIsXCI7UFwiLFwiOy1QXCJdLFwia2V5d29yZHNcIjpbXCJzdHVja1wiLFwib3V0XCIsXCJleWVcIixcInByYW5rXCIsXCJjaGlsZGlzaFwiLFwicGxheWZ1bFwiLFwibWlzY2hpZXZvdXNcIixcInNtaWxlXCIsXCJ3aW5rXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MWNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTFDXCJ9XSxcInZlcnNpb25cIjoxfSxcInphbnlfZmFjZVwiOntcImlkXCI6XCJ6YW55X2ZhY2VcIixcIm5hbWVcIjpcIlphbnkgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJncmlubmluZ1wiLFwid2l0aFwiLFwib25lXCIsXCJsYXJnZVwiLFwiYW5kXCIsXCJzbWFsbFwiLFwiZXllXCIsXCJnb29meVwiLFwiY3JhenlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkyYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMkFcIn1dLFwidmVyc2lvblwiOjV9LFwic3R1Y2tfb3V0X3Rvbmd1ZV9jbG9zZWRfZXllc1wiOntcImlkXCI6XCJzdHVja19vdXRfdG9uZ3VlX2Nsb3NlZF9leWVzXCIsXCJuYW1lXCI6XCJTcXVpbnRpbmcgRmFjZSB3aXRoIFRvbmd1ZVwiLFwia2V5d29yZHNcIjpbXCJzdHVja1wiLFwib3V0XCIsXCJjbG9zZWRcIixcImV5ZXNcIixcInByYW5rXCIsXCJwbGF5ZnVsXCIsXCJtaXNjaGlldm91c1wiLFwic21pbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYxZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMURcIn1dLFwidmVyc2lvblwiOjF9LFwibW9uZXlfbW91dGhfZmFjZVwiOntcImlkXCI6XCJtb25leV9tb3V0aF9mYWNlXCIsXCJuYW1lXCI6XCJNb25leS1Nb3V0aCBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcIm1vbmV5XCIsXCJtb3V0aFwiLFwicmljaFwiLFwiZG9sbGFyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MTFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDExXCJ9XSxcInZlcnNpb25cIjoxfSxcImh1Z2dpbmdfZmFjZVwiOntcImlkXCI6XCJodWdnaW5nX2ZhY2VcIixcIm5hbWVcIjpcIkh1Z2dpbmcgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJzbWlsZVwiLFwiaHVnXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MTdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDE3XCJ9XSxcInZlcnNpb25cIjoxfSxcImZhY2Vfd2l0aF9oYW5kX292ZXJfbW91dGhcIjp7XCJpZFwiOlwiZmFjZV93aXRoX2hhbmRfb3Zlcl9tb3V0aFwiLFwibmFtZVwiOlwiRmFjZSB3aXRoIEhhbmQgb3ZlciBNb3V0aFwiLFwia2V5d29yZHNcIjpbXCJzbWlsaW5nXCIsXCJleWVzXCIsXCJhbmRcIixcImNvdmVyaW5nXCIsXCJ3aG9vcHNcIixcInNob2NrXCIsXCJzdXJwcmlzZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyRFwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJmYWNlX3dpdGhfb3Blbl9leWVzX2FuZF9oYW5kX292ZXJfbW91dGhcIjp7XCJpZFwiOlwiZmFjZV93aXRoX29wZW5fZXllc19hbmRfaGFuZF9vdmVyX21vdXRoXCIsXCJuYW1lXCI6XCJGYWNlIHdpdGggT3BlbiBFeWVzIGFuZCBIYW5kIG92ZXIgTW91dGhcIixcImtleXdvcmRzXCI6W1wic2lsZW5jZVwiLFwic2VjcmV0XCIsXCJzaG9ja1wiLFwic3VycHJpc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFlMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRTJcIn1dLFwidmVyc2lvblwiOjE0fSxcImZhY2Vfd2l0aF9wZWVraW5nX2V5ZVwiOntcImlkXCI6XCJmYWNlX3dpdGhfcGVla2luZ19leWVcIixcIm5hbWVcIjpcIkZhY2Ugd2l0aCBQZWVraW5nIEV5ZVwiLFwia2V5d29yZHNcIjpbXCJzY2FyZWRcIixcImZyaWdodGVuaW5nXCIsXCJlbWJhcnJhc3NpbmdcIixcInNoeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWUzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVFM1wifV0sXCJ2ZXJzaW9uXCI6MTR9LFwic2h1c2hpbmdfZmFjZVwiOntcImlkXCI6XCJzaHVzaGluZ19mYWNlXCIsXCJuYW1lXCI6XCJTaHVzaGluZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcIndpdGhcIixcImZpbmdlclwiLFwiY292ZXJpbmdcIixcImNsb3NlZFwiLFwibGlwc1wiLFwicXVpZXRcIixcInNoaGhcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkyYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMkJcIn1dLFwidmVyc2lvblwiOjV9LFwidGhpbmtpbmdfZmFjZVwiOntcImlkXCI6XCJ0aGlua2luZ19mYWNlXCIsXCJuYW1lXCI6XCJUaGlua2luZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcImhtbW1cIixcInRoaW5rXCIsXCJjb25zaWRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTE0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxNFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzYWx1dGluZ19mYWNlXCI6e1wiaWRcIjpcInNhbHV0aW5nX2ZhY2VcIixcIm5hbWVcIjpcIlNhbHV0aW5nIEZhY2VcIixcImtleXdvcmRzXCI6W1wicmVzcGVjdFwiLFwic2FsdXRlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZTFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUUxXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJ6aXBwZXJfbW91dGhfZmFjZVwiOntcImlkXCI6XCJ6aXBwZXJfbW91dGhfZmFjZVwiLFwibmFtZVwiOlwiWmlwcGVyLU1vdXRoIEZhY2VcIixcImtleXdvcmRzXCI6W1wiemlwcGVyXCIsXCJtb3V0aFwiLFwic2VhbGVkXCIsXCJzZWNyZXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkxMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMTBcIn1dLFwidmVyc2lvblwiOjF9LFwiZmFjZV93aXRoX3JhaXNlZF9leWVicm93XCI6e1wiaWRcIjpcImZhY2Vfd2l0aF9yYWlzZWRfZXllYnJvd1wiLFwibmFtZVwiOlwiRmFjZSB3aXRoIFJhaXNlZCBFeWVicm93XCIsXCJrZXl3b3Jkc1wiOltcIm9uZVwiLFwiZGlzdHJ1c3RcIixcInNjZXB0aWNpc21cIixcImRpc2FwcHJvdmFsXCIsXCJkaXNiZWxpZWZcIixcInN1cnByaXNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MjhcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDI4XCJ9XSxcInZlcnNpb25cIjo1fSxcIm5ldXRyYWxfZmFjZVwiOntcImlkXCI6XCJuZXV0cmFsX2ZhY2VcIixcIm5hbWVcIjpcIk5ldXRyYWwgRmFjZVwiLFwiZW1vdGljb25zXCI6W1wiOnxcIixcIjotfFwiXSxcImtleXdvcmRzXCI6W1wiaW5kaWZmZXJlbmNlXCIsXCJtZWhcIixcIjpcIixcIlwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjEwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUxMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJleHByZXNzaW9ubGVzc1wiOntcImlkXCI6XCJleHByZXNzaW9ubGVzc1wiLFwibmFtZVwiOlwiRXhwcmVzc2lvbmxlc3MgRmFjZVwiLFwiZW1vdGljb25zXCI6W1wiLV8tXCJdLFwia2V5d29yZHNcIjpbXCJpbmRpZmZlcmVudFwiLFwiLVwiLFwiXCIsXCJtZWhcIixcImRlYWRwYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYxMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMTFcIn1dLFwidmVyc2lvblwiOjF9LFwibm9fbW91dGhcIjp7XCJpZFwiOlwibm9fbW91dGhcIixcIm5hbWVcIjpcIkZhY2UgV2l0aG91dCBNb3V0aFwiLFwia2V5d29yZHNcIjpbXCJub1wiLFwiaGVsbG9raXR0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjM2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkb3R0ZWRfbGluZV9mYWNlXCI6e1wiaWRcIjpcImRvdHRlZF9saW5lX2ZhY2VcIixcIm5hbWVcIjpcIkRvdHRlZCBMaW5lIEZhY2VcIixcImtleXdvcmRzXCI6W1wiaW52aXNpYmxlXCIsXCJsb25lbHlcIixcImlzb2xhdGlvblwiLFwiZGVwcmVzc2lvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWU1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVFNVwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwiZmFjZV9pbl9jbG91ZHNcIjp7XCJpZFwiOlwiZmFjZV9pbl9jbG91ZHNcIixcIm5hbWVcIjpcIkZhY2UgaW4gQ2xvdWRzXCIsXCJrZXl3b3Jkc1wiOltcInNob3dlclwiLFwic3RlYW1cIixcImRyZWFtXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MzYtMjAwZC0xZjMyYi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzNlx1MjAwRFx1RDgzQ1x1REYyQlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MTMuMX0sXCJzbWlya1wiOntcImlkXCI6XCJzbWlya1wiLFwibmFtZVwiOlwiU21pcmtpbmcgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJzbWlya1wiLFwic21pbGVcIixcIm1lYW5cIixcInByYW5rXCIsXCJzbXVnXCIsXCJzYXJjYXNtXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInVuYW11c2VkXCI6e1wiaWRcIjpcInVuYW11c2VkXCIsXCJuYW1lXCI6XCJVbmFtdXNlZCBGYWNlXCIsXCJlbW90aWNvbnNcIjpbXCI6KFwiXSxcImtleXdvcmRzXCI6W1wiaW5kaWZmZXJlbmNlXCIsXCJib3JlZFwiLFwic3RyYWlnaHRcIixcInNlcmlvdXNcIixcInNhcmNhc21cIixcInVuaW1wcmVzc2VkXCIsXCJza2VwdGljYWxcIixcImR1YmlvdXNcIixcInNpZGVcIixcImV5ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjEyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUxMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmYWNlX3dpdGhfcm9sbGluZ19leWVzXCI6e1wiaWRcIjpcImZhY2Vfd2l0aF9yb2xsaW5nX2V5ZXNcIixcIm5hbWVcIjpcIkZhY2Ugd2l0aCBSb2xsaW5nIEV5ZXNcIixcImtleXdvcmRzXCI6W1wiZXllcm9sbFwiLFwiZnJ1c3RyYXRlZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0NFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJncmltYWNpbmdcIjp7XCJpZFwiOlwiZ3JpbWFjaW5nXCIsXCJuYW1lXCI6XCJHcmltYWNpbmcgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJncmltYWNlXCIsXCJ0ZWV0aFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUyQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmYWNlX2V4aGFsaW5nXCI6e1wiaWRcIjpcImZhY2VfZXhoYWxpbmdcIixcIm5hbWVcIjpcIkZhY2UgRXhoYWxpbmdcIixcImtleXdvcmRzXCI6W1wicmVsaWV2ZVwiLFwicmVsaWVmXCIsXCJ0aXJlZFwiLFwic2lnaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjJlLTIwMGQtMWY0YThcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTJFXHUyMDBEXHVEODNEXHVEQ0E4XCJ9XSxcInZlcnNpb25cIjoxMy4xfSxcImx5aW5nX2ZhY2VcIjp7XCJpZFwiOlwibHlpbmdfZmFjZVwiLFwibmFtZVwiOlwiTHlpbmcgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJsaWVcIixcInBpbm9jY2hpb1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTI1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyNVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJzaGFraW5nX2ZhY2VcIjp7XCJpZFwiOlwic2hha2luZ19mYWNlXCIsXCJuYW1lXCI6XCJTaGFraW5nIEZhY2VcIixcImtleXdvcmRzXCI6W1wiZGl6enlcIixcInNob2NrXCIsXCJibHVycnlcIixcImVhcnRocXVha2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFlOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRThcIn1dLFwidmVyc2lvblwiOjE1fSxcInJlbGlldmVkXCI6e1wiaWRcIjpcInJlbGlldmVkXCIsXCJuYW1lXCI6XCJSZWxpZXZlZCBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcInJlbGF4ZWRcIixcInBoZXdcIixcIm1hc3NhZ2VcIixcImhhcHBpbmVzc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjBjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUwQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwZW5zaXZlXCI6e1wiaWRcIjpcInBlbnNpdmVcIixcIm5hbWVcIjpcIlBlbnNpdmUgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJzYWRcIixcImRlcHJlc3NlZFwiLFwidXBzZXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYxNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMTRcIn1dLFwidmVyc2lvblwiOjF9LFwic2xlZXB5XCI6e1wiaWRcIjpcInNsZWVweVwiLFwibmFtZVwiOlwiU2xlZXB5IEZhY2VcIixcImtleXdvcmRzXCI6W1widGlyZWRcIixcInJlc3RcIixcIm5hcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjJhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUyQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkcm9vbGluZ19mYWNlXCI6e1wiaWRcIjpcImRyb29saW5nX2ZhY2VcIixcIm5hbWVcIjpcIkRyb29saW5nIEZhY2VcIixcImtleXdvcmRzXCI6W10sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkyNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMjRcIn1dLFwidmVyc2lvblwiOjN9LFwic2xlZXBpbmdcIjp7XCJpZFwiOlwic2xlZXBpbmdcIixcIm5hbWVcIjpcIlNsZWVwaW5nIEZhY2VcIixcImtleXdvcmRzXCI6W1widGlyZWRcIixcInNsZWVweVwiLFwibmlnaHRcIixcInp6elwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjM0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzNFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtYXNrXCI6e1wiaWRcIjpcIm1hc2tcIixcIm5hbWVcIjpcIkZhY2Ugd2l0aCBNZWRpY2FsIE1hc2tcIixcImtleXdvcmRzXCI6W1wic2lja1wiLFwiaWxsXCIsXCJkaXNlYXNlXCIsXCJjb3ZpZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjM3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmYWNlX3dpdGhfdGhlcm1vbWV0ZXJcIjp7XCJpZFwiOlwiZmFjZV93aXRoX3RoZXJtb21ldGVyXCIsXCJuYW1lXCI6XCJGYWNlIHdpdGggVGhlcm1vbWV0ZXJcIixcImtleXdvcmRzXCI6W1wic2lja1wiLFwidGVtcGVyYXR1cmVcIixcImNvbGRcIixcImZldmVyXCIsXCJjb3ZpZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTEyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmYWNlX3dpdGhfaGVhZF9iYW5kYWdlXCI6e1wiaWRcIjpcImZhY2Vfd2l0aF9oZWFkX2JhbmRhZ2VcIixcIm5hbWVcIjpcIkZhY2Ugd2l0aCBIZWFkLUJhbmRhZ2VcIixcImtleXdvcmRzXCI6W1wiaGVhZFwiLFwiYmFuZGFnZVwiLFwiaW5qdXJlZFwiLFwiY2x1bXN5XCIsXCJodXJ0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MTVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDE1XCJ9XSxcInZlcnNpb25cIjoxfSxcIm5hdXNlYXRlZF9mYWNlXCI6e1wiaWRcIjpcIm5hdXNlYXRlZF9mYWNlXCIsXCJuYW1lXCI6XCJOYXVzZWF0ZWQgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJ2b21pdFwiLFwiZ3Jvc3NcIixcImdyZWVuXCIsXCJzaWNrXCIsXCJ0aHJvd1wiLFwidXBcIixcImlsbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyMlwifV0sXCJ2ZXJzaW9uXCI6M30sXCJmYWNlX3ZvbWl0aW5nXCI6e1wiaWRcIjpcImZhY2Vfdm9taXRpbmdcIixcIm5hbWVcIjpcIkZhY2UgVm9taXRpbmdcIixcImtleXdvcmRzXCI6W1wid2l0aFwiLFwib3BlblwiLFwibW91dGhcIixcInNpY2tcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkyZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMkVcIn1dLFwidmVyc2lvblwiOjV9LFwic25lZXppbmdfZmFjZVwiOntcImlkXCI6XCJzbmVlemluZ19mYWNlXCIsXCJuYW1lXCI6XCJTbmVlemluZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcImdlc3VuZGhlaXRcIixcInNuZWV6ZVwiLFwic2lja1wiLFwiYWxsZXJneVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyN1wifV0sXCJ2ZXJzaW9uXCI6M30sXCJob3RfZmFjZVwiOntcImlkXCI6XCJob3RfZmFjZVwiLFwibmFtZVwiOlwiSG90IEZhY2VcIixcImtleXdvcmRzXCI6W1wiZmV2ZXJpc2hcIixcImhlYXRcIixcInJlZFwiLFwic3dlYXRpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk3NVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENzVcIn1dLFwidmVyc2lvblwiOjExfSxcImNvbGRfZmFjZVwiOntcImlkXCI6XCJjb2xkX2ZhY2VcIixcIm5hbWVcIjpcIkNvbGQgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJibHVlXCIsXCJmcmVlemluZ1wiLFwiZnJvemVuXCIsXCJmcm9zdGJpdGVcIixcImljaWNsZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk3NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENzZcIn1dLFwidmVyc2lvblwiOjExfSxcIndvb3p5X2ZhY2VcIjp7XCJpZFwiOlwid29venlfZmFjZVwiLFwibmFtZVwiOlwiV29venkgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJkaXp6eVwiLFwiaW50b3hpY2F0ZWRcIixcInRpcHN5XCIsXCJ3YXZ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NzRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDc0XCJ9XSxcInZlcnNpb25cIjoxMX0sXCJkaXp6eV9mYWNlXCI6e1wiaWRcIjpcImRpenp5X2ZhY2VcIixcIm5hbWVcIjpcIkRpenp5IEZhY2VcIixcImtleXdvcmRzXCI6W1wic3BlbnRcIixcInVuY29uc2Npb3VzXCIsXCJ4b3hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYzNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMzVcIn1dLFwidmVyc2lvblwiOjF9LFwiZmFjZV93aXRoX3NwaXJhbF9leWVzXCI6e1wiaWRcIjpcImZhY2Vfd2l0aF9zcGlyYWxfZXllc1wiLFwibmFtZVwiOlwiRmFjZSB3aXRoIFNwaXJhbCBFeWVzXCIsXCJrZXl3b3Jkc1wiOltcInNpY2tcIixcImlsbFwiLFwiY29uZnVzZWRcIixcIm5hdXNlb3VzXCIsXCJuYXVzZWFcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYzNS0yMDBkLTFmNGFiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzNVx1MjAwRFx1RDgzRFx1RENBQlwifV0sXCJ2ZXJzaW9uXCI6MTMuMX0sXCJleHBsb2RpbmdfaGVhZFwiOntcImlkXCI6XCJleHBsb2RpbmdfaGVhZFwiLFwibmFtZVwiOlwiRXhwbG9kaW5nIEhlYWRcIixcImtleXdvcmRzXCI6W1wic2hvY2tlZFwiLFwiZmFjZVwiLFwid2l0aFwiLFwibWluZFwiLFwiYmxvd25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkyZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMkZcIn1dLFwidmVyc2lvblwiOjV9LFwiZmFjZV93aXRoX2Nvd2JveV9oYXRcIjp7XCJpZFwiOlwiZmFjZV93aXRoX2Nvd2JveV9oYXRcIixcIm5hbWVcIjpcIkNvd2JveSBIYXQgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJ3aXRoXCIsXCJjb3dnaXJsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDIwXCJ9XSxcInZlcnNpb25cIjozfSxcInBhcnR5aW5nX2ZhY2VcIjp7XCJpZFwiOlwicGFydHlpbmdfZmFjZVwiLFwibmFtZVwiOlwiUGFydHlpbmcgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJjZWxlYnJhdGlvblwiLFwid29vaG9vXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NzNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDczXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJkaXNndWlzZWRfZmFjZVwiOntcImlkXCI6XCJkaXNndWlzZWRfZmFjZVwiLFwibmFtZVwiOlwiRGlzZ3Vpc2VkIEZhY2VcIixcImtleXdvcmRzXCI6W1wicHJldGVudFwiLFwiYnJvd3NcIixcImdsYXNzZXNcIixcIm1vdXN0YWNoZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTc4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ3OFwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwic3VuZ2xhc3Nlc1wiOntcImlkXCI6XCJzdW5nbGFzc2VzXCIsXCJuYW1lXCI6XCJTbWlsaW5nIEZhY2Ugd2l0aCBTdW5nbGFzc2VzXCIsXCJlbW90aWNvbnNcIjpbXCI4KVwiXSxcImtleXdvcmRzXCI6W1wiY29vbFwiLFwic21pbGVcIixcInN1bW1lclwiLFwiYmVhY2hcIixcInN1bmdsYXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MGVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTBFXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5lcmRfZmFjZVwiOntcImlkXCI6XCJuZXJkX2ZhY2VcIixcIm5hbWVcIjpcIk5lcmQgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJuZXJkeVwiLFwiZ2Vla1wiLFwiZG9ya1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTEzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmYWNlX3dpdGhfbW9ub2NsZVwiOntcImlkXCI6XCJmYWNlX3dpdGhfbW9ub2NsZVwiLFwibmFtZVwiOlwiRmFjZSB3aXRoIE1vbm9jbGVcIixcImtleXdvcmRzXCI6W1wic3R1ZmZ5XCIsXCJ3ZWFsdGh5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQwXCJ9XSxcInZlcnNpb25cIjo1fSxcImNvbmZ1c2VkXCI6e1wiaWRcIjpcImNvbmZ1c2VkXCIsXCJuYW1lXCI6XCJDb25mdXNlZCBGYWNlXCIsXCJlbW90aWNvbnNcIjpbXCI6XFxcXFwiLFwiOi1cXFxcXCIsXCI6L1wiLFwiOi0vXCJdLFwia2V5d29yZHNcIjpbXCJpbmRpZmZlcmVuY2VcIixcImh1aFwiLFwid2VpcmRcIixcImhtbW1cIixcIjovXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MTVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTE1XCJ9XSxcInZlcnNpb25cIjoxfSxcImZhY2Vfd2l0aF9kaWFnb25hbF9tb3V0aFwiOntcImlkXCI6XCJmYWNlX3dpdGhfZGlhZ29uYWxfbW91dGhcIixcIm5hbWVcIjpcIkZhY2Ugd2l0aCBEaWFnb25hbCBNb3V0aFwiLFwia2V5d29yZHNcIjpbXCJza2VwdGljXCIsXCJjb25mdXNlXCIsXCJmcnVzdHJhdGVkXCIsXCJpbmRpZmZlcmVudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWU0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVFNFwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwid29ycmllZFwiOntcImlkXCI6XCJ3b3JyaWVkXCIsXCJuYW1lXCI6XCJXb3JyaWVkIEZhY2VcIixcImtleXdvcmRzXCI6W1wiY29uY2VyblwiLFwibmVydm91c1wiLFwiOihcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYxZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMUZcIn1dLFwidmVyc2lvblwiOjF9LFwic2xpZ2h0bHlfZnJvd25pbmdfZmFjZVwiOntcImlkXCI6XCJzbGlnaHRseV9mcm93bmluZ19mYWNlXCIsXCJuYW1lXCI6XCJTbGlnaHRseSBGcm93bmluZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcImRpc2FwcG9pbnRlZFwiLFwic2FkXCIsXCJ1cHNldFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3aGl0ZV9mcm93bmluZ19mYWNlXCI6e1wiaWRcIjpcIndoaXRlX2Zyb3duaW5nX2ZhY2VcIixcIm5hbWVcIjpcIkZyb3duaW5nIEZhY2VcIixcImtleXdvcmRzXCI6W1wid2hpdGVcIixcInNhZFwiLFwidXBzZXRcIixcImZyb3duXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjYzOS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjYzOVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvcGVuX21vdXRoXCI6e1wiaWRcIjpcIm9wZW5fbW91dGhcIixcIm5hbWVcIjpcIkZhY2Ugd2l0aCBPcGVuIE1vdXRoXCIsXCJlbW90aWNvbnNcIjpbXCI6b1wiLFwiOi1vXCIsXCI6T1wiLFwiOi1PXCJdLFwia2V5d29yZHNcIjpbXCJzdXJwcmlzZVwiLFwiaW1wcmVzc2VkXCIsXCJ3b3dcIixcIndob2FcIixcIjpPXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTJFXCJ9XSxcInZlcnNpb25cIjoxfSxcImh1c2hlZFwiOntcImlkXCI6XCJodXNoZWRcIixcIm5hbWVcIjpcIkh1c2hlZCBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcIndvb1wiLFwic2hoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTJGXCJ9XSxcInZlcnNpb25cIjoxfSxcImFzdG9uaXNoZWRcIjp7XCJpZFwiOlwiYXN0b25pc2hlZFwiLFwibmFtZVwiOlwiQXN0b25pc2hlZCBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcInhveFwiLFwic3VycHJpc2VkXCIsXCJwb2lzb25lZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjMyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmbHVzaGVkXCI6e1wiaWRcIjpcImZsdXNoZWRcIixcIm5hbWVcIjpcIkZsdXNoZWQgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJibHVzaFwiLFwic2h5XCIsXCJmbGF0dGVyZWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYzM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMzNcIn1dLFwidmVyc2lvblwiOjF9LFwicGxlYWRpbmdfZmFjZVwiOntcImlkXCI6XCJwbGVhZGluZ19mYWNlXCIsXCJuYW1lXCI6XCJQbGVhZGluZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcImJlZ2dpbmdcIixcIm1lcmN5XCIsXCJjcnlcIixcInRlYXJzXCIsXCJzYWRcIixcImdyaWV2YW5jZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTdhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ3QVwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiZmFjZV9ob2xkaW5nX2JhY2tfdGVhcnNcIjp7XCJpZFwiOlwiZmFjZV9ob2xkaW5nX2JhY2tfdGVhcnNcIixcIm5hbWVcIjpcIkZhY2UgSG9sZGluZyBCYWNrIFRlYXJzXCIsXCJrZXl3b3Jkc1wiOltcInRvdWNoZWRcIixcImdyYXRpdHVkZVwiLFwiY3J5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NzlcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDc5XCJ9XSxcInZlcnNpb25cIjoxNH0sXCJmcm93bmluZ1wiOntcImlkXCI6XCJmcm93bmluZ1wiLFwibmFtZVwiOlwiRnJvd25pbmcgRmFjZSB3aXRoIE9wZW4gTW91dGhcIixcImtleXdvcmRzXCI6W1wiYXdcIixcIndoYXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYyNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMjZcIn1dLFwidmVyc2lvblwiOjF9LFwiYW5ndWlzaGVkXCI6e1wiaWRcIjpcImFuZ3Vpc2hlZFwiLFwibmFtZVwiOlwiQW5ndWlzaGVkIEZhY2VcIixcImVtb3RpY29uc1wiOltcIkQ6XCJdLFwia2V5d29yZHNcIjpbXCJzdHVubmVkXCIsXCJuZXJ2b3VzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTI3XCJ9XSxcInZlcnNpb25cIjoxfSxcImZlYXJmdWxcIjp7XCJpZFwiOlwiZmVhcmZ1bFwiLFwibmFtZVwiOlwiRmVhcmZ1bCBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcInNjYXJlZFwiLFwidGVycmlmaWVkXCIsXCJuZXJ2b3VzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MjhcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTI4XCJ9XSxcInZlcnNpb25cIjoxfSxcImNvbGRfc3dlYXRcIjp7XCJpZFwiOlwiY29sZF9zd2VhdFwiLFwibmFtZVwiOlwiQW54aW91cyBGYWNlIHdpdGggU3dlYXRcIixcImtleXdvcmRzXCI6W1wiY29sZFwiLFwibmVydm91c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjMwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkaXNhcHBvaW50ZWRfcmVsaWV2ZWRcIjp7XCJpZFwiOlwiZGlzYXBwb2ludGVkX3JlbGlldmVkXCIsXCJuYW1lXCI6XCJTYWQgYnV0IFJlbGlldmVkIEZhY2VcIixcImtleXdvcmRzXCI6W1wiZGlzYXBwb2ludGVkXCIsXCJwaGV3XCIsXCJzd2VhdFwiLFwibmVydm91c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjI1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUyNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjcnlcIjp7XCJpZFwiOlwiY3J5XCIsXCJuYW1lXCI6XCJDcnlpbmcgRmFjZVwiLFwiZW1vdGljb25zXCI6W1wiOicoXCJdLFwia2V5d29yZHNcIjpbXCJjcnlcIixcInRlYXJzXCIsXCJzYWRcIixcImRlcHJlc3NlZFwiLFwidXBzZXRcIixcIjonKFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUyMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzb2JcIjp7XCJpZFwiOlwic29iXCIsXCJuYW1lXCI6XCJMb3VkbHkgQ3J5aW5nIEZhY2VcIixcImVtb3RpY29uc1wiOltcIjonKFwiXSxcImtleXdvcmRzXCI6W1wic29iXCIsXCJjcnlcIixcInRlYXJzXCIsXCJzYWRcIixcInVwc2V0XCIsXCJkZXByZXNzZWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYyZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMkRcIn1dLFwidmVyc2lvblwiOjF9LFwic2NyZWFtXCI6e1wiaWRcIjpcInNjcmVhbVwiLFwibmFtZVwiOlwiRmFjZSBTY3JlYW1pbmcgaW4gRmVhclwiLFwia2V5d29yZHNcIjpbXCJzY3JlYW1cIixcIm11bmNoXCIsXCJzY2FyZWRcIixcIm9tZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjMxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzMVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjb25mb3VuZGVkXCI6e1wiaWRcIjpcImNvbmZvdW5kZWRcIixcIm5hbWVcIjpcIkNvbmZvdW5kZWQgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJjb25mdXNlZFwiLFwic2lja1wiLFwidW53ZWxsXCIsXCJvb3BzXCIsXCI6U1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjE2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUxNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwZXJzZXZlcmVcIjp7XCJpZFwiOlwicGVyc2V2ZXJlXCIsXCJuYW1lXCI6XCJQZXJzZXZlcmluZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcInBlcnNldmVyZVwiLFwic2lja1wiLFwibm9cIixcInVwc2V0XCIsXCJvb3BzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTIzXCJ9XSxcInZlcnNpb25cIjoxfSxcImRpc2FwcG9pbnRlZFwiOntcImlkXCI6XCJkaXNhcHBvaW50ZWRcIixcIm5hbWVcIjpcIkRpc2FwcG9pbnRlZCBGYWNlXCIsXCJlbW90aWNvbnNcIjpbXCIpOlwiLFwiOihcIixcIjotKFwiXSxcImtleXdvcmRzXCI6W1wic2FkXCIsXCJ1cHNldFwiLFwiZGVwcmVzc2VkXCIsXCI6KFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjFlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUxRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzd2VhdFwiOntcImlkXCI6XCJzd2VhdFwiLFwibmFtZVwiOlwiRmFjZSB3aXRoIENvbGQgU3dlYXRcIixcImtleXdvcmRzXCI6W1wiZG93bmNhc3RcIixcImhvdFwiLFwic2FkXCIsXCJ0aXJlZFwiLFwiZXhlcmNpc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYxM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMTNcIn1dLFwidmVyc2lvblwiOjF9LFwid2VhcnlcIjp7XCJpZFwiOlwid2VhcnlcIixcIm5hbWVcIjpcIldlYXJ5IEZhY2VcIixcImtleXdvcmRzXCI6W1widGlyZWRcIixcInNsZWVweVwiLFwic2FkXCIsXCJmcnVzdHJhdGVkXCIsXCJ1cHNldFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjI5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUyOVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0aXJlZF9mYWNlXCI6e1wiaWRcIjpcInRpcmVkX2ZhY2VcIixcIm5hbWVcIjpcIlRpcmVkIEZhY2VcIixcImtleXdvcmRzXCI6W1wic2lja1wiLFwid2hpbmVcIixcInVwc2V0XCIsXCJmcnVzdHJhdGVkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTJCXCJ9XSxcInZlcnNpb25cIjoxfSxcInlhd25pbmdfZmFjZVwiOntcImlkXCI6XCJ5YXduaW5nX2ZhY2VcIixcIm5hbWVcIjpcIllhd25pbmcgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJ0aXJlZFwiLFwic2xlZXB5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NzFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDcxXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJ0cml1bXBoXCI6e1wiaWRcIjpcInRyaXVtcGhcIixcIm5hbWVcIjpcIkZhY2Ugd2l0aCBMb29rIG9mIFRyaXVtcGhcIixcImtleXdvcmRzXCI6W1wic3RlYW1cIixcImZyb21cIixcIm5vc2VcIixcImdhc1wiLFwicGhld1wiLFwicHJvdWRcIixcInByaWRlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MjRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTI0XCJ9XSxcInZlcnNpb25cIjoxfSxcInJhZ2VcIjp7XCJpZFwiOlwicmFnZVwiLFwibmFtZVwiOlwiUG91dGluZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcInJhZ2VcIixcImFuZ3J5XCIsXCJtYWRcIixcImhhdGVcIixcImRlc3Bpc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYyMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMjFcIn1dLFwidmVyc2lvblwiOjF9LFwiYW5ncnlcIjp7XCJpZFwiOlwiYW5ncnlcIixcIm5hbWVcIjpcIkFuZ3J5IEZhY2VcIixcImVtb3RpY29uc1wiOltcIj46KFwiLFwiPjotKFwiXSxcImtleXdvcmRzXCI6W1wibWFkXCIsXCJhbm5veWVkXCIsXCJmcnVzdHJhdGVkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MjBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTIwXCJ9XSxcInZlcnNpb25cIjoxfSxcImZhY2Vfd2l0aF9zeW1ib2xzX29uX21vdXRoXCI6e1wiaWRcIjpcImZhY2Vfd2l0aF9zeW1ib2xzX29uX21vdXRoXCIsXCJuYW1lXCI6XCJGYWNlIHdpdGggU3ltYm9scyBvbiBNb3V0aFwiLFwia2V5d29yZHNcIjpbXCJzZXJpb3VzXCIsXCJjb3ZlcmluZ1wiLFwic3dlYXJpbmdcIixcImN1cnNpbmdcIixcImN1c3NpbmdcIixcInByb2Zhbml0eVwiLFwiZXhwbGV0aXZlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDJDXCJ9XSxcInZlcnNpb25cIjo1fSxcInNtaWxpbmdfaW1wXCI6e1wiaWRcIjpcInNtaWxpbmdfaW1wXCIsXCJuYW1lXCI6XCJTbWlsaW5nIEZhY2Ugd2l0aCBIb3Juc1wiLFwia2V5d29yZHNcIjpbXCJpbXBcIixcImRldmlsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2MDhcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTA4XCJ9XSxcInZlcnNpb25cIjoxfSxcImltcFwiOntcImlkXCI6XCJpbXBcIixcIm5hbWVcIjpcIkltcFwiLFwia2V5d29yZHNcIjpbXCJhbmdyeVwiLFwiZmFjZVwiLFwid2l0aFwiLFwiaG9ybnNcIixcImRldmlsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0N2ZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzdGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNrdWxsXCI6e1wiaWRcIjpcInNrdWxsXCIsXCJuYW1lXCI6XCJTa3VsbFwiLFwia2V5d29yZHNcIjpbXCJkZWFkXCIsXCJza2VsZXRvblwiLFwiY3JlZXB5XCIsXCJkZWF0aFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDgwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4MFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJza3VsbF9hbmRfY3Jvc3Nib25lc1wiOntcImlkXCI6XCJza3VsbF9hbmRfY3Jvc3Nib25lc1wiLFwibmFtZVwiOlwiU2t1bGwgYW5kIENyb3NzYm9uZXNcIixcImtleXdvcmRzXCI6W1wicG9pc29uXCIsXCJkYW5nZXJcIixcImRlYWRseVwiLFwic2NhcnlcIixcImRlYXRoXCIsXCJwaXJhdGVcIixcImV2aWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjIwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjIwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImhhbmtleVwiOntcImlkXCI6XCJoYW5rZXlcIixcIm5hbWVcIjpcIlBpbGUgb2YgUG9vXCIsXCJrZXl3b3Jkc1wiOltcImhhbmtleVwiLFwicG9vcFwiLFwic2hpdFwiLFwic2hpdGZhY2VcIixcImZhaWxcIixcInR1cmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRhOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQTlcIn1dLFwidmVyc2lvblwiOjF9LFwiY2xvd25fZmFjZVwiOntcImlkXCI6XCJjbG93bl9mYWNlXCIsXCJuYW1lXCI6XCJDbG93biBGYWNlXCIsXCJrZXl3b3Jkc1wiOltdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MjFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDIxXCJ9XSxcInZlcnNpb25cIjozfSxcImphcGFuZXNlX29ncmVcIjp7XCJpZFwiOlwiamFwYW5lc2Vfb2dyZVwiLFwibmFtZVwiOlwiT2dyZVwiLFwia2V5d29yZHNcIjpbXCJqYXBhbmVzZVwiLFwibW9uc3RlclwiLFwicmVkXCIsXCJtYXNrXCIsXCJoYWxsb3dlZW5cIixcInNjYXJ5XCIsXCJjcmVlcHlcIixcImRldmlsXCIsXCJkZW1vblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDc5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3OVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJqYXBhbmVzZV9nb2JsaW5cIjp7XCJpZFwiOlwiamFwYW5lc2VfZ29ibGluXCIsXCJuYW1lXCI6XCJHb2JsaW5cIixcImtleXdvcmRzXCI6W1wiamFwYW5lc2VcIixcInJlZFwiLFwiZXZpbFwiLFwibWFza1wiLFwibW9uc3RlclwiLFwic2NhcnlcIixcImNyZWVweVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDdhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3QVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJnaG9zdFwiOntcImlkXCI6XCJnaG9zdFwiLFwibmFtZVwiOlwiR2hvc3RcIixcImtleXdvcmRzXCI6W1wiaGFsbG93ZWVuXCIsXCJzcG9va3lcIixcInNjYXJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0N2JcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzdCXCJ9XSxcInZlcnNpb25cIjoxfSxcImFsaWVuXCI6e1wiaWRcIjpcImFsaWVuXCIsXCJuYW1lXCI6XCJBbGllblwiLFwia2V5d29yZHNcIjpbXCJVRk9cIixcInBhdWxcIixcIndlaXJkXCIsXCJvdXRlclwiLFwic3BhY2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDN0RcIn1dLFwidmVyc2lvblwiOjF9LFwic3BhY2VfaW52YWRlclwiOntcImlkXCI6XCJzcGFjZV9pbnZhZGVyXCIsXCJuYW1lXCI6XCJBbGllbiBNb25zdGVyXCIsXCJrZXl3b3Jkc1wiOltcInNwYWNlXCIsXCJpbnZhZGVyXCIsXCJnYW1lXCIsXCJhcmNhZGVcIixcInBsYXlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3ZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDN0VcIn1dLFwidmVyc2lvblwiOjF9LFwicm9ib3RfZmFjZVwiOntcImlkXCI6XCJyb2JvdF9mYWNlXCIsXCJuYW1lXCI6XCJSb2JvdFwiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJjb21wdXRlclwiLFwibWFjaGluZVwiLFwiYm90XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MTZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDE2XCJ9XSxcInZlcnNpb25cIjoxfSxcInNtaWxleV9jYXRcIjp7XCJpZFwiOlwic21pbGV5X2NhdFwiLFwibmFtZVwiOlwiR3Jpbm5pbmcgQ2F0XCIsXCJrZXl3b3Jkc1wiOltcInNtaWxleVwiLFwiYW5pbWFsXCIsXCJjYXRzXCIsXCJoYXBweVwiLFwic21pbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYzYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFM0FcIn1dLFwidmVyc2lvblwiOjF9LFwic21pbGVfY2F0XCI6e1wiaWRcIjpcInNtaWxlX2NhdFwiLFwibmFtZVwiOlwiR3Jpbm5pbmcgQ2F0IHdpdGggU21pbGluZyBFeWVzXCIsXCJrZXl3b3Jkc1wiOltcInNtaWxlXCIsXCJhbmltYWxcIixcImNhdHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYzOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFMzhcIn1dLFwidmVyc2lvblwiOjF9LFwiam95X2NhdFwiOntcImlkXCI6XCJqb3lfY2F0XCIsXCJuYW1lXCI6XCJDYXQgd2l0aCBUZWFycyBvZiBKb3lcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJjYXRzXCIsXCJoYWhhXCIsXCJoYXBweVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjM5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzOVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoZWFydF9leWVzX2NhdFwiOntcImlkXCI6XCJoZWFydF9leWVzX2NhdFwiLFwibmFtZVwiOlwiU21pbGluZyBDYXQgd2l0aCBIZWFydC1FeWVzXCIsXCJrZXl3b3Jkc1wiOltcImhlYXJ0XCIsXCJleWVzXCIsXCJhbmltYWxcIixcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwiY2F0c1wiLFwidmFsZW50aW5lc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjNiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzbWlya19jYXRcIjp7XCJpZFwiOlwic21pcmtfY2F0XCIsXCJuYW1lXCI6XCJDYXQgd2l0aCBXcnkgU21pbGVcIixcImtleXdvcmRzXCI6W1wic21pcmtcIixcImFuaW1hbFwiLFwiY2F0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjNjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REUzQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJraXNzaW5nX2NhdFwiOntcImlkXCI6XCJraXNzaW5nX2NhdFwiLFwibmFtZVwiOlwiS2lzc2luZyBDYXRcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJjYXRzXCIsXCJraXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2M2RcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTNEXCJ9XSxcInZlcnNpb25cIjoxfSxcInNjcmVhbV9jYXRcIjp7XCJpZFwiOlwic2NyZWFtX2NhdFwiLFwibmFtZVwiOlwiV2VhcnkgQ2F0XCIsXCJrZXl3b3Jkc1wiOltcInNjcmVhbVwiLFwiYW5pbWFsXCIsXCJjYXRzXCIsXCJtdW5jaFwiLFwic2NhcmVkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2NDBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQwXCJ9XSxcInZlcnNpb25cIjoxfSxcImNyeWluZ19jYXRfZmFjZVwiOntcImlkXCI6XCJjcnlpbmdfY2F0X2ZhY2VcIixcIm5hbWVcIjpcIkNyeWluZyBDYXRcIixcImtleXdvcmRzXCI6W1wiZmFjZVwiLFwiYW5pbWFsXCIsXCJ0ZWFyc1wiLFwid2VlcFwiLFwic2FkXCIsXCJjYXRzXCIsXCJ1cHNldFwiLFwiY3J5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2M2ZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTNGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBvdXRpbmdfY2F0XCI6e1wiaWRcIjpcInBvdXRpbmdfY2F0XCIsXCJuYW1lXCI6XCJQb3V0aW5nIENhdFwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImNhdHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjYzZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFM0VcIn1dLFwidmVyc2lvblwiOjF9LFwic2VlX25vX2V2aWxcIjp7XCJpZFwiOlwic2VlX25vX2V2aWxcIixcIm5hbWVcIjpcIlNlZS1Oby1FdmlsIE1vbmtleVwiLFwia2V5d29yZHNcIjpbXCJzZWVcIixcIm5vXCIsXCJldmlsXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiaGFoYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0OFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoZWFyX25vX2V2aWxcIjp7XCJpZFwiOlwiaGVhcl9ub19ldmlsXCIsXCJuYW1lXCI6XCJIZWFyLU5vLUV2aWwgTW9ua2V5XCIsXCJrZXl3b3Jkc1wiOltcImhlYXJcIixcIm5vXCIsXCJldmlsXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0OVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzcGVha19ub19ldmlsXCI6e1wiaWRcIjpcInNwZWFrX25vX2V2aWxcIixcIm5hbWVcIjpcIlNwZWFrLU5vLUV2aWwgTW9ua2V5XCIsXCJrZXl3b3Jkc1wiOltcInNwZWFrXCIsXCJub1wiLFwiZXZpbFwiLFwiYW5pbWFsXCIsXCJuYXR1cmVcIixcIm9tZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0QVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsb3ZlX2xldHRlclwiOntcImlkXCI6XCJsb3ZlX2xldHRlclwiLFwibmFtZVwiOlwiTG92ZSBMZXR0ZXJcIixcImtleXdvcmRzXCI6W1wiZW1haWxcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwiZW52ZWxvcGVcIixcInZhbGVudGluZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ4Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOENcIn1dLFwidmVyc2lvblwiOjF9LFwiY3VwaWRcIjp7XCJpZFwiOlwiY3VwaWRcIixcIm5hbWVcIjpcIkhlYXJ0IHdpdGggQXJyb3dcIixcImtleXdvcmRzXCI6W1wiY3VwaWRcIixcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwidmFsZW50aW5lc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDk4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5OFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJnaWZ0X2hlYXJ0XCI6e1wiaWRcIjpcImdpZnRfaGVhcnRcIixcIm5hbWVcIjpcIkhlYXJ0IHdpdGggUmliYm9uXCIsXCJrZXl3b3Jkc1wiOltcImdpZnRcIixcImxvdmVcIixcInZhbGVudGluZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ5ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOURcIn1dLFwidmVyc2lvblwiOjF9LFwic3BhcmtsaW5nX2hlYXJ0XCI6e1wiaWRcIjpcInNwYXJrbGluZ19oZWFydFwiLFwibmFtZVwiOlwiU3BhcmtsaW5nIEhlYXJ0XCIsXCJrZXl3b3Jkc1wiOltcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwidmFsZW50aW5lc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDk2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5NlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoZWFydHB1bHNlXCI6e1wiaWRcIjpcImhlYXJ0cHVsc2VcIixcIm5hbWVcIjpcIkdyb3dpbmcgSGVhcnRcIixcImtleXdvcmRzXCI6W1wiaGVhcnRwdWxzZVwiLFwibGlrZVwiLFwibG92ZVwiLFwiYWZmZWN0aW9uXCIsXCJ2YWxlbnRpbmVzXCIsXCJwaW5rXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0OTdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzk3XCJ9XSxcInZlcnNpb25cIjoxfSxcImhlYXJ0YmVhdFwiOntcImlkXCI6XCJoZWFydGJlYXRcIixcIm5hbWVcIjpcIkJlYXRpbmcgSGVhcnRcIixcImtleXdvcmRzXCI6W1wiaGVhcnRiZWF0XCIsXCJsb3ZlXCIsXCJsaWtlXCIsXCJhZmZlY3Rpb25cIixcInZhbGVudGluZXNcIixcInBpbmtcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOTNcIn1dLFwidmVyc2lvblwiOjF9LFwicmV2b2x2aW5nX2hlYXJ0c1wiOntcImlkXCI6XCJyZXZvbHZpbmdfaGVhcnRzXCIsXCJuYW1lXCI6XCJSZXZvbHZpbmcgSGVhcnRzXCIsXCJrZXl3b3Jkc1wiOltcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwidmFsZW50aW5lc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDllXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5RVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0d29faGVhcnRzXCI6e1wiaWRcIjpcInR3b19oZWFydHNcIixcIm5hbWVcIjpcIlR3byBIZWFydHNcIixcImtleXdvcmRzXCI6W1wibG92ZVwiLFwibGlrZVwiLFwiYWZmZWN0aW9uXCIsXCJ2YWxlbnRpbmVzXCIsXCJoZWFydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDk1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoZWFydF9kZWNvcmF0aW9uXCI6e1wiaWRcIjpcImhlYXJ0X2RlY29yYXRpb25cIixcIm5hbWVcIjpcIkhlYXJ0IERlY29yYXRpb25cIixcImtleXdvcmRzXCI6W1wicHVycGxlXCIsXCJzcXVhcmVcIixcImxvdmVcIixcImxpa2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ5ZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOUZcIn1dLFwidmVyc2lvblwiOjF9LFwiaGVhdnlfaGVhcnRfZXhjbGFtYXRpb25fbWFya19vcm5hbWVudFwiOntcImlkXCI6XCJoZWF2eV9oZWFydF9leGNsYW1hdGlvbl9tYXJrX29ybmFtZW50XCIsXCJuYW1lXCI6XCJIZWFydCBFeGNsYW1hdGlvblwiLFwia2V5d29yZHNcIjpbXCJoZWF2eVwiLFwibWFya1wiLFwib3JuYW1lbnRcIixcImRlY29yYXRpb25cIixcImxvdmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzYzLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNzYzXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJyb2tlbl9oZWFydFwiOntcImlkXCI6XCJicm9rZW5faGVhcnRcIixcIm5hbWVcIjpcIkJyb2tlbiBIZWFydFwiLFwiZW1vdGljb25zXCI6W1wiPC8zXCJdLFwia2V5d29yZHNcIjpbXCJzYWRcIixcInNvcnJ5XCIsXCJicmVha1wiLFwiaGVhcnRicmVha1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDk0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5NFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoZWFydF9vbl9maXJlXCI6e1wiaWRcIjpcImhlYXJ0X29uX2ZpcmVcIixcIm5hbWVcIjpcIkhlYXJ0IG9uIEZpcmVcIixcImtleXdvcmRzXCI6W1wicGFzc2lvbmF0ZVwiLFwiZW50aHVzaWFzdGljXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjc2NC1mZTBmLTIwMGQtMWY1MjVcIixcIm5hdGl2ZVwiOlwiXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVERDI1XCJ9XSxcInZlcnNpb25cIjoxMy4xfSxcIm1lbmRpbmdfaGVhcnRcIjp7XCJpZFwiOlwibWVuZGluZ19oZWFydFwiLFwibmFtZVwiOlwiTWVuZGluZyBIZWFydFwiLFwia2V5d29yZHNcIjpbXCJicm9rZW5cIixcImJhbmRhZ2VcIixcIndvdW5kZWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzY0LWZlMGYtMjAwZC0xZmE3OVwiLFwibmF0aXZlXCI6XCJcdTI3NjRcdUZFMEZcdTIwMERcdUQ4M0VcdURFNzlcIn1dLFwidmVyc2lvblwiOjEzLjF9LFwiaGVhcnRcIjp7XCJpZFwiOlwiaGVhcnRcIixcIm5hbWVcIjpcIlJlZCBIZWFydFwiLFwiZW1vdGljb25zXCI6W1wiPDNcIl0sXCJrZXl3b3Jkc1wiOltcImxvdmVcIixcImxpa2VcIixcInZhbGVudGluZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzY0LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNzY0XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBpbmtfaGVhcnRcIjp7XCJpZFwiOlwicGlua19oZWFydFwiLFwibmFtZVwiOlwiUGluayBIZWFydFwiLFwia2V5d29yZHNcIjpbXCJ2YWxlbnRpbmVzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhNzdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTc3XCJ9XSxcInZlcnNpb25cIjoxNX0sXCJvcmFuZ2VfaGVhcnRcIjp7XCJpZFwiOlwib3JhbmdlX2hlYXJ0XCIsXCJuYW1lXCI6XCJPcmFuZ2UgSGVhcnRcIixcImtleXdvcmRzXCI6W1wibG92ZVwiLFwibGlrZVwiLFwiYWZmZWN0aW9uXCIsXCJ2YWxlbnRpbmVzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZTFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREUxXCJ9XSxcInZlcnNpb25cIjo1fSxcInllbGxvd19oZWFydFwiOntcImlkXCI6XCJ5ZWxsb3dfaGVhcnRcIixcIm5hbWVcIjpcIlllbGxvdyBIZWFydFwiLFwiZW1vdGljb25zXCI6W1wiPDNcIl0sXCJrZXl3b3Jkc1wiOltcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwidmFsZW50aW5lc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDliXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5QlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJncmVlbl9oZWFydFwiOntcImlkXCI6XCJncmVlbl9oZWFydFwiLFwibmFtZVwiOlwiR3JlZW4gSGVhcnRcIixcImVtb3RpY29uc1wiOltcIjwzXCJdLFwia2V5d29yZHNcIjpbXCJsb3ZlXCIsXCJsaWtlXCIsXCJhZmZlY3Rpb25cIixcInZhbGVudGluZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ5YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOUFcIn1dLFwidmVyc2lvblwiOjF9LFwiYmx1ZV9oZWFydFwiOntcImlkXCI6XCJibHVlX2hlYXJ0XCIsXCJuYW1lXCI6XCJCbHVlIEhlYXJ0XCIsXCJlbW90aWNvbnNcIjpbXCI8M1wiXSxcImtleXdvcmRzXCI6W1wibG92ZVwiLFwibGlrZVwiLFwiYWZmZWN0aW9uXCIsXCJ2YWxlbnRpbmVzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0OTlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzk5XCJ9XSxcInZlcnNpb25cIjoxfSxcImxpZ2h0X2JsdWVfaGVhcnRcIjp7XCJpZFwiOlwibGlnaHRfYmx1ZV9oZWFydFwiLFwibmFtZVwiOlwiTGlnaHQgQmx1ZSBIZWFydFwiLFwia2V5d29yZHNcIjpbXCJpY2VcIixcImJhYnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE3NVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFNzVcIn1dLFwidmVyc2lvblwiOjE1fSxcInB1cnBsZV9oZWFydFwiOntcImlkXCI6XCJwdXJwbGVfaGVhcnRcIixcIm5hbWVcIjpcIlB1cnBsZSBIZWFydFwiLFwiZW1vdGljb25zXCI6W1wiPDNcIl0sXCJrZXl3b3Jkc1wiOltcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwidmFsZW50aW5lc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDljXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5Q1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJicm93bl9oZWFydFwiOntcImlkXCI6XCJicm93bl9oZWFydFwiLFwibmFtZVwiOlwiQnJvd24gSGVhcnRcIixcImtleXdvcmRzXCI6W1wiY29mZmVlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MGVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDBFXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJibGFja19oZWFydFwiOntcImlkXCI6XCJibGFja19oZWFydFwiLFwibmFtZVwiOlwiQmxhY2sgSGVhcnRcIixcImtleXdvcmRzXCI6W1wiZXZpbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNWE0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RERBNFwifV0sXCJ2ZXJzaW9uXCI6M30sXCJncmV5X2hlYXJ0XCI6e1wiaWRcIjpcImdyZXlfaGVhcnRcIixcIm5hbWVcIjpcIkdyZXkgSGVhcnRcIixcImtleXdvcmRzXCI6W1wic2lsdmVyXCIsXCJtb25vY2hyb21lXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhNzZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTc2XCJ9XSxcInZlcnNpb25cIjoxNX0sXCJ3aGl0ZV9oZWFydFwiOntcImlkXCI6XCJ3aGl0ZV9oZWFydFwiLFwibmFtZVwiOlwiV2hpdGUgSGVhcnRcIixcImtleXdvcmRzXCI6W1wicHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTBkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQwRFwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwia2lzc1wiOntcImlkXCI6XCJraXNzXCIsXCJuYW1lXCI6XCJLaXNzIE1hcmtcIixcImtleXdvcmRzXCI6W1wiZmFjZVwiLFwibGlwc1wiLFwibG92ZVwiLFwibGlrZVwiLFwiYWZmZWN0aW9uXCIsXCJ2YWxlbnRpbmVzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0OGJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzhCXCJ9XSxcInZlcnNpb25cIjoxfSxcImFuZ2VyXCI6e1wiaWRcIjpcImFuZ2VyXCIsXCJuYW1lXCI6XCJBbmdlciBTeW1ib2xcIixcImtleXdvcmRzXCI6W1wiYW5ncnlcIixcIm1hZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGEyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJib29tXCI6e1wiaWRcIjpcImJvb21cIixcIm5hbWVcIjpcIkNvbGxpc2lvblwiLFwia2V5d29yZHNcIjpbXCJib29tXCIsXCJib21iXCIsXCJleHBsb2RlXCIsXCJleHBsb3Npb25cIixcImJsb3duXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YTVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0E1XCJ9XSxcInZlcnNpb25cIjoxfSxcImRpenp5XCI6e1wiaWRcIjpcImRpenp5XCIsXCJuYW1lXCI6XCJEaXp6eVwiLFwia2V5d29yZHNcIjpbXCJzdGFyXCIsXCJzcGFya2xlXCIsXCJzaG9vdFwiLFwibWFnaWNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRhYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQUJcIn1dLFwidmVyc2lvblwiOjF9LFwic3dlYXRfZHJvcHNcIjp7XCJpZFwiOlwic3dlYXRfZHJvcHNcIixcIm5hbWVcIjpcIlN3ZWF0IERyb3BsZXRzXCIsXCJrZXl3b3Jkc1wiOltcImRyb3BzXCIsXCJ3YXRlclwiLFwiZHJpcFwiLFwib29wc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGE2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkYXNoXCI6e1wiaWRcIjpcImRhc2hcIixcIm5hbWVcIjpcIkRhc2ggU3ltYm9sXCIsXCJrZXl3b3Jkc1wiOltcImRhc2hpbmdcIixcImF3YXlcIixcIndpbmRcIixcImFpclwiLFwiZmFzdFwiLFwic2hvb1wiLFwiZmFydFwiLFwic21va2VcIixcInB1ZmZcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQThcIn1dLFwidmVyc2lvblwiOjF9LFwiaG9sZVwiOntcImlkXCI6XCJob2xlXCIsXCJuYW1lXCI6XCJIb2xlXCIsXCJrZXl3b3Jkc1wiOltcImVtYmFycmFzc2luZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTczLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDczXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNwZWVjaF9iYWxsb29uXCI6e1wiaWRcIjpcInNwZWVjaF9iYWxsb29uXCIsXCJuYW1lXCI6XCJTcGVlY2ggQmFsbG9vblwiLFwia2V5d29yZHNcIjpbXCJidWJibGVcIixcIndvcmRzXCIsXCJtZXNzYWdlXCIsXCJ0YWxrXCIsXCJjaGF0dGluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGFjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJleWUtaW4tc3BlZWNoLWJ1YmJsZVwiOntcImlkXCI6XCJleWUtaW4tc3BlZWNoLWJ1YmJsZVwiLFwibmFtZVwiOlwiRXllIGluIFNwZWVjaCBCdWJibGVcIixcImtleXdvcmRzXCI6W1wiaW4tc3BlZWNoLWJ1YmJsZVwiLFwiaW5mb1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDQxLWZlMGYtMjAwZC0xZjVlOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0MVx1RkUwRlx1MjAwRFx1RDgzRFx1RERFOFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJsZWZ0X3NwZWVjaF9idWJibGVcIjp7XCJpZFwiOlwibGVmdF9zcGVlY2hfYnViYmxlXCIsXCJuYW1lXCI6XCJMZWZ0IFNwZWVjaCBCdWJibGVcIixcImtleXdvcmRzXCI6W1wid29yZHNcIixcIm1lc3NhZ2VcIixcInRhbGtcIixcImNoYXR0aW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1ZTgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURERThcdUZFMEZcIn1dLFwidmVyc2lvblwiOjJ9LFwicmlnaHRfYW5nZXJfYnViYmxlXCI6e1wiaWRcIjpcInJpZ2h0X2FuZ2VyX2J1YmJsZVwiLFwibmFtZVwiOlwiUmlnaHQgQW5nZXIgQnViYmxlXCIsXCJrZXl3b3Jkc1wiOltcImNhcHRpb25cIixcInNwZWVjaFwiLFwidGhpbmtpbmdcIixcIm1hZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNWVmLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEREVGXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInRob3VnaHRfYmFsbG9vblwiOntcImlkXCI6XCJ0aG91Z2h0X2JhbGxvb25cIixcIm5hbWVcIjpcIlRob3VnaHQgQmFsbG9vblwiLFwia2V5d29yZHNcIjpbXCJidWJibGVcIixcImNsb3VkXCIsXCJzcGVlY2hcIixcInRoaW5raW5nXCIsXCJkcmVhbVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGFkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ6enpcIjp7XCJpZFwiOlwienp6XCIsXCJuYW1lXCI6XCJaenpcIixcImtleXdvcmRzXCI6W1wic2xlZXB5XCIsXCJ0aXJlZFwiLFwiZHJlYW1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQTRcIn1dLFwidmVyc2lvblwiOjF9LFwid2F2ZVwiOntcImlkXCI6XCJ3YXZlXCIsXCJuYW1lXCI6XCJXYXZpbmcgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJ3YXZlXCIsXCJoYW5kc1wiLFwiZ2VzdHVyZVwiLFwiZ29vZGJ5ZVwiLFwic29sb25nXCIsXCJmYXJld2VsbFwiLFwiaGVsbG9cIixcImhpXCIsXCJwYWxtXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NGJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRiLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Qlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Yi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNEJcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NGItMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRCXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRiLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Qlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Yi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNEJcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwicmFpc2VkX2JhY2tfb2ZfaGFuZFwiOntcImlkXCI6XCJyYWlzZWRfYmFja19vZl9oYW5kXCIsXCJuYW1lXCI6XCJSYWlzZWQgQmFjayBvZiBIYW5kXCIsXCJrZXl3b3Jkc1wiOltcImZpbmdlcnNcIixcImJhY2toYW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MWFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFBXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFhLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxQVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxYS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUFcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5MWEtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFBXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFhLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxQVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxYS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUFcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjN9LFwicmFpc2VkX2hhbmRfd2l0aF9maW5nZXJzX3NwbGF5ZWRcIjp7XCJpZFwiOlwicmFpc2VkX2hhbmRfd2l0aF9maW5nZXJzX3NwbGF5ZWRcIixcIm5hbWVcIjpcIkhhbmQgd2l0aCBGaW5nZXJzIFNwbGF5ZWRcIixcImtleXdvcmRzXCI6W1wicmFpc2VkXCIsXCJwYWxtXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1OTAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREOTBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY1OTAtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDkwXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTkwLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ5MFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjU5MC0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREOTBcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY1OTAtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDkwXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTkwLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ5MFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoYW5kXCI6e1wiaWRcIjpcImhhbmRcIixcIm5hbWVcIjpcIlJhaXNlZCBIYW5kXCIsXCJrZXl3b3Jkc1wiOltcImZpbmdlcnNcIixcInN0b3BcIixcImhpZ2hmaXZlXCIsXCJoaWdoXCIsXCJmaXZlXCIsXCJwYWxtXCIsXCJiYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzBiXCIsXCJuYXRpdmVcIjpcIlx1MjcwQlwifSx7XCJ1bmlmaWVkXCI6XCIyNzBiLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1MjcwQlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIyNzBiLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1MjcwQlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIyNzBiLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1MjcwQlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIyNzBiLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1MjcwQlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIyNzBiLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1MjcwQlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzcG9jay1oYW5kXCI6e1wiaWRcIjpcInNwb2NrLWhhbmRcIixcIm5hbWVcIjpcIlZ1bGNhbiBTYWx1dGVcIixcImtleXdvcmRzXCI6W1wic3BvY2tcIixcImhhbmRcIixcImZpbmdlcnNcIixcInN0YXJcIixcInRyZWtcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU5NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREOTZcIn0se1widW5pZmllZFwiOlwiMWY1OTYtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDk2XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTk2LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ5Nlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjU5Ni0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREOTZcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY1OTYtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDk2XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTk2LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ5Nlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyaWdodHdhcmRzX2hhbmRcIjp7XCJpZFwiOlwicmlnaHR3YXJkc19oYW5kXCIsXCJuYW1lXCI6XCJSaWdodHdhcmRzIEhhbmRcIixcImtleXdvcmRzXCI6W1wicGFsbVwiLFwib2ZmZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFmMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjFcIn0se1widW5pZmllZFwiOlwiMWZhZjEtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUYxXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWYxLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGMVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZmFmMS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjFcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWZhZjEtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUYxXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWYxLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGMVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwibGVmdHdhcmRzX2hhbmRcIjp7XCJpZFwiOlwibGVmdHdhcmRzX2hhbmRcIixcIm5hbWVcIjpcIkxlZnR3YXJkcyBIYW5kXCIsXCJrZXl3b3Jkc1wiOltcInBhbG1cIixcIm9mZmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUYyXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWYyLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGMlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmMi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjJcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWZhZjItMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUYyXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWYyLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGMlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmMi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjJcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjE0fSxcInBhbG1fZG93bl9oYW5kXCI6e1wiaWRcIjpcInBhbG1fZG93bl9oYW5kXCIsXCJuYW1lXCI6XCJQYWxtIERvd24gSGFuZFwiLFwia2V5d29yZHNcIjpbXCJkcm9wXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZjNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUYzXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWYzLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGM1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmMy0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjNcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWZhZjMtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUYzXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWYzLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGM1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmMy0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjNcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjE0fSxcInBhbG1fdXBfaGFuZFwiOntcImlkXCI6XCJwYWxtX3VwX2hhbmRcIixcIm5hbWVcIjpcIlBhbG0gVXAgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJsaWZ0XCIsXCJvZmZlclwiLFwiZGVtYW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZjRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY0XCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY0LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGNFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmNC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjRcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWZhZjQtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY0XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY0LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGNFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmNC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjRcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjE0fSxcImxlZnR3YXJkc19wdXNoaW5nX2hhbmRcIjp7XCJpZFwiOlwibGVmdHdhcmRzX3B1c2hpbmdfaGFuZFwiLFwibmFtZVwiOlwiTGVmdHdhcmRzIFB1c2hpbmcgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJoaWdoZml2ZVwiLFwiaGlnaFwiLFwiZml2ZVwiLFwicHJlc3NpbmdcIixcInN0b3BcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFmN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjdcIn0se1widW5pZmllZFwiOlwiMWZhZjctMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY3XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY3LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGN1x1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZmFmNy0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjdcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWZhZjctMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY3XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY3LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGN1x1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTV9LFwicmlnaHR3YXJkc19wdXNoaW5nX2hhbmRcIjp7XCJpZFwiOlwicmlnaHR3YXJkc19wdXNoaW5nX2hhbmRcIixcIm5hbWVcIjpcIlJpZ2h0d2FyZHMgUHVzaGluZyBIYW5kXCIsXCJrZXl3b3Jkc1wiOltcImhpZ2hmaXZlXCIsXCJoaWdoXCIsXCJmaXZlXCIsXCJwcmVzc2luZ1wiLFwic3RvcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGOFwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmOC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjhcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWZhZjgtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY4XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY4LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGOFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmOC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjhcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWZhZjgtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY4XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxNX0sXCJva19oYW5kXCI6e1wiaWRcIjpcIm9rX2hhbmRcIixcIm5hbWVcIjpcIk9rIEhhbmRcIixcImtleXdvcmRzXCI6W1wiZmluZ2Vyc1wiLFwibGltYnNcIixcInBlcmZlY3RcIixcIm9rYXlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ0Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNENcIn0se1widW5pZmllZFwiOlwiMWY0NGMtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRDXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRjLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Q1x1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Yy0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNENcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0NGMtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRDXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRjLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Q1x1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwaW5jaGVkX2ZpbmdlcnNcIjp7XCJpZFwiOlwicGluY2hlZF9maW5nZXJzXCIsXCJuYW1lXCI6XCJQaW5jaGVkIEZpbmdlcnNcIixcImtleXdvcmRzXCI6W1wic2l6ZVwiLFwidGlueVwiLFwic21hbGxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkwY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMENcIn0se1widW5pZmllZFwiOlwiMWY5MGMtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDBDXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTBjLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQwQ1x1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjkwYy0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMENcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5MGMtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDBDXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTBjLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQwQ1x1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwicGluY2hpbmdfaGFuZFwiOntcImlkXCI6XCJwaW5jaGluZ19oYW5kXCIsXCJuYW1lXCI6XCJQaW5jaGluZyBIYW5kXCIsXCJrZXl3b3Jkc1wiOltcInRpbnlcIixcInNtYWxsXCIsXCJzaXplXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTBmLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQwRlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkwZi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMEZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5MGYtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDBGXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTBmLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQwRlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkwZi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMEZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjEyfSxcInZcIjp7XCJpZFwiOlwidlwiLFwibmFtZVwiOlwiVmljdG9yeSBIYW5kXCIsXCJrZXl3b3Jkc1wiOltcInZcIixcImZpbmdlcnNcIixcIm9oeWVhaFwiLFwicGVhY2VcIixcInR3b1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3MGMtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI3MENcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMjcwYy0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdTI3MENcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMjcwYy0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdTI3MENcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMjcwYy0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdTI3MENcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMjcwYy0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdTI3MENcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMjcwYy0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdTI3MENcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwiY3Jvc3NlZF9maW5nZXJzXCI6e1wiaWRcIjpcImNyb3NzZWRfZmluZ2Vyc1wiLFwibmFtZVwiOlwiQ3Jvc3NlZCBGaW5nZXJzXCIsXCJrZXl3b3Jkc1wiOltcImhhbmRcIixcIndpdGhcIixcImluZGV4XCIsXCJhbmRcIixcIm1pZGRsZVwiLFwiZ29vZFwiLFwibHVja3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkxZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUVcIn0se1widW5pZmllZFwiOlwiMWY5MWUtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFFXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFlLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxRVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjkxZS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUVcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5MWUtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFFXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFlLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxRVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6M30sXCJoYW5kX3dpdGhfaW5kZXhfZmluZ2VyX2FuZF90aHVtYl9jcm9zc2VkXCI6e1wiaWRcIjpcImhhbmRfd2l0aF9pbmRleF9maW5nZXJfYW5kX3RodW1iX2Nyb3NzZWRcIixcIm5hbWVcIjpcIkhhbmQgd2l0aCBJbmRleCBGaW5nZXIgYW5kIFRodW1iIENyb3NzZWRcIixcImtleXdvcmRzXCI6W1wiaGVhcnRcIixcImxvdmVcIixcIm1vbmV5XCIsXCJleHBlbnNpdmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFmMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjBcIn0se1widW5pZmllZFwiOlwiMWZhZjAtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUYwXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWYwLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGMFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZmFmMC0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjBcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWZhZjAtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUYwXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWYwLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGMFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwiaV9sb3ZlX3lvdV9oYW5kX3NpZ25cIjp7XCJpZFwiOlwiaV9sb3ZlX3lvdV9oYW5kX3NpZ25cIixcIm5hbWVcIjpcIkxvdmUtWW91IEdlc3R1cmVcIixcImtleXdvcmRzXCI6W1wiaVwiLFwibG92ZVwiLFwieW91XCIsXCJoYW5kXCIsXCJzaWduXCIsXCJmaW5nZXJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MWZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFmLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxRlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxZi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5MWYtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFGXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFmLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxRlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxZi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjV9LFwidGhlX2hvcm5zXCI6e1wiaWRcIjpcInRoZV9ob3Juc1wiLFwibmFtZVwiOlwiU2lnbiBvZiB0aGUgSG9ybnNcIixcImtleXdvcmRzXCI6W1wiaGFuZFwiLFwiZmluZ2Vyc1wiLFwiZXZpbFwiLFwiZXllXCIsXCJyb2NrXCIsXCJvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTE4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxOFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxOC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMThcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5MTgtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDE4XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTE4LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxOFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxOC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMThcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5MTgtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDE4XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcImNhbGxfbWVfaGFuZFwiOntcImlkXCI6XCJjYWxsX21lX2hhbmRcIixcIm5hbWVcIjpcIkNhbGwgTWUgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJoYW5kc1wiLFwiZ2VzdHVyZVwiLFwic2hha2FcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkxOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMTlcIn0se1widW5pZmllZFwiOlwiMWY5MTktMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDE5XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTE5LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxOVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjkxOS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMTlcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5MTktMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDE5XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTE5LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxOVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6M30sXCJwb2ludF9sZWZ0XCI6e1wiaWRcIjpcInBvaW50X2xlZnRcIixcIm5hbWVcIjpcIkJhY2toYW5kIEluZGV4IFBvaW50aW5nIExlZnRcIixcImtleXdvcmRzXCI6W1wicG9pbnRcIixcImRpcmVjdGlvblwiLFwiZmluZ2Vyc1wiLFwiaGFuZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDQ4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0OFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0OC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDhcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NDgtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQ4XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQ4LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0OFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0OC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDhcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NDgtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQ4XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBvaW50X3JpZ2h0XCI6e1wiaWRcIjpcInBvaW50X3JpZ2h0XCIsXCJuYW1lXCI6XCJCYWNraGFuZCBJbmRleCBQb2ludGluZyBSaWdodFwiLFwia2V5d29yZHNcIjpbXCJwb2ludFwiLFwiZmluZ2Vyc1wiLFwiaGFuZFwiLFwiZGlyZWN0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NDlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQ5XCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQ5LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0OVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0OS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDlcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NDktMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQ5XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQ5LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0OVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0OS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDlcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwicG9pbnRfdXBfMlwiOntcImlkXCI6XCJwb2ludF91cF8yXCIsXCJuYW1lXCI6XCJCYWNraGFuZCBJbmRleCBQb2ludGluZyBVcFwiLFwia2V5d29yZHNcIjpbXCJwb2ludFwiLFwiMlwiLFwiZmluZ2Vyc1wiLFwiaGFuZFwiLFwiZGlyZWN0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NDZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQ2XCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQ2LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Nlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Ni0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NDYtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQ2XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQ2LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Nlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Ni0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWlkZGxlX2ZpbmdlclwiOntcImlkXCI6XCJtaWRkbGVfZmluZ2VyXCIsXCJuYW1lXCI6XCJNaWRkbGUgRmluZ2VyXCIsXCJrZXl3b3Jkc1wiOltcInJldmVyc2VkXCIsXCJoYW5kXCIsXCJ3aXRoXCIsXCJleHRlbmRlZFwiLFwiZmluZ2Vyc1wiLFwicnVkZVwiLFwiZmxpcHBpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU5NVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREOTVcIn0se1widW5pZmllZFwiOlwiMWY1OTUtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDk1XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTk1LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ5NVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjU5NS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREOTVcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY1OTUtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDk1XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTk1LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ5NVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwb2ludF9kb3duXCI6e1wiaWRcIjpcInBvaW50X2Rvd25cIixcIm5hbWVcIjpcIkJhY2toYW5kIEluZGV4IFBvaW50aW5nIERvd25cIixcImtleXdvcmRzXCI6W1wicG9pbnRcIixcImZpbmdlcnNcIixcImhhbmRcIixcImRpcmVjdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDQ3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0N1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Ny0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDdcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NDctMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQ3XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQ3LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0N1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Ny0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDdcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NDctMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQ3XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBvaW50X3VwXCI6e1wiaWRcIjpcInBvaW50X3VwXCIsXCJuYW1lXCI6XCJJbmRleCBQb2ludGluZyBVcFwiLFwia2V5d29yZHNcIjpbXCJwb2ludFwiLFwiaGFuZFwiLFwiZmluZ2Vyc1wiLFwiZGlyZWN0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjYxZC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjYxRFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIyNjFkLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1MjYxRFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIyNjFkLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1MjYxRFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIyNjFkLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1MjYxRFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIyNjFkLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1MjYxRFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIyNjFkLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1MjYxRFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJpbmRleF9wb2ludGluZ19hdF90aGVfdmlld2VyXCI6e1wiaWRcIjpcImluZGV4X3BvaW50aW5nX2F0X3RoZV92aWV3ZXJcIixcIm5hbWVcIjpcIkluZGV4IFBvaW50aW5nIGF0IHRoZSBWaWV3ZXJcIixcImtleXdvcmRzXCI6W1wieW91XCIsXCJyZWNydWl0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZjVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY1XCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY1LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGNVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmNS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjVcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWZhZjUtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY1XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY1LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGNVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZmFmNS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjVcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjE0fSxcIisxXCI6e1wiaWRcIjpcIisxXCIsXCJuYW1lXCI6XCJUaHVtYnMgVXBcIixcImtleXdvcmRzXCI6W1wiKzFcIixcInRodW1ic3VwXCIsXCJ5ZXNcIixcImF3ZXNvbWVcIixcImdvb2RcIixcImFncmVlXCIsXCJhY2NlcHRcIixcImNvb2xcIixcImhhbmRcIixcImxpa2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ0ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNERcIn0se1widW5pZmllZFwiOlwiMWY0NGQtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzREXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRkLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0RFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0ZC0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNERcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0NGQtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzREXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRkLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0RFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCItMVwiOntcImlkXCI6XCItMVwiLFwibmFtZVwiOlwiVGh1bWJzIERvd25cIixcImtleXdvcmRzXCI6W1wiLTFcIixcInRodW1ic2Rvd25cIixcIm5vXCIsXCJkaXNsaWtlXCIsXCJoYW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NGVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRlLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0RVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0ZS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNEVcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NGUtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRFXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRlLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0RVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0ZS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNEVcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwiZmlzdFwiOntcImlkXCI6XCJmaXN0XCIsXCJuYW1lXCI6XCJSYWlzZWQgRmlzdFwiLFwia2V5d29yZHNcIjpbXCJmaW5nZXJzXCIsXCJoYW5kXCIsXCJncmFzcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3MGFcIixcIm5hdGl2ZVwiOlwiXHUyNzBBXCJ9LHtcInVuaWZpZWRcIjpcIjI3MGEtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHUyNzBBXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjI3MGEtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHUyNzBBXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjI3MGEtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHUyNzBBXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjI3MGEtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHUyNzBBXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjI3MGEtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHUyNzBBXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcImZhY2VwdW5jaFwiOntcImlkXCI6XCJmYWNlcHVuY2hcIixcIm5hbWVcIjpcIk9uY29taW5nIEZpc3RcIixcImtleXdvcmRzXCI6W1wiZmFjZXB1bmNoXCIsXCJwdW5jaFwiLFwiYW5ncnlcIixcInZpb2xlbmNlXCIsXCJoaXRcIixcImF0dGFja1wiLFwiaGFuZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDRhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0QVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0YS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNEFcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NGEtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRBXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRhLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0QVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0YS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNEFcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NGEtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRBXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcImxlZnQtZmFjaW5nX2Zpc3RcIjp7XCJpZFwiOlwibGVmdC1mYWNpbmdfZmlzdFwiLFwibmFtZVwiOlwiTGVmdC1GYWNpbmcgRmlzdFwiLFwia2V5d29yZHNcIjpbXCJsZWZ0XCIsXCJmYWNpbmdcIixcImhhbmRcIixcImZpc3RidW1wXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MWJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFiLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxQlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxYi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUJcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5MWItMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFCXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFiLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxQlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxYi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUJcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjN9LFwicmlnaHQtZmFjaW5nX2Zpc3RcIjp7XCJpZFwiOlwicmlnaHQtZmFjaW5nX2Zpc3RcIixcIm5hbWVcIjpcIlJpZ2h0LUZhY2luZyBGaXN0XCIsXCJrZXl3b3Jkc1wiOltcInJpZ2h0XCIsXCJmYWNpbmdcIixcImhhbmRcIixcImZpc3RidW1wXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MWNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFjLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxQ1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxYy0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUNcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5MWMtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFDXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFjLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxQ1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxYy0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMUNcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjN9LFwiY2xhcFwiOntcImlkXCI6XCJjbGFwXCIsXCJuYW1lXCI6XCJDbGFwcGluZyBIYW5kc1wiLFwia2V5d29yZHNcIjpbXCJjbGFwXCIsXCJwcmFpc2VcIixcImFwcGxhdXNlXCIsXCJjb25ncmF0c1wiLFwieWF5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRmLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Rlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Zi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNEZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NGYtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzRGXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDRmLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Rlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Zi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNEZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwicmFpc2VkX2hhbmRzXCI6e1wiaWRcIjpcInJhaXNlZF9oYW5kc1wiLFwibmFtZVwiOlwiUmFpc2luZyBIYW5kc1wiLFwia2V5d29yZHNcIjpbXCJyYWlzZWRcIixcImdlc3R1cmVcIixcImhvb3JheVwiLFwieWVhXCIsXCJjZWxlYnJhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Q1wifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Yy0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNENcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2NGMtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRDXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRjLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Q1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Yy0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNENcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2NGMtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRDXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcImhlYXJ0X2hhbmRzXCI6e1wiaWRcIjpcImhlYXJ0X2hhbmRzXCIsXCJuYW1lXCI6XCJIZWFydCBIYW5kc1wiLFwia2V5d29yZHNcIjpbXCJsb3ZlXCIsXCJhcHByZWNpYXRpb25cIixcInN1cHBvcnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFmNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjZcIn0se1widW5pZmllZFwiOlwiMWZhZjYtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY2XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY2LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGNlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZmFmNi0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRjZcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWZhZjYtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUY2XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWY2LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVGNlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwib3Blbl9oYW5kc1wiOntcImlkXCI6XCJvcGVuX2hhbmRzXCIsXCJuYW1lXCI6XCJPcGVuIEhhbmRzXCIsXCJrZXl3b3Jkc1wiOltcImZpbmdlcnNcIixcImJ1dHRlcmZseVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDUwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM1MFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ1MC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNTBcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NTAtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzUwXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDUwLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM1MFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ1MC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNTBcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NTAtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzUwXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBhbG1zX3VwX3RvZ2V0aGVyXCI6e1wiaWRcIjpcInBhbG1zX3VwX3RvZ2V0aGVyXCIsXCJuYW1lXCI6XCJQYWxtcyBVcCBUb2dldGhlclwiLFwia2V5d29yZHNcIjpbXCJoYW5kc1wiLFwiZ2VzdHVyZVwiLFwiY3VwcGVkXCIsXCJwcmF5ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzJcIn0se1widW5pZmllZFwiOlwiMWY5MzItMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDMyXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTMyLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzMlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjkzMi0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzJcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5MzItMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDMyXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTMyLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzMlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJoYW5kc2hha2VcIjp7XCJpZFwiOlwiaGFuZHNoYWtlXCIsXCJuYW1lXCI6XCJIYW5kc2hha2VcIixcImtleXdvcmRzXCI6W1wiYWdyZWVtZW50XCIsXCJzaGFrZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTFkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxZC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMURcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5MWQtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFEXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTFkLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQxRFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkxZC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMURcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5MWQtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDFEXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjozfSxcInByYXlcIjp7XCJpZFwiOlwicHJheVwiLFwibmFtZVwiOlwiRm9sZGVkIEhhbmRzXCIsXCJrZXl3b3Jkc1wiOltcInByYXlcIixcInBsZWFzZVwiLFwiaG9wZVwiLFwid2lzaFwiLFwibmFtYXN0ZVwiLFwiaGlnaGZpdmVcIixcImhpZ2hcIixcImZpdmVcIixcInRoYW5rXCIsXCJ5b3VcIixcInRoYW5rc1wiLFwiYXBwcmVjaWF0ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Zi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEZcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2NGYtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRGXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRmLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Rlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Zi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEZcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2NGYtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRGXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIndyaXRpbmdfaGFuZFwiOntcImlkXCI6XCJ3cml0aW5nX2hhbmRcIixcIm5hbWVcIjpcIldyaXRpbmcgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJsb3dlclwiLFwibGVmdFwiLFwiYmFsbHBvaW50XCIsXCJwZW5cIixcInN0YXRpb25lcnlcIixcIndyaXRlXCIsXCJjb21wb3NlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjcwZC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjcwRFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIyNzBkLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1MjcwRFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIyNzBkLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1MjcwRFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIyNzBkLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1MjcwRFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIyNzBkLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1MjcwRFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIyNzBkLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1MjcwRFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJuYWlsX2NhcmVcIjp7XCJpZFwiOlwibmFpbF9jYXJlXCIsXCJuYW1lXCI6XCJOYWlsIFBvbGlzaFwiLFwia2V5d29yZHNcIjpbXCJjYXJlXCIsXCJiZWF1dHlcIixcIm1hbmljdXJlXCIsXCJmaW5nZXJcIixcImZhc2hpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ4NVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODVcIn0se1widW5pZmllZFwiOlwiMWY0ODUtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg1XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg1LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4NVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4NS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODVcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0ODUtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg1XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg1LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4NVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzZWxmaWVcIjp7XCJpZFwiOlwic2VsZmllXCIsXCJuYW1lXCI6XCJTZWxmaWVcIixcImtleXdvcmRzXCI6W1wiY2FtZXJhXCIsXCJwaG9uZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTMzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzM1wifSx7XCJ1bmlmaWVkXCI6XCIxZjkzMy0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzNcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5MzMtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDMzXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTMzLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzM1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzMy0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzNcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5MzMtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDMzXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjozfSxcIm11c2NsZVwiOntcImlkXCI6XCJtdXNjbGVcIixcIm5hbWVcIjpcIkZsZXhlZCBCaWNlcHNcIixcImtleXdvcmRzXCI6W1wibXVzY2xlXCIsXCJhcm1cIixcImZsZXhcIixcImhhbmRcIixcInN1bW1lclwiLFwic3Ryb25nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YWFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0FBXCJ9LHtcInVuaWZpZWRcIjpcIjFmNGFhLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBQVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjRhYS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQUFcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0YWEtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0FBXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNGFhLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBQVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjRhYS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQUFcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWVjaGFuaWNhbF9hcm1cIjp7XCJpZFwiOlwibWVjaGFuaWNhbF9hcm1cIixcIm5hbWVcIjpcIk1lY2hhbmljYWwgQXJtXCIsXCJrZXl3b3Jkc1wiOltcImFjY2Vzc2liaWxpdHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjliZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQkVcIn1dLFwidmVyc2lvblwiOjEyfSxcIm1lY2hhbmljYWxfbGVnXCI6e1wiaWRcIjpcIm1lY2hhbmljYWxfbGVnXCIsXCJuYW1lXCI6XCJNZWNoYW5pY2FsIExlZ1wiLFwia2V5d29yZHNcIjpbXCJhY2Nlc3NpYmlsaXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREJGXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJsZWdcIjp7XCJpZFwiOlwibGVnXCIsXCJuYW1lXCI6XCJMZWdcIixcImtleXdvcmRzXCI6W1wia2lja1wiLFwibGltYlwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWI1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCNVwifSx7XCJ1bmlmaWVkXCI6XCIxZjliNS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjVcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5YjUtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI1XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI1LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCNVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjliNS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjVcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5YjUtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI1XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJmb290XCI6e1wiaWRcIjpcImZvb3RcIixcIm5hbWVcIjpcIkZvb3RcIixcImtleXdvcmRzXCI6W1wia2lja1wiLFwic3RvbXBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjliNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjZcIn0se1widW5pZmllZFwiOlwiMWY5YjYtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI2XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI2LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCNlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjliNi0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjZcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5YjYtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI2XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI2LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCNlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiZWFyXCI6e1wiaWRcIjpcImVhclwiLFwibmFtZVwiOlwiRWFyXCIsXCJrZXl3b3Jkc1wiOltcImZhY2VcIixcImhlYXJcIixcInNvdW5kXCIsXCJsaXN0ZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ0MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDJcIn0se1widW5pZmllZFwiOlwiMWY0NDItMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQyXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQyLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Mlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0Mi0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDJcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0NDItMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQyXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQyLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0Mlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlYXJfd2l0aF9oZWFyaW5nX2FpZFwiOntcImlkXCI6XCJlYXJfd2l0aF9oZWFyaW5nX2FpZFwiLFwibmFtZVwiOlwiRWFyIHdpdGggSGVhcmluZyBBaWRcIixcImtleXdvcmRzXCI6W1wiYWNjZXNzaWJpbGl0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliYi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQkJcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5YmItMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREJCXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWJiLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCQlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjliYi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQkJcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5YmItMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREJCXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJub3NlXCI6e1wiaWRcIjpcIm5vc2VcIixcIm5hbWVcIjpcIk5vc2VcIixcImtleXdvcmRzXCI6W1wic21lbGxcIixcInNuaWZmXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NDNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQzLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0M1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0My0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDNcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NDMtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQzXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDQzLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0M1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ0My0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDNcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwiYnJhaW5cIjp7XCJpZFwiOlwiYnJhaW5cIixcIm5hbWVcIjpcIkJyYWluXCIsXCJrZXl3b3Jkc1wiOltcInNtYXJ0XCIsXCJpbnRlbGxpZ2VudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWUwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERFMFwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJhbmF0b21pY2FsX2hlYXJ0XCI6e1wiaWRcIjpcImFuYXRvbWljYWxfaGVhcnRcIixcIm5hbWVcIjpcIkFuYXRvbWljYWwgSGVhcnRcIixcImtleXdvcmRzXCI6W1wiaGVhbHRoXCIsXCJoZWFydGJlYXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFjMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQzBcIn1dLFwidmVyc2lvblwiOjEzfSxcImx1bmdzXCI6e1wiaWRcIjpcImx1bmdzXCIsXCJuYW1lXCI6XCJMdW5nc1wiLFwia2V5d29yZHNcIjpbXCJicmVhdGhlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYzFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUMxXCJ9XSxcInZlcnNpb25cIjoxM30sXCJ0b290aFwiOntcImlkXCI6XCJ0b290aFwiLFwibmFtZVwiOlwiVG9vdGhcIixcImtleXdvcmRzXCI6W1widGVldGhcIixcImRlbnRpc3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjliN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjdcIn1dLFwidmVyc2lvblwiOjExfSxcImJvbmVcIjp7XCJpZFwiOlwiYm9uZVwiLFwibmFtZVwiOlwiQm9uZVwiLFwia2V5d29yZHNcIjpbXCJza2VsZXRvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWI0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCNFwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiZXllc1wiOntcImlkXCI6XCJleWVzXCIsXCJuYW1lXCI6XCJFeWVzXCIsXCJrZXl3b3Jkc1wiOltcImxvb2tcIixcIndhdGNoXCIsXCJzdGFsa1wiLFwicGVla1wiLFwic2VlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NDBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQwXCJ9XSxcInZlcnNpb25cIjoxfSxcImV5ZVwiOntcImlkXCI6XCJleWVcIixcIm5hbWVcIjpcIkV5ZVwiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJsb29rXCIsXCJzZWVcIixcIndhdGNoXCIsXCJzdGFyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDQxLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzQxXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInRvbmd1ZVwiOntcImlkXCI6XCJ0b25ndWVcIixcIm5hbWVcIjpcIlRvbmd1ZVwiLFwia2V5d29yZHNcIjpbXCJtb3V0aFwiLFwicGxheWZ1bFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDQ1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM0NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsaXBzXCI6e1wiaWRcIjpcImxpcHNcIixcIm5hbWVcIjpcIk1vdXRoXCIsXCJrZXl3b3Jkc1wiOltcImxpcHNcIixcImtpc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ0NFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNDRcIn1dLFwidmVyc2lvblwiOjF9LFwiYml0aW5nX2xpcFwiOntcImlkXCI6XCJiaXRpbmdfbGlwXCIsXCJuYW1lXCI6XCJCaXRpbmcgTGlwXCIsXCJrZXl3b3Jkc1wiOltcImZsaXJ0XCIsXCJzZXh5XCIsXCJwYWluXCIsXCJ3b3JyeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWU2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVFNlwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwiYmFieVwiOntcImlkXCI6XCJiYWJ5XCIsXCJuYW1lXCI6XCJCYWJ5XCIsXCJrZXl3b3Jkc1wiOltcImNoaWxkXCIsXCJib3lcIixcImdpcmxcIixcInRvZGRsZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzZcIn0se1widW5pZmllZFwiOlwiMWY0NzYtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc2XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc2LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3Nlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Ni0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzZcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0NzYtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc2XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc2LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3Nlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjaGlsZFwiOntcImlkXCI6XCJjaGlsZFwiLFwibmFtZVwiOlwiQ2hpbGRcIixcImtleXdvcmRzXCI6W1wiZ2VuZGVyXCIsXCJuZXV0cmFsXCIsXCJ5b3VuZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDJcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5ZDItMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQyXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQyLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDJcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5ZDItMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQyXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjo1fSxcImJveVwiOntcImlkXCI6XCJib3lcIixcIm5hbWVcIjpcIkJveVwiLFwia2V5d29yZHNcIjpbXCJtYW5cIixcIm1hbGVcIixcImd1eVwiLFwidGVlbmFnZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjZcIn0se1widW5pZmllZFwiOlwiMWY0NjYtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY2XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY2LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2Nlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2Ni0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjZcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0NjYtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY2XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY2LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2Nlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJnaXJsXCI6e1wiaWRcIjpcImdpcmxcIixcIm5hbWVcIjpcIkdpcmxcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJ3b21hblwiLFwidGVlbmFnZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjdcIn0se1widW5pZmllZFwiOlwiMWY0NjctMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY3XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY3LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2N1x1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2Ny0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjdcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0NjctMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY3XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY3LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2N1x1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhZHVsdFwiOntcImlkXCI6XCJhZHVsdFwiLFwibmFtZVwiOlwiQWR1bHRcIixcImtleXdvcmRzXCI6W1wicGVyc29uXCIsXCJnZW5kZXJcIixcIm5ldXRyYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJwZXJzb25fd2l0aF9ibG9uZF9oYWlyXCI6e1wiaWRcIjpcInBlcnNvbl93aXRoX2Jsb25kX2hhaXJcIixcIm5hbWVcIjpcIlBlcnNvbiBCbG9uZCBIYWlyXCIsXCJrZXl3b3Jkc1wiOltcIndpdGhcIixcImhhaXJzdHlsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDcxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzFcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NzEtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcxXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcxLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzFcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NzEtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcxXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hblwiOntcImlkXCI6XCJtYW5cIixcIm5hbWVcIjpcIk1hblwiLFwia2V5d29yZHNcIjpbXCJtdXN0YWNoZVwiLFwiZmF0aGVyXCIsXCJkYWRcIixcImd1eVwiLFwiY2xhc3N5XCIsXCJzaXJcIixcIm1vdXN0YWNoZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJlYXJkZWRfcGVyc29uXCI6e1wiaWRcIjpcImJlYXJkZWRfcGVyc29uXCIsXCJuYW1lXCI6XCJQZXJzb24gQmVhcmRcIixcImtleXdvcmRzXCI6W1wiYmVhcmRlZFwiLFwibWFuXCIsXCJiZXdoaXNrZXJlZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDRcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5ZDQtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ0XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ0LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDRcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5ZDQtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ0XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjo1fSxcIm1hbl93aXRoX2JlYXJkXCI6e1wiaWRcIjpcIm1hbl93aXRoX2JlYXJkXCIsXCJuYW1lXCI6XCJNYW46IEJlYXJkXCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwid2l0aFwiLFwiZmFjaWFsXCIsXCJoYWlyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ0XHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ0LTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENFx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNC0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDRcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDQtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ0XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ0LTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENFx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNC0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDRcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjEzLjF9LFwid29tYW5fd2l0aF9iZWFyZFwiOntcImlkXCI6XCJ3b21hbl93aXRoX2JlYXJkXCIsXCJuYW1lXCI6XCJXb21hbjogQmVhcmRcIixcImtleXdvcmRzXCI6W1wid29tYW5cIixcIndpdGhcIixcImZhY2lhbFwiLFwiaGFpclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ0LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNC0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDRcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDQtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ0XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ0LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENFx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNC0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDRcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDQtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ0XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxMy4xfSxcInJlZF9oYWlyZWRfbWFuXCI6e1wiaWRcIjpcInJlZF9oYWlyZWRfbWFuXCIsXCJuYW1lXCI6XCJNYW46IFJlZCBIYWlyXCIsXCJrZXl3b3Jkc1wiOltcImhhaXJlZFwiLFwibWFuXCIsXCJoYWlyc3R5bGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRVx1RERCMFwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiY3VybHlfaGFpcmVkX21hblwiOntcImlkXCI6XCJjdXJseV9oYWlyZWRfbWFuXCIsXCJuYW1lXCI6XCJNYW46IEN1cmx5IEhhaXJcIixcImtleXdvcmRzXCI6W1wiaGFpcmVkXCIsXCJtYW5cIixcImhhaXJzdHlsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZkLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREIxXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJ3aGl0ZV9oYWlyZWRfbWFuXCI6e1wiaWRcIjpcIndoaXRlX2hhaXJlZF9tYW5cIixcIm5hbWVcIjpcIk1hbjogV2hpdGUgSGFpclwiLFwia2V5d29yZHNcIjpbXCJoYWlyZWRcIixcIm1hblwiLFwib2xkXCIsXCJlbGRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZkLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREIzXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJiYWxkX21hblwiOntcImlkXCI6XCJiYWxkX21hblwiLFwibmFtZVwiOlwiTWFuOiBCYWxkXCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwiaGFpcmxlc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmOWIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRVx1RERCMlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTFmOWIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRVx1RERCMlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTFmOWIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRVx1RERCMlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTFmOWIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRVx1RERCMlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTFmOWIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRVx1RERCMlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTFmOWIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRVx1RERCMlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwid29tYW5cIjp7XCJpZFwiOlwid29tYW5cIixcIm5hbWVcIjpcIldvbWFuXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiLFwiZ2lybHNcIixcImxhZHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyZWRfaGFpcmVkX3dvbWFuXCI6e1wiaWRcIjpcInJlZF9oYWlyZWRfd29tYW5cIixcIm5hbWVcIjpcIldvbWFuOiBSZWQgSGFpclwiLFwia2V5d29yZHNcIjpbXCJoYWlyZWRcIixcIndvbWFuXCIsXCJoYWlyc3R5bGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRVx1RERCMFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTFmOWIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRVx1RERCMFwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwicmVkX2hhaXJlZF9wZXJzb25cIjp7XCJpZFwiOlwicmVkX2hhaXJlZF9wZXJzb25cIixcIm5hbWVcIjpcIlBlcnNvbjogUmVkIEhhaXJcIixcImtleXdvcmRzXCI6W1wiaGFpcmVkXCIsXCJwZXJzb25cIixcImhhaXJzdHlsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWY5YjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNFXHVEREIwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWY5YjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREIwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWY5YjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREIwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWY5YjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREIwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWY5YjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREIwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWY5YjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREIwXCJ9XSxcInZlcnNpb25cIjoxMi4xfSxcImN1cmx5X2hhaXJlZF93b21hblwiOntcImlkXCI6XCJjdXJseV9oYWlyZWRfd29tYW5cIixcIm5hbWVcIjpcIldvbWFuOiBDdXJseSBIYWlyXCIsXCJrZXl3b3Jkc1wiOltcImhhaXJlZFwiLFwid29tYW5cIixcImhhaXJzdHlsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZiLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZkLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZlLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREIxXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMWY5YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREIxXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJjdXJseV9oYWlyZWRfcGVyc29uXCI6e1wiaWRcIjpcImN1cmx5X2hhaXJlZF9wZXJzb25cIixcIm5hbWVcIjpcIlBlcnNvbjogQ3VybHkgSGFpclwiLFwia2V5d29yZHNcIjpbXCJoYWlyZWRcIixcInBlcnNvblwiLFwiaGFpcnN0eWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjliMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0VcdUREQjFcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjliMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0VcdUREQjFcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjliMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0VcdUREQjFcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjliMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0VcdUREQjFcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjliMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0VcdUREQjFcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjliMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0VcdUREQjFcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwid2hpdGVfaGFpcmVkX3dvbWFuXCI6e1wiaWRcIjpcIndoaXRlX2hhaXJlZF93b21hblwiLFwibmFtZVwiOlwiV29tYW46IFdoaXRlIEhhaXJcIixcImtleXdvcmRzXCI6W1wiaGFpcmVkXCIsXCJ3b21hblwiLFwib2xkXCIsXCJlbGRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZiLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZkLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZlLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREIzXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJ3aGl0ZV9oYWlyZWRfcGVyc29uXCI6e1wiaWRcIjpcIndoaXRlX2hhaXJlZF9wZXJzb25cIixcIm5hbWVcIjpcIlBlcnNvbjogV2hpdGUgSGFpclwiLFwia2V5d29yZHNcIjpbXCJoYWlyZWRcIixcInBlcnNvblwiLFwiZWxkZXJcIixcIm9sZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREIzXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWY5YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREIzXCJ9XSxcInZlcnNpb25cIjoxMi4xfSxcImJhbGRfd29tYW5cIjp7XCJpZFwiOlwiYmFsZF93b21hblwiLFwibmFtZVwiOlwiV29tYW46IEJhbGRcIixcImtleXdvcmRzXCI6W1wid29tYW5cIixcImhhaXJsZXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjliMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0VcdUREQjJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0xZjliMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0VcdUREQjJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0xZjliMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0VcdUREQjJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0xZjliMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0VcdUREQjJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0xZjliMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0VcdUREQjJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0xZjliMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0VcdUREQjJcIn1dLFwidmVyc2lvblwiOjExfSxcImJhbGRfcGVyc29uXCI6e1wiaWRcIjpcImJhbGRfcGVyc29uXCIsXCJuYW1lXCI6XCJQZXJzb246IEJhbGRcIixcImtleXdvcmRzXCI6W1wicGVyc29uXCIsXCJoYWlybGVzc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWY5YjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNFXHVEREIyXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWY5YjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREIyXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWY5YjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREIyXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWY5YjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREIyXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWY5YjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREIyXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWY5YjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREIyXCJ9XSxcInZlcnNpb25cIjoxMi4xfSxcImJsb25kLWhhaXJlZC13b21hblwiOntcImlkXCI6XCJibG9uZC1oYWlyZWQtd29tYW5cIixcIm5hbWVcIjpcIldvbWFuOiBCbG9uZCBIYWlyXCIsXCJrZXl3b3Jkc1wiOltcImhhaXJlZC13b21hblwiLFwid29tYW5cIixcImZlbWFsZVwiLFwiZ2lybFwiLFwiYmxvbmRlXCIsXCJwZXJzb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3MS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzFcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzEtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcxXHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcxLTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MS0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzFcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzEtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcxXHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcxLTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MVx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJibG9uZC1oYWlyZWQtbWFuXCI6e1wiaWRcIjpcImJsb25kLWhhaXJlZC1tYW5cIixcIm5hbWVcIjpcIk1hbjogQmxvbmQgSGFpclwiLFwia2V5d29yZHNcIjpbXCJoYWlyZWQtbWFuXCIsXCJtYW5cIixcIm1hbGVcIixcImJveVwiLFwiYmxvbmRlXCIsXCJndXlcIixcInBlcnNvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDcxLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzFcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzEtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcxXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcxLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzFcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzEtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcxXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIm9sZGVyX2FkdWx0XCI6e1wiaWRcIjpcIm9sZGVyX2FkdWx0XCIsXCJuYW1lXCI6XCJPbGRlciBBZHVsdFwiLFwia2V5d29yZHNcIjpbXCJwZXJzb25cIixcImh1bWFuXCIsXCJlbGRlclwiLFwic2VuaW9yXCIsXCJnZW5kZXJcIixcIm5ldXRyYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDNcIn0se1widW5pZmllZFwiOlwiMWY5ZDMtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQzXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQzLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREM1x1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMy0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDNcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5ZDMtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQzXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQzLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREM1x1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJvbGRlcl9tYW5cIjp7XCJpZFwiOlwib2xkZXJfbWFuXCIsXCJuYW1lXCI6XCJPbGQgTWFuXCIsXCJrZXl3b3Jkc1wiOltcIm9sZGVyXCIsXCJodW1hblwiLFwibWFsZVwiLFwibWVuXCIsXCJlbGRlclwiLFwic2VuaW9yXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NzRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc0XCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc0LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3NFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3NC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzRcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NzQtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc0XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc0LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3NFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3NC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzRcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwib2xkZXJfd29tYW5cIjp7XCJpZFwiOlwib2xkZXJfd29tYW5cIixcIm5hbWVcIjpcIk9sZCBXb21hblwiLFwia2V5d29yZHNcIjpbXCJvbGRlclwiLFwiaHVtYW5cIixcImZlbWFsZVwiLFwid29tZW5cIixcImxhZHlcIixcImVsZGVyXCIsXCJzZW5pb3JcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3NVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzVcIn0se1widW5pZmllZFwiOlwiMWY0NzUtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc1XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc1LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3NVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3NS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzVcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0NzUtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc1XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc1LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3NVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwZXJzb25fZnJvd25pbmdcIjp7XCJpZFwiOlwicGVyc29uX2Zyb3duaW5nXCIsXCJuYW1lXCI6XCJQZXJzb24gRnJvd25pbmdcIixcImtleXdvcmRzXCI6W1wid29ycmllZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RFwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNERcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2NGQtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTREXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRkLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNERcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2NGQtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTREXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1mcm93bmluZ1wiOntcImlkXCI6XCJtYW4tZnJvd25pbmdcIixcIm5hbWVcIjpcIk1hbiBGcm93bmluZ1wiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJib3lcIixcInNhZFwiLFwiZGVwcmVzc2VkXCIsXCJkaXNjb3VyYWdlZFwiLFwidW5oYXBweVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZC0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNERcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGQtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTREXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRkLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RFx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZC0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNERcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGQtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTREXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLWZyb3duaW5nXCI6e1wiaWRcIjpcIndvbWFuLWZyb3duaW5nXCIsXCJuYW1lXCI6XCJXb21hbiBGcm93bmluZ1wiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImdpcmxcIixcInNhZFwiLFwiZGVwcmVzc2VkXCIsXCJkaXNjb3VyYWdlZFwiLFwidW5oYXBweVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZC0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNERcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGQtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTREXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRkLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RFx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZC0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNERcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGQtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTREXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcInBlcnNvbl93aXRoX3BvdXRpbmdfZmFjZVwiOntcImlkXCI6XCJwZXJzb25fd2l0aF9wb3V0aW5nX2ZhY2VcIixcIm5hbWVcIjpcIlBlcnNvbiBQb3V0aW5nXCIsXCJrZXl3b3Jkc1wiOltcIndpdGhcIixcImZhY2VcIixcInVwc2V0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2NGVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRlLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEVcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY2NGUtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRFXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRlLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEVcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFuLXBvdXRpbmdcIjp7XCJpZFwiOlwibWFuLXBvdXRpbmdcIixcIm5hbWVcIjpcIk1hbiBQb3V0aW5nXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcImJveVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEVcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGUtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRFXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRlLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEVcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGUtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRFXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLXBvdXRpbmdcIjp7XCJpZFwiOlwid29tYW4tcG91dGluZ1wiLFwibmFtZVwiOlwiV29tYW4gUG91dGluZ1wiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImdpcmxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY0ZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGUtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRFXHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRlLTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0ZS0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEVcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGUtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRFXHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRlLTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0RVx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJub19nb29kXCI6e1wiaWRcIjpcIm5vX2dvb2RcIixcIm5hbWVcIjpcIlBlcnNvbiBHZXN0dXJpbmcgTm9cIixcImtleXdvcmRzXCI6W1wiZ29vZFwiLFwiZGVjbGluZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0NVwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0NS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDVcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2NDUtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ1XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ1LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0NVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0NS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDVcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2NDUtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ1XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1nZXN0dXJpbmctbm9cIjp7XCJpZFwiOlwibWFuLWdlc3R1cmluZy1ub1wiLFwibmFtZVwiOlwiTWFuIEdlc3R1cmluZyBOb1wiLFwia2V5d29yZHNcIjpbXCJnZXN0dXJpbmctbm9cIixcIm1hbGVcIixcImJveVwiLFwibm9wZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ1LTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0NVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0NS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDVcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDUtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ1XHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ1LTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0NVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0NS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDVcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDUtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ1XHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLWdlc3R1cmluZy1ub1wiOntcImlkXCI6XCJ3b21hbi1nZXN0dXJpbmctbm9cIixcIm5hbWVcIjpcIldvbWFuIEdlc3R1cmluZyBOb1wiLFwia2V5d29yZHNcIjpbXCJnZXN0dXJpbmctbm9cIixcImZlbWFsZVwiLFwiZ2lybFwiLFwibm9wZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ1LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0NVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0NS0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDVcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDUtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ1XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ1LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0NVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0NS0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDVcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDUtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ1XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIm9rX3dvbWFuXCI6e1wiaWRcIjpcIm9rX3dvbWFuXCIsXCJuYW1lXCI6XCJQZXJzb24gR2VzdHVyaW5nIE9rXCIsXCJrZXl3b3Jkc1wiOltcIndvbWFuXCIsXCJhZ3JlZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0NlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ni0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDZcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2NDYtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ2XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ2LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Nlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ni0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDZcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2NDYtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ2XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1nZXN0dXJpbmctb2tcIjp7XCJpZFwiOlwibWFuLWdlc3R1cmluZy1va1wiLFwibmFtZVwiOlwiTWFuIEdlc3R1cmluZyBPa1wiLFwia2V5d29yZHNcIjpbXCJnZXN0dXJpbmctb2tcIixcIm1lblwiLFwiYm95XCIsXCJtYWxlXCIsXCJibHVlXCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ2LTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Nlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ni0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDZcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDYtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ2XHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ2LTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Nlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ni0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDZcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDYtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ2XHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLWdlc3R1cmluZy1va1wiOntcImlkXCI6XCJ3b21hbi1nZXN0dXJpbmctb2tcIixcIm5hbWVcIjpcIldvbWFuIEdlc3R1cmluZyBPa1wiLFwia2V5d29yZHNcIjpbXCJnZXN0dXJpbmctb2tcIixcIndvbWVuXCIsXCJnaXJsXCIsXCJmZW1hbGVcIixcInBpbmtcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2NDYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ2XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ2LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Nlx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ni0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDZcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDYtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ2XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ2LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Nlx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ni0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDZcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwiaW5mb3JtYXRpb25fZGVza19wZXJzb25cIjp7XCJpZFwiOlwiaW5mb3JtYXRpb25fZGVza19wZXJzb25cIixcIm5hbWVcIjpcIlBlcnNvbiBUaXBwaW5nIEhhbmRcIixcImtleXdvcmRzXCI6W1wiaW5mb3JtYXRpb25cIixcImRlc2tcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ4MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODFcIn0se1widW5pZmllZFwiOlwiMWY0ODEtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgxXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgxLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4MVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4MS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODFcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0ODEtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgxXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgxLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4MVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtYW4tdGlwcGluZy1oYW5kXCI6e1wiaWRcIjpcIm1hbi10aXBwaW5nLWhhbmRcIixcIm5hbWVcIjpcIk1hbiBUaXBwaW5nIEhhbmRcIixcImtleXdvcmRzXCI6W1widGlwcGluZy1oYW5kXCIsXCJtYWxlXCIsXCJib3lcIixcImh1bWFuXCIsXCJpbmZvcm1hdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDgxLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4MVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4MS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODFcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODEtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgxXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgxLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4MVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4MS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODFcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODEtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgxXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLXRpcHBpbmctaGFuZFwiOntcImlkXCI6XCJ3b21hbi10aXBwaW5nLWhhbmRcIixcIm5hbWVcIjpcIldvbWFuIFRpcHBpbmcgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJ0aXBwaW5nLWhhbmRcIixcImZlbWFsZVwiLFwiZ2lybFwiLFwiaHVtYW5cIixcImluZm9ybWF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODEtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgxXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgxLTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4MVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4MS0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODFcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODEtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgxXHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgxLTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4MVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4MS0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODFcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwicmFpc2luZ19oYW5kXCI6e1wiaWRcIjpcInJhaXNpbmdfaGFuZFwiLFwibmFtZVwiOlwiUGVyc29uIFJhaXNpbmcgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJxdWVzdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0QlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Yi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEJcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2NGItMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRCXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRiLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Qlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Yi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEJcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2NGItMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRCXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1yYWlzaW5nLWhhbmRcIjp7XCJpZFwiOlwibWFuLXJhaXNpbmctaGFuZFwiLFwibmFtZVwiOlwiTWFuIFJhaXNpbmcgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJyYWlzaW5nLWhhbmRcIixcIm1hbGVcIixcImJveVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Qlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Yi0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEJcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGItMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRCXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRiLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Qlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Yi0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEJcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGItMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRCXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLXJhaXNpbmctaGFuZFwiOntcImlkXCI6XCJ3b21hbi1yYWlzaW5nLWhhbmRcIixcIm5hbWVcIjpcIldvbWFuIFJhaXNpbmcgSGFuZFwiLFwia2V5d29yZHNcIjpbXCJyYWlzaW5nLWhhbmRcIixcImZlbWFsZVwiLFwiZ2lybFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjRiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Qlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Yi0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEJcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGItMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRCXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjRiLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0Qlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Yi0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNEJcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NGItMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTRCXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcImRlYWZfcGVyc29uXCI6e1wiaWRcIjpcImRlYWZfcGVyc29uXCIsXCJuYW1lXCI6XCJEZWFmIFBlcnNvblwiLFwia2V5d29yZHNcIjpbXCJhY2Nlc3NpYmlsaXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5Y2ZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNmLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0ZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5Y2YtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENGXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNmLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0ZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjEyfSxcImRlYWZfbWFuXCI6e1wiaWRcIjpcImRlYWZfbWFuXCIsXCJuYW1lXCI6XCJEZWFmIE1hblwiLFwia2V5d29yZHNcIjpbXCJhY2Nlc3NpYmlsaXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5Y2YtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNmLTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRlx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZi0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0ZcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2YtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENGXHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNmLTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRlx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZi0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0ZcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjEyfSxcImRlYWZfd29tYW5cIjp7XCJpZFwiOlwiZGVhZl93b21hblwiLFwibmFtZVwiOlwiRGVhZiBXb21hblwiLFwia2V5d29yZHNcIjpbXCJhY2Nlc3NpYmlsaXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5Y2YtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNmLTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRlx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZi0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0ZcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2YtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENGXHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNmLTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRlx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZi0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0ZcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjEyfSxcImJvd1wiOntcImlkXCI6XCJib3dcIixcIm5hbWVcIjpcIlBlcnNvbiBCb3dpbmdcIixcImtleXdvcmRzXCI6W1wiYm93XCIsXCJyZXNwZWN0aWZ1bFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjQ3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0N1wifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ny0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDdcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2NDctMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ3XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ3LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0N1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ny0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDdcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2NDctMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ3XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1ib3dpbmdcIjp7XCJpZFwiOlwibWFuLWJvd2luZ1wiLFwibmFtZVwiOlwiTWFuIEJvd2luZ1wiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJib3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY0Ny0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDdcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDctMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ3XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ3LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0N1x1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ny0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDdcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDctMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ3XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ3LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0N1x1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi1ib3dpbmdcIjp7XCJpZFwiOlwid29tYW4tYm93aW5nXCIsXCJuYW1lXCI6XCJXb21hbiBCb3dpbmdcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJnaXJsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2NDctMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ3XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ3LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0N1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ny0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDdcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2NDctMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTQ3XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNjQ3LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU0N1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjY0Ny0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFNDdcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwiZmFjZV9wYWxtXCI6e1wiaWRcIjpcImZhY2VfcGFsbVwiLFwibmFtZVwiOlwiRmFjZSBQYWxtXCIsXCJrZXl3b3Jkc1wiOltcInBlcnNvblwiLFwiZmFjZXBhbG1pbmdcIixcImRpc2FwcG9pbnRlZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTI2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyNlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkyNi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMjZcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5MjYtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDI2XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTI2LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyNlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkyNi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMjZcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5MjYtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDI2XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjozfSxcIm1hbi1mYWNlcGFsbWluZ1wiOntcImlkXCI6XCJtYW4tZmFjZXBhbG1pbmdcIixcIm5hbWVcIjpcIk1hbiBGYWNlcGFsbWluZ1wiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJib3lcIixcImRpc2JlbGllZlwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTI2LTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyNlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkyNi0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMjZcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MjYtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDI2XHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTI2LTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyNlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkyNi0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMjZcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MjYtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDI2XHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLWZhY2VwYWxtaW5nXCI6e1wiaWRcIjpcIndvbWFuLWZhY2VwYWxtaW5nXCIsXCJuYW1lXCI6XCJXb21hbiBGYWNlcGFsbWluZ1wiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImdpcmxcIixcImRpc2JlbGllZlwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTI2LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyNlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkyNi0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMjZcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MjYtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDI2XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTI2LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQyNlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkyNi0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMjZcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MjYtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDI2XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcInNocnVnXCI6e1wiaWRcIjpcInNocnVnXCIsXCJuYW1lXCI6XCJTaHJ1Z1wiLFwia2V5d29yZHNcIjpbXCJwZXJzb25cIixcInNocnVnZ2luZ1wiLFwicmVnYXJkbGVzc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTM3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNy0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzdcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5MzctMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM3XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM3LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzN1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNy0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzdcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5MzctMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM3XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjozfSxcIm1hbi1zaHJ1Z2dpbmdcIjp7XCJpZFwiOlwibWFuLXNocnVnZ2luZ1wiLFwibmFtZVwiOlwiTWFuIFNocnVnZ2luZ1wiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJib3lcIixcImNvbmZ1c2VkXCIsXCJpbmRpZmZlcmVudFwiLFwiZG91YnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzNy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzdcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzctMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM3XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM3LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzN1x1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNy0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzdcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzctMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM3XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM3LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzN1x1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi1zaHJ1Z2dpbmdcIjp7XCJpZFwiOlwid29tYW4tc2hydWdnaW5nXCIsXCJuYW1lXCI6XCJXb21hbiBTaHJ1Z2dpbmdcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJnaXJsXCIsXCJjb25mdXNlZFwiLFwiaW5kaWZmZXJlbnRcIixcImRvdWJ0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MzctMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM3XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM3LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzN1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNy0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzdcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzctMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM3XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM3LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzN1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNy0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzdcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwiaGVhbHRoX3dvcmtlclwiOntcImlkXCI6XCJoZWFsdGhfd29ya2VyXCIsXCJuYW1lXCI6XCJIZWFsdGggV29ya2VyXCIsXCJrZXl3b3Jkc1wiOltcImhvc3BpdGFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0yNjk1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHUyNjk1XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMjY5NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY5NVx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmYy0yMDBkLTI2OTUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdTI2OTVcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0yNjk1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHUyNjk1XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMjY5NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY5NVx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZi0yMDBkLTI2OTUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdTI2OTVcdUZFMEZcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS1kb2N0b3JcIjp7XCJpZFwiOlwibWFsZS1kb2N0b3JcIixcIm5hbWVcIjpcIk1hbiBIZWFsdGggV29ya2VyXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcImRvY3RvclwiLFwibnVyc2VcIixcInRoZXJhcGlzdFwiLFwiaGVhbHRoY2FyZVwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTI2OTUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdTI2OTVcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmItMjAwZC0yNjk1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHUyNjk1XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMjY5NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY5NVx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTI2OTUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkRcdTIwMERcdTI2OTVcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmUtMjAwZC0yNjk1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHUyNjk1XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMjY5NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY5NVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtZG9jdG9yXCI6e1wiaWRcIjpcImZlbWFsZS1kb2N0b3JcIixcIm5hbWVcIjpcIldvbWFuIEhlYWx0aCBXb3JrZXJcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJkb2N0b3JcIixcIm51cnNlXCIsXCJ0aGVyYXBpc3RcIixcImhlYWx0aGNhcmVcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0yNjk1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHUyNjk1XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZiLTIwMGQtMjY5NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY5NVx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTI2OTUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdTI2OTVcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0yNjk1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZEXHUyMDBEXHUyNjk1XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZlLTIwMGQtMjY5NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY5NVx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTI2OTUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdTI2OTVcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwic3R1ZGVudFwiOntcImlkXCI6XCJzdHVkZW50XCIsXCJuYW1lXCI6XCJTdHVkZW50XCIsXCJrZXl3b3Jkc1wiOltcImxlYXJuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGOTNcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS1zdHVkZW50XCI6e1wiaWRcIjpcIm1hbGUtc3R1ZGVudFwiLFwibmFtZVwiOlwiTWFuIFN0dWRlbnRcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwiZ3JhZHVhdGVcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmItMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmMtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmQtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmUtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGOTNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmYtMjAwZC0xZjM5M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGOTNcIn1dLFwidmVyc2lvblwiOjR9LFwiZmVtYWxlLXN0dWRlbnRcIjp7XCJpZFwiOlwiZmVtYWxlLXN0dWRlbnRcIixcIm5hbWVcIjpcIldvbWFuIFN0dWRlbnRcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJncmFkdWF0ZVwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmMzkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1RDgzQ1x1REY5M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTFmMzkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzQ1x1REY5M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTFmMzkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzQ1x1REY5M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTFmMzkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzQ1x1REY5M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTFmMzkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzQ1x1REY5M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTFmMzkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzQ1x1REY5M1wifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ0ZWFjaGVyXCI6e1wiaWRcIjpcInRlYWNoZXJcIixcIm5hbWVcIjpcIlRlYWNoZXJcIixcImtleXdvcmRzXCI6W1wicHJvZmVzc29yXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjNlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0NcdURGRUJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjNlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGRUJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjNlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGRUJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjNlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGRUJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjNlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGRUJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjNlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGRUJcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS10ZWFjaGVyXCI6e1wiaWRcIjpcIm1hbGUtdGVhY2hlclwiLFwibmFtZVwiOlwiTWFuIFRlYWNoZXJcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwiaW5zdHJ1Y3RvclwiLFwicHJvZmVzc29yXCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZkLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXHUyMDBEXHVEODNDXHVERkVCXCJ9XSxcInZlcnNpb25cIjo0fSxcImZlbWFsZS10ZWFjaGVyXCI6e1wiaWRcIjpcImZlbWFsZS10ZWFjaGVyXCIsXCJuYW1lXCI6XCJXb21hbiBUZWFjaGVyXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiLFwiaW5zdHJ1Y3RvclwiLFwicHJvZmVzc29yXCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZiLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZDXHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZkLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZEXHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZlLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHVEODNDXHVERkVCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZGXHUyMDBEXHVEODNDXHVERkVCXCJ9XSxcInZlcnNpb25cIjo0fSxcImp1ZGdlXCI6e1wiaWRcIjpcImp1ZGdlXCIsXCJuYW1lXCI6XCJKdWRnZVwiLFwia2V5d29yZHNcIjpbXCJsYXdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkMS0yMDBkLTI2OTYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdTI2OTZcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0yNjk2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHUyNjk2XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMjY5Ni1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY5Nlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZC0yMDBkLTI2OTYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdTI2OTZcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0yNjk2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHUyNjk2XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMjY5Ni1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRlx1MjAwRFx1MjY5Nlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MTIuMX0sXCJtYWxlLWp1ZGdlXCI6e1wiaWRcIjpcIm1hbGUtanVkZ2VcIixcIm5hbWVcIjpcIk1hbiBKdWRnZVwiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJqdXN0aWNlXCIsXCJjb3VydFwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTI2OTYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdTI2OTZcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmItMjAwZC0yNjk2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHUyNjk2XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMjY5Ni1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY5Nlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTI2OTYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkRcdTIwMERcdTI2OTZcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmUtMjAwZC0yNjk2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHUyNjk2XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMjY5Ni1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY5Nlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtanVkZ2VcIjp7XCJpZFwiOlwiZmVtYWxlLWp1ZGdlXCIsXCJuYW1lXCI6XCJXb21hbiBKdWRnZVwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImp1c3RpY2VcIixcImNvdXJ0XCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMjY5Ni1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1MjY5Nlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTI2OTYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdTI2OTZcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0yNjk2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZDXHUyMDBEXHUyNjk2XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZkLTIwMGQtMjY5Ni1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY5Nlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTI2OTYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdTI2OTZcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0yNjk2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZGXHUyMDBEXHUyNjk2XHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcImZhcm1lclwiOntcImlkXCI6XCJmYXJtZXJcIixcIm5hbWVcIjpcIkZhcm1lclwiLFwia2V5d29yZHNcIjpbXCJjcm9wc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNDXHVERjNFXCJ9XSxcInZlcnNpb25cIjoxMi4xfSxcIm1hbGUtZmFybWVyXCI6e1wiaWRcIjpcIm1hbGUtZmFybWVyXCIsXCJuYW1lXCI6XCJNYW4gRmFybWVyXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcInJhbmNoZXJcIixcImdhcmRlbmVyXCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZkLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHVEODNDXHVERjNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMWYzM2VcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXHUyMDBEXHVEODNDXHVERjNFXCJ9XSxcInZlcnNpb25cIjo0fSxcImZlbWFsZS1mYXJtZXJcIjp7XCJpZFwiOlwiZmVtYWxlLWZhcm1lclwiLFwibmFtZVwiOlwiV29tYW4gRmFybWVyXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiLFwicmFuY2hlclwiLFwiZ2FyZGVuZXJcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjMzZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0NcdURGM0VcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0xZjMzZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGM0VcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0xZjMzZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGM0VcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0xZjMzZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGM0VcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0xZjMzZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGM0VcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0xZjMzZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGM0VcIn1dLFwidmVyc2lvblwiOjR9LFwiY29va1wiOntcImlkXCI6XCJjb29rXCIsXCJuYW1lXCI6XCJDb29rXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImtpdGNoZW5cIixcImN1bGluYXJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGNzNcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS1jb29rXCI6e1wiaWRcIjpcIm1hbGUtY29va1wiLFwibmFtZVwiOlwiTWFuIENvb2tcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwiY2hlZlwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmMzczXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzQ1x1REY3M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTFmMzczXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzQ1x1REY3M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTFmMzczXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzQ1x1REY3M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTFmMzczXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzQ1x1REY3M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTFmMzczXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzQ1x1REY3M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTFmMzczXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzQ1x1REY3M1wifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtY29va1wiOntcImlkXCI6XCJmZW1hbGUtY29va1wiLFwibmFtZVwiOlwiV29tYW4gQ29va1wiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImNoZWZcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGNzNcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0xZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGNzNcIn1dLFwidmVyc2lvblwiOjR9LFwibWVjaGFuaWNcIjp7XCJpZFwiOlwibWVjaGFuaWNcIixcIm5hbWVcIjpcIk1lY2hhbmljXCIsXCJrZXl3b3Jkc1wiOltcIndvcmtlclwiLFwidGVjaG5pY2lhblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWY1MjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNEXHVERDI3XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWY1MjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNEXHVERDI3XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWY1MjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNEXHVERDI3XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWY1MjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNEXHVERDI3XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWY1MjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNEXHVERDI3XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWY1MjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNEXHVERDI3XCJ9XSxcInZlcnNpb25cIjoxMi4xfSxcIm1hbGUtbWVjaGFuaWNcIjp7XCJpZFwiOlwibWFsZS1tZWNoYW5pY1wiLFwibmFtZVwiOlwiTWFuIE1lY2hhbmljXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcInBsdW1iZXJcIixcImh1bWFuXCIsXCJ3cmVuY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRFx1REQyN1wifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtbWVjaGFuaWNcIjp7XCJpZFwiOlwiZmVtYWxlLW1lY2hhbmljXCIsXCJuYW1lXCI6XCJXb21hbiBNZWNoYW5pY1wiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcInBsdW1iZXJcIixcImh1bWFuXCIsXCJ3cmVuY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRFx1REQyN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTFmNTI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRFx1REQyN1wifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmYWN0b3J5X3dvcmtlclwiOntcImlkXCI6XCJmYWN0b3J5X3dvcmtlclwiLFwibmFtZVwiOlwiRmFjdG9yeSBXb3JrZXJcIixcImtleXdvcmRzXCI6W1wibGFib3JcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkMS0yMDBkLTFmM2VkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1MjAwRFx1RDgzQ1x1REZFRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmYi0yMDBkLTFmM2VkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzQ1x1REZFRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmYy0yMDBkLTFmM2VkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzQ1x1REZFRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZC0yMDBkLTFmM2VkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzQ1x1REZFRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZS0yMDBkLTFmM2VkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzQ1x1REZFRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZi0yMDBkLTFmM2VkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzQ1x1REZFRFwifV0sXCJ2ZXJzaW9uXCI6MTIuMX0sXCJtYWxlLWZhY3Rvcnktd29ya2VyXCI6e1wiaWRcIjpcIm1hbGUtZmFjdG9yeS13b3JrZXJcIixcIm5hbWVcIjpcIk1hbiBGYWN0b3J5IFdvcmtlclwiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJmYWN0b3J5LXdvcmtlclwiLFwiYXNzZW1ibHlcIixcImluZHVzdHJpYWxcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmItMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmMtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmQtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmUtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmYtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGRURcIn1dLFwidmVyc2lvblwiOjR9LFwiZmVtYWxlLWZhY3Rvcnktd29ya2VyXCI6e1wiaWRcIjpcImZlbWFsZS1mYWN0b3J5LXdvcmtlclwiLFwibmFtZVwiOlwiV29tYW4gRmFjdG9yeSBXb3JrZXJcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJmYWN0b3J5LXdvcmtlclwiLFwiYXNzZW1ibHlcIixcImluZHVzdHJpYWxcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGRURcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0xZjNlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGRURcIn1dLFwidmVyc2lvblwiOjR9LFwib2ZmaWNlX3dvcmtlclwiOntcImlkXCI6XCJvZmZpY2Vfd29ya2VyXCIsXCJuYW1lXCI6XCJPZmZpY2UgV29ya2VyXCIsXCJrZXl3b3Jkc1wiOltcImJ1c2luZXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0RcdURDQkNcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS1vZmZpY2Utd29ya2VyXCI6e1wiaWRcIjpcIm1hbGUtb2ZmaWNlLXdvcmtlclwiLFwibmFtZVwiOlwiTWFuIE9mZmljZSBXb3JrZXJcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwib2ZmaWNlLXdvcmtlclwiLFwiYnVzaW5lc3NcIixcIm1hbmFnZXJcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmItMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmMtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmQtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmUtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0RcdURDQkNcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmYtMjAwZC0xZjRiY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0RcdURDQkNcIn1dLFwidmVyc2lvblwiOjR9LFwiZmVtYWxlLW9mZmljZS13b3JrZXJcIjp7XCJpZFwiOlwiZmVtYWxlLW9mZmljZS13b3JrZXJcIixcIm5hbWVcIjpcIldvbWFuIE9mZmljZSBXb3JrZXJcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJvZmZpY2Utd29ya2VyXCIsXCJidXNpbmVzc1wiLFwibWFuYWdlclwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmNGJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1RDgzRFx1RENCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTFmNGJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRFx1RENCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTFmNGJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRFx1RENCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTFmNGJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRFx1RENCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTFmNGJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRFx1RENCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTFmNGJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRFx1RENCQ1wifV0sXCJ2ZXJzaW9uXCI6NH0sXCJzY2llbnRpc3RcIjp7XCJpZFwiOlwic2NpZW50aXN0XCIsXCJuYW1lXCI6XCJTY2llbnRpc3RcIixcImtleXdvcmRzXCI6W1wiY2hlbWlzdHJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjUyY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0RcdUREMkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjUyY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0RcdUREMkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjUyY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0RcdUREMkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjUyY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0RcdUREMkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjUyY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0RcdUREMkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjUyY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0RcdUREMkNcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS1zY2llbnRpc3RcIjp7XCJpZFwiOlwibWFsZS1zY2llbnRpc3RcIixcIm5hbWVcIjpcIk1hbiBTY2llbnRpc3RcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwiYmlvbG9naXN0XCIsXCJjaGVtaXN0XCIsXCJlbmdpbmVlclwiLFwicGh5c2ljaXN0XCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZkLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXHUyMDBEXHVEODNEXHVERDJDXCJ9XSxcInZlcnNpb25cIjo0fSxcImZlbWFsZS1zY2llbnRpc3RcIjp7XCJpZFwiOlwiZmVtYWxlLXNjaWVudGlzdFwiLFwibmFtZVwiOlwiV29tYW4gU2NpZW50aXN0XCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiLFwiYmlvbG9naXN0XCIsXCJjaGVtaXN0XCIsXCJlbmdpbmVlclwiLFwicGh5c2ljaXN0XCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZiLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZDXHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZkLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZEXHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZlLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHVEODNEXHVERDJDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZGXHUyMDBEXHVEODNEXHVERDJDXCJ9XSxcInZlcnNpb25cIjo0fSxcInRlY2hub2xvZ2lzdFwiOntcImlkXCI6XCJ0ZWNobm9sb2dpc3RcIixcIm5hbWVcIjpcIlRlY2hub2xvZ2lzdFwiLFwia2V5d29yZHNcIjpbXCJjb21wdXRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWY0YmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNEXHVEQ0JCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWY0YmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNEXHVEQ0JCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWY0YmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNEXHVEQ0JCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWY0YmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNEXHVEQ0JCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWY0YmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNEXHVEQ0JCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWY0YmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNEXHVEQ0JCXCJ9XSxcInZlcnNpb25cIjoxMi4xfSxcIm1hbGUtdGVjaG5vbG9naXN0XCI6e1wiaWRcIjpcIm1hbGUtdGVjaG5vbG9naXN0XCIsXCJuYW1lXCI6XCJNYW4gVGVjaG5vbG9naXN0XCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcImNvZGVyXCIsXCJkZXZlbG9wZXJcIixcImVuZ2luZWVyXCIsXCJwcm9ncmFtbWVyXCIsXCJzb2Z0d2FyZVwiLFwiaHVtYW5cIixcImxhcHRvcFwiLFwiY29tcHV0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRFx1RENCQlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtdGVjaG5vbG9naXN0XCI6e1wiaWRcIjpcImZlbWFsZS10ZWNobm9sb2dpc3RcIixcIm5hbWVcIjpcIldvbWFuIFRlY2hub2xvZ2lzdFwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImNvZGVyXCIsXCJkZXZlbG9wZXJcIixcImVuZ2luZWVyXCIsXCJwcm9ncmFtbWVyXCIsXCJzb2Z0d2FyZVwiLFwiaHVtYW5cIixcImxhcHRvcFwiLFwiY29tcHV0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRFx1RENCQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTFmNGJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRFx1RENCQlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJzaW5nZXJcIjp7XCJpZFwiOlwic2luZ2VyXCIsXCJuYW1lXCI6XCJTaW5nZXJcIixcImtleXdvcmRzXCI6W1wic29uZ1wiLFwiYXJ0aXN0XCIsXCJwZXJmb3JtZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkMS0yMDBkLTFmM2E0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1MjAwRFx1RDgzQ1x1REZBNFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmYi0yMDBkLTFmM2E0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzQ1x1REZBNFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmYy0yMDBkLTFmM2E0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzQ1x1REZBNFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZC0yMDBkLTFmM2E0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzQ1x1REZBNFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZS0yMDBkLTFmM2E0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzQ1x1REZBNFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZi0yMDBkLTFmM2E0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzQ1x1REZBNFwifV0sXCJ2ZXJzaW9uXCI6MTIuMX0sXCJtYWxlLXNpbmdlclwiOntcImlkXCI6XCJtYWxlLXNpbmdlclwiLFwibmFtZVwiOlwiTWFuIFNpbmdlclwiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJyb2Nrc3RhclwiLFwiZW50ZXJ0YWluZXJcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmItMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmMtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmQtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmUtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmYtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGQTRcIn1dLFwidmVyc2lvblwiOjR9LFwiZmVtYWxlLXNpbmdlclwiOntcImlkXCI6XCJmZW1hbGUtc2luZ2VyXCIsXCJuYW1lXCI6XCJXb21hbiBTaW5nZXJcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJyb2Nrc3RhclwiLFwiZW50ZXJ0YWluZXJcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGQTRcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0xZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGQTRcIn1dLFwidmVyc2lvblwiOjR9LFwiYXJ0aXN0XCI6e1wiaWRcIjpcImFydGlzdFwiLFwibmFtZVwiOlwiQXJ0aXN0XCIsXCJrZXl3b3Jkc1wiOltcInBhaW50aW5nXCIsXCJkcmF3XCIsXCJjcmVhdGl2aXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGQThcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS1hcnRpc3RcIjp7XCJpZFwiOlwibWFsZS1hcnRpc3RcIixcIm5hbWVcIjpcIk1hbiBBcnRpc3RcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwicGFpbnRlclwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmM2E4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzQ1x1REZBOFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTFmM2E4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzQ1x1REZBOFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTFmM2E4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzQ1x1REZBOFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTFmM2E4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzQ1x1REZBOFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTFmM2E4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzQ1x1REZBOFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTFmM2E4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzQ1x1REZBOFwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtYXJ0aXN0XCI6e1wiaWRcIjpcImZlbWFsZS1hcnRpc3RcIixcIm5hbWVcIjpcIldvbWFuIEFydGlzdFwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcInBhaW50ZXJcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGQThcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0xZjNhOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGQThcIn1dLFwidmVyc2lvblwiOjR9LFwicGlsb3RcIjp7XCJpZFwiOlwicGlsb3RcIixcIm5hbWVcIjpcIlBpbG90XCIsXCJrZXl3b3Jkc1wiOltcImZseVwiLFwicGxhbmVcIixcImFpcnBsYW5lXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0yNzA4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHUyNzA4XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMjcwOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQlx1MjAwRFx1MjcwOFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmYy0yMDBkLTI3MDgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdTI3MDhcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0yNzA4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHUyNzA4XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMjcwOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRVx1MjAwRFx1MjcwOFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZi0yMDBkLTI3MDgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdTI3MDhcdUZFMEZcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS1waWxvdFwiOntcImlkXCI6XCJtYWxlLXBpbG90XCIsXCJuYW1lXCI6XCJNYW4gUGlsb3RcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwiYXZpYXRvclwiLFwicGxhbmVcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0yNzA4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHUyNzA4XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMjcwOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1MjcwOFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTI3MDgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkNcdTIwMERcdTI3MDhcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmQtMjAwZC0yNzA4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHUyNzA4XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMjcwOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1MjcwOFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTI3MDgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkZcdTIwMERcdTI3MDhcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwiZmVtYWxlLXBpbG90XCI6e1wiaWRcIjpcImZlbWFsZS1waWxvdFwiLFwibmFtZVwiOlwiV29tYW4gUGlsb3RcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJhdmlhdG9yXCIsXCJwbGFuZVwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTI3MDgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdTI3MDhcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0yNzA4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHUyNzA4XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMjcwOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjcwOFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTI3MDgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdTI3MDhcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0yNzA4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHUyNzA4XHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMjcwOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1MjcwOFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJhc3Ryb25hdXRcIjp7XCJpZFwiOlwiYXN0cm9uYXV0XCIsXCJuYW1lXCI6XCJBc3Ryb25hdXRcIixcImtleXdvcmRzXCI6W1wib3V0ZXJzcGFjZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNEXHVERTgwXCJ9XSxcInZlcnNpb25cIjoxMi4xfSxcIm1hbGUtYXN0cm9uYXV0XCI6e1wiaWRcIjpcIm1hbGUtYXN0cm9uYXV0XCIsXCJuYW1lXCI6XCJNYW4gQXN0cm9uYXV0XCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcInNwYWNlXCIsXCJyb2NrZXRcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjY4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURFODBcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmItMjAwZC0xZjY4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0RcdURFODBcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmMtMjAwZC0xZjY4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0RcdURFODBcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmQtMjAwZC0xZjY4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0RcdURFODBcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmUtMjAwZC0xZjY4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0RcdURFODBcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmYtMjAwZC0xZjY4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0RcdURFODBcIn1dLFwidmVyc2lvblwiOjR9LFwiZmVtYWxlLWFzdHJvbmF1dFwiOntcImlkXCI6XCJmZW1hbGUtYXN0cm9uYXV0XCIsXCJuYW1lXCI6XCJXb21hbiBBc3Ryb25hdXRcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJzcGFjZVwiLFwicm9ja2V0XCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZiLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZDXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZkLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZEXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZlLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHVEODNEXHVERTgwXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMWY2ODBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZGXHUyMDBEXHVEODNEXHVERTgwXCJ9XSxcInZlcnNpb25cIjo0fSxcImZpcmVmaWdodGVyXCI6e1wiaWRcIjpcImZpcmVmaWdodGVyXCIsXCJuYW1lXCI6XCJGaXJlZmlnaHRlclwiLFwia2V5d29yZHNcIjpbXCJmaXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0RcdURFOTJcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFsZS1maXJlZmlnaHRlclwiOntcImlkXCI6XCJtYWxlLWZpcmVmaWdodGVyXCIsXCJuYW1lXCI6XCJNYW4gRmlyZWZpZ2h0ZXJcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwiZmlyZW1hblwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmNjkyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRFx1REU5MlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTFmNjkyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRFx1REU5MlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTFmNjkyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRFx1REU5MlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTFmNjkyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRFx1REU5MlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTFmNjkyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRFx1REU5MlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTFmNjkyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRFx1REU5MlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtZmlyZWZpZ2h0ZXJcIjp7XCJpZFwiOlwiZmVtYWxlLWZpcmVmaWdodGVyXCIsXCJuYW1lXCI6XCJXb21hbiBGaXJlZmlnaHRlclwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImZpcmVtYW5cIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0RcdURFOTJcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0xZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0RcdURFOTJcIn1dLFwidmVyc2lvblwiOjR9LFwiY29wXCI6e1wiaWRcIjpcImNvcFwiLFwibmFtZVwiOlwiUG9saWNlIE9mZmljZXJcIixcImtleXdvcmRzXCI6W1wiY29wXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDZlLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2RVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2ZS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkVcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NmUtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZFXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDZlLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2RVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2ZS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkVcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFsZS1wb2xpY2Utb2ZmaWNlclwiOntcImlkXCI6XCJtYWxlLXBvbGljZS1vZmZpY2VyXCIsXCJuYW1lXCI6XCJNYW4gUG9saWNlIE9mZmljZXJcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwicG9saWNlLW9mZmljZXJcIixcImxhd1wiLFwibGVnYWxcIixcImVuZm9yY2VtZW50XCIsXCJhcnJlc3RcIixcIjkxMVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2RVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2ZS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkVcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NmUtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZFXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDZlLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2RVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2ZS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkVcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NmUtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZFXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcImZlbWFsZS1wb2xpY2Utb2ZmaWNlclwiOntcImlkXCI6XCJmZW1hbGUtcG9saWNlLW9mZmljZXJcIixcIm5hbWVcIjpcIldvbWFuIFBvbGljZSBPZmZpY2VyXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiLFwicG9saWNlLW9mZmljZXJcIixcImxhd1wiLFwibGVnYWxcIixcImVuZm9yY2VtZW50XCIsXCJhcnJlc3RcIixcIjkxMVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2RVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2ZS0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkVcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NmUtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZFXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDZlLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2RVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2ZS0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkVcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NmUtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZFXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcInNsZXV0aF9vcl9zcHlcIjp7XCJpZFwiOlwic2xldXRoX29yX3NweVwiLFwibmFtZVwiOlwiRGV0ZWN0aXZlXCIsXCJrZXl3b3Jkc1wiOltcInNsZXV0aFwiLFwib3JcIixcInNweVwiLFwiaHVtYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU3NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3NVx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjU3NS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzVcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY1NzUtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc1XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTc1LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3NVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjU3NS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzVcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY1NzUtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc1XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbGUtZGV0ZWN0aXZlXCI6e1wiaWRcIjpcIm1hbGUtZGV0ZWN0aXZlXCIsXCJuYW1lXCI6XCJNYW4gRGV0ZWN0aXZlXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcImNyaW1lXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NzUtZmUwZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzVcdUZFMEZcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY1NzUtMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc1XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTc1LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3NVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjU3NS0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzVcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY1NzUtMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc1XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTc1LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3NVx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtZGV0ZWN0aXZlXCI6e1wiaWRcIjpcImZlbWFsZS1kZXRlY3RpdmVcIixcIm5hbWVcIjpcIldvbWFuIERldGVjdGl2ZVwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImh1bWFuXCIsXCJzcHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU3NS1mZTBmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3NVx1RkUwRlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjU3NS0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzVcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY1NzUtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc1XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTc1LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3NVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjU3NS0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzVcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY1NzUtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc1XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcImd1YXJkc21hblwiOntcImlkXCI6XCJndWFyZHNtYW5cIixcIm5hbWVcIjpcIkd1YXJkXCIsXCJrZXl3b3Jkc1wiOltcImd1YXJkc21hblwiLFwicHJvdGVjdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDgyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4MlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Mi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODJcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0ODItMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgyXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgyLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Mlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Mi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODJcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0ODItMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgyXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbGUtZ3VhcmRcIjp7XCJpZFwiOlwibWFsZS1ndWFyZFwiLFwibmFtZVwiOlwiTWFuIEd1YXJkXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcInVrXCIsXCJnYlwiLFwiYnJpdGlzaFwiLFwiZ3V5XCIsXCJyb3lhbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDgyLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Mlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Mi0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODJcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODItMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgyXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgyLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Mlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Mi0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODJcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODItMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgyXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcImZlbWFsZS1ndWFyZFwiOntcImlkXCI6XCJmZW1hbGUtZ3VhcmRcIixcIm5hbWVcIjpcIldvbWFuIEd1YXJkXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiLFwidWtcIixcImdiXCIsXCJicml0aXNoXCIsXCJyb3lhbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDgyLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Mlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Mi0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODJcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODItMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgyXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgyLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Mlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Mi0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODJcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODItMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgyXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIm5pbmphXCI6e1wiaWRcIjpcIm5pbmphXCIsXCJuYW1lXCI6XCJOaW5qYVwiLFwia2V5d29yZHNcIjpbXCJuaW5qdXRzdVwiLFwic2tpbGxzXCIsXCJqYXBhbmVzZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTc3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ3N1wifSx7XCJ1bmlmaWVkXCI6XCIxZjk3Ny0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENzdcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5NzctMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDc3XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTc3LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ3N1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjk3Ny0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENzdcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5NzctMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDc3XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxM30sXCJjb25zdHJ1Y3Rpb25fd29ya2VyXCI6e1wiaWRcIjpcImNvbnN0cnVjdGlvbl93b3JrZXJcIixcIm5hbWVcIjpcIkNvbnN0cnVjdGlvbiBXb3JrZXJcIixcImtleXdvcmRzXCI6W1wibGFib3JcIixcImJ1aWxkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NzdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc3XCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc3LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3N1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Ny0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzdcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NzctMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc3XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc3LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3N1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Ny0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzdcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFsZS1jb25zdHJ1Y3Rpb24td29ya2VyXCI6e1wiaWRcIjpcIm1hbGUtY29uc3RydWN0aW9uLXdvcmtlclwiLFwibmFtZVwiOlwiTWFuIENvbnN0cnVjdGlvbiBXb3JrZXJcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwiY29uc3RydWN0aW9uLXdvcmtlclwiLFwiaHVtYW5cIixcIndpcFwiLFwiZ3V5XCIsXCJidWlsZFwiLFwibGFib3JcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3Ny0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzdcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzctMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc3XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc3LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3N1x1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Ny0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzdcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzctMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc3XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc3LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3N1x1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJmZW1hbGUtY29uc3RydWN0aW9uLXdvcmtlclwiOntcImlkXCI6XCJmZW1hbGUtY29uc3RydWN0aW9uLXdvcmtlclwiLFwibmFtZVwiOlwiV29tYW4gQ29uc3RydWN0aW9uIFdvcmtlclwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImNvbnN0cnVjdGlvbi13b3JrZXJcIixcImh1bWFuXCIsXCJ3aXBcIixcImJ1aWxkXCIsXCJsYWJvclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDc3LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3N1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Ny0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzdcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzctMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc3XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc3LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3N1x1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Ny0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzdcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzctMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc3XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcInBlcnNvbl93aXRoX2Nyb3duXCI6e1wiaWRcIjpcInBlcnNvbl93aXRoX2Nyb3duXCIsXCJuYW1lXCI6XCJQZXJzb24gd2l0aCBDcm93blwiLFwia2V5d29yZHNcIjpbXCJyb3lhbHR5XCIsXCJwb3dlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWM1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVDNVwifSx7XCJ1bmlmaWVkXCI6XCIxZmFjNS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQzVcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWZhYzUtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUM1XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWM1LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVDNVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZmFjNS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQzVcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWZhYzUtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUM1XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJwcmluY2VcIjp7XCJpZFwiOlwicHJpbmNlXCIsXCJuYW1lXCI6XCJQcmluY2VcIixcImtleXdvcmRzXCI6W1wiYm95XCIsXCJtYW5cIixcIm1hbGVcIixcImNyb3duXCIsXCJyb3lhbFwiLFwia2luZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTM0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzRcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5MzQtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM0XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM0LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzRcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5MzQtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM0XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjozfSxcInByaW5jZXNzXCI6e1wiaWRcIjpcInByaW5jZXNzXCIsXCJuYW1lXCI6XCJQcmluY2Vzc1wiLFwia2V5d29yZHNcIjpbXCJnaXJsXCIsXCJ3b21hblwiLFwiZmVtYWxlXCIsXCJibG9uZFwiLFwiY3Jvd25cIixcInJveWFsXCIsXCJxdWVlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDc4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3OFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3OC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzhcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NzgtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc4XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDc4LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3OFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3OC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzhcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NzgtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzc4XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbl93aXRoX3R1cmJhblwiOntcImlkXCI6XCJtYW5fd2l0aF90dXJiYW5cIixcIm5hbWVcIjpcIk1hbiB3aXRoIFR1cmJhblwiLFwia2V5d29yZHNcIjpbXCJwZXJzb25cIixcIndlYXJpbmdcIixcImhlYWRkcmVzc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDczXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3M1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3My0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzNcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NzMtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzczXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDczLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3M1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3My0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzNcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NzMtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzczXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi13ZWFyaW5nLXR1cmJhblwiOntcImlkXCI6XCJtYW4td2VhcmluZy10dXJiYW5cIixcIm5hbWVcIjpcIk1hbiBXZWFyaW5nIFR1cmJhblwiLFwia2V5d29yZHNcIjpbXCJ3ZWFyaW5nLXR1cmJhblwiLFwibWFsZVwiLFwiaW5kaWFuXCIsXCJoaW5kdWlzbVwiLFwiYXJhYnNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3My0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzMtMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzczXHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDczLTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3M1x1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3My0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzNcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzMtMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzczXHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDczLTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3M1x1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi13ZWFyaW5nLXR1cmJhblwiOntcImlkXCI6XCJ3b21hbi13ZWFyaW5nLXR1cmJhblwiLFwibmFtZVwiOlwiV29tYW4gV2VhcmluZyBUdXJiYW5cIixcImtleXdvcmRzXCI6W1wid2VhcmluZy10dXJiYW5cIixcImZlbWFsZVwiLFwiaW5kaWFuXCIsXCJoaW5kdWlzbVwiLFwiYXJhYnNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3My0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzMtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzczXHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDczLTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3M1x1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3My0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzNcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzMtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzczXHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDczLTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3M1x1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJtYW5fd2l0aF9ndWFfcGlfbWFvXCI6e1wiaWRcIjpcIm1hbl93aXRoX2d1YV9waV9tYW9cIixcIm5hbWVcIjpcIk1hbiB3aXRoIEd1YSBQaSBNYW9cIixcImtleXdvcmRzXCI6W1wic2t1bGxjYXBcIixcIm1hbGVcIixcImJveVwiLFwiY2hpbmVzZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDcyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Mi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzJcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NzItMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcyXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcyLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3Mlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Mi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzJcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NzItMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcyXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBlcnNvbl93aXRoX2hlYWRzY2FyZlwiOntcImlkXCI6XCJwZXJzb25fd2l0aF9oZWFkc2NhcmZcIixcIm5hbWVcIjpcIldvbWFuIHdpdGggSGVhZHNjYXJmXCIsXCJrZXl3b3Jkc1wiOltcInBlcnNvblwiLFwiZmVtYWxlXCIsXCJoaWphYlwiLFwibWFudGlsbGFcIixcInRpY2hlbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENVwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDVcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5ZDUtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ1XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ1LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDVcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5ZDUtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ1XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjo1fSxcInBlcnNvbl9pbl90dXhlZG9cIjp7XCJpZFwiOlwicGVyc29uX2luX3R1eGVkb1wiLFwibmFtZVwiOlwiTWFuIGluIFR1eGVkb1wiLFwia2V5d29yZHNcIjpbXCJwZXJzb25cIixcImNvdXBsZVwiLFwibWFycmlhZ2VcIixcIndlZGRpbmdcIixcImdyb29tXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MzVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM1XCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM1LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzVcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5MzUtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM1XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM1LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzVcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjN9LFwibWFuX2luX3R1eGVkb1wiOntcImlkXCI6XCJtYW5faW5fdHV4ZWRvXCIsXCJuYW1lXCI6XCJNYW4gaW4gVHV4ZWRvXCIsXCJrZXl3b3Jkc1wiOltcImZvcm1hbFwiLFwiZmFzaGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTM1LTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzVcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzUtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM1XHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM1LTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzVcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzUtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM1XHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxM30sXCJ3b21hbl9pbl90dXhlZG9cIjp7XCJpZFwiOlwid29tYW5faW5fdHV4ZWRvXCIsXCJuYW1lXCI6XCJXb21hbiBpbiBUdXhlZG9cIixcImtleXdvcmRzXCI6W1wiZm9ybWFsXCIsXCJmYXNoaW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MzUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM1XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM1LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNS0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzVcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzUtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM1XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM1LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNS0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzVcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjEzfSxcImJyaWRlX3dpdGhfdmVpbFwiOntcImlkXCI6XCJicmlkZV93aXRoX3ZlaWxcIixcIm5hbWVcIjpcIkJyaWRlIHdpdGggVmVpbFwiLFwia2V5d29yZHNcIjpbXCJjb3VwbGVcIixcIm1hcnJpYWdlXCIsXCJ3ZWRkaW5nXCIsXCJ3b21hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDcwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzBcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NzAtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcwXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcwLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzBcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NzAtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcwXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbl93aXRoX3ZlaWxcIjp7XCJpZFwiOlwibWFuX3dpdGhfdmVpbFwiLFwibmFtZVwiOlwiTWFuIHdpdGggVmVpbFwiLFwia2V5d29yZHNcIjpbXCJ3ZWRkaW5nXCIsXCJtYXJyaWFnZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDcwLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MC0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzBcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzAtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcwXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcwLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MFx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MC0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzBcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzAtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcwXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxM30sXCJ3b21hbl93aXRoX3ZlaWxcIjp7XCJpZFwiOlwid29tYW5fd2l0aF92ZWlsXCIsXCJuYW1lXCI6XCJXb21hbiB3aXRoIFZlaWxcIixcImtleXdvcmRzXCI6W1wid2VkZGluZ1wiLFwibWFycmlhZ2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ3MC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzBcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzAtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcwXHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcwLTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3MC0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNzBcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0NzAtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzcwXHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDcwLTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3MFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwicHJlZ25hbnRfd29tYW5cIjp7XCJpZFwiOlwicHJlZ25hbnRfd29tYW5cIixcIm5hbWVcIjpcIlByZWduYW50IFdvbWFuXCIsXCJrZXl3b3Jkc1wiOltcImJhYnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzBcIn0se1widW5pZmllZFwiOlwiMWY5MzAtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDMwXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTMwLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzMFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjkzMC0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzBcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5MzAtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDMwXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTMwLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzMFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6M30sXCJwcmVnbmFudF9tYW5cIjp7XCJpZFwiOlwicHJlZ25hbnRfbWFuXCIsXCJuYW1lXCI6XCJQcmVnbmFudCBNYW5cIixcImtleXdvcmRzXCI6W1wiYmFieVwiLFwiYmVsbHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFjM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQzNcIn0se1widW5pZmllZFwiOlwiMWZhYzMtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUMzXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWMzLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVDM1x1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZmFjMy0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQzNcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWZhYzMtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUMzXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWMzLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVDM1x1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwicHJlZ25hbnRfcGVyc29uXCI6e1wiaWRcIjpcInByZWduYW50X3BlcnNvblwiLFwibmFtZVwiOlwiUHJlZ25hbnQgUGVyc29uXCIsXCJrZXl3b3Jkc1wiOltcImJhYnlcIixcImJlbGx5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYzRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUM0XCJ9LHtcInVuaWZpZWRcIjpcIjFmYWM0LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVDNFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZmFjNC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQzRcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWZhYzQtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUM0XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmYWM0LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVDNFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZmFjNC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQzRcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjE0fSxcImJyZWFzdC1mZWVkaW5nXCI6e1wiaWRcIjpcImJyZWFzdC1mZWVkaW5nXCIsXCJuYW1lXCI6XCJCcmVhc3QtRmVlZGluZ1wiLFwia2V5d29yZHNcIjpbXCJicmVhc3RcIixcImZlZWRpbmdcIixcIm51cnNpbmdcIixcImJhYnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzFcIn0se1widW5pZmllZFwiOlwiMWY5MzEtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDMxXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTMxLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzMVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjkzMS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzFcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5MzEtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDMxXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTMxLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzMVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJ3b21hbl9mZWVkaW5nX2JhYnlcIjp7XCJpZFwiOlwid29tYW5fZmVlZGluZ19iYWJ5XCIsXCJuYW1lXCI6XCJXb21hbiBGZWVkaW5nIEJhYnlcIixcImtleXdvcmRzXCI6W1wiYmlydGhcIixcImZvb2RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmMzdjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1RDgzQ1x1REY3Q1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTFmMzdjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzQ1x1REY3Q1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTFmMzdjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzQ1x1REY3Q1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTFmMzdjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzQ1x1REY3Q1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTFmMzdjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzQ1x1REY3Q1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTFmMzdjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzQ1x1REY3Q1wifV0sXCJ2ZXJzaW9uXCI6MTN9LFwibWFuX2ZlZWRpbmdfYmFieVwiOntcImlkXCI6XCJtYW5fZmVlZGluZ19iYWJ5XCIsXCJuYW1lXCI6XCJNYW4gRmVlZGluZyBCYWJ5XCIsXCJrZXl3b3Jkc1wiOltcImJpcnRoXCIsXCJmb29kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjM3Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0NcdURGN0NcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmItMjAwZC0xZjM3Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0NcdURGN0NcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmMtMjAwZC0xZjM3Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0NcdURGN0NcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmQtMjAwZC0xZjM3Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0NcdURGN0NcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmUtMjAwZC0xZjM3Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0NcdURGN0NcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmYtMjAwZC0xZjM3Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0NcdURGN0NcIn1dLFwidmVyc2lvblwiOjEzfSxcInBlcnNvbl9mZWVkaW5nX2JhYnlcIjp7XCJpZFwiOlwicGVyc29uX2ZlZWRpbmdfYmFieVwiLFwibmFtZVwiOlwiUGVyc29uIEZlZWRpbmcgQmFieVwiLFwia2V5d29yZHNcIjpbXCJiaXJ0aFwiLFwiZm9vZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWYzN2NcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNDXHVERjdDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWYzN2NcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNDXHVERjdDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWYzN2NcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNDXHVERjdDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWYzN2NcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNDXHVERjdDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWYzN2NcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNDXHVERjdDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWYzN2NcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNDXHVERjdDXCJ9XSxcInZlcnNpb25cIjoxM30sXCJhbmdlbFwiOntcImlkXCI6XCJhbmdlbFwiLFwibmFtZVwiOlwiQmFieSBBbmdlbFwiLFwia2V5d29yZHNcIjpbXCJoZWF2ZW5cIixcIndpbmdzXCIsXCJoYWxvXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0N2NcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzdDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDdjLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3Q1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Yy0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDN0NcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0N2MtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzdDXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDdjLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM3Q1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ3Yy0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDN0NcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwic2FudGFcIjp7XCJpZFwiOlwic2FudGFcIixcIm5hbWVcIjpcIlNhbnRhIENsYXVzXCIsXCJrZXl3b3Jkc1wiOltcImZlc3RpdmFsXCIsXCJtYW5cIixcIm1hbGVcIixcInhtYXNcIixcImZhdGhlclwiLFwiY2hyaXN0bWFzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzODVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjg1XCJ9LHtcInVuaWZpZWRcIjpcIjFmMzg1LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY4NVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjM4NS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGODVcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWYzODUtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjg1XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmMzg1LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY4NVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjM4NS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGODVcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibXJzX2NsYXVzXCI6e1wiaWRcIjpcIm1yc19jbGF1c1wiLFwibmFtZVwiOlwiTXJzLiBDbGF1c1wiLFwia2V5d29yZHNcIjpbXCJtcnNcIixcIm1vdGhlclwiLFwiY2hyaXN0bWFzXCIsXCJ3b21hblwiLFwiZmVtYWxlXCIsXCJ4bWFzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MzZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM2XCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM2LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5MzYtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM2XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM2LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzNlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzNi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjN9LFwibXhfY2xhdXNcIjp7XCJpZFwiOlwibXhfY2xhdXNcIixcIm5hbWVcIjpcIk14IENsYXVzXCIsXCJrZXl3b3Jkc1wiOltcImNocmlzdG1hc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQxLTIwMGQtMWYzODRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNDXHVERjg0XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWYzODRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZCXHUyMDBEXHVEODNDXHVERjg0XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZjLTIwMGQtMWYzODRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZDXHUyMDBEXHVEODNDXHVERjg0XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZkLTIwMGQtMWYzODRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNDXHVERjg0XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWYzODRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZFXHUyMDBEXHVEODNDXHVERjg0XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZmLTIwMGQtMWYzODRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZGXHUyMDBEXHVEODNDXHVERjg0XCJ9XSxcInZlcnNpb25cIjoxM30sXCJzdXBlcmhlcm9cIjp7XCJpZFwiOlwic3VwZXJoZXJvXCIsXCJuYW1lXCI6XCJTdXBlcmhlcm9cIixcImtleXdvcmRzXCI6W1wibWFydmVsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YjhcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI4XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI4LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjhcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5YjgtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI4XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI4LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjhcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjExfSxcIm1hbGVfc3VwZXJoZXJvXCI6e1wiaWRcIjpcIm1hbGVfc3VwZXJoZXJvXCIsXCJuYW1lXCI6XCJNYW4gU3VwZXJoZXJvXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcImdvb2RcIixcImhlcm9cIixcInN1cGVycG93ZXJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YjgtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI4XHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI4LTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOFx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOC0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjhcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5YjgtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI4XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI4LTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOFx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOC0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjhcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjExfSxcImZlbWFsZV9zdXBlcmhlcm9cIjp7XCJpZFwiOlwiZmVtYWxlX3N1cGVyaGVyb1wiLFwibmFtZVwiOlwiV29tYW4gU3VwZXJoZXJvXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiLFwiZ29vZFwiLFwiaGVyb2luZVwiLFwic3VwZXJwb3dlcnNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjliOC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjhcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5YjgtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI4XHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI4LTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOC0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjhcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5YjgtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI4XHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI4LTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwic3VwZXJ2aWxsYWluXCI6e1wiaWRcIjpcInN1cGVydmlsbGFpblwiLFwibmFtZVwiOlwiU3VwZXJ2aWxsYWluXCIsXCJrZXl3b3Jkc1wiOltcIm1hcnZlbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWI5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOVwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjlcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5YjktMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI5XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI5LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjlcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5YjktMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI5XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJtYWxlX3N1cGVydmlsbGFpblwiOntcImlkXCI6XCJtYWxlX3N1cGVydmlsbGFpblwiLFwibmFtZVwiOlwiTWFuIFN1cGVydmlsbGFpblwiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJldmlsXCIsXCJiYWRcIixcImNyaW1pbmFsXCIsXCJoZXJvXCIsXCJzdXBlcnBvd2Vyc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWI5LTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjlcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5YjktMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI5XHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI5LTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjlcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5YjktMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI5XHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJmZW1hbGVfc3VwZXJ2aWxsYWluXCI6e1wiaWRcIjpcImZlbWFsZV9zdXBlcnZpbGxhaW5cIixcIm5hbWVcIjpcIldvbWFuIFN1cGVydmlsbGFpblwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImV2aWxcIixcImJhZFwiLFwiY3JpbWluYWxcIixcImhlcm9pbmVcIixcInN1cGVycG93ZXJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YjktMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI5XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI5LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOS0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjlcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5YjktMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREI5XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWI5LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCOVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjliOS0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQjlcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjExfSxcIm1hZ2VcIjp7XCJpZFwiOlwibWFnZVwiLFwibmFtZVwiOlwiTWFnZVwiLFwia2V5d29yZHNcIjpbXCJtYWdpY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOVwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDlcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5ZDktMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ5XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ5LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDlcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5ZDktMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ5XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjo1fSxcIm1hbGVfbWFnZVwiOntcImlkXCI6XCJtYWxlX21hZ2VcIixcIm5hbWVcIjpcIk1hbiBNYWdlXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcInNvcmNlcmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDktMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ5XHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ5LTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOS0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDlcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDktMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ5XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ5LTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOS0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDlcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjV9LFwiZmVtYWxlX21hZ2VcIjp7XCJpZFwiOlwiZmVtYWxlX21hZ2VcIixcIm5hbWVcIjpcIldvbWFuIE1hZ2VcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJ3aXRjaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ5LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOS0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDlcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDktMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ5XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ5LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOS0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDlcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDktMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ5XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo1fSxcImZhaXJ5XCI6e1wiaWRcIjpcImZhaXJ5XCIsXCJuYW1lXCI6XCJGYWlyeVwiLFwia2V5d29yZHNcIjpbXCJ3aW5nc1wiLFwibWFnaWNhbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWRhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQVwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREFcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5ZGEtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERBXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRhLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREFcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5ZGEtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERBXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjo1fSxcIm1hbGVfZmFpcnlcIjp7XCJpZFwiOlwibWFsZV9mYWlyeVwiLFwibmFtZVwiOlwiTWFuIEZhaXJ5XCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkYS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREFcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGEtMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERBXHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRhLTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYS0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREFcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGEtMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERBXHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRhLTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQVx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJmZW1hbGVfZmFpcnlcIjp7XCJpZFwiOlwiZmVtYWxlX2ZhaXJ5XCIsXCJuYW1lXCI6XCJXb21hbiBGYWlyeVwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkYS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREFcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGEtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERBXHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRhLTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYS0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREFcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGEtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERBXHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRhLTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQVx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJ2YW1waXJlXCI6e1wiaWRcIjpcInZhbXBpcmVcIixcIm5hbWVcIjpcIlZhbXBpcmVcIixcImtleXdvcmRzXCI6W1wiYmxvb2RcIixcInR3aWxpZ2h0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZGJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRiLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREJcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5ZGItMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERCXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRiLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREJcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjV9LFwibWFsZV92YW1waXJlXCI6e1wiaWRcIjpcIm1hbGVfdmFtcGlyZVwiLFwibmFtZVwiOlwiTWFuIFZhbXBpcmVcIixcImtleXdvcmRzXCI6W1wibWFsZVwiLFwiZHJhY3VsYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWRiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYi0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREJcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGItMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERCXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRiLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYi0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREJcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGItMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERCXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo1fSxcImZlbWFsZV92YW1waXJlXCI6e1wiaWRcIjpcImZlbWFsZV92YW1waXJlXCIsXCJuYW1lXCI6XCJXb21hbiBWYW1waXJlXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWRiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYi0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREJcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGItMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERCXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRiLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYi0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREJcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGItMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERCXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo1fSxcIm1lcnBlcnNvblwiOntcImlkXCI6XCJtZXJwZXJzb25cIixcIm5hbWVcIjpcIk1lcnBlcnNvblwiLFwia2V5d29yZHNcIjpbXCJzZWFcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERENcIn0se1widW5pZmllZFwiOlwiMWY5ZGMtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERDXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRjLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQ1x1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYy0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERENcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5ZGMtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERDXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRjLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQ1x1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJtZXJtYW5cIjp7XCJpZFwiOlwibWVybWFuXCIsXCJuYW1lXCI6XCJNZXJtYW5cIixcImtleXdvcmRzXCI6W1wibWFuXCIsXCJtYWxlXCIsXCJ0cml0b25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERENcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGMtMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERDXHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRjLTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQ1x1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYy0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERENcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGMtMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERDXHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRjLTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQ1x1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJtZXJtYWlkXCI6e1wiaWRcIjpcIm1lcm1haWRcIixcIm5hbWVcIjpcIk1lcm1haWRcIixcImtleXdvcmRzXCI6W1wid29tYW5cIixcImZlbWFsZVwiLFwibWVyd29tYW5cIixcImFyaWVsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZGMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRjLTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQ1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYy0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERENcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGMtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERDXHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRjLTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREQ1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkYy0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERENcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjV9LFwiZWxmXCI6e1wiaWRcIjpcImVsZlwiLFwibmFtZVwiOlwiRWxmXCIsXCJrZXl3b3Jkc1wiOltcIm1hZ2ljYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERERcIn0se1widW5pZmllZFwiOlwiMWY5ZGQtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREREXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRkLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjlkZC0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERERcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5ZGQtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREREXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRkLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJtYWxlX2VsZlwiOntcImlkXCI6XCJtYWxlX2VsZlwiLFwibmFtZVwiOlwiTWFuIEVsZlwiLFwia2V5d29yZHNcIjpbXCJtYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZGQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREREXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRkLTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERFx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkZC0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERERcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGQtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREREXHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRkLTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERFx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkZC0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERERcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjV9LFwiZmVtYWxlX2VsZlwiOntcImlkXCI6XCJmZW1hbGVfZWxmXCIsXCJuYW1lXCI6XCJXb21hbiBFbGZcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZGQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREREXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRkLTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERFx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkZC0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERERcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZGQtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREREXHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWRkLTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERFx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkZC0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERERcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjV9LFwiZ2VuaWVcIjp7XCJpZFwiOlwiZ2VuaWVcIixcIm5hbWVcIjpcIkdlbmllXCIsXCJrZXl3b3Jkc1wiOltcIm1hZ2ljYWxcIixcIndpc2hlc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWRlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERVwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJtYWxlX2dlbmllXCI6e1wiaWRcIjpcIm1hbGVfZ2VuaWVcIixcIm5hbWVcIjpcIk1hbiBHZW5pZVwiLFwia2V5d29yZHNcIjpbXCJtYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZGUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERERFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo1fSxcImZlbWFsZV9nZW5pZVwiOntcImlkXCI6XCJmZW1hbGVfZ2VuaWVcIixcIm5hbWVcIjpcIldvbWFuIEdlbmllXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWRlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERVx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJ6b21iaWVcIjp7XCJpZFwiOlwiem9tYmllXCIsXCJuYW1lXCI6XCJab21iaWVcIixcImtleXdvcmRzXCI6W1wiZGVhZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWRmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERERlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJtYWxlX3pvbWJpZVwiOntcImlkXCI6XCJtYWxlX3pvbWJpZVwiLFwibmFtZVwiOlwiTWFuIFpvbWJpZVwiLFwia2V5d29yZHNcIjpbXCJtYWxlXCIsXCJkcmFjdWxhXCIsXCJ1bmRlYWRcIixcIndhbGtpbmdcIixcImRlYWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjV9LFwiZmVtYWxlX3pvbWJpZVwiOntcImlkXCI6XCJmZW1hbGVfem9tYmllXCIsXCJuYW1lXCI6XCJXb21hbiBab21iaWVcIixcImtleXdvcmRzXCI6W1wiZmVtYWxlXCIsXCJ1bmRlYWRcIixcIndhbGtpbmdcIixcImRlYWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREREZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjV9LFwidHJvbGxcIjp7XCJpZFwiOlwidHJvbGxcIixcIm5hbWVcIjpcIlRyb2xsXCIsXCJrZXl3b3Jkc1wiOltcIm15c3RpY2FsXCIsXCJtb25zdGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5Y2NcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENDXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJtYXNzYWdlXCI6e1wiaWRcIjpcIm1hc3NhZ2VcIixcIm5hbWVcIjpcIkZhY2UgTWFzc2FnZVwiLFwia2V5d29yZHNcIjpbXCJwZXJzb25cIixcImdldHRpbmdcIixcInJlbGF4XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg2XCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg2LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Nlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ni0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0ODYtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg2XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg2LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Nlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ni0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFuLWdldHRpbmctbWFzc2FnZVwiOntcImlkXCI6XCJtYW4tZ2V0dGluZy1tYXNzYWdlXCIsXCJuYW1lXCI6XCJNYW4gR2V0dGluZyBNYXNzYWdlXCIsXCJrZXl3b3Jkc1wiOltcImdldHRpbmctbWFzc2FnZVwiLFwibWFsZVwiLFwiYm95XCIsXCJoZWFkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg2XHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg2LTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Nlx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ni0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODZcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODYtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg2XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg2LTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Nlx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ni0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODZcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4tZ2V0dGluZy1tYXNzYWdlXCI6e1wiaWRcIjpcIndvbWFuLWdldHRpbmctbWFzc2FnZVwiLFwibmFtZVwiOlwiV29tYW4gR2V0dGluZyBNYXNzYWdlXCIsXCJrZXl3b3Jkc1wiOltcImdldHRpbmctbWFzc2FnZVwiLFwiZmVtYWxlXCIsXCJnaXJsXCIsXCJoZWFkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg2XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg2LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Nlx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ni0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODZcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODYtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg2XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg2LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Nlx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ni0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODZcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwiaGFpcmN1dFwiOntcImlkXCI6XCJoYWlyY3V0XCIsXCJuYW1lXCI6XCJIYWlyY3V0XCIsXCJrZXl3b3Jkc1wiOltcInBlcnNvblwiLFwiZ2V0dGluZ1wiLFwiaGFpcnN0eWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg3XCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg3LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4N1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ny0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODdcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0ODctMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg3XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg3LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4N1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ny0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODdcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFuLWdldHRpbmctaGFpcmN1dFwiOntcImlkXCI6XCJtYW4tZ2V0dGluZy1oYWlyY3V0XCIsXCJuYW1lXCI6XCJNYW4gR2V0dGluZyBIYWlyY3V0XCIsXCJrZXl3b3Jkc1wiOltcImdldHRpbmctaGFpcmN1dFwiLFwibWFsZVwiLFwiYm95XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODctMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg3XHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg3LTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4N1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ny0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODdcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODctMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg3XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg3LTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4N1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ny0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODdcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4tZ2V0dGluZy1oYWlyY3V0XCI6e1wiaWRcIjpcIndvbWFuLWdldHRpbmctaGFpcmN1dFwiLFwibmFtZVwiOlwiV29tYW4gR2V0dGluZyBIYWlyY3V0XCIsXCJrZXl3b3Jkc1wiOltcImdldHRpbmctaGFpcmN1dFwiLFwiZmVtYWxlXCIsXCJnaXJsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODctMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg3XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg3LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4N1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ny0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODdcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY0ODctMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg3XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDg3LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4N1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Ny0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODdcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwid2Fsa2luZ1wiOntcImlkXCI6XCJ3YWxraW5nXCIsXCJuYW1lXCI6XCJQZWRlc3RyaWFuXCIsXCJrZXl3b3Jkc1wiOltcIndhbGtpbmdcIixcInBlcnNvblwiLFwibW92ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmI2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjZcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2YjYtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI2XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI2LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjZcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2YjYtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI2XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi13YWxraW5nXCI6e1wiaWRcIjpcIm1hbi13YWxraW5nXCIsXCJuYW1lXCI6XCJNYW4gV2Fsa2luZ1wiLFwia2V5d29yZHNcIjpbXCJodW1hblwiLFwiZmVldFwiLFwic3RlcHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZiNi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjZcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjYtMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI2XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI2LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNlx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNi0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjZcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjYtMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI2XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI2LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNlx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi13YWxraW5nXCI6e1wiaWRcIjpcIndvbWFuLXdhbGtpbmdcIixcIm5hbWVcIjpcIldvbWFuIFdhbGtpbmdcIixcImtleXdvcmRzXCI6W1wiaHVtYW5cIixcImZlZXRcIixcInN0ZXBzXCIsXCJmZW1hbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZiNi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjZcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjYtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI2XHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI2LTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNlx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNi0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjZcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjYtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI2XHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI2LTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNlx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJzdGFuZGluZ19wZXJzb25cIjp7XCJpZFwiOlwic3RhbmRpbmdfcGVyc29uXCIsXCJuYW1lXCI6XCJTdGFuZGluZyBQZXJzb25cIixcImtleXdvcmRzXCI6W1wic3RpbGxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjljZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0RcIn0se1widW5pZmllZFwiOlwiMWY5Y2QtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENEXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNkLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjljZC0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0RcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY5Y2QtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENEXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNkLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwibWFuX3N0YW5kaW5nXCI6e1wiaWRcIjpcIm1hbl9zdGFuZGluZ1wiLFwibmFtZVwiOlwiTWFuIFN0YW5kaW5nXCIsXCJrZXl3b3Jkc1wiOltcInN0aWxsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5Y2QtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNkLTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRFx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZC0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0RcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2QtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENEXHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNkLTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRFx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZC0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0RcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjEyfSxcIndvbWFuX3N0YW5kaW5nXCI6e1wiaWRcIjpcIndvbWFuX3N0YW5kaW5nXCIsXCJuYW1lXCI6XCJXb21hbiBTdGFuZGluZ1wiLFwia2V5d29yZHNcIjpbXCJzdGlsbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWNkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZC0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0RcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2QtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENEXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNkLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRFx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZC0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0RcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2QtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENEXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJrbmVlbGluZ19wZXJzb25cIjp7XCJpZFwiOlwia25lZWxpbmdfcGVyc29uXCIsXCJuYW1lXCI6XCJLbmVlbGluZyBQZXJzb25cIixcImtleXdvcmRzXCI6W1wicHJheVwiLFwicmVzcGVjdGZ1bFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWNlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0VcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5Y2UtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENFXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNlLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0VcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5Y2UtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENFXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJtYW5fa25lZWxpbmdcIjp7XCJpZFwiOlwibWFuX2tuZWVsaW5nXCIsXCJuYW1lXCI6XCJNYW4gS25lZWxpbmdcIixcImtleXdvcmRzXCI6W1wicHJheVwiLFwicmVzcGVjdGZ1bFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWNlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0VcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2UtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENFXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNlLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0VcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2UtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENFXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJ3b21hbl9rbmVlbGluZ1wiOntcImlkXCI6XCJ3b21hbl9rbmVlbGluZ1wiLFwibmFtZVwiOlwiV29tYW4gS25lZWxpbmdcIixcImtleXdvcmRzXCI6W1wicmVzcGVjdGZ1bFwiLFwicHJheVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWNlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZS0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0VcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2UtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENFXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWNlLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDRVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjljZS0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0VcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5Y2UtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERENFXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJwZXJzb25fd2l0aF9wcm9iaW5nX2NhbmVcIjp7XCJpZFwiOlwicGVyc29uX3dpdGhfcHJvYmluZ19jYW5lXCIsXCJuYW1lXCI6XCJQZXJzb24gd2l0aCBXaGl0ZSBDYW5lXCIsXCJrZXl3b3Jkc1wiOltcInByb2JpbmdcIixcImJsaW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0VcdUREQUZcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFuX3dpdGhfcHJvYmluZ19jYW5lXCI6e1wiaWRcIjpcIm1hbl93aXRoX3Byb2JpbmdfY2FuZVwiLFwibmFtZVwiOlwiTWFuIHdpdGggV2hpdGUgQ2FuZVwiLFwia2V5d29yZHNcIjpbXCJwcm9iaW5nXCIsXCJibGluZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWY5YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNFXHVEREFGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMWY5YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREFGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMWY5YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREFGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZkLTIwMGQtMWY5YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREFGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMWY5YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREFGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMWY5YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREFGXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJ3b21hbl93aXRoX3Byb2JpbmdfY2FuZVwiOntcImlkXCI6XCJ3b21hbl93aXRoX3Byb2JpbmdfY2FuZVwiLFwibmFtZVwiOlwiV29tYW4gd2l0aCBXaGl0ZSBDYW5lXCIsXCJrZXl3b3Jkc1wiOltcInByb2JpbmdcIixcImJsaW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmItMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmMtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmUtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0VcdUREQUZcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmYtMjAwZC0xZjlhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0VcdUREQUZcIn1dLFwidmVyc2lvblwiOjEyfSxcInBlcnNvbl9pbl9tb3Rvcml6ZWRfd2hlZWxjaGFpclwiOntcImlkXCI6XCJwZXJzb25faW5fbW90b3JpemVkX3doZWVsY2hhaXJcIixcIm5hbWVcIjpcIlBlcnNvbiBpbiBNb3Rvcml6ZWQgV2hlZWxjaGFpclwiLFwia2V5d29yZHNcIjpbXCJkaXNhYmlsaXR5XCIsXCJhY2Nlc3NpYmlsaXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDEtMjAwZC0xZjliY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdTIwMERcdUQ4M0VcdUREQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmItMjAwZC0xZjliY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0VcdUREQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjliY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkNcdTIwMERcdUQ4M0VcdUREQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmQtMjAwZC0xZjliY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkRcdTIwMERcdUQ4M0VcdUREQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmUtMjAwZC0xZjliY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0VcdUREQkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjliY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkZcdTIwMERcdUQ4M0VcdUREQkNcIn1dLFwidmVyc2lvblwiOjEyLjF9LFwibWFuX2luX21vdG9yaXplZF93aGVlbGNoYWlyXCI6e1wiaWRcIjpcIm1hbl9pbl9tb3Rvcml6ZWRfd2hlZWxjaGFpclwiLFwibmFtZVwiOlwiTWFuIGluIE1vdG9yaXplZCBXaGVlbGNoYWlyXCIsXCJrZXl3b3Jkc1wiOltcImRpc2FiaWxpdHlcIixcImFjY2Vzc2liaWxpdHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRVx1RERCQ1wifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwid29tYW5faW5fbW90b3JpemVkX3doZWVsY2hhaXJcIjp7XCJpZFwiOlwid29tYW5faW5fbW90b3JpemVkX3doZWVsY2hhaXJcIixcIm5hbWVcIjpcIldvbWFuIGluIE1vdG9yaXplZCBXaGVlbGNoYWlyXCIsXCJrZXl3b3Jkc1wiOltcImRpc2FiaWxpdHlcIixcImFjY2Vzc2liaWxpdHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRVx1RERCQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRVx1RERCQ1wifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwicGVyc29uX2luX21hbnVhbF93aGVlbGNoYWlyXCI6e1wiaWRcIjpcInBlcnNvbl9pbl9tYW51YWxfd2hlZWxjaGFpclwiLFwibmFtZVwiOlwiUGVyc29uIGluIE1hbnVhbCBXaGVlbGNoYWlyXCIsXCJrZXl3b3Jkc1wiOltcImRpc2FiaWxpdHlcIixcImFjY2Vzc2liaWxpdHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkMS0yMDBkLTFmOWJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1MjAwRFx1RDgzRVx1RERCRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmYi0yMDBkLTFmOWJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQlx1MjAwRFx1RDgzRVx1RERCRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmYy0yMDBkLTFmOWJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRVx1RERCRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZC0yMDBkLTFmOWJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRFx1MjAwRFx1RDgzRVx1RERCRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZS0yMDBkLTFmOWJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRVx1MjAwRFx1RDgzRVx1RERCRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZi0yMDBkLTFmOWJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRVx1RERCRFwifV0sXCJ2ZXJzaW9uXCI6MTIuMX0sXCJtYW5faW5fbWFudWFsX3doZWVsY2hhaXJcIjp7XCJpZFwiOlwibWFuX2luX21hbnVhbF93aGVlbGNoYWlyXCIsXCJuYW1lXCI6XCJNYW4gaW4gTWFudWFsIFdoZWVsY2hhaXJcIixcImtleXdvcmRzXCI6W1wiZGlzYWJpbGl0eVwiLFwiYWNjZXNzaWJpbGl0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZjLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZkLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZmLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREJEXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJ3b21hbl9pbl9tYW51YWxfd2hlZWxjaGFpclwiOntcImlkXCI6XCJ3b21hbl9pbl9tYW51YWxfd2hlZWxjaGFpclwiLFwibmFtZVwiOlwiV29tYW4gaW4gTWFudWFsIFdoZWVsY2hhaXJcIixcImtleXdvcmRzXCI6W1wiZGlzYWJpbGl0eVwiLFwiYWNjZXNzaWJpbGl0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZiLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZDXHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZkLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZlLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHVEODNFXHVEREJEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZGXHUyMDBEXHVEODNFXHVEREJEXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJydW5uZXJcIjp7XCJpZFwiOlwicnVubmVyXCIsXCJuYW1lXCI6XCJSdW5uZXJcIixcImtleXdvcmRzXCI6W1wicnVubmluZ1wiLFwicGVyc29uXCIsXCJtb3ZlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYzNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMzXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2MzLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDM1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjMy0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzNcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWYzYzMtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMzXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2MzLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDM1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjMy0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzNcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFuLXJ1bm5pbmdcIjp7XCJpZFwiOlwibWFuLXJ1bm5pbmdcIixcIm5hbWVcIjpcIk1hbiBSdW5uaW5nXCIsXCJrZXl3b3Jkc1wiOltcIndhbGtpbmdcIixcImV4ZXJjaXNlXCIsXCJyYWNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYzMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMzXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2MzLTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDM1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjMy0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzNcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzYzMtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMzXHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2MzLTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDM1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjMy0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzNcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4tcnVubmluZ1wiOntcImlkXCI6XCJ3b21hbi1ydW5uaW5nXCIsXCJuYW1lXCI6XCJXb21hbiBSdW5uaW5nXCIsXCJrZXl3b3Jkc1wiOltcIndhbGtpbmdcIixcImV4ZXJjaXNlXCIsXCJyYWNlXCIsXCJmZW1hbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNjMy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzYzMtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMzXHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2MzLTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDM1x1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjMy0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzNcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzYzMtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMzXHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2MzLTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDM1x1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJkYW5jZXJcIjp7XCJpZFwiOlwiZGFuY2VyXCIsXCJuYW1lXCI6XCJEYW5jZXJcIixcImtleXdvcmRzXCI6W1wid29tYW5cIixcImRhbmNpbmdcIixcImZlbWFsZVwiLFwiZ2lybFwiLFwiZnVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgzLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4M1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4My0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODNcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0ODMtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzgzXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDgzLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4M1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4My0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDODNcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFuX2RhbmNpbmdcIjp7XCJpZFwiOlwibWFuX2RhbmNpbmdcIixcIm5hbWVcIjpcIk1hbiBEYW5jaW5nXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcImJveVwiLFwiZnVuXCIsXCJkYW5jZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU3YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREN0FcIn0se1widW5pZmllZFwiOlwiMWY1N2EtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDdBXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTdhLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3QVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjU3YS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREN0FcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY1N2EtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDdBXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTdhLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3QVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6M30sXCJtYW5faW5fYnVzaW5lc3Nfc3VpdF9sZXZpdGF0aW5nXCI6e1wiaWRcIjpcIm1hbl9pbl9idXNpbmVzc19zdWl0X2xldml0YXRpbmdcIixcIm5hbWVcIjpcIlBlcnNvbiBpbiBTdWl0IExldml0YXRpbmdcIixcImtleXdvcmRzXCI6W1wibWFuXCIsXCJidXNpbmVzc1wiLFwibGV2aXRhdGVcIixcImhvdmVyXCIsXCJqdW1wXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NzQtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzRcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY1NzQtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc0XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTc0LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3NFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjU3NC0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzRcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY1NzQtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc0XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNTc0LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ3NFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkYW5jZXJzXCI6e1wiaWRcIjpcImRhbmNlcnNcIixcIm5hbWVcIjpcIldvbWFuIHdpdGggQnVubnkgRWFyc1wiLFwia2V5d29yZHNcIjpbXCJkYW5jZXJzXCIsXCJwZW9wbGVcIixcInBlcmZvcm1cIixcImNvc3R1bWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2ZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWVuLXdpdGgtYnVubnktZWFycy1wYXJ0eWluZ1wiOntcImlkXCI6XCJtZW4td2l0aC1idW5ueS1lYXJzLXBhcnR5aW5nXCIsXCJuYW1lXCI6XCJNZW4gd2l0aCBCdW5ueSBFYXJzXCIsXCJrZXl3b3Jkc1wiOltcIndpdGgtYnVubnktZWFycy1wYXJ0eWluZ1wiLFwibWFuXCIsXCJtYWxlXCIsXCJib3lzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWVuLXdpdGgtYnVubnktZWFycy1wYXJ0eWluZ1wiOntcImlkXCI6XCJ3b21lbi13aXRoLWJ1bm55LWVhcnMtcGFydHlpbmdcIixcIm5hbWVcIjpcIldvbWVuIHdpdGggQnVubnkgRWFyc1wiLFwia2V5d29yZHNcIjpbXCJ3aXRoLWJ1bm55LWVhcnMtcGFydHlpbmdcIixcIndvbWFuXCIsXCJmZW1hbGVcIixcImdpcmxzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcInBlcnNvbl9pbl9zdGVhbXlfcm9vbVwiOntcImlkXCI6XCJwZXJzb25faW5fc3RlYW15X3Jvb21cIixcIm5hbWVcIjpcIlBlcnNvbiBpbiBTdGVhbXkgUm9vbVwiLFwia2V5d29yZHNcIjpbXCJyZWxheFwiLFwic3BhXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ2XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ2LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDYtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ2XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ2LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjV9LFwibWFuX2luX3N0ZWFteV9yb29tXCI6e1wiaWRcIjpcIm1hbl9pbl9zdGVhbXlfcm9vbVwiLFwibmFtZVwiOlwiTWFuIGluIFN0ZWFteSBSb29tXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcInNwYVwiLFwic3RlYW1yb29tXCIsXCJzYXVuYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ2LTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNi0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDZcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDYtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ2XHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ2LTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNi0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDZcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDYtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ2XHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo1fSxcIndvbWFuX2luX3N0ZWFteV9yb29tXCI6e1wiaWRcIjpcIndvbWFuX2luX3N0ZWFteV9yb29tXCIsXCJuYW1lXCI6XCJXb21hbiBpbiBTdGVhbXkgUm9vbVwiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcInNwYVwiLFwic3RlYW1yb29tXCIsXCJzYXVuYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ2LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNi0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDZcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDYtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ2XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ2LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERENlx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNi0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDZcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDYtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ2XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo1fSxcInBlcnNvbl9jbGltYmluZ1wiOntcImlkXCI6XCJwZXJzb25fY2xpbWJpbmdcIixcIm5hbWVcIjpcIlBlcnNvbiBDbGltYmluZ1wiLFwia2V5d29yZHNcIjpbXCJzcG9ydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREN1wifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNy0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDdcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5ZDctMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ3XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ3LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREN1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNy0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDdcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5ZDctMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ3XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjo1fSxcIm1hbl9jbGltYmluZ1wiOntcImlkXCI6XCJtYW5fY2xpbWJpbmdcIixcIm5hbWVcIjpcIk1hbiBDbGltYmluZ1wiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIixcImhvYmJ5XCIsXCJtYWxlXCIsXCJyb2NrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDctMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ3XHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ3LTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREN1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNy0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDdcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDctMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ3XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ3LTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREN1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNy0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDdcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjV9LFwid29tYW5fY2xpbWJpbmdcIjp7XCJpZFwiOlwid29tYW5fY2xpbWJpbmdcIixcIm5hbWVcIjpcIldvbWFuIENsaW1iaW5nXCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiLFwiaG9iYnlcIixcImZlbWFsZVwiLFwicm9ja1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWQ3LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREN1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNy0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDdcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDctMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ3XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ3LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREN1x1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkNy0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDdcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDctMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ3XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo1fSxcImZlbmNlclwiOntcImlkXCI6XCJmZW5jZXJcIixcIm5hbWVcIjpcIkZlbmNlclwiLFwia2V5d29yZHNcIjpbXCJwZXJzb25cIixcImZlbmNpbmdcIixcInNwb3J0c1wiLFwic3dvcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0FcIn1dLFwidmVyc2lvblwiOjN9LFwiaG9yc2VfcmFjaW5nXCI6e1wiaWRcIjpcImhvcnNlX3JhY2luZ1wiLFwibmFtZVwiOlwiSG9yc2UgUmFjaW5nXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiYmV0dGluZ1wiLFwiY29tcGV0aXRpb25cIixcImdhbWJsaW5nXCIsXCJsdWNrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYzdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM3XCJ9LHtcInVuaWZpZWRcIjpcIjFmM2M3LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDN1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjNy0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzdcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWYzYzctMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM3XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2M3LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDN1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjNy0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzdcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwic2tpZXJcIjp7XCJpZFwiOlwic2tpZXJcIixcIm5hbWVcIjpcIlNraWVyXCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiLFwid2ludGVyXCIsXCJzbm93XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZmNy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjZGN1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzbm93Ym9hcmRlclwiOntcImlkXCI6XCJzbm93Ym9hcmRlclwiLFwibmFtZVwiOlwiU25vd2JvYXJkZXJcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJ3aW50ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNjMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzJcIn0se1widW5pZmllZFwiOlwiMWYzYzItMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMyXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2MyLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDMlx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjNjMi0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzJcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWYzYzItMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMyXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2MyLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDMlx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJnb2xmZXJcIjp7XCJpZFwiOlwiZ29sZmVyXCIsXCJuYW1lXCI6XCJQZXJzb24gR29sZmluZ1wiLFwia2V5d29yZHNcIjpbXCJnb2xmZXJcIixcInNwb3J0c1wiLFwiYnVzaW5lc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNjYy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQ1x1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYy0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0NcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWYzY2MtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNDXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NjLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQ1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYy0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0NcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWYzY2MtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNDXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1nb2xmaW5nXCI6e1wiaWRcIjpcIm1hbi1nb2xmaW5nXCIsXCJuYW1lXCI6XCJNYW4gR29sZmluZ1wiLFwia2V5d29yZHNcIjpbXCJzcG9ydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2NjLWZlMGYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNDXHVGRTBGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NjLTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQ1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYy0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0NcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2MtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNDXHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NjLTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQ1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYy0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0NcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4tZ29sZmluZ1wiOntcImlkXCI6XCJ3b21hbi1nb2xmaW5nXCIsXCJuYW1lXCI6XCJXb21hbiBHb2xmaW5nXCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiLFwiYnVzaW5lc3NcIixcImZlbWFsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2NjLWZlMGYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNDXHVGRTBGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NjLTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQ1x1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYy0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0NcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2MtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNDXHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NjLTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQ1x1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYy0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0NcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwic3VyZmVyXCI6e1wiaWRcIjpcInN1cmZlclwiLFwibmFtZVwiOlwiU3VyZmVyXCIsXCJrZXl3b3Jkc1wiOltcInBlcnNvblwiLFwic3VyZmluZ1wiLFwic3BvcnRcIixcInNlYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2M0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDNFwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjNC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzRcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWYzYzQtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM0XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2M0LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDNFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjNC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzRcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWYzYzQtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM0XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1zdXJmaW5nXCI6e1wiaWRcIjpcIm1hbi1zdXJmaW5nXCIsXCJuYW1lXCI6XCJNYW4gU3VyZmluZ1wiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIixcIm9jZWFuXCIsXCJzZWFcIixcInN1bW1lclwiLFwiYmVhY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNjNC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzYzQtMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM0XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2M0LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDNFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjNC0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzRcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzYzQtMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM0XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2M0LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDNFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi1zdXJmaW5nXCI6e1wiaWRcIjpcIndvbWFuLXN1cmZpbmdcIixcIm5hbWVcIjpcIldvbWFuIFN1cmZpbmdcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJvY2VhblwiLFwic2VhXCIsXCJzdW1tZXJcIixcImJlYWNoXCIsXCJmZW1hbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNjNC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzYzQtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM0XHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2M0LTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDNFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjNC0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzRcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzYzQtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM0XHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2M0LTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDNFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJyb3dib2F0XCI6e1wiaWRcIjpcInJvd2JvYXRcIixcIm5hbWVcIjpcIlJvd2JvYXRcIixcImtleXdvcmRzXCI6W1wicGVyc29uXCIsXCJyb3dpbmdcIixcImJvYXRcIixcInNwb3J0XCIsXCJtb3ZlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YTNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUEzXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmEzLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBM1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZhMy0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQTNcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY2YTMtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUEzXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmEzLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBM1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjZhMy0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQTNcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFuLXJvd2luZy1ib2F0XCI6e1wiaWRcIjpcIm1hbi1yb3dpbmctYm9hdFwiLFwibmFtZVwiOlwiTWFuIFJvd2luZyBCb2F0XCIsXCJrZXl3b3Jkc1wiOltcInJvd2luZy1ib2F0XCIsXCJzcG9ydHNcIixcImhvYmJ5XCIsXCJ3YXRlclwiLFwic2hpcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmEzLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBM1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZhMy0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQTNcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YTMtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUEzXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmEzLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBM1x1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZhMy0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQTNcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YTMtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUEzXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLXJvd2luZy1ib2F0XCI6e1wiaWRcIjpcIndvbWFuLXJvd2luZy1ib2F0XCIsXCJuYW1lXCI6XCJXb21hbiBSb3dpbmcgQm9hdFwiLFwia2V5d29yZHNcIjpbXCJyb3dpbmctYm9hdFwiLFwic3BvcnRzXCIsXCJob2JieVwiLFwid2F0ZXJcIixcInNoaXBcIixcImZlbWFsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmEzLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBM1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZhMy0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQTNcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YTMtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUEzXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmEzLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBM1x1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZhMy0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQTNcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YTMtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUEzXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcInN3aW1tZXJcIjp7XCJpZFwiOlwic3dpbW1lclwiLFwibmFtZVwiOlwiU3dpbW1lclwiLFwia2V5d29yZHNcIjpbXCJwZXJzb25cIixcInN3aW1taW5nXCIsXCJzcG9ydFwiLFwicG9vbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2NhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQVwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0FcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWYzY2EtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNBXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NhLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0FcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWYzY2EtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNBXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1zd2ltbWluZ1wiOntcImlkXCI6XCJtYW4tc3dpbW1pbmdcIixcIm5hbWVcIjpcIk1hbiBTd2ltbWluZ1wiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIixcImV4ZXJjaXNlXCIsXCJodW1hblwiLFwiYXRobGV0ZVwiLFwid2F0ZXJcIixcInN1bW1lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2NhLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0FcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2EtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNBXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NhLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0FcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2EtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNBXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLXN3aW1taW5nXCI6e1wiaWRcIjpcIndvbWFuLXN3aW1taW5nXCIsXCJuYW1lXCI6XCJXb21hbiBTd2ltbWluZ1wiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIixcImV4ZXJjaXNlXCIsXCJodW1hblwiLFwiYXRobGV0ZVwiLFwid2F0ZXJcIixcInN1bW1lclwiLFwiZmVtYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzY2EtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNBXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NhLTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYS0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0FcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2EtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNBXHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NhLTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYS0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0FcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwicGVyc29uX3dpdGhfYmFsbFwiOntcImlkXCI6XCJwZXJzb25fd2l0aF9iYWxsXCIsXCJuYW1lXCI6XCJQZXJzb24gQm91bmNpbmcgQmFsbFwiLFwia2V5d29yZHNcIjpbXCJ3aXRoXCIsXCJzcG9ydHNcIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZmOS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjZGOVx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIyNmY5LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1MjZGOVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIyNmY5LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1MjZGOVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIyNmY5LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1MjZGOVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIyNmY5LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1MjZGOVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIyNmY5LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1MjZGOVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtYW4tYm91bmNpbmctYmFsbFwiOntcImlkXCI6XCJtYW4tYm91bmNpbmctYmFsbFwiLFwibmFtZVwiOlwiTWFuIEJvdW5jaW5nIEJhbGxcIixcImtleXdvcmRzXCI6W1wiYm91bmNpbmctYmFsbFwiLFwic3BvcnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmY5LWZlMGYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVGRTBGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLWJvdW5jaW5nLWJhbGxcIjp7XCJpZFwiOlwid29tYW4tYm91bmNpbmctYmFsbFwiLFwibmFtZVwiOlwiV29tYW4gQm91bmNpbmcgQmFsbFwiLFwia2V5d29yZHNcIjpbXCJib3VuY2luZy1iYWxsXCIsXCJzcG9ydHNcIixcImh1bWFuXCIsXCJmZW1hbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmY5LWZlMGYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVGRTBGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjI2ZjktMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkY5XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndlaWdodF9saWZ0ZXJcIjp7XCJpZFwiOlwid2VpZ2h0X2xpZnRlclwiLFwibmFtZVwiOlwiUGVyc29uIExpZnRpbmcgV2VpZ2h0c1wiLFwia2V5d29yZHNcIjpbXCJ3ZWlnaHRcIixcImxpZnRlclwiLFwic3BvcnRzXCIsXCJ0cmFpbmluZ1wiLFwiZXhlcmNpc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNjYi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0JcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWYzY2ItMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNCXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NiLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0JcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWYzY2ItMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNCXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1saWZ0aW5nLXdlaWdodHNcIjp7XCJpZFwiOlwibWFuLWxpZnRpbmctd2VpZ2h0c1wiLFwibmFtZVwiOlwiTWFuIExpZnRpbmcgV2VpZ2h0c1wiLFwia2V5d29yZHNcIjpbXCJsaWZ0aW5nLXdlaWdodHNcIixcInNwb3J0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzY2ItZmUwZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0JcdUZFMEZcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2ItMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNCXHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NiLTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQlx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYi0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0JcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2ItMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNCXHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NiLTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQlx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi1saWZ0aW5nLXdlaWdodHNcIjp7XCJpZFwiOlwid29tYW4tbGlmdGluZy13ZWlnaHRzXCIsXCJuYW1lXCI6XCJXb21hbiBMaWZ0aW5nIFdlaWdodHNcIixcImtleXdvcmRzXCI6W1wibGlmdGluZy13ZWlnaHRzXCIsXCJzcG9ydHNcIixcInRyYWluaW5nXCIsXCJleGVyY2lzZVwiLFwiZmVtYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzY2ItZmUwZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0JcdUZFMEZcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2ItMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNCXHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NiLTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQlx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjNjYi0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0JcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWYzY2ItMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNCXHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmM2NiLTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDQlx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJiaWN5Y2xpc3RcIjp7XCJpZFwiOlwiYmljeWNsaXN0XCIsXCJuYW1lXCI6XCJCaWN5Y2xpc3RcIixcImtleXdvcmRzXCI6W1wicGVyc29uXCIsXCJiaWtpbmdcIixcInNwb3J0XCIsXCJtb3ZlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YjRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI0XCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI0LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjRcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY2YjQtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI0XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI0LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjRcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFuLWJpa2luZ1wiOntcImlkXCI6XCJtYW4tYmlraW5nXCIsXCJuYW1lXCI6XCJNYW4gQmlraW5nXCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiLFwiYmlrZVwiLFwiZXhlcmNpc2VcIixcImhpcHN0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZiNC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjQtMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI0XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI0LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNC0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjRcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjQtMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI0XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI0LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi1iaWtpbmdcIjp7XCJpZFwiOlwid29tYW4tYmlraW5nXCIsXCJuYW1lXCI6XCJXb21hbiBCaWtpbmdcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJiaWtlXCIsXCJleGVyY2lzZVwiLFwiaGlwc3RlclwiLFwiZmVtYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YjQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI0XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI0LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNFx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNC0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjRcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjQtMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI0XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI0LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNFx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNC0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjRcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwibW91bnRhaW5fYmljeWNsaXN0XCI6e1wiaWRcIjpcIm1vdW50YWluX2JpY3ljbGlzdFwiLFwibmFtZVwiOlwiTW91bnRhaW4gQmljeWNsaXN0XCIsXCJrZXl3b3Jkc1wiOltcInBlcnNvblwiLFwiYmlraW5nXCIsXCJzcG9ydFwiLFwibW92ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmI1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNVwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjVcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY2YjUtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI1XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI1LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjVcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY2YjUtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI1XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbi1tb3VudGFpbi1iaWtpbmdcIjp7XCJpZFwiOlwibWFuLW1vdW50YWluLWJpa2luZ1wiLFwibmFtZVwiOlwiTWFuIE1vdW50YWluIEJpa2luZ1wiLFwia2V5d29yZHNcIjpbXCJtb3VudGFpbi1iaWtpbmdcIixcInRyYW5zcG9ydGF0aW9uXCIsXCJzcG9ydHNcIixcImh1bWFuXCIsXCJyYWNlXCIsXCJiaWtlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YjUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI1XHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI1LTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNS0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjVcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjUtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI1XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI1LTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNS0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjVcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4tbW91bnRhaW4tYmlraW5nXCI6e1wiaWRcIjpcIndvbWFuLW1vdW50YWluLWJpa2luZ1wiLFwibmFtZVwiOlwiV29tYW4gTW91bnRhaW4gQmlraW5nXCIsXCJrZXl3b3Jkc1wiOltcIm1vdW50YWluLWJpa2luZ1wiLFwidHJhbnNwb3J0YXRpb25cIixcInNwb3J0c1wiLFwiaHVtYW5cIixcInJhY2VcIixcImJpa2VcIixcImZlbWFsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmI1LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNS0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjVcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjUtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI1XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmI1LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCNVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZiNS0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjVcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY2YjUtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI1XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcInBlcnNvbl9kb2luZ19jYXJ0d2hlZWxcIjp7XCJpZFwiOlwicGVyc29uX2RvaW5nX2NhcnR3aGVlbFwiLFwibmFtZVwiOlwiUGVyc29uIENhcnR3aGVlbGluZ1wiLFwia2V5d29yZHNcIjpbXCJkb2luZ1wiLFwiY2FydHdoZWVsXCIsXCJzcG9ydFwiLFwiZ3ltbmFzdGljXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MzhcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM4XCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM4LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzhcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5MzgtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM4XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM4LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzhcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjN9LFwibWFuLWNhcnR3aGVlbGluZ1wiOntcImlkXCI6XCJtYW4tY2FydHdoZWVsaW5nXCIsXCJuYW1lXCI6XCJNYW4gQ2FydHdoZWVsaW5nXCIsXCJrZXl3b3Jkc1wiOltcImd5bW5hc3RpY3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzOC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzhcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzgtMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM4XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM4LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOC0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzhcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzgtMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM4XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM4LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi1jYXJ0d2hlZWxpbmdcIjp7XCJpZFwiOlwid29tYW4tY2FydHdoZWVsaW5nXCIsXCJuYW1lXCI6XCJXb21hbiBDYXJ0d2hlZWxpbmdcIixcImtleXdvcmRzXCI6W1wiZ3ltbmFzdGljc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTM4LTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOC0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzhcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzgtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM4XHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM4LTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOFx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOC0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzhcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzgtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM4XHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndyZXN0bGVyc1wiOntcImlkXCI6XCJ3cmVzdGxlcnNcIixcIm5hbWVcIjpcIldyZXN0bGVyc1wiLFwia2V5d29yZHNcIjpbXCJwZW9wbGVcIixcIndyZXN0bGluZ1wiLFwic3BvcnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0NcIn1dLFwidmVyc2lvblwiOjN9LFwibWFuLXdyZXN0bGluZ1wiOntcImlkXCI6XCJtYW4td3Jlc3RsaW5nXCIsXCJuYW1lXCI6XCJNZW4gV3Jlc3RsaW5nXCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwic3BvcnRzXCIsXCJ3cmVzdGxlcnNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0NcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4td3Jlc3RsaW5nXCI6e1wiaWRcIjpcIndvbWFuLXdyZXN0bGluZ1wiLFwibmFtZVwiOlwiV29tZW4gV3Jlc3RsaW5nXCIsXCJrZXl3b3Jkc1wiOltcIndvbWFuXCIsXCJzcG9ydHNcIixcIndyZXN0bGVyc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTNjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzQ1x1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3YXRlcl9wb2xvXCI6e1wiaWRcIjpcIndhdGVyX3BvbG9cIixcIm5hbWVcIjpcIldhdGVyIFBvbG9cIixcImtleXdvcmRzXCI6W1wicGVyc29uXCIsXCJwbGF5aW5nXCIsXCJzcG9ydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTNkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0RcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5M2QtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNEXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTNkLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0RcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5M2QtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNEXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjozfSxcIm1hbi1wbGF5aW5nLXdhdGVyLXBvbG9cIjp7XCJpZFwiOlwibWFuLXBsYXlpbmctd2F0ZXItcG9sb1wiLFwibmFtZVwiOlwiTWFuIFBsYXlpbmcgV2F0ZXIgUG9sb1wiLFwia2V5d29yZHNcIjpbXCJwbGF5aW5nLXdhdGVyLXBvbG9cIixcInNwb3J0c1wiLFwicG9vbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTNkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZC0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0RcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5M2QtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNEXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTNkLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRFx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZC0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0RcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5M2QtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNEXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLXBsYXlpbmctd2F0ZXItcG9sb1wiOntcImlkXCI6XCJ3b21hbi1wbGF5aW5nLXdhdGVyLXBvbG9cIixcIm5hbWVcIjpcIldvbWFuIFBsYXlpbmcgV2F0ZXIgUG9sb1wiLFwia2V5d29yZHNcIjpbXCJwbGF5aW5nLXdhdGVyLXBvbG9cIixcInNwb3J0c1wiLFwicG9vbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTNkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZC0xZjNmYi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0RcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5M2QtMWYzZmMtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNEXHVEODNDXHVERkZDXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTNkLTFmM2ZkLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRFx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZC0xZjNmZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0RcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5M2QtMWYzZmYtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNEXHVEODNDXHVERkZGXHUyMDBEXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcImhhbmRiYWxsXCI6e1wiaWRcIjpcImhhbmRiYWxsXCIsXCJuYW1lXCI6XCJIYW5kYmFsbFwiLFwia2V5d29yZHNcIjpbXCJwZXJzb25cIixcInBsYXlpbmdcIixcInNwb3J0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5M2VcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNFXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTNlLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0VcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5M2UtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNFXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTNlLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0VcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjN9LFwibWFuLXBsYXlpbmctaGFuZGJhbGxcIjp7XCJpZFwiOlwibWFuLXBsYXlpbmctaGFuZGJhbGxcIixcIm5hbWVcIjpcIk1hbiBQbGF5aW5nIEhhbmRiYWxsXCIsXCJrZXl3b3Jkc1wiOltcInBsYXlpbmctaGFuZGJhbGxcIixcInNwb3J0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTNlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZS0xZjNmYi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0VcdUQ4M0NcdURGRkJcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5M2UtMWYzZmMtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNFXHVEODNDXHVERkZDXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTNlLTFmM2ZkLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRVx1RDgzQ1x1REZGRFx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZS0xZjNmZS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0VcdUQ4M0NcdURGRkVcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5M2UtMWYzZmYtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNFXHVEODNDXHVERkZGXHUyMDBEXHUyNjQyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLXBsYXlpbmctaGFuZGJhbGxcIjp7XCJpZFwiOlwid29tYW4tcGxheWluZy1oYW5kYmFsbFwiLFwibmFtZVwiOlwiV29tYW4gUGxheWluZyBIYW5kYmFsbFwiLFwia2V5d29yZHNcIjpbXCJwbGF5aW5nLWhhbmRiYWxsXCIsXCJzcG9ydHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzZS0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0VcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5M2UtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNFXHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTNlLTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzZS0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0VcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5M2UtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDNFXHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTNlLTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzRVx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJqdWdnbGluZ1wiOntcImlkXCI6XCJqdWdnbGluZ1wiLFwibmFtZVwiOlwiSnVnZ2xpbmdcIixcImtleXdvcmRzXCI6W1wicGVyc29uXCIsXCJwZXJmb3JtYW5jZVwiLFwiYmFsYW5jZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTM5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOVwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzlcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5MzktMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM5XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM5LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzlcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5MzktMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM5XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjozfSxcIm1hbi1qdWdnbGluZ1wiOntcImlkXCI6XCJtYW4tanVnZ2xpbmdcIixcIm5hbWVcIjpcIk1hbiBKdWdnbGluZ1wiLFwia2V5d29yZHNcIjpbXCJqdWdnbGVcIixcImJhbGFuY2VcIixcInNraWxsXCIsXCJtdWx0aXRhc2tcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzOS0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzlcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzktMWYzZmItMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM5XHVEODNDXHVERkZCXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM5LTFmM2ZjLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOVx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOS0xZjNmZC0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzlcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzktMWYzZmUtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM5XHVEODNDXHVERkZFXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM5LTFmM2ZmLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOVx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi1qdWdnbGluZ1wiOntcImlkXCI6XCJ3b21hbi1qdWdnbGluZ1wiLFwibmFtZVwiOlwiV29tYW4gSnVnZ2xpbmdcIixcImtleXdvcmRzXCI6W1wianVnZ2xlXCIsXCJiYWxhbmNlXCIsXCJza2lsbFwiLFwibXVsdGl0YXNrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5MzktMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM5XHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM5LTFmM2ZiLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOVx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOS0xZjNmYy0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzlcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5MzktMWYzZmQtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDM5XHVEODNDXHVERkZEXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOTM5LTFmM2ZlLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQzOVx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjkzOS0xZjNmZi0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREMzlcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjR9LFwicGVyc29uX2luX2xvdHVzX3Bvc2l0aW9uXCI6e1wiaWRcIjpcInBlcnNvbl9pbl9sb3R1c19wb3NpdGlvblwiLFwibmFtZVwiOlwiUGVyc29uIGluIExvdHVzIFBvc2l0aW9uXCIsXCJrZXl3b3Jkc1wiOltcIm1lZGl0YXRlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDhcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ4XCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ4LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDhcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY5ZDgtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ4XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ4LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDhcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjV9LFwibWFuX2luX2xvdHVzX3Bvc2l0aW9uXCI6e1wiaWRcIjpcIm1hbl9pbl9sb3R1c19wb3NpdGlvblwiLFwibmFtZVwiOlwiTWFuIGluIExvdHVzIFBvc2l0aW9uXCIsXCJrZXl3b3Jkc1wiOltcIm1hbGVcIixcIm1lZGl0YXRpb25cIixcInlvZ2FcIixcInNlcmVuaXR5XCIsXCJ6ZW5cIixcIm1pbmRmdWxuZXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZDgtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ4XHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ4LTFmM2ZiLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOFx1RDgzQ1x1REZGQlx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOC0xZjNmYy0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDhcdUQ4M0NcdURGRkNcdTIwMERcdTI2NDJcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDgtMWYzZmQtMjAwZC0yNjQyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ4XHVEODNDXHVERkZEXHUyMDBEXHUyNjQyXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ4LTFmM2ZlLTIwMGQtMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOFx1RDgzQ1x1REZGRVx1MjAwRFx1MjY0Mlx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOC0xZjNmZi0yMDBkLTI2NDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDhcdUQ4M0NcdURGRkZcdTIwMERcdTI2NDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjV9LFwid29tYW5faW5fbG90dXNfcG9zaXRpb25cIjp7XCJpZFwiOlwid29tYW5faW5fbG90dXNfcG9zaXRpb25cIixcIm5hbWVcIjpcIldvbWFuIGluIExvdHVzIFBvc2l0aW9uXCIsXCJrZXl3b3Jkc1wiOltcImZlbWFsZVwiLFwibWVkaXRhdGlvblwiLFwieW9nYVwiLFwic2VyZW5pdHlcIixcInplblwiLFwibWluZGZ1bG5lc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkOC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDhcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDgtMWYzZmItMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ4XHVEODNDXHVERkZCXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ4LTFmM2ZjLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOFx1RDgzQ1x1REZGQ1x1MjAwRFx1MjY0MFx1RkUwRlwifSx7XCJ1bmlmaWVkXCI6XCIxZjlkOC0xZjNmZC0yMDBkLTI2NDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDhcdUQ4M0NcdURGRkRcdTIwMERcdTI2NDBcdUZFMEZcIn0se1widW5pZmllZFwiOlwiMWY5ZDgtMWYzZmUtMjAwZC0yNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQ4XHVEODNDXHVERkZFXHUyMDBEXHUyNjQwXHVGRTBGXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQ4LTFmM2ZmLTIwMGQtMjY0MC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREOFx1RDgzQ1x1REZGRlx1MjAwRFx1MjY0MFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJiYXRoXCI6e1wiaWRcIjpcImJhdGhcIixcIm5hbWVcIjpcIkJhdGhcIixcImtleXdvcmRzXCI6W1wicGVyc29uXCIsXCJ0YWtpbmdcIixcImNsZWFuXCIsXCJzaG93ZXJcIixcImJhdGhyb29tXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YzBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUMwXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmMwLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVDMFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZjMC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQzBcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY2YzAtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUMwXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmMwLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVDMFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjZjMC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQzBcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwic2xlZXBpbmdfYWNjb21tb2RhdGlvblwiOntcImlkXCI6XCJzbGVlcGluZ19hY2NvbW1vZGF0aW9uXCIsXCJuYW1lXCI6XCJQZXJzb24gaW4gQmVkXCIsXCJrZXl3b3Jkc1wiOltcInNsZWVwaW5nXCIsXCJhY2NvbW1vZGF0aW9uXCIsXCJyZXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2Y2NcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUNDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmNjLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVDQ1x1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjZjYy0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQ0NcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY2Y2MtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUNDXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNmNjLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVDQ1x1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjZjYy0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQ0NcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwicGVvcGxlX2hvbGRpbmdfaGFuZHNcIjp7XCJpZFwiOlwicGVvcGxlX2hvbGRpbmdfaGFuZHNcIixcIm5hbWVcIjpcIlBlb3BsZSBIb2xkaW5nIEhhbmRzXCIsXCJrZXl3b3Jkc1wiOltcImZyaWVuZHNoaXBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlkMS0yMDBkLTFmOTFkLTIwMGQtMWY5ZDFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHUyMDBEXHVEODNFXHVERDFEXHUyMDBEXHVEODNFXHVEREQxXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZiLTIwMGQtMWY5MWQtMjAwZC0xZjlkMS0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcdTIwMERcdUQ4M0VcdUREMURcdTIwMERcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmMtMjAwZC0xZjkxZC0yMDBkLTFmOWQxLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGQ1x1MjAwRFx1RDgzRVx1REQxRFx1MjAwRFx1RDgzRVx1REREMVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjlkMS0xZjNmZC0yMDBkLTFmOTFkLTIwMGQtMWY5ZDEtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREQxXHVEODNDXHVERkZEXHUyMDBEXHVEODNFXHVERDFEXHUyMDBEXHVEODNFXHVEREQxXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmOWQxLTFmM2ZlLTIwMGQtMWY5MWQtMjAwZC0xZjlkMS0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcdTIwMERcdUQ4M0VcdUREMURcdTIwMERcdUQ4M0VcdURERDFcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY5ZDEtMWYzZmYtMjAwZC0xZjkxZC0yMDBkLTFmOWQxLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REREMVx1RDgzQ1x1REZGRlx1MjAwRFx1RDgzRVx1REQxRFx1MjAwRFx1RDgzRVx1REREMVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwidHdvX3dvbWVuX2hvbGRpbmdfaGFuZHNcIjp7XCJpZFwiOlwidHdvX3dvbWVuX2hvbGRpbmdfaGFuZHNcIixcIm5hbWVcIjpcIldvbWVuIEhvbGRpbmcgSGFuZHNcIixcImtleXdvcmRzXCI6W1widHdvXCIsXCJwYWlyXCIsXCJmcmllbmRzaGlwXCIsXCJjb3VwbGVcIixcImxvdmVcIixcImxpa2VcIixcImZlbWFsZVwiLFwicGVvcGxlXCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2RFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2ZC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkRcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NmQtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZEXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDZkLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2RFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2ZC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkRcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NmQtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZEXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbl9hbmRfd29tYW5faG9sZGluZ19oYW5kc1wiOntcImlkXCI6XCJtYW5fYW5kX3dvbWFuX2hvbGRpbmdfaGFuZHNcIixcIm5hbWVcIjpcIk1hbiBhbmQgV29tYW4gSG9sZGluZyBIYW5kc1wiLFwia2V5d29yZHNcIjpbXCJjb3VwbGVcIixcInBhaXJcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImxvdmVcIixcImRhdGVcIixcImRhdGluZ1wiLFwibGlrZVwiLFwiYWZmZWN0aW9uXCIsXCJ2YWxlbnRpbmVzXCIsXCJtYXJyaWFnZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2QlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2Yi0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkJcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NmItMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZCXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDZiLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2Qlx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2Yi0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkJcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NmItMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZCXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcInR3b19tZW5faG9sZGluZ19oYW5kc1wiOntcImlkXCI6XCJ0d29fbWVuX2hvbGRpbmdfaGFuZHNcIixcIm5hbWVcIjpcIk1lbiBIb2xkaW5nIEhhbmRzXCIsXCJrZXl3b3Jkc1wiOltcInR3b1wiLFwicGFpclwiLFwiY291cGxlXCIsXCJsb3ZlXCIsXCJsaWtlXCIsXCJicm9tYW5jZVwiLFwiZnJpZW5kc2hpcFwiLFwicGVvcGxlXCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2Q1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2Yy0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkNcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NmMtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZDXHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDZjLTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2Q1x1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2Yy0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNkNcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NmMtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzZDXHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoxfSxcImNvdXBsZWtpc3NcIjp7XCJpZFwiOlwiY291cGxla2lzc1wiLFwibmFtZVwiOlwiS2lzc1wiLFwia2V5d29yZHNcIjpbXCJjb3VwbGVraXNzXCIsXCJwYWlyXCIsXCJ2YWxlbnRpbmVzXCIsXCJsb3ZlXCIsXCJsaWtlXCIsXCJkYXRpbmdcIixcIm1hcnJpYWdlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0OGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzhGXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDhmLTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Rlx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Zi0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOEZcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0OGYtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzhGXHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDhmLTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4Rlx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ4Zi0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOEZcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjF9LFwid29tYW4ta2lzcy1tYW5cIjp7XCJpZFwiOlwid29tYW4ta2lzcy1tYW5cIixcIm5hbWVcIjpcIktpc3M6IFdvbWFuLCBNYW5cIixcImtleXdvcmRzXCI6W1wid29tYW5cIixcImtpc3MtbWFuXCIsXCJraXNzXCIsXCJsb3ZlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0yNzY0LWZlMGYtMjAwZC0xZjQ4Yi0yMDBkLTFmNDY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM4Qlx1MjAwRFx1RDgzRFx1REM2OFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDhiLTIwMGQtMWY0NjgtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzhCXHUyMDBEXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0OGItMjAwZC0xZjQ2OC0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdTI3NjRcdUZFMEZcdTIwMERcdUQ4M0RcdURDOEJcdTIwMERcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0yNzY0LWZlMGYtMjAwZC0xZjQ4Yi0yMDBkLTFmNDY4LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM4Qlx1MjAwRFx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDhiLTIwMGQtMWY0NjgtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzhCXHUyMDBEXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0OGItMjAwZC0xZjQ2OC0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdTI3NjRcdUZFMEZcdTIwMERcdUQ4M0RcdURDOEJcdTIwMERcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjJ9LFwibWFuLWtpc3MtbWFuXCI6e1wiaWRcIjpcIm1hbi1raXNzLW1hblwiLFwibmFtZVwiOlwiS2lzczogTWFuLCBNYW5cIixcImtleXdvcmRzXCI6W1wia2lzcy1tYW5cIixcImtpc3NcIixcInBhaXJcIixcInZhbGVudGluZXNcIixcImxvdmVcIixcImxpa2VcIixcImRhdGluZ1wiLFwibWFycmlhZ2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDhiLTIwMGQtMWY0NjhcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzhCXHUyMDBEXHVEODNEXHVEQzY4XCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZiLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0OGItMjAwZC0xZjQ2OC0xZjNmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcdTIwMERcdTI3NjRcdUZFMEZcdTIwMERcdUQ4M0RcdURDOEJcdTIwMERcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkJcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmMtMjAwZC0yNzY0LWZlMGYtMjAwZC0xZjQ4Yi0yMDBkLTFmNDY4LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM4Qlx1MjAwRFx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDhiLTIwMGQtMWY0NjgtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzhCXHUyMDBEXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY4LTFmM2ZlLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0OGItMjAwZC0xZjQ2OC0xZjNmZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcdTIwMERcdTI3NjRcdUZFMEZcdTIwMERcdUQ4M0RcdURDOEJcdTIwMERcdUQ4M0RcdURDNjhcdUQ4M0NcdURGRkVcIn0se1widW5pZmllZFwiOlwiMWY0NjgtMWYzZmYtMjAwZC0yNzY0LWZlMGYtMjAwZC0xZjQ4Yi0yMDBkLTFmNDY4LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM4Qlx1MjAwRFx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJ3b21hbi1raXNzLXdvbWFuXCI6e1wiaWRcIjpcIndvbWFuLWtpc3Mtd29tYW5cIixcIm5hbWVcIjpcIktpc3M6IFdvbWFuLCBXb21hblwiLFwia2V5d29yZHNcIjpbXCJraXNzLXdvbWFuXCIsXCJraXNzXCIsXCJwYWlyXCIsXCJ2YWxlbnRpbmVzXCIsXCJsb3ZlXCIsXCJsaWtlXCIsXCJkYXRpbmdcIixcIm1hcnJpYWdlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0yNzY0LWZlMGYtMjAwZC0xZjQ4Yi0yMDBkLTFmNDY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM4Qlx1MjAwRFx1RDgzRFx1REM2OVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDhiLTIwMGQtMWY0NjktMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzhCXHUyMDBEXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0OGItMjAwZC0xZjQ2OS0xZjNmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcdTIwMERcdTI3NjRcdUZFMEZcdTIwMERcdUQ4M0RcdURDOEJcdTIwMERcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkNcIn0se1widW5pZmllZFwiOlwiMWY0NjktMWYzZmQtMjAwZC0yNzY0LWZlMGYtMjAwZC0xZjQ4Yi0yMDBkLTFmNDY5LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM4Qlx1MjAwRFx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDhiLTIwMGQtMWY0NjktMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzhCXHUyMDBEXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0OGItMjAwZC0xZjQ2OS0xZjNmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcdTIwMERcdTI3NjRcdUZFMEZcdTIwMERcdUQ4M0RcdURDOEJcdTIwMERcdUQ4M0RcdURDNjlcdUQ4M0NcdURGRkZcIn1dLFwidmVyc2lvblwiOjJ9LFwiY291cGxlX3dpdGhfaGVhcnRcIjp7XCJpZFwiOlwiY291cGxlX3dpdGhfaGVhcnRcIixcIm5hbWVcIjpcIkNvdXBsZSB3aXRoIEhlYXJ0XCIsXCJrZXl3b3Jkc1wiOltcInBhaXJcIixcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwiaHVtYW5cIixcImRhdGluZ1wiLFwidmFsZW50aW5lc1wiLFwibWFycmlhZ2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ5MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOTFcIn0se1widW5pZmllZFwiOlwiMWY0OTEtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzkxXHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDkxLTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5MVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ5MS0xZjNmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOTFcdUQ4M0NcdURGRkRcIn0se1widW5pZmllZFwiOlwiMWY0OTEtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzkxXHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDkxLTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM5MVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3b21hbi1oZWFydC1tYW5cIjp7XCJpZFwiOlwid29tYW4taGVhcnQtbWFuXCIsXCJuYW1lXCI6XCJDb3VwbGUgd2l0aCBIZWFydDogV29tYW4sIE1hblwiLFwia2V5d29yZHNcIjpbXCJ3b21hblwiLFwiaGVhcnQtbWFuXCIsXCJoZWFydFwiLFwibG92ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0NjhcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzY4XCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZiLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0NjgtMWYzZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZCXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzY4XHVEODNDXHVERkZCXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZjLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0NjgtMWYzZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZDXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzY4XHVEODNDXHVERkZDXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZkLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0NjgtMWYzZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZEXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzY4XHVEODNDXHVERkZEXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZlLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0NjgtMWYzZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZFXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzY4XHVEODNDXHVERkZFXCJ9LHtcInVuaWZpZWRcIjpcIjFmNDY5LTFmM2ZmLTIwMGQtMjc2NC1mZTBmLTIwMGQtMWY0NjgtMWYzZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHVEODNDXHVERkZGXHUyMDBEXHUyNzY0XHVGRTBGXHUyMDBEXHVEODNEXHVEQzY4XHVEODNDXHVERkZGXCJ9XSxcInZlcnNpb25cIjoyfSxcIm1hbi1oZWFydC1tYW5cIjp7XCJpZFwiOlwibWFuLWhlYXJ0LW1hblwiLFwibmFtZVwiOlwiQ291cGxlIHdpdGggSGVhcnQ6IE1hbiwgTWFuXCIsXCJrZXl3b3Jkc1wiOltcImhlYXJ0LW1hblwiLFwiaGVhcnRcIixcInBhaXJcIixcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwiaHVtYW5cIixcImRhdGluZ1wiLFwidmFsZW50aW5lc1wiLFwibWFycmlhZ2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYi0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY4LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmYy0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY4LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1x1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OFx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZC0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY4LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZS0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY4LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0xZjNmZi0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY4LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OFx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJ3b21hbi1oZWFydC13b21hblwiOntcImlkXCI6XCJ3b21hbi1oZWFydC13b21hblwiLFwibmFtZVwiOlwiQ291cGxlIHdpdGggSGVhcnQ6IFdvbWFuLCBXb21hblwiLFwia2V5d29yZHNcIjpbXCJoZWFydC13b21hblwiLFwiaGVhcnRcIixcInBhaXJcIixcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwiaHVtYW5cIixcImRhdGluZ1wiLFwidmFsZW50aW5lc1wiLFwibWFycmlhZ2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYi0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY5LTFmM2ZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQlwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmYy0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY5LTFmM2ZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1x1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OVx1RDgzQ1x1REZGQ1wifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZC0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY5LTFmM2ZkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRFwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZS0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY5LTFmM2ZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRVwifSx7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0xZjNmZi0yMDBkLTI3NjQtZmUwZi0yMDBkLTFmNDY5LTFmM2ZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlx1MjAwRFx1Mjc2NFx1RkUwRlx1MjAwRFx1RDgzRFx1REM2OVx1RDgzQ1x1REZGRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmYW1pbHlcIjp7XCJpZFwiOlwiZmFtaWx5XCIsXCJuYW1lXCI6XCJGYW1pbHlcIixcImtleXdvcmRzXCI6W1wiaG9tZVwiLFwicGFyZW50c1wiLFwiY2hpbGRcIixcIm1vbVwiLFwiZGFkXCIsXCJmYXRoZXJcIixcIm1vdGhlclwiLFwicGVvcGxlXCIsXCJodW1hblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDZhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2QVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtYW4td29tYW4tYm95XCI6e1wiaWRcIjpcIm1hbi13b21hbi1ib3lcIixcIm5hbWVcIjpcIkZhbWlseTogTWFuLCBXb21hbiwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwid29tYW4tYm95XCIsXCJmYW1pbHlcIixcIndvbWFuXCIsXCJsb3ZlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjQ2OS0yMDBkLTFmNDY2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRFx1REM2OVx1MjAwRFx1RDgzRFx1REM2NlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJtYW4td29tYW4tZ2lybFwiOntcImlkXCI6XCJtYW4td29tYW4tZ2lybFwiLFwibmFtZVwiOlwiRmFtaWx5OiBNYW4sIFdvbWFuLCBHaXJsXCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwid29tYW4tZ2lybFwiLFwiZmFtaWx5XCIsXCJ3b21hblwiLFwiaG9tZVwiLFwicGFyZW50c1wiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmNDY5LTIwMGQtMWY0NjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY3XCJ9XSxcInZlcnNpb25cIjoyfSxcIm1hbi13b21hbi1naXJsLWJveVwiOntcImlkXCI6XCJtYW4td29tYW4tZ2lybC1ib3lcIixcIm5hbWVcIjpcIkZhbWlseTogTWFuLCBXb21hbiwgR2lybCwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwid29tYW4tZ2lybC1ib3lcIixcImZhbWlseVwiLFwid29tYW5cIixcImdpcmxcIixcImhvbWVcIixcInBhcmVudHNcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkcmVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjQ2OS0yMDBkLTFmNDY3LTIwMGQtMWY0NjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY3XHUyMDBEXHVEODNEXHVEQzY2XCJ9XSxcInZlcnNpb25cIjoyfSxcIm1hbi13b21hbi1ib3ktYm95XCI6e1wiaWRcIjpcIm1hbi13b21hbi1ib3ktYm95XCIsXCJuYW1lXCI6XCJGYW1pbHk6IE1hbiwgV29tYW4sIEJveSwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwid29tYW4tYm95LWJveVwiLFwiZmFtaWx5XCIsXCJ3b21hblwiLFwiaG9tZVwiLFwicGFyZW50c1wiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRyZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmNDY5LTIwMGQtMWY0NjYtMjAwZC0xZjQ2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjZcdTIwMERcdUQ4M0RcdURDNjZcIn1dLFwidmVyc2lvblwiOjJ9LFwibWFuLXdvbWFuLWdpcmwtZ2lybFwiOntcImlkXCI6XCJtYW4td29tYW4tZ2lybC1naXJsXCIsXCJuYW1lXCI6XCJGYW1pbHk6IE1hbiwgV29tYW4sIEdpcmwsIEdpcmxcIixcImtleXdvcmRzXCI6W1wibWFuXCIsXCJ3b21hbi1naXJsLWdpcmxcIixcImZhbWlseVwiLFwid29tYW5cIixcImhvbWVcIixcInBhcmVudHNcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkcmVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjQ2OS0yMDBkLTFmNDY3LTIwMGQtMWY0NjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY3XHUyMDBEXHVEODNEXHVEQzY3XCJ9XSxcInZlcnNpb25cIjoyfSxcIm1hbi1tYW4tYm95XCI6e1wiaWRcIjpcIm1hbi1tYW4tYm95XCIsXCJuYW1lXCI6XCJGYW1pbHk6IE1hbiwgTWFuLCBCb3lcIixcImtleXdvcmRzXCI6W1wibWFuXCIsXCJtYW4tYm95XCIsXCJmYW1pbHlcIixcImhvbWVcIixcInBhcmVudHNcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkcmVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjQ2OC0yMDBkLTFmNDY2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRFx1REM2OFx1MjAwRFx1RDgzRFx1REM2NlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJtYW4tbWFuLWdpcmxcIjp7XCJpZFwiOlwibWFuLW1hbi1naXJsXCIsXCJuYW1lXCI6XCJGYW1pbHk6IE1hbiwgTWFuLCBHaXJsXCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwibWFuLWdpcmxcIixcImZhbWlseVwiLFwiaG9tZVwiLFwicGFyZW50c1wiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRyZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmNDY4LTIwMGQtMWY0NjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY3XCJ9XSxcInZlcnNpb25cIjoyfSxcIm1hbi1tYW4tZ2lybC1ib3lcIjp7XCJpZFwiOlwibWFuLW1hbi1naXJsLWJveVwiLFwibmFtZVwiOlwiRmFtaWx5OiBNYW4sIE1hbiwgR2lybCwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwibWFuLWdpcmwtYm95XCIsXCJmYW1pbHlcIixcImdpcmxcIixcImhvbWVcIixcInBhcmVudHNcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkcmVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjQ2OC0yMDBkLTFmNDY3LTIwMGQtMWY0NjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY3XHUyMDBEXHVEODNEXHVEQzY2XCJ9XSxcInZlcnNpb25cIjoyfSxcIm1hbi1tYW4tYm95LWJveVwiOntcImlkXCI6XCJtYW4tbWFuLWJveS1ib3lcIixcIm5hbWVcIjpcIkZhbWlseTogTWFuLCBNYW4sIEJveSwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwibWFuLWJveS1ib3lcIixcImZhbWlseVwiLFwiaG9tZVwiLFwicGFyZW50c1wiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRyZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmNDY4LTIwMGQtMWY0NjYtMjAwZC0xZjQ2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURDNjZcdTIwMERcdUQ4M0RcdURDNjZcIn1dLFwidmVyc2lvblwiOjJ9LFwibWFuLW1hbi1naXJsLWdpcmxcIjp7XCJpZFwiOlwibWFuLW1hbi1naXJsLWdpcmxcIixcIm5hbWVcIjpcIkZhbWlseTogTWFuLCBNYW4sIEdpcmwsIEdpcmxcIixcImtleXdvcmRzXCI6W1wibWFuXCIsXCJtYW4tZ2lybC1naXJsXCIsXCJmYW1pbHlcIixcImhvbWVcIixcInBhcmVudHNcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkcmVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjQ2OC0yMDBkLTFmNDY3LTIwMGQtMWY0NjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY3XHUyMDBEXHVEODNEXHVEQzY3XCJ9XSxcInZlcnNpb25cIjoyfSxcIndvbWFuLXdvbWFuLWJveVwiOntcImlkXCI6XCJ3b21hbi13b21hbi1ib3lcIixcIm5hbWVcIjpcIkZhbWlseTogV29tYW4sIFdvbWFuLCBCb3lcIixcImtleXdvcmRzXCI6W1wid29tYW5cIixcIndvbWFuLWJveVwiLFwiZmFtaWx5XCIsXCJob21lXCIsXCJwYXJlbnRzXCIsXCJwZW9wbGVcIixcImh1bWFuXCIsXCJjaGlsZHJlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWY0NjktMjAwZC0xZjQ2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjZcIn1dLFwidmVyc2lvblwiOjJ9LFwid29tYW4td29tYW4tZ2lybFwiOntcImlkXCI6XCJ3b21hbi13b21hbi1naXJsXCIsXCJuYW1lXCI6XCJGYW1pbHk6IFdvbWFuLCBXb21hbiwgR2lybFwiLFwia2V5d29yZHNcIjpbXCJ3b21hblwiLFwid29tYW4tZ2lybFwiLFwiZmFtaWx5XCIsXCJob21lXCIsXCJwYXJlbnRzXCIsXCJwZW9wbGVcIixcImh1bWFuXCIsXCJjaGlsZHJlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWY0NjktMjAwZC0xZjQ2N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjdcIn1dLFwidmVyc2lvblwiOjJ9LFwid29tYW4td29tYW4tZ2lybC1ib3lcIjp7XCJpZFwiOlwid29tYW4td29tYW4tZ2lybC1ib3lcIixcIm5hbWVcIjpcIkZhbWlseTogV29tYW4sIFdvbWFuLCBHaXJsLCBCb3lcIixcImtleXdvcmRzXCI6W1wid29tYW5cIixcIndvbWFuLWdpcmwtYm95XCIsXCJmYW1pbHlcIixcImdpcmxcIixcImhvbWVcIixcInBhcmVudHNcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkcmVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjQ2OS0yMDBkLTFmNDY3LTIwMGQtMWY0NjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY3XHUyMDBEXHVEODNEXHVEQzY2XCJ9XSxcInZlcnNpb25cIjoyfSxcIndvbWFuLXdvbWFuLWJveS1ib3lcIjp7XCJpZFwiOlwid29tYW4td29tYW4tYm95LWJveVwiLFwibmFtZVwiOlwiRmFtaWx5OiBXb21hbiwgV29tYW4sIEJveSwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIndvbWFuXCIsXCJ3b21hbi1ib3ktYm95XCIsXCJmYW1pbHlcIixcImhvbWVcIixcInBhcmVudHNcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkcmVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjQ2OS0yMDBkLTFmNDY2LTIwMGQtMWY0NjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY2XHUyMDBEXHVEODNEXHVEQzY2XCJ9XSxcInZlcnNpb25cIjoyfSxcIndvbWFuLXdvbWFuLWdpcmwtZ2lybFwiOntcImlkXCI6XCJ3b21hbi13b21hbi1naXJsLWdpcmxcIixcIm5hbWVcIjpcIkZhbWlseTogV29tYW4sIFdvbWFuLCBHaXJsLCBHaXJsXCIsXCJrZXl3b3Jkc1wiOltcIndvbWFuXCIsXCJ3b21hbi1naXJsLWdpcmxcIixcImZhbWlseVwiLFwiaG9tZVwiLFwicGFyZW50c1wiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRyZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmNDY5LTIwMGQtMWY0NjctMjAwZC0xZjQ2N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjdcdTIwMERcdUQ4M0RcdURDNjdcIn1dLFwidmVyc2lvblwiOjJ9LFwibWFuLWJveVwiOntcImlkXCI6XCJtYW4tYm95XCIsXCJuYW1lXCI6XCJGYW1pbHk6IE1hbiwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwiZmFtaWx5XCIsXCJob21lXCIsXCJwYXJlbnRcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjQ2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURDNjZcIn1dLFwidmVyc2lvblwiOjR9LFwibWFuLWJveS1ib3lcIjp7XCJpZFwiOlwibWFuLWJveS1ib3lcIixcIm5hbWVcIjpcIkZhbWlseTogTWFuLCBCb3ksIEJveVwiLFwia2V5d29yZHNcIjpbXCJtYW5cIixcImJveS1ib3lcIixcImZhbWlseVwiLFwiaG9tZVwiLFwicGFyZW50XCIsXCJwZW9wbGVcIixcImh1bWFuXCIsXCJjaGlsZHJlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWY0NjYtMjAwZC0xZjQ2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURDNjZcdTIwMERcdUQ4M0RcdURDNjZcIn1dLFwidmVyc2lvblwiOjR9LFwibWFuLWdpcmxcIjp7XCJpZFwiOlwibWFuLWdpcmxcIixcIm5hbWVcIjpcIkZhbWlseTogTWFuLCBHaXJsXCIsXCJrZXl3b3Jkc1wiOltcIm1hblwiLFwiZmFtaWx5XCIsXCJob21lXCIsXCJwYXJlbnRcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjgtMjAwZC0xZjQ2N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURDNjdcIn1dLFwidmVyc2lvblwiOjR9LFwibWFuLWdpcmwtYm95XCI6e1wiaWRcIjpcIm1hbi1naXJsLWJveVwiLFwibmFtZVwiOlwiRmFtaWx5OiBNYW4sIEdpcmwsIEJveVwiLFwia2V5d29yZHNcIjpbXCJtYW5cIixcImdpcmwtYm95XCIsXCJmYW1pbHlcIixcImdpcmxcIixcImhvbWVcIixcInBhcmVudFwiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRyZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OC0yMDBkLTFmNDY3LTIwMGQtMWY0NjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY4XHUyMDBEXHVEODNEXHVEQzY3XHUyMDBEXHVEODNEXHVEQzY2XCJ9XSxcInZlcnNpb25cIjo0fSxcIm1hbi1naXJsLWdpcmxcIjp7XCJpZFwiOlwibWFuLWdpcmwtZ2lybFwiLFwibmFtZVwiOlwiRmFtaWx5OiBNYW4sIEdpcmwsIEdpcmxcIixcImtleXdvcmRzXCI6W1wibWFuXCIsXCJnaXJsLWdpcmxcIixcImZhbWlseVwiLFwiaG9tZVwiLFwicGFyZW50XCIsXCJwZW9wbGVcIixcImh1bWFuXCIsXCJjaGlsZHJlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY4LTIwMGQtMWY0NjctMjAwZC0xZjQ2N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjhcdTIwMERcdUQ4M0RcdURDNjdcdTIwMERcdUQ4M0RcdURDNjdcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4tYm95XCI6e1wiaWRcIjpcIndvbWFuLWJveVwiLFwibmFtZVwiOlwiRmFtaWx5OiBXb21hbiwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIndvbWFuXCIsXCJmYW1pbHlcIixcImhvbWVcIixcInBhcmVudFwiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmNDY2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2OVx1MjAwRFx1RDgzRFx1REM2NlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ3b21hbi1ib3ktYm95XCI6e1wiaWRcIjpcIndvbWFuLWJveS1ib3lcIixcIm5hbWVcIjpcIkZhbWlseTogV29tYW4sIEJveSwgQm95XCIsXCJrZXl3b3Jkc1wiOltcIndvbWFuXCIsXCJib3ktYm95XCIsXCJmYW1pbHlcIixcImhvbWVcIixcInBhcmVudFwiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRyZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmNDY2LTIwMGQtMWY0NjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY2XHUyMDBEXHVEODNEXHVEQzY2XCJ9XSxcInZlcnNpb25cIjo0fSxcIndvbWFuLWdpcmxcIjp7XCJpZFwiOlwid29tYW4tZ2lybFwiLFwibmFtZVwiOlwiRmFtaWx5OiBXb21hbiwgR2lybFwiLFwia2V5d29yZHNcIjpbXCJ3b21hblwiLFwiZmFtaWx5XCIsXCJob21lXCIsXCJwYXJlbnRcIixcInBlb3BsZVwiLFwiaHVtYW5cIixcImNoaWxkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjktMjAwZC0xZjQ2N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjdcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4tZ2lybC1ib3lcIjp7XCJpZFwiOlwid29tYW4tZ2lybC1ib3lcIixcIm5hbWVcIjpcIkZhbWlseTogV29tYW4sIEdpcmwsIEJveVwiLFwia2V5d29yZHNcIjpbXCJ3b21hblwiLFwiZ2lybC1ib3lcIixcImZhbWlseVwiLFwiZ2lybFwiLFwiaG9tZVwiLFwicGFyZW50XCIsXCJwZW9wbGVcIixcImh1bWFuXCIsXCJjaGlsZHJlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY5LTIwMGQtMWY0NjctMjAwZC0xZjQ2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNjlcdTIwMERcdUQ4M0RcdURDNjdcdTIwMERcdUQ4M0RcdURDNjZcIn1dLFwidmVyc2lvblwiOjR9LFwid29tYW4tZ2lybC1naXJsXCI6e1wiaWRcIjpcIndvbWFuLWdpcmwtZ2lybFwiLFwibmFtZVwiOlwiRmFtaWx5OiBXb21hbiwgR2lybCwgR2lybFwiLFwia2V5d29yZHNcIjpbXCJ3b21hblwiLFwiZ2lybC1naXJsXCIsXCJmYW1pbHlcIixcImhvbWVcIixcInBhcmVudFwiLFwicGVvcGxlXCIsXCJodW1hblwiLFwiY2hpbGRyZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ2OS0yMDBkLTFmNDY3LTIwMGQtMWY0NjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY5XHUyMDBEXHVEODNEXHVEQzY3XHUyMDBEXHVEODNEXHVEQzY3XCJ9XSxcInZlcnNpb25cIjo0fSxcInNwZWFraW5nX2hlYWRfaW5fc2lsaG91ZXR0ZVwiOntcImlkXCI6XCJzcGVha2luZ19oZWFkX2luX3NpbGhvdWV0dGVcIixcIm5hbWVcIjpcIlNwZWFraW5nIEhlYWRcIixcImtleXdvcmRzXCI6W1wiaW5cIixcInNpbGhvdWV0dGVcIixcInVzZXJcIixcInBlcnNvblwiLFwiaHVtYW5cIixcInNpbmdcIixcInNheVwiLFwidGFsa1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNWUzLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEREUzXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJ1c3RfaW5fc2lsaG91ZXR0ZVwiOntcImlkXCI6XCJidXN0X2luX3NpbGhvdWV0dGVcIixcIm5hbWVcIjpcIkJ1c3QgaW4gU2lsaG91ZXR0ZVwiLFwia2V5d29yZHNcIjpbXCJ1c2VyXCIsXCJwZXJzb25cIixcImh1bWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzY0XCJ9XSxcInZlcnNpb25cIjoxfSxcImJ1c3RzX2luX3NpbGhvdWV0dGVcIjp7XCJpZFwiOlwiYnVzdHNfaW5fc2lsaG91ZXR0ZVwiLFwibmFtZVwiOlwiQnVzdHMgaW4gU2lsaG91ZXR0ZVwiLFwia2V5d29yZHNcIjpbXCJ1c2VyXCIsXCJwZXJzb25cIixcImh1bWFuXCIsXCJncm91cFwiLFwidGVhbVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDY1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwZW9wbGVfaHVnZ2luZ1wiOntcImlkXCI6XCJwZW9wbGVfaHVnZ2luZ1wiLFwibmFtZVwiOlwiUGVvcGxlIEh1Z2dpbmdcIixcImtleXdvcmRzXCI6W1wiY2FyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWMyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVDMlwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiZm9vdHByaW50c1wiOntcImlkXCI6XCJmb290cHJpbnRzXCIsXCJuYW1lXCI6XCJGb290cHJpbnRzXCIsXCJrZXl3b3Jkc1wiOltcImZlZXRcIixcInRyYWNraW5nXCIsXCJ3YWxraW5nXCIsXCJiZWFjaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2M1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb25rZXlfZmFjZVwiOntcImlkXCI6XCJtb25rZXlfZmFjZVwiLFwibmFtZVwiOlwiTW9ua2V5IEZhY2VcIixcImVtb3RpY29uc1wiOltcIjpvKVwiXSxcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcImNpcmN1c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDM1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMzNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb25rZXlcIjp7XCJpZFwiOlwibW9ua2V5XCIsXCJuYW1lXCI6XCJNb25rZXlcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcImJhbmFuYVwiLFwiY2lyY3VzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MTJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzEyXCJ9XSxcInZlcnNpb25cIjoxfSxcImdvcmlsbGFcIjp7XCJpZFwiOlwiZ29yaWxsYVwiLFwibmFtZVwiOlwiR29yaWxsYVwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiY2lyY3VzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5OGRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDhEXCJ9XSxcInZlcnNpb25cIjozfSxcIm9yYW5ndXRhblwiOntcImlkXCI6XCJvcmFuZ3V0YW5cIixcIm5hbWVcIjpcIk9yYW5ndXRhblwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlhN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQTdcIn1dLFwidmVyc2lvblwiOjEyfSxcImRvZ1wiOntcImlkXCI6XCJkb2dcIixcIm5hbWVcIjpcIkRvZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiZnJpZW5kXCIsXCJuYXR1cmVcIixcIndvb2ZcIixcInB1cHB5XCIsXCJwZXRcIixcImZhaXRoZnVsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MzZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzM2XCJ9XSxcInZlcnNpb25cIjoxfSxcImRvZzJcIjp7XCJpZFwiOlwiZG9nMlwiLFwibmFtZVwiOlwiRG9nXCIsXCJrZXl3b3Jkc1wiOltcImRvZzJcIixcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJmcmllbmRcIixcImRvZ2VcIixcInBldFwiLFwiZmFpdGhmdWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQxNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMTVcIn1dLFwidmVyc2lvblwiOjF9LFwiZ3VpZGVfZG9nXCI6e1wiaWRcIjpcImd1aWRlX2RvZ1wiLFwibmFtZVwiOlwiR3VpZGUgRG9nXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiYmxpbmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlhZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQUVcIn1dLFwidmVyc2lvblwiOjEyfSxcInNlcnZpY2VfZG9nXCI6e1wiaWRcIjpcInNlcnZpY2VfZG9nXCIsXCJuYW1lXCI6XCJTZXJ2aWNlIERvZ1wiLFwia2V5d29yZHNcIjpbXCJibGluZFwiLFwiYW5pbWFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MTUtMjAwZC0xZjliYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMTVcdTIwMERcdUQ4M0VcdUREQkFcIn1dLFwidmVyc2lvblwiOjEyfSxcInBvb2RsZVwiOntcImlkXCI6XCJwb29kbGVcIixcIm5hbWVcIjpcIlBvb2RsZVwiLFwia2V5d29yZHNcIjpbXCJkb2dcIixcImFuaW1hbFwiLFwiMTAxXCIsXCJuYXR1cmVcIixcInBldFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDI5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMyOVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3b2xmXCI6e1wiaWRcIjpcIndvbGZcIixcIm5hbWVcIjpcIldvbGZcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcIndpbGRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQzYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDM0FcIn1dLFwidmVyc2lvblwiOjF9LFwiZm94X2ZhY2VcIjp7XCJpZFwiOlwiZm94X2ZhY2VcIixcIm5hbWVcIjpcIkZveFwiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOThhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ4QVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJyYWNjb29uXCI6e1wiaWRcIjpcInJhY2Nvb25cIixcIm5hbWVcIjpcIlJhY2Nvb25cIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk5ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREOURcIn1dLFwidmVyc2lvblwiOjExfSxcImNhdFwiOntcImlkXCI6XCJjYXRcIixcIm5hbWVcIjpcIkNhdCBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibWVvd1wiLFwibmF0dXJlXCIsXCJwZXRcIixcImtpdHRlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDMxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMzMVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYXQyXCI6e1wiaWRcIjpcImNhdDJcIixcIm5hbWVcIjpcIkNhdFwiLFwia2V5d29yZHNcIjpbXCJjYXQyXCIsXCJhbmltYWxcIixcIm1lb3dcIixcInBldFwiLFwiY2F0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDA4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwOFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJibGFja19jYXRcIjp7XCJpZFwiOlwiYmxhY2tfY2F0XCIsXCJuYW1lXCI6XCJCbGFjayBDYXRcIixcImtleXdvcmRzXCI6W1wic3VwZXJzdGl0aW9uXCIsXCJsdWNrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MDgtMjAwZC0yYjFiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwOFx1MjAwRFx1MkIxQlwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwibGlvbl9mYWNlXCI6e1wiaWRcIjpcImxpb25fZmFjZVwiLFwibmFtZVwiOlwiTGlvblwiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTgxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ4MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0aWdlclwiOntcImlkXCI6XCJ0aWdlclwiLFwibmFtZVwiOlwiVGlnZXIgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImNhdFwiLFwiZGFuZ2VyXCIsXCJ3aWxkXCIsXCJuYXR1cmVcIixcInJvYXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQyZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMkZcIn1dLFwidmVyc2lvblwiOjF9LFwidGlnZXIyXCI6e1wiaWRcIjpcInRpZ2VyMlwiLFwibmFtZVwiOlwiVGlnZXJcIixcImtleXdvcmRzXCI6W1widGlnZXIyXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiLFwicm9hclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDA1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsZW9wYXJkXCI6e1wiaWRcIjpcImxlb3BhcmRcIixcIm5hbWVcIjpcIkxlb3BhcmRcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQwNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMDZcIn1dLFwidmVyc2lvblwiOjF9LFwiaG9yc2VcIjp7XCJpZFwiOlwiaG9yc2VcIixcIm5hbWVcIjpcIkhvcnNlIEZhY2VcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJicm93blwiLFwibmF0dXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MzRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzM0XCJ9XSxcInZlcnNpb25cIjoxfSxcIm1vb3NlXCI6e1wiaWRcIjpcIm1vb3NlXCIsXCJuYW1lXCI6XCJNb29zZVwiLFwia2V5d29yZHNcIjpbXCJzaHJla1wiLFwiY2FuYWRhXCIsXCJzd2VkZW5cIixcInN2ZW5cIixcImNvb2xcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFjZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQ0VcIn1dLFwidmVyc2lvblwiOjE1fSxcImRvbmtleVwiOntcImlkXCI6XCJkb25rZXlcIixcIm5hbWVcIjpcIkRvbmtleVwiLFwia2V5d29yZHNcIjpbXCJlZXlvcmVcIixcIm11bGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFjZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQ0ZcIn1dLFwidmVyc2lvblwiOjE1fSxcInJhY2Vob3JzZVwiOntcImlkXCI6XCJyYWNlaG9yc2VcIixcIm5hbWVcIjpcIkhvcnNlXCIsXCJrZXl3b3Jkc1wiOltcInJhY2Vob3JzZVwiLFwiYW5pbWFsXCIsXCJnYW1ibGVcIixcImx1Y2tcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQwZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMEVcIn1dLFwidmVyc2lvblwiOjF9LFwidW5pY29ybl9mYWNlXCI6e1wiaWRcIjpcInVuaWNvcm5fZmFjZVwiLFwibmFtZVwiOlwiVW5pY29yblwiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiLFwibXlzdGljYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk4NFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREODRcIn1dLFwidmVyc2lvblwiOjF9LFwiemVicmFfZmFjZVwiOntcImlkXCI6XCJ6ZWJyYV9mYWNlXCIsXCJuYW1lXCI6XCJaZWJyYVwiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiLFwic3RyaXBlc1wiLFwic2FmYXJpXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5OTNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDkzXCJ9XSxcInZlcnNpb25cIjo1fSxcImRlZXJcIjp7XCJpZFwiOlwiZGVlclwiLFwibmFtZVwiOlwiRGVlclwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiaG9ybnNcIixcInZlbmlzb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk4Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREOENcIn1dLFwidmVyc2lvblwiOjN9LFwiYmlzb25cIjp7XCJpZFwiOlwiYmlzb25cIixcIm5hbWVcIjpcIkJpc29uXCIsXCJrZXl3b3Jkc1wiOltcIm94XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YWNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREFDXCJ9XSxcInZlcnNpb25cIjoxM30sXCJjb3dcIjp7XCJpZFwiOlwiY293XCIsXCJuYW1lXCI6XCJDb3cgRmFjZVwiLFwia2V5d29yZHNcIjpbXCJiZWVmXCIsXCJveFwiLFwiYW5pbWFsXCIsXCJuYXR1cmVcIixcIm1vb1wiLFwibWlsa1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDJlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMyRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJveFwiOntcImlkXCI6XCJveFwiLFwibmFtZVwiOlwiT3hcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJjb3dcIixcImJlZWZcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQwMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMDJcIn1dLFwidmVyc2lvblwiOjF9LFwid2F0ZXJfYnVmZmFsb1wiOntcImlkXCI6XCJ3YXRlcl9idWZmYWxvXCIsXCJuYW1lXCI6XCJXYXRlciBCdWZmYWxvXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJveFwiLFwiY293XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MDNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzAzXCJ9XSxcInZlcnNpb25cIjoxfSxcImNvdzJcIjp7XCJpZFwiOlwiY293MlwiLFwibmFtZVwiOlwiQ293XCIsXCJrZXl3b3Jkc1wiOltcImNvdzJcIixcImJlZWZcIixcIm94XCIsXCJhbmltYWxcIixcIm5hdHVyZVwiLFwibW9vXCIsXCJtaWxrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MDRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzA0XCJ9XSxcInZlcnNpb25cIjoxfSxcInBpZ1wiOntcImlkXCI6XCJwaWdcIixcIm5hbWVcIjpcIlBpZyBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwib2lua1wiLFwibmF0dXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MzdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzM3XCJ9XSxcInZlcnNpb25cIjoxfSxcInBpZzJcIjp7XCJpZFwiOlwicGlnMlwiLFwibmFtZVwiOlwiUGlnXCIsXCJrZXl3b3Jkc1wiOltcInBpZzJcIixcImFuaW1hbFwiLFwibmF0dXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MTZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzE2XCJ9XSxcInZlcnNpb25cIjoxfSxcImJvYXJcIjp7XCJpZFwiOlwiYm9hclwiLFwibmFtZVwiOlwiQm9hclwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDE3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMxN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwaWdfbm9zZVwiOntcImlkXCI6XCJwaWdfbm9zZVwiLFwibmFtZVwiOlwiUGlnIE5vc2VcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJvaW5rXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0M2RcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzNEXCJ9XSxcInZlcnNpb25cIjoxfSxcInJhbVwiOntcImlkXCI6XCJyYW1cIixcIm5hbWVcIjpcIlJhbVwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcInNoZWVwXCIsXCJuYXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic2hlZXBcIjp7XCJpZFwiOlwic2hlZXBcIixcIm5hbWVcIjpcIkV3ZVwiLFwia2V5d29yZHNcIjpbXCJzaGVlcFwiLFwiYW5pbWFsXCIsXCJuYXR1cmVcIixcIndvb2xcIixcInNoaXBpdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDExXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMxMVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJnb2F0XCI6e1wiaWRcIjpcImdvYXRcIixcIm5hbWVcIjpcIkdvYXRcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQxMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMTBcIn1dLFwidmVyc2lvblwiOjF9LFwiZHJvbWVkYXJ5X2NhbWVsXCI6e1wiaWRcIjpcImRyb21lZGFyeV9jYW1lbFwiLFwibmFtZVwiOlwiQ2FtZWxcIixcImtleXdvcmRzXCI6W1wiZHJvbWVkYXJ5XCIsXCJhbmltYWxcIixcImhvdFwiLFwiZGVzZXJ0XCIsXCJodW1wXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MmFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzJBXCJ9XSxcInZlcnNpb25cIjoxfSxcImNhbWVsXCI6e1wiaWRcIjpcImNhbWVsXCIsXCJuYW1lXCI6XCJCYWN0cmlhbiBDYW1lbFwiLFwia2V5d29yZHNcIjpbXCJ0d29cIixcImh1bXBcIixcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJob3RcIixcImRlc2VydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDJiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMyQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsbGFtYVwiOntcImlkXCI6XCJsbGFtYVwiLFwibmFtZVwiOlwiTGxhbWFcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcImFscGFjYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTk5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ5OVwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiZ2lyYWZmZV9mYWNlXCI6e1wiaWRcIjpcImdpcmFmZmVfZmFjZVwiLFwibmFtZVwiOlwiR2lyYWZmZVwiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiLFwic3BvdHNcIixcInNhZmFyaVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTkyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ5MlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJlbGVwaGFudFwiOntcImlkXCI6XCJlbGVwaGFudFwiLFwibmFtZVwiOlwiRWxlcGhhbnRcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcIm5vc2VcIixcInRoXCIsXCJjaXJjdXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQxOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMThcIn1dLFwidmVyc2lvblwiOjF9LFwibWFtbW90aFwiOntcImlkXCI6XCJtYW1tb3RoXCIsXCJuYW1lXCI6XCJNYW1tb3RoXCIsXCJrZXl3b3Jkc1wiOltcImVsZXBoYW50XCIsXCJ0dXNrc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWEzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERBM1wifV0sXCJ2ZXJzaW9uXCI6MTN9LFwicmhpbm9jZXJvc1wiOntcImlkXCI6XCJyaGlub2Nlcm9zXCIsXCJuYW1lXCI6XCJSaGlub2Nlcm9zXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJob3JuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5OGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDhGXCJ9XSxcInZlcnNpb25cIjozfSxcImhpcHBvcG90YW11c1wiOntcImlkXCI6XCJoaXBwb3BvdGFtdXNcIixcIm5hbWVcIjpcIkhpcHBvcG90YW11c1wiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTliXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ5QlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwibW91c2VcIjp7XCJpZFwiOlwibW91c2VcIixcIm5hbWVcIjpcIk1vdXNlIEZhY2VcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcImNoZWVzZVwiLFwid2VkZ2VcIixcInJvZGVudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMyRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb3VzZTJcIjp7XCJpZFwiOlwibW91c2UyXCIsXCJuYW1lXCI6XCJNb3VzZVwiLFwia2V5d29yZHNcIjpbXCJtb3VzZTJcIixcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJyb2RlbnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQwMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMDFcIn1dLFwidmVyc2lvblwiOjF9LFwicmF0XCI6e1wiaWRcIjpcInJhdFwiLFwibmFtZVwiOlwiUmF0XCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibW91c2VcIixcInJvZGVudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDAwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoYW1zdGVyXCI6e1wiaWRcIjpcImhhbXN0ZXJcIixcIm5hbWVcIjpcIkhhbXN0ZXJcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQzOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMzlcIn1dLFwidmVyc2lvblwiOjF9LFwicmFiYml0XCI6e1wiaWRcIjpcInJhYmJpdFwiLFwibmFtZVwiOlwiUmFiYml0IEZhY2VcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcInBldFwiLFwic3ByaW5nXCIsXCJtYWdpY1wiLFwiYnVubnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQzMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMzBcIn1dLFwidmVyc2lvblwiOjF9LFwicmFiYml0MlwiOntcImlkXCI6XCJyYWJiaXQyXCIsXCJuYW1lXCI6XCJSYWJiaXRcIixcImtleXdvcmRzXCI6W1wicmFiYml0MlwiLFwiYW5pbWFsXCIsXCJuYXR1cmVcIixcInBldFwiLFwibWFnaWNcIixcInNwcmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDA3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjaGlwbXVua1wiOntcImlkXCI6XCJjaGlwbXVua1wiLFwibmFtZVwiOlwiQ2hpcG11bmtcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcInJvZGVudFwiLFwic3F1aXJyZWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQzZi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMzRlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiZWF2ZXJcIjp7XCJpZFwiOlwiYmVhdmVyXCIsXCJuYW1lXCI6XCJCZWF2ZXJcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJyb2RlbnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlhYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQUJcIn1dLFwidmVyc2lvblwiOjEzfSxcImhlZGdlaG9nXCI6e1wiaWRcIjpcImhlZGdlaG9nXCIsXCJuYW1lXCI6XCJIZWRnZWhvZ1wiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwic3BpbnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk5NFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREOTRcIn1dLFwidmVyc2lvblwiOjV9LFwiYmF0XCI6e1wiaWRcIjpcImJhdFwiLFwibmFtZVwiOlwiQmF0XCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJibGluZFwiLFwidmFtcGlyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTg3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ4N1wifV0sXCJ2ZXJzaW9uXCI6M30sXCJiZWFyXCI6e1wiaWRcIjpcImJlYXJcIixcIm5hbWVcIjpcIkJlYXJcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcIndpbGRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQzYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDM0JcIn1dLFwidmVyc2lvblwiOjF9LFwicG9sYXJfYmVhclwiOntcImlkXCI6XCJwb2xhcl9iZWFyXCIsXCJuYW1lXCI6XCJQb2xhciBCZWFyXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiYXJjdGljXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0M2ItMjAwZC0yNzQ0LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzNCXHUyMDBEXHUyNzQ0XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxM30sXCJrb2FsYVwiOntcImlkXCI6XCJrb2FsYVwiLFwibmFtZVwiOlwiS29hbGFcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQyOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMjhcIn1dLFwidmVyc2lvblwiOjF9LFwicGFuZGFfZmFjZVwiOntcImlkXCI6XCJwYW5kYV9mYWNlXCIsXCJuYW1lXCI6XCJQYW5kYVwiLFwia2V5d29yZHNcIjpbXCJmYWNlXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDNjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMzQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzbG90aFwiOntcImlkXCI6XCJzbG90aFwiLFwibmFtZVwiOlwiU2xvdGhcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YTVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREE1XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJvdHRlclwiOntcImlkXCI6XCJvdHRlclwiLFwibmFtZVwiOlwiT3R0ZXJcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YTZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREE2XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJza3Vua1wiOntcImlkXCI6XCJza3Vua1wiLFwibmFtZVwiOlwiU2t1bmtcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YThcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREE4XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJrYW5nYXJvb1wiOntcImlkXCI6XCJrYW5nYXJvb1wiLFwibmFtZVwiOlwiS2FuZ2Fyb29cIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcImF1c3RyYWxpYVwiLFwiam9leVwiLFwiaG9wXCIsXCJtYXJzdXBpYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk5OFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREOThcIn1dLFwidmVyc2lvblwiOjExfSxcImJhZGdlclwiOntcImlkXCI6XCJiYWRnZXJcIixcIm5hbWVcIjpcIkJhZGdlclwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiaG9uZXlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlhMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQTFcIn1dLFwidmVyc2lvblwiOjExfSxcImZlZXRcIjp7XCJpZFwiOlwiZmVldFwiLFwibmFtZVwiOlwiUGF3IFByaW50c1wiLFwia2V5d29yZHNcIjpbXCJmZWV0XCIsXCJhbmltYWxcIixcInRyYWNraW5nXCIsXCJmb290cHJpbnRzXCIsXCJkb2dcIixcImNhdFwiLFwicGV0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0M2VcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzNFXCJ9XSxcInZlcnNpb25cIjoxfSxcInR1cmtleVwiOntcImlkXCI6XCJ0dXJrZXlcIixcIm5hbWVcIjpcIlR1cmtleVwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImJpcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk4M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREODNcIn1dLFwidmVyc2lvblwiOjF9LFwiY2hpY2tlblwiOntcImlkXCI6XCJjaGlja2VuXCIsXCJuYW1lXCI6XCJDaGlja2VuXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiY2x1Y2tcIixcIm5hdHVyZVwiLFwiYmlyZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDE0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMxNFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyb29zdGVyXCI6e1wiaWRcIjpcInJvb3N0ZXJcIixcIm5hbWVcIjpcIlJvb3N0ZXJcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcImNoaWNrZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQxM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMTNcIn1dLFwidmVyc2lvblwiOjF9LFwiaGF0Y2hpbmdfY2hpY2tcIjp7XCJpZFwiOlwiaGF0Y2hpbmdfY2hpY2tcIixcIm5hbWVcIjpcIkhhdGNoaW5nIENoaWNrXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiY2hpY2tlblwiLFwiZWdnXCIsXCJib3JuXCIsXCJiYWJ5XCIsXCJiaXJkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzIzXCJ9XSxcInZlcnNpb25cIjoxfSxcImJhYnlfY2hpY2tcIjp7XCJpZFwiOlwiYmFieV9jaGlja1wiLFwibmFtZVwiOlwiQmFieSBDaGlja1wiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImNoaWNrZW5cIixcImJpcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQyNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMjRcIn1dLFwidmVyc2lvblwiOjF9LFwiaGF0Y2hlZF9jaGlja1wiOntcImlkXCI6XCJoYXRjaGVkX2NoaWNrXCIsXCJuYW1lXCI6XCJGcm9udC1GYWNpbmcgQmFieSBDaGlja1wiLFwia2V5d29yZHNcIjpbXCJoYXRjaGVkXCIsXCJmcm9udFwiLFwiZmFjaW5nXCIsXCJhbmltYWxcIixcImNoaWNrZW5cIixcImJpcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQyNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMjVcIn1dLFwidmVyc2lvblwiOjF9LFwiYmlyZFwiOntcImlkXCI6XCJiaXJkXCIsXCJuYW1lXCI6XCJCaXJkXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJmbHlcIixcInR3ZWV0XCIsXCJzcHJpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQyNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMjZcIn1dLFwidmVyc2lvblwiOjF9LFwicGVuZ3VpblwiOntcImlkXCI6XCJwZW5ndWluXCIsXCJuYW1lXCI6XCJQZW5ndWluXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzI3XCJ9XSxcInZlcnNpb25cIjoxfSxcImRvdmVfb2ZfcGVhY2VcIjp7XCJpZFwiOlwiZG92ZV9vZl9wZWFjZVwiLFwibmFtZVwiOlwiRG92ZVwiLFwia2V5d29yZHNcIjpbXCJvZlwiLFwicGVhY2VcIixcImFuaW1hbFwiLFwiYmlyZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTRhLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDRBXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImVhZ2xlXCI6e1wiaWRcIjpcImVhZ2xlXCIsXCJuYW1lXCI6XCJFYWdsZVwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiYmlyZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTg1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ4NVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJkdWNrXCI6e1wiaWRcIjpcImR1Y2tcIixcIm5hbWVcIjpcIkR1Y2tcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcImJpcmRcIixcIm1hbGxhcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk4NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREODZcIn1dLFwidmVyc2lvblwiOjN9LFwic3dhblwiOntcImlkXCI6XCJzd2FuXCIsXCJuYW1lXCI6XCJTd2FuXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJiaXJkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YTJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREEyXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJvd2xcIjp7XCJpZFwiOlwib3dsXCIsXCJuYW1lXCI6XCJPd2xcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcImJpcmRcIixcImhvb3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk4OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREODlcIn1dLFwidmVyc2lvblwiOjN9LFwiZG9kb1wiOntcImlkXCI6XCJkb2RvXCIsXCJuYW1lXCI6XCJEb2RvXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiYmlyZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWE0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERBNFwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiZmVhdGhlclwiOntcImlkXCI6XCJmZWF0aGVyXCIsXCJuYW1lXCI6XCJGZWF0aGVyXCIsXCJrZXl3b3Jkc1wiOltcImJpcmRcIixcImZseVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWI2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVCNlwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiZmxhbWluZ29cIjp7XCJpZFwiOlwiZmxhbWluZ29cIixcIm5hbWVcIjpcIkZsYW1pbmdvXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWE5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERBOVwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwicGVhY29ja1wiOntcImlkXCI6XCJwZWFjb2NrXCIsXCJuYW1lXCI6XCJQZWFjb2NrXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJwZWFoZW5cIixcImJpcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk5YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREOUFcIn1dLFwidmVyc2lvblwiOjExfSxcInBhcnJvdFwiOntcImlkXCI6XCJwYXJyb3RcIixcIm5hbWVcIjpcIlBhcnJvdFwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiYmlyZFwiLFwicGlyYXRlXCIsXCJ0YWxrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5OWNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDlDXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJ3aW5nXCI6e1wiaWRcIjpcIndpbmdcIixcIm5hbWVcIjpcIldpbmdcIixcImtleXdvcmRzXCI6W1wiYW5nZWxcIixcImJpcmRzXCIsXCJmbHlpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFiZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQkRcIn1dLFwidmVyc2lvblwiOjE1fSxcImJsYWNrX2JpcmRcIjp7XCJpZFwiOlwiYmxhY2tfYmlyZFwiLFwibmFtZVwiOlwiQmxhY2sgQmlyZFwiLFwia2V5d29yZHNcIjpbXCJjcm93XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MjYtMjAwZC0yYjFiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMyNlx1MjAwRFx1MkIxQlwifV0sXCJ2ZXJzaW9uXCI6MTV9LFwiZ29vc2VcIjp7XCJpZFwiOlwiZ29vc2VcIixcIm5hbWVcIjpcIkdvb3NlXCIsXCJrZXl3b3Jkc1wiOltcInNpbGx5XCIsXCJqZW1pbWFcIixcImdvb3NlYnVtcHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFiZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQkZcIn1dLFwidmVyc2lvblwiOjE1fSxcImZyb2dcIjp7XCJpZFwiOlwiZnJvZ1wiLFwibmFtZVwiOlwiRnJvZ1wiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiY3JvYWtcIixcInRvYWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQzOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMzhcIn1dLFwidmVyc2lvblwiOjF9LFwiY3JvY29kaWxlXCI6e1wiaWRcIjpcImNyb2NvZGlsZVwiLFwibmFtZVwiOlwiQ3JvY29kaWxlXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJyZXB0aWxlXCIsXCJsaXphcmRcIixcImFsbGlnYXRvclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDBhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0dXJ0bGVcIjp7XCJpZFwiOlwidHVydGxlXCIsXCJuYW1lXCI6XCJUdXJ0bGVcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJzbG93XCIsXCJuYXR1cmVcIixcInRvcnRvaXNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MjJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzIyXCJ9XSxcInZlcnNpb25cIjoxfSxcImxpemFyZFwiOntcImlkXCI6XCJsaXphcmRcIixcIm5hbWVcIjpcIkxpemFyZFwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwicmVwdGlsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOThlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ4RVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJzbmFrZVwiOntcImlkXCI6XCJzbmFrZVwiLFwibmFtZVwiOlwiU25ha2VcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJldmlsXCIsXCJuYXR1cmVcIixcImhpc3NcIixcInB5dGhvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDBkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkcmFnb25fZmFjZVwiOntcImlkXCI6XCJkcmFnb25fZmFjZVwiLFwibmFtZVwiOlwiRHJhZ29uIEZhY2VcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJteXRoXCIsXCJuYXR1cmVcIixcImNoaW5lc2VcIixcImdyZWVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MzJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzMyXCJ9XSxcInZlcnNpb25cIjoxfSxcImRyYWdvblwiOntcImlkXCI6XCJkcmFnb25cIixcIm5hbWVcIjpcIkRyYWdvblwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm15dGhcIixcIm5hdHVyZVwiLFwiY2hpbmVzZVwiLFwiZ3JlZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQwOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMDlcIn1dLFwidmVyc2lvblwiOjF9LFwic2F1cm9wb2RcIjp7XCJpZFwiOlwic2F1cm9wb2RcIixcIm5hbWVcIjpcIlNhdXJvcG9kXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJkaW5vc2F1clwiLFwiYnJhY2hpb3NhdXJ1c1wiLFwiYnJvbnRvc2F1cnVzXCIsXCJkaXBsb2RvY3VzXCIsXCJleHRpbmN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5OTVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDk1XCJ9XSxcInZlcnNpb25cIjo1fSxcInQtcmV4XCI6e1wiaWRcIjpcInQtcmV4XCIsXCJuYW1lXCI6XCJULVJleFwiLFwia2V5d29yZHNcIjpbXCJ0XCIsXCJyZXhcIixcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJkaW5vc2F1clwiLFwidHlyYW5ub3NhdXJ1c1wiLFwiZXh0aW5jdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTk2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ5NlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJ3aGFsZVwiOntcImlkXCI6XCJ3aGFsZVwiLFwibmFtZVwiOlwiU3BvdXRpbmcgV2hhbGVcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJuYXR1cmVcIixcInNlYVwiLFwib2NlYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQzM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMzNcIn1dLFwidmVyc2lvblwiOjF9LFwid2hhbGUyXCI6e1wiaWRcIjpcIndoYWxlMlwiLFwibmFtZVwiOlwiV2hhbGVcIixcImtleXdvcmRzXCI6W1wid2hhbGUyXCIsXCJhbmltYWxcIixcIm5hdHVyZVwiLFwic2VhXCIsXCJvY2VhblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDBiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkb2xwaGluXCI6e1wiaWRcIjpcImRvbHBoaW5cIixcIm5hbWVcIjpcIkRvbHBoaW5cIixcImtleXdvcmRzXCI6W1wiZmxpcHBlclwiLFwiYW5pbWFsXCIsXCJuYXR1cmVcIixcImZpc2hcIixcInNlYVwiLFwib2NlYW5cIixcImZpbnNcIixcImJlYWNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzJDXCJ9XSxcInZlcnNpb25cIjoxfSxcInNlYWxcIjp7XCJpZFwiOlwic2VhbFwiLFwibmFtZVwiOlwiU2VhbFwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImNyZWF0dXJlXCIsXCJzZWFcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlhZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQURcIn1dLFwidmVyc2lvblwiOjEzfSxcImZpc2hcIjp7XCJpZFwiOlwiZmlzaFwiLFwibmFtZVwiOlwiRmlzaFwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImZvb2RcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDFmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMxRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0cm9waWNhbF9maXNoXCI6e1wiaWRcIjpcInRyb3BpY2FsX2Zpc2hcIixcIm5hbWVcIjpcIlRyb3BpY2FsIEZpc2hcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJzd2ltXCIsXCJvY2VhblwiLFwiYmVhY2hcIixcIm5lbW9cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQyMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMjBcIn1dLFwidmVyc2lvblwiOjF9LFwiYmxvd2Zpc2hcIjp7XCJpZFwiOlwiYmxvd2Zpc2hcIixcIm5hbWVcIjpcIkJsb3dmaXNoXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJmb29kXCIsXCJzZWFcIixcIm9jZWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0MjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzIxXCJ9XSxcInZlcnNpb25cIjoxfSxcInNoYXJrXCI6e1wiaWRcIjpcInNoYXJrXCIsXCJuYW1lXCI6XCJTaGFya1wiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiZmlzaFwiLFwic2VhXCIsXCJvY2VhblwiLFwiamF3c1wiLFwiZmluc1wiLFwiYmVhY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk4OFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREODhcIn1dLFwidmVyc2lvblwiOjN9LFwib2N0b3B1c1wiOntcImlkXCI6XCJvY3RvcHVzXCIsXCJuYW1lXCI6XCJPY3RvcHVzXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiY3JlYXR1cmVcIixcIm9jZWFuXCIsXCJzZWFcIixcIm5hdHVyZVwiLFwiYmVhY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQxOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMTlcIn1dLFwidmVyc2lvblwiOjF9LFwic2hlbGxcIjp7XCJpZFwiOlwic2hlbGxcIixcIm5hbWVcIjpcIlNwaXJhbCBTaGVsbFwiLFwia2V5d29yZHNcIjpbXCJuYXR1cmVcIixcInNlYVwiLFwiYmVhY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQxYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMUFcIn1dLFwidmVyc2lvblwiOjF9LFwiY29yYWxcIjp7XCJpZFwiOlwiY29yYWxcIixcIm5hbWVcIjpcIkNvcmFsXCIsXCJrZXl3b3Jkc1wiOltcIm9jZWFuXCIsXCJzZWFcIixcInJlZWZcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFiOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQjhcIn1dLFwidmVyc2lvblwiOjE0fSxcImplbGx5ZmlzaFwiOntcImlkXCI6XCJqZWxseWZpc2hcIixcIm5hbWVcIjpcIkplbGx5ZmlzaFwiLFwia2V5d29yZHNcIjpbXCJzdGluZ1wiLFwidGVudGFjbGVzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYmNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUJDXCJ9XSxcInZlcnNpb25cIjoxNX0sXCJzbmFpbFwiOntcImlkXCI6XCJzbmFpbFwiLFwibmFtZVwiOlwiU25haWxcIixcImtleXdvcmRzXCI6W1wic2xvd1wiLFwiYW5pbWFsXCIsXCJzaGVsbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDBjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMwQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJidXR0ZXJmbHlcIjp7XCJpZFwiOlwiYnV0dGVyZmx5XCIsXCJuYW1lXCI6XCJCdXR0ZXJmbHlcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJpbnNlY3RcIixcIm5hdHVyZVwiLFwiY2F0ZXJwaWxsYXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk4YlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREOEJcIn1dLFwidmVyc2lvblwiOjN9LFwiYnVnXCI6e1wiaWRcIjpcImJ1Z1wiLFwibmFtZVwiOlwiQnVnXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiaW5zZWN0XCIsXCJuYXR1cmVcIixcIndvcm1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQxYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMUJcIn1dLFwidmVyc2lvblwiOjF9LFwiYW50XCI6e1wiaWRcIjpcImFudFwiLFwibmFtZVwiOlwiQW50XCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiaW5zZWN0XCIsXCJuYXR1cmVcIixcImJ1Z1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDFjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMxQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiZWVcIjp7XCJpZFwiOlwiYmVlXCIsXCJuYW1lXCI6XCJIb25leWJlZVwiLFwia2V5d29yZHNcIjpbXCJiZWVcIixcImFuaW1hbFwiLFwiaW5zZWN0XCIsXCJuYXR1cmVcIixcImJ1Z1wiLFwic3ByaW5nXCIsXCJob25leVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDFkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REMxRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiZWV0bGVcIjp7XCJpZFwiOlwiYmVldGxlXCIsXCJuYW1lXCI6XCJCZWV0bGVcIixcImtleXdvcmRzXCI6W1wiaW5zZWN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUIyXCJ9XSxcInZlcnNpb25cIjoxM30sXCJsYWR5YnVnXCI6e1wiaWRcIjpcImxhZHlidWdcIixcIm5hbWVcIjpcIkxhZHkgQmVldGxlXCIsXCJrZXl3b3Jkc1wiOltcImxhZHlidWdcIixcImFuaW1hbFwiLFwiaW5zZWN0XCIsXCJuYXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQxZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDMUVcIn1dLFwidmVyc2lvblwiOjF9LFwiY3JpY2tldFwiOntcImlkXCI6XCJjcmlja2V0XCIsXCJuYW1lXCI6XCJDcmlja2V0XCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiY2hpcnBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk5N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREOTdcIn1dLFwidmVyc2lvblwiOjV9LFwiY29ja3JvYWNoXCI6e1wiaWRcIjpcImNvY2tyb2FjaFwiLFwibmFtZVwiOlwiQ29ja3JvYWNoXCIsXCJrZXl3b3Jkc1wiOltcImluc2VjdFwiLFwicGVzdHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFiM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQjNcIn1dLFwidmVyc2lvblwiOjEzfSxcInNwaWRlclwiOntcImlkXCI6XCJzcGlkZXJcIixcIm5hbWVcIjpcIlNwaWRlclwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImFyYWNobmlkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NzctZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic3BpZGVyX3dlYlwiOntcImlkXCI6XCJzcGlkZXJfd2ViXCIsXCJuYW1lXCI6XCJTcGlkZXIgV2ViXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwiaW5zZWN0XCIsXCJhcmFjaG5pZFwiLFwic2lsa1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTc4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc4XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNjb3JwaW9uXCI6e1wiaWRcIjpcInNjb3JwaW9uXCIsXCJuYW1lXCI6XCJTY29ycGlvblwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImFyYWNobmlkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ODJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDgyXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1vc3F1aXRvXCI6e1wiaWRcIjpcIm1vc3F1aXRvXCIsXCJuYW1lXCI6XCJNb3NxdWl0b1wiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwiaW5zZWN0XCIsXCJtYWxhcmlhXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5OWZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDlGXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJmbHlcIjp7XCJpZFwiOlwiZmx5XCIsXCJuYW1lXCI6XCJGbHlcIixcImtleXdvcmRzXCI6W1wiaW5zZWN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUIwXCJ9XSxcInZlcnNpb25cIjoxM30sXCJ3b3JtXCI6e1wiaWRcIjpcIndvcm1cIixcIm5hbWVcIjpcIldvcm1cIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYjFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUIxXCJ9XSxcInZlcnNpb25cIjoxM30sXCJtaWNyb2JlXCI6e1wiaWRcIjpcIm1pY3JvYmVcIixcIm5hbWVcIjpcIk1pY3JvYmVcIixcImtleXdvcmRzXCI6W1wiYW1vZWJhXCIsXCJiYWN0ZXJpYVwiLFwiZ2VybXNcIixcInZpcnVzXCIsXCJjb3ZpZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWEwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERBMFwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiYm91cXVldFwiOntcImlkXCI6XCJib3VxdWV0XCIsXCJuYW1lXCI6XCJCb3VxdWV0XCIsXCJrZXl3b3Jkc1wiOltcImZsb3dlcnNcIixcIm5hdHVyZVwiLFwic3ByaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0OTBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzkwXCJ9XSxcInZlcnNpb25cIjoxfSxcImNoZXJyeV9ibG9zc29tXCI6e1wiaWRcIjpcImNoZXJyeV9ibG9zc29tXCIsXCJuYW1lXCI6XCJDaGVycnkgQmxvc3NvbVwiLFwia2V5d29yZHNcIjpbXCJuYXR1cmVcIixcInBsYW50XCIsXCJzcHJpbmdcIixcImZsb3dlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzM4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYzOFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3aGl0ZV9mbG93ZXJcIjp7XCJpZFwiOlwid2hpdGVfZmxvd2VyXCIsXCJuYW1lXCI6XCJXaGl0ZSBGbG93ZXJcIixcImtleXdvcmRzXCI6W1wiamFwYW5lc2VcIixcInNwcmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGFlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsb3R1c1wiOntcImlkXCI6XCJsb3R1c1wiLFwibmFtZVwiOlwiTG90dXNcIixcImtleXdvcmRzXCI6W1wiZmxvd2VyXCIsXCJjYWxtXCIsXCJtZWRpdGF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUI3XCJ9XSxcInZlcnNpb25cIjoxNH0sXCJyb3NldHRlXCI6e1wiaWRcIjpcInJvc2V0dGVcIixcIm5hbWVcIjpcIlJvc2V0dGVcIixcImtleXdvcmRzXCI6W1wiZmxvd2VyXCIsXCJkZWNvcmF0aW9uXCIsXCJtaWxpdGFyeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2Y1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkY1XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInJvc2VcIjp7XCJpZFwiOlwicm9zZVwiLFwibmFtZVwiOlwiUm9zZVwiLFwia2V5d29yZHNcIjpbXCJmbG93ZXJzXCIsXCJ2YWxlbnRpbmVzXCIsXCJsb3ZlXCIsXCJzcHJpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMzOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMzlcIn1dLFwidmVyc2lvblwiOjF9LFwid2lsdGVkX2Zsb3dlclwiOntcImlkXCI6XCJ3aWx0ZWRfZmxvd2VyXCIsXCJuYW1lXCI6XCJXaWx0ZWQgRmxvd2VyXCIsXCJrZXl3b3Jkc1wiOltcInBsYW50XCIsXCJuYXR1cmVcIixcInJvc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk0MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENDBcIn1dLFwidmVyc2lvblwiOjN9LFwiaGliaXNjdXNcIjp7XCJpZFwiOlwiaGliaXNjdXNcIixcIm5hbWVcIjpcIkhpYmlzY3VzXCIsXCJrZXl3b3Jkc1wiOltcInBsYW50XCIsXCJ2ZWdldGFibGVcIixcImZsb3dlcnNcIixcImJlYWNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzM2FcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjNBXCJ9XSxcInZlcnNpb25cIjoxfSxcInN1bmZsb3dlclwiOntcImlkXCI6XCJzdW5mbG93ZXJcIixcIm5hbWVcIjpcIlN1bmZsb3dlclwiLFwia2V5d29yZHNcIjpbXCJuYXR1cmVcIixcInBsYW50XCIsXCJmYWxsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzM2JcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjNCXCJ9XSxcInZlcnNpb25cIjoxfSxcImJsb3Nzb21cIjp7XCJpZFwiOlwiYmxvc3NvbVwiLFwibmFtZVwiOlwiQmxvc3NvbVwiLFwia2V5d29yZHNcIjpbXCJuYXR1cmVcIixcImZsb3dlcnNcIixcInllbGxvd1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzNjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYzQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0dWxpcFwiOntcImlkXCI6XCJ0dWxpcFwiLFwibmFtZVwiOlwiVHVsaXBcIixcImtleXdvcmRzXCI6W1wiZmxvd2Vyc1wiLFwicGxhbnRcIixcIm5hdHVyZVwiLFwic3VtbWVyXCIsXCJzcHJpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMzN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMzdcIn1dLFwidmVyc2lvblwiOjF9LFwiaHlhY2ludGhcIjp7XCJpZFwiOlwiaHlhY2ludGhcIixcIm5hbWVcIjpcIkh5YWNpbnRoXCIsXCJrZXl3b3Jkc1wiOltcImZsb3dlclwiLFwibGF2ZW5kZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFiYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQkJcIn1dLFwidmVyc2lvblwiOjE1fSxcInNlZWRsaW5nXCI6e1wiaWRcIjpcInNlZWRsaW5nXCIsXCJuYW1lXCI6XCJTZWVkbGluZ1wiLFwia2V5d29yZHNcIjpbXCJwbGFudFwiLFwibmF0dXJlXCIsXCJncmFzc1wiLFwibGF3blwiLFwic3ByaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMzFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjMxXCJ9XSxcInZlcnNpb25cIjoxfSxcInBvdHRlZF9wbGFudFwiOntcImlkXCI6XCJwb3R0ZWRfcGxhbnRcIixcIm5hbWVcIjpcIlBvdHRlZCBQbGFudFwiLFwia2V5d29yZHNcIjpbXCJncmVlbmVyeVwiLFwiaG91c2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFiNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQjRcIn1dLFwidmVyc2lvblwiOjEzfSxcImV2ZXJncmVlbl90cmVlXCI6e1wiaWRcIjpcImV2ZXJncmVlbl90cmVlXCIsXCJuYW1lXCI6XCJFdmVyZ3JlZW4gVHJlZVwiLFwia2V5d29yZHNcIjpbXCJwbGFudFwiLFwibmF0dXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMzJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjMyXCJ9XSxcInZlcnNpb25cIjoxfSxcImRlY2lkdW91c190cmVlXCI6e1wiaWRcIjpcImRlY2lkdW91c190cmVlXCIsXCJuYW1lXCI6XCJEZWNpZHVvdXMgVHJlZVwiLFwia2V5d29yZHNcIjpbXCJwbGFudFwiLFwibmF0dXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMzNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjMzXCJ9XSxcInZlcnNpb25cIjoxfSxcInBhbG1fdHJlZVwiOntcImlkXCI6XCJwYWxtX3RyZWVcIixcIm5hbWVcIjpcIlBhbG0gVHJlZVwiLFwia2V5d29yZHNcIjpbXCJwbGFudFwiLFwidmVnZXRhYmxlXCIsXCJuYXR1cmVcIixcInN1bW1lclwiLFwiYmVhY2hcIixcIm1vaml0b1wiLFwidHJvcGljYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMzNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMzRcIn1dLFwidmVyc2lvblwiOjF9LFwiY2FjdHVzXCI6e1wiaWRcIjpcImNhY3R1c1wiLFwibmFtZVwiOlwiQ2FjdHVzXCIsXCJrZXl3b3Jkc1wiOltcInZlZ2V0YWJsZVwiLFwicGxhbnRcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzM1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYzNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlYXJfb2ZfcmljZVwiOntcImlkXCI6XCJlYXJfb2ZfcmljZVwiLFwibmFtZVwiOlwiRWFyIG9mIFJpY2VcIixcImtleXdvcmRzXCI6W1wic2hlYWZcIixcIm5hdHVyZVwiLFwicGxhbnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMzZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGM0VcIn1dLFwidmVyc2lvblwiOjF9LFwiaGVyYlwiOntcImlkXCI6XCJoZXJiXCIsXCJuYW1lXCI6XCJIZXJiXCIsXCJrZXl3b3Jkc1wiOltcInZlZ2V0YWJsZVwiLFwicGxhbnRcIixcIm1lZGljaW5lXCIsXCJ3ZWVkXCIsXCJncmFzc1wiLFwibGF3blwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzNmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYzRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzaGFtcm9ja1wiOntcImlkXCI6XCJzaGFtcm9ja1wiLFwibmFtZVwiOlwiU2hhbXJvY2tcIixcImtleXdvcmRzXCI6W1widmVnZXRhYmxlXCIsXCJwbGFudFwiLFwibmF0dXJlXCIsXCJpcmlzaFwiLFwiY2xvdmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjYxOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjYxOFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmb3VyX2xlYWZfY2xvdmVyXCI6e1wiaWRcIjpcImZvdXJfbGVhZl9jbG92ZXJcIixcIm5hbWVcIjpcIkZvdXIgTGVhZiBDbG92ZXJcIixcImtleXdvcmRzXCI6W1widmVnZXRhYmxlXCIsXCJwbGFudFwiLFwibmF0dXJlXCIsXCJsdWNreVwiLFwiaXJpc2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM0MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNDBcIn1dLFwidmVyc2lvblwiOjF9LFwibWFwbGVfbGVhZlwiOntcImlkXCI6XCJtYXBsZV9sZWFmXCIsXCJuYW1lXCI6XCJNYXBsZSBMZWFmXCIsXCJrZXl3b3Jkc1wiOltcIm5hdHVyZVwiLFwicGxhbnRcIixcInZlZ2V0YWJsZVwiLFwiY2FcIixcImZhbGxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM0MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNDFcIn1dLFwidmVyc2lvblwiOjF9LFwiZmFsbGVuX2xlYWZcIjp7XCJpZFwiOlwiZmFsbGVuX2xlYWZcIixcIm5hbWVcIjpcIkZhbGxlbiBMZWFmXCIsXCJrZXl3b3Jkc1wiOltcIm5hdHVyZVwiLFwicGxhbnRcIixcInZlZ2V0YWJsZVwiLFwibGVhdmVzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNDJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjQyXCJ9XSxcInZlcnNpb25cIjoxfSxcImxlYXZlc1wiOntcImlkXCI6XCJsZWF2ZXNcIixcIm5hbWVcIjpcIkxlYWYgRmx1dHRlcmluZyBpbiBXaW5kXCIsXCJrZXl3b3Jkc1wiOltcImxlYXZlc1wiLFwibmF0dXJlXCIsXCJwbGFudFwiLFwidHJlZVwiLFwidmVnZXRhYmxlXCIsXCJncmFzc1wiLFwibGF3blwiLFwic3ByaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNDNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjQzXCJ9XSxcInZlcnNpb25cIjoxfSxcImVtcHR5X25lc3RcIjp7XCJpZFwiOlwiZW1wdHlfbmVzdFwiLFwibmFtZVwiOlwiRW1wdHkgTmVzdFwiLFwia2V5d29yZHNcIjpbXCJiaXJkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYjlcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUI5XCJ9XSxcInZlcnNpb25cIjoxNH0sXCJuZXN0X3dpdGhfZWdnc1wiOntcImlkXCI6XCJuZXN0X3dpdGhfZWdnc1wiLFwibmFtZVwiOlwiTmVzdCB3aXRoIEVnZ3NcIixcImtleXdvcmRzXCI6W1wiYmlyZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWJhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVCQVwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwibXVzaHJvb21cIjp7XCJpZFwiOlwibXVzaHJvb21cIixcIm5hbWVcIjpcIk11c2hyb29tXCIsXCJrZXl3b3Jkc1wiOltcInBsYW50XCIsXCJ2ZWdldGFibGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM0NFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNDRcIn1dLFwidmVyc2lvblwiOjF9LFwiZ3JhcGVzXCI6e1wiaWRcIjpcImdyYXBlc1wiLFwibmFtZVwiOlwiR3JhcGVzXCIsXCJrZXl3b3Jkc1wiOltcImZydWl0XCIsXCJmb29kXCIsXCJ3aW5lXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNDdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjQ3XCJ9XSxcInZlcnNpb25cIjoxfSxcIm1lbG9uXCI6e1wiaWRcIjpcIm1lbG9uXCIsXCJuYW1lXCI6XCJNZWxvblwiLFwia2V5d29yZHNcIjpbXCJmcnVpdFwiLFwibmF0dXJlXCIsXCJmb29kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNDhcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjQ4XCJ9XSxcInZlcnNpb25cIjoxfSxcIndhdGVybWVsb25cIjp7XCJpZFwiOlwid2F0ZXJtZWxvblwiLFwibmFtZVwiOlwiV2F0ZXJtZWxvblwiLFwia2V5d29yZHNcIjpbXCJmcnVpdFwiLFwiZm9vZFwiLFwicGljbmljXCIsXCJzdW1tZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM0OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNDlcIn1dLFwidmVyc2lvblwiOjF9LFwidGFuZ2VyaW5lXCI6e1wiaWRcIjpcInRhbmdlcmluZVwiLFwibmFtZVwiOlwiVGFuZ2VyaW5lXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImZydWl0XCIsXCJuYXR1cmVcIixcIm9yYW5nZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzRhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY0QVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsZW1vblwiOntcImlkXCI6XCJsZW1vblwiLFwibmFtZVwiOlwiTGVtb25cIixcImtleXdvcmRzXCI6W1wiZnJ1aXRcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzRiXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY0QlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiYW5hbmFcIjp7XCJpZFwiOlwiYmFuYW5hXCIsXCJuYW1lXCI6XCJCYW5hbmFcIixcImtleXdvcmRzXCI6W1wiZnJ1aXRcIixcImZvb2RcIixcIm1vbmtleVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzRjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY0Q1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwaW5lYXBwbGVcIjp7XCJpZFwiOlwicGluZWFwcGxlXCIsXCJuYW1lXCI6XCJQaW5lYXBwbGVcIixcImtleXdvcmRzXCI6W1wiZnJ1aXRcIixcIm5hdHVyZVwiLFwiZm9vZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzRkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY0RFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtYW5nb1wiOntcImlkXCI6XCJtYW5nb1wiLFwibmFtZVwiOlwiTWFuZ29cIixcImtleXdvcmRzXCI6W1wiZnJ1aXRcIixcImZvb2RcIixcInRyb3BpY2FsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDZEXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJhcHBsZVwiOntcImlkXCI6XCJhcHBsZVwiLFwibmFtZVwiOlwiUmVkIEFwcGxlXCIsXCJrZXl3b3Jkc1wiOltcImZydWl0XCIsXCJtYWNcIixcInNjaG9vbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzRlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY0RVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJncmVlbl9hcHBsZVwiOntcImlkXCI6XCJncmVlbl9hcHBsZVwiLFwibmFtZVwiOlwiR3JlZW4gQXBwbGVcIixcImtleXdvcmRzXCI6W1wiZnJ1aXRcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzRmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY0RlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwZWFyXCI6e1wiaWRcIjpcInBlYXJcIixcIm5hbWVcIjpcIlBlYXJcIixcImtleXdvcmRzXCI6W1wiZnJ1aXRcIixcIm5hdHVyZVwiLFwiZm9vZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzUwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY1MFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwZWFjaFwiOntcImlkXCI6XCJwZWFjaFwiLFwibmFtZVwiOlwiUGVhY2hcIixcImtleXdvcmRzXCI6W1wiZnJ1aXRcIixcIm5hdHVyZVwiLFwiZm9vZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzUxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY1MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjaGVycmllc1wiOntcImlkXCI6XCJjaGVycmllc1wiLFwibmFtZVwiOlwiQ2hlcnJpZXNcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiZnJ1aXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM1MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNTJcIn1dLFwidmVyc2lvblwiOjF9LFwic3RyYXdiZXJyeVwiOntcImlkXCI6XCJzdHJhd2JlcnJ5XCIsXCJuYW1lXCI6XCJTdHJhd2JlcnJ5XCIsXCJrZXl3b3Jkc1wiOltcImZydWl0XCIsXCJmb29kXCIsXCJuYXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM1M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNTNcIn1dLFwidmVyc2lvblwiOjF9LFwiYmx1ZWJlcnJpZXNcIjp7XCJpZFwiOlwiYmx1ZWJlcnJpZXNcIixcIm5hbWVcIjpcIkJsdWViZXJyaWVzXCIsXCJrZXl3b3Jkc1wiOltcImZydWl0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZDBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUQwXCJ9XSxcInZlcnNpb25cIjoxM30sXCJraXdpZnJ1aXRcIjp7XCJpZFwiOlwia2l3aWZydWl0XCIsXCJuYW1lXCI6XCJLaXdpZnJ1aXRcIixcImtleXdvcmRzXCI6W1wia2l3aVwiLFwiZnJ1aXRcIixcImZvb2RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk1ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENURcIn1dLFwidmVyc2lvblwiOjN9LFwidG9tYXRvXCI6e1wiaWRcIjpcInRvbWF0b1wiLFwibmFtZVwiOlwiVG9tYXRvXCIsXCJrZXl3b3Jkc1wiOltcImZydWl0XCIsXCJ2ZWdldGFibGVcIixcIm5hdHVyZVwiLFwiZm9vZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzQ1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY0NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvbGl2ZVwiOntcImlkXCI6XCJvbGl2ZVwiLFwibmFtZVwiOlwiT2xpdmVcIixcImtleXdvcmRzXCI6W1wiZnJ1aXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFkMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRDJcIn1dLFwidmVyc2lvblwiOjEzfSxcImNvY29udXRcIjp7XCJpZFwiOlwiY29jb251dFwiLFwibmFtZVwiOlwiQ29jb251dFwiLFwia2V5d29yZHNcIjpbXCJmcnVpdFwiLFwibmF0dXJlXCIsXCJmb29kXCIsXCJwYWxtXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NjVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDY1XCJ9XSxcInZlcnNpb25cIjo1fSxcImF2b2NhZG9cIjp7XCJpZFwiOlwiYXZvY2Fkb1wiLFwibmFtZVwiOlwiQXZvY2Fkb1wiLFwia2V5d29yZHNcIjpbXCJmcnVpdFwiLFwiZm9vZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTUxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ1MVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJlZ2dwbGFudFwiOntcImlkXCI6XCJlZ2dwbGFudFwiLFwibmFtZVwiOlwiRWdncGxhbnRcIixcImtleXdvcmRzXCI6W1widmVnZXRhYmxlXCIsXCJuYXR1cmVcIixcImZvb2RcIixcImF1YmVyZ2luZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzQ2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY0NlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwb3RhdG9cIjp7XCJpZFwiOlwicG90YXRvXCIsXCJuYW1lXCI6XCJQb3RhdG9cIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwidHViZXJcIixcInZlZ2F0YWJsZVwiLFwic3RhcmNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NTRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDU0XCJ9XSxcInZlcnNpb25cIjozfSxcImNhcnJvdFwiOntcImlkXCI6XCJjYXJyb3RcIixcIm5hbWVcIjpcIkNhcnJvdFwiLFwia2V5d29yZHNcIjpbXCJ2ZWdldGFibGVcIixcImZvb2RcIixcIm9yYW5nZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTU1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ1NVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJjb3JuXCI6e1wiaWRcIjpcImNvcm5cIixcIm5hbWVcIjpcIkVhciBvZiBDb3JuXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcInZlZ2V0YWJsZVwiLFwicGxhbnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMzZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGM0RcIn1dLFwidmVyc2lvblwiOjF9LFwiaG90X3BlcHBlclwiOntcImlkXCI6XCJob3RfcGVwcGVyXCIsXCJuYW1lXCI6XCJIb3QgUGVwcGVyXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcInNwaWN5XCIsXCJjaGlsbGlcIixcImNoaWxpXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMzYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMzZcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYmVsbF9wZXBwZXJcIjp7XCJpZFwiOlwiYmVsbF9wZXBwZXJcIixcIm5hbWVcIjpcIkJlbGwgUGVwcGVyXCIsXCJrZXl3b3Jkc1wiOltcImZydWl0XCIsXCJwbGFudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWQxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVEMVwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiY3VjdW1iZXJcIjp7XCJpZFwiOlwiY3VjdW1iZXJcIixcIm5hbWVcIjpcIkN1Y3VtYmVyXCIsXCJrZXl3b3Jkc1wiOltcImZydWl0XCIsXCJmb29kXCIsXCJwaWNrbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk1MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENTJcIn1dLFwidmVyc2lvblwiOjN9LFwibGVhZnlfZ3JlZW5cIjp7XCJpZFwiOlwibGVhZnlfZ3JlZW5cIixcIm5hbWVcIjpcIkxlYWZ5IEdyZWVuXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcInZlZ2V0YWJsZVwiLFwicGxhbnRcIixcImJva1wiLFwiY2hveVwiLFwiY2FiYmFnZVwiLFwia2FsZVwiLFwibGV0dHVjZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ2Q1wifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiYnJvY2NvbGlcIjp7XCJpZFwiOlwiYnJvY2NvbGlcIixcIm5hbWVcIjpcIkJyb2Njb2xpXCIsXCJrZXl3b3Jkc1wiOltcImZydWl0XCIsXCJmb29kXCIsXCJ2ZWdldGFibGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENjZcIn1dLFwidmVyc2lvblwiOjV9LFwiZ2FybGljXCI6e1wiaWRcIjpcImdhcmxpY1wiLFwibmFtZVwiOlwiR2FybGljXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcInNwaWNlXCIsXCJjb29rXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YzRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREM0XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJvbmlvblwiOntcImlkXCI6XCJvbmlvblwiLFwibmFtZVwiOlwiT25pb25cIixcImtleXdvcmRzXCI6W1wiY29va1wiLFwiZm9vZFwiLFwic3BpY2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjljNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQzVcIn1dLFwidmVyc2lvblwiOjEyfSxcInBlYW51dHNcIjp7XCJpZFwiOlwicGVhbnV0c1wiLFwibmFtZVwiOlwiUGVhbnV0c1wiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJudXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk1Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENUNcIn1dLFwidmVyc2lvblwiOjN9LFwiYmVhbnNcIjp7XCJpZFwiOlwiYmVhbnNcIixcIm5hbWVcIjpcIkJlYW5zXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFkOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRDhcIn1dLFwidmVyc2lvblwiOjE0fSxcImNoZXN0bnV0XCI6e1wiaWRcIjpcImNoZXN0bnV0XCIsXCJuYW1lXCI6XCJDaGVzdG51dFwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJzcXVpcnJlbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzMwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYzMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJnaW5nZXJfcm9vdFwiOntcImlkXCI6XCJnaW5nZXJfcm9vdFwiLFwibmFtZVwiOlwiR2luZ2VyIFJvb3RcIixcImtleXdvcmRzXCI6W1wic3BpY2VcIixcInllbGxvd1wiLFwiY29va2luZ1wiLFwiZ2luZ2VyYnJlYWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFkYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFREFcIn1dLFwidmVyc2lvblwiOjE1fSxcInBlYV9wb2RcIjp7XCJpZFwiOlwicGVhX3BvZFwiLFwibmFtZVwiOlwiUGVhIFBvZFwiLFwia2V5d29yZHNcIjpbXCJjb3p5XCIsXCJncmVlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWRiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVEQlwifV0sXCJ2ZXJzaW9uXCI6MTV9LFwiYnJlYWRcIjp7XCJpZFwiOlwiYnJlYWRcIixcIm5hbWVcIjpcIkJyZWFkXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcIndoZWF0XCIsXCJicmVha2Zhc3RcIixcInRvYXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNWVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjVFXCJ9XSxcInZlcnNpb25cIjoxfSxcImNyb2lzc2FudFwiOntcImlkXCI6XCJjcm9pc3NhbnRcIixcIm5hbWVcIjpcIkNyb2lzc2FudFwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJicmVhZFwiLFwiZnJlbmNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NTBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDUwXCJ9XSxcInZlcnNpb25cIjozfSxcImJhZ3VldHRlX2JyZWFkXCI6e1wiaWRcIjpcImJhZ3VldHRlX2JyZWFkXCIsXCJuYW1lXCI6XCJCYWd1ZXR0ZSBCcmVhZFwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJmcmVuY2hcIixcImZyYW5jZVwiLFwiYmFrZXJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NTZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDU2XCJ9XSxcInZlcnNpb25cIjozfSxcImZsYXRicmVhZFwiOntcImlkXCI6XCJmbGF0YnJlYWRcIixcIm5hbWVcIjpcIkZsYXRicmVhZFwiLFwia2V5d29yZHNcIjpbXCJmbG91clwiLFwiZm9vZFwiLFwiYmFrZXJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZDNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUQzXCJ9XSxcInZlcnNpb25cIjoxM30sXCJwcmV0emVsXCI6e1wiaWRcIjpcInByZXR6ZWxcIixcIm5hbWVcIjpcIlByZXR6ZWxcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiYnJlYWRcIixcInR3aXN0ZWRcIixcImdlcm1hbnlcIixcImJha2VyeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ2OFwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJiYWdlbFwiOntcImlkXCI6XCJiYWdlbFwiLFwibmFtZVwiOlwiQmFnZWxcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiYnJlYWRcIixcImJha2VyeVwiLFwic2NobWVhclwiLFwiamV3aXNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NmZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDZGXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJwYW5jYWtlc1wiOntcImlkXCI6XCJwYW5jYWtlc1wiLFwibmFtZVwiOlwiUGFuY2FrZXNcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiYnJlYWtmYXN0XCIsXCJmbGFwamFja3NcIixcImhvdGNha2VzXCIsXCJicnVuY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk1ZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENUVcIn1dLFwidmVyc2lvblwiOjN9LFwid2FmZmxlXCI6e1wiaWRcIjpcIndhZmZsZVwiLFwibmFtZVwiOlwiV2FmZmxlXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImJyZWFrZmFzdFwiLFwiYnJ1bmNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YzdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREM3XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJjaGVlc2Vfd2VkZ2VcIjp7XCJpZFwiOlwiY2hlZXNlX3dlZGdlXCIsXCJuYW1lXCI6XCJDaGVlc2UgV2VkZ2VcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiY2hhZGRlclwiLFwic3dpc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjljMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQzBcIn1dLFwidmVyc2lvblwiOjF9LFwibWVhdF9vbl9ib25lXCI6e1wiaWRcIjpcIm1lYXRfb25fYm9uZVwiLFwibmFtZVwiOlwiTWVhdCBvbiBCb25lXCIsXCJrZXl3b3Jkc1wiOltcImdvb2RcIixcImZvb2RcIixcImRydW1zdGlja1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzU2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY1NlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwb3VsdHJ5X2xlZ1wiOntcImlkXCI6XCJwb3VsdHJ5X2xlZ1wiLFwibmFtZVwiOlwiUG91bHRyeSBMZWdcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwibWVhdFwiLFwiZHJ1bXN0aWNrXCIsXCJiaXJkXCIsXCJjaGlja2VuXCIsXCJ0dXJrZXlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM1N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNTdcIn1dLFwidmVyc2lvblwiOjF9LFwiY3V0X29mX21lYXRcIjp7XCJpZFwiOlwiY3V0X29mX21lYXRcIixcIm5hbWVcIjpcIkN1dCBvZiBNZWF0XCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImNvd1wiLFwiY2hvcFwiLFwibGFtYmNob3BcIixcInBvcmtjaG9wXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NjlcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDY5XCJ9XSxcInZlcnNpb25cIjo1fSxcImJhY29uXCI6e1wiaWRcIjpcImJhY29uXCIsXCJuYW1lXCI6XCJCYWNvblwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJicmVha2Zhc3RcIixcInBvcmtcIixcInBpZ1wiLFwibWVhdFwiLFwiYnJ1bmNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NTNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDUzXCJ9XSxcInZlcnNpb25cIjozfSxcImhhbWJ1cmdlclwiOntcImlkXCI6XCJoYW1idXJnZXJcIixcIm5hbWVcIjpcIkhhbWJ1cmdlclwiLFwia2V5d29yZHNcIjpbXCJtZWF0XCIsXCJmYXN0XCIsXCJmb29kXCIsXCJiZWVmXCIsXCJjaGVlc2VidXJnZXJcIixcIm1jZG9uYWxkc1wiLFwiYnVyZ2VyXCIsXCJraW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNTRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjU0XCJ9XSxcInZlcnNpb25cIjoxfSxcImZyaWVzXCI6e1wiaWRcIjpcImZyaWVzXCIsXCJuYW1lXCI6XCJGcmVuY2ggRnJpZXNcIixcImtleXdvcmRzXCI6W1wiY2hpcHNcIixcInNuYWNrXCIsXCJmYXN0XCIsXCJmb29kXCIsXCJwb3RhdG9cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM1ZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNUZcIn1dLFwidmVyc2lvblwiOjF9LFwicGl6emFcIjp7XCJpZFwiOlwicGl6emFcIixcIm5hbWVcIjpcIlBpenphXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcInBhcnR5XCIsXCJpdGFseVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzU1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY1NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJob3Rkb2dcIjp7XCJpZFwiOlwiaG90ZG9nXCIsXCJuYW1lXCI6XCJIb3QgRG9nXCIsXCJrZXl3b3Jkc1wiOltcImhvdGRvZ1wiLFwiZm9vZFwiLFwiZnJhbmtmdXJ0ZXJcIixcImFtZXJpY2FcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMyZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMkRcIn1dLFwidmVyc2lvblwiOjF9LFwic2FuZHdpY2hcIjp7XCJpZFwiOlwic2FuZHdpY2hcIixcIm5hbWVcIjpcIlNhbmR3aWNoXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImx1bmNoXCIsXCJicmVhZFwiLFwidG9hc3RcIixcImJha2VyeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTZhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ2QVwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJ0YWNvXCI6e1wiaWRcIjpcInRhY29cIixcIm5hbWVcIjpcIlRhY29cIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwibWV4aWNhblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzJlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYyRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJidXJyaXRvXCI6e1wiaWRcIjpcImJ1cnJpdG9cIixcIm5hbWVcIjpcIkJ1cnJpdG9cIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwibWV4aWNhblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzJmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYyRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0YW1hbGVcIjp7XCJpZFwiOlwidGFtYWxlXCIsXCJuYW1lXCI6XCJUYW1hbGVcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwibWFzYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWQ0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVENFwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwic3R1ZmZlZF9mbGF0YnJlYWRcIjp7XCJpZFwiOlwic3R1ZmZlZF9mbGF0YnJlYWRcIixcIm5hbWVcIjpcIlN0dWZmZWQgRmxhdGJyZWFkXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImd5cm9cIixcIm1lZGl0ZXJyYW5lYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk1OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENTlcIn1dLFwidmVyc2lvblwiOjN9LFwiZmFsYWZlbFwiOntcImlkXCI6XCJmYWxhZmVsXCIsXCJuYW1lXCI6XCJGYWxhZmVsXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcIm1lZGl0ZXJyYW5lYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjljNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQzZcIn1dLFwidmVyc2lvblwiOjEyfSxcImVnZ1wiOntcImlkXCI6XCJlZ2dcIixcIm5hbWVcIjpcIkVnZ1wiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJjaGlja2VuXCIsXCJicmVha2Zhc3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk1YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENUFcIn1dLFwidmVyc2lvblwiOjN9LFwiZnJpZWRfZWdnXCI6e1wiaWRcIjpcImZyaWVkX2VnZ1wiLFwibmFtZVwiOlwiQ29va2luZ1wiLFwia2V5d29yZHNcIjpbXCJmcmllZFwiLFwiZWdnXCIsXCJmb29kXCIsXCJicmVha2Zhc3RcIixcImtpdGNoZW5cIixcInNraWxsZXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM3M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNzNcIn1dLFwidmVyc2lvblwiOjF9LFwic2hhbGxvd19wYW5fb2ZfZm9vZFwiOntcImlkXCI6XCJzaGFsbG93X3Bhbl9vZl9mb29kXCIsXCJuYW1lXCI6XCJTaGFsbG93IFBhbiBvZiBGb29kXCIsXCJrZXl3b3Jkc1wiOltcImNvb2tpbmdcIixcImNhc3Nlcm9sZVwiLFwicGFlbGxhXCIsXCJza2lsbGV0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NThcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDU4XCJ9XSxcInZlcnNpb25cIjozfSxcInN0ZXdcIjp7XCJpZFwiOlwic3Rld1wiLFwibmFtZVwiOlwiUG90IG9mIEZvb2RcIixcImtleXdvcmRzXCI6W1wic3Rld1wiLFwibWVhdFwiLFwic291cFwiLFwiaG90XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNzJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjcyXCJ9XSxcInZlcnNpb25cIjoxfSxcImZvbmR1ZVwiOntcImlkXCI6XCJmb25kdWVcIixcIm5hbWVcIjpcIkZvbmR1ZVwiLFwia2V5d29yZHNcIjpbXCJjaGVlc2VcIixcInBvdFwiLFwiZm9vZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWQ1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVENVwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiYm93bF93aXRoX3Nwb29uXCI6e1wiaWRcIjpcImJvd2xfd2l0aF9zcG9vblwiLFwibmFtZVwiOlwiQm93bCB3aXRoIFNwb29uXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImJyZWFrZmFzdFwiLFwiY2VyZWFsXCIsXCJvYXRtZWFsXCIsXCJwb3JyaWRnZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ2M1wifV0sXCJ2ZXJzaW9uXCI6NX0sXCJncmVlbl9zYWxhZFwiOntcImlkXCI6XCJncmVlbl9zYWxhZFwiLFwibmFtZVwiOlwiR3JlZW4gU2FsYWRcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiaGVhbHRoeVwiLFwibGV0dHVjZVwiLFwidmVnZXRhYmxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NTdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDU3XCJ9XSxcInZlcnNpb25cIjozfSxcInBvcGNvcm5cIjp7XCJpZFwiOlwicG9wY29yblwiLFwibmFtZVwiOlwiUG9wY29yblwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJtb3ZpZVwiLFwidGhlYXRlclwiLFwiZmlsbXNcIixcInNuYWNrXCIsXCJkcmFtYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzdmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY3RlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJidXR0ZXJcIjp7XCJpZFwiOlwiYnV0dGVyXCIsXCJuYW1lXCI6XCJCdXR0ZXJcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiY29va1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWM4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDOFwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwic2FsdFwiOntcImlkXCI6XCJzYWx0XCIsXCJuYW1lXCI6XCJTYWx0XCIsXCJrZXl3b3Jkc1wiOltcImNvbmRpbWVudFwiLFwic2hha2VyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YzJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREMyXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJjYW5uZWRfZm9vZFwiOntcImlkXCI6XCJjYW5uZWRfZm9vZFwiLFwibmFtZVwiOlwiQ2FubmVkIEZvb2RcIixcImtleXdvcmRzXCI6W1wic291cFwiLFwidG9tYXRvZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk2YlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENkJcIn1dLFwidmVyc2lvblwiOjV9LFwiYmVudG9cIjp7XCJpZFwiOlwiYmVudG9cIixcIm5hbWVcIjpcIkJlbnRvIEJveFwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJqYXBhbmVzZVwiLFwibHVuY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM3MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNzFcIn1dLFwidmVyc2lvblwiOjF9LFwicmljZV9jcmFja2VyXCI6e1wiaWRcIjpcInJpY2VfY3JhY2tlclwiLFwibmFtZVwiOlwiUmljZSBDcmFja2VyXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImphcGFuZXNlXCIsXCJzbmFja1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzU4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY1OFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyaWNlX2JhbGxcIjp7XCJpZFwiOlwicmljZV9iYWxsXCIsXCJuYW1lXCI6XCJSaWNlIEJhbGxcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiamFwYW5lc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM1OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNTlcIn1dLFwidmVyc2lvblwiOjF9LFwicmljZVwiOntcImlkXCI6XCJyaWNlXCIsXCJuYW1lXCI6XCJDb29rZWQgUmljZVwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJhc2lhblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzVhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY1QVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjdXJyeVwiOntcImlkXCI6XCJjdXJyeVwiLFwibmFtZVwiOlwiQ3VycnkgUmljZVwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJzcGljeVwiLFwiaG90XCIsXCJpbmRpYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM1YlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNUJcIn1dLFwidmVyc2lvblwiOjF9LFwicmFtZW5cIjp7XCJpZFwiOlwicmFtZW5cIixcIm5hbWVcIjpcIlN0ZWFtaW5nIEJvd2xcIixcImtleXdvcmRzXCI6W1wicmFtZW5cIixcImZvb2RcIixcImphcGFuZXNlXCIsXCJub29kbGVcIixcImNob3BzdGlja3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM1Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNUNcIn1dLFwidmVyc2lvblwiOjF9LFwic3BhZ2hldHRpXCI6e1wiaWRcIjpcInNwYWdoZXR0aVwiLFwibmFtZVwiOlwiU3BhZ2hldHRpXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcIml0YWxpYW5cIixcInBhc3RhXCIsXCJub29kbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM1ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNURcIn1dLFwidmVyc2lvblwiOjF9LFwic3dlZXRfcG90YXRvXCI6e1wiaWRcIjpcInN3ZWV0X3BvdGF0b1wiLFwibmFtZVwiOlwiUm9hc3RlZCBTd2VldCBQb3RhdG9cIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwibmF0dXJlXCIsXCJwbGFudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY2MFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvZGVuXCI6e1wiaWRcIjpcIm9kZW5cIixcIm5hbWVcIjpcIk9kZW5cIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiamFwYW5lc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM2MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNjJcIn1dLFwidmVyc2lvblwiOjF9LFwic3VzaGlcIjp7XCJpZFwiOlwic3VzaGlcIixcIm5hbWVcIjpcIlN1c2hpXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImZpc2hcIixcImphcGFuZXNlXCIsXCJyaWNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNjNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjYzXCJ9XSxcInZlcnNpb25cIjoxfSxcImZyaWVkX3NocmltcFwiOntcImlkXCI6XCJmcmllZF9zaHJpbXBcIixcIm5hbWVcIjpcIkZyaWVkIFNocmltcFwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJhbmltYWxcIixcImFwcGV0aXplclwiLFwic3VtbWVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNjRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjY0XCJ9XSxcInZlcnNpb25cIjoxfSxcImZpc2hfY2FrZVwiOntcImlkXCI6XCJmaXNoX2Nha2VcIixcIm5hbWVcIjpcIkZpc2ggQ2FrZSB3aXRoIFN3aXJsXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImphcGFuXCIsXCJzZWFcIixcImJlYWNoXCIsXCJuYXJ1dG9tYWtpXCIsXCJwaW5rXCIsXCJrYW1hYm9rb1wiLFwic3VyaW1pXCIsXCJyYW1lblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzY1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY2NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb29uX2Nha2VcIjp7XCJpZFwiOlwibW9vbl9jYWtlXCIsXCJuYW1lXCI6XCJNb29uIENha2VcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiYXV0dW1uXCIsXCJkZXNzZXJ0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDZFXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJkYW5nb1wiOntcImlkXCI6XCJkYW5nb1wiLFwibmFtZVwiOlwiRGFuZ29cIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiZGVzc2VydFwiLFwic3dlZXRcIixcImphcGFuZXNlXCIsXCJiYXJiZWN1ZVwiLFwibWVhdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzYxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY2MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkdW1wbGluZ1wiOntcImlkXCI6XCJkdW1wbGluZ1wiLFwibmFtZVwiOlwiRHVtcGxpbmdcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiZW1wYW5hZGFcIixcInBpZXJvZ2lcIixcInBvdHN0aWNrZXJcIixcImd5b3phXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NWZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDVGXCJ9XSxcInZlcnNpb25cIjo1fSxcImZvcnR1bmVfY29va2llXCI6e1wiaWRcIjpcImZvcnR1bmVfY29va2llXCIsXCJuYW1lXCI6XCJGb3J0dW5lIENvb2tpZVwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJwcm9waGVjeVwiLFwiZGVzc2VydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ2MFwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJ0YWtlb3V0X2JveFwiOntcImlkXCI6XCJ0YWtlb3V0X2JveFwiLFwibmFtZVwiOlwiVGFrZW91dCBCb3hcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwibGVmdG92ZXJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NjFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDYxXCJ9XSxcInZlcnNpb25cIjo1fSxcImNyYWJcIjp7XCJpZFwiOlwiY3JhYlwiLFwibmFtZVwiOlwiQ3JhYlwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcImNydXN0YWNlYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREODBcIn1dLFwidmVyc2lvblwiOjF9LFwibG9ic3RlclwiOntcImlkXCI6XCJsb2JzdGVyXCIsXCJuYW1lXCI6XCJMb2JzdGVyXCIsXCJrZXl3b3Jkc1wiOltcImFuaW1hbFwiLFwibmF0dXJlXCIsXCJiaXNxdWVcIixcImNsYXdzXCIsXCJzZWFmb29kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5OWVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDlFXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJzaHJpbXBcIjp7XCJpZFwiOlwic2hyaW1wXCIsXCJuYW1lXCI6XCJTaHJpbXBcIixcImtleXdvcmRzXCI6W1wiYW5pbWFsXCIsXCJvY2VhblwiLFwibmF0dXJlXCIsXCJzZWFmb29kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5OTBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDkwXCJ9XSxcInZlcnNpb25cIjozfSxcInNxdWlkXCI6e1wiaWRcIjpcInNxdWlkXCIsXCJuYW1lXCI6XCJTcXVpZFwiLFwia2V5d29yZHNcIjpbXCJhbmltYWxcIixcIm5hdHVyZVwiLFwib2NlYW5cIixcInNlYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTkxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ5MVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJveXN0ZXJcIjp7XCJpZFwiOlwib3lzdGVyXCIsXCJuYW1lXCI6XCJPeXN0ZXJcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWFhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERBQVwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwiaWNlY3JlYW1cIjp7XCJpZFwiOlwiaWNlY3JlYW1cIixcIm5hbWVcIjpcIlNvZnQgSWNlIENyZWFtXCIsXCJrZXl3b3Jkc1wiOltcImljZWNyZWFtXCIsXCJmb29kXCIsXCJob3RcIixcImRlc3NlcnRcIixcInN1bW1lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzY2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY2NlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzaGF2ZWRfaWNlXCI6e1wiaWRcIjpcInNoYXZlZF9pY2VcIixcIm5hbWVcIjpcIlNoYXZlZCBJY2VcIixcImtleXdvcmRzXCI6W1wiaG90XCIsXCJkZXNzZXJ0XCIsXCJzdW1tZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM2N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNjdcIn1dLFwidmVyc2lvblwiOjF9LFwiaWNlX2NyZWFtXCI6e1wiaWRcIjpcImljZV9jcmVhbVwiLFwibmFtZVwiOlwiSWNlIENyZWFtXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcImhvdFwiLFwiZGVzc2VydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY2OFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkb3VnaG51dFwiOntcImlkXCI6XCJkb3VnaG51dFwiLFwibmFtZVwiOlwiRG91Z2hudXRcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiZGVzc2VydFwiLFwic25hY2tcIixcInN3ZWV0XCIsXCJkb251dFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY2OVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjb29raWVcIjp7XCJpZFwiOlwiY29va2llXCIsXCJuYW1lXCI6XCJDb29raWVcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwic25hY2tcIixcIm9yZW9cIixcImNob2NvbGF0ZVwiLFwic3dlZXRcIixcImRlc3NlcnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM2YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNkFcIn1dLFwidmVyc2lvblwiOjF9LFwiYmlydGhkYXlcIjp7XCJpZFwiOlwiYmlydGhkYXlcIixcIm5hbWVcIjpcIkJpcnRoZGF5IENha2VcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiZGVzc2VydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzgyXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY4MlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYWtlXCI6e1wiaWRcIjpcImNha2VcIixcIm5hbWVcIjpcIlNob3J0Y2FrZVwiLFwia2V5d29yZHNcIjpbXCJjYWtlXCIsXCJmb29kXCIsXCJkZXNzZXJ0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNzBcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjcwXCJ9XSxcInZlcnNpb25cIjoxfSxcImN1cGNha2VcIjp7XCJpZFwiOlwiY3VwY2FrZVwiLFwibmFtZVwiOlwiQ3VwY2FrZVwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJkZXNzZXJ0XCIsXCJiYWtlcnlcIixcInN3ZWV0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YzFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREMxXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJwaWVcIjp7XCJpZFwiOlwicGllXCIsXCJuYW1lXCI6XCJQaWVcIixcImtleXdvcmRzXCI6W1wiZm9vZFwiLFwiZGVzc2VydFwiLFwicGFzdHJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDY3XCJ9XSxcInZlcnNpb25cIjo1fSxcImNob2NvbGF0ZV9iYXJcIjp7XCJpZFwiOlwiY2hvY29sYXRlX2JhclwiLFwibmFtZVwiOlwiQ2hvY29sYXRlIEJhclwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJzbmFja1wiLFwiZGVzc2VydFwiLFwic3dlZXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM2YlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNkJcIn1dLFwidmVyc2lvblwiOjF9LFwiY2FuZHlcIjp7XCJpZFwiOlwiY2FuZHlcIixcIm5hbWVcIjpcIkNhbmR5XCIsXCJrZXl3b3Jkc1wiOltcInNuYWNrXCIsXCJkZXNzZXJ0XCIsXCJzd2VldFwiLFwibG9sbHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM2Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNkNcIn1dLFwidmVyc2lvblwiOjF9LFwibG9sbGlwb3BcIjp7XCJpZFwiOlwibG9sbGlwb3BcIixcIm5hbWVcIjpcIkxvbGxpcG9wXCIsXCJrZXl3b3Jkc1wiOltcImZvb2RcIixcInNuYWNrXCIsXCJjYW5keVwiLFwic3dlZXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM2ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNkRcIn1dLFwidmVyc2lvblwiOjF9LFwiY3VzdGFyZFwiOntcImlkXCI6XCJjdXN0YXJkXCIsXCJuYW1lXCI6XCJDdXN0YXJkXCIsXCJrZXl3b3Jkc1wiOltcImRlc3NlcnRcIixcImZvb2RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM2ZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNkVcIn1dLFwidmVyc2lvblwiOjF9LFwiaG9uZXlfcG90XCI6e1wiaWRcIjpcImhvbmV5X3BvdFwiLFwibmFtZVwiOlwiSG9uZXkgUG90XCIsXCJrZXl3b3Jkc1wiOltcImJlZXNcIixcInN3ZWV0XCIsXCJraXRjaGVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjZGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJhYnlfYm90dGxlXCI6e1wiaWRcIjpcImJhYnlfYm90dGxlXCIsXCJuYW1lXCI6XCJCYWJ5IEJvdHRsZVwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJjb250YWluZXJcIixcIm1pbGtcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM3Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGN0NcIn1dLFwidmVyc2lvblwiOjF9LFwiZ2xhc3Nfb2ZfbWlsa1wiOntcImlkXCI6XCJnbGFzc19vZl9taWxrXCIsXCJuYW1lXCI6XCJHbGFzcyBvZiBNaWxrXCIsXCJrZXl3b3Jkc1wiOltcImJldmVyYWdlXCIsXCJkcmlua1wiLFwiY293XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NWJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDVCXCJ9XSxcInZlcnNpb25cIjozfSxcImNvZmZlZVwiOntcImlkXCI6XCJjb2ZmZWVcIixcIm5hbWVcIjpcIkhvdCBCZXZlcmFnZVwiLFwia2V5d29yZHNcIjpbXCJjb2ZmZWVcIixcImNhZmZlaW5lXCIsXCJsYXR0ZVwiLFwiZXNwcmVzc29cIixcIm11Z1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2MTVcIixcIm5hdGl2ZVwiOlwiXHUyNjE1XCJ9XSxcInZlcnNpb25cIjoxfSxcInRlYXBvdFwiOntcImlkXCI6XCJ0ZWFwb3RcIixcIm5hbWVcIjpcIlRlYXBvdFwiLFwia2V5d29yZHNcIjpbXCJkcmlua1wiLFwiaG90XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhZDZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUQ2XCJ9XSxcInZlcnNpb25cIjoxM30sXCJ0ZWFcIjp7XCJpZFwiOlwidGVhXCIsXCJuYW1lXCI6XCJUZWFjdXAgV2l0aG91dCBIYW5kbGVcIixcImtleXdvcmRzXCI6W1widGVhXCIsXCJkcmlua1wiLFwiYm93bFwiLFwiYnJlYWtmYXN0XCIsXCJncmVlblwiLFwiYnJpdGlzaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzc1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY3NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzYWtlXCI6e1wiaWRcIjpcInNha2VcIixcIm5hbWVcIjpcIlNha2VcIixcImtleXdvcmRzXCI6W1wid2luZVwiLFwiZHJpbmtcIixcImRydW5rXCIsXCJiZXZlcmFnZVwiLFwiamFwYW5lc2VcIixcImFsY29ob2xcIixcImJvb3plXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzNzZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjc2XCJ9XSxcInZlcnNpb25cIjoxfSxcImNoYW1wYWduZVwiOntcImlkXCI6XCJjaGFtcGFnbmVcIixcIm5hbWVcIjpcIkJvdHRsZSB3aXRoIFBvcHBpbmcgQ29ya1wiLFwia2V5d29yZHNcIjpbXCJjaGFtcGFnbmVcIixcImRyaW5rXCIsXCJ3aW5lXCIsXCJjZWxlYnJhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzdlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY3RVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3aW5lX2dsYXNzXCI6e1wiaWRcIjpcIndpbmVfZ2xhc3NcIixcIm5hbWVcIjpcIldpbmUgR2xhc3NcIixcImtleXdvcmRzXCI6W1wiZHJpbmtcIixcImJldmVyYWdlXCIsXCJkcnVua1wiLFwiYWxjb2hvbFwiLFwiYm9vemVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM3N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNzdcIn1dLFwidmVyc2lvblwiOjF9LFwiY29ja3RhaWxcIjp7XCJpZFwiOlwiY29ja3RhaWxcIixcIm5hbWVcIjpcIkNvY2t0YWlsIEdsYXNzXCIsXCJrZXl3b3Jkc1wiOltcImRyaW5rXCIsXCJkcnVua1wiLFwiYWxjb2hvbFwiLFwiYmV2ZXJhZ2VcIixcImJvb3plXCIsXCJtb2ppdG9cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM3OFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGNzhcIn1dLFwidmVyc2lvblwiOjF9LFwidHJvcGljYWxfZHJpbmtcIjp7XCJpZFwiOlwidHJvcGljYWxfZHJpbmtcIixcIm5hbWVcIjpcIlRyb3BpY2FsIERyaW5rXCIsXCJrZXl3b3Jkc1wiOltcImJldmVyYWdlXCIsXCJjb2NrdGFpbFwiLFwic3VtbWVyXCIsXCJiZWFjaFwiLFwiYWxjb2hvbFwiLFwiYm9vemVcIixcIm1vaml0b1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzc5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY3OVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiZWVyXCI6e1wiaWRcIjpcImJlZXJcIixcIm5hbWVcIjpcIkJlZXIgTXVnXCIsXCJrZXl3b3Jkc1wiOltcInJlbGF4XCIsXCJiZXZlcmFnZVwiLFwiZHJpbmtcIixcImRydW5rXCIsXCJwYXJ0eVwiLFwicHViXCIsXCJzdW1tZXJcIixcImFsY29ob2xcIixcImJvb3plXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzN2FcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjdBXCJ9XSxcInZlcnNpb25cIjoxfSxcImJlZXJzXCI6e1wiaWRcIjpcImJlZXJzXCIsXCJuYW1lXCI6XCJDbGlua2luZyBCZWVyIE11Z3NcIixcImtleXdvcmRzXCI6W1wiYmVlcnNcIixcInJlbGF4XCIsXCJiZXZlcmFnZVwiLFwiZHJpbmtcIixcImRydW5rXCIsXCJwYXJ0eVwiLFwicHViXCIsXCJzdW1tZXJcIixcImFsY29ob2xcIixcImJvb3plXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzN2JcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjdCXCJ9XSxcInZlcnNpb25cIjoxfSxcImNsaW5raW5nX2dsYXNzZXNcIjp7XCJpZFwiOlwiY2xpbmtpbmdfZ2xhc3Nlc1wiLFwibmFtZVwiOlwiQ2xpbmtpbmcgR2xhc3Nlc1wiLFwia2V5d29yZHNcIjpbXCJiZXZlcmFnZVwiLFwiZHJpbmtcIixcInBhcnR5XCIsXCJhbGNvaG9sXCIsXCJjZWxlYnJhdGVcIixcImNoZWVyc1wiLFwid2luZVwiLFwiY2hhbXBhZ25lXCIsXCJ0b2FzdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTQyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ0MlwifV0sXCJ2ZXJzaW9uXCI6M30sXCJ0dW1ibGVyX2dsYXNzXCI6e1wiaWRcIjpcInR1bWJsZXJfZ2xhc3NcIixcIm5hbWVcIjpcIlR1bWJsZXIgR2xhc3NcIixcImtleXdvcmRzXCI6W1wiZHJpbmtcIixcImJldmVyYWdlXCIsXCJkcnVua1wiLFwiYWxjb2hvbFwiLFwibGlxdW9yXCIsXCJib296ZVwiLFwiYm91cmJvblwiLFwic2NvdGNoXCIsXCJ3aGlza3lcIixcInNob3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk0M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENDNcIn1dLFwidmVyc2lvblwiOjN9LFwicG91cmluZ19saXF1aWRcIjp7XCJpZFwiOlwicG91cmluZ19saXF1aWRcIixcIm5hbWVcIjpcIlBvdXJpbmcgTGlxdWlkXCIsXCJrZXl3b3Jkc1wiOltcImN1cFwiLFwid2F0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFkN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRDdcIn1dLFwidmVyc2lvblwiOjE0fSxcImN1cF93aXRoX3N0cmF3XCI6e1wiaWRcIjpcImN1cF93aXRoX3N0cmF3XCIsXCJuYW1lXCI6XCJDdXAgd2l0aCBTdHJhd1wiLFwia2V5d29yZHNcIjpbXCJkcmlua1wiLFwic29kYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTY0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ2NFwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJidWJibGVfdGVhXCI6e1wiaWRcIjpcImJ1YmJsZV90ZWFcIixcIm5hbWVcIjpcIkJ1YmJsZSBUZWFcIixcImtleXdvcmRzXCI6W1widGFpd2FuXCIsXCJib2JhXCIsXCJtaWxrXCIsXCJzdHJhd1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWNiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERDQlwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiYmV2ZXJhZ2VfYm94XCI6e1wiaWRcIjpcImJldmVyYWdlX2JveFwiLFwibmFtZVwiOlwiQmV2ZXJhZ2UgQm94XCIsXCJrZXl3b3Jkc1wiOltcImRyaW5rXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YzNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREMzXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJtYXRlX2RyaW5rXCI6e1wiaWRcIjpcIm1hdGVfZHJpbmtcIixcIm5hbWVcIjpcIk1hdGVcIixcImtleXdvcmRzXCI6W1wiZHJpbmtcIixcInRlYVwiLFwiYmV2ZXJhZ2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjljOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQzlcIn1dLFwidmVyc2lvblwiOjEyfSxcImljZV9jdWJlXCI6e1wiaWRcIjpcImljZV9jdWJlXCIsXCJuYW1lXCI6XCJJY2VcIixcImtleXdvcmRzXCI6W1wiY3ViZVwiLFwid2F0ZXJcIixcImNvbGRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjljYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQ0FcIn1dLFwidmVyc2lvblwiOjEyfSxcImNob3BzdGlja3NcIjp7XCJpZFwiOlwiY2hvcHN0aWNrc1wiLFwibmFtZVwiOlwiQ2hvcHN0aWNrc1wiLFwia2V5d29yZHNcIjpbXCJmb29kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NjJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDYyXCJ9XSxcInZlcnNpb25cIjo1fSxcImtuaWZlX2ZvcmtfcGxhdGVcIjp7XCJpZFwiOlwia25pZmVfZm9ya19wbGF0ZVwiLFwibmFtZVwiOlwiRm9yayBhbmQgS25pZmUgd2l0aCBQbGF0ZVwiLFwia2V5d29yZHNcIjpbXCJmb29kXCIsXCJlYXRcIixcIm1lYWxcIixcImx1bmNoXCIsXCJkaW5uZXJcIixcInJlc3RhdXJhbnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM3ZC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY3RFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmb3JrX2FuZF9rbmlmZVwiOntcImlkXCI6XCJmb3JrX2FuZF9rbmlmZVwiLFwibmFtZVwiOlwiRm9yayBhbmQgS25pZmVcIixcImtleXdvcmRzXCI6W1wiY3V0bGVyeVwiLFwia2l0Y2hlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzc0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY3NFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzcG9vblwiOntcImlkXCI6XCJzcG9vblwiLFwibmFtZVwiOlwiU3Bvb25cIixcImtleXdvcmRzXCI6W1wiY3V0bGVyeVwiLFwia2l0Y2hlblwiLFwidGFibGV3YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NDRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDQ0XCJ9XSxcInZlcnNpb25cIjozfSxcImhvY2hvXCI6e1wiaWRcIjpcImhvY2hvXCIsXCJuYW1lXCI6XCJIb2Nob1wiLFwia2V5d29yZHNcIjpbXCJrbmlmZVwiLFwia2l0Y2hlblwiLFwiYmxhZGVcIixcImN1dGxlcnlcIixcIndlYXBvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTJhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQyQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJqYXJcIjp7XCJpZFwiOlwiamFyXCIsXCJuYW1lXCI6XCJKYXJcIixcImtleXdvcmRzXCI6W1wiY29udGFpbmVyXCIsXCJzYXVjZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWQ5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVEOVwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwiYW1waG9yYVwiOntcImlkXCI6XCJhbXBob3JhXCIsXCJuYW1lXCI6XCJBbXBob3JhXCIsXCJrZXl3b3Jkc1wiOltcInZhc2VcIixcImphclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2ZhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZGQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlYXJ0aF9hZnJpY2FcIjp7XCJpZFwiOlwiZWFydGhfYWZyaWNhXCIsXCJuYW1lXCI6XCJFYXJ0aCBHbG9iZSBFdXJvcGUtQWZyaWNhXCIsXCJrZXl3b3Jkc1wiOltcImFmcmljYVwiLFwic2hvd2luZ1wiLFwiZXVyb3BlXCIsXCJ3b3JsZFwiLFwiaW50ZXJuYXRpb25hbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzBkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYwRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlYXJ0aF9hbWVyaWNhc1wiOntcImlkXCI6XCJlYXJ0aF9hbWVyaWNhc1wiLFwibmFtZVwiOlwiRWFydGggR2xvYmUgQW1lcmljYXNcIixcImtleXdvcmRzXCI6W1wic2hvd2luZ1wiLFwid29ybGRcIixcIlVTQVwiLFwiaW50ZXJuYXRpb25hbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzBlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYwRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlYXJ0aF9hc2lhXCI6e1wiaWRcIjpcImVhcnRoX2FzaWFcIixcIm5hbWVcIjpcIkVhcnRoIEdsb2JlIEFzaWEtQXVzdHJhbGlhXCIsXCJrZXl3b3Jkc1wiOltcImFzaWFcIixcInNob3dpbmdcIixcImF1c3RyYWxpYVwiLFwid29ybGRcIixcImVhc3RcIixcImludGVybmF0aW9uYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZ2xvYmVfd2l0aF9tZXJpZGlhbnNcIjp7XCJpZFwiOlwiZ2xvYmVfd2l0aF9tZXJpZGlhbnNcIixcIm5hbWVcIjpcIkdsb2JlIHdpdGggTWVyaWRpYW5zXCIsXCJrZXl3b3Jkc1wiOltcImVhcnRoXCIsXCJpbnRlcm5hdGlvbmFsXCIsXCJ3b3JsZFwiLFwiaW50ZXJuZXRcIixcImludGVyd2ViXCIsXCJpMThuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMTBcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjEwXCJ9XSxcInZlcnNpb25cIjoxfSxcIndvcmxkX21hcFwiOntcImlkXCI6XCJ3b3JsZF9tYXBcIixcIm5hbWVcIjpcIldvcmxkIE1hcFwiLFwia2V5d29yZHNcIjpbXCJsb2NhdGlvblwiLFwiZGlyZWN0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1ZmEtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURERkFcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiamFwYW5cIjp7XCJpZFwiOlwiamFwYW5cIixcIm5hbWVcIjpcIk1hcCBvZiBKYXBhblwiLFwia2V5d29yZHNcIjpbXCJuYXRpb25cIixcImNvdW50cnlcIixcImphcGFuZXNlXCIsXCJhc2lhXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1ZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEREZFXCJ9XSxcInZlcnNpb25cIjoxfSxcImNvbXBhc3NcIjp7XCJpZFwiOlwiY29tcGFzc1wiLFwibmFtZVwiOlwiQ29tcGFzc1wiLFwia2V5d29yZHNcIjpbXCJtYWduZXRpY1wiLFwibmF2aWdhdGlvblwiLFwib3JpZW50ZWVyaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZWRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREVEXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJzbm93X2NhcHBlZF9tb3VudGFpblwiOntcImlkXCI6XCJzbm93X2NhcHBlZF9tb3VudGFpblwiLFwibmFtZVwiOlwiU25vdy1DYXBwZWQgTW91bnRhaW5cIixcImtleXdvcmRzXCI6W1wic25vd1wiLFwiY2FwcGVkXCIsXCJwaG90b1wiLFwibmF0dXJlXCIsXCJlbnZpcm9ubWVudFwiLFwid2ludGVyXCIsXCJjb2xkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZDQtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRDRcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwibW91bnRhaW5cIjp7XCJpZFwiOlwibW91bnRhaW5cIixcIm5hbWVcIjpcIk1vdW50YWluXCIsXCJrZXl3b3Jkc1wiOltcInBob3RvXCIsXCJuYXR1cmVcIixcImVudmlyb25tZW50XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZmMC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjZGMFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ2b2xjYW5vXCI6e1wiaWRcIjpcInZvbGNhbm9cIixcIm5hbWVcIjpcIlZvbGNhbm9cIixcImtleXdvcmRzXCI6W1wicGhvdG9cIixcIm5hdHVyZVwiLFwiZGlzYXN0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMwYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMEJcIn1dLFwidmVyc2lvblwiOjF9LFwibW91bnRfZnVqaVwiOntcImlkXCI6XCJtb3VudF9mdWppXCIsXCJuYW1lXCI6XCJNb3VudCBGdWppXCIsXCJrZXl3b3Jkc1wiOltcInBob3RvXCIsXCJtb3VudGFpblwiLFwibmF0dXJlXCIsXCJqYXBhbmVzZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNWZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RERGQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYW1waW5nXCI6e1wiaWRcIjpcImNhbXBpbmdcIixcIm5hbWVcIjpcIkNhbXBpbmdcIixcImtleXdvcmRzXCI6W1wicGhvdG9cIixcIm91dGRvb3JzXCIsXCJ0ZW50XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZDUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRDVcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYmVhY2hfd2l0aF91bWJyZWxsYVwiOntcImlkXCI6XCJiZWFjaF93aXRoX3VtYnJlbGxhXCIsXCJuYW1lXCI6XCJCZWFjaCB3aXRoIFVtYnJlbGxhXCIsXCJrZXl3b3Jkc1wiOltcIndlYXRoZXJcIixcInN1bW1lclwiLFwic3VubnlcIixcInNhbmRcIixcIm1vaml0b1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2Q2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkQ2XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImRlc2VydFwiOntcImlkXCI6XCJkZXNlcnRcIixcIm5hbWVcIjpcIkRlc2VydFwiLFwia2V5d29yZHNcIjpbXCJwaG90b1wiLFwid2FybVwiLFwic2FoYXJhaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2RjLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkRDXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImRlc2VydF9pc2xhbmRcIjp7XCJpZFwiOlwiZGVzZXJ0X2lzbGFuZFwiLFwibmFtZVwiOlwiRGVzZXJ0IElzbGFuZFwiLFwia2V5d29yZHNcIjpbXCJwaG90b1wiLFwidHJvcGljYWxcIixcIm1vaml0b1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2RkLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkREXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5hdGlvbmFsX3BhcmtcIjp7XCJpZFwiOlwibmF0aW9uYWxfcGFya1wiLFwibmFtZVwiOlwiTmF0aW9uYWwgUGFya1wiLFwia2V5d29yZHNcIjpbXCJwaG90b1wiLFwiZW52aXJvbm1lbnRcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2RlLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkRFXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInN0YWRpdW1cIjp7XCJpZFwiOlwic3RhZGl1bVwiLFwibmFtZVwiOlwiU3RhZGl1bVwiLFwia2V5d29yZHNcIjpbXCJwaG90b1wiLFwicGxhY2VcIixcInNwb3J0c1wiLFwiY29uY2VydFwiLFwidmVudWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNkZi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZERlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbGFzc2ljYWxfYnVpbGRpbmdcIjp7XCJpZFwiOlwiY2xhc3NpY2FsX2J1aWxkaW5nXCIsXCJuYW1lXCI6XCJDbGFzc2ljYWwgQnVpbGRpbmdcIixcImtleXdvcmRzXCI6W1wiYXJ0XCIsXCJjdWx0dXJlXCIsXCJoaXN0b3J5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZGItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGREJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYnVpbGRpbmdfY29uc3RydWN0aW9uXCI6e1wiaWRcIjpcImJ1aWxkaW5nX2NvbnN0cnVjdGlvblwiLFwibmFtZVwiOlwiQnVpbGRpbmcgQ29uc3RydWN0aW9uXCIsXCJrZXl3b3Jkc1wiOltcIndpcFwiLFwid29ya2luZ1wiLFwicHJvZ3Jlc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNkNy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZEN1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJicmlja3NcIjp7XCJpZFwiOlwiYnJpY2tzXCIsXCJuYW1lXCI6XCJCcmlja1wiLFwia2V5d29yZHNcIjpbXCJicmlja3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlmMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERjFcIn1dLFwidmVyc2lvblwiOjExfSxcInJvY2tcIjp7XCJpZFwiOlwicm9ja1wiLFwibmFtZVwiOlwiUm9ja1wiLFwia2V5d29yZHNcIjpbXCJzdG9uZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWE4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVBOFwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwid29vZFwiOntcImlkXCI6XCJ3b29kXCIsXCJuYW1lXCI6XCJXb29kXCIsXCJrZXl3b3Jkc1wiOltcIm5hdHVyZVwiLFwidGltYmVyXCIsXCJ0cnVua1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWI1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVCNVwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiaHV0XCI6e1wiaWRcIjpcImh1dFwiLFwibmFtZVwiOlwiSHV0XCIsXCJrZXl3b3Jkc1wiOltcImhvdXNlXCIsXCJzdHJ1Y3R1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZkNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFRDZcIn1dLFwidmVyc2lvblwiOjEzfSxcImhvdXNlX2J1aWxkaW5nc1wiOntcImlkXCI6XCJob3VzZV9idWlsZGluZ3NcIixcIm5hbWVcIjpcIkhvdXNlc1wiLFwia2V5d29yZHNcIjpbXCJob3VzZVwiLFwiYnVpbGRpbmdzXCIsXCJwaG90b1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2Q4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkQ4XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImRlcmVsaWN0X2hvdXNlX2J1aWxkaW5nXCI6e1wiaWRcIjpcImRlcmVsaWN0X2hvdXNlX2J1aWxkaW5nXCIsXCJuYW1lXCI6XCJEZXJlbGljdCBIb3VzZVwiLFwia2V5d29yZHNcIjpbXCJidWlsZGluZ1wiLFwiYWJhbmRvblwiLFwiZXZpY3RcIixcImJyb2tlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2RhLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkRBXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImhvdXNlXCI6e1wiaWRcIjpcImhvdXNlXCIsXCJuYW1lXCI6XCJIb3VzZVwiLFwia2V5d29yZHNcIjpbXCJidWlsZGluZ1wiLFwiaG9tZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2UwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZFMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJob3VzZV93aXRoX2dhcmRlblwiOntcImlkXCI6XCJob3VzZV93aXRoX2dhcmRlblwiLFwibmFtZVwiOlwiSG91c2Ugd2l0aCBHYXJkZW5cIixcImtleXdvcmRzXCI6W1wiaG9tZVwiLFwicGxhbnRcIixcIm5hdHVyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2UxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZFMVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvZmZpY2VcIjp7XCJpZFwiOlwib2ZmaWNlXCIsXCJuYW1lXCI6XCJPZmZpY2UgQnVpbGRpbmdcIixcImtleXdvcmRzXCI6W1wiYnVyZWF1XCIsXCJ3b3JrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZTJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkUyXCJ9XSxcInZlcnNpb25cIjoxfSxcInBvc3Rfb2ZmaWNlXCI6e1wiaWRcIjpcInBvc3Rfb2ZmaWNlXCIsXCJuYW1lXCI6XCJKYXBhbmVzZSBQb3N0IE9mZmljZVwiLFwia2V5d29yZHNcIjpbXCJidWlsZGluZ1wiLFwiZW52ZWxvcGVcIixcImNvbW11bmljYXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNlM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRTNcIn1dLFwidmVyc2lvblwiOjF9LFwiZXVyb3BlYW5fcG9zdF9vZmZpY2VcIjp7XCJpZFwiOlwiZXVyb3BlYW5fcG9zdF9vZmZpY2VcIixcIm5hbWVcIjpcIlBvc3QgT2ZmaWNlXCIsXCJrZXl3b3Jkc1wiOltcImV1cm9wZWFuXCIsXCJidWlsZGluZ1wiLFwiZW1haWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNlNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRTRcIn1dLFwidmVyc2lvblwiOjF9LFwiaG9zcGl0YWxcIjp7XCJpZFwiOlwiaG9zcGl0YWxcIixcIm5hbWVcIjpcIkhvc3BpdGFsXCIsXCJrZXl3b3Jkc1wiOltcImJ1aWxkaW5nXCIsXCJoZWFsdGhcIixcInN1cmdlcnlcIixcImRvY3RvclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2U1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZFNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiYW5rXCI6e1wiaWRcIjpcImJhbmtcIixcIm5hbWVcIjpcIkJhbmtcIixcImtleXdvcmRzXCI6W1wiYnVpbGRpbmdcIixcIm1vbmV5XCIsXCJzYWxlc1wiLFwiY2FzaFwiLFwiYnVzaW5lc3NcIixcImVudGVycHJpc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNlNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRTZcIn1dLFwidmVyc2lvblwiOjF9LFwiaG90ZWxcIjp7XCJpZFwiOlwiaG90ZWxcIixcIm5hbWVcIjpcIkhvdGVsXCIsXCJrZXl3b3Jkc1wiOltcImJ1aWxkaW5nXCIsXCJhY2NvbW9kYXRpb25cIixcImNoZWNraW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNlOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRThcIn1dLFwidmVyc2lvblwiOjF9LFwibG92ZV9ob3RlbFwiOntcImlkXCI6XCJsb3ZlX2hvdGVsXCIsXCJuYW1lXCI6XCJMb3ZlIEhvdGVsXCIsXCJrZXl3b3Jkc1wiOltcImxpa2VcIixcImFmZmVjdGlvblwiLFwiZGF0aW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZTlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkU5XCJ9XSxcInZlcnNpb25cIjoxfSxcImNvbnZlbmllbmNlX3N0b3JlXCI6e1wiaWRcIjpcImNvbnZlbmllbmNlX3N0b3JlXCIsXCJuYW1lXCI6XCJDb252ZW5pZW5jZSBTdG9yZVwiLFwia2V5d29yZHNcIjpbXCJidWlsZGluZ1wiLFwic2hvcHBpbmdcIixcImdyb2Nlcmllc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2VhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZFQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzY2hvb2xcIjp7XCJpZFwiOlwic2Nob29sXCIsXCJuYW1lXCI6XCJTY2hvb2xcIixcImtleXdvcmRzXCI6W1wiYnVpbGRpbmdcIixcInN0dWRlbnRcIixcImVkdWNhdGlvblwiLFwibGVhcm5cIixcInRlYWNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkVCXCJ9XSxcInZlcnNpb25cIjoxfSxcImRlcGFydG1lbnRfc3RvcmVcIjp7XCJpZFwiOlwiZGVwYXJ0bWVudF9zdG9yZVwiLFwibmFtZVwiOlwiRGVwYXJ0bWVudCBTdG9yZVwiLFwia2V5d29yZHNcIjpbXCJidWlsZGluZ1wiLFwic2hvcHBpbmdcIixcIm1hbGxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRUNcIn1dLFwidmVyc2lvblwiOjF9LFwiZmFjdG9yeVwiOntcImlkXCI6XCJmYWN0b3J5XCIsXCJuYW1lXCI6XCJGYWN0b3J5XCIsXCJrZXl3b3Jkc1wiOltcImJ1aWxkaW5nXCIsXCJpbmR1c3RyeVwiLFwicG9sbHV0aW9uXCIsXCJzbW9rZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2VkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZFRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJqYXBhbmVzZV9jYXN0bGVcIjp7XCJpZFwiOlwiamFwYW5lc2VfY2FzdGxlXCIsXCJuYW1lXCI6XCJKYXBhbmVzZSBDYXN0bGVcIixcImtleXdvcmRzXCI6W1wicGhvdG9cIixcImJ1aWxkaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZWZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkVGXCJ9XSxcInZlcnNpb25cIjoxfSxcImV1cm9wZWFuX2Nhc3RsZVwiOntcImlkXCI6XCJldXJvcGVhbl9jYXN0bGVcIixcIm5hbWVcIjpcIkNhc3RsZVwiLFwia2V5d29yZHNcIjpbXCJldXJvcGVhblwiLFwiYnVpbGRpbmdcIixcInJveWFsdHlcIixcImhpc3RvcnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNmMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRjBcIn1dLFwidmVyc2lvblwiOjF9LFwid2VkZGluZ1wiOntcImlkXCI6XCJ3ZWRkaW5nXCIsXCJuYW1lXCI6XCJXZWRkaW5nXCIsXCJrZXl3b3Jkc1wiOltcImxvdmVcIixcImxpa2VcIixcImFmZmVjdGlvblwiLFwiY291cGxlXCIsXCJtYXJyaWFnZVwiLFwiYnJpZGVcIixcImdyb29tXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0OTJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzkyXCJ9XSxcInZlcnNpb25cIjoxfSxcInRva3lvX3Rvd2VyXCI6e1wiaWRcIjpcInRva3lvX3Rvd2VyXCIsXCJuYW1lXCI6XCJUb2t5byBUb3dlclwiLFwia2V5d29yZHNcIjpbXCJwaG90b1wiLFwiamFwYW5lc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjVmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURERkNcIn1dLFwidmVyc2lvblwiOjF9LFwic3RhdHVlX29mX2xpYmVydHlcIjp7XCJpZFwiOlwic3RhdHVlX29mX2xpYmVydHlcIixcIm5hbWVcIjpcIlN0YXR1ZSBvZiBMaWJlcnR5XCIsXCJrZXl3b3Jkc1wiOltcImFtZXJpY2FuXCIsXCJuZXd5b3JrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1ZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEREZEXCJ9XSxcInZlcnNpb25cIjoxfSxcImNodXJjaFwiOntcImlkXCI6XCJjaHVyY2hcIixcIm5hbWVcIjpcIkNodXJjaFwiLFwia2V5d29yZHNcIjpbXCJidWlsZGluZ1wiLFwicmVsaWdpb25cIixcImNocmlzdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2ZWFcIixcIm5hdGl2ZVwiOlwiXHUyNkVBXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1vc3F1ZVwiOntcImlkXCI6XCJtb3NxdWVcIixcIm5hbWVcIjpcIk1vc3F1ZVwiLFwia2V5d29yZHNcIjpbXCJpc2xhbVwiLFwid29yc2hpcFwiLFwibWluYXJldFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTRjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ0Q1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoaW5kdV90ZW1wbGVcIjp7XCJpZFwiOlwiaGluZHVfdGVtcGxlXCIsXCJuYW1lXCI6XCJIaW5kdSBUZW1wbGVcIixcImtleXdvcmRzXCI6W1wicmVsaWdpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZkNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFRDVcIn1dLFwidmVyc2lvblwiOjEyfSxcInN5bmFnb2d1ZVwiOntcImlkXCI6XCJzeW5hZ29ndWVcIixcIm5hbWVcIjpcIlN5bmFnb2d1ZVwiLFwia2V5d29yZHNcIjpbXCJqdWRhaXNtXCIsXCJ3b3JzaGlwXCIsXCJ0ZW1wbGVcIixcImpld2lzaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTRkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ0RFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzaGludG9fc2hyaW5lXCI6e1wiaWRcIjpcInNoaW50b19zaHJpbmVcIixcIm5hbWVcIjpcIlNoaW50byBTaHJpbmVcIixcImtleXdvcmRzXCI6W1widGVtcGxlXCIsXCJqYXBhblwiLFwia3lvdG9cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmU5LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkU5XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImthYWJhXCI6e1wiaWRcIjpcImthYWJhXCIsXCJuYW1lXCI6XCJLYWFiYVwiLFwia2V5d29yZHNcIjpbXCJtZWNjYVwiLFwibW9zcXVlXCIsXCJpc2xhbVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTRiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ0QlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmb3VudGFpblwiOntcImlkXCI6XCJmb3VudGFpblwiLFwibmFtZVwiOlwiRm91bnRhaW5cIixcImtleXdvcmRzXCI6W1wicGhvdG9cIixcInN1bW1lclwiLFwid2F0ZXJcIixcImZyZXNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZmMlwiLFwibmF0aXZlXCI6XCJcdTI2RjJcIn1dLFwidmVyc2lvblwiOjF9LFwidGVudFwiOntcImlkXCI6XCJ0ZW50XCIsXCJuYW1lXCI6XCJUZW50XCIsXCJrZXl3b3Jkc1wiOltcInBob3RvXCIsXCJjYW1waW5nXCIsXCJvdXRkb29yc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2ZmFcIixcIm5hdGl2ZVwiOlwiXHUyNkZBXCJ9XSxcInZlcnNpb25cIjoxfSxcImZvZ2d5XCI6e1wiaWRcIjpcImZvZ2d5XCIsXCJuYW1lXCI6XCJGb2dneVwiLFwia2V5d29yZHNcIjpbXCJwaG90b1wiLFwibW91bnRhaW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMwMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMDFcIn1dLFwidmVyc2lvblwiOjF9LFwibmlnaHRfd2l0aF9zdGFyc1wiOntcImlkXCI6XCJuaWdodF93aXRoX3N0YXJzXCIsXCJuYW1lXCI6XCJOaWdodCB3aXRoIFN0YXJzXCIsXCJrZXl3b3Jkc1wiOltcImV2ZW5pbmdcIixcImNpdHlcIixcImRvd250b3duXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMDNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjAzXCJ9XSxcInZlcnNpb25cIjoxfSxcImNpdHlzY2FwZVwiOntcImlkXCI6XCJjaXR5c2NhcGVcIixcIm5hbWVcIjpcIkNpdHlzY2FwZVwiLFwia2V5d29yZHNcIjpbXCJwaG90b1wiLFwibmlnaHRcIixcImxpZmVcIixcInVyYmFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZDktZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRDlcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic3VucmlzZV9vdmVyX21vdW50YWluc1wiOntcImlkXCI6XCJzdW5yaXNlX292ZXJfbW91bnRhaW5zXCIsXCJuYW1lXCI6XCJTdW5yaXNlIG92ZXIgTW91bnRhaW5zXCIsXCJrZXl3b3Jkc1wiOltcInZpZXdcIixcInZhY2F0aW9uXCIsXCJwaG90b1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzA0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYwNFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzdW5yaXNlXCI6e1wiaWRcIjpcInN1bnJpc2VcIixcIm5hbWVcIjpcIlN1bnJpc2VcIixcImtleXdvcmRzXCI6W1wibW9ybmluZ1wiLFwidmlld1wiLFwidmFjYXRpb25cIixcInBob3RvXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMDVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjA1XCJ9XSxcInZlcnNpb25cIjoxfSxcImNpdHlfc3Vuc2V0XCI6e1wiaWRcIjpcImNpdHlfc3Vuc2V0XCIsXCJuYW1lXCI6XCJDaXR5c2NhcGUgYXQgRHVza1wiLFwia2V5d29yZHNcIjpbXCJjaXR5XCIsXCJzdW5zZXRcIixcInBob3RvXCIsXCJldmVuaW5nXCIsXCJza3lcIixcImJ1aWxkaW5nc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzA2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYwNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjaXR5X3N1bnJpc2VcIjp7XCJpZFwiOlwiY2l0eV9zdW5yaXNlXCIsXCJuYW1lXCI6XCJTdW5zZXRcIixcImtleXdvcmRzXCI6W1wiY2l0eVwiLFwic3VucmlzZVwiLFwicGhvdG9cIixcImdvb2RcIixcIm1vcm5pbmdcIixcImRhd25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMwN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMDdcIn1dLFwidmVyc2lvblwiOjF9LFwiYnJpZGdlX2F0X25pZ2h0XCI6e1wiaWRcIjpcImJyaWRnZV9hdF9uaWdodFwiLFwibmFtZVwiOlwiQnJpZGdlIGF0IE5pZ2h0XCIsXCJrZXl3b3Jkc1wiOltcInBob3RvXCIsXCJzYW5mcmFuY2lzY29cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMwOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMDlcIn1dLFwidmVyc2lvblwiOjF9LFwiaG90c3ByaW5nc1wiOntcImlkXCI6XCJob3RzcHJpbmdzXCIsXCJuYW1lXCI6XCJIb3QgU3ByaW5nc1wiLFwia2V5d29yZHNcIjpbXCJob3RzcHJpbmdzXCIsXCJiYXRoXCIsXCJ3YXJtXCIsXCJyZWxheFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2NjgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2NjhcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY2Fyb3VzZWxfaG9yc2VcIjp7XCJpZFwiOlwiY2Fyb3VzZWxfaG9yc2VcIixcIm5hbWVcIjpcIkNhcm91c2VsIEhvcnNlXCIsXCJrZXl3b3Jkc1wiOltcInBob3RvXCIsXCJjYXJuaXZhbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2EwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZBMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwbGF5Z3JvdW5kX3NsaWRlXCI6e1wiaWRcIjpcInBsYXlncm91bmRfc2xpZGVcIixcIm5hbWVcIjpcIlBsYXlncm91bmQgU2xpZGVcIixcImtleXdvcmRzXCI6W1wiZnVuXCIsXCJwYXJrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZGRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUREXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJmZXJyaXNfd2hlZWxcIjp7XCJpZFwiOlwiZmVycmlzX3doZWVsXCIsXCJuYW1lXCI6XCJGZXJyaXMgV2hlZWxcIixcImtleXdvcmRzXCI6W1wicGhvdG9cIixcImNhcm5pdmFsXCIsXCJsb25kb25leWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNhMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQTFcIn1dLFwidmVyc2lvblwiOjF9LFwicm9sbGVyX2NvYXN0ZXJcIjp7XCJpZFwiOlwicm9sbGVyX2NvYXN0ZXJcIixcIm5hbWVcIjpcIlJvbGxlciBDb2FzdGVyXCIsXCJrZXl3b3Jkc1wiOltcImNhcm5pdmFsXCIsXCJwbGF5Z3JvdW5kXCIsXCJwaG90b1wiLFwiZnVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYTJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkEyXCJ9XSxcInZlcnNpb25cIjoxfSxcImJhcmJlclwiOntcImlkXCI6XCJiYXJiZXJcIixcIm5hbWVcIjpcIkJhcmJlciBQb2xlXCIsXCJrZXl3b3Jkc1wiOltcImhhaXJcIixcInNhbG9uXCIsXCJzdHlsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDg4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4OFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjaXJjdXNfdGVudFwiOntcImlkXCI6XCJjaXJjdXNfdGVudFwiLFwibmFtZVwiOlwiQ2lyY3VzIFRlbnRcIixcImtleXdvcmRzXCI6W1wiZmVzdGl2YWxcIixcImNhcm5pdmFsXCIsXCJwYXJ0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2FhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZBQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzdGVhbV9sb2NvbW90aXZlXCI6e1wiaWRcIjpcInN0ZWFtX2xvY29tb3RpdmVcIixcIm5hbWVcIjpcIkxvY29tb3RpdmVcIixcImtleXdvcmRzXCI6W1wic3RlYW1cIixcInRyYW5zcG9ydGF0aW9uXCIsXCJ2ZWhpY2xlXCIsXCJ0cmFpblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjgyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU4MlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyYWlsd2F5X2NhclwiOntcImlkXCI6XCJyYWlsd2F5X2NhclwiLFwibmFtZVwiOlwiUmFpbHdheSBDYXJcIixcImtleXdvcmRzXCI6W1widHJhbnNwb3J0YXRpb25cIixcInZlaGljbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY4M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFODNcIn1dLFwidmVyc2lvblwiOjF9LFwiYnVsbGV0dHJhaW5fc2lkZVwiOntcImlkXCI6XCJidWxsZXR0cmFpbl9zaWRlXCIsXCJuYW1lXCI6XCJIaWdoLVNwZWVkIFRyYWluXCIsXCJrZXl3b3Jkc1wiOltcImJ1bGxldHRyYWluXCIsXCJzaWRlXCIsXCJoaWdoXCIsXCJzcGVlZFwiLFwidHJhbnNwb3J0YXRpb25cIixcInZlaGljbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY4NFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFODRcIn1dLFwidmVyc2lvblwiOjF9LFwiYnVsbGV0dHJhaW5fZnJvbnRcIjp7XCJpZFwiOlwiYnVsbGV0dHJhaW5fZnJvbnRcIixcIm5hbWVcIjpcIkJ1bGxldCBUcmFpblwiLFwia2V5d29yZHNcIjpbXCJidWxsZXR0cmFpblwiLFwiZnJvbnRcIixcInRyYW5zcG9ydGF0aW9uXCIsXCJ2ZWhpY2xlXCIsXCJzcGVlZFwiLFwiZmFzdFwiLFwicHVibGljXCIsXCJ0cmF2ZWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY4NVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFODVcIn1dLFwidmVyc2lvblwiOjF9LFwidHJhaW4yXCI6e1wiaWRcIjpcInRyYWluMlwiLFwibmFtZVwiOlwiVHJhaW5cIixcImtleXdvcmRzXCI6W1widHJhaW4yXCIsXCJ0cmFuc3BvcnRhdGlvblwiLFwidmVoaWNsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjg2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU4NlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtZXRyb1wiOntcImlkXCI6XCJtZXRyb1wiLFwibmFtZVwiOlwiTWV0cm9cIixcImtleXdvcmRzXCI6W1widHJhbnNwb3J0YXRpb25cIixcImJsdWVcIixcInNxdWFyZVwiLFwibXJ0XCIsXCJ1bmRlcmdyb3VuZFwiLFwidHViZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjg3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU4N1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsaWdodF9yYWlsXCI6e1wiaWRcIjpcImxpZ2h0X3JhaWxcIixcIm5hbWVcIjpcIkxpZ2h0IFJhaWxcIixcImtleXdvcmRzXCI6W1widHJhbnNwb3J0YXRpb25cIixcInZlaGljbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY4OFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFODhcIn1dLFwidmVyc2lvblwiOjF9LFwic3RhdGlvblwiOntcImlkXCI6XCJzdGF0aW9uXCIsXCJuYW1lXCI6XCJTdGF0aW9uXCIsXCJrZXl3b3Jkc1wiOltcInRyYW5zcG9ydGF0aW9uXCIsXCJ2ZWhpY2xlXCIsXCJwdWJsaWNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY4OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFODlcIn1dLFwidmVyc2lvblwiOjF9LFwidHJhbVwiOntcImlkXCI6XCJ0cmFtXCIsXCJuYW1lXCI6XCJUcmFtXCIsXCJrZXl3b3Jkc1wiOltcInRyYW5zcG9ydGF0aW9uXCIsXCJ2ZWhpY2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2OGFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERThBXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1vbm9yYWlsXCI6e1wiaWRcIjpcIm1vbm9yYWlsXCIsXCJuYW1lXCI6XCJNb25vcmFpbFwiLFwia2V5d29yZHNcIjpbXCJ0cmFuc3BvcnRhdGlvblwiLFwidmVoaWNsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjlkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU5RFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb3VudGFpbl9yYWlsd2F5XCI6e1wiaWRcIjpcIm1vdW50YWluX3JhaWx3YXlcIixcIm5hbWVcIjpcIk1vdW50YWluIFJhaWx3YXlcIixcImtleXdvcmRzXCI6W1widHJhbnNwb3J0YXRpb25cIixcInZlaGljbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY5ZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOUVcIn1dLFwidmVyc2lvblwiOjF9LFwidHJhaW5cIjp7XCJpZFwiOlwidHJhaW5cIixcIm5hbWVcIjpcIlRyYW0gQ2FyXCIsXCJrZXl3b3Jkc1wiOltcInRyYWluXCIsXCJ0cmFuc3BvcnRhdGlvblwiLFwidmVoaWNsZVwiLFwiY2FycmlhZ2VcIixcInB1YmxpY1wiLFwidHJhdmVsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2OGJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERThCXCJ9XSxcInZlcnNpb25cIjoxfSxcImJ1c1wiOntcImlkXCI6XCJidXNcIixcIm5hbWVcIjpcIkJ1c1wiLFwia2V5d29yZHNcIjpbXCJjYXJcIixcInZlaGljbGVcIixcInRyYW5zcG9ydGF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2OGNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERThDXCJ9XSxcInZlcnNpb25cIjoxfSxcIm9uY29taW5nX2J1c1wiOntcImlkXCI6XCJvbmNvbWluZ19idXNcIixcIm5hbWVcIjpcIk9uY29taW5nIEJ1c1wiLFwia2V5d29yZHNcIjpbXCJ2ZWhpY2xlXCIsXCJ0cmFuc3BvcnRhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjhkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU4RFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0cm9sbGV5YnVzXCI6e1wiaWRcIjpcInRyb2xsZXlidXNcIixcIm5hbWVcIjpcIlRyb2xsZXlidXNcIixcImtleXdvcmRzXCI6W1wiYmFydFwiLFwidHJhbnNwb3J0YXRpb25cIixcInZlaGljbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY4ZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOEVcIn1dLFwidmVyc2lvblwiOjF9LFwibWluaWJ1c1wiOntcImlkXCI6XCJtaW5pYnVzXCIsXCJuYW1lXCI6XCJNaW5pYnVzXCIsXCJrZXl3b3Jkc1wiOltcInZlaGljbGVcIixcImNhclwiLFwidHJhbnNwb3J0YXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY5MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOTBcIn1dLFwidmVyc2lvblwiOjF9LFwiYW1idWxhbmNlXCI6e1wiaWRcIjpcImFtYnVsYW5jZVwiLFwibmFtZVwiOlwiQW1idWxhbmNlXCIsXCJrZXl3b3Jkc1wiOltcImhlYWx0aFwiLFwiOTExXCIsXCJob3NwaXRhbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjkxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU5MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmaXJlX2VuZ2luZVwiOntcImlkXCI6XCJmaXJlX2VuZ2luZVwiLFwibmFtZVwiOlwiRmlyZSBFbmdpbmVcIixcImtleXdvcmRzXCI6W1widHJhbnNwb3J0YXRpb25cIixcImNhcnNcIixcInZlaGljbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOTJcIn1dLFwidmVyc2lvblwiOjF9LFwicG9saWNlX2NhclwiOntcImlkXCI6XCJwb2xpY2VfY2FyXCIsXCJuYW1lXCI6XCJQb2xpY2UgQ2FyXCIsXCJrZXl3b3Jkc1wiOltcInZlaGljbGVcIixcImNhcnNcIixcInRyYW5zcG9ydGF0aW9uXCIsXCJsYXdcIixcImxlZ2FsXCIsXCJlbmZvcmNlbWVudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU5M1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvbmNvbWluZ19wb2xpY2VfY2FyXCI6e1wiaWRcIjpcIm9uY29taW5nX3BvbGljZV9jYXJcIixcIm5hbWVcIjpcIk9uY29taW5nIFBvbGljZSBDYXJcIixcImtleXdvcmRzXCI6W1widmVoaWNsZVwiLFwibGF3XCIsXCJsZWdhbFwiLFwiZW5mb3JjZW1lbnRcIixcIjkxMVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjk0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU5NFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0YXhpXCI6e1wiaWRcIjpcInRheGlcIixcIm5hbWVcIjpcIlRheGlcIixcImtleXdvcmRzXCI6W1widWJlclwiLFwidmVoaWNsZVwiLFwiY2Fyc1wiLFwidHJhbnNwb3J0YXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY5NVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOTVcIn1dLFwidmVyc2lvblwiOjF9LFwib25jb21pbmdfdGF4aVwiOntcImlkXCI6XCJvbmNvbWluZ190YXhpXCIsXCJuYW1lXCI6XCJPbmNvbWluZyBUYXhpXCIsXCJrZXl3b3Jkc1wiOltcInZlaGljbGVcIixcImNhcnNcIixcInViZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY5NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOTZcIn1dLFwidmVyc2lvblwiOjF9LFwiY2FyXCI6e1wiaWRcIjpcImNhclwiLFwibmFtZVwiOlwiQXV0b21vYmlsZVwiLFwia2V5d29yZHNcIjpbXCJjYXJcIixcInJlZFwiLFwidHJhbnNwb3J0YXRpb25cIixcInZlaGljbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY5N1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOTdcIn1dLFwidmVyc2lvblwiOjF9LFwib25jb21pbmdfYXV0b21vYmlsZVwiOntcImlkXCI6XCJvbmNvbWluZ19hdXRvbW9iaWxlXCIsXCJuYW1lXCI6XCJPbmNvbWluZyBBdXRvbW9iaWxlXCIsXCJrZXl3b3Jkc1wiOltcImNhclwiLFwidmVoaWNsZVwiLFwidHJhbnNwb3J0YXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY5OFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOThcIn1dLFwidmVyc2lvblwiOjF9LFwiYmx1ZV9jYXJcIjp7XCJpZFwiOlwiYmx1ZV9jYXJcIixcIm5hbWVcIjpcIlJlY3JlYXRpb25hbCBWZWhpY2xlXCIsXCJrZXl3b3Jkc1wiOltcImJsdWVcIixcImNhclwiLFwic3BvcnRcIixcInV0aWxpdHlcIixcInRyYW5zcG9ydGF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2OTlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTk5XCJ9XSxcInZlcnNpb25cIjoxfSxcInBpY2t1cF90cnVja1wiOntcImlkXCI6XCJwaWNrdXBfdHJ1Y2tcIixcIm5hbWVcIjpcIlBpY2t1cCBUcnVja1wiLFwia2V5d29yZHNcIjpbXCJjYXJcIixcInRyYW5zcG9ydGF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUZCXCJ9XSxcInZlcnNpb25cIjoxM30sXCJ0cnVja1wiOntcImlkXCI6XCJ0cnVja1wiLFwibmFtZVwiOlwiRGVsaXZlcnkgVHJ1Y2tcIixcImtleXdvcmRzXCI6W1wiY2Fyc1wiLFwidHJhbnNwb3J0YXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY5YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFOUFcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJ0aWN1bGF0ZWRfbG9ycnlcIjp7XCJpZFwiOlwiYXJ0aWN1bGF0ZWRfbG9ycnlcIixcIm5hbWVcIjpcIkFydGljdWxhdGVkIExvcnJ5XCIsXCJrZXl3b3Jkc1wiOltcInZlaGljbGVcIixcImNhcnNcIixcInRyYW5zcG9ydGF0aW9uXCIsXCJleHByZXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2OWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTlCXCJ9XSxcInZlcnNpb25cIjoxfSxcInRyYWN0b3JcIjp7XCJpZFwiOlwidHJhY3RvclwiLFwibmFtZVwiOlwiVHJhY3RvclwiLFwia2V5d29yZHNcIjpbXCJ2ZWhpY2xlXCIsXCJjYXJcIixcImZhcm1pbmdcIixcImFncmljdWx0dXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2OWNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTlDXCJ9XSxcInZlcnNpb25cIjoxfSxcInJhY2luZ19jYXJcIjp7XCJpZFwiOlwicmFjaW5nX2NhclwiLFwibmFtZVwiOlwiUmFjaW5nIENhclwiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIixcInJhY2VcIixcImZhc3RcIixcImZvcm11bGFcIixcImYxXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzY2UtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQ0VcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwicmFjaW5nX21vdG9yY3ljbGVcIjp7XCJpZFwiOlwicmFjaW5nX21vdG9yY3ljbGVcIixcIm5hbWVcIjpcIk1vdG9yY3ljbGVcIixcImtleXdvcmRzXCI6W1wicmFjaW5nXCIsXCJyYWNlXCIsXCJzcG9ydHNcIixcImZhc3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNjZC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDRFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb3Rvcl9zY29vdGVyXCI6e1wiaWRcIjpcIm1vdG9yX3Njb290ZXJcIixcIm5hbWVcIjpcIk1vdG9yIFNjb290ZXJcIixcImtleXdvcmRzXCI6W1widmVoaWNsZVwiLFwidmVzcGFcIixcInNhc2hhXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZjVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUY1XCJ9XSxcInZlcnNpb25cIjozfSxcIm1hbnVhbF93aGVlbGNoYWlyXCI6e1wiaWRcIjpcIm1hbnVhbF93aGVlbGNoYWlyXCIsXCJuYW1lXCI6XCJNYW51YWwgV2hlZWxjaGFpclwiLFwia2V5d29yZHNcIjpbXCJhY2Nlc3NpYmlsaXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREJEXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJtb3Rvcml6ZWRfd2hlZWxjaGFpclwiOntcImlkXCI6XCJtb3Rvcml6ZWRfd2hlZWxjaGFpclwiLFwibmFtZVwiOlwiTW90b3JpemVkIFdoZWVsY2hhaXJcIixcImtleXdvcmRzXCI6W1wiYWNjZXNzaWJpbGl0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERCQ1wifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwiYXV0b19yaWNrc2hhd1wiOntcImlkXCI6XCJhdXRvX3JpY2tzaGF3XCIsXCJuYW1lXCI6XCJBdXRvIFJpY2tzaGF3XCIsXCJrZXl3b3Jkc1wiOltcIm1vdmVcIixcInRyYW5zcG9ydGF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZmFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUZBXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJiaWtlXCI6e1wiaWRcIjpcImJpa2VcIixcIm5hbWVcIjpcIkJpY3ljbGVcIixcImtleXdvcmRzXCI6W1wiYmlrZVwiLFwic3BvcnRzXCIsXCJleGVyY2lzZVwiLFwiaGlwc3RlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmIyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzY29vdGVyXCI6e1wiaWRcIjpcInNjb290ZXJcIixcIm5hbWVcIjpcIlNjb290ZXJcIixcImtleXdvcmRzXCI6W1wia2lja1wiLFwidmVoaWNsZVwiLFwicmF6b3JcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZmNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFRjRcIn1dLFwidmVyc2lvblwiOjN9LFwic2thdGVib2FyZFwiOntcImlkXCI6XCJza2F0ZWJvYXJkXCIsXCJuYW1lXCI6XCJTa2F0ZWJvYXJkXCIsXCJrZXl3b3Jkc1wiOltcImJvYXJkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZjlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUY5XCJ9XSxcInZlcnNpb25cIjoxMX0sXCJyb2xsZXJfc2thdGVcIjp7XCJpZFwiOlwicm9sbGVyX3NrYXRlXCIsXCJuYW1lXCI6XCJSb2xsZXIgU2thdGVcIixcImtleXdvcmRzXCI6W1wiZm9vdHdlYXJcIixcInNwb3J0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVGQ1wifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiYnVzc3RvcFwiOntcImlkXCI6XCJidXNzdG9wXCIsXCJuYW1lXCI6XCJCdXMgU3RvcFwiLFwia2V5d29yZHNcIjpbXCJidXNzdG9wXCIsXCJ0cmFuc3BvcnRhdGlvblwiLFwid2FpdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjhmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU4RlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb3RvcndheVwiOntcImlkXCI6XCJtb3RvcndheVwiLFwibmFtZVwiOlwiTW90b3J3YXlcIixcImtleXdvcmRzXCI6W1wicm9hZFwiLFwiY3VwZXJ0aW5vXCIsXCJpbnRlcnN0YXRlXCIsXCJoaWdod2F5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZTMtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFRTNcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwicmFpbHdheV90cmFja1wiOntcImlkXCI6XCJyYWlsd2F5X3RyYWNrXCIsXCJuYW1lXCI6XCJSYWlsd2F5IFRyYWNrXCIsXCJrZXl3b3Jkc1wiOltcInRyYWluXCIsXCJ0cmFuc3BvcnRhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmU0LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUU0XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm9pbF9kcnVtXCI6e1wiaWRcIjpcIm9pbF9kcnVtXCIsXCJuYW1lXCI6XCJPaWwgRHJ1bVwiLFwia2V5d29yZHNcIjpbXCJiYXJyZWxsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZTItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFRTJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZnVlbHB1bXBcIjp7XCJpZFwiOlwiZnVlbHB1bXBcIixcIm5hbWVcIjpcIkZ1ZWwgUHVtcFwiLFwia2V5d29yZHNcIjpbXCJmdWVscHVtcFwiLFwiZ2FzXCIsXCJzdGF0aW9uXCIsXCJwZXRyb2xldW1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmZkXCIsXCJuYXRpdmVcIjpcIlx1MjZGRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3aGVlbFwiOntcImlkXCI6XCJ3aGVlbFwiLFwibmFtZVwiOlwiV2hlZWxcIixcImtleXdvcmRzXCI6W1wiY2FyXCIsXCJ0cmFuc3BvcnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZkZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFREVcIn1dLFwidmVyc2lvblwiOjE0fSxcInJvdGF0aW5nX2xpZ2h0XCI6e1wiaWRcIjpcInJvdGF0aW5nX2xpZ2h0XCIsXCJuYW1lXCI6XCJQb2xpY2UgQ2FyIExpZ2h0XCIsXCJrZXl3b3Jkc1wiOltcInJvdGF0aW5nXCIsXCJhbWJ1bGFuY2VcIixcIjkxMVwiLFwiZW1lcmdlbmN5XCIsXCJhbGVydFwiLFwiZXJyb3JcIixcInBpbmdlZFwiLFwibGF3XCIsXCJsZWdhbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmE4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBOFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0cmFmZmljX2xpZ2h0XCI6e1wiaWRcIjpcInRyYWZmaWNfbGlnaHRcIixcIm5hbWVcIjpcIkhvcml6b250YWwgVHJhZmZpYyBMaWdodFwiLFwia2V5d29yZHNcIjpbXCJ0cmFuc3BvcnRhdGlvblwiLFwic2lnbmFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YTVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUE1XCJ9XSxcInZlcnNpb25cIjoxfSxcInZlcnRpY2FsX3RyYWZmaWNfbGlnaHRcIjp7XCJpZFwiOlwidmVydGljYWxfdHJhZmZpY19saWdodFwiLFwibmFtZVwiOlwiVmVydGljYWwgVHJhZmZpYyBMaWdodFwiLFwia2V5d29yZHNcIjpbXCJ0cmFuc3BvcnRhdGlvblwiLFwiZHJpdmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmE2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvY3RhZ29uYWxfc2lnblwiOntcImlkXCI6XCJvY3RhZ29uYWxfc2lnblwiLFwibmFtZVwiOlwiU3RvcCBTaWduXCIsXCJrZXl3b3Jkc1wiOltcIm9jdGFnb25hbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmQxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVEMVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJjb25zdHJ1Y3Rpb25cIjp7XCJpZFwiOlwiY29uc3RydWN0aW9uXCIsXCJuYW1lXCI6XCJDb25zdHJ1Y3Rpb25cIixcImtleXdvcmRzXCI6W1wid2lwXCIsXCJwcm9ncmVzc1wiLFwiY2F1dGlvblwiLFwid2FybmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmE3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhbmNob3JcIjp7XCJpZFwiOlwiYW5jaG9yXCIsXCJuYW1lXCI6XCJBbmNob3JcIixcImtleXdvcmRzXCI6W1wic2hpcFwiLFwiZmVycnlcIixcInNlYVwiLFwiYm9hdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2OTNcIixcIm5hdGl2ZVwiOlwiXHUyNjkzXCJ9XSxcInZlcnNpb25cIjoxfSxcInJpbmdfYnVveVwiOntcImlkXCI6XCJyaW5nX2J1b3lcIixcIm5hbWVcIjpcIlJpbmcgQnVveVwiLFwia2V5d29yZHNcIjpbXCJsaWZlXCIsXCJzYXZlclwiLFwicHJlc2VydmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERURGXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJib2F0XCI6e1wiaWRcIjpcImJvYXRcIixcIm5hbWVcIjpcIlNhaWxib2F0XCIsXCJrZXl3b3Jkc1wiOltcImJvYXRcIixcInNoaXBcIixcInN1bW1lclwiLFwidHJhbnNwb3J0YXRpb25cIixcIndhdGVyXCIsXCJzYWlsaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZmNVwiLFwibmF0aXZlXCI6XCJcdTI2RjVcIn1dLFwidmVyc2lvblwiOjF9LFwiY2Fub2VcIjp7XCJpZFwiOlwiY2Fub2VcIixcIm5hbWVcIjpcIkNhbm9lXCIsXCJrZXl3b3Jkc1wiOltcImJvYXRcIixcInBhZGRsZVwiLFwid2F0ZXJcIixcInNoaXBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZmNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFRjZcIn1dLFwidmVyc2lvblwiOjN9LFwic3BlZWRib2F0XCI6e1wiaWRcIjpcInNwZWVkYm9hdFwiLFwibmFtZVwiOlwiU3BlZWRib2F0XCIsXCJrZXl3b3Jkc1wiOltcInNoaXBcIixcInRyYW5zcG9ydGF0aW9uXCIsXCJ2ZWhpY2xlXCIsXCJzdW1tZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQTRcIn1dLFwidmVyc2lvblwiOjF9LFwicGFzc2VuZ2VyX3NoaXBcIjp7XCJpZFwiOlwicGFzc2VuZ2VyX3NoaXBcIixcIm5hbWVcIjpcIlBhc3NlbmdlciBTaGlwXCIsXCJrZXl3b3Jkc1wiOltcInlhY2h0XCIsXCJjcnVpc2VcIixcImZlcnJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZjMtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFRjNcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZmVycnlcIjp7XCJpZFwiOlwiZmVycnlcIixcIm5hbWVcIjpcIkZlcnJ5XCIsXCJrZXl3b3Jkc1wiOltcImJvYXRcIixcInNoaXBcIixcInlhY2h0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZmNC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjZGNFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb3Rvcl9ib2F0XCI6e1wiaWRcIjpcIm1vdG9yX2JvYXRcIixcIm5hbWVcIjpcIk1vdG9yIEJvYXRcIixcImtleXdvcmRzXCI6W1wic2hpcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmU1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUU1XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNoaXBcIjp7XCJpZFwiOlwic2hpcFwiLFwibmFtZVwiOlwiU2hpcFwiLFwia2V5d29yZHNcIjpbXCJ0cmFuc3BvcnRhdGlvblwiLFwidGl0YW5pY1wiLFwiZGVwbG95XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YTJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUEyXCJ9XSxcInZlcnNpb25cIjoxfSxcImFpcnBsYW5lXCI6e1wiaWRcIjpcImFpcnBsYW5lXCIsXCJuYW1lXCI6XCJBaXJwbGFuZVwiLFwia2V5d29yZHNcIjpbXCJ2ZWhpY2xlXCIsXCJ0cmFuc3BvcnRhdGlvblwiLFwiZmxpZ2h0XCIsXCJmbHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzA4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNzA4XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNtYWxsX2FpcnBsYW5lXCI6e1wiaWRcIjpcInNtYWxsX2FpcnBsYW5lXCIsXCJuYW1lXCI6XCJTbWFsbCBBaXJwbGFuZVwiLFwia2V5d29yZHNcIjpbXCJmbGlnaHRcIixcInRyYW5zcG9ydGF0aW9uXCIsXCJmbHlcIixcInZlaGljbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZlOS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVFOVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhaXJwbGFuZV9kZXBhcnR1cmVcIjp7XCJpZFwiOlwiYWlycGxhbmVfZGVwYXJ0dXJlXCIsXCJuYW1lXCI6XCJBaXJwbGFuZSBEZXBhcnR1cmVcIixcImtleXdvcmRzXCI6W1wiYWlycG9ydFwiLFwiZmxpZ2h0XCIsXCJsYW5kaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUVCXCJ9XSxcInZlcnNpb25cIjoxfSxcImFpcnBsYW5lX2Fycml2aW5nXCI6e1wiaWRcIjpcImFpcnBsYW5lX2Fycml2aW5nXCIsXCJuYW1lXCI6XCJBaXJwbGFuZSBBcnJpdmFsXCIsXCJrZXl3b3Jkc1wiOltcImFycml2aW5nXCIsXCJhaXJwb3J0XCIsXCJmbGlnaHRcIixcImJvYXJkaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZWNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUVDXCJ9XSxcInZlcnNpb25cIjoxfSxcInBhcmFjaHV0ZVwiOntcImlkXCI6XCJwYXJhY2h1dGVcIixcIm5hbWVcIjpcIlBhcmFjaHV0ZVwiLFwia2V5d29yZHNcIjpbXCJmbHlcIixcImdsaWRlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhODJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTgyXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJzZWF0XCI6e1wiaWRcIjpcInNlYXRcIixcIm5hbWVcIjpcIlNlYXRcIixcImtleXdvcmRzXCI6W1wic2l0XCIsXCJhaXJwbGFuZVwiLFwidHJhbnNwb3J0XCIsXCJidXNcIixcImZsaWdodFwiLFwiZmx5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YmFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0JBXCJ9XSxcInZlcnNpb25cIjoxfSxcImhlbGljb3B0ZXJcIjp7XCJpZFwiOlwiaGVsaWNvcHRlclwiLFwibmFtZVwiOlwiSGVsaWNvcHRlclwiLFwia2V5d29yZHNcIjpbXCJ0cmFuc3BvcnRhdGlvblwiLFwidmVoaWNsZVwiLFwiZmx5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ODFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERTgxXCJ9XSxcInZlcnNpb25cIjoxfSxcInN1c3BlbnNpb25fcmFpbHdheVwiOntcImlkXCI6XCJzdXNwZW5zaW9uX3JhaWx3YXlcIixcIm5hbWVcIjpcIlN1c3BlbnNpb24gUmFpbHdheVwiLFwia2V5d29yZHNcIjpbXCJ2ZWhpY2xlXCIsXCJ0cmFuc3BvcnRhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNjlmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REU5RlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb3VudGFpbl9jYWJsZXdheVwiOntcImlkXCI6XCJtb3VudGFpbl9jYWJsZXdheVwiLFwibmFtZVwiOlwiTW91bnRhaW4gQ2FibGV3YXlcIixcImtleXdvcmRzXCI6W1widHJhbnNwb3J0YXRpb25cIixcInZlaGljbGVcIixcInNraVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmEwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhZXJpYWxfdHJhbXdheVwiOntcImlkXCI6XCJhZXJpYWxfdHJhbXdheVwiLFwibmFtZVwiOlwiQWVyaWFsIFRyYW13YXlcIixcImtleXdvcmRzXCI6W1widHJhbnNwb3J0YXRpb25cIixcInZlaGljbGVcIixcInNraVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmExXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBMVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzYXRlbGxpdGVcIjp7XCJpZFwiOlwic2F0ZWxsaXRlXCIsXCJuYW1lXCI6XCJTYXRlbGxpdGVcIixcImtleXdvcmRzXCI6W1wiY29tbXVuaWNhdGlvblwiLFwiZ3BzXCIsXCJvcmJpdFwiLFwic3BhY2VmbGlnaHRcIixcIk5BU0FcIixcIklTU1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmYwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUYwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInJvY2tldFwiOntcImlkXCI6XCJyb2NrZXRcIixcIm5hbWVcIjpcIlJvY2tldFwiLFwia2V5d29yZHNcIjpbXCJsYXVuY2hcIixcInNoaXBcIixcInN0YWZmbW9kZVwiLFwiTkFTQVwiLFwib3V0ZXJcIixcInNwYWNlXCIsXCJmbHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjY4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFODBcIn1dLFwidmVyc2lvblwiOjF9LFwiZmx5aW5nX3NhdWNlclwiOntcImlkXCI6XCJmbHlpbmdfc2F1Y2VyXCIsXCJuYW1lXCI6XCJGbHlpbmcgU2F1Y2VyXCIsXCJrZXl3b3Jkc1wiOltcInRyYW5zcG9ydGF0aW9uXCIsXCJ2ZWhpY2xlXCIsXCJ1Zm9cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZmOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFRjhcIn1dLFwidmVyc2lvblwiOjV9LFwiYmVsbGhvcF9iZWxsXCI6e1wiaWRcIjpcImJlbGxob3BfYmVsbFwiLFwibmFtZVwiOlwiQmVsbGhvcCBCZWxsXCIsXCJrZXl3b3Jkc1wiOltcInNlcnZpY2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZjZS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVDRVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsdWdnYWdlXCI6e1wiaWRcIjpcImx1Z2dhZ2VcIixcIm5hbWVcIjpcIkx1Z2dhZ2VcIixcImtleXdvcmRzXCI6W1wicGFja2luZ1wiLFwidHJhdmVsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZjNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREYzXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJob3VyZ2xhc3NcIjp7XCJpZFwiOlwiaG91cmdsYXNzXCIsXCJuYW1lXCI6XCJIb3VyZ2xhc3NcIixcImtleXdvcmRzXCI6W1wiZG9uZVwiLFwidGltZVwiLFwiY2xvY2tcIixcIm9sZHNjaG9vbFwiLFwibGltaXRcIixcImV4YW1cIixcInF1aXpcIixcInRlc3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyMzFiXCIsXCJuYXRpdmVcIjpcIlx1MjMxQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJob3VyZ2xhc3NfZmxvd2luZ19zYW5kXCI6e1wiaWRcIjpcImhvdXJnbGFzc19mbG93aW5nX3NhbmRcIixcIm5hbWVcIjpcIkhvdXJnbGFzcyBOb3QgRG9uZVwiLFwia2V5d29yZHNcIjpbXCJmbG93aW5nXCIsXCJzYW5kXCIsXCJvbGRzY2hvb2xcIixcInRpbWVcIixcImNvdW50ZG93blwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIzZjNcIixcIm5hdGl2ZVwiOlwiXHUyM0YzXCJ9XSxcInZlcnNpb25cIjoxfSxcIndhdGNoXCI6e1wiaWRcIjpcIndhdGNoXCIsXCJuYW1lXCI6XCJXYXRjaFwiLFwia2V5d29yZHNcIjpbXCJ0aW1lXCIsXCJhY2Nlc3Nvcmllc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIzMWFcIixcIm5hdGl2ZVwiOlwiXHUyMzFBXCJ9XSxcInZlcnNpb25cIjoxfSxcImFsYXJtX2Nsb2NrXCI6e1wiaWRcIjpcImFsYXJtX2Nsb2NrXCIsXCJuYW1lXCI6XCJBbGFybSBDbG9ja1wiLFwia2V5d29yZHNcIjpbXCJ0aW1lXCIsXCJ3YWtlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjNmMFwiLFwibmF0aXZlXCI6XCJcdTIzRjBcIn1dLFwidmVyc2lvblwiOjF9LFwic3RvcHdhdGNoXCI6e1wiaWRcIjpcInN0b3B3YXRjaFwiLFwibmFtZVwiOlwiU3RvcHdhdGNoXCIsXCJrZXl3b3Jkc1wiOltcInRpbWVcIixcImRlYWRsaW5lXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjNmMS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjNGMVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0aW1lcl9jbG9ja1wiOntcImlkXCI6XCJ0aW1lcl9jbG9ja1wiLFwibmFtZVwiOlwiVGltZXIgQ2xvY2tcIixcImtleXdvcmRzXCI6W1wiYWxhcm1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyM2YyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyM0YyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hbnRlbHBpZWNlX2Nsb2NrXCI6e1wiaWRcIjpcIm1hbnRlbHBpZWNlX2Nsb2NrXCIsXCJuYW1lXCI6XCJNYW50ZWxwaWVjZSBDbG9ja1wiLFwia2V5d29yZHNcIjpbXCJ0aW1lXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NzAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENzBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY2xvY2sxMlwiOntcImlkXCI6XCJjbG9jazEyXCIsXCJuYW1lXCI6XCJUd2VsdmUgT1x1MjAxOWNsb2NrXCIsXCJrZXl3b3Jkc1wiOltcImNsb2NrMTJcIixcIm9cIixcImNsb2NrXCIsXCIxMlwiLFwiMDA6MDBcIixcIjAwMDBcIixcIjEyOjAwXCIsXCIxMjAwXCIsXCJ0aW1lXCIsXCJub29uXCIsXCJtaWRuaWdodFwiLFwibWlkZGF5XCIsXCJsYXRlXCIsXCJlYXJseVwiLFwic2NoZWR1bGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU1YlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENUJcIn1dLFwidmVyc2lvblwiOjF9LFwiY2xvY2sxMjMwXCI6e1wiaWRcIjpcImNsb2NrMTIzMFwiLFwibmFtZVwiOlwiVHdlbHZlLVRoaXJ0eVwiLFwia2V5d29yZHNcIjpbXCJjbG9jazEyMzBcIixcInR3ZWx2ZVwiLFwidGhpcnR5XCIsXCIwMDozMFwiLFwiMDAzMFwiLFwiMTI6MzBcIixcIjEyMzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTY3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ2N1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazFcIjp7XCJpZFwiOlwiY2xvY2sxXCIsXCJuYW1lXCI6XCJPbmUgT1x1MjAxOWNsb2NrXCIsXCJrZXl3b3Jkc1wiOltcImNsb2NrMVwiLFwib1wiLFwiY2xvY2tcIixcIjFcIixcIjE6MDBcIixcIjEwMFwiLFwiMTM6MDBcIixcIjEzMDBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTUwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ1MFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazEzMFwiOntcImlkXCI6XCJjbG9jazEzMFwiLFwibmFtZVwiOlwiT25lLVRoaXJ0eVwiLFwia2V5d29yZHNcIjpbXCJjbG9jazEzMFwiLFwib25lXCIsXCJ0aGlydHlcIixcIjE6MzBcIixcIjEzMFwiLFwiMTM6MzBcIixcIjEzMzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTVjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ1Q1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazJcIjp7XCJpZFwiOlwiY2xvY2syXCIsXCJuYW1lXCI6XCJUd28gT1x1MjAxOWNsb2NrXCIsXCJrZXl3b3Jkc1wiOltcImNsb2NrMlwiLFwib1wiLFwiY2xvY2tcIixcIjJcIixcIjI6MDBcIixcIjIwMFwiLFwiMTQ6MDBcIixcIjE0MDBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTUxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ1MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazIzMFwiOntcImlkXCI6XCJjbG9jazIzMFwiLFwibmFtZVwiOlwiVHdvLVRoaXJ0eVwiLFwia2V5d29yZHNcIjpbXCJjbG9jazIzMFwiLFwidHdvXCIsXCJ0aGlydHlcIixcIjI6MzBcIixcIjIzMFwiLFwiMTQ6MzBcIixcIjE0MzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTVkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ1RFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazNcIjp7XCJpZFwiOlwiY2xvY2szXCIsXCJuYW1lXCI6XCJUaHJlZSBPXHUyMDE5Y2xvY2tcIixcImtleXdvcmRzXCI6W1wiY2xvY2szXCIsXCJvXCIsXCJjbG9ja1wiLFwiM1wiLFwiMzowMFwiLFwiMzAwXCIsXCIxNTowMFwiLFwiMTUwMFwiLFwidGltZVwiLFwibGF0ZVwiLFwiZWFybHlcIixcInNjaGVkdWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NTJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDUyXCJ9XSxcInZlcnNpb25cIjoxfSxcImNsb2NrMzMwXCI6e1wiaWRcIjpcImNsb2NrMzMwXCIsXCJuYW1lXCI6XCJUaHJlZS1UaGlydHlcIixcImtleXdvcmRzXCI6W1wiY2xvY2szMzBcIixcInRocmVlXCIsXCJ0aGlydHlcIixcIjM6MzBcIixcIjMzMFwiLFwiMTU6MzBcIixcIjE1MzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTVlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ1RVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazRcIjp7XCJpZFwiOlwiY2xvY2s0XCIsXCJuYW1lXCI6XCJGb3VyIE9cdTIwMTljbG9ja1wiLFwia2V5d29yZHNcIjpbXCJjbG9jazRcIixcIm9cIixcImNsb2NrXCIsXCI0XCIsXCI0OjAwXCIsXCI0MDBcIixcIjE2OjAwXCIsXCIxNjAwXCIsXCJ0aW1lXCIsXCJsYXRlXCIsXCJlYXJseVwiLFwic2NoZWR1bGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU1M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENTNcIn1dLFwidmVyc2lvblwiOjF9LFwiY2xvY2s0MzBcIjp7XCJpZFwiOlwiY2xvY2s0MzBcIixcIm5hbWVcIjpcIkZvdXItVGhpcnR5XCIsXCJrZXl3b3Jkc1wiOltcImNsb2NrNDMwXCIsXCJmb3VyXCIsXCJ0aGlydHlcIixcIjQ6MzBcIixcIjQzMFwiLFwiMTY6MzBcIixcIjE2MzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTVmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ1RlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazVcIjp7XCJpZFwiOlwiY2xvY2s1XCIsXCJuYW1lXCI6XCJGaXZlIE9cdTIwMTljbG9ja1wiLFwia2V5d29yZHNcIjpbXCJjbG9jazVcIixcIm9cIixcImNsb2NrXCIsXCI1XCIsXCI1OjAwXCIsXCI1MDBcIixcIjE3OjAwXCIsXCIxNzAwXCIsXCJ0aW1lXCIsXCJsYXRlXCIsXCJlYXJseVwiLFwic2NoZWR1bGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU1NFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENTRcIn1dLFwidmVyc2lvblwiOjF9LFwiY2xvY2s1MzBcIjp7XCJpZFwiOlwiY2xvY2s1MzBcIixcIm5hbWVcIjpcIkZpdmUtVGhpcnR5XCIsXCJrZXl3b3Jkc1wiOltcImNsb2NrNTMwXCIsXCJmaXZlXCIsXCJ0aGlydHlcIixcIjU6MzBcIixcIjUzMFwiLFwiMTc6MzBcIixcIjE3MzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ2MFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazZcIjp7XCJpZFwiOlwiY2xvY2s2XCIsXCJuYW1lXCI6XCJTaXggT1x1MjAxOWNsb2NrXCIsXCJrZXl3b3Jkc1wiOltcImNsb2NrNlwiLFwib1wiLFwiY2xvY2tcIixcIjZcIixcIjY6MDBcIixcIjYwMFwiLFwiMTg6MDBcIixcIjE4MDBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiLFwiZGF3blwiLFwiZHVza1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTU1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ1NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazYzMFwiOntcImlkXCI6XCJjbG9jazYzMFwiLFwibmFtZVwiOlwiU2l4LVRoaXJ0eVwiLFwia2V5d29yZHNcIjpbXCJjbG9jazYzMFwiLFwic2l4XCIsXCJ0aGlydHlcIixcIjY6MzBcIixcIjYzMFwiLFwiMTg6MzBcIixcIjE4MzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTYxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ2MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazdcIjp7XCJpZFwiOlwiY2xvY2s3XCIsXCJuYW1lXCI6XCJTZXZlbiBPXHUyMDE5Y2xvY2tcIixcImtleXdvcmRzXCI6W1wiY2xvY2s3XCIsXCJvXCIsXCJjbG9ja1wiLFwiN1wiLFwiNzowMFwiLFwiNzAwXCIsXCIxOTowMFwiLFwiMTkwMFwiLFwidGltZVwiLFwibGF0ZVwiLFwiZWFybHlcIixcInNjaGVkdWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NTZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDU2XCJ9XSxcInZlcnNpb25cIjoxfSxcImNsb2NrNzMwXCI6e1wiaWRcIjpcImNsb2NrNzMwXCIsXCJuYW1lXCI6XCJTZXZlbi1UaGlydHlcIixcImtleXdvcmRzXCI6W1wiY2xvY2s3MzBcIixcInNldmVuXCIsXCJ0aGlydHlcIixcIjc6MzBcIixcIjczMFwiLFwiMTk6MzBcIixcIjE5MzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTYyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ2MlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazhcIjp7XCJpZFwiOlwiY2xvY2s4XCIsXCJuYW1lXCI6XCJFaWdodCBPXHUyMDE5Y2xvY2tcIixcImtleXdvcmRzXCI6W1wiY2xvY2s4XCIsXCJvXCIsXCJjbG9ja1wiLFwiOFwiLFwiODowMFwiLFwiODAwXCIsXCIyMDowMFwiLFwiMjAwMFwiLFwidGltZVwiLFwibGF0ZVwiLFwiZWFybHlcIixcInNjaGVkdWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NTdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDU3XCJ9XSxcInZlcnNpb25cIjoxfSxcImNsb2NrODMwXCI6e1wiaWRcIjpcImNsb2NrODMwXCIsXCJuYW1lXCI6XCJFaWdodC1UaGlydHlcIixcImtleXdvcmRzXCI6W1wiY2xvY2s4MzBcIixcImVpZ2h0XCIsXCJ0aGlydHlcIixcIjg6MzBcIixcIjgzMFwiLFwiMjA6MzBcIixcIjIwMzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ2M1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazlcIjp7XCJpZFwiOlwiY2xvY2s5XCIsXCJuYW1lXCI6XCJOaW5lIE9cdTIwMTljbG9ja1wiLFwia2V5d29yZHNcIjpbXCJjbG9jazlcIixcIm9cIixcImNsb2NrXCIsXCI5XCIsXCI5OjAwXCIsXCI5MDBcIixcIjIxOjAwXCIsXCIyMTAwXCIsXCJ0aW1lXCIsXCJsYXRlXCIsXCJlYXJseVwiLFwic2NoZWR1bGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU1OFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENThcIn1dLFwidmVyc2lvblwiOjF9LFwiY2xvY2s5MzBcIjp7XCJpZFwiOlwiY2xvY2s5MzBcIixcIm5hbWVcIjpcIk5pbmUtVGhpcnR5XCIsXCJrZXl3b3Jkc1wiOltcImNsb2NrOTMwXCIsXCJuaW5lXCIsXCJ0aGlydHlcIixcIjk6MzBcIixcIjkzMFwiLFwiMjE6MzBcIixcIjIxMzBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTY0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ2NFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazEwXCI6e1wiaWRcIjpcImNsb2NrMTBcIixcIm5hbWVcIjpcIlRlbiBPXHUyMDE5Y2xvY2tcIixcImtleXdvcmRzXCI6W1wiY2xvY2sxMFwiLFwib1wiLFwiY2xvY2tcIixcIjEwXCIsXCIxMDowMFwiLFwiMTAwMFwiLFwiMjI6MDBcIixcIjIyMDBcIixcInRpbWVcIixcImxhdGVcIixcImVhcmx5XCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTU5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ1OVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9jazEwMzBcIjp7XCJpZFwiOlwiY2xvY2sxMDMwXCIsXCJuYW1lXCI6XCJUZW4tVGhpcnR5XCIsXCJrZXl3b3Jkc1wiOltcImNsb2NrMTAzMFwiLFwidGVuXCIsXCJ0aGlydHlcIixcIjEwOjMwXCIsXCIxMDMwXCIsXCIyMjozMFwiLFwiMjIzMFwiLFwidGltZVwiLFwibGF0ZVwiLFwiZWFybHlcIixcInNjaGVkdWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NjVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDY1XCJ9XSxcInZlcnNpb25cIjoxfSxcImNsb2NrMTFcIjp7XCJpZFwiOlwiY2xvY2sxMVwiLFwibmFtZVwiOlwiRWxldmVuIE9cdTIwMTljbG9ja1wiLFwia2V5d29yZHNcIjpbXCJjbG9jazExXCIsXCJvXCIsXCJjbG9ja1wiLFwiMTFcIixcIjExOjAwXCIsXCIxMTAwXCIsXCIyMzowMFwiLFwiMjMwMFwiLFwidGltZVwiLFwibGF0ZVwiLFwiZWFybHlcIixcInNjaGVkdWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NWFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDVBXCJ9XSxcInZlcnNpb25cIjoxfSxcImNsb2NrMTEzMFwiOntcImlkXCI6XCJjbG9jazExMzBcIixcIm5hbWVcIjpcIkVsZXZlbi1UaGlydHlcIixcImtleXdvcmRzXCI6W1wiY2xvY2sxMTMwXCIsXCJlbGV2ZW5cIixcInRoaXJ0eVwiLFwiMTE6MzBcIixcIjExMzBcIixcIjIzOjMwXCIsXCIyMzMwXCIsXCJ0aW1lXCIsXCJsYXRlXCIsXCJlYXJseVwiLFwic2NoZWR1bGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU2NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENjZcIn1dLFwidmVyc2lvblwiOjF9LFwibmV3X21vb25cIjp7XCJpZFwiOlwibmV3X21vb25cIixcIm5hbWVcIjpcIk5ldyBNb29uXCIsXCJrZXl3b3Jkc1wiOltcIm5hdHVyZVwiLFwidHdpbGlnaHRcIixcInBsYW5ldFwiLFwic3BhY2VcIixcIm5pZ2h0XCIsXCJldmVuaW5nXCIsXCJzbGVlcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzExXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYxMVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3YXhpbmdfY3Jlc2NlbnRfbW9vblwiOntcImlkXCI6XCJ3YXhpbmdfY3Jlc2NlbnRfbW9vblwiLFwibmFtZVwiOlwiV2F4aW5nIENyZXNjZW50IE1vb25cIixcImtleXdvcmRzXCI6W1wibmF0dXJlXCIsXCJ0d2lsaWdodFwiLFwicGxhbmV0XCIsXCJzcGFjZVwiLFwibmlnaHRcIixcImV2ZW5pbmdcIixcInNsZWVwXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMTJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjEyXCJ9XSxcInZlcnNpb25cIjoxfSxcImZpcnN0X3F1YXJ0ZXJfbW9vblwiOntcImlkXCI6XCJmaXJzdF9xdWFydGVyX21vb25cIixcIm5hbWVcIjpcIkZpcnN0IFF1YXJ0ZXIgTW9vblwiLFwia2V5d29yZHNcIjpbXCJuYXR1cmVcIixcInR3aWxpZ2h0XCIsXCJwbGFuZXRcIixcInNwYWNlXCIsXCJuaWdodFwiLFwiZXZlbmluZ1wiLFwic2xlZXBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMxM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMTNcIn1dLFwidmVyc2lvblwiOjF9LFwibW9vblwiOntcImlkXCI6XCJtb29uXCIsXCJuYW1lXCI6XCJXYXhpbmcgR2liYm91cyBNb29uXCIsXCJrZXl3b3Jkc1wiOltcIm5hdHVyZVwiLFwibmlnaHRcIixcInNreVwiLFwiZ3JheVwiLFwidHdpbGlnaHRcIixcInBsYW5ldFwiLFwic3BhY2VcIixcImV2ZW5pbmdcIixcInNsZWVwXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMTRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjE0XCJ9XSxcInZlcnNpb25cIjoxfSxcImZ1bGxfbW9vblwiOntcImlkXCI6XCJmdWxsX21vb25cIixcIm5hbWVcIjpcIkZ1bGwgTW9vblwiLFwia2V5d29yZHNcIjpbXCJuYXR1cmVcIixcInllbGxvd1wiLFwidHdpbGlnaHRcIixcInBsYW5ldFwiLFwic3BhY2VcIixcIm5pZ2h0XCIsXCJldmVuaW5nXCIsXCJzbGVlcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzE1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYxNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3YW5pbmdfZ2liYm91c19tb29uXCI6e1wiaWRcIjpcIndhbmluZ19naWJib3VzX21vb25cIixcIm5hbWVcIjpcIldhbmluZyBHaWJib3VzIE1vb25cIixcImtleXdvcmRzXCI6W1wibmF0dXJlXCIsXCJ0d2lsaWdodFwiLFwicGxhbmV0XCIsXCJzcGFjZVwiLFwibmlnaHRcIixcImV2ZW5pbmdcIixcInNsZWVwXCIsXCJ3YXhpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMxNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMTZcIn1dLFwidmVyc2lvblwiOjF9LFwibGFzdF9xdWFydGVyX21vb25cIjp7XCJpZFwiOlwibGFzdF9xdWFydGVyX21vb25cIixcIm5hbWVcIjpcIkxhc3QgUXVhcnRlciBNb29uXCIsXCJrZXl3b3Jkc1wiOltcIm5hdHVyZVwiLFwidHdpbGlnaHRcIixcInBsYW5ldFwiLFwic3BhY2VcIixcIm5pZ2h0XCIsXCJldmVuaW5nXCIsXCJzbGVlcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzE3XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYxN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3YW5pbmdfY3Jlc2NlbnRfbW9vblwiOntcImlkXCI6XCJ3YW5pbmdfY3Jlc2NlbnRfbW9vblwiLFwibmFtZVwiOlwiV2FuaW5nIENyZXNjZW50IE1vb25cIixcImtleXdvcmRzXCI6W1wibmF0dXJlXCIsXCJ0d2lsaWdodFwiLFwicGxhbmV0XCIsXCJzcGFjZVwiLFwibmlnaHRcIixcImV2ZW5pbmdcIixcInNsZWVwXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMThcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjE4XCJ9XSxcInZlcnNpb25cIjoxfSxcImNyZXNjZW50X21vb25cIjp7XCJpZFwiOlwiY3Jlc2NlbnRfbW9vblwiLFwibmFtZVwiOlwiQ3Jlc2NlbnQgTW9vblwiLFwia2V5d29yZHNcIjpbXCJuaWdodFwiLFwic2xlZXBcIixcInNreVwiLFwiZXZlbmluZ1wiLFwibWFnaWNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMxOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMTlcIn1dLFwidmVyc2lvblwiOjF9LFwibmV3X21vb25fd2l0aF9mYWNlXCI6e1wiaWRcIjpcIm5ld19tb29uX3dpdGhfZmFjZVwiLFwibmFtZVwiOlwiTmV3IE1vb24gRmFjZVwiLFwia2V5d29yZHNcIjpbXCJ3aXRoXCIsXCJuYXR1cmVcIixcInR3aWxpZ2h0XCIsXCJwbGFuZXRcIixcInNwYWNlXCIsXCJuaWdodFwiLFwiZXZlbmluZ1wiLFwic2xlZXBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMxYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMUFcIn1dLFwidmVyc2lvblwiOjF9LFwiZmlyc3RfcXVhcnRlcl9tb29uX3dpdGhfZmFjZVwiOntcImlkXCI6XCJmaXJzdF9xdWFydGVyX21vb25fd2l0aF9mYWNlXCIsXCJuYW1lXCI6XCJGaXJzdCBRdWFydGVyIE1vb24gRmFjZVwiLFwia2V5d29yZHNcIjpbXCJ3aXRoXCIsXCJuYXR1cmVcIixcInR3aWxpZ2h0XCIsXCJwbGFuZXRcIixcInNwYWNlXCIsXCJuaWdodFwiLFwiZXZlbmluZ1wiLFwic2xlZXBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMxYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMUJcIn1dLFwidmVyc2lvblwiOjF9LFwibGFzdF9xdWFydGVyX21vb25fd2l0aF9mYWNlXCI6e1wiaWRcIjpcImxhc3RfcXVhcnRlcl9tb29uX3dpdGhfZmFjZVwiLFwibmFtZVwiOlwiTGFzdCBRdWFydGVyIE1vb24gRmFjZVwiLFwia2V5d29yZHNcIjpbXCJ3aXRoXCIsXCJuYXR1cmVcIixcInR3aWxpZ2h0XCIsXCJwbGFuZXRcIixcInNwYWNlXCIsXCJuaWdodFwiLFwiZXZlbmluZ1wiLFwic2xlZXBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMxY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMUNcIn1dLFwidmVyc2lvblwiOjF9LFwidGhlcm1vbWV0ZXJcIjp7XCJpZFwiOlwidGhlcm1vbWV0ZXJcIixcIm5hbWVcIjpcIlRoZXJtb21ldGVyXCIsXCJrZXl3b3Jkc1wiOltcIndlYXRoZXJcIixcInRlbXBlcmF0dXJlXCIsXCJob3RcIixcImNvbGRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMyMS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYyMVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzdW5ueVwiOntcImlkXCI6XCJzdW5ueVwiLFwibmFtZVwiOlwiU3VuXCIsXCJrZXl3b3Jkc1wiOltcInN1bm55XCIsXCJ3ZWF0aGVyXCIsXCJuYXR1cmVcIixcImJyaWdodG5lc3NcIixcInN1bW1lclwiLFwiYmVhY2hcIixcInNwcmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2MDAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2MDBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZnVsbF9tb29uX3dpdGhfZmFjZVwiOntcImlkXCI6XCJmdWxsX21vb25fd2l0aF9mYWNlXCIsXCJuYW1lXCI6XCJGdWxsIE1vb24gRmFjZVwiLFwia2V5d29yZHNcIjpbXCJ3aXRoXCIsXCJuYXR1cmVcIixcInR3aWxpZ2h0XCIsXCJwbGFuZXRcIixcInNwYWNlXCIsXCJuaWdodFwiLFwiZXZlbmluZ1wiLFwic2xlZXBcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMxZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMURcIn1dLFwidmVyc2lvblwiOjF9LFwic3VuX3dpdGhfZmFjZVwiOntcImlkXCI6XCJzdW5fd2l0aF9mYWNlXCIsXCJuYW1lXCI6XCJTdW4gd2l0aCBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcIm5hdHVyZVwiLFwibW9ybmluZ1wiLFwic2t5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMWVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjFFXCJ9XSxcInZlcnNpb25cIjoxfSxcInJpbmdlZF9wbGFuZXRcIjp7XCJpZFwiOlwicmluZ2VkX3BsYW5ldFwiLFwibmFtZVwiOlwiUmluZ2VkIFBsYW5ldFwiLFwia2V5d29yZHNcIjpbXCJvdXRlcnNwYWNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhOTBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTkwXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJzdGFyXCI6e1wiaWRcIjpcInN0YXJcIixcIm5hbWVcIjpcIlN0YXJcIixcImtleXdvcmRzXCI6W1wibmlnaHRcIixcInllbGxvd1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjJiNTBcIixcIm5hdGl2ZVwiOlwiXHUyQjUwXCJ9XSxcInZlcnNpb25cIjoxfSxcInN0YXIyXCI6e1wiaWRcIjpcInN0YXIyXCIsXCJuYW1lXCI6XCJHbG93aW5nIFN0YXJcIixcImtleXdvcmRzXCI6W1wic3RhcjJcIixcIm5pZ2h0XCIsXCJzcGFya2xlXCIsXCJhd2Vzb21lXCIsXCJnb29kXCIsXCJtYWdpY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzFmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYxRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzdGFyc1wiOntcImlkXCI6XCJzdGFyc1wiLFwibmFtZVwiOlwiU2hvb3RpbmcgU3RhclwiLFwia2V5d29yZHNcIjpbXCJzdGFyc1wiLFwibmlnaHRcIixcInBob3RvXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMjBcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjIwXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1pbGt5X3dheVwiOntcImlkXCI6XCJtaWxreV93YXlcIixcIm5hbWVcIjpcIk1pbGt5IFdheVwiLFwia2V5d29yZHNcIjpbXCJwaG90b1wiLFwic3BhY2VcIixcInN0YXJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMGNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjBDXCJ9XSxcInZlcnNpb25cIjoxfSxcImNsb3VkXCI6e1wiaWRcIjpcImNsb3VkXCIsXCJuYW1lXCI6XCJDbG91ZFwiLFwia2V5d29yZHNcIjpbXCJ3ZWF0aGVyXCIsXCJza3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjAxLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjAxXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBhcnRseV9zdW5ueVwiOntcImlkXCI6XCJwYXJ0bHlfc3VubnlcIixcIm5hbWVcIjpcIlN1biBCZWhpbmQgQ2xvdWRcIixcImtleXdvcmRzXCI6W1wicGFydGx5XCIsXCJzdW5ueVwiLFwid2VhdGhlclwiLFwibmF0dXJlXCIsXCJjbG91ZHlcIixcIm1vcm5pbmdcIixcImZhbGxcIixcInNwcmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2YzVcIixcIm5hdGl2ZVwiOlwiXHUyNkM1XCJ9XSxcInZlcnNpb25cIjoxfSxcInRodW5kZXJfY2xvdWRfYW5kX3JhaW5cIjp7XCJpZFwiOlwidGh1bmRlcl9jbG91ZF9hbmRfcmFpblwiLFwibmFtZVwiOlwiQ2xvdWQgd2l0aCBMaWdodG5pbmcgYW5kIFJhaW5cIixcImtleXdvcmRzXCI6W1widGh1bmRlclwiLFwid2VhdGhlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2YzgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2QzhcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwibW9zdGx5X3N1bm55XCI6e1wiaWRcIjpcIm1vc3RseV9zdW5ueVwiLFwibmFtZVwiOlwiU3VuIEJlaGluZCBTbWFsbCBDbG91ZFwiLFwia2V5d29yZHNcIjpbXCJtb3N0bHlcIixcInN1bm55XCIsXCJ3ZWF0aGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMjQtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMjRcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYmFyZWx5X3N1bm55XCI6e1wiaWRcIjpcImJhcmVseV9zdW5ueVwiLFwibmFtZVwiOlwiU3VuIEJlaGluZCBMYXJnZSBDbG91ZFwiLFwia2V5d29yZHNcIjpbXCJiYXJlbHlcIixcInN1bm55XCIsXCJ3ZWF0aGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMjUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMjVcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwicGFydGx5X3N1bm55X3JhaW5cIjp7XCJpZFwiOlwicGFydGx5X3N1bm55X3JhaW5cIixcIm5hbWVcIjpcIlN1biBCZWhpbmQgUmFpbiBDbG91ZFwiLFwia2V5d29yZHNcIjpbXCJwYXJ0bHlcIixcInN1bm55XCIsXCJ3ZWF0aGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMjYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMjZcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwicmFpbl9jbG91ZFwiOntcImlkXCI6XCJyYWluX2Nsb3VkXCIsXCJuYW1lXCI6XCJDbG91ZCB3aXRoIFJhaW5cIixcImtleXdvcmRzXCI6W1wid2VhdGhlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzI3LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjI3XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNub3dfY2xvdWRcIjp7XCJpZFwiOlwic25vd19jbG91ZFwiLFwibmFtZVwiOlwiQ2xvdWQgd2l0aCBTbm93XCIsXCJrZXl3b3Jkc1wiOltcIndlYXRoZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMyOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYyOFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsaWdodG5pbmdcIjp7XCJpZFwiOlwibGlnaHRuaW5nXCIsXCJuYW1lXCI6XCJDbG91ZCB3aXRoIExpZ2h0bmluZ1wiLFwia2V5d29yZHNcIjpbXCJ3ZWF0aGVyXCIsXCJ0aHVuZGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMjktZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMjlcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwidG9ybmFkb1wiOntcImlkXCI6XCJ0b3JuYWRvXCIsXCJuYW1lXCI6XCJUb3JuYWRvXCIsXCJrZXl3b3Jkc1wiOltcImNsb3VkXCIsXCJ3ZWF0aGVyXCIsXCJjeWNsb25lXCIsXCJ0d2lzdGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMmEtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGMkFcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZm9nXCI6e1wiaWRcIjpcImZvZ1wiLFwibmFtZVwiOlwiRm9nXCIsXCJrZXl3b3Jkc1wiOltcIndlYXRoZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjMyYi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYyQlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3aW5kX2Jsb3dpbmdfZmFjZVwiOntcImlkXCI6XCJ3aW5kX2Jsb3dpbmdfZmFjZVwiLFwibmFtZVwiOlwiV2luZCBGYWNlXCIsXCJrZXl3b3Jkc1wiOltcImJsb3dpbmdcIixcImd1c3RcIixcImFpclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzJjLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjJDXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImN5Y2xvbmVcIjp7XCJpZFwiOlwiY3ljbG9uZVwiLFwibmFtZVwiOlwiQ3ljbG9uZVwiLFwia2V5d29yZHNcIjpbXCJ3ZWF0aGVyXCIsXCJzd2lybFwiLFwiYmx1ZVwiLFwiY2xvdWRcIixcInZvcnRleFwiLFwic3BpcmFsXCIsXCJ3aGlybHBvb2xcIixcInNwaW5cIixcInRvcm5hZG9cIixcImh1cnJpY2FuZVwiLFwidHlwaG9vblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzAwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYwMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyYWluYm93XCI6e1wiaWRcIjpcInJhaW5ib3dcIixcIm5hbWVcIjpcIlJhaW5ib3dcIixcImtleXdvcmRzXCI6W1wibmF0dXJlXCIsXCJoYXBweVwiLFwidW5pY29yblwiLFwiZmFjZVwiLFwicGhvdG9cIixcInNreVwiLFwic3ByaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMDhcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjA4XCJ9XSxcInZlcnNpb25cIjoxfSxcImNsb3NlZF91bWJyZWxsYVwiOntcImlkXCI6XCJjbG9zZWRfdW1icmVsbGFcIixcIm5hbWVcIjpcIkNsb3NlZCBVbWJyZWxsYVwiLFwia2V5d29yZHNcIjpbXCJ3ZWF0aGVyXCIsXCJyYWluXCIsXCJkcml6emxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzMDJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjAyXCJ9XSxcInZlcnNpb25cIjoxfSxcInVtYnJlbGxhXCI6e1wiaWRcIjpcInVtYnJlbGxhXCIsXCJuYW1lXCI6XCJVbWJyZWxsYVwiLFwia2V5d29yZHNcIjpbXCJ3ZWF0aGVyXCIsXCJzcHJpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjAyLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjAyXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInVtYnJlbGxhX3dpdGhfcmFpbl9kcm9wc1wiOntcImlkXCI6XCJ1bWJyZWxsYV93aXRoX3JhaW5fZHJvcHNcIixcIm5hbWVcIjpcIlVtYnJlbGxhIHdpdGggUmFpbiBEcm9wc1wiLFwia2V5d29yZHNcIjpbXCJyYWlueVwiLFwid2VhdGhlclwiLFwic3ByaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjYxNFwiLFwibmF0aXZlXCI6XCJcdTI2MTRcIn1dLFwidmVyc2lvblwiOjF9LFwidW1icmVsbGFfb25fZ3JvdW5kXCI6e1wiaWRcIjpcInVtYnJlbGxhX29uX2dyb3VuZFwiLFwibmFtZVwiOlwiVW1icmVsbGEgb24gR3JvdW5kXCIsXCJrZXl3b3Jkc1wiOltcIndlYXRoZXJcIixcInN1bW1lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2ZjEtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2RjFcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiemFwXCI6e1wiaWRcIjpcInphcFwiLFwibmFtZVwiOlwiSGlnaCBWb2x0YWdlXCIsXCJrZXl3b3Jkc1wiOltcInphcFwiLFwidGh1bmRlclwiLFwid2VhdGhlclwiLFwibGlnaHRuaW5nXCIsXCJib2x0XCIsXCJmYXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZhMVwiLFwibmF0aXZlXCI6XCJcdTI2QTFcIn1dLFwidmVyc2lvblwiOjF9LFwic25vd2ZsYWtlXCI6e1wiaWRcIjpcInNub3dmbGFrZVwiLFwibmFtZVwiOlwiU25vd2ZsYWtlXCIsXCJrZXl3b3Jkc1wiOltcIndpbnRlclwiLFwic2Vhc29uXCIsXCJjb2xkXCIsXCJ3ZWF0aGVyXCIsXCJjaHJpc3RtYXNcIixcInhtYXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzQ0LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNzQ0XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNub3dtYW5cIjp7XCJpZFwiOlwic25vd21hblwiLFwibmFtZVwiOlwiU25vd21hblwiLFwia2V5d29yZHNcIjpbXCJ3aW50ZXJcIixcInNlYXNvblwiLFwiY29sZFwiLFwid2VhdGhlclwiLFwiY2hyaXN0bWFzXCIsXCJ4bWFzXCIsXCJmcm96ZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjAzLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjAzXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNub3dtYW5fd2l0aG91dF9zbm93XCI6e1wiaWRcIjpcInNub3dtYW5fd2l0aG91dF9zbm93XCIsXCJuYW1lXCI6XCJTbm93bWFuIFdpdGhvdXQgU25vd1wiLFwia2V5d29yZHNcIjpbXCJ3aW50ZXJcIixcInNlYXNvblwiLFwiY29sZFwiLFwid2VhdGhlclwiLFwiY2hyaXN0bWFzXCIsXCJ4bWFzXCIsXCJmcm96ZW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmM0XCIsXCJuYXRpdmVcIjpcIlx1MjZDNFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjb21ldFwiOntcImlkXCI6XCJjb21ldFwiLFwibmFtZVwiOlwiQ29tZXRcIixcImtleXdvcmRzXCI6W1wic3BhY2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjA0LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjA0XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImZpcmVcIjp7XCJpZFwiOlwiZmlyZVwiLFwibmFtZVwiOlwiRmlyZVwiLFwia2V5d29yZHNcIjpbXCJob3RcIixcImNvb2tcIixcImZsYW1lXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MjVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDI1XCJ9XSxcInZlcnNpb25cIjoxfSxcImRyb3BsZXRcIjp7XCJpZFwiOlwiZHJvcGxldFwiLFwibmFtZVwiOlwiRHJvcGxldFwiLFwia2V5d29yZHNcIjpbXCJ3YXRlclwiLFwiZHJpcFwiLFwiZmF1Y2V0XCIsXCJzcHJpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRhN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQTdcIn1dLFwidmVyc2lvblwiOjF9LFwib2NlYW5cIjp7XCJpZFwiOlwib2NlYW5cIixcIm5hbWVcIjpcIldhdGVyIFdhdmVcIixcImtleXdvcmRzXCI6W1wib2NlYW5cIixcInNlYVwiLFwibmF0dXJlXCIsXCJ0c3VuYW1pXCIsXCJkaXNhc3RlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzBhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REYwQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJqYWNrX29fbGFudGVyblwiOntcImlkXCI6XCJqYWNrX29fbGFudGVyblwiLFwibmFtZVwiOlwiSmFjay1PLUxhbnRlcm5cIixcImtleXdvcmRzXCI6W1wiamFja1wiLFwib1wiLFwibGFudGVyblwiLFwiaGFsbG93ZWVuXCIsXCJsaWdodFwiLFwicHVtcGtpblwiLFwiY3JlZXB5XCIsXCJmYWxsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzODNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjgzXCJ9XSxcInZlcnNpb25cIjoxfSxcImNocmlzdG1hc190cmVlXCI6e1wiaWRcIjpcImNocmlzdG1hc190cmVlXCIsXCJuYW1lXCI6XCJDaHJpc3RtYXMgVHJlZVwiLFwia2V5d29yZHNcIjpbXCJmZXN0aXZhbFwiLFwidmFjYXRpb25cIixcImRlY2VtYmVyXCIsXCJ4bWFzXCIsXCJjZWxlYnJhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzg0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY4NFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmaXJld29ya3NcIjp7XCJpZFwiOlwiZmlyZXdvcmtzXCIsXCJuYW1lXCI6XCJGaXJld29ya3NcIixcImtleXdvcmRzXCI6W1wicGhvdG9cIixcImZlc3RpdmFsXCIsXCJjYXJuaXZhbFwiLFwiY29uZ3JhdHVsYXRpb25zXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzODZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjg2XCJ9XSxcInZlcnNpb25cIjoxfSxcInNwYXJrbGVyXCI6e1wiaWRcIjpcInNwYXJrbGVyXCIsXCJuYW1lXCI6XCJTcGFya2xlclwiLFwia2V5d29yZHNcIjpbXCJzdGFyc1wiLFwibmlnaHRcIixcInNoaW5lXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzODdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjg3XCJ9XSxcInZlcnNpb25cIjoxfSxcImZpcmVjcmFja2VyXCI6e1wiaWRcIjpcImZpcmVjcmFja2VyXCIsXCJuYW1lXCI6XCJGaXJlY3JhY2tlclwiLFwia2V5d29yZHNcIjpbXCJkeW5hbWl0ZVwiLFwiYm9vbVwiLFwiZXhwbG9kZVwiLFwiZXhwbG9zaW9uXCIsXCJleHBsb3NpdmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjllOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERThcIn1dLFwidmVyc2lvblwiOjExfSxcInNwYXJrbGVzXCI6e1wiaWRcIjpcInNwYXJrbGVzXCIsXCJuYW1lXCI6XCJTcGFya2xlc1wiLFwia2V5d29yZHNcIjpbXCJzdGFyc1wiLFwic2hpbmVcIixcInNoaW55XCIsXCJjb29sXCIsXCJhd2Vzb21lXCIsXCJnb29kXCIsXCJtYWdpY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3MjhcIixcIm5hdGl2ZVwiOlwiXHUyNzI4XCJ9XSxcInZlcnNpb25cIjoxfSxcImJhbGxvb25cIjp7XCJpZFwiOlwiYmFsbG9vblwiLFwibmFtZVwiOlwiQmFsbG9vblwiLFwia2V5d29yZHNcIjpbXCJwYXJ0eVwiLFwiY2VsZWJyYXRpb25cIixcImJpcnRoZGF5XCIsXCJjaXJjdXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM4OFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGODhcIn1dLFwidmVyc2lvblwiOjF9LFwidGFkYVwiOntcImlkXCI6XCJ0YWRhXCIsXCJuYW1lXCI6XCJQYXJ0eSBQb3BwZXJcIixcImtleXdvcmRzXCI6W1widGFkYVwiLFwiY29uZ3JhdHVsYXRpb25zXCIsXCJiaXJ0aGRheVwiLFwibWFnaWNcIixcImNpcmN1c1wiLFwiY2VsZWJyYXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM4OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGODlcIn1dLFwidmVyc2lvblwiOjF9LFwiY29uZmV0dGlfYmFsbFwiOntcImlkXCI6XCJjb25mZXR0aV9iYWxsXCIsXCJuYW1lXCI6XCJDb25mZXR0aSBCYWxsXCIsXCJrZXl3b3Jkc1wiOltcImZlc3RpdmFsXCIsXCJwYXJ0eVwiLFwiYmlydGhkYXlcIixcImNpcmN1c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzhhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY4QVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0YW5hYmF0YV90cmVlXCI6e1wiaWRcIjpcInRhbmFiYXRhX3RyZWVcIixcIm5hbWVcIjpcIlRhbmFiYXRhIFRyZWVcIixcImtleXdvcmRzXCI6W1wicGxhbnRcIixcIm5hdHVyZVwiLFwiYnJhbmNoXCIsXCJzdW1tZXJcIixcImJhbWJvb1wiLFwid2lzaFwiLFwic3RhclwiLFwiZmVzdGl2YWxcIixcInRhbnpha3VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM4YlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOEJcIn1dLFwidmVyc2lvblwiOjF9LFwiYmFtYm9vXCI6e1wiaWRcIjpcImJhbWJvb1wiLFwibmFtZVwiOlwiUGluZSBEZWNvcmF0aW9uXCIsXCJrZXl3b3Jkc1wiOltcImJhbWJvb1wiLFwiamFwYW5lc2VcIixcInBsYW50XCIsXCJuYXR1cmVcIixcInZlZ2V0YWJsZVwiLFwicGFuZGFcIixcIm5ld1wiLFwieWVhcnNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM4ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOERcIn1dLFwidmVyc2lvblwiOjF9LFwiZG9sbHNcIjp7XCJpZFwiOlwiZG9sbHNcIixcIm5hbWVcIjpcIkphcGFuZXNlIERvbGxzXCIsXCJrZXl3b3Jkc1wiOltcInRveVwiLFwia2ltb25vXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzOGVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjhFXCJ9XSxcInZlcnNpb25cIjoxfSxcImZsYWdzXCI6e1wiaWRcIjpcImZsYWdzXCIsXCJuYW1lXCI6XCJDYXJwIFN0cmVhbWVyXCIsXCJrZXl3b3Jkc1wiOltcImZsYWdzXCIsXCJmaXNoXCIsXCJqYXBhbmVzZVwiLFwia29pbm9ib3JpXCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM4ZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOEZcIn1dLFwidmVyc2lvblwiOjF9LFwid2luZF9jaGltZVwiOntcImlkXCI6XCJ3aW5kX2NoaW1lXCIsXCJuYW1lXCI6XCJXaW5kIENoaW1lXCIsXCJrZXl3b3Jkc1wiOltcIm5hdHVyZVwiLFwiZGluZ1wiLFwic3ByaW5nXCIsXCJiZWxsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzOTBcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERjkwXCJ9XSxcInZlcnNpb25cIjoxfSxcInJpY2Vfc2NlbmVcIjp7XCJpZFwiOlwicmljZV9zY2VuZVwiLFwibmFtZVwiOlwiTW9vbiBWaWV3aW5nIENlcmVtb255XCIsXCJrZXl3b3Jkc1wiOltcInJpY2VcIixcInNjZW5lXCIsXCJwaG90b1wiLFwiamFwYW5cIixcImFzaWFcIixcInRzdWtpbWlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM5MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOTFcIn1dLFwidmVyc2lvblwiOjF9LFwicmVkX2VudmVsb3BlXCI6e1wiaWRcIjpcInJlZF9lbnZlbG9wZVwiLFwibmFtZVwiOlwiUmVkIEVudmVsb3BlXCIsXCJrZXl3b3Jkc1wiOltcImdpZnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjllN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERTdcIn1dLFwidmVyc2lvblwiOjExfSxcInJpYmJvblwiOntcImlkXCI6XCJyaWJib25cIixcIm5hbWVcIjpcIlJpYmJvblwiLFwia2V5d29yZHNcIjpbXCJkZWNvcmF0aW9uXCIsXCJwaW5rXCIsXCJnaXJsXCIsXCJib3d0aWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGODBcIn1dLFwidmVyc2lvblwiOjF9LFwiZ2lmdFwiOntcImlkXCI6XCJnaWZ0XCIsXCJuYW1lXCI6XCJXcmFwcGVkIEdpZnRcIixcImtleXdvcmRzXCI6W1wicHJlc2VudFwiLFwiYmlydGhkYXlcIixcImNocmlzdG1hc1wiLFwieG1hc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzgxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY4MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyZW1pbmRlcl9yaWJib25cIjp7XCJpZFwiOlwicmVtaW5kZXJfcmliYm9uXCIsXCJuYW1lXCI6XCJSZW1pbmRlciBSaWJib25cIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJjYXVzZVwiLFwic3VwcG9ydFwiLFwiYXdhcmVuZXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzOTctZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOTdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYWRtaXNzaW9uX3RpY2tldHNcIjp7XCJpZFwiOlwiYWRtaXNzaW9uX3RpY2tldHNcIixcIm5hbWVcIjpcIkFkbWlzc2lvbiBUaWNrZXRzXCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiLFwiY29uY2VydFwiLFwiZW50cmFuY2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM5Zi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY5Rlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0aWNrZXRcIjp7XCJpZFwiOlwidGlja2V0XCIsXCJuYW1lXCI6XCJUaWNrZXRcIixcImtleXdvcmRzXCI6W1wiZXZlbnRcIixcImNvbmNlcnRcIixcInBhc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNhYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQUJcIn1dLFwidmVyc2lvblwiOjF9LFwibWVkYWxcIjp7XCJpZFwiOlwibWVkYWxcIixcIm5hbWVcIjpcIk1pbGl0YXJ5IE1lZGFsXCIsXCJrZXl3b3Jkc1wiOltcImF3YXJkXCIsXCJ3aW5uaW5nXCIsXCJhcm15XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzOTYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOTZcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwidHJvcGh5XCI6e1wiaWRcIjpcInRyb3BoeVwiLFwibmFtZVwiOlwiVHJvcGh5XCIsXCJrZXl3b3Jkc1wiOltcIndpblwiLFwiYXdhcmRcIixcImNvbnRlc3RcIixcInBsYWNlXCIsXCJmdHdcIixcImNlcmVtb255XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYzZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM2XCJ9XSxcInZlcnNpb25cIjoxfSxcInNwb3J0c19tZWRhbFwiOntcImlkXCI6XCJzcG9ydHNfbWVkYWxcIixcIm5hbWVcIjpcIlNwb3J0cyBNZWRhbFwiLFwia2V5d29yZHNcIjpbXCJhd2FyZFwiLFwid2lubmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2M1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmaXJzdF9wbGFjZV9tZWRhbFwiOntcImlkXCI6XCJmaXJzdF9wbGFjZV9tZWRhbFwiLFwibmFtZVwiOlwiMXN0IFBsYWNlIE1lZGFsXCIsXCJrZXl3b3Jkc1wiOltcImZpcnN0XCIsXCJhd2FyZFwiLFwid2lubmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTQ3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ0N1wifV0sXCJ2ZXJzaW9uXCI6M30sXCJzZWNvbmRfcGxhY2VfbWVkYWxcIjp7XCJpZFwiOlwic2Vjb25kX3BsYWNlX21lZGFsXCIsXCJuYW1lXCI6XCIybmQgUGxhY2UgTWVkYWxcIixcImtleXdvcmRzXCI6W1wic2Vjb25kXCIsXCJhd2FyZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTQ4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ0OFwifV0sXCJ2ZXJzaW9uXCI6M30sXCJ0aGlyZF9wbGFjZV9tZWRhbFwiOntcImlkXCI6XCJ0aGlyZF9wbGFjZV9tZWRhbFwiLFwibmFtZVwiOlwiM3JkIFBsYWNlIE1lZGFsXCIsXCJrZXl3b3Jkc1wiOltcInRoaXJkXCIsXCJhd2FyZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTQ5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ0OVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJzb2NjZXJcIjp7XCJpZFwiOlwic29jY2VyXCIsXCJuYW1lXCI6XCJTb2NjZXIgQmFsbFwiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIixcImZvb3RiYWxsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZiZFwiLFwibmF0aXZlXCI6XCJcdTI2QkRcIn1dLFwidmVyc2lvblwiOjF9LFwiYmFzZWJhbGxcIjp7XCJpZFwiOlwiYmFzZWJhbGxcIixcIm5hbWVcIjpcIkJhc2ViYWxsXCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiLFwiYmFsbHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmJlXCIsXCJuYXRpdmVcIjpcIlx1MjZCRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzb2Z0YmFsbFwiOntcImlkXCI6XCJzb2Z0YmFsbFwiLFwibmFtZVwiOlwiU29mdGJhbGxcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJiYWxsc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTRlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ0RVwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiYmFza2V0YmFsbFwiOntcImlkXCI6XCJiYXNrZXRiYWxsXCIsXCJuYW1lXCI6XCJCYXNrZXRiYWxsXCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiLFwiYmFsbHNcIixcIk5CQVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2MwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZDMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ2b2xsZXliYWxsXCI6e1wiaWRcIjpcInZvbGxleWJhbGxcIixcIm5hbWVcIjpcIlZvbGxleWJhbGxcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJiYWxsc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2QwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZEMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmb290YmFsbFwiOntcImlkXCI6XCJmb290YmFsbFwiLFwibmFtZVwiOlwiQW1lcmljYW4gRm9vdGJhbGxcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJiYWxsc1wiLFwiTkZMXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYzhcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkM4XCJ9XSxcInZlcnNpb25cIjoxfSxcInJ1Z2J5X2Zvb3RiYWxsXCI6e1wiaWRcIjpcInJ1Z2J5X2Zvb3RiYWxsXCIsXCJuYW1lXCI6XCJSdWdieSBGb290YmFsbFwiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIixcInRlYW1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNjOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQzlcIn1dLFwidmVyc2lvblwiOjF9LFwidGVubmlzXCI6e1wiaWRcIjpcInRlbm5pc1wiLFwibmFtZVwiOlwiVGVubmlzXCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiLFwiYmFsbHNcIixcImdyZWVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYmVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkJFXCJ9XSxcInZlcnNpb25cIjoxfSxcImZseWluZ19kaXNjXCI6e1wiaWRcIjpcImZseWluZ19kaXNjXCIsXCJuYW1lXCI6XCJGbHlpbmcgRGlzY1wiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIixcImZyaXNiZWVcIixcInVsdGltYXRlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NGZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDRGXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJib3dsaW5nXCI6e1wiaWRcIjpcImJvd2xpbmdcIixcIm5hbWVcIjpcIkJvd2xpbmdcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJmdW5cIixcInBsYXlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNiM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQjNcIn1dLFwidmVyc2lvblwiOjF9LFwiY3JpY2tldF9iYXRfYW5kX2JhbGxcIjp7XCJpZFwiOlwiY3JpY2tldF9iYXRfYW5kX2JhbGxcIixcIm5hbWVcIjpcIkNyaWNrZXQgR2FtZVwiLFwia2V5d29yZHNcIjpbXCJiYXRcIixcImFuZFwiLFwiYmFsbFwiLFwic3BvcnRzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzY2ZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkNGXCJ9XSxcInZlcnNpb25cIjoxfSxcImZpZWxkX2hvY2tleV9zdGlja19hbmRfYmFsbFwiOntcImlkXCI6XCJmaWVsZF9ob2NrZXlfc3RpY2tfYW5kX2JhbGxcIixcIm5hbWVcIjpcIkZpZWxkIEhvY2tleVwiLFwia2V5d29yZHNcIjpbXCJzdGlja1wiLFwiYW5kXCIsXCJiYWxsXCIsXCJzcG9ydHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNkMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRDFcIn1dLFwidmVyc2lvblwiOjF9LFwiaWNlX2hvY2tleV9zdGlja19hbmRfcHVja1wiOntcImlkXCI6XCJpY2VfaG9ja2V5X3N0aWNrX2FuZF9wdWNrXCIsXCJuYW1lXCI6XCJJY2UgSG9ja2V5XCIsXCJrZXl3b3Jkc1wiOltcInN0aWNrXCIsXCJhbmRcIixcInB1Y2tcIixcInNwb3J0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2QyXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZEMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsYWNyb3NzZVwiOntcImlkXCI6XCJsYWNyb3NzZVwiLFwibmFtZVwiOlwiTGFjcm9zc2VcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJiYWxsXCIsXCJzdGlja1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTRkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ0RFwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwidGFibGVfdGVubmlzX3BhZGRsZV9hbmRfYmFsbFwiOntcImlkXCI6XCJ0YWJsZV90ZW5uaXNfcGFkZGxlX2FuZF9iYWxsXCIsXCJuYW1lXCI6XCJQaW5nIFBvbmdcIixcImtleXdvcmRzXCI6W1widGFibGVcIixcInRlbm5pc1wiLFwicGFkZGxlXCIsXCJhbmRcIixcImJhbGxcIixcInNwb3J0c1wiLFwicGluZ3BvbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNkM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRDNcIn1dLFwidmVyc2lvblwiOjF9LFwiYmFkbWludG9uX3JhY3F1ZXRfYW5kX3NodXR0bGVjb2NrXCI6e1wiaWRcIjpcImJhZG1pbnRvbl9yYWNxdWV0X2FuZF9zaHV0dGxlY29ja1wiLFwibmFtZVwiOlwiQmFkbWludG9uXCIsXCJrZXl3b3Jkc1wiOltcInJhY3F1ZXRcIixcImFuZFwiLFwic2h1dHRsZWNvY2tcIixcInNwb3J0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2Y4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZGOFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJib3hpbmdfZ2xvdmVcIjp7XCJpZFwiOlwiYm94aW5nX2dsb3ZlXCIsXCJuYW1lXCI6XCJCb3hpbmcgR2xvdmVcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCIsXCJmaWdodGluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTRhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ0QVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJtYXJ0aWFsX2FydHNfdW5pZm9ybVwiOntcImlkXCI6XCJtYXJ0aWFsX2FydHNfdW5pZm9ybVwiLFwibmFtZVwiOlwiTWFydGlhbCBBcnRzIFVuaWZvcm1cIixcImtleXdvcmRzXCI6W1wianVkb1wiLFwia2FyYXRlXCIsXCJ0YWVrd29uZG9cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk0YlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENEJcIn1dLFwidmVyc2lvblwiOjN9LFwiZ29hbF9uZXRcIjp7XCJpZFwiOlwiZ29hbF9uZXRcIixcIm5hbWVcIjpcIkdvYWwgTmV0XCIsXCJrZXl3b3Jkc1wiOltcInNwb3J0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTQ1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ0NVwifV0sXCJ2ZXJzaW9uXCI6M30sXCJnb2xmXCI6e1wiaWRcIjpcImdvbGZcIixcIm5hbWVcIjpcIkZsYWcgaW4gSG9sZVwiLFwia2V5d29yZHNcIjpbXCJnb2xmXCIsXCJzcG9ydHNcIixcImJ1c2luZXNzXCIsXCJzdW1tZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmYzXCIsXCJuYXRpdmVcIjpcIlx1MjZGM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJpY2Vfc2thdGVcIjp7XCJpZFwiOlwiaWNlX3NrYXRlXCIsXCJuYW1lXCI6XCJJY2UgU2thdGVcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZmOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjZGOFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmaXNoaW5nX3BvbGVfYW5kX2Zpc2hcIjp7XCJpZFwiOlwiZmlzaGluZ19wb2xlX2FuZF9maXNoXCIsXCJuYW1lXCI6XCJGaXNoaW5nIFBvbGVcIixcImtleXdvcmRzXCI6W1wiYW5kXCIsXCJmaXNoXCIsXCJmb29kXCIsXCJob2JieVwiLFwic3VtbWVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYTNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkEzXCJ9XSxcInZlcnNpb25cIjoxfSxcImRpdmluZ19tYXNrXCI6e1wiaWRcIjpcImRpdmluZ19tYXNrXCIsXCJuYW1lXCI6XCJEaXZpbmcgTWFza1wiLFwia2V5d29yZHNcIjpbXCJzcG9ydFwiLFwib2NlYW5cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjkzZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREM0ZcIn1dLFwidmVyc2lvblwiOjEyfSxcInJ1bm5pbmdfc2hpcnRfd2l0aF9zYXNoXCI6e1wiaWRcIjpcInJ1bm5pbmdfc2hpcnRfd2l0aF9zYXNoXCIsXCJuYW1lXCI6XCJSdW5uaW5nIFNoaXJ0XCIsXCJrZXl3b3Jkc1wiOltcIndpdGhcIixcInNhc2hcIixcInBsYXlcIixcInBhZ2VhbnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNiZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQkRcIn1dLFwidmVyc2lvblwiOjF9LFwic2tpXCI6e1wiaWRcIjpcInNraVwiLFwibmFtZVwiOlwiU2tpc1wiLFwia2V5d29yZHNcIjpbXCJza2lcIixcInNwb3J0c1wiLFwid2ludGVyXCIsXCJjb2xkXCIsXCJzbm93XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkJGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNsZWRcIjp7XCJpZFwiOlwic2xlZFwiLFwibmFtZVwiOlwiU2xlZFwiLFwia2V5d29yZHNcIjpbXCJzbGVpZ2hcIixcImx1Z2VcIixcInRvYm9nZ2FuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUY3XCJ9XSxcInZlcnNpb25cIjo1fSxcImN1cmxpbmdfc3RvbmVcIjp7XCJpZFwiOlwiY3VybGluZ19zdG9uZVwiLFwibmFtZVwiOlwiQ3VybGluZyBTdG9uZVwiLFwia2V5d29yZHNcIjpbXCJzcG9ydHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk0Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURENENcIn1dLFwidmVyc2lvblwiOjV9LFwiZGFydFwiOntcImlkXCI6XCJkYXJ0XCIsXCJuYW1lXCI6XCJCdWxsc2V5ZVwiLFwia2V5d29yZHNcIjpbXCJkYXJ0XCIsXCJkaXJlY3RcIixcImhpdFwiLFwiZ2FtZVwiLFwicGxheVwiLFwiYmFyXCIsXCJ0YXJnZXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNhZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQUZcIn1dLFwidmVyc2lvblwiOjF9LFwieW8teW9cIjp7XCJpZFwiOlwieW8teW9cIixcIm5hbWVcIjpcIllvLVlvXCIsXCJrZXl3b3Jkc1wiOltcInlvXCIsXCJ0b3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE4MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFODBcIn1dLFwidmVyc2lvblwiOjEyfSxcImtpdGVcIjp7XCJpZFwiOlwia2l0ZVwiLFwibmFtZVwiOlwiS2l0ZVwiLFwia2V5d29yZHNcIjpbXCJ3aW5kXCIsXCJmbHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE4MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFODFcIn1dLFwidmVyc2lvblwiOjEyfSxcImd1blwiOntcImlkXCI6XCJndW5cIixcIm5hbWVcIjpcIlBpc3RvbFwiLFwia2V5d29yZHNcIjpbXCJndW5cIixcInZpb2xlbmNlXCIsXCJ3ZWFwb25cIixcInJldm9sdmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDJCXCJ9XSxcInZlcnNpb25cIjoxfSxcIjhiYWxsXCI6e1wiaWRcIjpcIjhiYWxsXCIsXCJuYW1lXCI6XCJCaWxsaWFyZHNcIixcImtleXdvcmRzXCI6W1wiOGJhbGxcIixcInBvb2xcIixcIjhcIixcImJhbGxcIixcImhvYmJ5XCIsXCJnYW1lXCIsXCJsdWNrXCIsXCJtYWdpY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2IxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZCMVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjcnlzdGFsX2JhbGxcIjp7XCJpZFwiOlwiY3J5c3RhbF9iYWxsXCIsXCJuYW1lXCI6XCJDcnlzdGFsIEJhbGxcIixcImtleXdvcmRzXCI6W1wiZGlzY29cIixcInBhcnR5XCIsXCJtYWdpY1wiLFwiY2lyY3VzXCIsXCJmb3J0dW5lXCIsXCJ0ZWxsZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUyZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMkVcIn1dLFwidmVyc2lvblwiOjF9LFwibWFnaWNfd2FuZFwiOntcImlkXCI6XCJtYWdpY193YW5kXCIsXCJuYW1lXCI6XCJNYWdpYyBXYW5kXCIsXCJrZXl3b3Jkc1wiOltcInN1cGVybmF0dXJlXCIsXCJwb3dlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTg0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU4NFwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwidmlkZW9fZ2FtZVwiOntcImlkXCI6XCJ2aWRlb19nYW1lXCIsXCJuYW1lXCI6XCJWaWRlbyBHYW1lXCIsXCJrZXl3b3Jkc1wiOltcInBsYXlcIixcImNvbnNvbGVcIixcIlBTNFwiLFwiY29udHJvbGxlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2FlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZBRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJqb3lzdGlja1wiOntcImlkXCI6XCJqb3lzdGlja1wiLFwibmFtZVwiOlwiSm95c3RpY2tcIixcImtleXdvcmRzXCI6W1wiZ2FtZVwiLFwicGxheVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTc5LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc5XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNsb3RfbWFjaGluZVwiOntcImlkXCI6XCJzbG90X21hY2hpbmVcIixcIm5hbWVcIjpcIlNsb3QgTWFjaGluZVwiLFwia2V5d29yZHNcIjpbXCJiZXRcIixcImdhbWJsZVwiLFwidmVnYXNcIixcImZydWl0XCIsXCJsdWNrXCIsXCJjYXNpbm9cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNiMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQjBcIn1dLFwidmVyc2lvblwiOjF9LFwiZ2FtZV9kaWVcIjp7XCJpZFwiOlwiZ2FtZV9kaWVcIixcIm5hbWVcIjpcIkdhbWUgRGllXCIsXCJrZXl3b3Jkc1wiOltcImRpY2VcIixcInJhbmRvbVwiLFwidGFibGV0b3BcIixcInBsYXlcIixcImx1Y2tcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNiMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQjJcIn1dLFwidmVyc2lvblwiOjF9LFwiamlnc2F3XCI6e1wiaWRcIjpcImppZ3Nhd1wiLFwibmFtZVwiOlwiUHV6emxlIFBpZWNlXCIsXCJrZXl3b3Jkc1wiOltcImppZ3Nhd1wiLFwiaW50ZXJsb2NraW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZTlcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREU5XCJ9XSxcInZlcnNpb25cIjoxMX0sXCJ0ZWRkeV9iZWFyXCI6e1wiaWRcIjpcInRlZGR5X2JlYXJcIixcIm5hbWVcIjpcIlRlZGR5IEJlYXJcIixcImtleXdvcmRzXCI6W1wicGx1c2hcIixcInN0dWZmZWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlmOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERjhcIn1dLFwidmVyc2lvblwiOjExfSxcInBpbmF0YVwiOntcImlkXCI6XCJwaW5hdGFcIixcIm5hbWVcIjpcIlBpbmF0YVwiLFwia2V5d29yZHNcIjpbXCJtZXhpY29cIixcImNhbmR5XCIsXCJjZWxlYnJhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTg1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU4NVwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwibWlycm9yX2JhbGxcIjp7XCJpZFwiOlwibWlycm9yX2JhbGxcIixcIm5hbWVcIjpcIk1pcnJvciBCYWxsXCIsXCJrZXl3b3Jkc1wiOltcImRpc2NvXCIsXCJkYW5jZVwiLFwicGFydHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFhOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQTlcIn1dLFwidmVyc2lvblwiOjE0fSxcIm5lc3RpbmdfZG9sbHNcIjp7XCJpZFwiOlwibmVzdGluZ19kb2xsc1wiLFwibmFtZVwiOlwiTmVzdGluZyBEb2xsc1wiLFwia2V5d29yZHNcIjpbXCJtYXRyeW9zaGthXCIsXCJ0b3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE4NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFODZcIn1dLFwidmVyc2lvblwiOjEzfSxcInNwYWRlc1wiOntcImlkXCI6XCJzcGFkZXNcIixcIm5hbWVcIjpcIlNwYWRlIFN1aXRcIixcImtleXdvcmRzXCI6W1wic3BhZGVzXCIsXCJwb2tlclwiLFwiY2FyZHNcIixcInN1aXRzXCIsXCJtYWdpY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2NjAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2NjBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiaGVhcnRzXCI6e1wiaWRcIjpcImhlYXJ0c1wiLFwibmFtZVwiOlwiSGVhcnQgU3VpdFwiLFwia2V5d29yZHNcIjpbXCJoZWFydHNcIixcInBva2VyXCIsXCJjYXJkc1wiLFwibWFnaWNcIixcInN1aXRzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY2NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjY2NVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkaWFtb25kc1wiOntcImlkXCI6XCJkaWFtb25kc1wiLFwibmFtZVwiOlwiRGlhbW9uZCBTdWl0XCIsXCJrZXl3b3Jkc1wiOltcImRpYW1vbmRzXCIsXCJwb2tlclwiLFwiY2FyZHNcIixcIm1hZ2ljXCIsXCJzdWl0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2NjYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2NjZcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY2x1YnNcIjp7XCJpZFwiOlwiY2x1YnNcIixcIm5hbWVcIjpcIkNsdWIgU3VpdFwiLFwia2V5d29yZHNcIjpbXCJjbHVic1wiLFwicG9rZXJcIixcImNhcmRzXCIsXCJtYWdpY1wiLFwic3VpdHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjYzLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjYzXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImNoZXNzX3Bhd25cIjp7XCJpZFwiOlwiY2hlc3NfcGF3blwiLFwibmFtZVwiOlwiQ2hlc3MgUGF3blwiLFwia2V5d29yZHNcIjpbXCJleHBlbmRhYmxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY1Zi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjY1Rlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiYmxhY2tfam9rZXJcIjp7XCJpZFwiOlwiYmxhY2tfam9rZXJcIixcIm5hbWVcIjpcIkpva2VyXCIsXCJrZXl3b3Jkc1wiOltcImJsYWNrXCIsXCJwb2tlclwiLFwiY2FyZHNcIixcImdhbWVcIixcInBsYXlcIixcIm1hZ2ljXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYwY2ZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEQ0NGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1haGpvbmdcIjp7XCJpZFwiOlwibWFoam9uZ1wiLFwibmFtZVwiOlwiTWFoam9uZyBSZWQgRHJhZ29uXCIsXCJrZXl3b3Jkc1wiOltcImdhbWVcIixcInBsYXlcIixcImNoaW5lc2VcIixcImthbmppXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYwMDRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEQzA0XCJ9XSxcInZlcnNpb25cIjoxfSxcImZsb3dlcl9wbGF5aW5nX2NhcmRzXCI6e1wiaWRcIjpcImZsb3dlcl9wbGF5aW5nX2NhcmRzXCIsXCJuYW1lXCI6XCJGbG93ZXIgUGxheWluZyBDYXJkc1wiLFwia2V5d29yZHNcIjpbXCJnYW1lXCIsXCJzdW5zZXRcIixcInJlZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2I0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZCNFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwZXJmb3JtaW5nX2FydHNcIjp7XCJpZFwiOlwicGVyZm9ybWluZ19hcnRzXCIsXCJuYW1lXCI6XCJQZXJmb3JtaW5nIEFydHNcIixcImtleXdvcmRzXCI6W1wiYWN0aW5nXCIsXCJ0aGVhdGVyXCIsXCJkcmFtYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2FkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZBRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmcmFtZV93aXRoX3BpY3R1cmVcIjp7XCJpZFwiOlwiZnJhbWVfd2l0aF9waWN0dXJlXCIsXCJuYW1lXCI6XCJGcmFtZWQgUGljdHVyZVwiLFwia2V5d29yZHNcIjpbXCJmcmFtZVwiLFwid2l0aFwiLFwicGhvdG9ncmFwaHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjViYy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RERCQ1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhcnRcIjp7XCJpZFwiOlwiYXJ0XCIsXCJuYW1lXCI6XCJBcnRpc3QgUGFsZXR0ZVwiLFwia2V5d29yZHNcIjpbXCJhcnRcIixcImRlc2lnblwiLFwicGFpbnRcIixcImRyYXdcIixcImNvbG9yc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2E4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZBOFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0aHJlYWRcIjp7XCJpZFwiOlwidGhyZWFkXCIsXCJuYW1lXCI6XCJUaHJlYWRcIixcImtleXdvcmRzXCI6W1wibmVlZGxlXCIsXCJzZXdpbmdcIixcInNwb29sXCIsXCJzdHJpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlmNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERjVcIn1dLFwidmVyc2lvblwiOjExfSxcInNld2luZ19uZWVkbGVcIjp7XCJpZFwiOlwic2V3aW5nX25lZWRsZVwiLFwibmFtZVwiOlwiU2V3aW5nIE5lZWRsZVwiLFwia2V5d29yZHNcIjpbXCJzdGl0Y2hlc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWExXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVBMVwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwieWFyblwiOntcImlkXCI6XCJ5YXJuXCIsXCJuYW1lXCI6XCJZYXJuXCIsXCJrZXl3b3Jkc1wiOltcImJhbGxcIixcImNyb2NoZXRcIixcImtuaXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlmNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERjZcIn1dLFwidmVyc2lvblwiOjExfSxcImtub3RcIjp7XCJpZFwiOlwia25vdFwiLFwibmFtZVwiOlwiS25vdFwiLFwia2V5d29yZHNcIjpbXCJyb3BlXCIsXCJzY291dFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWEyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVBMlwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiZXllZ2xhc3Nlc1wiOntcImlkXCI6XCJleWVnbGFzc2VzXCIsXCJuYW1lXCI6XCJHbGFzc2VzXCIsXCJrZXl3b3Jkc1wiOltcImV5ZWdsYXNzZXNcIixcImZhc2hpb25cIixcImFjY2Vzc29yaWVzXCIsXCJleWVzaWdodFwiLFwibmVyZHlcIixcImRvcmtcIixcImdlZWtcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ1M1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNTNcIn1dLFwidmVyc2lvblwiOjF9LFwiZGFya19zdW5nbGFzc2VzXCI6e1wiaWRcIjpcImRhcmtfc3VuZ2xhc3Nlc1wiLFwibmFtZVwiOlwiU3VuZ2xhc3Nlc1wiLFwia2V5d29yZHNcIjpbXCJkYXJrXCIsXCJmYWNlXCIsXCJjb29sXCIsXCJhY2Nlc3Nvcmllc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTc2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDc2XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImdvZ2dsZXNcIjp7XCJpZFwiOlwiZ29nZ2xlc1wiLFwibmFtZVwiOlwiR29nZ2xlc1wiLFwia2V5d29yZHNcIjpbXCJleWVzXCIsXCJwcm90ZWN0aW9uXCIsXCJzYWZldHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjk3ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREN0RcIn1dLFwidmVyc2lvblwiOjExfSxcImxhYl9jb2F0XCI6e1wiaWRcIjpcImxhYl9jb2F0XCIsXCJuYW1lXCI6XCJMYWIgQ29hdFwiLFwia2V5d29yZHNcIjpbXCJkb2N0b3JcIixcImV4cGVyaW1lbnRcIixcInNjaWVudGlzdFwiLFwiY2hlbWlzdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTdjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ3Q1wifV0sXCJ2ZXJzaW9uXCI6MTF9LFwic2FmZXR5X3Zlc3RcIjp7XCJpZFwiOlwic2FmZXR5X3Zlc3RcIixcIm5hbWVcIjpcIlNhZmV0eSBWZXN0XCIsXCJrZXl3b3Jkc1wiOltcInByb3RlY3Rpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjliYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdUREQkFcIn1dLFwidmVyc2lvblwiOjEyfSxcIm5lY2t0aWVcIjp7XCJpZFwiOlwibmVja3RpZVwiLFwibmFtZVwiOlwiTmVja3RpZVwiLFwia2V5d29yZHNcIjpbXCJzaGlydFwiLFwic3VpdHVwXCIsXCJmb3JtYWxcIixcImZhc2hpb25cIixcImNsb3RoXCIsXCJidXNpbmVzc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDU0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM1NFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzaGlydFwiOntcImlkXCI6XCJzaGlydFwiLFwibmFtZVwiOlwiVC1TaGlydFwiLFwia2V5d29yZHNcIjpbXCJzaGlydFwiLFwidHNoaXJ0XCIsXCJ0XCIsXCJmYXNoaW9uXCIsXCJjbG90aFwiLFwiY2FzdWFsXCIsXCJ0ZWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ1NVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNTVcIn1dLFwidmVyc2lvblwiOjF9LFwiamVhbnNcIjp7XCJpZFwiOlwiamVhbnNcIixcIm5hbWVcIjpcIkplYW5zXCIsXCJrZXl3b3Jkc1wiOltcImZhc2hpb25cIixcInNob3BwaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NTZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzU2XCJ9XSxcInZlcnNpb25cIjoxfSxcInNjYXJmXCI6e1wiaWRcIjpcInNjYXJmXCIsXCJuYW1lXCI6XCJTY2FyZlwiLFwia2V5d29yZHNcIjpbXCJuZWNrXCIsXCJ3aW50ZXJcIixcImNsb3RoZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjllM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERTNcIn1dLFwidmVyc2lvblwiOjV9LFwiZ2xvdmVzXCI6e1wiaWRcIjpcImdsb3Zlc1wiLFwibmFtZVwiOlwiR2xvdmVzXCIsXCJrZXl3b3Jkc1wiOltcImhhbmRzXCIsXCJ3aW50ZXJcIixcImNsb3RoZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjllNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERTRcIn1dLFwidmVyc2lvblwiOjV9LFwiY29hdFwiOntcImlkXCI6XCJjb2F0XCIsXCJuYW1lXCI6XCJDb2F0XCIsXCJrZXl3b3Jkc1wiOltcImphY2tldFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWU1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERFNVwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJzb2Nrc1wiOntcImlkXCI6XCJzb2Nrc1wiLFwibmFtZVwiOlwiU29ja3NcIixcImtleXdvcmRzXCI6W1wic3RvY2tpbmdzXCIsXCJjbG90aGVzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREU2XCJ9XSxcInZlcnNpb25cIjo1fSxcImRyZXNzXCI6e1wiaWRcIjpcImRyZXNzXCIsXCJuYW1lXCI6XCJEcmVzc1wiLFwia2V5d29yZHNcIjpbXCJjbG90aGVzXCIsXCJmYXNoaW9uXCIsXCJzaG9wcGluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDU3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM1N1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJraW1vbm9cIjp7XCJpZFwiOlwia2ltb25vXCIsXCJuYW1lXCI6XCJLaW1vbm9cIixcImtleXdvcmRzXCI6W1wiZHJlc3NcIixcImZhc2hpb25cIixcIndvbWVuXCIsXCJmZW1hbGVcIixcImphcGFuZXNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NThcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzU4XCJ9XSxcInZlcnNpb25cIjoxfSxcInNhcmlcIjp7XCJpZFwiOlwic2FyaVwiLFwibmFtZVwiOlwiU2FyaVwiLFwia2V5d29yZHNcIjpbXCJkcmVzc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTdiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ3QlwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwib25lLXBpZWNlX3N3aW1zdWl0XCI6e1wiaWRcIjpcIm9uZS1waWVjZV9zd2ltc3VpdFwiLFwibmFtZVwiOlwiT25lLVBpZWNlIFN3aW1zdWl0XCIsXCJrZXl3b3Jkc1wiOltcIm9uZVwiLFwicGllY2VcIixcImZhc2hpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE3MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFNzFcIn1dLFwidmVyc2lvblwiOjEyfSxcImJyaWVmc1wiOntcImlkXCI6XCJicmllZnNcIixcIm5hbWVcIjpcIkJyaWVmc1wiLFwia2V5d29yZHNcIjpbXCJjbG90aGluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTcyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU3MlwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwic2hvcnRzXCI6e1wiaWRcIjpcInNob3J0c1wiLFwibmFtZVwiOlwiU2hvcnRzXCIsXCJrZXl3b3Jkc1wiOltcImNsb3RoaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhNzNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTczXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJiaWtpbmlcIjp7XCJpZFwiOlwiYmlraW5pXCIsXCJuYW1lXCI6XCJCaWtpbmlcIixcImtleXdvcmRzXCI6W1wic3dpbW1pbmdcIixcImZlbWFsZVwiLFwid29tYW5cIixcImdpcmxcIixcImZhc2hpb25cIixcImJlYWNoXCIsXCJzdW1tZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ1OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNTlcIn1dLFwidmVyc2lvblwiOjF9LFwid29tYW5zX2Nsb3RoZXNcIjp7XCJpZFwiOlwid29tYW5zX2Nsb3RoZXNcIixcIm5hbWVcIjpcIldvbWFucyBDbG90aGVzXCIsXCJrZXl3b3Jkc1wiOltcIndvbWFuXCIsXCJzXCIsXCJmYXNoaW9uXCIsXCJzaG9wcGluZ1wiLFwiYmFnc1wiLFwiZmVtYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NWFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzVBXCJ9XSxcInZlcnNpb25cIjoxfSxcImZvbGRpbmdfaGFuZF9mYW5cIjp7XCJpZFwiOlwiZm9sZGluZ19oYW5kX2ZhblwiLFwibmFtZVwiOlwiRm9sZGluZyBIYW5kIEZhblwiLFwia2V5d29yZHNcIjpbXCJmbGFtZW5jb1wiLFwiaG90XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYWRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUFEXCJ9XSxcInZlcnNpb25cIjoxNX0sXCJwdXJzZVwiOntcImlkXCI6XCJwdXJzZVwiLFwibmFtZVwiOlwiUHVyc2VcIixcImtleXdvcmRzXCI6W1wiZmFzaGlvblwiLFwiYWNjZXNzb3JpZXNcIixcIm1vbmV5XCIsXCJzYWxlc1wiLFwic2hvcHBpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ1YlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNUJcIn1dLFwidmVyc2lvblwiOjF9LFwiaGFuZGJhZ1wiOntcImlkXCI6XCJoYW5kYmFnXCIsXCJuYW1lXCI6XCJIYW5kYmFnXCIsXCJrZXl3b3Jkc1wiOltcImZhc2hpb25cIixcImFjY2Vzc29yeVwiLFwiYWNjZXNzb3JpZXNcIixcInNob3BwaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NWNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzVDXCJ9XSxcInZlcnNpb25cIjoxfSxcInBvdWNoXCI6e1wiaWRcIjpcInBvdWNoXCIsXCJuYW1lXCI6XCJQb3VjaFwiLFwia2V5d29yZHNcIjpbXCJjbHV0Y2hcIixcImJhZ1wiLFwiYWNjZXNzb3JpZXNcIixcInNob3BwaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NWRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzVEXCJ9XSxcInZlcnNpb25cIjoxfSxcInNob3BwaW5nX2JhZ3NcIjp7XCJpZFwiOlwic2hvcHBpbmdfYmFnc1wiLFwibmFtZVwiOlwiU2hvcHBpbmcgQmFnc1wiLFwia2V5d29yZHNcIjpbXCJtYWxsXCIsXCJidXlcIixcInB1cmNoYXNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2Y2QtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQ0RcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic2Nob29sX3NhdGNoZWxcIjp7XCJpZFwiOlwic2Nob29sX3NhdGNoZWxcIixcIm5hbWVcIjpcIkJhY2twYWNrXCIsXCJrZXl3b3Jkc1wiOltcInNjaG9vbFwiLFwic2F0Y2hlbFwiLFwic3R1ZGVudFwiLFwiZWR1Y2F0aW9uXCIsXCJiYWdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOTJcIn1dLFwidmVyc2lvblwiOjF9LFwidGhvbmdfc2FuZGFsXCI6e1wiaWRcIjpcInRob25nX3NhbmRhbFwiLFwibmFtZVwiOlwiVGhvbmcgU2FuZGFsXCIsXCJrZXl3b3Jkc1wiOltcImZvb3R3ZWFyXCIsXCJzdW1tZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE3NFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFNzRcIn1dLFwidmVyc2lvblwiOjEzfSxcIm1hbnNfc2hvZVwiOntcImlkXCI6XCJtYW5zX3Nob2VcIixcIm5hbWVcIjpcIk1hbnMgU2hvZVwiLFwia2V5d29yZHNcIjpbXCJtYW5cIixcInNcIixcImZhc2hpb25cIixcIm1hbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ1ZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDNUVcIn1dLFwidmVyc2lvblwiOjF9LFwiYXRobGV0aWNfc2hvZVwiOntcImlkXCI6XCJhdGhsZXRpY19zaG9lXCIsXCJuYW1lXCI6XCJSdW5uaW5nIFNob2VcIixcImtleXdvcmRzXCI6W1wiYXRobGV0aWNcIixcInNob2VzXCIsXCJzcG9ydHNcIixcInNuZWFrZXJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzVGXCJ9XSxcInZlcnNpb25cIjoxfSxcImhpa2luZ19ib290XCI6e1wiaWRcIjpcImhpa2luZ19ib290XCIsXCJuYW1lXCI6XCJIaWtpbmcgQm9vdFwiLFwia2V5d29yZHNcIjpbXCJiYWNrcGFja2luZ1wiLFwiY2FtcGluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOTdlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REQ3RVwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwid29tYW5zX2ZsYXRfc2hvZVwiOntcImlkXCI6XCJ3b21hbnNfZmxhdF9zaG9lXCIsXCJuYW1lXCI6XCJGbGF0IFNob2VcIixcImtleXdvcmRzXCI6W1wid29tYW5zXCIsXCJiYWxsZXRcIixcInNsaXBcIixcIm9uXCIsXCJzbGlwcGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5N2ZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDdGXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJoaWdoX2hlZWxcIjp7XCJpZFwiOlwiaGlnaF9oZWVsXCIsXCJuYW1lXCI6XCJIaWdoLUhlZWxlZCBTaG9lXCIsXCJrZXl3b3Jkc1wiOltcImhpZ2hcIixcImhlZWxcIixcImhlZWxlZFwiLFwiZmFzaGlvblwiLFwic2hvZXNcIixcImZlbWFsZVwiLFwicHVtcHNcIixcInN0aWxldHRvXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NjBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzYwXCJ9XSxcInZlcnNpb25cIjoxfSxcInNhbmRhbFwiOntcImlkXCI6XCJzYW5kYWxcIixcIm5hbWVcIjpcIldvbWFucyBTYW5kYWxcIixcImtleXdvcmRzXCI6W1wid29tYW5cIixcInNcIixcInNob2VzXCIsXCJmYXNoaW9uXCIsXCJmbGlwXCIsXCJmbG9wc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDYxXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2MVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiYWxsZXRfc2hvZXNcIjp7XCJpZFwiOlwiYmFsbGV0X3Nob2VzXCIsXCJuYW1lXCI6XCJCYWxsZXQgU2hvZXNcIixcImtleXdvcmRzXCI6W1wiZGFuY2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE3MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFNzBcIn1dLFwidmVyc2lvblwiOjEyfSxcImJvb3RcIjp7XCJpZFwiOlwiYm9vdFwiLFwibmFtZVwiOlwiV29tYW5zIEJvb3RzXCIsXCJrZXl3b3Jkc1wiOltcImJvb3RcIixcIndvbWFuXCIsXCJzXCIsXCJzaG9lc1wiLFwiZmFzaGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDYyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM2MlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoYWlyX3BpY2tcIjp7XCJpZFwiOlwiaGFpcl9waWNrXCIsXCJuYW1lXCI6XCJIYWlyIFBpY2tcIixcImtleXdvcmRzXCI6W1wiYWZyb1wiLFwiY29tYlwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWFlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVBRVwifV0sXCJ2ZXJzaW9uXCI6MTV9LFwiY3Jvd25cIjp7XCJpZFwiOlwiY3Jvd25cIixcIm5hbWVcIjpcIkNyb3duXCIsXCJrZXl3b3Jkc1wiOltcImtpbmdcIixcImtvZFwiLFwibGVhZGVyXCIsXCJyb3lhbHR5XCIsXCJsb3JkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NTFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzUxXCJ9XSxcInZlcnNpb25cIjoxfSxcIndvbWFuc19oYXRcIjp7XCJpZFwiOlwid29tYW5zX2hhdFwiLFwibmFtZVwiOlwiV29tYW5zIEhhdFwiLFwia2V5d29yZHNcIjpbXCJ3b21hblwiLFwic1wiLFwiZmFzaGlvblwiLFwiYWNjZXNzb3JpZXNcIixcImZlbWFsZVwiLFwibGFkeVwiLFwic3ByaW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0NTJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzUyXCJ9XSxcInZlcnNpb25cIjoxfSxcInRvcGhhdFwiOntcImlkXCI6XCJ0b3BoYXRcIixcIm5hbWVcIjpcIlRvcCBIYXRcIixcImtleXdvcmRzXCI6W1widG9waGF0XCIsXCJtYWdpY1wiLFwiZ2VudGxlbWFuXCIsXCJjbGFzc3lcIixcImNpcmN1c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2E5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZBOVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb3J0YXJfYm9hcmRcIjp7XCJpZFwiOlwibW9ydGFyX2JvYXJkXCIsXCJuYW1lXCI6XCJHcmFkdWF0aW9uIENhcFwiLFwia2V5d29yZHNcIjpbXCJtb3J0YXJcIixcImJvYXJkXCIsXCJzY2hvb2xcIixcImNvbGxlZ2VcIixcImRlZ3JlZVwiLFwidW5pdmVyc2l0eVwiLFwiaGF0XCIsXCJsZWdhbFwiLFwibGVhcm5cIixcImVkdWNhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY5M1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiaWxsZWRfY2FwXCI6e1wiaWRcIjpcImJpbGxlZF9jYXBcIixcIm5hbWVcIjpcIkJpbGxlZCBDYXBcIixcImtleXdvcmRzXCI6W1wiYmFzZWJhbGxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjllMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERTJcIn1dLFwidmVyc2lvblwiOjV9LFwibWlsaXRhcnlfaGVsbWV0XCI6e1wiaWRcIjpcIm1pbGl0YXJ5X2hlbG1ldFwiLFwibmFtZVwiOlwiTWlsaXRhcnkgSGVsbWV0XCIsXCJrZXl3b3Jkc1wiOltcImFybXlcIixcInByb3RlY3Rpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE5NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFOTZcIn1dLFwidmVyc2lvblwiOjEzfSxcImhlbG1ldF93aXRoX3doaXRlX2Nyb3NzXCI6e1wiaWRcIjpcImhlbG1ldF93aXRoX3doaXRlX2Nyb3NzXCIsXCJuYW1lXCI6XCJSZXNjdWUgV29ya2VyXHUyMDE5cyBIZWxtZXRcIixcImtleXdvcmRzXCI6W1wid2l0aFwiLFwid2hpdGVcIixcImNyb3NzXCIsXCJ3b3JrZXJcIixcInNcIixcImNvbnN0cnVjdGlvblwiLFwiYnVpbGRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmQxLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkQxXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInByYXllcl9iZWFkc1wiOntcImlkXCI6XCJwcmF5ZXJfYmVhZHNcIixcIm5hbWVcIjpcIlByYXllciBCZWFkc1wiLFwia2V5d29yZHNcIjpbXCJkaGlrclwiLFwicmVsaWdpb3VzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0ZGXCJ9XSxcInZlcnNpb25cIjoxfSxcImxpcHN0aWNrXCI6e1wiaWRcIjpcImxpcHN0aWNrXCIsXCJuYW1lXCI6XCJMaXBzdGlja1wiLFwia2V5d29yZHNcIjpbXCJmZW1hbGVcIixcImdpcmxcIixcImZhc2hpb25cIixcIndvbWFuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ODRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzg0XCJ9XSxcInZlcnNpb25cIjoxfSxcInJpbmdcIjp7XCJpZFwiOlwicmluZ1wiLFwibmFtZVwiOlwiUmluZ1wiLFwia2V5d29yZHNcIjpbXCJ3ZWRkaW5nXCIsXCJwcm9wb3NlXCIsXCJtYXJyaWFnZVwiLFwidmFsZW50aW5lc1wiLFwiZGlhbW9uZFwiLFwiZmFzaGlvblwiLFwiamV3ZWxyeVwiLFwiZ2VtXCIsXCJlbmdhZ2VtZW50XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0OGRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzhEXCJ9XSxcInZlcnNpb25cIjoxfSxcImdlbVwiOntcImlkXCI6XCJnZW1cIixcIm5hbWVcIjpcIkdlbSBTdG9uZVwiLFwia2V5d29yZHNcIjpbXCJibHVlXCIsXCJydWJ5XCIsXCJkaWFtb25kXCIsXCJqZXdlbHJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0OGVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQzhFXCJ9XSxcInZlcnNpb25cIjoxfSxcIm11dGVcIjp7XCJpZFwiOlwibXV0ZVwiLFwibmFtZVwiOlwiTXV0ZWQgU3BlYWtlclwiLFwia2V5d29yZHNcIjpbXCJtdXRlXCIsXCJzb3VuZFwiLFwidm9sdW1lXCIsXCJzaWxlbmNlXCIsXCJxdWlldFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTA3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQwN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzcGVha2VyXCI6e1wiaWRcIjpcInNwZWFrZXJcIixcIm5hbWVcIjpcIlNwZWFrZXJcIixcImtleXdvcmRzXCI6W1wibG93XCIsXCJ2b2x1bWVcIixcInNvdW5kXCIsXCJzaWxlbmNlXCIsXCJicm9hZGNhc3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUwOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMDhcIn1dLFwidmVyc2lvblwiOjF9LFwic291bmRcIjp7XCJpZFwiOlwic291bmRcIixcIm5hbWVcIjpcIlNwZWFrZXIgTWVkaXVtIFZvbHVtZVwiLFwia2V5d29yZHNcIjpbXCJzb3VuZFwiLFwiYnJvYWRjYXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MDlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDA5XCJ9XSxcInZlcnNpb25cIjoxfSxcImxvdWRfc291bmRcIjp7XCJpZFwiOlwibG91ZF9zb3VuZFwiLFwibmFtZVwiOlwiU3BlYWtlciBIaWdoIFZvbHVtZVwiLFwia2V5d29yZHNcIjpbXCJsb3VkXCIsXCJzb3VuZFwiLFwibm9pc2VcIixcIm5vaXN5XCIsXCJicm9hZGNhc3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUwYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMEFcIn1dLFwidmVyc2lvblwiOjF9LFwibG91ZHNwZWFrZXJcIjp7XCJpZFwiOlwibG91ZHNwZWFrZXJcIixcIm5hbWVcIjpcIkxvdWRzcGVha2VyXCIsXCJrZXl3b3Jkc1wiOltcInZvbHVtZVwiLFwic291bmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRlMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRTJcIn1dLFwidmVyc2lvblwiOjF9LFwibWVnYVwiOntcImlkXCI6XCJtZWdhXCIsXCJuYW1lXCI6XCJNZWdhcGhvbmVcIixcImtleXdvcmRzXCI6W1wibWVnYVwiLFwic291bmRcIixcInNwZWFrZXJcIixcInZvbHVtZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGUzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENFM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwb3N0YWxfaG9yblwiOntcImlkXCI6XCJwb3N0YWxfaG9yblwiLFwibmFtZVwiOlwiUG9zdGFsIEhvcm5cIixcImtleXdvcmRzXCI6W1wiaW5zdHJ1bWVudFwiLFwibXVzaWNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRlZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRUZcIn1dLFwidmVyc2lvblwiOjF9LFwiYmVsbFwiOntcImlkXCI6XCJiZWxsXCIsXCJuYW1lXCI6XCJCZWxsXCIsXCJrZXl3b3Jkc1wiOltcInNvdW5kXCIsXCJub3RpZmljYXRpb25cIixcImNocmlzdG1hc1wiLFwieG1hc1wiLFwiY2hpbWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUxNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMTRcIn1dLFwidmVyc2lvblwiOjF9LFwibm9fYmVsbFwiOntcImlkXCI6XCJub19iZWxsXCIsXCJuYW1lXCI6XCJCZWxsIHdpdGggU2xhc2hcIixcImtleXdvcmRzXCI6W1wibm9cIixcInNvdW5kXCIsXCJ2b2x1bWVcIixcIm11dGVcIixcInF1aWV0XCIsXCJzaWxlbnRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUxNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMTVcIn1dLFwidmVyc2lvblwiOjF9LFwibXVzaWNhbF9zY29yZVwiOntcImlkXCI6XCJtdXNpY2FsX3Njb3JlXCIsXCJuYW1lXCI6XCJNdXNpY2FsIFNjb3JlXCIsXCJrZXl3b3Jkc1wiOltcInRyZWJsZVwiLFwiY2xlZlwiLFwiY29tcG9zZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2JjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZCQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtdXNpY2FsX25vdGVcIjp7XCJpZFwiOlwibXVzaWNhbF9ub3RlXCIsXCJuYW1lXCI6XCJNdXNpY2FsIE5vdGVcIixcImtleXdvcmRzXCI6W1wic2NvcmVcIixcInRvbmVcIixcInNvdW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYjVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkI1XCJ9XSxcInZlcnNpb25cIjoxfSxcIm5vdGVzXCI6e1wiaWRcIjpcIm5vdGVzXCIsXCJuYW1lXCI6XCJNdXNpY2FsIE5vdGVzXCIsXCJrZXl3b3Jkc1wiOltcIm11c2ljXCIsXCJzY29yZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2I2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZCNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzdHVkaW9fbWljcm9waG9uZVwiOntcImlkXCI6XCJzdHVkaW9fbWljcm9waG9uZVwiLFwibmFtZVwiOlwiU3R1ZGlvIE1pY3JvcGhvbmVcIixcImtleXdvcmRzXCI6W1wic2luZ1wiLFwicmVjb3JkaW5nXCIsXCJhcnRpc3RcIixcInRhbGtzaG93XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzOTktZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOTlcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwibGV2ZWxfc2xpZGVyXCI6e1wiaWRcIjpcImxldmVsX3NsaWRlclwiLFwibmFtZVwiOlwiTGV2ZWwgU2xpZGVyXCIsXCJrZXl3b3Jkc1wiOltcInNjYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzOWEtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOUFcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY29udHJvbF9rbm9ic1wiOntcImlkXCI6XCJjb250cm9sX2tub2JzXCIsXCJuYW1lXCI6XCJDb250cm9sIEtub2JzXCIsXCJrZXl3b3Jkc1wiOltcImRpYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjM5Yi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY5Qlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtaWNyb3Bob25lXCI6e1wiaWRcIjpcIm1pY3JvcGhvbmVcIixcIm5hbWVcIjpcIk1pY3JvcGhvbmVcIixcImtleXdvcmRzXCI6W1wic291bmRcIixcIm11c2ljXCIsXCJQQVwiLFwic2luZ1wiLFwidGFsa3Nob3dcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQTRcIn1dLFwidmVyc2lvblwiOjF9LFwiaGVhZHBob25lc1wiOntcImlkXCI6XCJoZWFkcGhvbmVzXCIsXCJuYW1lXCI6XCJIZWFkcGhvbmVcIixcImtleXdvcmRzXCI6W1wiaGVhZHBob25lc1wiLFwibXVzaWNcIixcInNjb3JlXCIsXCJnYWRnZXRzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYTdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkE3XCJ9XSxcInZlcnNpb25cIjoxfSxcInJhZGlvXCI6e1wiaWRcIjpcInJhZGlvXCIsXCJuYW1lXCI6XCJSYWRpb1wiLFwia2V5d29yZHNcIjpbXCJjb21tdW5pY2F0aW9uXCIsXCJtdXNpY1wiLFwicG9kY2FzdFwiLFwicHJvZ3JhbVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENGQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzYXhvcGhvbmVcIjp7XCJpZFwiOlwic2F4b3Bob25lXCIsXCJuYW1lXCI6XCJTYXhvcGhvbmVcIixcImtleXdvcmRzXCI6W1wibXVzaWNcIixcImluc3RydW1lbnRcIixcImphenpcIixcImJsdWVzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYjdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkI3XCJ9XSxcInZlcnNpb25cIjoxfSxcImFjY29yZGlvblwiOntcImlkXCI6XCJhY2NvcmRpb25cIixcIm5hbWVcIjpcIkFjY29yZGlvblwiLFwia2V5d29yZHNcIjpbXCJtdXNpY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTk3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU5N1wifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiZ3VpdGFyXCI6e1wiaWRcIjpcImd1aXRhclwiLFwibmFtZVwiOlwiR3VpdGFyXCIsXCJrZXl3b3Jkc1wiOltcIm11c2ljXCIsXCJpbnN0cnVtZW50XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYjhcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkI4XCJ9XSxcInZlcnNpb25cIjoxfSxcIm11c2ljYWxfa2V5Ym9hcmRcIjp7XCJpZFwiOlwibXVzaWNhbF9rZXlib2FyZFwiLFwibmFtZVwiOlwiTXVzaWNhbCBLZXlib2FyZFwiLFwia2V5d29yZHNcIjpbXCJwaWFub1wiLFwiaW5zdHJ1bWVudFwiLFwiY29tcG9zZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2I5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZCOVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0cnVtcGV0XCI6e1wiaWRcIjpcInRydW1wZXRcIixcIm5hbWVcIjpcIlRydW1wZXRcIixcImtleXdvcmRzXCI6W1wibXVzaWNcIixcImJyYXNzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYmFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkJBXCJ9XSxcInZlcnNpb25cIjoxfSxcInZpb2xpblwiOntcImlkXCI6XCJ2aW9saW5cIixcIm5hbWVcIjpcIlZpb2xpblwiLFwia2V5d29yZHNcIjpbXCJtdXNpY1wiLFwiaW5zdHJ1bWVudFwiLFwib3JjaGVzdHJhXCIsXCJzeW1waG9ueVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2JiXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZCQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiYW5qb1wiOntcImlkXCI6XCJiYW5qb1wiLFwibmFtZVwiOlwiQmFuam9cIixcImtleXdvcmRzXCI6W1wibXVzaWNcIixcImluc3RydWN0bWVudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTk1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU5NVwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwiZHJ1bV93aXRoX2RydW1zdGlja3NcIjp7XCJpZFwiOlwiZHJ1bV93aXRoX2RydW1zdGlja3NcIixcIm5hbWVcIjpcIkRydW1cIixcImtleXdvcmRzXCI6W1wid2l0aFwiLFwiZHJ1bXN0aWNrc1wiLFwibXVzaWNcIixcImluc3RydW1lbnRcIixcInNuYXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5NDFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERDQxXCJ9XSxcInZlcnNpb25cIjozfSxcImxvbmdfZHJ1bVwiOntcImlkXCI6XCJsb25nX2RydW1cIixcIm5hbWVcIjpcIkxvbmcgRHJ1bVwiLFwia2V5d29yZHNcIjpbXCJtdXNpY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTk4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU5OFwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwibWFyYWNhc1wiOntcImlkXCI6XCJtYXJhY2FzXCIsXCJuYW1lXCI6XCJNYXJhY2FzXCIsXCJrZXl3b3Jkc1wiOltcIm11c2ljXCIsXCJpbnN0cnVtZW50XCIsXCJwZXJjdXNzaW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhODdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTg3XCJ9XSxcInZlcnNpb25cIjoxNX0sXCJmbHV0ZVwiOntcImlkXCI6XCJmbHV0ZVwiLFwibmFtZVwiOlwiRmx1dGVcIixcImtleXdvcmRzXCI6W1wiYmFtYm9vXCIsXCJtdXNpY1wiLFwiaW5zdHJ1bWVudFwiLFwicGllZFwiLFwicGlwZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE4OFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFODhcIn1dLFwidmVyc2lvblwiOjE1fSxcImlwaG9uZVwiOntcImlkXCI6XCJpcGhvbmVcIixcIm5hbWVcIjpcIk1vYmlsZSBQaG9uZVwiLFwia2V5d29yZHNcIjpbXCJpcGhvbmVcIixcInRlY2hub2xvZ3lcIixcImFwcGxlXCIsXCJnYWRnZXRzXCIsXCJkaWFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0YxXCJ9XSxcInZlcnNpb25cIjoxfSxcImNhbGxpbmdcIjp7XCJpZFwiOlwiY2FsbGluZ1wiLFwibmFtZVwiOlwiTW9iaWxlIFBob25lIHdpdGggQXJyb3dcIixcImtleXdvcmRzXCI6W1wiY2FsbGluZ1wiLFwiaXBob25lXCIsXCJpbmNvbWluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGYyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENGMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwaG9uZVwiOntcImlkXCI6XCJwaG9uZVwiLFwibmFtZVwiOlwiVGVsZXBob25lXCIsXCJrZXl3b3Jkc1wiOltcInBob25lXCIsXCJ0ZWNobm9sb2d5XCIsXCJjb21tdW5pY2F0aW9uXCIsXCJkaWFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjYwZS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjYwRVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0ZWxlcGhvbmVfcmVjZWl2ZXJcIjp7XCJpZFwiOlwidGVsZXBob25lX3JlY2VpdmVyXCIsXCJuYW1lXCI6XCJUZWxlcGhvbmUgUmVjZWl2ZXJcIixcImtleXdvcmRzXCI6W1widGVjaG5vbG9neVwiLFwiY29tbXVuaWNhdGlvblwiLFwiZGlhbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGRlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENERVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwYWdlclwiOntcImlkXCI6XCJwYWdlclwiLFwibmFtZVwiOlwiUGFnZXJcIixcImtleXdvcmRzXCI6W1wiYmJjYWxsXCIsXCJvbGRzY2hvb2xcIixcIjkwc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGRmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENERlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmYXhcIjp7XCJpZFwiOlwiZmF4XCIsXCJuYW1lXCI6XCJGYXggTWFjaGluZVwiLFwia2V5d29yZHNcIjpbXCJjb21tdW5pY2F0aW9uXCIsXCJ0ZWNobm9sb2d5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZTBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0UwXCJ9XSxcInZlcnNpb25cIjoxfSxcImJhdHRlcnlcIjp7XCJpZFwiOlwiYmF0dGVyeVwiLFwibmFtZVwiOlwiQmF0dGVyeVwiLFwia2V5d29yZHNcIjpbXCJwb3dlclwiLFwiZW5lcmd5XCIsXCJzdXN0YWluXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MGJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDBCXCJ9XSxcInZlcnNpb25cIjoxfSxcImxvd19iYXR0ZXJ5XCI6e1wiaWRcIjpcImxvd19iYXR0ZXJ5XCIsXCJuYW1lXCI6XCJMb3cgQmF0dGVyeVwiLFwia2V5d29yZHNcIjpbXCJkcmFpbmVkXCIsXCJkZWFkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYWJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUFCXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJlbGVjdHJpY19wbHVnXCI6e1wiaWRcIjpcImVsZWN0cmljX3BsdWdcIixcIm5hbWVcIjpcIkVsZWN0cmljIFBsdWdcIixcImtleXdvcmRzXCI6W1wiY2hhcmdlclwiLFwicG93ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUwY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMENcIn1dLFwidmVyc2lvblwiOjF9LFwiY29tcHV0ZXJcIjp7XCJpZFwiOlwiY29tcHV0ZXJcIixcIm5hbWVcIjpcIkxhcHRvcFwiLFwia2V5d29yZHNcIjpbXCJjb21wdXRlclwiLFwidGVjaG5vbG9neVwiLFwic2NyZWVuXCIsXCJkaXNwbGF5XCIsXCJtb25pdG9yXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YmJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0JCXCJ9XSxcInZlcnNpb25cIjoxfSxcImRlc2t0b3BfY29tcHV0ZXJcIjp7XCJpZFwiOlwiZGVza3RvcF9jb21wdXRlclwiLFwibmFtZVwiOlwiRGVza3RvcCBDb21wdXRlclwiLFwia2V5d29yZHNcIjpbXCJ0ZWNobm9sb2d5XCIsXCJjb21wdXRpbmdcIixcInNjcmVlblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNWE1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEREE1XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInByaW50ZXJcIjp7XCJpZFwiOlwicHJpbnRlclwiLFwibmFtZVwiOlwiUHJpbnRlclwiLFwia2V5d29yZHNcIjpbXCJwYXBlclwiLFwiaW5rXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1YTgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREQThcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwia2V5Ym9hcmRcIjp7XCJpZFwiOlwia2V5Ym9hcmRcIixcIm5hbWVcIjpcIktleWJvYXJkXCIsXCJrZXl3b3Jkc1wiOltcInRlY2hub2xvZ3lcIixcImNvbXB1dGVyXCIsXCJ0eXBlXCIsXCJpbnB1dFwiLFwidGV4dFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIzMjgtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTIzMjhcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwidGhyZWVfYnV0dG9uX21vdXNlXCI6e1wiaWRcIjpcInRocmVlX2J1dHRvbl9tb3VzZVwiLFwibmFtZVwiOlwiQ29tcHV0ZXIgTW91c2VcIixcImtleXdvcmRzXCI6W1widGhyZWVcIixcImJ1dHRvblwiLFwiY2xpY2tcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjViMS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RERCMVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0cmFja2JhbGxcIjp7XCJpZFwiOlwidHJhY2tiYWxsXCIsXCJuYW1lXCI6XCJUcmFja2JhbGxcIixcImtleXdvcmRzXCI6W1widGVjaG5vbG9neVwiLFwidHJhY2twYWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjViMi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RERCMlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtaW5pZGlzY1wiOntcImlkXCI6XCJtaW5pZGlzY1wiLFwibmFtZVwiOlwiTWluaWRpc2NcIixcImtleXdvcmRzXCI6W1wiY29tcHV0ZXJcIixcImRpc2tcIixcInRlY2hub2xvZ3lcIixcInJlY29yZFwiLFwiZGF0YVwiLFwiOTBzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YmRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0JEXCJ9XSxcInZlcnNpb25cIjoxfSxcImZsb3BweV9kaXNrXCI6e1wiaWRcIjpcImZsb3BweV9kaXNrXCIsXCJuYW1lXCI6XCJGbG9wcHkgRGlza1wiLFwia2V5d29yZHNcIjpbXCJvbGRzY2hvb2xcIixcInRlY2hub2xvZ3lcIixcInNhdmVcIixcIjkwc1wiLFwiODBzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YmVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0JFXCJ9XSxcInZlcnNpb25cIjoxfSxcImNkXCI6e1wiaWRcIjpcImNkXCIsXCJuYW1lXCI6XCJPcHRpY2FsIERpc2NcIixcImtleXdvcmRzXCI6W1wiY2RcIixcImRpc2tcIixcInRlY2hub2xvZ3lcIixcImR2ZFwiLFwiOTBzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YmZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0JGXCJ9XSxcInZlcnNpb25cIjoxfSxcImR2ZFwiOntcImlkXCI6XCJkdmRcIixcIm5hbWVcIjpcIkR2ZFwiLFwia2V5d29yZHNcIjpbXCJjZFwiLFwiZGlza1wiLFwiZGlzY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGMwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENDMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhYmFjdXNcIjp7XCJpZFwiOlwiYWJhY3VzXCIsXCJuYW1lXCI6XCJBYmFjdXNcIixcImtleXdvcmRzXCI6W1wiY2FsY3VsYXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjllZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERUVcIn1dLFwidmVyc2lvblwiOjExfSxcIm1vdmllX2NhbWVyYVwiOntcImlkXCI6XCJtb3ZpZV9jYW1lcmFcIixcIm5hbWVcIjpcIk1vdmllIENhbWVyYVwiLFwia2V5d29yZHNcIjpbXCJmaWxtXCIsXCJyZWNvcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNhNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQTVcIn1dLFwidmVyc2lvblwiOjF9LFwiZmlsbV9mcmFtZXNcIjp7XCJpZFwiOlwiZmlsbV9mcmFtZXNcIixcIm5hbWVcIjpcIkZpbG0gRnJhbWVzXCIsXCJrZXl3b3Jkc1wiOltcIm1vdmllXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzOWUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGOUVcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZmlsbV9wcm9qZWN0b3JcIjp7XCJpZFwiOlwiZmlsbV9wcm9qZWN0b3JcIixcIm5hbWVcIjpcIkZpbG0gUHJvamVjdG9yXCIsXCJrZXl3b3Jkc1wiOltcInZpZGVvXCIsXCJ0YXBlXCIsXCJyZWNvcmRcIixcIm1vdmllXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZmQtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRkRcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY2xhcHBlclwiOntcImlkXCI6XCJjbGFwcGVyXCIsXCJuYW1lXCI6XCJDbGFwcGVyIEJvYXJkXCIsXCJrZXl3b3Jkc1wiOltcIm1vdmllXCIsXCJmaWxtXCIsXCJyZWNvcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNhY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQUNcIn1dLFwidmVyc2lvblwiOjF9LFwidHZcIjp7XCJpZFwiOlwidHZcIixcIm5hbWVcIjpcIlRlbGV2aXNpb25cIixcImtleXdvcmRzXCI6W1widHZcIixcInRlY2hub2xvZ3lcIixcInByb2dyYW1cIixcIm9sZHNjaG9vbFwiLFwic2hvd1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGZhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENGQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYW1lcmFcIjp7XCJpZFwiOlwiY2FtZXJhXCIsXCJuYW1lXCI6XCJDYW1lcmFcIixcImtleXdvcmRzXCI6W1wiZ2FkZ2V0c1wiLFwicGhvdG9ncmFwaHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRmN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRjdcIn1dLFwidmVyc2lvblwiOjF9LFwiY2FtZXJhX3dpdGhfZmxhc2hcIjp7XCJpZFwiOlwiY2FtZXJhX3dpdGhfZmxhc2hcIixcIm5hbWVcIjpcIkNhbWVyYSB3aXRoIEZsYXNoXCIsXCJrZXl3b3Jkc1wiOltcInBob3RvZ3JhcGh5XCIsXCJnYWRnZXRzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZjhcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0Y4XCJ9XSxcInZlcnNpb25cIjoxfSxcInZpZGVvX2NhbWVyYVwiOntcImlkXCI6XCJ2aWRlb19jYW1lcmFcIixcIm5hbWVcIjpcIlZpZGVvIENhbWVyYVwiLFwia2V5d29yZHNcIjpbXCJmaWxtXCIsXCJyZWNvcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRmOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRjlcIn1dLFwidmVyc2lvblwiOjF9LFwidmhzXCI6e1wiaWRcIjpcInZoc1wiLFwibmFtZVwiOlwiVmlkZW9jYXNzZXR0ZVwiLFwia2V5d29yZHNcIjpbXCJ2aHNcIixcInJlY29yZFwiLFwidmlkZW9cIixcIm9sZHNjaG9vbFwiLFwiOTBzXCIsXCI4MHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRkNcIn1dLFwidmVyc2lvblwiOjF9LFwibWFnXCI6e1wiaWRcIjpcIm1hZ1wiLFwibmFtZVwiOlwiTWFnbmlmeWluZyBHbGFzcyBUaWx0ZWQgTGVmdFwiLFwia2V5d29yZHNcIjpbXCJtYWdcIixcInNlYXJjaFwiLFwiem9vbVwiLFwiZmluZFwiLFwiZGV0ZWN0aXZlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MGRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDBEXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1hZ19yaWdodFwiOntcImlkXCI6XCJtYWdfcmlnaHRcIixcIm5hbWVcIjpcIk1hZ25pZnlpbmcgR2xhc3MgVGlsdGVkIFJpZ2h0XCIsXCJrZXl3b3Jkc1wiOltcIm1hZ1wiLFwic2VhcmNoXCIsXCJ6b29tXCIsXCJmaW5kXCIsXCJkZXRlY3RpdmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUwZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMEVcIn1dLFwidmVyc2lvblwiOjF9LFwiY2FuZGxlXCI6e1wiaWRcIjpcImNhbmRsZVwiLFwibmFtZVwiOlwiQ2FuZGxlXCIsXCJrZXl3b3Jkc1wiOltcImZpcmVcIixcIndheFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTZmLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDZGXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJ1bGJcIjp7XCJpZFwiOlwiYnVsYlwiLFwibmFtZVwiOlwiTGlnaHQgQnVsYlwiLFwia2V5d29yZHNcIjpbXCJlbGVjdHJpY2l0eVwiLFwiaWRlYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGExXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBMVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmbGFzaGxpZ2h0XCI6e1wiaWRcIjpcImZsYXNobGlnaHRcIixcIm5hbWVcIjpcIkZsYXNobGlnaHRcIixcImtleXdvcmRzXCI6W1wiZGFya1wiLFwiY2FtcGluZ1wiLFwic2lnaHRcIixcIm5pZ2h0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDI2XCJ9XSxcInZlcnNpb25cIjoxfSxcIml6YWtheWFfbGFudGVyblwiOntcImlkXCI6XCJpemFrYXlhX2xhbnRlcm5cIixcIm5hbWVcIjpcIkl6YWtheWEgTGFudGVyblwiLFwia2V5d29yZHNcIjpbXCJyZWRcIixcInBhcGVyXCIsXCJsaWdodFwiLFwiaGFsbG93ZWVuXCIsXCJzcG9va3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNlZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRUVcIn1dLFwidmVyc2lvblwiOjF9LFwiZGl5YV9sYW1wXCI6e1wiaWRcIjpcImRpeWFfbGFtcFwiLFwibmFtZVwiOlwiRGl5YSBMYW1wXCIsXCJrZXl3b3Jkc1wiOltcImxpZ2h0aW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhOTRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTk0XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJub3RlYm9va193aXRoX2RlY29yYXRpdmVfY292ZXJcIjp7XCJpZFwiOlwibm90ZWJvb2tfd2l0aF9kZWNvcmF0aXZlX2NvdmVyXCIsXCJuYW1lXCI6XCJOb3RlYm9vayB3aXRoIERlY29yYXRpdmUgQ292ZXJcIixcImtleXdvcmRzXCI6W1wiY2xhc3Nyb29tXCIsXCJub3Rlc1wiLFwicmVjb3JkXCIsXCJwYXBlclwiLFwic3R1ZHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRkNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRDRcIn1dLFwidmVyc2lvblwiOjF9LFwiY2xvc2VkX2Jvb2tcIjp7XCJpZFwiOlwiY2xvc2VkX2Jvb2tcIixcIm5hbWVcIjpcIkNsb3NlZCBCb29rXCIsXCJrZXl3b3Jkc1wiOltcInJlYWRcIixcImxpYnJhcnlcIixcImtub3dsZWRnZVwiLFwidGV4dGJvb2tcIixcImxlYXJuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZDVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0Q1XCJ9XSxcInZlcnNpb25cIjoxfSxcImJvb2tcIjp7XCJpZFwiOlwiYm9va1wiLFwibmFtZVwiOlwiT3BlbiBCb29rXCIsXCJrZXl3b3Jkc1wiOltcInJlYWRcIixcImxpYnJhcnlcIixcImtub3dsZWRnZVwiLFwibGl0ZXJhdHVyZVwiLFwibGVhcm5cIixcInN0dWR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZDZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0Q2XCJ9XSxcInZlcnNpb25cIjoxfSxcImdyZWVuX2Jvb2tcIjp7XCJpZFwiOlwiZ3JlZW5fYm9va1wiLFwibmFtZVwiOlwiR3JlZW4gQm9va1wiLFwia2V5d29yZHNcIjpbXCJyZWFkXCIsXCJsaWJyYXJ5XCIsXCJrbm93bGVkZ2VcIixcInN0dWR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZDdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0Q3XCJ9XSxcInZlcnNpb25cIjoxfSxcImJsdWVfYm9va1wiOntcImlkXCI6XCJibHVlX2Jvb2tcIixcIm5hbWVcIjpcIkJsdWUgQm9va1wiLFwia2V5d29yZHNcIjpbXCJyZWFkXCIsXCJsaWJyYXJ5XCIsXCJrbm93bGVkZ2VcIixcImxlYXJuXCIsXCJzdHVkeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGQ4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENEOFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvcmFuZ2VfYm9va1wiOntcImlkXCI6XCJvcmFuZ2VfYm9va1wiLFwibmFtZVwiOlwiT3JhbmdlIEJvb2tcIixcImtleXdvcmRzXCI6W1wicmVhZFwiLFwibGlicmFyeVwiLFwia25vd2xlZGdlXCIsXCJ0ZXh0Ym9va1wiLFwic3R1ZHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRkOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRDlcIn1dLFwidmVyc2lvblwiOjF9LFwiYm9va3NcIjp7XCJpZFwiOlwiYm9va3NcIixcIm5hbWVcIjpcIkJvb2tzXCIsXCJrZXl3b3Jkc1wiOltcImxpdGVyYXR1cmVcIixcImxpYnJhcnlcIixcInN0dWR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZGFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0RBXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5vdGVib29rXCI6e1wiaWRcIjpcIm5vdGVib29rXCIsXCJuYW1lXCI6XCJOb3RlYm9va1wiLFwia2V5d29yZHNcIjpbXCJzdGF0aW9uZXJ5XCIsXCJyZWNvcmRcIixcIm5vdGVzXCIsXCJwYXBlclwiLFwic3R1ZHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRkM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRDNcIn1dLFwidmVyc2lvblwiOjF9LFwibGVkZ2VyXCI6e1wiaWRcIjpcImxlZGdlclwiLFwibmFtZVwiOlwiTGVkZ2VyXCIsXCJrZXl3b3Jkc1wiOltcIm5vdGVzXCIsXCJwYXBlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGQyXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENEMlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwYWdlX3dpdGhfY3VybFwiOntcImlkXCI6XCJwYWdlX3dpdGhfY3VybFwiLFwibmFtZVwiOlwiUGFnZSB3aXRoIEN1cmxcIixcImtleXdvcmRzXCI6W1wiZG9jdW1lbnRzXCIsXCJvZmZpY2VcIixcInBhcGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YzNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0MzXCJ9XSxcInZlcnNpb25cIjoxfSxcInNjcm9sbFwiOntcImlkXCI6XCJzY3JvbGxcIixcIm5hbWVcIjpcIlNjcm9sbFwiLFwia2V5d29yZHNcIjpbXCJkb2N1bWVudHNcIixcImFuY2llbnRcIixcImhpc3RvcnlcIixcInBhcGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZGNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0RDXCJ9XSxcInZlcnNpb25cIjoxfSxcInBhZ2VfZmFjaW5nX3VwXCI6e1wiaWRcIjpcInBhZ2VfZmFjaW5nX3VwXCIsXCJuYW1lXCI6XCJQYWdlIEZhY2luZyBVcFwiLFwia2V5d29yZHNcIjpbXCJkb2N1bWVudHNcIixcIm9mZmljZVwiLFwicGFwZXJcIixcImluZm9ybWF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YzRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0M0XCJ9XSxcInZlcnNpb25cIjoxfSxcIm5ld3NwYXBlclwiOntcImlkXCI6XCJuZXdzcGFwZXJcIixcIm5hbWVcIjpcIk5ld3NwYXBlclwiLFwia2V5d29yZHNcIjpbXCJwcmVzc1wiLFwiaGVhZGxpbmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRmMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRjBcIn1dLFwidmVyc2lvblwiOjF9LFwicm9sbGVkX3VwX25ld3NwYXBlclwiOntcImlkXCI6XCJyb2xsZWRfdXBfbmV3c3BhcGVyXCIsXCJuYW1lXCI6XCJSb2xsZWQtVXAgTmV3c3BhcGVyXCIsXCJrZXl3b3Jkc1wiOltcInJvbGxlZFwiLFwidXBcIixcInByZXNzXCIsXCJoZWFkbGluZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNWRlLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERERFXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJvb2ttYXJrX3RhYnNcIjp7XCJpZFwiOlwiYm9va21hcmtfdGFic1wiLFwibmFtZVwiOlwiQm9va21hcmsgVGFic1wiLFwia2V5d29yZHNcIjpbXCJmYXZvcml0ZVwiLFwic2F2ZVwiLFwib3JkZXJcIixcInRpZHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRkMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRDFcIn1dLFwidmVyc2lvblwiOjF9LFwiYm9va21hcmtcIjp7XCJpZFwiOlwiYm9va21hcmtcIixcIm5hbWVcIjpcIkJvb2ttYXJrXCIsXCJrZXl3b3Jkc1wiOltcImZhdm9yaXRlXCIsXCJsYWJlbFwiLFwic2F2ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTE2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQxNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsYWJlbFwiOntcImlkXCI6XCJsYWJlbFwiLFwibmFtZVwiOlwiTGFiZWxcIixcImtleXdvcmRzXCI6W1wic2FsZVwiLFwidGFnXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZjctZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRjdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwibW9uZXliYWdcIjp7XCJpZFwiOlwibW9uZXliYWdcIixcIm5hbWVcIjpcIk1vbmV5IEJhZ1wiLFwia2V5d29yZHNcIjpbXCJtb25leWJhZ1wiLFwiZG9sbGFyXCIsXCJwYXltZW50XCIsXCJjb2luc1wiLFwic2FsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGIwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENCMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjb2luXCI6e1wiaWRcIjpcImNvaW5cIixcIm5hbWVcIjpcIkNvaW5cIixcImtleXdvcmRzXCI6W1wibW9uZXlcIixcImN1cnJlbmN5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhOTlcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTk5XCJ9XSxcInZlcnNpb25cIjoxM30sXCJ5ZW5cIjp7XCJpZFwiOlwieWVuXCIsXCJuYW1lXCI6XCJZZW4gQmFua25vdGVcIixcImtleXdvcmRzXCI6W1wibW9uZXlcIixcInNhbGVzXCIsXCJqYXBhbmVzZVwiLFwiZG9sbGFyXCIsXCJjdXJyZW5jeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGI0XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENCNFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkb2xsYXJcIjp7XCJpZFwiOlwiZG9sbGFyXCIsXCJuYW1lXCI6XCJEb2xsYXIgQmFua25vdGVcIixcImtleXdvcmRzXCI6W1wibW9uZXlcIixcInNhbGVzXCIsXCJiaWxsXCIsXCJjdXJyZW5jeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGI1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENCNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJldXJvXCI6e1wiaWRcIjpcImV1cm9cIixcIm5hbWVcIjpcIkV1cm8gQmFua25vdGVcIixcImtleXdvcmRzXCI6W1wibW9uZXlcIixcInNhbGVzXCIsXCJkb2xsYXJcIixcImN1cnJlbmN5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0I2XCJ9XSxcInZlcnNpb25cIjoxfSxcInBvdW5kXCI6e1wiaWRcIjpcInBvdW5kXCIsXCJuYW1lXCI6XCJQb3VuZCBCYW5rbm90ZVwiLFwia2V5d29yZHNcIjpbXCJicml0aXNoXCIsXCJzdGVybGluZ1wiLFwibW9uZXlcIixcInNhbGVzXCIsXCJiaWxsc1wiLFwidWtcIixcImVuZ2xhbmRcIixcImN1cnJlbmN5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YjdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0I3XCJ9XSxcInZlcnNpb25cIjoxfSxcIm1vbmV5X3dpdGhfd2luZ3NcIjp7XCJpZFwiOlwibW9uZXlfd2l0aF93aW5nc1wiLFwibmFtZVwiOlwiTW9uZXkgd2l0aCBXaW5nc1wiLFwia2V5d29yZHNcIjpbXCJkb2xsYXJcIixcImJpbGxzXCIsXCJwYXltZW50XCIsXCJzYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YjhcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0I4XCJ9XSxcInZlcnNpb25cIjoxfSxcImNyZWRpdF9jYXJkXCI6e1wiaWRcIjpcImNyZWRpdF9jYXJkXCIsXCJuYW1lXCI6XCJDcmVkaXQgQ2FyZFwiLFwia2V5d29yZHNcIjpbXCJtb25leVwiLFwic2FsZXNcIixcImRvbGxhclwiLFwiYmlsbFwiLFwicGF5bWVudFwiLFwic2hvcHBpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRiM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQjNcIn1dLFwidmVyc2lvblwiOjF9LFwicmVjZWlwdFwiOntcImlkXCI6XCJyZWNlaXB0XCIsXCJuYW1lXCI6XCJSZWNlaXB0XCIsXCJrZXl3b3Jkc1wiOltcImFjY291bnRpbmdcIixcImV4cGVuc2VzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREZFXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJjaGFydFwiOntcImlkXCI6XCJjaGFydFwiLFwibmFtZVwiOlwiQ2hhcnQgSW5jcmVhc2luZyB3aXRoIFllblwiLFwia2V5d29yZHNcIjpbXCJncmVlblwiLFwic3F1YXJlXCIsXCJncmFwaFwiLFwicHJlc2VudGF0aW9uXCIsXCJzdGF0c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGI5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENCOVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlbWFpbFwiOntcImlkXCI6XCJlbWFpbFwiLFwibmFtZVwiOlwiRW52ZWxvcGVcIixcImtleXdvcmRzXCI6W1wiZW1haWxcIixcImxldHRlclwiLFwicG9zdGFsXCIsXCJpbmJveFwiLFwiY29tbXVuaWNhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3MDktZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI3MDlcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZS1tYWlsXCI6e1wiaWRcIjpcImUtbWFpbFwiLFwibmFtZVwiOlwiRS1NYWlsXCIsXCJrZXl3b3Jkc1wiOltcImVcIixcIm1haWxcIixcImNvbW11bmljYXRpb25cIixcImluYm94XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZTdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0U3XCJ9XSxcInZlcnNpb25cIjoxfSxcImluY29taW5nX2VudmVsb3BlXCI6e1wiaWRcIjpcImluY29taW5nX2VudmVsb3BlXCIsXCJuYW1lXCI6XCJJbmNvbWluZyBFbnZlbG9wZVwiLFwia2V5d29yZHNcIjpbXCJlbWFpbFwiLFwiaW5ib3hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRlOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRThcIn1dLFwidmVyc2lvblwiOjF9LFwiZW52ZWxvcGVfd2l0aF9hcnJvd1wiOntcImlkXCI6XCJlbnZlbG9wZV93aXRoX2Fycm93XCIsXCJuYW1lXCI6XCJFbnZlbG9wZSB3aXRoIEFycm93XCIsXCJrZXl3b3Jkc1wiOltcImVtYWlsXCIsXCJjb21tdW5pY2F0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZTlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0U5XCJ9XSxcInZlcnNpb25cIjoxfSxcIm91dGJveF90cmF5XCI6e1wiaWRcIjpcIm91dGJveF90cmF5XCIsXCJuYW1lXCI6XCJPdXRib3ggVHJheVwiLFwia2V5d29yZHNcIjpbXCJpbmJveFwiLFwiZW1haWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRlNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRTRcIn1dLFwidmVyc2lvblwiOjF9LFwiaW5ib3hfdHJheVwiOntcImlkXCI6XCJpbmJveF90cmF5XCIsXCJuYW1lXCI6XCJJbmJveCBUcmF5XCIsXCJrZXl3b3Jkc1wiOltcImVtYWlsXCIsXCJkb2N1bWVudHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRlNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRTVcIn1dLFwidmVyc2lvblwiOjF9LFwicGFja2FnZVwiOntcImlkXCI6XCJwYWNrYWdlXCIsXCJuYW1lXCI6XCJQYWNrYWdlXCIsXCJrZXl3b3Jkc1wiOltcIm1haWxcIixcImdpZnRcIixcImNhcmRib2FyZFwiLFwiYm94XCIsXCJtb3ZpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRlNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRTZcIn1dLFwidmVyc2lvblwiOjF9LFwibWFpbGJveFwiOntcImlkXCI6XCJtYWlsYm94XCIsXCJuYW1lXCI6XCJDbG9zZWQgTWFpbGJveCB3aXRoIFJhaXNlZCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImVtYWlsXCIsXCJpbmJveFwiLFwiY29tbXVuaWNhdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGViXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENFQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtYWlsYm94X2Nsb3NlZFwiOntcImlkXCI6XCJtYWlsYm94X2Nsb3NlZFwiLFwibmFtZVwiOlwiQ2xvc2VkIE1haWxib3ggd2l0aCBMb3dlcmVkIEZsYWdcIixcImtleXdvcmRzXCI6W1wiZW1haWxcIixcImNvbW11bmljYXRpb25cIixcImluYm94XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZWFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0VBXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1haWxib3hfd2l0aF9tYWlsXCI6e1wiaWRcIjpcIm1haWxib3hfd2l0aF9tYWlsXCIsXCJuYW1lXCI6XCJPcGVuIE1haWxib3ggd2l0aCBSYWlzZWQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtYWlsXCIsXCJlbWFpbFwiLFwiaW5ib3hcIixcImNvbW11bmljYXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRUNcIn1dLFwidmVyc2lvblwiOjF9LFwibWFpbGJveF93aXRoX25vX21haWxcIjp7XCJpZFwiOlwibWFpbGJveF93aXRoX25vX21haWxcIixcIm5hbWVcIjpcIk9wZW4gTWFpbGJveCB3aXRoIExvd2VyZWQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJub1wiLFwibWFpbFwiLFwiZW1haWxcIixcImluYm94XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZWRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0VEXCJ9XSxcInZlcnNpb25cIjoxfSxcInBvc3Rib3hcIjp7XCJpZFwiOlwicG9zdGJveFwiLFwibmFtZVwiOlwiUG9zdGJveFwiLFwia2V5d29yZHNcIjpbXCJlbWFpbFwiLFwibGV0dGVyXCIsXCJlbnZlbG9wZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGVlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENFRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiYWxsb3RfYm94X3dpdGhfYmFsbG90XCI6e1wiaWRcIjpcImJhbGxvdF9ib3hfd2l0aF9iYWxsb3RcIixcIm5hbWVcIjpcIkJhbGxvdCBCb3ggd2l0aCBCYWxsb3RcIixcImtleXdvcmRzXCI6W1wiZWxlY3Rpb25cIixcInZvdGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjVmMy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RERGM1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwZW5jaWwyXCI6e1wiaWRcIjpcInBlbmNpbDJcIixcIm5hbWVcIjpcIlBlbmNpbFwiLFwia2V5d29yZHNcIjpbXCJwZW5jaWwyXCIsXCJzdGF0aW9uZXJ5XCIsXCJ3cml0ZVwiLFwicGFwZXJcIixcIndyaXRpbmdcIixcInNjaG9vbFwiLFwic3R1ZHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzBmLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNzBGXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJsYWNrX25pYlwiOntcImlkXCI6XCJibGFja19uaWJcIixcIm5hbWVcIjpcIkJsYWNrIE5pYlwiLFwia2V5d29yZHNcIjpbXCJwZW5cIixcInN0YXRpb25lcnlcIixcIndyaXRpbmdcIixcIndyaXRlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjcxMi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjcxMlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsb3dlcl9sZWZ0X2ZvdW50YWluX3BlblwiOntcImlkXCI6XCJsb3dlcl9sZWZ0X2ZvdW50YWluX3BlblwiLFwibmFtZVwiOlwiRm91bnRhaW4gUGVuXCIsXCJrZXl3b3Jkc1wiOltcImxvd2VyXCIsXCJsZWZ0XCIsXCJzdGF0aW9uZXJ5XCIsXCJ3cml0aW5nXCIsXCJ3cml0ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNThiLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDhCXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImxvd2VyX2xlZnRfYmFsbHBvaW50X3BlblwiOntcImlkXCI6XCJsb3dlcl9sZWZ0X2JhbGxwb2ludF9wZW5cIixcIm5hbWVcIjpcIlBlblwiLFwia2V5d29yZHNcIjpbXCJsb3dlclwiLFwibGVmdFwiLFwiYmFsbHBvaW50XCIsXCJzdGF0aW9uZXJ5XCIsXCJ3cml0aW5nXCIsXCJ3cml0ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNThhLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDhBXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImxvd2VyX2xlZnRfcGFpbnRicnVzaFwiOntcImlkXCI6XCJsb3dlcl9sZWZ0X3BhaW50YnJ1c2hcIixcIm5hbWVcIjpcIlBhaW50YnJ1c2hcIixcImtleXdvcmRzXCI6W1wibG93ZXJcIixcImxlZnRcIixcImRyYXdpbmdcIixcImNyZWF0aXZpdHlcIixcImFydFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNThjLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDhDXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImxvd2VyX2xlZnRfY3JheW9uXCI6e1wiaWRcIjpcImxvd2VyX2xlZnRfY3JheW9uXCIsXCJuYW1lXCI6XCJDcmF5b25cIixcImtleXdvcmRzXCI6W1wibG93ZXJcIixcImxlZnRcIixcImRyYXdpbmdcIixcImNyZWF0aXZpdHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjU4ZC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQ4RFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtZW1vXCI6e1wiaWRcIjpcIm1lbW9cIixcIm5hbWVcIjpcIk1lbW9cIixcImtleXdvcmRzXCI6W1wicGVuY2lsXCIsXCJ3cml0ZVwiLFwiZG9jdW1lbnRzXCIsXCJzdGF0aW9uZXJ5XCIsXCJwYXBlclwiLFwid3JpdGluZ1wiLFwibGVnYWxcIixcImV4YW1cIixcInF1aXpcIixcInRlc3RcIixcInN0dWR5XCIsXCJjb21wb3NlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZGRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0REXCJ9XSxcInZlcnNpb25cIjoxfSxcImJyaWVmY2FzZVwiOntcImlkXCI6XCJicmllZmNhc2VcIixcIm5hbWVcIjpcIkJyaWVmY2FzZVwiLFwia2V5d29yZHNcIjpbXCJidXNpbmVzc1wiLFwiZG9jdW1lbnRzXCIsXCJ3b3JrXCIsXCJsYXdcIixcImxlZ2FsXCIsXCJqb2JcIixcImNhcmVlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENCQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmaWxlX2ZvbGRlclwiOntcImlkXCI6XCJmaWxlX2ZvbGRlclwiLFwibmFtZVwiOlwiRmlsZSBGb2xkZXJcIixcImtleXdvcmRzXCI6W1wiZG9jdW1lbnRzXCIsXCJidXNpbmVzc1wiLFwib2ZmaWNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YzFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0MxXCJ9XSxcInZlcnNpb25cIjoxfSxcIm9wZW5fZmlsZV9mb2xkZXJcIjp7XCJpZFwiOlwib3Blbl9maWxlX2ZvbGRlclwiLFwibmFtZVwiOlwiT3BlbiBGaWxlIEZvbGRlclwiLFwia2V5d29yZHNcIjpbXCJkb2N1bWVudHNcIixcImxvYWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRjMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQzJcIn1dLFwidmVyc2lvblwiOjF9LFwiY2FyZF9pbmRleF9kaXZpZGVyc1wiOntcImlkXCI6XCJjYXJkX2luZGV4X2RpdmlkZXJzXCIsXCJuYW1lXCI6XCJDYXJkIEluZGV4IERpdmlkZXJzXCIsXCJrZXl3b3Jkc1wiOltcIm9yZ2FuaXppbmdcIixcImJ1c2luZXNzXCIsXCJzdGF0aW9uZXJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1YzItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREQzJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZGF0ZVwiOntcImlkXCI6XCJkYXRlXCIsXCJuYW1lXCI6XCJDYWxlbmRhclwiLFwia2V5d29yZHNcIjpbXCJkYXRlXCIsXCJzY2hlZHVsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGM1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENDNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYWxlbmRhclwiOntcImlkXCI6XCJjYWxlbmRhclwiLFwibmFtZVwiOlwiVGVhci1vZmYgQ2FsZW5kYXJcIixcImtleXdvcmRzXCI6W1widGVhclwiLFwib2ZmXCIsXCJzY2hlZHVsZVwiLFwiZGF0ZVwiLFwicGxhbm5pbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRjNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQzZcIn1dLFwidmVyc2lvblwiOjF9LFwic3BpcmFsX25vdGVfcGFkXCI6e1wiaWRcIjpcInNwaXJhbF9ub3RlX3BhZFwiLFwibmFtZVwiOlwiU3BpcmFsIE5vdGVwYWRcIixcImtleXdvcmRzXCI6W1wibm90ZVwiLFwicGFkXCIsXCJtZW1vXCIsXCJzdGF0aW9uZXJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1ZDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURERDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic3BpcmFsX2NhbGVuZGFyX3BhZFwiOntcImlkXCI6XCJzcGlyYWxfY2FsZW5kYXJfcGFkXCIsXCJuYW1lXCI6XCJTcGlyYWwgQ2FsZW5kYXJcIixcImtleXdvcmRzXCI6W1wicGFkXCIsXCJkYXRlXCIsXCJzY2hlZHVsZVwiLFwicGxhbm5pbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjVkMy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REREM1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYXJkX2luZGV4XCI6e1wiaWRcIjpcImNhcmRfaW5kZXhcIixcIm5hbWVcIjpcIkNhcmQgSW5kZXhcIixcImtleXdvcmRzXCI6W1wiYnVzaW5lc3NcIixcInN0YXRpb25lcnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRjN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQzdcIn1dLFwidmVyc2lvblwiOjF9LFwiY2hhcnRfd2l0aF91cHdhcmRzX3RyZW5kXCI6e1wiaWRcIjpcImNoYXJ0X3dpdGhfdXB3YXJkc190cmVuZFwiLFwibmFtZVwiOlwiQ2hhcnQgSW5jcmVhc2luZ1wiLFwia2V5d29yZHNcIjpbXCJ3aXRoXCIsXCJ1cHdhcmRzXCIsXCJ0cmVuZFwiLFwiZ3JhcGhcIixcInByZXNlbnRhdGlvblwiLFwic3RhdHNcIixcInJlY292ZXJ5XCIsXCJidXNpbmVzc1wiLFwiZWNvbm9taWNzXCIsXCJtb25leVwiLFwic2FsZXNcIixcImdvb2RcIixcInN1Y2Nlc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRjOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQzhcIn1dLFwidmVyc2lvblwiOjF9LFwiY2hhcnRfd2l0aF9kb3dud2FyZHNfdHJlbmRcIjp7XCJpZFwiOlwiY2hhcnRfd2l0aF9kb3dud2FyZHNfdHJlbmRcIixcIm5hbWVcIjpcIkNoYXJ0IERlY3JlYXNpbmdcIixcImtleXdvcmRzXCI6W1wid2l0aFwiLFwiZG93bndhcmRzXCIsXCJ0cmVuZFwiLFwiZ3JhcGhcIixcInByZXNlbnRhdGlvblwiLFwic3RhdHNcIixcInJlY2Vzc2lvblwiLFwiYnVzaW5lc3NcIixcImVjb25vbWljc1wiLFwibW9uZXlcIixcInNhbGVzXCIsXCJiYWRcIixcImZhaWx1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRjOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQzlcIn1dLFwidmVyc2lvblwiOjF9LFwiYmFyX2NoYXJ0XCI6e1wiaWRcIjpcImJhcl9jaGFydFwiLFwibmFtZVwiOlwiQmFyIENoYXJ0XCIsXCJrZXl3b3Jkc1wiOltcImdyYXBoXCIsXCJwcmVzZW50YXRpb25cIixcInN0YXRzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0Y2FcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0NBXCJ9XSxcInZlcnNpb25cIjoxfSxcImNsaXBib2FyZFwiOntcImlkXCI6XCJjbGlwYm9hcmRcIixcIm5hbWVcIjpcIkNsaXBib2FyZFwiLFwia2V5d29yZHNcIjpbXCJzdGF0aW9uZXJ5XCIsXCJkb2N1bWVudHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRjYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQ0JcIn1dLFwidmVyc2lvblwiOjF9LFwicHVzaHBpblwiOntcImlkXCI6XCJwdXNocGluXCIsXCJuYW1lXCI6XCJQdXNocGluXCIsXCJrZXl3b3Jkc1wiOltcInN0YXRpb25lcnlcIixcIm1hcmtcIixcImhlcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRjY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQ0NcIn1dLFwidmVyc2lvblwiOjF9LFwicm91bmRfcHVzaHBpblwiOntcImlkXCI6XCJyb3VuZF9wdXNocGluXCIsXCJuYW1lXCI6XCJSb3VuZCBQdXNocGluXCIsXCJrZXl3b3Jkc1wiOltcInN0YXRpb25lcnlcIixcImxvY2F0aW9uXCIsXCJtYXBcIixcImhlcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRjZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDQ0RcIn1dLFwidmVyc2lvblwiOjF9LFwicGFwZXJjbGlwXCI6e1wiaWRcIjpcInBhcGVyY2xpcFwiLFwibmFtZVwiOlwiUGFwZXJjbGlwXCIsXCJrZXl3b3Jkc1wiOltcImRvY3VtZW50c1wiLFwic3RhdGlvbmVyeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGNlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENDRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsaW5rZWRfcGFwZXJjbGlwc1wiOntcImlkXCI6XCJsaW5rZWRfcGFwZXJjbGlwc1wiLFwibmFtZVwiOlwiTGlua2VkIFBhcGVyY2xpcHNcIixcImtleXdvcmRzXCI6W1wiZG9jdW1lbnRzXCIsXCJzdGF0aW9uZXJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1ODctZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREODdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic3RyYWlnaHRfcnVsZXJcIjp7XCJpZFwiOlwic3RyYWlnaHRfcnVsZXJcIixcIm5hbWVcIjpcIlN0cmFpZ2h0IFJ1bGVyXCIsXCJrZXl3b3Jkc1wiOltcInN0YXRpb25lcnlcIixcImNhbGN1bGF0ZVwiLFwibGVuZ3RoXCIsXCJtYXRoXCIsXCJzY2hvb2xcIixcImRyYXdpbmdcIixcImFyY2hpdGVjdFwiLFwic2tldGNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0Y2ZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0NGXCJ9XSxcInZlcnNpb25cIjoxfSxcInRyaWFuZ3VsYXJfcnVsZXJcIjp7XCJpZFwiOlwidHJpYW5ndWxhcl9ydWxlclwiLFwibmFtZVwiOlwiVHJpYW5ndWxhciBSdWxlclwiLFwia2V5d29yZHNcIjpbXCJzdGF0aW9uZXJ5XCIsXCJtYXRoXCIsXCJhcmNoaXRlY3RcIixcInNrZXRjaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGQwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENEMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzY2lzc29yc1wiOntcImlkXCI6XCJzY2lzc29yc1wiLFwibmFtZVwiOlwiU2Npc3NvcnNcIixcImtleXdvcmRzXCI6W1wic3RhdGlvbmVyeVwiLFwiY3V0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjcwMi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjcwMlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYXJkX2ZpbGVfYm94XCI6e1wiaWRcIjpcImNhcmRfZmlsZV9ib3hcIixcIm5hbWVcIjpcIkNhcmQgRmlsZSBCb3hcIixcImtleXdvcmRzXCI6W1wiYnVzaW5lc3NcIixcInN0YXRpb25lcnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjVjMy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RERDM1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmaWxlX2NhYmluZXRcIjp7XCJpZFwiOlwiZmlsZV9jYWJpbmV0XCIsXCJuYW1lXCI6XCJGaWxlIENhYmluZXRcIixcImtleXdvcmRzXCI6W1wiZmlsaW5nXCIsXCJvcmdhbml6aW5nXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1YzQtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREQzRcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwid2FzdGViYXNrZXRcIjp7XCJpZFwiOlwid2FzdGViYXNrZXRcIixcIm5hbWVcIjpcIldhc3RlYmFza2V0XCIsXCJrZXl3b3Jkc1wiOltcImJpblwiLFwidHJhc2hcIixcInJ1YmJpc2hcIixcImdhcmJhZ2VcIixcInRvc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjVkMS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REREMVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsb2NrXCI6e1wiaWRcIjpcImxvY2tcIixcIm5hbWVcIjpcIkxvY2tcIixcImtleXdvcmRzXCI6W1wibG9ja2VkXCIsXCJzZWN1cml0eVwiLFwicGFzc3dvcmRcIixcInBhZGxvY2tcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUxMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMTJcIn1dLFwidmVyc2lvblwiOjF9LFwidW5sb2NrXCI6e1wiaWRcIjpcInVubG9ja1wiLFwibmFtZVwiOlwiVW5sb2NrZWRcIixcImtleXdvcmRzXCI6W1widW5sb2NrXCIsXCJwcml2YWN5XCIsXCJzZWN1cml0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTEzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQxM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsb2NrX3dpdGhfaW5rX3BlblwiOntcImlkXCI6XCJsb2NrX3dpdGhfaW5rX3BlblwiLFwibmFtZVwiOlwiTG9ja2VkIHdpdGggUGVuXCIsXCJrZXl3b3Jkc1wiOltcImxvY2tcIixcImlua1wiLFwic2VjdXJpdHlcIixcInNlY3JldFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbG9zZWRfbG9ja193aXRoX2tleVwiOntcImlkXCI6XCJjbG9zZWRfbG9ja193aXRoX2tleVwiLFwibmFtZVwiOlwiTG9ja2VkIHdpdGggS2V5XCIsXCJrZXl3b3Jkc1wiOltcImNsb3NlZFwiLFwibG9ja1wiLFwic2VjdXJpdHlcIixcInByaXZhY3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUxMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMTBcIn1dLFwidmVyc2lvblwiOjF9LFwia2V5XCI6e1wiaWRcIjpcImtleVwiLFwibmFtZVwiOlwiS2V5XCIsXCJrZXl3b3Jkc1wiOltcImxvY2tcIixcImRvb3JcIixcInBhc3N3b3JkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MTFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDExXCJ9XSxcInZlcnNpb25cIjoxfSxcIm9sZF9rZXlcIjp7XCJpZFwiOlwib2xkX2tleVwiLFwibmFtZVwiOlwiT2xkIEtleVwiLFwia2V5d29yZHNcIjpbXCJsb2NrXCIsXCJkb29yXCIsXCJwYXNzd29yZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNWRkLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEREREXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImhhbW1lclwiOntcImlkXCI6XCJoYW1tZXJcIixcIm5hbWVcIjpcIkhhbW1lclwiLFwia2V5d29yZHNcIjpbXCJ0b29sc1wiLFwiYnVpbGRcIixcImNyZWF0ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTI4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQyOFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJheGVcIjp7XCJpZFwiOlwiYXhlXCIsXCJuYW1lXCI6XCJBeGVcIixcImtleXdvcmRzXCI6W1widG9vbFwiLFwiY2hvcFwiLFwiY3V0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhOTNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTkzXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJwaWNrXCI6e1wiaWRcIjpcInBpY2tcIixcIm5hbWVcIjpcIlBpY2tcIixcImtleXdvcmRzXCI6W1widG9vbHNcIixcImRpZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2Y2YtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2Q0ZcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiaGFtbWVyX2FuZF9waWNrXCI6e1wiaWRcIjpcImhhbW1lcl9hbmRfcGlja1wiLFwibmFtZVwiOlwiSGFtbWVyIGFuZCBQaWNrXCIsXCJrZXl3b3Jkc1wiOltcInRvb2xzXCIsXCJidWlsZFwiLFwiY3JlYXRlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY5Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjY5Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoYW1tZXJfYW5kX3dyZW5jaFwiOntcImlkXCI6XCJoYW1tZXJfYW5kX3dyZW5jaFwiLFwibmFtZVwiOlwiSGFtbWVyIGFuZCBXcmVuY2hcIixcImtleXdvcmRzXCI6W1widG9vbHNcIixcImJ1aWxkXCIsXCJjcmVhdGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZlMC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVFMFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkYWdnZXJfa25pZmVcIjp7XCJpZFwiOlwiZGFnZ2VyX2tuaWZlXCIsXCJuYW1lXCI6XCJEYWdnZXJcIixcImtleXdvcmRzXCI6W1wia25pZmVcIixcIndlYXBvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNWUxLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEREUxXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImNyb3NzZWRfc3dvcmRzXCI6e1wiaWRcIjpcImNyb3NzZWRfc3dvcmRzXCIsXCJuYW1lXCI6XCJDcm9zc2VkIFN3b3Jkc1wiLFwia2V5d29yZHNcIjpbXCJ3ZWFwb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjk0LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjk0XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJvbWJcIjp7XCJpZFwiOlwiYm9tYlwiLFwibmFtZVwiOlwiQm9tYlwiLFwia2V5d29yZHNcIjpbXCJib29tXCIsXCJleHBsb2RlXCIsXCJleHBsb3Npb25cIixcInRlcnJvcmlzbVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGEzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENBM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJib29tZXJhbmdcIjp7XCJpZFwiOlwiYm9vbWVyYW5nXCIsXCJuYW1lXCI6XCJCb29tZXJhbmdcIixcImtleXdvcmRzXCI6W1wid2VhcG9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhODNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTgzXCJ9XSxcInZlcnNpb25cIjoxM30sXCJib3dfYW5kX2Fycm93XCI6e1wiaWRcIjpcImJvd19hbmRfYXJyb3dcIixcIm5hbWVcIjpcIkJvdyBhbmQgQXJyb3dcIixcImtleXdvcmRzXCI6W1wic3BvcnRzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZjlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkY5XCJ9XSxcInZlcnNpb25cIjoxfSxcInNoaWVsZFwiOntcImlkXCI6XCJzaGllbGRcIixcIm5hbWVcIjpcIlNoaWVsZFwiLFwia2V5d29yZHNcIjpbXCJwcm90ZWN0aW9uXCIsXCJzZWN1cml0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmUxLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUUxXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImNhcnBlbnRyeV9zYXdcIjp7XCJpZFwiOlwiY2FycGVudHJ5X3Nhd1wiLFwibmFtZVwiOlwiQ2FycGVudHJ5IFNhd1wiLFwia2V5d29yZHNcIjpbXCJjdXRcIixcImNob3BcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE5YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFOUFcIn1dLFwidmVyc2lvblwiOjEzfSxcIndyZW5jaFwiOntcImlkXCI6XCJ3cmVuY2hcIixcIm5hbWVcIjpcIldyZW5jaFwiLFwia2V5d29yZHNcIjpbXCJ0b29sc1wiLFwiZGl5XCIsXCJpa2VhXCIsXCJmaXhcIixcIm1haW50YWluZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUyN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMjdcIn1dLFwidmVyc2lvblwiOjF9LFwic2NyZXdkcml2ZXJcIjp7XCJpZFwiOlwic2NyZXdkcml2ZXJcIixcIm5hbWVcIjpcIlNjcmV3ZHJpdmVyXCIsXCJrZXl3b3Jkc1wiOltcInRvb2xzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhOWJcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTlCXCJ9XSxcInZlcnNpb25cIjoxM30sXCJudXRfYW5kX2JvbHRcIjp7XCJpZFwiOlwibnV0X2FuZF9ib2x0XCIsXCJuYW1lXCI6XCJOdXQgYW5kIEJvbHRcIixcImtleXdvcmRzXCI6W1wiaGFuZHlcIixcInRvb2xzXCIsXCJmaXhcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUyOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMjlcIn1dLFwidmVyc2lvblwiOjF9LFwiZ2VhclwiOntcImlkXCI6XCJnZWFyXCIsXCJuYW1lXCI6XCJHZWFyXCIsXCJrZXl3b3Jkc1wiOltcImNvZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2OTktZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2OTlcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY29tcHJlc3Npb25cIjp7XCJpZFwiOlwiY29tcHJlc3Npb25cIixcIm5hbWVcIjpcIkNsYW1wXCIsXCJrZXl3b3Jkc1wiOltcImNvbXByZXNzaW9uXCIsXCJ0b29sXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1ZGMtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURERENcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic2NhbGVzXCI6e1wiaWRcIjpcInNjYWxlc1wiLFwibmFtZVwiOlwiQmFsYW5jZSBTY2FsZVwiLFwia2V5d29yZHNcIjpbXCJzY2FsZXNcIixcImxhd1wiLFwiZmFpcm5lc3NcIixcIndlaWdodFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2OTYtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2OTZcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwicHJvYmluZ19jYW5lXCI6e1wiaWRcIjpcInByb2JpbmdfY2FuZVwiLFwibmFtZVwiOlwiV2hpdGUgQ2FuZVwiLFwia2V5d29yZHNcIjpbXCJwcm9iaW5nXCIsXCJhY2Nlc3NpYmlsaXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREFGXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJsaW5rXCI6e1wiaWRcIjpcImxpbmtcIixcIm5hbWVcIjpcIkxpbmtcIixcImtleXdvcmRzXCI6W1wicmluZ3NcIixcInVybFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTE3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQxN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjaGFpbnNcIjp7XCJpZFwiOlwiY2hhaW5zXCIsXCJuYW1lXCI6XCJDaGFpbnNcIixcImtleXdvcmRzXCI6W1wibG9ja1wiLFwiYXJyZXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZkMy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjZEM1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJob29rXCI6e1wiaWRcIjpcImhvb2tcIixcIm5hbWVcIjpcIkhvb2tcIixcImtleXdvcmRzXCI6W1widG9vbHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE5ZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFOURcIn1dLFwidmVyc2lvblwiOjEzfSxcInRvb2xib3hcIjp7XCJpZFwiOlwidG9vbGJveFwiLFwibmFtZVwiOlwiVG9vbGJveFwiLFwia2V5d29yZHNcIjpbXCJ0b29sc1wiLFwiZGl5XCIsXCJmaXhcIixcIm1haW50YWluZXJcIixcIm1lY2hhbmljXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZjBcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREYwXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJtYWduZXRcIjp7XCJpZFwiOlwibWFnbmV0XCIsXCJuYW1lXCI6XCJNYWduZXRcIixcImtleXdvcmRzXCI6W1wiYXR0cmFjdGlvblwiLFwibWFnbmV0aWNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlmMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERjJcIn1dLFwidmVyc2lvblwiOjExfSxcImxhZGRlclwiOntcImlkXCI6XCJsYWRkZXJcIixcIm5hbWVcIjpcIkxhZGRlclwiLFwia2V5d29yZHNcIjpbXCJ0b29sc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTljXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU5Q1wifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiYWxlbWJpY1wiOntcImlkXCI6XCJhbGVtYmljXCIsXCJuYW1lXCI6XCJBbGVtYmljXCIsXCJrZXl3b3Jkc1wiOltcImRpc3RpbGxpbmdcIixcInNjaWVuY2VcIixcImV4cGVyaW1lbnRcIixcImNoZW1pc3RyeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2OTctZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2OTdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwidGVzdF90dWJlXCI6e1wiaWRcIjpcInRlc3RfdHViZVwiLFwibmFtZVwiOlwiVGVzdCBUdWJlXCIsXCJrZXl3b3Jkc1wiOltcImNoZW1pc3RyeVwiLFwiZXhwZXJpbWVudFwiLFwibGFiXCIsXCJzY2llbmNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZWFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREVBXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJwZXRyaV9kaXNoXCI6e1wiaWRcIjpcInBldHJpX2Rpc2hcIixcIm5hbWVcIjpcIlBldHJpIERpc2hcIixcImtleXdvcmRzXCI6W1wiYmFjdGVyaWFcIixcImJpb2xvZ3lcIixcImN1bHR1cmVcIixcImxhYlwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWViXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERFQlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiZG5hXCI6e1wiaWRcIjpcImRuYVwiLFwibmFtZVwiOlwiRG5hXCIsXCJrZXl3b3Jkc1wiOltcImJpb2xvZ2lzdFwiLFwiZ2VuZXRpY3NcIixcImxpZmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjllY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERUNcIn1dLFwidmVyc2lvblwiOjExfSxcIm1pY3Jvc2NvcGVcIjp7XCJpZFwiOlwibWljcm9zY29wZVwiLFwibmFtZVwiOlwiTWljcm9zY29wZVwiLFwia2V5d29yZHNcIjpbXCJsYWJvcmF0b3J5XCIsXCJleHBlcmltZW50XCIsXCJ6b29taW5cIixcInNjaWVuY2VcIixcInN0dWR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MmNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDJDXCJ9XSxcInZlcnNpb25cIjoxfSxcInRlbGVzY29wZVwiOntcImlkXCI6XCJ0ZWxlc2NvcGVcIixcIm5hbWVcIjpcIlRlbGVzY29wZVwiLFwia2V5d29yZHNcIjpbXCJzdGFyc1wiLFwic3BhY2VcIixcInpvb21cIixcInNjaWVuY2VcIixcImFzdHJvbm9teVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTJkXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQyRFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzYXRlbGxpdGVfYW50ZW5uYVwiOntcImlkXCI6XCJzYXRlbGxpdGVfYW50ZW5uYVwiLFwibmFtZVwiOlwiU2F0ZWxsaXRlIEFudGVubmFcIixcImtleXdvcmRzXCI6W1wiY29tbXVuaWNhdGlvblwiLFwiZnV0dXJlXCIsXCJyYWRpb1wiLFwic3BhY2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRlMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRTFcIn1dLFwidmVyc2lvblwiOjF9LFwic3lyaW5nZVwiOntcImlkXCI6XCJzeXJpbmdlXCIsXCJuYW1lXCI6XCJTeXJpbmdlXCIsXCJrZXl3b3Jkc1wiOltcImhlYWx0aFwiLFwiaG9zcGl0YWxcIixcImRydWdzXCIsXCJibG9vZFwiLFwibWVkaWNpbmVcIixcIm5lZWRsZVwiLFwiZG9jdG9yXCIsXCJudXJzZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNDg5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REM4OVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJkcm9wX29mX2Jsb29kXCI6e1wiaWRcIjpcImRyb3Bfb2ZfYmxvb2RcIixcIm5hbWVcIjpcIkRyb3Agb2YgQmxvb2RcIixcImtleXdvcmRzXCI6W1wicGVyaW9kXCIsXCJodXJ0XCIsXCJoYXJtXCIsXCJ3b3VuZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTc4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU3OFwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwicGlsbFwiOntcImlkXCI6XCJwaWxsXCIsXCJuYW1lXCI6XCJQaWxsXCIsXCJrZXl3b3Jkc1wiOltcImhlYWx0aFwiLFwibWVkaWNpbmVcIixcImRvY3RvclwiLFwicGhhcm1hY3lcIixcImRydWdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjQ4YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDOEFcIn1dLFwidmVyc2lvblwiOjF9LFwiYWRoZXNpdmVfYmFuZGFnZVwiOntcImlkXCI6XCJhZGhlc2l2ZV9iYW5kYWdlXCIsXCJuYW1lXCI6XCJBZGhlc2l2ZSBCYW5kYWdlXCIsXCJrZXl3b3Jkc1wiOltcImhlYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE3OVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFNzlcIn1dLFwidmVyc2lvblwiOjEyfSxcImNydXRjaFwiOntcImlkXCI6XCJjcnV0Y2hcIixcIm5hbWVcIjpcIkNydXRjaFwiLFwia2V5d29yZHNcIjpbXCJhY2Nlc3NpYmlsaXR5XCIsXCJhc3Npc3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE3Y1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFN0NcIn1dLFwidmVyc2lvblwiOjE0fSxcInN0ZXRob3Njb3BlXCI6e1wiaWRcIjpcInN0ZXRob3Njb3BlXCIsXCJuYW1lXCI6XCJTdGV0aG9zY29wZVwiLFwia2V5d29yZHNcIjpbXCJoZWFsdGhcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE3YVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFN0FcIn1dLFwidmVyc2lvblwiOjEyfSxcIngtcmF5XCI6e1wiaWRcIjpcIngtcmF5XCIsXCJuYW1lXCI6XCJYLVJheVwiLFwia2V5d29yZHNcIjpbXCJ4XCIsXCJyYXlcIixcInNrZWxldG9uXCIsXCJtZWRpY2luZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYTdiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REU3QlwifV0sXCJ2ZXJzaW9uXCI6MTR9LFwiZG9vclwiOntcImlkXCI6XCJkb29yXCIsXCJuYW1lXCI6XCJEb29yXCIsXCJrZXl3b3Jkc1wiOltcImhvdXNlXCIsXCJlbnRyeVwiLFwiZXhpdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmFhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlbGV2YXRvclwiOntcImlkXCI6XCJlbGV2YXRvclwiLFwibmFtZVwiOlwiRWxldmF0b3JcIixcImtleXdvcmRzXCI6W1wibGlmdFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmQ3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVEN1wifV0sXCJ2ZXJzaW9uXCI6MTN9LFwibWlycm9yXCI6e1wiaWRcIjpcIm1pcnJvclwiLFwibmFtZVwiOlwiTWlycm9yXCIsXCJrZXl3b3Jkc1wiOltcInJlZmxlY3Rpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE5ZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFOUVcIn1dLFwidmVyc2lvblwiOjEzfSxcIndpbmRvd1wiOntcImlkXCI6XCJ3aW5kb3dcIixcIm5hbWVcIjpcIldpbmRvd1wiLFwia2V5d29yZHNcIjpbXCJzY2VuZXJ5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhOWZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERTlGXCJ9XSxcInZlcnNpb25cIjoxM30sXCJiZWRcIjp7XCJpZFwiOlwiYmVkXCIsXCJuYW1lXCI6XCJCZWRcIixcImtleXdvcmRzXCI6W1wic2xlZXBcIixcInJlc3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZjZi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVDRlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjb3VjaF9hbmRfbGFtcFwiOntcImlkXCI6XCJjb3VjaF9hbmRfbGFtcFwiLFwibmFtZVwiOlwiQ291Y2ggYW5kIExhbXBcIixcImtleXdvcmRzXCI6W1wicmVhZFwiLFwiY2hpbGxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZjYi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVDQlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjaGFpclwiOntcImlkXCI6XCJjaGFpclwiLFwibmFtZVwiOlwiQ2hhaXJcIixcImtleXdvcmRzXCI6W1wic2l0XCIsXCJmdXJuaXR1cmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE5MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFOTFcIn1dLFwidmVyc2lvblwiOjEyfSxcInRvaWxldFwiOntcImlkXCI6XCJ0b2lsZXRcIixcIm5hbWVcIjpcIlRvaWxldFwiLFwia2V5d29yZHNcIjpbXCJyZXN0cm9vbVwiLFwid2NcIixcIndhc2hyb29tXCIsXCJiYXRocm9vbVwiLFwicG90dHlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZiZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQkRcIn1dLFwidmVyc2lvblwiOjF9LFwicGx1bmdlclwiOntcImlkXCI6XCJwbHVuZ2VyXCIsXCJuYW1lXCI6XCJQbHVuZ2VyXCIsXCJrZXl3b3Jkc1wiOltcInRvaWxldFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWEwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVBMFwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwic2hvd2VyXCI6e1wiaWRcIjpcInNob3dlclwiLFwibmFtZVwiOlwiU2hvd2VyXCIsXCJrZXl3b3Jkc1wiOltcImNsZWFuXCIsXCJ3YXRlclwiLFwiYmF0aHJvb21cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZiZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQkZcIn1dLFwidmVyc2lvblwiOjF9LFwiYmF0aHR1YlwiOntcImlkXCI6XCJiYXRodHViXCIsXCJuYW1lXCI6XCJCYXRodHViXCIsXCJrZXl3b3Jkc1wiOltcImNsZWFuXCIsXCJzaG93ZXJcIixcImJhdGhyb29tXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YzFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUMxXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1vdXNlX3RyYXBcIjp7XCJpZFwiOlwibW91c2VfdHJhcFwiLFwibmFtZVwiOlwiTW91c2UgVHJhcFwiLFwia2V5d29yZHNcIjpbXCJjaGVlc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFhNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQTRcIn1dLFwidmVyc2lvblwiOjEzfSxcInJhem9yXCI6e1wiaWRcIjpcInJhem9yXCIsXCJuYW1lXCI6XCJSYXpvclwiLFwia2V5d29yZHNcIjpbXCJjdXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmE5MlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFOTJcIn1dLFwidmVyc2lvblwiOjEyfSxcImxvdGlvbl9ib3R0bGVcIjp7XCJpZFwiOlwibG90aW9uX2JvdHRsZVwiLFwibmFtZVwiOlwiTG90aW9uIEJvdHRsZVwiLFwia2V5d29yZHNcIjpbXCJtb2lzdHVyaXplclwiLFwic3Vuc2NyZWVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZjRcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREY0XCJ9XSxcInZlcnNpb25cIjoxMX0sXCJzYWZldHlfcGluXCI6e1wiaWRcIjpcInNhZmV0eV9waW5cIixcIm5hbWVcIjpcIlNhZmV0eSBQaW5cIixcImtleXdvcmRzXCI6W1wiZGlhcGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY5ZjdcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVEREY3XCJ9XSxcInZlcnNpb25cIjoxMX0sXCJicm9vbVwiOntcImlkXCI6XCJicm9vbVwiLFwibmFtZVwiOlwiQnJvb21cIixcImtleXdvcmRzXCI6W1wiY2xlYW5pbmdcIixcInN3ZWVwaW5nXCIsXCJ3aXRjaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERGOVwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiYmFza2V0XCI6e1wiaWRcIjpcImJhc2tldFwiLFwibmFtZVwiOlwiQmFza2V0XCIsXCJrZXl3b3Jkc1wiOltcImxhdW5kcnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlmYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERkFcIn1dLFwidmVyc2lvblwiOjExfSxcInJvbGxfb2ZfcGFwZXJcIjp7XCJpZFwiOlwicm9sbF9vZl9wYXBlclwiLFwibmFtZVwiOlwiUm9sbCBvZiBQYXBlclwiLFwia2V5d29yZHNcIjpbXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERGQlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiYnVja2V0XCI6e1wiaWRcIjpcImJ1Y2tldFwiLFwibmFtZVwiOlwiQnVja2V0XCIsXCJrZXl3b3Jkc1wiOltcIndhdGVyXCIsXCJjb250YWluZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFhM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQTNcIn1dLFwidmVyc2lvblwiOjEzfSxcInNvYXBcIjp7XCJpZFwiOlwic29hcFwiLFwibmFtZVwiOlwiU29hcFwiLFwia2V5d29yZHNcIjpbXCJiYXJcIixcImJhdGhpbmdcIixcImNsZWFuaW5nXCIsXCJsYXRoZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERkNcIn1dLFwidmVyc2lvblwiOjExfSxcImJ1YmJsZXNcIjp7XCJpZFwiOlwiYnViYmxlc1wiLFwibmFtZVwiOlwiQnViYmxlc1wiLFwia2V5d29yZHNcIjpbXCJzb2FwXCIsXCJmdW5cIixcImNhcmJvbmF0aW9uXCIsXCJzcGFya2xpbmdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFlN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFRTdcIn1dLFwidmVyc2lvblwiOjE0fSxcInRvb3RoYnJ1c2hcIjp7XCJpZFwiOlwidG9vdGhicnVzaFwiLFwibmFtZVwiOlwiVG9vdGhicnVzaFwiLFwia2V5d29yZHNcIjpbXCJoeWdpZW5lXCIsXCJkZW50YWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZmFhNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURFQTVcIn1dLFwidmVyc2lvblwiOjEzfSxcInNwb25nZVwiOntcImlkXCI6XCJzcG9uZ2VcIixcIm5hbWVcIjpcIlNwb25nZVwiLFwia2V5d29yZHNcIjpbXCJhYnNvcmJpbmdcIixcImNsZWFuaW5nXCIsXCJwb3JvdXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjlmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERkRcIn1dLFwidmVyc2lvblwiOjExfSxcImZpcmVfZXh0aW5ndWlzaGVyXCI6e1wiaWRcIjpcImZpcmVfZXh0aW5ndWlzaGVyXCIsXCJuYW1lXCI6XCJGaXJlIEV4dGluZ3Vpc2hlclwiLFwia2V5d29yZHNcIjpbXCJxdWVuY2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjllZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0VcdURERUZcIn1dLFwidmVyc2lvblwiOjExfSxcInNob3BwaW5nX3Ryb2xsZXlcIjp7XCJpZFwiOlwic2hvcHBpbmdfdHJvbGxleVwiLFwibmFtZVwiOlwiU2hvcHBpbmcgQ2FydFwiLFwia2V5d29yZHNcIjpbXCJ0cm9sbGV5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZDJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUQyXCJ9XSxcInZlcnNpb25cIjozfSxcInNtb2tpbmdcIjp7XCJpZFwiOlwic21va2luZ1wiLFwibmFtZVwiOlwiQ2lnYXJldHRlXCIsXCJrZXl3b3Jkc1wiOltcInNtb2tpbmdcIixcImtpbGxzXCIsXCJ0b2JhY2NvXCIsXCJqb2ludFwiLFwic21va2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZhY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQUNcIn1dLFwidmVyc2lvblwiOjF9LFwiY29mZmluXCI6e1wiaWRcIjpcImNvZmZpblwiLFwibmFtZVwiOlwiQ29mZmluXCIsXCJrZXl3b3Jkc1wiOltcInZhbXBpcmVcIixcImRlYWRcIixcImRpZVwiLFwiZGVhdGhcIixcInJpcFwiLFwiZ3JhdmV5YXJkXCIsXCJjZW1ldGVyeVwiLFwiY2Fza2V0XCIsXCJmdW5lcmFsXCIsXCJib3hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmIwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkIwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImhlYWRzdG9uZVwiOntcImlkXCI6XCJoZWFkc3RvbmVcIixcIm5hbWVcIjpcIkhlYWRzdG9uZVwiLFwia2V5d29yZHNcIjpbXCJkZWF0aFwiLFwicmlwXCIsXCJncmF2ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWE2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVBNlwifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiZnVuZXJhbF91cm5cIjp7XCJpZFwiOlwiZnVuZXJhbF91cm5cIixcIm5hbWVcIjpcIkZ1bmVyYWwgVXJuXCIsXCJrZXl3b3Jkc1wiOltcImRlYWRcIixcImRpZVwiLFwiZGVhdGhcIixcInJpcFwiLFwiYXNoZXNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmIxLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkIxXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5hemFyX2FtdWxldFwiOntcImlkXCI6XCJuYXphcl9hbXVsZXRcIixcIm5hbWVcIjpcIk5hemFyIEFtdWxldFwiLFwia2V5d29yZHNcIjpbXCJiZWFkXCIsXCJjaGFybVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmOWZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1RERGRlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiaGFtc2FcIjp7XCJpZFwiOlwiaGFtc2FcIixcIm5hbWVcIjpcIkhhbXNhXCIsXCJrZXl3b3Jkc1wiOltcInJlbGlnaW9uXCIsXCJwcm90ZWN0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYWNcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUFDXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJtb3lhaVwiOntcImlkXCI6XCJtb3lhaVwiLFwibmFtZVwiOlwiTW9haVwiLFwia2V5d29yZHNcIjpbXCJtb3lhaVwiLFwicm9ja1wiLFwiZWFzdGVyXCIsXCJpc2xhbmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjVmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURERkZcIn1dLFwidmVyc2lvblwiOjF9LFwicGxhY2FyZFwiOntcImlkXCI6XCJwbGFjYXJkXCIsXCJuYW1lXCI6XCJQbGFjYXJkXCIsXCJrZXl3b3Jkc1wiOltcImFubm91bmNlbWVudFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmYWE3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRVx1REVBN1wifV0sXCJ2ZXJzaW9uXCI6MTN9LFwiaWRlbnRpZmljYXRpb25fY2FyZFwiOntcImlkXCI6XCJpZGVudGlmaWNhdGlvbl9jYXJkXCIsXCJuYW1lXCI6XCJJZGVudGlmaWNhdGlvbiBDYXJkXCIsXCJrZXl3b3Jkc1wiOltcImRvY3VtZW50XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYWFcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUFBXCJ9XSxcInZlcnNpb25cIjoxNH0sXCJhdG1cIjp7XCJpZFwiOlwiYXRtXCIsXCJuYW1lXCI6XCJBdG0gU2lnblwiLFwia2V5d29yZHNcIjpbXCJtb25leVwiLFwic2FsZXNcIixcImNhc2hcIixcImJsdWVcIixcInNxdWFyZVwiLFwicGF5bWVudFwiLFwiYmFua1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2U3XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZFN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwdXRfbGl0dGVyX2luX2l0c19wbGFjZVwiOntcImlkXCI6XCJwdXRfbGl0dGVyX2luX2l0c19wbGFjZVwiLFwibmFtZVwiOlwiTGl0dGVyIGluIEJpbiBTaWduXCIsXCJrZXl3b3Jkc1wiOltcInB1dFwiLFwiaXRzXCIsXCJwbGFjZVwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJodW1hblwiLFwiaW5mb1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmFlXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBRVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwb3RhYmxlX3dhdGVyXCI6e1wiaWRcIjpcInBvdGFibGVfd2F0ZXJcIixcIm5hbWVcIjpcIlBvdGFibGUgV2F0ZXJcIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJsaXF1aWRcIixcInJlc3Ryb29tXCIsXCJjbGVhbmluZ1wiLFwiZmF1Y2V0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YjBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUIwXCJ9XSxcInZlcnNpb25cIjoxfSxcIndoZWVsY2hhaXJcIjp7XCJpZFwiOlwid2hlZWxjaGFpclwiLFwibmFtZVwiOlwiV2hlZWxjaGFpciBTeW1ib2xcIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJkaXNhYmxlZFwiLFwiYWNjZXNzaWJpbGl0eVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2N2ZcIixcIm5hdGl2ZVwiOlwiXHUyNjdGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1lbnNcIjp7XCJpZFwiOlwibWVuc1wiLFwibmFtZVwiOlwiTWVuXHUyMDE5cyBSb29tXCIsXCJrZXl3b3Jkc1wiOltcIm1lbnNcIixcIm1lblwiLFwic1wiLFwidG9pbGV0XCIsXCJyZXN0cm9vbVwiLFwid2NcIixcImJsdWVcIixcInNxdWFyZVwiLFwiZ2VuZGVyXCIsXCJtYWxlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YjlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUI5XCJ9XSxcInZlcnNpb25cIjoxfSxcIndvbWVuc1wiOntcImlkXCI6XCJ3b21lbnNcIixcIm5hbWVcIjpcIldvbWVuXHUyMDE5cyBSb29tXCIsXCJrZXl3b3Jkc1wiOltcIndvbWVuc1wiLFwid29tZW5cIixcInNcIixcInB1cnBsZVwiLFwic3F1YXJlXCIsXCJ3b21hblwiLFwiZmVtYWxlXCIsXCJ0b2lsZXRcIixcImxvb1wiLFwicmVzdHJvb21cIixcImdlbmRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmJhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyZXN0cm9vbVwiOntcImlkXCI6XCJyZXN0cm9vbVwiLFwibmFtZVwiOlwiUmVzdHJvb21cIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJ0b2lsZXRcIixcInJlZnJlc2hcIixcIndjXCIsXCJnZW5kZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZiYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQkJcIn1dLFwidmVyc2lvblwiOjF9LFwiYmFieV9zeW1ib2xcIjp7XCJpZFwiOlwiYmFieV9zeW1ib2xcIixcIm5hbWVcIjpcIkJhYnkgU3ltYm9sXCIsXCJrZXl3b3Jkc1wiOltcIm9yYW5nZVwiLFwic3F1YXJlXCIsXCJjaGlsZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmJjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCQ1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3Y1wiOntcImlkXCI6XCJ3Y1wiLFwibmFtZVwiOlwiV2F0ZXIgQ2xvc2V0XCIsXCJrZXl3b3Jkc1wiOltcIndjXCIsXCJ0b2lsZXRcIixcInJlc3Ryb29tXCIsXCJibHVlXCIsXCJzcXVhcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZiZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQkVcIn1dLFwidmVyc2lvblwiOjF9LFwicGFzc3BvcnRfY29udHJvbFwiOntcImlkXCI6XCJwYXNzcG9ydF9jb250cm9sXCIsXCJuYW1lXCI6XCJQYXNzcG9ydCBDb250cm9sXCIsXCJrZXl3b3Jkc1wiOltcImN1c3RvbVwiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YzJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUMyXCJ9XSxcInZlcnNpb25cIjoxfSxcImN1c3RvbXNcIjp7XCJpZFwiOlwiY3VzdG9tc1wiLFwibmFtZVwiOlwiQ3VzdG9tc1wiLFwia2V5d29yZHNcIjpbXCJwYXNzcG9ydFwiLFwiYm9yZGVyXCIsXCJibHVlXCIsXCJzcXVhcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZjM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQzNcIn1dLFwidmVyc2lvblwiOjF9LFwiYmFnZ2FnZV9jbGFpbVwiOntcImlkXCI6XCJiYWdnYWdlX2NsYWltXCIsXCJuYW1lXCI6XCJCYWdnYWdlIENsYWltXCIsXCJrZXl3b3Jkc1wiOltcImJsdWVcIixcInNxdWFyZVwiLFwiYWlycG9ydFwiLFwidHJhbnNwb3J0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YzRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUM0XCJ9XSxcInZlcnNpb25cIjoxfSxcImxlZnRfbHVnZ2FnZVwiOntcImlkXCI6XCJsZWZ0X2x1Z2dhZ2VcIixcIm5hbWVcIjpcIkxlZnQgTHVnZ2FnZVwiLFwia2V5d29yZHNcIjpbXCJibHVlXCIsXCJzcXVhcmVcIixcInRyYXZlbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmM1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVDNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3YXJuaW5nXCI6e1wiaWRcIjpcIndhcm5pbmdcIixcIm5hbWVcIjpcIldhcm5pbmdcIixcImtleXdvcmRzXCI6W1wiZXhjbGFtYXRpb25cIixcIndpcFwiLFwiYWxlcnRcIixcImVycm9yXCIsXCJwcm9ibGVtXCIsXCJpc3N1ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2YTAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2QTBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY2hpbGRyZW5fY3Jvc3NpbmdcIjp7XCJpZFwiOlwiY2hpbGRyZW5fY3Jvc3NpbmdcIixcIm5hbWVcIjpcIkNoaWxkcmVuIENyb3NzaW5nXCIsXCJrZXl3b3Jkc1wiOltcInNjaG9vbFwiLFwid2FybmluZ1wiLFwiZGFuZ2VyXCIsXCJzaWduXCIsXCJkcml2aW5nXCIsXCJ5ZWxsb3dcIixcImRpYW1vbmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZiOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQjhcIn1dLFwidmVyc2lvblwiOjF9LFwibm9fZW50cnlcIjp7XCJpZFwiOlwibm9fZW50cnlcIixcIm5hbWVcIjpcIk5vIEVudHJ5XCIsXCJrZXl3b3Jkc1wiOltcImxpbWl0XCIsXCJzZWN1cml0eVwiLFwicHJpdmFjeVwiLFwiYmFkXCIsXCJkZW5pZWRcIixcInN0b3BcIixcImNpcmNsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2ZDRcIixcIm5hdGl2ZVwiOlwiXHUyNkQ0XCJ9XSxcInZlcnNpb25cIjoxfSxcIm5vX2VudHJ5X3NpZ25cIjp7XCJpZFwiOlwibm9fZW50cnlfc2lnblwiLFwibmFtZVwiOlwiUHJvaGliaXRlZFwiLFwia2V5d29yZHNcIjpbXCJub1wiLFwiZW50cnlcIixcInNpZ25cIixcImZvcmJpZFwiLFwic3RvcFwiLFwibGltaXRcIixcImRlbmllZFwiLFwiZGlzYWxsb3dcIixcImNpcmNsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmFiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVBQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJub19iaWN5Y2xlc1wiOntcImlkXCI6XCJub19iaWN5Y2xlc1wiLFwibmFtZVwiOlwiTm8gQmljeWNsZXNcIixcImtleXdvcmRzXCI6W1wiY3ljbGlzdFwiLFwicHJvaGliaXRlZFwiLFwiY2lyY2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUIzXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5vX3Ntb2tpbmdcIjp7XCJpZFwiOlwibm9fc21va2luZ1wiLFwibmFtZVwiOlwiTm8gU21va2luZ1wiLFwia2V5d29yZHNcIjpbXCJjaWdhcmV0dGVcIixcImJsdWVcIixcInNxdWFyZVwiLFwic21lbGxcIixcInNtb2tlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YWRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUFEXCJ9XSxcInZlcnNpb25cIjoxfSxcImRvX25vdF9saXR0ZXJcIjp7XCJpZFwiOlwiZG9fbm90X2xpdHRlclwiLFwibmFtZVwiOlwiTm8gTGl0dGVyaW5nXCIsXCJrZXl3b3Jkc1wiOltcImRvXCIsXCJub3RcIixcImxpdHRlclwiLFwidHJhc2hcIixcImJpblwiLFwiZ2FyYmFnZVwiLFwiY2lyY2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YWZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUFGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5vbi1wb3RhYmxlX3dhdGVyXCI6e1wiaWRcIjpcIm5vbi1wb3RhYmxlX3dhdGVyXCIsXCJuYW1lXCI6XCJOb24tUG90YWJsZSBXYXRlclwiLFwia2V5d29yZHNcIjpbXCJub25cIixcInBvdGFibGVcIixcImRyaW5rXCIsXCJmYXVjZXRcIixcInRhcFwiLFwiY2lyY2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUIxXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5vX3BlZGVzdHJpYW5zXCI6e1wiaWRcIjpcIm5vX3BlZGVzdHJpYW5zXCIsXCJuYW1lXCI6XCJObyBQZWRlc3RyaWFuc1wiLFwia2V5d29yZHNcIjpbXCJydWxlc1wiLFwiY3Jvc3NpbmdcIixcIndhbGtpbmdcIixcImNpcmNsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmI3XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVCN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJub19tb2JpbGVfcGhvbmVzXCI6e1wiaWRcIjpcIm5vX21vYmlsZV9waG9uZXNcIixcIm5hbWVcIjpcIk5vIE1vYmlsZSBQaG9uZXNcIixcImtleXdvcmRzXCI6W1wiaXBob25lXCIsXCJtdXRlXCIsXCJjaXJjbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRmNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDRjVcIn1dLFwidmVyc2lvblwiOjF9LFwidW5kZXJhZ2VcIjp7XCJpZFwiOlwidW5kZXJhZ2VcIixcIm5hbWVcIjpcIk5vIE9uZSBVbmRlciBFaWdodGVlblwiLFwia2V5d29yZHNcIjpbXCJ1bmRlcmFnZVwiLFwiMThcIixcImRyaW5rXCIsXCJwdWJcIixcIm5pZ2h0XCIsXCJtaW5vclwiLFwiY2lyY2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MWVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDFFXCJ9XSxcInZlcnNpb25cIjoxfSxcInJhZGlvYWN0aXZlX3NpZ25cIjp7XCJpZFwiOlwicmFkaW9hY3RpdmVfc2lnblwiLFwibmFtZVwiOlwiUmFkaW9hY3RpdmVcIixcImtleXdvcmRzXCI6W1wic2lnblwiLFwibnVjbGVhclwiLFwiZGFuZ2VyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjYyMi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjYyMlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJiaW9oYXphcmRfc2lnblwiOntcImlkXCI6XCJiaW9oYXphcmRfc2lnblwiLFwibmFtZVwiOlwiQmlvaGF6YXJkXCIsXCJrZXl3b3Jkc1wiOltcInNpZ25cIixcImRhbmdlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2MjMtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2MjNcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJyb3dfdXBcIjp7XCJpZFwiOlwiYXJyb3dfdXBcIixcIm5hbWVcIjpcIlVwIEFycm93XCIsXCJrZXl3b3Jkc1wiOltcImJsdWVcIixcInNxdWFyZVwiLFwiY29udGludWVcIixcInRvcFwiLFwiZGlyZWN0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMmIwNi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MkIwNlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhcnJvd191cHBlcl9yaWdodFwiOntcImlkXCI6XCJhcnJvd191cHBlcl9yaWdodFwiLFwibmFtZVwiOlwiVXAtUmlnaHQgQXJyb3dcIixcImtleXdvcmRzXCI6W1widXBwZXJcIixcInJpZ2h0XCIsXCJ1cFwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJwb2ludFwiLFwiZGlyZWN0aW9uXCIsXCJkaWFnb25hbFwiLFwibm9ydGhlYXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjE5Ny1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjE5N1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhcnJvd19yaWdodFwiOntcImlkXCI6XCJhcnJvd19yaWdodFwiLFwibmFtZVwiOlwiUmlnaHQgQXJyb3dcIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJuZXh0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjdhMS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjdBMVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhcnJvd19sb3dlcl9yaWdodFwiOntcImlkXCI6XCJhcnJvd19sb3dlcl9yaWdodFwiLFwibmFtZVwiOlwiU291dGggRWFzdCBBcnJvd1wiLFwia2V5d29yZHNcIjpbXCJsb3dlclwiLFwicmlnaHRcIixcImRvd25cIixcImJsdWVcIixcInNxdWFyZVwiLFwiZGlyZWN0aW9uXCIsXCJkaWFnb25hbFwiLFwic291dGhlYXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjE5OC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjE5OFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhcnJvd19kb3duXCI6e1wiaWRcIjpcImFycm93X2Rvd25cIixcIm5hbWVcIjpcIkRvd24gQXJyb3dcIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJkaXJlY3Rpb25cIixcImJvdHRvbVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjJiMDctZmUwZlwiLFwibmF0aXZlXCI6XCJcdTJCMDdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJyb3dfbG93ZXJfbGVmdFwiOntcImlkXCI6XCJhcnJvd19sb3dlcl9sZWZ0XCIsXCJuYW1lXCI6XCJEb3duLUxlZnQgQXJyb3dcIixcImtleXdvcmRzXCI6W1wibG93ZXJcIixcImxlZnRcIixcImRvd25cIixcImJsdWVcIixcInNxdWFyZVwiLFwiZGlyZWN0aW9uXCIsXCJkaWFnb25hbFwiLFwic291dGh3ZXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjE5OS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjE5OVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhcnJvd19sZWZ0XCI6e1wiaWRcIjpcImFycm93X2xlZnRcIixcIm5hbWVcIjpcIkxlZnQgQXJyb3dcIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJwcmV2aW91c1wiLFwiYmFja1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjJiMDUtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTJCMDVcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJyb3dfdXBwZXJfbGVmdFwiOntcImlkXCI6XCJhcnJvd191cHBlcl9sZWZ0XCIsXCJuYW1lXCI6XCJVcC1MZWZ0IEFycm93XCIsXCJrZXl3b3Jkc1wiOltcInVwcGVyXCIsXCJsZWZ0XCIsXCJ1cFwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJwb2ludFwiLFwiZGlyZWN0aW9uXCIsXCJkaWFnb25hbFwiLFwibm9ydGh3ZXN0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjE5Ni1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjE5Nlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhcnJvd191cF9kb3duXCI6e1wiaWRcIjpcImFycm93X3VwX2Rvd25cIixcIm5hbWVcIjpcIlVwIERvd24gQXJyb3dcIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJkaXJlY3Rpb25cIixcIndheVwiLFwidmVydGljYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyMTk1LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyMTk1XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImxlZnRfcmlnaHRfYXJyb3dcIjp7XCJpZFwiOlwibGVmdF9yaWdodF9hcnJvd1wiLFwibmFtZVwiOlwiTGVmdCBSaWdodCBBcnJvd1wiLFwia2V5d29yZHNcIjpbXCJzaGFwZVwiLFwiZGlyZWN0aW9uXCIsXCJob3Jpem9udGFsXCIsXCJzaWRld2F5c1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIxOTQtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTIxOTRcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwibGVmdHdhcmRzX2Fycm93X3dpdGhfaG9va1wiOntcImlkXCI6XCJsZWZ0d2FyZHNfYXJyb3dfd2l0aF9ob29rXCIsXCJuYW1lXCI6XCJSaWdodCBBcnJvdyBDdXJ2aW5nIExlZnRcIixcImtleXdvcmRzXCI6W1wibGVmdHdhcmRzXCIsXCJ3aXRoXCIsXCJob29rXCIsXCJiYWNrXCIsXCJyZXR1cm5cIixcImJsdWVcIixcInNxdWFyZVwiLFwidW5kb1wiLFwiZW50ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyMWE5LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyMUE5XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImFycm93X3JpZ2h0X2hvb2tcIjp7XCJpZFwiOlwiYXJyb3dfcmlnaHRfaG9va1wiLFwibmFtZVwiOlwiTGVmdCBBcnJvdyBDdXJ2aW5nIFJpZ2h0XCIsXCJrZXl3b3Jkc1wiOltcImhvb2tcIixcImJsdWVcIixcInNxdWFyZVwiLFwicmV0dXJuXCIsXCJyb3RhdGVcIixcImRpcmVjdGlvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIxYWEtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTIxQUFcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJyb3dfaGVhZGluZ191cFwiOntcImlkXCI6XCJhcnJvd19oZWFkaW5nX3VwXCIsXCJuYW1lXCI6XCJSaWdodCBBcnJvdyBDdXJ2aW5nIFVwXCIsXCJrZXl3b3Jkc1wiOltcImhlYWRpbmdcIixcImJsdWVcIixcInNxdWFyZVwiLFwiZGlyZWN0aW9uXCIsXCJ0b3BcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyOTM0LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyOTM0XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImFycm93X2hlYWRpbmdfZG93blwiOntcImlkXCI6XCJhcnJvd19oZWFkaW5nX2Rvd25cIixcIm5hbWVcIjpcIlJpZ2h0IEFycm93IEN1cnZpbmcgRG93blwiLFwia2V5d29yZHNcIjpbXCJoZWFkaW5nXCIsXCJibHVlXCIsXCJzcXVhcmVcIixcImRpcmVjdGlvblwiLFwiYm90dG9tXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjkzNS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjkzNVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJhcnJvd3NfY2xvY2t3aXNlXCI6e1wiaWRcIjpcImFycm93c19jbG9ja3dpc2VcIixcIm5hbWVcIjpcIkNsb2Nrd2lzZSBWZXJ0aWNhbCBBcnJvd3NcIixcImtleXdvcmRzXCI6W1wic3luY1wiLFwiY3ljbGVcIixcInJvdW5kXCIsXCJyZXBlYXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUwM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMDNcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJyb3dzX2NvdW50ZXJjbG9ja3dpc2VcIjp7XCJpZFwiOlwiYXJyb3dzX2NvdW50ZXJjbG9ja3dpc2VcIixcIm5hbWVcIjpcIkNvdW50ZXJjbG9ja3dpc2UgQXJyb3dzIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJibHVlXCIsXCJzcXVhcmVcIixcInN5bmNcIixcImN5Y2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MDRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDA0XCJ9XSxcInZlcnNpb25cIjoxfSxcImJhY2tcIjp7XCJpZFwiOlwiYmFja1wiLFwibmFtZVwiOlwiQmFjayBBcnJvd1wiLFwia2V5d29yZHNcIjpbXCJ3b3Jkc1wiLFwicmV0dXJuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MTlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDE5XCJ9XSxcInZlcnNpb25cIjoxfSxcImVuZFwiOntcImlkXCI6XCJlbmRcIixcIm5hbWVcIjpcIkVuZCBBcnJvd1wiLFwia2V5d29yZHNcIjpbXCJ3b3Jkc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTFhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQxQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvblwiOntcImlkXCI6XCJvblwiLFwibmFtZVwiOlwiT24hIEFycm93XCIsXCJrZXl3b3Jkc1wiOltcIm9uXCIsXCJ3b3Jkc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTFiXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQxQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzb29uXCI6e1wiaWRcIjpcInNvb25cIixcIm5hbWVcIjpcIlNvb24gQXJyb3dcIixcImtleXdvcmRzXCI6W1wid29yZHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUxY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMUNcIn1dLFwidmVyc2lvblwiOjF9LFwidG9wXCI6e1wiaWRcIjpcInRvcFwiLFwibmFtZVwiOlwiVG9wIEFycm93XCIsXCJrZXl3b3Jkc1wiOltcIndvcmRzXCIsXCJibHVlXCIsXCJzcXVhcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUxZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMURcIn1dLFwidmVyc2lvblwiOjF9LFwicGxhY2Vfb2Zfd29yc2hpcFwiOntcImlkXCI6XCJwbGFjZV9vZl93b3JzaGlwXCIsXCJuYW1lXCI6XCJQbGFjZSBvZiBXb3JzaGlwXCIsXCJrZXl3b3Jkc1wiOltcInJlbGlnaW9uXCIsXCJjaHVyY2hcIixcInRlbXBsZVwiLFwicHJheWVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY2ZDBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERUQwXCJ9XSxcInZlcnNpb25cIjoxfSxcImF0b21fc3ltYm9sXCI6e1wiaWRcIjpcImF0b21fc3ltYm9sXCIsXCJuYW1lXCI6XCJBdG9tIFN5bWJvbFwiLFwia2V5d29yZHNcIjpbXCJzY2llbmNlXCIsXCJwaHlzaWNzXCIsXCJjaGVtaXN0cnlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjliLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjlCXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm9tX3N5bWJvbFwiOntcImlkXCI6XCJvbV9zeW1ib2xcIixcIm5hbWVcIjpcIk9tXCIsXCJrZXl3b3Jkc1wiOltcInN5bWJvbFwiLFwiaGluZHVpc21cIixcImJ1ZGRoaXNtXCIsXCJzaWtoaXNtXCIsXCJqYWluaXNtXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NDktZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURENDlcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic3Rhcl9vZl9kYXZpZFwiOntcImlkXCI6XCJzdGFyX29mX2RhdmlkXCIsXCJuYW1lXCI6XCJTdGFyIG9mIERhdmlkXCIsXCJrZXl3b3Jkc1wiOltcImp1ZGFpc21cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzIxLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNzIxXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcIndoZWVsX29mX2RoYXJtYVwiOntcImlkXCI6XCJ3aGVlbF9vZl9kaGFybWFcIixcIm5hbWVcIjpcIldoZWVsIG9mIERoYXJtYVwiLFwia2V5d29yZHNcIjpbXCJoaW5kdWlzbVwiLFwiYnVkZGhpc21cIixcInNpa2hpc21cIixcImphaW5pc21cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjM4LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjM4XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInlpbl95YW5nXCI6e1wiaWRcIjpcInlpbl95YW5nXCIsXCJuYW1lXCI6XCJZaW4gWWFuZ1wiLFwia2V5d29yZHNcIjpbXCJiYWxhbmNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjYyZi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjYyRlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsYXRpbl9jcm9zc1wiOntcImlkXCI6XCJsYXRpbl9jcm9zc1wiLFwibmFtZVwiOlwiTGF0aW4gQ3Jvc3NcIixcImtleXdvcmRzXCI6W1wiY2hyaXN0aWFuaXR5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjcxZC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjcxRFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvcnRob2RveF9jcm9zc1wiOntcImlkXCI6XCJvcnRob2RveF9jcm9zc1wiLFwibmFtZVwiOlwiT3J0aG9kb3ggQ3Jvc3NcIixcImtleXdvcmRzXCI6W1wic3VwcGVkYW5ldW1cIixcInJlbGlnaW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjYyNi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjYyNlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzdGFyX2FuZF9jcmVzY2VudFwiOntcImlkXCI6XCJzdGFyX2FuZF9jcmVzY2VudFwiLFwibmFtZVwiOlwiU3RhciBhbmQgQ3Jlc2NlbnRcIixcImtleXdvcmRzXCI6W1wiaXNsYW1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjJhLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjJBXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBlYWNlX3N5bWJvbFwiOntcImlkXCI6XCJwZWFjZV9zeW1ib2xcIixcIm5hbWVcIjpcIlBlYWNlIFN5bWJvbFwiLFwia2V5d29yZHNcIjpbXCJoaXBwaWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjJlLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjJFXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1lbm9yYWhfd2l0aF9uaW5lX2JyYW5jaGVzXCI6e1wiaWRcIjpcIm1lbm9yYWhfd2l0aF9uaW5lX2JyYW5jaGVzXCIsXCJuYW1lXCI6XCJNZW5vcmFoXCIsXCJrZXl3b3Jkc1wiOltcIndpdGhcIixcIm5pbmVcIixcImJyYW5jaGVzXCIsXCJoYW51a2thaFwiLFwiY2FuZGxlc1wiLFwiamV3aXNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1NGVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDRFXCJ9XSxcInZlcnNpb25cIjoxfSxcInNpeF9wb2ludGVkX3N0YXJcIjp7XCJpZFwiOlwic2l4X3BvaW50ZWRfc3RhclwiLFwibmFtZVwiOlwiRG90dGVkIFNpeC1Qb2ludGVkIFN0YXJcIixcImtleXdvcmRzXCI6W1wic2l4XCIsXCJwb2ludGVkXCIsXCJwdXJwbGVcIixcInNxdWFyZVwiLFwicmVsaWdpb25cIixcImpld2lzaFwiLFwiaGV4YWdyYW1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUyZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMkZcIn1dLFwidmVyc2lvblwiOjF9LFwia2hhbmRhXCI6e1wiaWRcIjpcImtoYW5kYVwiLFwibmFtZVwiOlwiS2hhbmRhXCIsXCJrZXl3b3Jkc1wiOltcIlNpa2hpc21cIixcInJlbGlnaW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWZhYWZcIixcIm5hdGl2ZVwiOlwiXHVEODNFXHVERUFGXCJ9XSxcInZlcnNpb25cIjoxNX0sXCJhcmllc1wiOntcImlkXCI6XCJhcmllc1wiLFwibmFtZVwiOlwiQXJpZXNcIixcImtleXdvcmRzXCI6W1wic2lnblwiLFwicHVycGxlXCIsXCJzcXVhcmVcIixcInpvZGlhY1wiLFwiYXN0cm9sb2d5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY0OFwiLFwibmF0aXZlXCI6XCJcdTI2NDhcIn1dLFwidmVyc2lvblwiOjF9LFwidGF1cnVzXCI6e1wiaWRcIjpcInRhdXJ1c1wiLFwibmFtZVwiOlwiVGF1cnVzXCIsXCJrZXl3b3Jkc1wiOltcInB1cnBsZVwiLFwic3F1YXJlXCIsXCJzaWduXCIsXCJ6b2RpYWNcIixcImFzdHJvbG9neVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2NDlcIixcIm5hdGl2ZVwiOlwiXHUyNjQ5XCJ9XSxcInZlcnNpb25cIjoxfSxcImdlbWluaVwiOntcImlkXCI6XCJnZW1pbmlcIixcIm5hbWVcIjpcIkdlbWluaVwiLFwia2V5d29yZHNcIjpbXCJzaWduXCIsXCJ6b2RpYWNcIixcInB1cnBsZVwiLFwic3F1YXJlXCIsXCJhc3Ryb2xvZ3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjRhXCIsXCJuYXRpdmVcIjpcIlx1MjY0QVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYW5jZXJcIjp7XCJpZFwiOlwiY2FuY2VyXCIsXCJuYW1lXCI6XCJDYW5jZXJcIixcImtleXdvcmRzXCI6W1wic2lnblwiLFwiem9kaWFjXCIsXCJwdXJwbGVcIixcInNxdWFyZVwiLFwiYXN0cm9sb2d5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY0YlwiLFwibmF0aXZlXCI6XCJcdTI2NEJcIn1dLFwidmVyc2lvblwiOjF9LFwibGVvXCI6e1wiaWRcIjpcImxlb1wiLFwibmFtZVwiOlwiTGVvXCIsXCJrZXl3b3Jkc1wiOltcInNpZ25cIixcInB1cnBsZVwiLFwic3F1YXJlXCIsXCJ6b2RpYWNcIixcImFzdHJvbG9neVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2NGNcIixcIm5hdGl2ZVwiOlwiXHUyNjRDXCJ9XSxcInZlcnNpb25cIjoxfSxcInZpcmdvXCI6e1wiaWRcIjpcInZpcmdvXCIsXCJuYW1lXCI6XCJWaXJnb1wiLFwia2V5d29yZHNcIjpbXCJzaWduXCIsXCJ6b2RpYWNcIixcInB1cnBsZVwiLFwic3F1YXJlXCIsXCJhc3Ryb2xvZ3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjRkXCIsXCJuYXRpdmVcIjpcIlx1MjY0RFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsaWJyYVwiOntcImlkXCI6XCJsaWJyYVwiLFwibmFtZVwiOlwiTGlicmFcIixcImtleXdvcmRzXCI6W1wic2lnblwiLFwicHVycGxlXCIsXCJzcXVhcmVcIixcInpvZGlhY1wiLFwiYXN0cm9sb2d5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY0ZVwiLFwibmF0aXZlXCI6XCJcdTI2NEVcIn1dLFwidmVyc2lvblwiOjF9LFwic2NvcnBpdXNcIjp7XCJpZFwiOlwic2NvcnBpdXNcIixcIm5hbWVcIjpcIlNjb3JwaW9cIixcImtleXdvcmRzXCI6W1wic2NvcnBpdXNcIixcInNpZ25cIixcInpvZGlhY1wiLFwicHVycGxlXCIsXCJzcXVhcmVcIixcImFzdHJvbG9neVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2NGZcIixcIm5hdGl2ZVwiOlwiXHUyNjRGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNhZ2l0dGFyaXVzXCI6e1wiaWRcIjpcInNhZ2l0dGFyaXVzXCIsXCJuYW1lXCI6XCJTYWdpdHRhcml1c1wiLFwia2V5d29yZHNcIjpbXCJzaWduXCIsXCJ6b2RpYWNcIixcInB1cnBsZVwiLFwic3F1YXJlXCIsXCJhc3Ryb2xvZ3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjUwXCIsXCJuYXRpdmVcIjpcIlx1MjY1MFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjYXByaWNvcm5cIjp7XCJpZFwiOlwiY2Fwcmljb3JuXCIsXCJuYW1lXCI6XCJDYXByaWNvcm5cIixcImtleXdvcmRzXCI6W1wic2lnblwiLFwiem9kaWFjXCIsXCJwdXJwbGVcIixcInNxdWFyZVwiLFwiYXN0cm9sb2d5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY1MVwiLFwibmF0aXZlXCI6XCJcdTI2NTFcIn1dLFwidmVyc2lvblwiOjF9LFwiYXF1YXJpdXNcIjp7XCJpZFwiOlwiYXF1YXJpdXNcIixcIm5hbWVcIjpcIkFxdWFyaXVzXCIsXCJrZXl3b3Jkc1wiOltcInNpZ25cIixcInB1cnBsZVwiLFwic3F1YXJlXCIsXCJ6b2RpYWNcIixcImFzdHJvbG9neVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2NTJcIixcIm5hdGl2ZVwiOlwiXHUyNjUyXCJ9XSxcInZlcnNpb25cIjoxfSxcInBpc2Nlc1wiOntcImlkXCI6XCJwaXNjZXNcIixcIm5hbWVcIjpcIlBpc2Nlc1wiLFwia2V5d29yZHNcIjpbXCJwdXJwbGVcIixcInNxdWFyZVwiLFwic2lnblwiLFwiem9kaWFjXCIsXCJhc3Ryb2xvZ3lcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjUzXCIsXCJuYXRpdmVcIjpcIlx1MjY1M1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvcGhpdWNodXNcIjp7XCJpZFwiOlwib3BoaXVjaHVzXCIsXCJuYW1lXCI6XCJPcGhpdWNodXNcIixcImtleXdvcmRzXCI6W1wic2lnblwiLFwicHVycGxlXCIsXCJzcXVhcmVcIixcImNvbnN0ZWxsYXRpb25cIixcImFzdHJvbG9neVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2Y2VcIixcIm5hdGl2ZVwiOlwiXHUyNkNFXCJ9XSxcInZlcnNpb25cIjoxfSxcInR3aXN0ZWRfcmlnaHR3YXJkc19hcnJvd3NcIjp7XCJpZFwiOlwidHdpc3RlZF9yaWdodHdhcmRzX2Fycm93c1wiLFwibmFtZVwiOlwiU2h1ZmZsZSBUcmFja3MgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcInR3aXN0ZWRcIixcInJpZ2h0d2FyZHNcIixcImFycm93c1wiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJtdXNpY1wiLFwicmFuZG9tXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MDBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDAwXCJ9XSxcInZlcnNpb25cIjoxfSxcInJlcGVhdFwiOntcImlkXCI6XCJyZXBlYXRcIixcIm5hbWVcIjpcIlJlcGVhdCBCdXR0b25cIixcImtleXdvcmRzXCI6W1wibG9vcFwiLFwicmVjb3JkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MDFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDAxXCJ9XSxcInZlcnNpb25cIjoxfSxcInJlcGVhdF9vbmVcIjp7XCJpZFwiOlwicmVwZWF0X29uZVwiLFwibmFtZVwiOlwiUmVwZWF0IFNpbmdsZSBCdXR0b25cIixcImtleXdvcmRzXCI6W1wib25lXCIsXCJibHVlXCIsXCJzcXVhcmVcIixcImxvb3BcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUwMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMDJcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJyb3dfZm9yd2FyZFwiOntcImlkXCI6XCJhcnJvd19mb3J3YXJkXCIsXCJuYW1lXCI6XCJQbGF5IEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJhcnJvd1wiLFwiZm9yd2FyZFwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJyaWdodFwiLFwiZGlyZWN0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjViNi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjVCNlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmYXN0X2ZvcndhcmRcIjp7XCJpZFwiOlwiZmFzdF9mb3J3YXJkXCIsXCJuYW1lXCI6XCJGYXN0LUZvcndhcmQgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcImZhc3RcIixcImZvcndhcmRcIixcImJsdWVcIixcInNxdWFyZVwiLFwicGxheVwiLFwic3BlZWRcIixcImNvbnRpbnVlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjNlOVwiLFwibmF0aXZlXCI6XCJcdTIzRTlcIn1dLFwidmVyc2lvblwiOjF9LFwiYmxhY2tfcmlnaHRfcG9pbnRpbmdfZG91YmxlX3RyaWFuZ2xlX3dpdGhfdmVydGljYWxfYmFyXCI6e1wiaWRcIjpcImJsYWNrX3JpZ2h0X3BvaW50aW5nX2RvdWJsZV90cmlhbmdsZV93aXRoX3ZlcnRpY2FsX2JhclwiLFwibmFtZVwiOlwiTmV4dCBUcmFjayBCdXR0b25cIixcImtleXdvcmRzXCI6W1wiYmxhY2tcIixcInJpZ2h0XCIsXCJwb2ludGluZ1wiLFwiZG91YmxlXCIsXCJ0cmlhbmdsZVwiLFwid2l0aFwiLFwidmVydGljYWxcIixcImJhclwiLFwiZm9yd2FyZFwiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjNlZC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjNFRFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJibGFja19yaWdodF9wb2ludGluZ190cmlhbmdsZV93aXRoX2RvdWJsZV92ZXJ0aWNhbF9iYXJcIjp7XCJpZFwiOlwiYmxhY2tfcmlnaHRfcG9pbnRpbmdfdHJpYW5nbGVfd2l0aF9kb3VibGVfdmVydGljYWxfYmFyXCIsXCJuYW1lXCI6XCJQbGF5IG9yIFBhdXNlIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJibGFja1wiLFwicmlnaHRcIixcInBvaW50aW5nXCIsXCJ0cmlhbmdsZVwiLFwid2l0aFwiLFwiZG91YmxlXCIsXCJ2ZXJ0aWNhbFwiLFwiYmFyXCIsXCJibHVlXCIsXCJzcXVhcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyM2VmLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyM0VGXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImFycm93X2JhY2t3YXJkXCI6e1wiaWRcIjpcImFycm93X2JhY2t3YXJkXCIsXCJuYW1lXCI6XCJSZXZlcnNlIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJhcnJvd1wiLFwiYmFja3dhcmRcIixcImJsdWVcIixcInNxdWFyZVwiLFwibGVmdFwiLFwiZGlyZWN0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjVjMC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjVDMFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyZXdpbmRcIjp7XCJpZFwiOlwicmV3aW5kXCIsXCJuYW1lXCI6XCJGYXN0IFJldmVyc2UgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcInJld2luZFwiLFwicGxheVwiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjNlYVwiLFwibmF0aXZlXCI6XCJcdTIzRUFcIn1dLFwidmVyc2lvblwiOjF9LFwiYmxhY2tfbGVmdF9wb2ludGluZ19kb3VibGVfdHJpYW5nbGVfd2l0aF92ZXJ0aWNhbF9iYXJcIjp7XCJpZFwiOlwiYmxhY2tfbGVmdF9wb2ludGluZ19kb3VibGVfdHJpYW5nbGVfd2l0aF92ZXJ0aWNhbF9iYXJcIixcIm5hbWVcIjpcIkxhc3QgVHJhY2sgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcImJsYWNrXCIsXCJsZWZ0XCIsXCJwb2ludGluZ1wiLFwiZG91YmxlXCIsXCJ0cmlhbmdsZVwiLFwid2l0aFwiLFwidmVydGljYWxcIixcImJhclwiLFwiYmFja3dhcmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyM2VlLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyM0VFXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImFycm93X3VwX3NtYWxsXCI6e1wiaWRcIjpcImFycm93X3VwX3NtYWxsXCIsXCJuYW1lXCI6XCJVcHdhcmRzIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJhcnJvd1wiLFwidXBcIixcInNtYWxsXCIsXCJibHVlXCIsXCJzcXVhcmVcIixcInRyaWFuZ2xlXCIsXCJkaXJlY3Rpb25cIixcInBvaW50XCIsXCJmb3J3YXJkXCIsXCJ0b3BcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUzY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREM0NcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJyb3dfZG91YmxlX3VwXCI6e1wiaWRcIjpcImFycm93X2RvdWJsZV91cFwiLFwibmFtZVwiOlwiRmFzdCBVcCBCdXR0b25cIixcImtleXdvcmRzXCI6W1wiYXJyb3dcIixcImRvdWJsZVwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJkaXJlY3Rpb25cIixcInRvcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIzZWJcIixcIm5hdGl2ZVwiOlwiXHUyM0VCXCJ9XSxcInZlcnNpb25cIjoxfSxcImFycm93X2Rvd25fc21hbGxcIjp7XCJpZFwiOlwiYXJyb3dfZG93bl9zbWFsbFwiLFwibmFtZVwiOlwiRG93bndhcmRzIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJhcnJvd1wiLFwiZG93blwiLFwic21hbGxcIixcImJsdWVcIixcInNxdWFyZVwiLFwiZGlyZWN0aW9uXCIsXCJib3R0b21cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUzZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREM0RcIn1dLFwidmVyc2lvblwiOjF9LFwiYXJyb3dfZG91YmxlX2Rvd25cIjp7XCJpZFwiOlwiYXJyb3dfZG91YmxlX2Rvd25cIixcIm5hbWVcIjpcIkZhc3QgRG93biBCdXR0b25cIixcImtleXdvcmRzXCI6W1wiYXJyb3dcIixcImRvdWJsZVwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJkaXJlY3Rpb25cIixcImJvdHRvbVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIzZWNcIixcIm5hdGl2ZVwiOlwiXHUyM0VDXCJ9XSxcInZlcnNpb25cIjoxfSxcImRvdWJsZV92ZXJ0aWNhbF9iYXJcIjp7XCJpZFwiOlwiZG91YmxlX3ZlcnRpY2FsX2JhclwiLFwibmFtZVwiOlwiUGF1c2UgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcImRvdWJsZVwiLFwidmVydGljYWxcIixcImJhclwiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjNmOC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjNGOFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJibGFja19zcXVhcmVfZm9yX3N0b3BcIjp7XCJpZFwiOlwiYmxhY2tfc3F1YXJlX2Zvcl9zdG9wXCIsXCJuYW1lXCI6XCJTdG9wIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJibGFja1wiLFwic3F1YXJlXCIsXCJmb3JcIixcImJsdWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyM2Y5LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyM0Y5XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImJsYWNrX2NpcmNsZV9mb3JfcmVjb3JkXCI6e1wiaWRcIjpcImJsYWNrX2NpcmNsZV9mb3JfcmVjb3JkXCIsXCJuYW1lXCI6XCJSZWNvcmQgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcImJsYWNrXCIsXCJjaXJjbGVcIixcImZvclwiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjNmYS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjNGQVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlamVjdFwiOntcImlkXCI6XCJlamVjdFwiLFwibmFtZVwiOlwiRWplY3QgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcImJsdWVcIixcInNxdWFyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIzY2YtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTIzQ0ZcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY2luZW1hXCI6e1wiaWRcIjpcImNpbmVtYVwiLFwibmFtZVwiOlwiQ2luZW1hXCIsXCJrZXl3b3Jkc1wiOltcImJsdWVcIixcInNxdWFyZVwiLFwicmVjb3JkXCIsXCJmaWxtXCIsXCJtb3ZpZVwiLFwiY3VydGFpblwiLFwic3RhZ2VcIixcInRoZWF0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNhNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGQTZcIn1dLFwidmVyc2lvblwiOjF9LFwibG93X2JyaWdodG5lc3NcIjp7XCJpZFwiOlwibG93X2JyaWdodG5lc3NcIixcIm5hbWVcIjpcIkRpbSBCdXR0b25cIixcImtleXdvcmRzXCI6W1wibG93XCIsXCJicmlnaHRuZXNzXCIsXCJzdW5cIixcImFmdGVybm9vblwiLFwid2FybVwiLFwic3VtbWVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MDVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDA1XCJ9XSxcInZlcnNpb25cIjoxfSxcImhpZ2hfYnJpZ2h0bmVzc1wiOntcImlkXCI6XCJoaWdoX2JyaWdodG5lc3NcIixcIm5hbWVcIjpcIkJyaWdodCBCdXR0b25cIixcImtleXdvcmRzXCI6W1wiaGlnaFwiLFwiYnJpZ2h0bmVzc1wiLFwic3VuXCIsXCJsaWdodFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTA2XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQwNlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzaWduYWxfc3RyZW5ndGhcIjp7XCJpZFwiOlwic2lnbmFsX3N0cmVuZ3RoXCIsXCJuYW1lXCI6XCJBbnRlbm5hIEJhcnNcIixcImtleXdvcmRzXCI6W1wic2lnbmFsXCIsXCJzdHJlbmd0aFwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJyZWNlcHRpb25cIixcInBob25lXCIsXCJpbnRlcm5ldFwiLFwiY29ubmVjdGlvblwiLFwid2lmaVwiLFwiYmx1ZXRvb3RoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZjZcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0Y2XCJ9XSxcInZlcnNpb25cIjoxfSxcIndpcmVsZXNzXCI6e1wiaWRcIjpcIndpcmVsZXNzXCIsXCJuYW1lXCI6XCJXaXJlbGVzc1wiLFwia2V5d29yZHNcIjpbXCJ3aWZpXCIsXCJpbnRlcm5ldFwiLFwiY29udGFjdGxlc3NcIixcInNpZ25hbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNmRjXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REVEQ1wifV0sXCJ2ZXJzaW9uXCI6MTV9LFwidmlicmF0aW9uX21vZGVcIjp7XCJpZFwiOlwidmlicmF0aW9uX21vZGVcIixcIm5hbWVcIjpcIlZpYnJhdGlvbiBNb2RlXCIsXCJrZXl3b3Jkc1wiOltcIm9yYW5nZVwiLFwic3F1YXJlXCIsXCJwaG9uZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNGYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1RENGM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJtb2JpbGVfcGhvbmVfb2ZmXCI6e1wiaWRcIjpcIm1vYmlsZV9waG9uZV9vZmZcIixcIm5hbWVcIjpcIk1vYmlsZSBQaG9uZSBvZmZcIixcImtleXdvcmRzXCI6W1wibXV0ZVwiLFwib3JhbmdlXCIsXCJzcXVhcmVcIixcInNpbGVuY2VcIixcInF1aWV0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0ZjRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0Y0XCJ9XSxcInZlcnNpb25cIjoxfSxcImZlbWFsZV9zaWduXCI6e1wiaWRcIjpcImZlbWFsZV9zaWduXCIsXCJuYW1lXCI6XCJGZW1hbGUgU2lnblwiLFwia2V5d29yZHNcIjpbXCJ3b21hblwiLFwid29tZW5cIixcImxhZHlcIixcImdpcmxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjQwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjQwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjo0fSxcIm1hbGVfc2lnblwiOntcImlkXCI6XCJtYWxlX3NpZ25cIixcIm5hbWVcIjpcIk1hbGUgU2lnblwiLFwia2V5d29yZHNcIjpbXCJtYW5cIixcImJveVwiLFwibWVuXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY0Mi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjY0Mlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJ0cmFuc2dlbmRlcl9zeW1ib2xcIjp7XCJpZFwiOlwidHJhbnNnZW5kZXJfc3ltYm9sXCIsXCJuYW1lXCI6XCJUcmFuc2dlbmRlciBTeW1ib2xcIixcImtleXdvcmRzXCI6W1wibGdidHFcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmE3LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNkE3XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxM30sXCJoZWF2eV9tdWx0aXBsaWNhdGlvbl94XCI6e1wiaWRcIjpcImhlYXZ5X211bHRpcGxpY2F0aW9uX3hcIixcIm5hbWVcIjpcIk11bHRpcGx5XCIsXCJrZXl3b3Jkc1wiOltcImhlYXZ5XCIsXCJtdWx0aXBsaWNhdGlvblwiLFwieFwiLFwic2lnblwiLFwibWF0aFwiLFwiY2FsY3VsYXRpb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzE2LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNzE2XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImhlYXZ5X3BsdXNfc2lnblwiOntcImlkXCI6XCJoZWF2eV9wbHVzX3NpZ25cIixcIm5hbWVcIjpcIlBsdXNcIixcImtleXdvcmRzXCI6W1wiaGVhdnlcIixcInNpZ25cIixcIm1hdGhcIixcImNhbGN1bGF0aW9uXCIsXCJhZGRpdGlvblwiLFwibW9yZVwiLFwiaW5jcmVhc2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzk1XCIsXCJuYXRpdmVcIjpcIlx1Mjc5NVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoZWF2eV9taW51c19zaWduXCI6e1wiaWRcIjpcImhlYXZ5X21pbnVzX3NpZ25cIixcIm5hbWVcIjpcIk1pbnVzXCIsXCJrZXl3b3Jkc1wiOltcImhlYXZ5XCIsXCJzaWduXCIsXCJtYXRoXCIsXCJjYWxjdWxhdGlvblwiLFwic3VidHJhY3RcIixcImxlc3NcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNzk2XCIsXCJuYXRpdmVcIjpcIlx1Mjc5NlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJoZWF2eV9kaXZpc2lvbl9zaWduXCI6e1wiaWRcIjpcImhlYXZ5X2RpdmlzaW9uX3NpZ25cIixcIm5hbWVcIjpcIkRpdmlkZVwiLFwia2V5d29yZHNcIjpbXCJoZWF2eVwiLFwiZGl2aXNpb25cIixcInNpZ25cIixcIm1hdGhcIixcImNhbGN1bGF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjc5N1wiLFwibmF0aXZlXCI6XCJcdTI3OTdcIn1dLFwidmVyc2lvblwiOjF9LFwiaGVhdnlfZXF1YWxzX3NpZ25cIjp7XCJpZFwiOlwiaGVhdnlfZXF1YWxzX3NpZ25cIixcIm5hbWVcIjpcIkhlYXZ5IEVxdWFscyBTaWduXCIsXCJrZXl3b3Jkc1wiOltcIm1hdGhcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjdmMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURGRjBcIn1dLFwidmVyc2lvblwiOjE0fSxcImluZmluaXR5XCI6e1wiaWRcIjpcImluZmluaXR5XCIsXCJuYW1lXCI6XCJJbmZpbml0eVwiLFwia2V5d29yZHNcIjpbXCJmb3JldmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY3ZS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjY3RVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MTF9LFwiYmFuZ2JhbmdcIjp7XCJpZFwiOlwiYmFuZ2JhbmdcIixcIm5hbWVcIjpcIkRvdWJsZSBFeGNsYW1hdGlvbiBNYXJrXCIsXCJrZXl3b3Jkc1wiOltcImJhbmdiYW5nXCIsXCJzdXJwcmlzZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIwM2MtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTIwM0NcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiaW50ZXJyb2JhbmdcIjp7XCJpZFwiOlwiaW50ZXJyb2JhbmdcIixcIm5hbWVcIjpcIkV4Y2xhbWF0aW9uIFF1ZXN0aW9uIE1hcmtcIixcImtleXdvcmRzXCI6W1wiaW50ZXJyb2JhbmdcIixcIndhdFwiLFwicHVuY3R1YXRpb25cIixcInN1cnByaXNlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjA0OS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjA0OVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJxdWVzdGlvblwiOntcImlkXCI6XCJxdWVzdGlvblwiLFwibmFtZVwiOlwiUmVkIFF1ZXN0aW9uIE1hcmtcIixcImtleXdvcmRzXCI6W1wiZG91YnRcIixcImNvbmZ1c2VkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjc1M1wiLFwibmF0aXZlXCI6XCJcdTI3NTNcIn1dLFwidmVyc2lvblwiOjF9LFwiZ3JleV9xdWVzdGlvblwiOntcImlkXCI6XCJncmV5X3F1ZXN0aW9uXCIsXCJuYW1lXCI6XCJXaGl0ZSBRdWVzdGlvbiBNYXJrXCIsXCJrZXl3b3Jkc1wiOltcImdyZXlcIixcImRvdWJ0c1wiLFwiZ3JheVwiLFwiaHVoXCIsXCJjb25mdXNlZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3NTRcIixcIm5hdGl2ZVwiOlwiXHUyNzU0XCJ9XSxcInZlcnNpb25cIjoxfSxcImdyZXlfZXhjbGFtYXRpb25cIjp7XCJpZFwiOlwiZ3JleV9leGNsYW1hdGlvblwiLFwibmFtZVwiOlwiV2hpdGUgRXhjbGFtYXRpb24gTWFya1wiLFwia2V5d29yZHNcIjpbXCJncmV5XCIsXCJzdXJwcmlzZVwiLFwicHVuY3R1YXRpb25cIixcImdyYXlcIixcIndvd1wiLFwid2FybmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3NTVcIixcIm5hdGl2ZVwiOlwiXHUyNzU1XCJ9XSxcInZlcnNpb25cIjoxfSxcImV4Y2xhbWF0aW9uXCI6e1wiaWRcIjpcImV4Y2xhbWF0aW9uXCIsXCJuYW1lXCI6XCJSZWQgRXhjbGFtYXRpb24gTWFya1wiLFwia2V5d29yZHNcIjpbXCJoZWF2eVwiLFwiZGFuZ2VyXCIsXCJzdXJwcmlzZVwiLFwicHVuY3R1YXRpb25cIixcIndvd1wiLFwid2FybmluZ1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3NTdcIixcIm5hdGl2ZVwiOlwiXHUyNzU3XCJ9XSxcInZlcnNpb25cIjoxfSxcIndhdnlfZGFzaFwiOntcImlkXCI6XCJ3YXZ5X2Rhc2hcIixcIm5hbWVcIjpcIldhdnkgRGFzaFwiLFwia2V5d29yZHNcIjpbXCJkcmF3XCIsXCJsaW5lXCIsXCJtb3VzdGFjaGVcIixcIm11c3RhY2hlXCIsXCJzcXVpZ2dsZVwiLFwic2NyaWJibGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIzMDMwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUzMDMwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImN1cnJlbmN5X2V4Y2hhbmdlXCI6e1wiaWRcIjpcImN1cnJlbmN5X2V4Y2hhbmdlXCIsXCJuYW1lXCI6XCJDdXJyZW5jeSBFeGNoYW5nZVwiLFwia2V5d29yZHNcIjpbXCJtb25leVwiLFwic2FsZXNcIixcImRvbGxhclwiLFwidHJhdmVsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YjFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0IxXCJ9XSxcInZlcnNpb25cIjoxfSxcImhlYXZ5X2RvbGxhcl9zaWduXCI6e1wiaWRcIjpcImhlYXZ5X2RvbGxhcl9zaWduXCIsXCJuYW1lXCI6XCJIZWF2eSBEb2xsYXIgU2lnblwiLFwia2V5d29yZHNcIjpbXCJtb25leVwiLFwic2FsZXNcIixcInBheW1lbnRcIixcImN1cnJlbmN5XCIsXCJidWNrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YjJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0IyXCJ9XSxcInZlcnNpb25cIjoxfSxcIm1lZGljYWxfc3ltYm9sXCI6e1wiaWRcIjpcIm1lZGljYWxfc3ltYm9sXCIsXCJuYW1lXCI6XCJNZWRpY2FsIFN5bWJvbFwiLFwia2V5d29yZHNcIjpbXCJzdGFmZlwiLFwib2ZcIixcImFlc2N1bGFwaXVzXCIsXCJoZWFsdGhcIixcImhvc3BpdGFsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjY5NS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjY5NVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6NH0sXCJyZWN5Y2xlXCI6e1wiaWRcIjpcInJlY3ljbGVcIixcIm5hbWVcIjpcIlJlY3ljbGluZyBTeW1ib2xcIixcImtleXdvcmRzXCI6W1wicmVjeWNsZVwiLFwiYXJyb3dcIixcImVudmlyb25tZW50XCIsXCJnYXJiYWdlXCIsXCJ0cmFzaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2N2ItZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2N0JcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZmxldXJfZGVfbGlzXCI6e1wiaWRcIjpcImZsZXVyX2RlX2xpc1wiLFwibmFtZVwiOlwiRmxldXItRGUtTGlzXCIsXCJrZXl3b3Jkc1wiOltcImZsZXVyXCIsXCJkZVwiLFwibGlzXCIsXCJkZWNvcmF0aXZlXCIsXCJzY291dFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI2OWMtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI2OUNcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwidHJpZGVudFwiOntcImlkXCI6XCJ0cmlkZW50XCIsXCJuYW1lXCI6XCJUcmlkZW50IEVtYmxlbVwiLFwia2V5d29yZHNcIjpbXCJ3ZWFwb25cIixcInNwZWFyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MzFcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDMxXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5hbWVfYmFkZ2VcIjp7XCJpZFwiOlwibmFtZV9iYWRnZVwiLFwibmFtZVwiOlwiTmFtZSBCYWRnZVwiLFwia2V5d29yZHNcIjpbXCJmaXJlXCIsXCJmb3JiaWRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjRkYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURDREJcIn1dLFwidmVyc2lvblwiOjF9LFwiYmVnaW5uZXJcIjp7XCJpZFwiOlwiYmVnaW5uZXJcIixcIm5hbWVcIjpcIkphcGFuZXNlIFN5bWJvbCBmb3IgQmVnaW5uZXJcIixcImtleXdvcmRzXCI6W1wiYmFkZ2VcIixcInNoaWVsZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTMwXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQzMFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvXCI6e1wiaWRcIjpcIm9cIixcIm5hbWVcIjpcIkhvbGxvdyBSZWQgQ2lyY2xlXCIsXCJrZXl3b3Jkc1wiOltcIm9cIixcInJvdW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMmI1NVwiLFwibmF0aXZlXCI6XCJcdTJCNTVcIn1dLFwidmVyc2lvblwiOjF9LFwid2hpdGVfY2hlY2tfbWFya1wiOntcImlkXCI6XCJ3aGl0ZV9jaGVja19tYXJrXCIsXCJuYW1lXCI6XCJDaGVjayBNYXJrIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJ3aGl0ZVwiLFwiZ3JlZW5cIixcInNxdWFyZVwiLFwib2tcIixcImFncmVlXCIsXCJ2b3RlXCIsXCJlbGVjdGlvblwiLFwiYW5zd2VyXCIsXCJ0aWNrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjcwNVwiLFwibmF0aXZlXCI6XCJcdTI3MDVcIn1dLFwidmVyc2lvblwiOjF9LFwiYmFsbG90X2JveF93aXRoX2NoZWNrXCI6e1wiaWRcIjpcImJhbGxvdF9ib3hfd2l0aF9jaGVja1wiLFwibmFtZVwiOlwiQ2hlY2sgQm94IHdpdGggQ2hlY2tcIixcImtleXdvcmRzXCI6W1wiYmFsbG90XCIsXCJva1wiLFwiYWdyZWVcIixcImNvbmZpcm1cIixcImJsYWNrXCIsXCJzcXVhcmVcIixcInZvdGVcIixcImVsZWN0aW9uXCIsXCJ5ZXNcIixcInRpY2tcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNjExLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUyNjExXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcImhlYXZ5X2NoZWNrX21hcmtcIjp7XCJpZFwiOlwiaGVhdnlfY2hlY2tfbWFya1wiLFwibmFtZVwiOlwiQ2hlY2sgTWFya1wiLFwia2V5d29yZHNcIjpbXCJoZWF2eVwiLFwib2tcIixcIm5pa2VcIixcImFuc3dlclwiLFwieWVzXCIsXCJ0aWNrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjcxNC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjcxNFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ4XCI6e1wiaWRcIjpcInhcIixcIm5hbWVcIjpcIkNyb3NzIE1hcmtcIixcImtleXdvcmRzXCI6W1wieFwiLFwibm9cIixcImRlbGV0ZVwiLFwicmVtb3ZlXCIsXCJjYW5jZWxcIixcInJlZFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3NGNcIixcIm5hdGl2ZVwiOlwiXHUyNzRDXCJ9XSxcInZlcnNpb25cIjoxfSxcIm5lZ2F0aXZlX3NxdWFyZWRfY3Jvc3NfbWFya1wiOntcImlkXCI6XCJuZWdhdGl2ZV9zcXVhcmVkX2Nyb3NzX21hcmtcIixcIm5hbWVcIjpcIkNyb3NzIE1hcmsgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcIm5lZ2F0aXZlXCIsXCJzcXVhcmVkXCIsXCJ4XCIsXCJncmVlblwiLFwic3F1YXJlXCIsXCJub1wiLFwiZGVueVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3NGVcIixcIm5hdGl2ZVwiOlwiXHUyNzRFXCJ9XSxcInZlcnNpb25cIjoxfSxcImN1cmx5X2xvb3BcIjp7XCJpZFwiOlwiY3VybHlfbG9vcFwiLFwibmFtZVwiOlwiQ3VybHkgTG9vcFwiLFwia2V5d29yZHNcIjpbXCJzY3JpYmJsZVwiLFwiZHJhd1wiLFwic2hhcGVcIixcInNxdWlnZ2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjdiMFwiLFwibmF0aXZlXCI6XCJcdTI3QjBcIn1dLFwidmVyc2lvblwiOjF9LFwibG9vcFwiOntcImlkXCI6XCJsb29wXCIsXCJuYW1lXCI6XCJEb3VibGUgQ3VybHkgTG9vcFwiLFwia2V5d29yZHNcIjpbXCJ0YXBlXCIsXCJjYXNzZXR0ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3YmZcIixcIm5hdGl2ZVwiOlwiXHUyN0JGXCJ9XSxcInZlcnNpb25cIjoxfSxcInBhcnRfYWx0ZXJuYXRpb25fbWFya1wiOntcImlkXCI6XCJwYXJ0X2FsdGVybmF0aW9uX21hcmtcIixcIm5hbWVcIjpcIlBhcnQgQWx0ZXJuYXRpb24gTWFya1wiLFwia2V5d29yZHNcIjpbXCJncmFwaFwiLFwicHJlc2VudGF0aW9uXCIsXCJzdGF0c1wiLFwiYnVzaW5lc3NcIixcImVjb25vbWljc1wiLFwiYmFkXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMzAzZC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MzAzRFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJlaWdodF9zcG9rZWRfYXN0ZXJpc2tcIjp7XCJpZFwiOlwiZWlnaHRfc3Bva2VkX2FzdGVyaXNrXCIsXCJuYW1lXCI6XCJFaWdodCBTcG9rZWQgQXN0ZXJpc2tcIixcImtleXdvcmRzXCI6W1wic3RhclwiLFwic3BhcmtsZVwiLFwiZ3JlZW5cIixcInNxdWFyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3MzMtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI3MzNcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiZWlnaHRfcG9pbnRlZF9ibGFja19zdGFyXCI6e1wiaWRcIjpcImVpZ2h0X3BvaW50ZWRfYmxhY2tfc3RhclwiLFwibmFtZVwiOlwiRWlnaHQtUG9pbnRlZCBTdGFyXCIsXCJrZXl3b3Jkc1wiOltcImVpZ2h0XCIsXCJwb2ludGVkXCIsXCJibGFja1wiLFwib3JhbmdlXCIsXCJzcXVhcmVcIixcInNoYXBlXCIsXCJwb2x5Z29uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjczNC1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjczNFx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzcGFya2xlXCI6e1wiaWRcIjpcInNwYXJrbGVcIixcIm5hbWVcIjpcIlNwYXJrbGVcIixcImtleXdvcmRzXCI6W1wic3RhcnNcIixcImdyZWVuXCIsXCJzcXVhcmVcIixcImF3ZXNvbWVcIixcImdvb2RcIixcImZpcmV3b3Jrc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI3NDctZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI3NDdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiY29weXJpZ2h0XCI6e1wiaWRcIjpcImNvcHlyaWdodFwiLFwibmFtZVwiOlwiQ29weXJpZ2h0XCIsXCJrZXl3b3Jkc1wiOltcImlwXCIsXCJsaWNlbnNlXCIsXCJjaXJjbGVcIixcImxhd1wiLFwibGVnYWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIwMGE5LWZlMGZcIixcIm5hdGl2ZVwiOlwiXHUwMEE5XHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInJlZ2lzdGVyZWRcIjp7XCJpZFwiOlwicmVnaXN0ZXJlZFwiLFwibmFtZVwiOlwiUmVnaXN0ZXJlZFwiLFwia2V5d29yZHNcIjpbXCJhbHBoYWJldFwiLFwiY2lyY2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMDBhZS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MDBBRVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0bVwiOntcImlkXCI6XCJ0bVwiLFwibmFtZVwiOlwiVHJhZGUgTWFya1wiLFwia2V5d29yZHNcIjpbXCJ0bVwiLFwidHJhZGVtYXJrXCIsXCJicmFuZFwiLFwibGF3XCIsXCJsZWdhbFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIxMjItZmUwZlwiLFwibmF0aXZlXCI6XCJcdTIxMjJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiaGFzaFwiOntcImlkXCI6XCJoYXNoXCIsXCJuYW1lXCI6XCJIYXNoIEtleVwiLFwia2V5d29yZHNcIjpbXCJrZXljYXBcIixcIlwiLFwic3ltYm9sXCIsXCJibHVlXCIsXCJzcXVhcmVcIixcInR3aXR0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIwMDIzLWZlMGYtMjBlM1wiLFwibmF0aXZlXCI6XCIjXHVGRTBGXHUyMEUzXCJ9XSxcInZlcnNpb25cIjoxfSxcImtleWNhcF9zdGFyXCI6e1wiaWRcIjpcImtleWNhcF9zdGFyXCIsXCJuYW1lXCI6XCJLZXljYXA6ICpcIixcImtleXdvcmRzXCI6W1wia2V5Y2FwXCIsXCJzdGFyXCIsXCJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIwMDJhLWZlMGYtMjBlM1wiLFwibmF0aXZlXCI6XCIqXHVGRTBGXHUyMEUzXCJ9XSxcInZlcnNpb25cIjoyfSxcInplcm9cIjp7XCJpZFwiOlwiemVyb1wiLFwibmFtZVwiOlwiS2V5Y2FwIDBcIixcImtleXdvcmRzXCI6W1wiemVyb1wiLFwibnVtYmVyc1wiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJudWxsXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMDAzMC1mZTBmLTIwZTNcIixcIm5hdGl2ZVwiOlwiMFx1RkUwRlx1MjBFM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJvbmVcIjp7XCJpZFwiOlwib25lXCIsXCJuYW1lXCI6XCJLZXljYXAgMVwiLFwia2V5d29yZHNcIjpbXCJvbmVcIixcImJsdWVcIixcInNxdWFyZVwiLFwibnVtYmVyc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjAwMzEtZmUwZi0yMGUzXCIsXCJuYXRpdmVcIjpcIjFcdUZFMEZcdTIwRTNcIn1dLFwidmVyc2lvblwiOjF9LFwidHdvXCI6e1wiaWRcIjpcInR3b1wiLFwibmFtZVwiOlwiS2V5Y2FwIDJcIixcImtleXdvcmRzXCI6W1widHdvXCIsXCJudW1iZXJzXCIsXCJwcmltZVwiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMDAzMi1mZTBmLTIwZTNcIixcIm5hdGl2ZVwiOlwiMlx1RkUwRlx1MjBFM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ0aHJlZVwiOntcImlkXCI6XCJ0aHJlZVwiLFwibmFtZVwiOlwiS2V5Y2FwIDNcIixcImtleXdvcmRzXCI6W1widGhyZWVcIixcIm51bWJlcnNcIixcInByaW1lXCIsXCJibHVlXCIsXCJzcXVhcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIwMDMzLWZlMGYtMjBlM1wiLFwibmF0aXZlXCI6XCIzXHVGRTBGXHUyMEUzXCJ9XSxcInZlcnNpb25cIjoxfSxcImZvdXJcIjp7XCJpZFwiOlwiZm91clwiLFwibmFtZVwiOlwiS2V5Y2FwIDRcIixcImtleXdvcmRzXCI6W1wiZm91clwiLFwibnVtYmVyc1wiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMDAzNC1mZTBmLTIwZTNcIixcIm5hdGl2ZVwiOlwiNFx1RkUwRlx1MjBFM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmaXZlXCI6e1wiaWRcIjpcImZpdmVcIixcIm5hbWVcIjpcIktleWNhcCA1XCIsXCJrZXl3b3Jkc1wiOltcImZpdmVcIixcIm51bWJlcnNcIixcImJsdWVcIixcInNxdWFyZVwiLFwicHJpbWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIwMDM1LWZlMGYtMjBlM1wiLFwibmF0aXZlXCI6XCI1XHVGRTBGXHUyMEUzXCJ9XSxcInZlcnNpb25cIjoxfSxcInNpeFwiOntcImlkXCI6XCJzaXhcIixcIm5hbWVcIjpcIktleWNhcCA2XCIsXCJrZXl3b3Jkc1wiOltcInNpeFwiLFwibnVtYmVyc1wiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMDAzNi1mZTBmLTIwZTNcIixcIm5hdGl2ZVwiOlwiNlx1RkUwRlx1MjBFM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzZXZlblwiOntcImlkXCI6XCJzZXZlblwiLFwibmFtZVwiOlwiS2V5Y2FwIDdcIixcImtleXdvcmRzXCI6W1wic2V2ZW5cIixcIm51bWJlcnNcIixcImJsdWVcIixcInNxdWFyZVwiLFwicHJpbWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIwMDM3LWZlMGYtMjBlM1wiLFwibmF0aXZlXCI6XCI3XHVGRTBGXHUyMEUzXCJ9XSxcInZlcnNpb25cIjoxfSxcImVpZ2h0XCI6e1wiaWRcIjpcImVpZ2h0XCIsXCJuYW1lXCI6XCJLZXljYXAgOFwiLFwia2V5d29yZHNcIjpbXCJlaWdodFwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJudW1iZXJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMDAzOC1mZTBmLTIwZTNcIixcIm5hdGl2ZVwiOlwiOFx1RkUwRlx1MjBFM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJuaW5lXCI6e1wiaWRcIjpcIm5pbmVcIixcIm5hbWVcIjpcIktleWNhcCA5XCIsXCJrZXl3b3Jkc1wiOltcIm5pbmVcIixcImJsdWVcIixcInNxdWFyZVwiLFwibnVtYmVyc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjAwMzktZmUwZi0yMGUzXCIsXCJuYXRpdmVcIjpcIjlcdUZFMEZcdTIwRTNcIn1dLFwidmVyc2lvblwiOjF9LFwia2V5Y2FwX3RlblwiOntcImlkXCI6XCJrZXljYXBfdGVuXCIsXCJuYW1lXCI6XCJLZXljYXAgMTBcIixcImtleXdvcmRzXCI6W1widGVuXCIsXCJudW1iZXJzXCIsXCJibHVlXCIsXCJzcXVhcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUxZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMUZcIn1dLFwidmVyc2lvblwiOjF9LFwiY2FwaXRhbF9hYmNkXCI6e1wiaWRcIjpcImNhcGl0YWxfYWJjZFwiLFwibmFtZVwiOlwiSW5wdXQgTGF0aW4gVXBwZXJjYXNlXCIsXCJrZXl3b3Jkc1wiOltcImNhcGl0YWxcIixcImFiY2RcIixcImFscGhhYmV0XCIsXCJ3b3Jkc1wiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MjBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDIwXCJ9XSxcInZlcnNpb25cIjoxfSxcImFiY2RcIjp7XCJpZFwiOlwiYWJjZFwiLFwibmFtZVwiOlwiSW5wdXQgTGF0aW4gTG93ZXJjYXNlXCIsXCJrZXl3b3Jkc1wiOltcImFiY2RcIixcImJsdWVcIixcInNxdWFyZVwiLFwiYWxwaGFiZXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUyMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMjFcIn1dLFwidmVyc2lvblwiOjF9LFwic3ltYm9sc1wiOntcImlkXCI6XCJzeW1ib2xzXCIsXCJuYW1lXCI6XCJJbnB1dCBTeW1ib2xzXCIsXCJrZXl3b3Jkc1wiOltcImJsdWVcIixcInNxdWFyZVwiLFwibXVzaWNcIixcIm5vdGVcIixcImFtcGVyc2FuZFwiLFwicGVyY2VudFwiLFwiZ2x5cGhzXCIsXCJjaGFyYWN0ZXJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MjNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDIzXCJ9XSxcInZlcnNpb25cIjoxfSxcImFiY1wiOntcImlkXCI6XCJhYmNcIixcIm5hbWVcIjpcIklucHV0IExhdGluIExldHRlcnNcIixcImtleXdvcmRzXCI6W1wiYWJjXCIsXCJibHVlXCIsXCJzcXVhcmVcIixcImFscGhhYmV0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MjRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDI0XCJ9XSxcInZlcnNpb25cIjoxfSxcImFcIjp7XCJpZFwiOlwiYVwiLFwibmFtZVwiOlwiQSBCdXR0b24gKGJsb29kIFR5cGUpXCIsXCJrZXl3b3Jkc1wiOltcInJlZFwiLFwic3F1YXJlXCIsXCJhbHBoYWJldFwiLFwibGV0dGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxNzAtZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURENzBcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiYWJcIjp7XCJpZFwiOlwiYWJcIixcIm5hbWVcIjpcIk5lZ2F0aXZlIFNxdWFyZWQgQWJcIixcImtleXdvcmRzXCI6W1wiYnV0dG9uXCIsXCJyZWRcIixcInNxdWFyZVwiLFwiYWxwaGFiZXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjE4ZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdUREOEVcIn1dLFwidmVyc2lvblwiOjF9LFwiYlwiOntcImlkXCI6XCJiXCIsXCJuYW1lXCI6XCJCIEJ1dHRvbiAoYmxvb2QgVHlwZSlcIixcImtleXdvcmRzXCI6W1wicmVkXCIsXCJzcXVhcmVcIixcImFscGhhYmV0XCIsXCJsZXR0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjE3MS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REQ3MVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjbFwiOntcImlkXCI6XCJjbFwiLFwibmFtZVwiOlwiQ2wgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcImFscGhhYmV0XCIsXCJ3b3Jkc1wiLFwicmVkXCIsXCJzcXVhcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjE5MVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdUREOTFcIn1dLFwidmVyc2lvblwiOjF9LFwiY29vbFwiOntcImlkXCI6XCJjb29sXCIsXCJuYW1lXCI6XCJDb29sIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJ3b3Jkc1wiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxOTJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERDkyXCJ9XSxcInZlcnNpb25cIjoxfSxcImZyZWVcIjp7XCJpZFwiOlwiZnJlZVwiLFwibmFtZVwiOlwiRnJlZSBCdXR0b25cIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJ3b3Jkc1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMTkzXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REQ5M1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJpbmZvcm1hdGlvbl9zb3VyY2VcIjp7XCJpZFwiOlwiaW5mb3JtYXRpb25fc291cmNlXCIsXCJuYW1lXCI6XCJJbmZvcm1hdGlvblwiLFwia2V5d29yZHNcIjpbXCJzb3VyY2VcIixcImJsdWVcIixcInNxdWFyZVwiLFwiYWxwaGFiZXRcIixcImxldHRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjIxMzktZmUwZlwiLFwibmF0aXZlXCI6XCJcdTIxMzlcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwiaWRcIjp7XCJpZFwiOlwiaWRcIixcIm5hbWVcIjpcIklkIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJwdXJwbGVcIixcInNxdWFyZVwiLFwid29yZHNcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjE5NFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdUREOTRcIn1dLFwidmVyc2lvblwiOjF9LFwibVwiOntcImlkXCI6XCJtXCIsXCJuYW1lXCI6XCJDaXJjbGVkIE1cIixcImtleXdvcmRzXCI6W1wiYWxwaGFiZXRcIixcImJsdWVcIixcImNpcmNsZVwiLFwibGV0dGVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjRjMi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjRDMlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJuZXdcIjp7XCJpZFwiOlwibmV3XCIsXCJuYW1lXCI6XCJOZXcgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcImJsdWVcIixcInNxdWFyZVwiLFwid29yZHNcIixcInN0YXJ0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxOTVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERDk1XCJ9XSxcInZlcnNpb25cIjoxfSxcIm5nXCI6e1wiaWRcIjpcIm5nXCIsXCJuYW1lXCI6XCJOZyBCdXR0b25cIixcImtleXdvcmRzXCI6W1wiYmx1ZVwiLFwic3F1YXJlXCIsXCJ3b3Jkc1wiLFwic2hhcGVcIixcImljb25cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjE5NlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdUREOTZcIn1dLFwidmVyc2lvblwiOjF9LFwibzJcIjp7XCJpZFwiOlwibzJcIixcIm5hbWVcIjpcIk8gQnV0dG9uIChibG9vZCBUeXBlKVwiLFwia2V5d29yZHNcIjpbXCJvMlwiLFwiYWxwaGFiZXRcIixcInJlZFwiLFwic3F1YXJlXCIsXCJsZXR0ZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjE3ZS1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REQ3RVx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJva1wiOntcImlkXCI6XCJva1wiLFwibmFtZVwiOlwiT2sgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcImdvb2RcIixcImFncmVlXCIsXCJ5ZXNcIixcImJsdWVcIixcInNxdWFyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMTk3XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REQ5N1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJwYXJraW5nXCI6e1wiaWRcIjpcInBhcmtpbmdcIixcIm5hbWVcIjpcIlAgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcInBhcmtpbmdcIixcImNhcnNcIixcImJsdWVcIixcInNxdWFyZVwiLFwiYWxwaGFiZXRcIixcImxldHRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMTdmLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERDdGXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxfSxcInNvc1wiOntcImlkXCI6XCJzb3NcIixcIm5hbWVcIjpcIlNvcyBCdXR0b25cIixcImtleXdvcmRzXCI6W1wiaGVscFwiLFwicmVkXCIsXCJzcXVhcmVcIixcIndvcmRzXCIsXCJlbWVyZ2VuY3lcIixcIjkxMVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMTk4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REQ5OFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ1cFwiOntcImlkXCI6XCJ1cFwiLFwibmFtZVwiOlwiVXAhIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJ1cFwiLFwiYmx1ZVwiLFwic3F1YXJlXCIsXCJhYm92ZVwiLFwiaGlnaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMTk5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REQ5OVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ2c1wiOntcImlkXCI6XCJ2c1wiLFwibmFtZVwiOlwiVnMgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcIndvcmRzXCIsXCJvcmFuZ2VcIixcInNxdWFyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMTlhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REQ5QVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJrb2tvXCI6e1wiaWRcIjpcImtva29cIixcIm5hbWVcIjpcIlNxdWFyZWQgS2F0YWthbmEgS29rb1wiLFwia2V5d29yZHNcIjpbXCJqYXBhbmVzZVwiLFwiaGVyZVwiLFwiYnV0dG9uXCIsXCJibHVlXCIsXCJzcXVhcmVcIixcImRlc3RpbmF0aW9uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyMDFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERTAxXCJ9XSxcInZlcnNpb25cIjoxfSxcInNhXCI6e1wiaWRcIjpcInNhXCIsXCJuYW1lXCI6XCJTcXVhcmVkIEthdGFrYW5hIFNhXCIsXCJrZXl3b3Jkc1wiOltcImphcGFuZXNlXCIsXCJzZXJ2aWNlXCIsXCJjaGFyZ2VcIixcImJ1dHRvblwiLFwiYmx1ZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyMDItZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURFMDJcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwidTY3MDhcIjp7XCJpZFwiOlwidTY3MDhcIixcIm5hbWVcIjpcIkphcGFuZXNlIFx1MjAxQ21vbnRobHkgQW1vdW50XHUyMDFEIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJ1NjcwOFwiLFwibW9udGhseVwiLFwiYW1vdW50XCIsXCJjaGluZXNlXCIsXCJtb250aFwiLFwibW9vblwiLFwib3JhbmdlXCIsXCJzcXVhcmVcIixcImthbmppXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyMzctZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURFMzdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwidTY3MDlcIjp7XCJpZFwiOlwidTY3MDlcIixcIm5hbWVcIjpcIlNxdWFyZWQgQ2prIFVuaWZpZWQgSWRlb2dyYXBoLTY3MDlcIixcImtleXdvcmRzXCI6W1widTY3MDlcIixcImphcGFuZXNlXCIsXCJub3RcIixcImZyZWVcIixcIm9mXCIsXCJjaGFyZ2VcIixcImJ1dHRvblwiLFwib3JhbmdlXCIsXCJzcXVhcmVcIixcImNoaW5lc2VcIixcImhhdmVcIixcImthbmppXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyMzZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERTM2XCJ9XSxcInZlcnNpb25cIjoxfSxcInU2MzA3XCI6e1wiaWRcIjpcInU2MzA3XCIsXCJuYW1lXCI6XCJKYXBhbmVzZSBcdTIwMUNyZXNlcnZlZFx1MjAxRCBCdXR0b25cIixcImtleXdvcmRzXCI6W1widTYzMDdcIixcInJlc2VydmVkXCIsXCJjaGluZXNlXCIsXCJwb2ludFwiLFwiZ3JlZW5cIixcInNxdWFyZVwiLFwia2FuamlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjIyZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURFMkZcIn1dLFwidmVyc2lvblwiOjF9LFwiaWRlb2dyYXBoX2FkdmFudGFnZVwiOntcImlkXCI6XCJpZGVvZ3JhcGhfYWR2YW50YWdlXCIsXCJuYW1lXCI6XCJKYXBhbmVzZSBcdTIwMUNiYXJnYWluXHUyMDFEIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJpZGVvZ3JhcGhcIixcImFkdmFudGFnZVwiLFwiYmFyZ2FpblwiLFwiY2hpbmVzZVwiLFwia2FuamlcIixcIm9idGFpblwiLFwiZ2V0XCIsXCJjaXJjbGVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjI1MFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURFNTBcIn1dLFwidmVyc2lvblwiOjF9LFwidTUyNzJcIjp7XCJpZFwiOlwidTUyNzJcIixcIm5hbWVcIjpcIkphcGFuZXNlIFx1MjAxQ2Rpc2NvdW50XHUyMDFEIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJ1NTI3MlwiLFwiZGlzY291bnRcIixcImN1dFwiLFwiZGl2aWRlXCIsXCJjaGluZXNlXCIsXCJrYW5qaVwiLFwicGlua1wiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyMzlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERTM5XCJ9XSxcInZlcnNpb25cIjoxfSxcInU3MTIxXCI6e1wiaWRcIjpcInU3MTIxXCIsXCJuYW1lXCI6XCJKYXBhbmVzZSBcdTIwMUNmcmVlIG9mIENoYXJnZVx1MjAxRCBCdXR0b25cIixcImtleXdvcmRzXCI6W1widTcxMjFcIixcImZyZWVcIixcImNoYXJnZVwiLFwibm90aGluZ1wiLFwiY2hpbmVzZVwiLFwia2FuamlcIixcIm9yYW5nZVwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyMWFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERTFBXCJ9XSxcInZlcnNpb25cIjoxfSxcInU3OTgxXCI6e1wiaWRcIjpcInU3OTgxXCIsXCJuYW1lXCI6XCJKYXBhbmVzZSBcdTIwMUNwcm9oaWJpdGVkXHUyMDFEIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJ1Nzk4MVwiLFwicHJvaGliaXRlZFwiLFwia2FuamlcIixcImNoaW5lc2VcIixcImZvcmJpZGRlblwiLFwibGltaXRcIixcInJlc3RyaWN0ZWRcIixcInJlZFwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyMzJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERTMyXCJ9XSxcInZlcnNpb25cIjoxfSxcImFjY2VwdFwiOntcImlkXCI6XCJhY2NlcHRcIixcIm5hbWVcIjpcIkNpcmNsZWQgSWRlb2dyYXBoIEFjY2VwdFwiLFwia2V5d29yZHNcIjpbXCJqYXBhbmVzZVwiLFwiYWNjZXB0YWJsZVwiLFwiYnV0dG9uXCIsXCJva1wiLFwiZ29vZFwiLFwiY2hpbmVzZVwiLFwia2FuamlcIixcImFncmVlXCIsXCJ5ZXNcIixcIm9yYW5nZVwiLFwiY2lyY2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyNTFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERTUxXCJ9XSxcInZlcnNpb25cIjoxfSxcInU3NTMzXCI6e1wiaWRcIjpcInU3NTMzXCIsXCJuYW1lXCI6XCJKYXBhbmVzZSBcdTIwMUNhcHBsaWNhdGlvblx1MjAxRCBCdXR0b25cIixcImtleXdvcmRzXCI6W1widTc1MzNcIixcImFwcGxpY2F0aW9uXCIsXCJjaGluZXNlXCIsXCJrYW5qaVwiLFwib3JhbmdlXCIsXCJzcXVhcmVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjIzOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURFMzhcIn1dLFwidmVyc2lvblwiOjF9LFwidTU0MDhcIjp7XCJpZFwiOlwidTU0MDhcIixcIm5hbWVcIjpcIkphcGFuZXNlIFx1MjAxQ3Bhc3NpbmcgR3JhZGVcdTIwMUQgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcInU1NDA4XCIsXCJwYXNzaW5nXCIsXCJncmFkZVwiLFwiY2hpbmVzZVwiLFwiam9pblwiLFwia2FuamlcIixcInJlZFwiLFwic3F1YXJlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYyMzRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERTM0XCJ9XSxcInZlcnNpb25cIjoxfSxcInU3YTdhXCI6e1wiaWRcIjpcInU3YTdhXCIsXCJuYW1lXCI6XCJKYXBhbmVzZSBcdTIwMUN2YWNhbmN5XHUyMDFEIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJ1N2E3YVwiLFwidmFjYW5jeVwiLFwia2FuamlcIixcImNoaW5lc2VcIixcImVtcHR5XCIsXCJza3lcIixcImJsdWVcIixcInNxdWFyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMjMzXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REUzM1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJjb25ncmF0dWxhdGlvbnNcIjp7XCJpZFwiOlwiY29uZ3JhdHVsYXRpb25zXCIsXCJuYW1lXCI6XCJDaXJjbGVkIElkZW9ncmFwaCBDb25ncmF0dWxhdGlvblwiLFwia2V5d29yZHNcIjpbXCJjb25ncmF0dWxhdGlvbnNcIixcImphcGFuZXNlXCIsXCJidXR0b25cIixcImNoaW5lc2VcIixcImthbmppXCIsXCJyZWRcIixcImNpcmNsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjMyOTctZmUwZlwiLFwibmF0aXZlXCI6XCJcdTMyOTdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwic2VjcmV0XCI6e1wiaWRcIjpcInNlY3JldFwiLFwibmFtZVwiOlwiQ2lyY2xlZCBJZGVvZ3JhcGggU2VjcmV0XCIsXCJrZXl3b3Jkc1wiOltcImphcGFuZXNlXCIsXCJidXR0b25cIixcInByaXZhY3lcIixcImNoaW5lc2VcIixcInNzaGhcIixcImthbmppXCIsXCJyZWRcIixcImNpcmNsZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjMyOTktZmUwZlwiLFwibmF0aXZlXCI6XCJcdTMyOTlcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwidTU1YjZcIjp7XCJpZFwiOlwidTU1YjZcIixcIm5hbWVcIjpcIlNxdWFyZWQgQ2prIFVuaWZpZWQgSWRlb2dyYXBoLTU1YjZcIixcImtleXdvcmRzXCI6W1widTU1YjZcIixcImphcGFuZXNlXCIsXCJvcGVuXCIsXCJmb3JcIixcImJ1c2luZXNzXCIsXCJidXR0b25cIixcIm9wZW5pbmdcIixcImhvdXJzXCIsXCJvcmFuZ2VcIixcInNxdWFyZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMjNhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REUzQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ1NmU4MFwiOntcImlkXCI6XCJ1NmU4MFwiLFwibmFtZVwiOlwiSmFwYW5lc2UgXHUyMDFDbm8gVmFjYW5jeVx1MjAxRCBCdXR0b25cIixcImtleXdvcmRzXCI6W1widTZlODBcIixcIm5vXCIsXCJ2YWNhbmN5XCIsXCJmdWxsXCIsXCJjaGluZXNlXCIsXCJyZWRcIixcInNxdWFyZVwiLFwia2FuamlcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjIzNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURFMzVcIn1dLFwidmVyc2lvblwiOjF9LFwicmVkX2NpcmNsZVwiOntcImlkXCI6XCJyZWRfY2lyY2xlXCIsXCJuYW1lXCI6XCJSZWQgQ2lyY2xlXCIsXCJrZXl3b3Jkc1wiOltcInNoYXBlXCIsXCJlcnJvclwiLFwiZGFuZ2VyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MzRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDM0XCJ9XSxcInZlcnNpb25cIjoxfSxcImxhcmdlX29yYW5nZV9jaXJjbGVcIjp7XCJpZFwiOlwibGFyZ2Vfb3JhbmdlX2NpcmNsZVwiLFwibmFtZVwiOlwiT3JhbmdlIENpcmNsZVwiLFwia2V5d29yZHNcIjpbXCJsYXJnZVwiLFwicm91bmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjdlMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURGRTBcIn1dLFwidmVyc2lvblwiOjEyfSxcImxhcmdlX3llbGxvd19jaXJjbGVcIjp7XCJpZFwiOlwibGFyZ2VfeWVsbG93X2NpcmNsZVwiLFwibmFtZVwiOlwiWWVsbG93IENpcmNsZVwiLFwia2V5d29yZHNcIjpbXCJsYXJnZVwiLFwicm91bmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjdlMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURGRTFcIn1dLFwidmVyc2lvblwiOjEyfSxcImxhcmdlX2dyZWVuX2NpcmNsZVwiOntcImlkXCI6XCJsYXJnZV9ncmVlbl9jaXJjbGVcIixcIm5hbWVcIjpcIkdyZWVuIENpcmNsZVwiLFwia2V5d29yZHNcIjpbXCJsYXJnZVwiLFwicm91bmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjdlMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURGRTJcIn1dLFwidmVyc2lvblwiOjEyfSxcImxhcmdlX2JsdWVfY2lyY2xlXCI6e1wiaWRcIjpcImxhcmdlX2JsdWVfY2lyY2xlXCIsXCJuYW1lXCI6XCJCbHVlIENpcmNsZVwiLFwia2V5d29yZHNcIjpbXCJsYXJnZVwiLFwic2hhcGVcIixcImljb25cIixcImJ1dHRvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTM1XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQzNVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsYXJnZV9wdXJwbGVfY2lyY2xlXCI6e1wiaWRcIjpcImxhcmdlX3B1cnBsZV9jaXJjbGVcIixcIm5hbWVcIjpcIlB1cnBsZSBDaXJjbGVcIixcImtleXdvcmRzXCI6W1wibGFyZ2VcIixcInJvdW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY3ZTNcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERkUzXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJsYXJnZV9icm93bl9jaXJjbGVcIjp7XCJpZFwiOlwibGFyZ2VfYnJvd25fY2lyY2xlXCIsXCJuYW1lXCI6XCJCcm93biBDaXJjbGVcIixcImtleXdvcmRzXCI6W1wibGFyZ2VcIixcInJvdW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY3ZTRcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERkU0XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJibGFja19jaXJjbGVcIjp7XCJpZFwiOlwiYmxhY2tfY2lyY2xlXCIsXCJuYW1lXCI6XCJCbGFjayBDaXJjbGVcIixcImtleXdvcmRzXCI6W1wic2hhcGVcIixcImJ1dHRvblwiLFwicm91bmRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIyNmFiXCIsXCJuYXRpdmVcIjpcIlx1MjZBQlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3aGl0ZV9jaXJjbGVcIjp7XCJpZFwiOlwid2hpdGVfY2lyY2xlXCIsXCJuYW1lXCI6XCJXaGl0ZSBDaXJjbGVcIixcImtleXdvcmRzXCI6W1wic2hhcGVcIixcInJvdW5kXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjZhYVwiLFwibmF0aXZlXCI6XCJcdTI2QUFcIn1dLFwidmVyc2lvblwiOjF9LFwibGFyZ2VfcmVkX3NxdWFyZVwiOntcImlkXCI6XCJsYXJnZV9yZWRfc3F1YXJlXCIsXCJuYW1lXCI6XCJSZWQgU3F1YXJlXCIsXCJrZXl3b3Jkc1wiOltcImxhcmdlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY3ZTVcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERkU1XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJsYXJnZV9vcmFuZ2Vfc3F1YXJlXCI6e1wiaWRcIjpcImxhcmdlX29yYW5nZV9zcXVhcmVcIixcIm5hbWVcIjpcIk9yYW5nZSBTcXVhcmVcIixcImtleXdvcmRzXCI6W1wibGFyZ2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjdlN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURGRTdcIn1dLFwidmVyc2lvblwiOjEyfSxcImxhcmdlX3llbGxvd19zcXVhcmVcIjp7XCJpZFwiOlwibGFyZ2VfeWVsbG93X3NxdWFyZVwiLFwibmFtZVwiOlwiWWVsbG93IFNxdWFyZVwiLFwia2V5d29yZHNcIjpbXCJsYXJnZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmN2U4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REZFOFwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwibGFyZ2VfZ3JlZW5fc3F1YXJlXCI6e1wiaWRcIjpcImxhcmdlX2dyZWVuX3NxdWFyZVwiLFwibmFtZVwiOlwiR3JlZW4gU3F1YXJlXCIsXCJrZXl3b3Jkc1wiOltcImxhcmdlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY3ZTlcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERkU5XCJ9XSxcInZlcnNpb25cIjoxMn0sXCJsYXJnZV9ibHVlX3NxdWFyZVwiOntcImlkXCI6XCJsYXJnZV9ibHVlX3NxdWFyZVwiLFwibmFtZVwiOlwiQmx1ZSBTcXVhcmVcIixcImtleXdvcmRzXCI6W1wibGFyZ2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjdlNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURGRTZcIn1dLFwidmVyc2lvblwiOjEyfSxcImxhcmdlX3B1cnBsZV9zcXVhcmVcIjp7XCJpZFwiOlwibGFyZ2VfcHVycGxlX3NxdWFyZVwiLFwibmFtZVwiOlwiUHVycGxlIFNxdWFyZVwiLFwia2V5d29yZHNcIjpbXCJsYXJnZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmN2VhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REZFQVwifV0sXCJ2ZXJzaW9uXCI6MTJ9LFwibGFyZ2VfYnJvd25fc3F1YXJlXCI6e1wiaWRcIjpcImxhcmdlX2Jyb3duX3NxdWFyZVwiLFwibmFtZVwiOlwiQnJvd24gU3F1YXJlXCIsXCJrZXl3b3Jkc1wiOltcImxhcmdlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY3ZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERkVCXCJ9XSxcInZlcnNpb25cIjoxMn0sXCJibGFja19sYXJnZV9zcXVhcmVcIjp7XCJpZFwiOlwiYmxhY2tfbGFyZ2Vfc3F1YXJlXCIsXCJuYW1lXCI6XCJCbGFjayBMYXJnZSBTcXVhcmVcIixcImtleXdvcmRzXCI6W1wic2hhcGVcIixcImljb25cIixcImJ1dHRvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjJiMWJcIixcIm5hdGl2ZVwiOlwiXHUyQjFCXCJ9XSxcInZlcnNpb25cIjoxfSxcIndoaXRlX2xhcmdlX3NxdWFyZVwiOntcImlkXCI6XCJ3aGl0ZV9sYXJnZV9zcXVhcmVcIixcIm5hbWVcIjpcIldoaXRlIExhcmdlIFNxdWFyZVwiLFwia2V5d29yZHNcIjpbXCJzaGFwZVwiLFwiaWNvblwiLFwic3RvbmVcIixcImJ1dHRvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjJiMWNcIixcIm5hdGl2ZVwiOlwiXHUyQjFDXCJ9XSxcInZlcnNpb25cIjoxfSxcImJsYWNrX21lZGl1bV9zcXVhcmVcIjp7XCJpZFwiOlwiYmxhY2tfbWVkaXVtX3NxdWFyZVwiLFwibmFtZVwiOlwiQmxhY2sgTWVkaXVtIFNxdWFyZVwiLFwia2V5d29yZHNcIjpbXCJzaGFwZVwiLFwiYnV0dG9uXCIsXCJpY29uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjVmYy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjVGQ1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3aGl0ZV9tZWRpdW1fc3F1YXJlXCI6e1wiaWRcIjpcIndoaXRlX21lZGl1bV9zcXVhcmVcIixcIm5hbWVcIjpcIldoaXRlIE1lZGl1bSBTcXVhcmVcIixcImtleXdvcmRzXCI6W1wic2hhcGVcIixcInN0b25lXCIsXCJpY29uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjVmYi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjVGQlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJibGFja19tZWRpdW1fc21hbGxfc3F1YXJlXCI6e1wiaWRcIjpcImJsYWNrX21lZGl1bV9zbWFsbF9zcXVhcmVcIixcIm5hbWVcIjpcIkJsYWNrIE1lZGl1bSBTbWFsbCBTcXVhcmVcIixcImtleXdvcmRzXCI6W1wiaWNvblwiLFwic2hhcGVcIixcImJ1dHRvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI1ZmVcIixcIm5hdGl2ZVwiOlwiXHUyNUZFXCJ9XSxcInZlcnNpb25cIjoxfSxcIndoaXRlX21lZGl1bV9zbWFsbF9zcXVhcmVcIjp7XCJpZFwiOlwid2hpdGVfbWVkaXVtX3NtYWxsX3NxdWFyZVwiLFwibmFtZVwiOlwiV2hpdGUgTWVkaXVtIFNtYWxsIFNxdWFyZVwiLFwia2V5d29yZHNcIjpbXCJzaGFwZVwiLFwic3RvbmVcIixcImljb25cIixcImJ1dHRvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI1ZmRcIixcIm5hdGl2ZVwiOlwiXHUyNUZEXCJ9XSxcInZlcnNpb25cIjoxfSxcImJsYWNrX3NtYWxsX3NxdWFyZVwiOntcImlkXCI6XCJibGFja19zbWFsbF9zcXVhcmVcIixcIm5hbWVcIjpcIkJsYWNrIFNtYWxsIFNxdWFyZVwiLFwia2V5d29yZHNcIjpbXCJzaGFwZVwiLFwiaWNvblwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjI1YWEtZmUwZlwiLFwibmF0aXZlXCI6XCJcdTI1QUFcdUZFMEZcIn1dLFwidmVyc2lvblwiOjF9LFwid2hpdGVfc21hbGxfc3F1YXJlXCI6e1wiaWRcIjpcIndoaXRlX3NtYWxsX3NxdWFyZVwiLFwibmFtZVwiOlwiV2hpdGUgU21hbGwgU3F1YXJlXCIsXCJrZXl3b3Jkc1wiOltcInNoYXBlXCIsXCJpY29uXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMjVhYi1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1MjVBQlx1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJsYXJnZV9vcmFuZ2VfZGlhbW9uZFwiOntcImlkXCI6XCJsYXJnZV9vcmFuZ2VfZGlhbW9uZFwiLFwibmFtZVwiOlwiTGFyZ2UgT3JhbmdlIERpYW1vbmRcIixcImtleXdvcmRzXCI6W1wic2hhcGVcIixcImpld2VsXCIsXCJnZW1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUzNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMzZcIn1dLFwidmVyc2lvblwiOjF9LFwibGFyZ2VfYmx1ZV9kaWFtb25kXCI6e1wiaWRcIjpcImxhcmdlX2JsdWVfZGlhbW9uZFwiLFwibmFtZVwiOlwiTGFyZ2UgQmx1ZSBEaWFtb25kXCIsXCJrZXl3b3Jkc1wiOltcInNoYXBlXCIsXCJqZXdlbFwiLFwiZ2VtXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MzdcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDM3XCJ9XSxcInZlcnNpb25cIjoxfSxcInNtYWxsX29yYW5nZV9kaWFtb25kXCI6e1wiaWRcIjpcInNtYWxsX29yYW5nZV9kaWFtb25kXCIsXCJuYW1lXCI6XCJTbWFsbCBPcmFuZ2UgRGlhbW9uZFwiLFwia2V5d29yZHNcIjpbXCJzaGFwZVwiLFwiamV3ZWxcIixcImdlbVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTM4XCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQzOFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzbWFsbF9ibHVlX2RpYW1vbmRcIjp7XCJpZFwiOlwic21hbGxfYmx1ZV9kaWFtb25kXCIsXCJuYW1lXCI6XCJTbWFsbCBCbHVlIERpYW1vbmRcIixcImtleXdvcmRzXCI6W1wic2hhcGVcIixcImpld2VsXCIsXCJnZW1cIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUzOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMzlcIn1dLFwidmVyc2lvblwiOjF9LFwic21hbGxfcmVkX3RyaWFuZ2xlXCI6e1wiaWRcIjpcInNtYWxsX3JlZF90cmlhbmdsZVwiLFwibmFtZVwiOlwiUmVkIFRyaWFuZ2xlIFBvaW50ZWQgVXBcIixcImtleXdvcmRzXCI6W1wic21hbGxcIixcInNoYXBlXCIsXCJkaXJlY3Rpb25cIixcInRvcFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmNTNhXCIsXCJuYXRpdmVcIjpcIlx1RDgzRFx1REQzQVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJzbWFsbF9yZWRfdHJpYW5nbGVfZG93blwiOntcImlkXCI6XCJzbWFsbF9yZWRfdHJpYW5nbGVfZG93blwiLFwibmFtZVwiOlwiUmVkIFRyaWFuZ2xlIFBvaW50ZWQgRG93blwiLFwia2V5d29yZHNcIjpbXCJzbWFsbFwiLFwic2hhcGVcIixcImRpcmVjdGlvblwiLFwiYm90dG9tXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1M2JcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDNCXCJ9XSxcInZlcnNpb25cIjoxfSxcImRpYW1vbmRfc2hhcGVfd2l0aF9hX2RvdF9pbnNpZGVcIjp7XCJpZFwiOlwiZGlhbW9uZF9zaGFwZV93aXRoX2FfZG90X2luc2lkZVwiLFwibmFtZVwiOlwiRGlhbW9uZCB3aXRoIGEgRG90XCIsXCJrZXl3b3Jkc1wiOltcInNoYXBlXCIsXCJpbnNpZGVcIixcImpld2VsXCIsXCJibHVlXCIsXCJnZW1cIixcImNyeXN0YWxcIixcImZhbmN5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY0YTBcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVEQ0EwXCJ9XSxcInZlcnNpb25cIjoxfSxcInJhZGlvX2J1dHRvblwiOntcImlkXCI6XCJyYWRpb19idXR0b25cIixcIm5hbWVcIjpcIlJhZGlvIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJpbnB1dFwiLFwib2xkXCIsXCJtdXNpY1wiLFwiY2lyY2xlXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWY1MThcIixcIm5hdGl2ZVwiOlwiXHVEODNEXHVERDE4XCJ9XSxcInZlcnNpb25cIjoxfSxcIndoaXRlX3NxdWFyZV9idXR0b25cIjp7XCJpZFwiOlwid2hpdGVfc3F1YXJlX2J1dHRvblwiLFwibmFtZVwiOlwiV2hpdGUgU3F1YXJlIEJ1dHRvblwiLFwia2V5d29yZHNcIjpbXCJzaGFwZVwiLFwiaW5wdXRcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUzM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMzNcIn1dLFwidmVyc2lvblwiOjF9LFwiYmxhY2tfc3F1YXJlX2J1dHRvblwiOntcImlkXCI6XCJibGFja19zcXVhcmVfYnV0dG9uXCIsXCJuYW1lXCI6XCJCbGFjayBTcXVhcmUgQnV0dG9uXCIsXCJrZXl3b3Jkc1wiOltcInNoYXBlXCIsXCJpbnB1dFwiLFwiZnJhbWVcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjUzMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdUREMzJcIn1dLFwidmVyc2lvblwiOjF9LFwiY2hlY2tlcmVkX2ZsYWdcIjp7XCJpZFwiOlwiY2hlY2tlcmVkX2ZsYWdcIixcIm5hbWVcIjpcIkNoZXF1ZXJlZCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImNoZWNrZXJlZFwiLFwiY29udGVzdFwiLFwiZmluaXNobGluZVwiLFwicmFjZVwiLFwiZ29rYXJ0XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzYzFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkMxXCJ9XSxcInZlcnNpb25cIjoxfSxcInRyaWFuZ3VsYXJfZmxhZ19vbl9wb3N0XCI6e1wiaWRcIjpcInRyaWFuZ3VsYXJfZmxhZ19vbl9wb3N0XCIsXCJuYW1lXCI6XCJUcmlhbmd1bGFyIEZsYWdcIixcImtleXdvcmRzXCI6W1wib25cIixcInBvc3RcIixcIm1hcmtcIixcIm1pbGVzdG9uZVwiLFwicGxhY2VcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjZhOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0RcdURFQTlcIn1dLFwidmVyc2lvblwiOjF9LFwiY3Jvc3NlZF9mbGFnc1wiOntcImlkXCI6XCJjcm9zc2VkX2ZsYWdzXCIsXCJuYW1lXCI6XCJDcm9zc2VkIEZsYWdzXCIsXCJrZXl3b3Jkc1wiOltcImphcGFuZXNlXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJvcmRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMzhjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REY4Q1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3YXZpbmdfYmxhY2tfZmxhZ1wiOntcImlkXCI6XCJ3YXZpbmdfYmxhY2tfZmxhZ1wiLFwibmFtZVwiOlwiQmxhY2sgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ3YXZpbmdcIixcInBpcmF0ZVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2Y0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZGNFwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJ3YXZpbmdfd2hpdGVfZmxhZ1wiOntcImlkXCI6XCJ3YXZpbmdfd2hpdGVfZmxhZ1wiLFwibmFtZVwiOlwiV2hpdGUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ3YXZpbmdcIixcImxvc2luZ1wiLFwibG9zZXJcIixcImxvc3RcIixcInN1cnJlbmRlclwiLFwiZ2l2ZVwiLFwidXBcIixcImZhaWxcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNmMy1mZTBmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZGM1x1RkUwRlwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJyYWluYm93LWZsYWdcIjp7XCJpZFwiOlwicmFpbmJvdy1mbGFnXCIsXCJuYW1lXCI6XCJSYWluYm93IEZsYWdcIixcImtleXdvcmRzXCI6W1wicHJpZGVcIixcImdheVwiLFwibGdidFwiLFwiZ2xidFwiLFwicXVlZXJcIixcImhvbW9zZXh1YWxcIixcImxlc2JpYW5cIixcImJpc2V4dWFsXCIsXCJ0cmFuc2dlbmRlclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2YzLWZlMGYtMjAwZC0xZjMwOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRjNcdUZFMEZcdTIwMERcdUQ4M0NcdURGMDhcIn1dLFwidmVyc2lvblwiOjR9LFwidHJhbnNnZW5kZXJfZmxhZ1wiOntcImlkXCI6XCJ0cmFuc2dlbmRlcl9mbGFnXCIsXCJuYW1lXCI6XCJUcmFuc2dlbmRlciBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImxnYnRxXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZjMtZmUwZi0yMDBkLTI2YTctZmUwZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRjNcdUZFMEZcdTIwMERcdTI2QTdcdUZFMEZcIn1dLFwidmVyc2lvblwiOjEzfSxcInBpcmF0ZV9mbGFnXCI6e1wiaWRcIjpcInBpcmF0ZV9mbGFnXCIsXCJuYW1lXCI6XCJQaXJhdGUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJza3VsbFwiLFwiY3Jvc3Nib25lc1wiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZjQtMjAwZC0yNjIwLWZlMGZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkY0XHUyMDBEXHUyNjIwXHVGRTBGXCJ9XSxcInZlcnNpb25cIjoxMX0sXCJmbGFnLWFjXCI6e1wiaWRcIjpcImZsYWctYWNcIixcIm5hbWVcIjpcIkFzY2Vuc2lvbiBJc2xhbmQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJhY1wiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU2LTFmMWU4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFNlx1RDgzQ1x1RERFOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWFkXCI6e1wiaWRcIjpcImZsYWctYWRcIixcIm5hbWVcIjpcIkFuZG9ycmEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJhZFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNi0xZjFlOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTZcdUQ4M0NcdURERTlcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1hZVwiOntcImlkXCI6XCJmbGFnLWFlXCIsXCJuYW1lXCI6XCJVbml0ZWQgQXJhYiBFbWlyYXRlcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImFlXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU2LTFmMWVhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFNlx1RDgzQ1x1RERFQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWFmXCI6e1wiaWRcIjpcImZsYWctYWZcIixcIm5hbWVcIjpcIkFmZ2hhbmlzdGFuIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYWZcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTYtMWYxZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU2XHVEODNDXHVEREVCXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYWdcIjp7XCJpZFwiOlwiZmxhZy1hZ1wiLFwibmFtZVwiOlwiQW50aWd1YSAmIEJhcmJ1ZGEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJhZ1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNi0xZjFlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTZcdUQ4M0NcdURERUNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1haVwiOntcImlkXCI6XCJmbGFnLWFpXCIsXCJuYW1lXCI6XCJBbmd1aWxsYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImFpXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU2LTFmMWVlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFNlx1RDgzQ1x1RERFRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWFsXCI6e1wiaWRcIjpcImZsYWctYWxcIixcIm5hbWVcIjpcIkFsYmFuaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJhbFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNi0xZjFmMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTZcdUQ4M0NcdURERjFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1hbVwiOntcImlkXCI6XCJmbGFnLWFtXCIsXCJuYW1lXCI6XCJBcm1lbmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYW1cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTYtMWYxZjJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU2XHVEODNDXHVEREYyXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYW9cIjp7XCJpZFwiOlwiZmxhZy1hb1wiLFwibmFtZVwiOlwiQW5nb2xhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYW9cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTYtMWYxZjRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU2XHVEODNDXHVEREY0XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYXFcIjp7XCJpZFwiOlwiZmxhZy1hcVwiLFwibmFtZVwiOlwiQW50YXJjdGljYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImFxXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU2LTFmMWY2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFNlx1RDgzQ1x1RERGNlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWFyXCI6e1wiaWRcIjpcImZsYWctYXJcIixcIm5hbWVcIjpcIkFyZ2VudGluYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImFyXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU2LTFmMWY3XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFNlx1RDgzQ1x1RERGN1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWFzXCI6e1wiaWRcIjpcImZsYWctYXNcIixcIm5hbWVcIjpcIkFtZXJpY2FuIFNhbW9hIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYXNcIixcIndzXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU2LTFmMWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFNlx1RDgzQ1x1RERGOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWF0XCI6e1wiaWRcIjpcImZsYWctYXRcIixcIm5hbWVcIjpcIkF1c3RyaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJhdFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNi0xZjFmOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTZcdUQ4M0NcdURERjlcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1hdVwiOntcImlkXCI6XCJmbGFnLWF1XCIsXCJuYW1lXCI6XCJBdXN0cmFsaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJhdVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNi0xZjFmYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTZcdUQ4M0NcdURERkFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1hd1wiOntcImlkXCI6XCJmbGFnLWF3XCIsXCJuYW1lXCI6XCJBcnViYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImF3XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU2LTFmMWZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFNlx1RDgzQ1x1RERGQ1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWF4XCI6e1wiaWRcIjpcImZsYWctYXhcIixcIm5hbWVcIjpcIlx1MDBDNWxhbmQgSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImF4XCIsXCJhbGFuZFwiLFwiQWxhbmRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTYtMWYxZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU2XHVEODNDXHVEREZEXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYXpcIjp7XCJpZFwiOlwiZmxhZy1helwiLFwibmFtZVwiOlwiQXplcmJhaWphbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImF6XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU2LTFmMWZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFNlx1RDgzQ1x1RERGRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWJhXCI6e1wiaWRcIjpcImZsYWctYmFcIixcIm5hbWVcIjpcIkJvc25pYSAmIEhlcnplZ292aW5hIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYmFcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYmJcIjp7XCJpZFwiOlwiZmxhZy1iYlwiLFwibmFtZVwiOlwiQmFyYmFkb3MgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJiYlwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNy0xZjFlN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTdcdUQ4M0NcdURERTdcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1iZFwiOntcImlkXCI6XCJmbGFnLWJkXCIsXCJuYW1lXCI6XCJCYW5nbGFkZXNoIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYmRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZTlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREU5XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYmVcIjp7XCJpZFwiOlwiZmxhZy1iZVwiLFwibmFtZVwiOlwiQmVsZ2l1bSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImJlXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU3LTFmMWVhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFN1x1RDgzQ1x1RERFQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWJmXCI6e1wiaWRcIjpcImZsYWctYmZcIixcIm5hbWVcIjpcIkJ1cmtpbmEgRmFzbyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImJmXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU3LTFmMWViXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFN1x1RDgzQ1x1RERFQlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWJnXCI6e1wiaWRcIjpcImZsYWctYmdcIixcIm5hbWVcIjpcIkJ1bGdhcmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYmdcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZWNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREVDXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYmhcIjp7XCJpZFwiOlwiZmxhZy1iaFwiLFwibmFtZVwiOlwiQmFocmFpbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImJoXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU3LTFmMWVkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFN1x1RDgzQ1x1RERFRFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWJpXCI6e1wiaWRcIjpcImZsYWctYmlcIixcIm5hbWVcIjpcIkJ1cnVuZGkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJiaVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNy0xZjFlZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTdcdUQ4M0NcdURERUVcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1ialwiOntcImlkXCI6XCJmbGFnLWJqXCIsXCJuYW1lXCI6XCJCZW5pbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImJqXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU3LTFmMWVmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFN1x1RDgzQ1x1RERFRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWJsXCI6e1wiaWRcIjpcImZsYWctYmxcIixcIm5hbWVcIjpcIlN0LiBCYXJ0aFx1MDBFOWxlbXkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJibFwiLFwic3RcIixcImJhcnRoZWxlbXlcIixcInNhaW50XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU3LTFmMWYxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFN1x1RDgzQ1x1RERGMVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWJtXCI6e1wiaWRcIjpcImZsYWctYm1cIixcIm5hbWVcIjpcIkJlcm11ZGEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJibVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNy0xZjFmMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTdcdUQ4M0NcdURERjJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1iblwiOntcImlkXCI6XCJmbGFnLWJuXCIsXCJuYW1lXCI6XCJCcnVuZWkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJiblwiLFwiZGFydXNzYWxhbVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNy0xZjFmM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTdcdUQ4M0NcdURERjNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1ib1wiOntcImlkXCI6XCJmbGFnLWJvXCIsXCJuYW1lXCI6XCJCb2xpdmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYm9cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZjRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREY0XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYnFcIjp7XCJpZFwiOlwiZmxhZy1icVwiLFwibmFtZVwiOlwiQ2FyaWJiZWFuIE5ldGhlcmxhbmRzIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYnFcIixcImJvbmFpcmVcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZjZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREY2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYnJcIjp7XCJpZFwiOlwiZmxhZy1iclwiLFwibmFtZVwiOlwiQnJhemlsIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYnJcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZjdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREY3XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYnNcIjp7XCJpZFwiOlwiZmxhZy1ic1wiLFwibmFtZVwiOlwiQmFoYW1hcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImJzXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU3LTFmMWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFN1x1RDgzQ1x1RERGOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWJ0XCI6e1wiaWRcIjpcImZsYWctYnRcIixcIm5hbWVcIjpcIkJodXRhbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImJ0XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU3LTFmMWY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFN1x1RDgzQ1x1RERGOVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWJ2XCI6e1wiaWRcIjpcImZsYWctYnZcIixcIm5hbWVcIjpcIkJvdXZldCBJc2xhbmQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJidlwiLFwibm9yd2F5XCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZmJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREZCXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYndcIjp7XCJpZFwiOlwiZmxhZy1id1wiLFwibmFtZVwiOlwiQm90c3dhbmEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJid1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlNy0xZjFmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTdcdUQ4M0NcdURERkNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1ieVwiOntcImlkXCI6XCJmbGFnLWJ5XCIsXCJuYW1lXCI6XCJCZWxhcnVzIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYnlcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREZFXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctYnpcIjp7XCJpZFwiOlwiZmxhZy1ielwiLFwibmFtZVwiOlwiQmVsaXplIEZsYWdcIixcImtleXdvcmRzXCI6W1wiYnpcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTctMWYxZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU3XHVEODNDXHVEREZGXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctY2FcIjp7XCJpZFwiOlwiZmxhZy1jYVwiLFwibmFtZVwiOlwiQ2FuYWRhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY2FcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTgtMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU4XHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctY2NcIjp7XCJpZFwiOlwiZmxhZy1jY1wiLFwibmFtZVwiOlwiQ29jb3MgKGtlZWxpbmcpIElzbGFuZHMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJjY1wiLFwia2VlbGluZ1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOC0xZjFlOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERThcdUQ4M0NcdURERThcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1jZFwiOntcImlkXCI6XCJmbGFnLWNkXCIsXCJuYW1lXCI6XCJDb25nbyAtIEtpbnNoYXNhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY2RcIixcImRlbW9jcmF0aWNcIixcInJlcHVibGljXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU4LTFmMWU5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOFx1RDgzQ1x1RERFOVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWNmXCI6e1wiaWRcIjpcImZsYWctY2ZcIixcIm5hbWVcIjpcIkNlbnRyYWwgQWZyaWNhbiBSZXB1YmxpYyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImNmXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU4LTFmMWViXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOFx1RDgzQ1x1RERFQlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWNnXCI6e1wiaWRcIjpcImZsYWctY2dcIixcIm5hbWVcIjpcIkNvbmdvIC0gQnJhenphdmlsbGUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJjZ1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOC0xZjFlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERThcdUQ4M0NcdURERUNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1jaFwiOntcImlkXCI6XCJmbGFnLWNoXCIsXCJuYW1lXCI6XCJTd2l0emVybGFuZCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImNoXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU4LTFmMWVkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOFx1RDgzQ1x1RERFRFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWNpXCI6e1wiaWRcIjpcImZsYWctY2lcIixcIm5hbWVcIjpcIkNcdTAwRjR0ZSBEXHUyMDE5aXZvaXJlIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY2lcIixcImNvdGVcIixcImRcIixcIml2b2lyZVwiLFwiaXZvcnlcIixcImNvYXN0XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU4LTFmMWVlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOFx1RDgzQ1x1RERFRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWNrXCI6e1wiaWRcIjpcImZsYWctY2tcIixcIm5hbWVcIjpcIkNvb2sgSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImNrXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU4LTFmMWYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOFx1RDgzQ1x1RERGMFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWNsXCI6e1wiaWRcIjpcImZsYWctY2xcIixcIm5hbWVcIjpcIkNoaWxlIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY2xcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTgtMWYxZjFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU4XHVEODNDXHVEREYxXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctY21cIjp7XCJpZFwiOlwiZmxhZy1jbVwiLFwibmFtZVwiOlwiQ2FtZXJvb24gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJjbVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOC0xZjFmMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERThcdUQ4M0NcdURERjJcIn1dLFwidmVyc2lvblwiOjJ9LFwiY25cIjp7XCJpZFwiOlwiY25cIixcIm5hbWVcIjpcIkNoaW5hIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY25cIixcImNoaW5lc2VcIixcInByY1wiLFwiY291bnRyeVwiLFwibmF0aW9uXCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOC0xZjFmM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERThcdUQ4M0NcdURERjNcIn1dLFwidmVyc2lvblwiOjF9LFwiZmxhZy1jb1wiOntcImlkXCI6XCJmbGFnLWNvXCIsXCJuYW1lXCI6XCJDb2xvbWJpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImNvXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU4LTFmMWY0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOFx1RDgzQ1x1RERGNFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWNwXCI6e1wiaWRcIjpcImZsYWctY3BcIixcIm5hbWVcIjpcIkNsaXBwZXJ0b24gSXNsYW5kIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY3BcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOC0xZjFmNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERThcdUQ4M0NcdURERjVcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1jclwiOntcImlkXCI6XCJmbGFnLWNyXCIsXCJuYW1lXCI6XCJDb3N0YSBSaWNhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY3JcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTgtMWYxZjdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU4XHVEODNDXHVEREY3XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctY3VcIjp7XCJpZFwiOlwiZmxhZy1jdVwiLFwibmFtZVwiOlwiQ3ViYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImN1XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU4LTFmMWZhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOFx1RDgzQ1x1RERGQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWN2XCI6e1wiaWRcIjpcImZsYWctY3ZcIixcIm5hbWVcIjpcIkNhcGUgVmVyZGUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJjdlwiLFwiY2Fib1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOC0xZjFmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERThcdUQ4M0NcdURERkJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1jd1wiOntcImlkXCI6XCJmbGFnLWN3XCIsXCJuYW1lXCI6XCJDdXJhXHUwMEU3YW8gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJjd1wiLFwiY3VyYWNhb1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOC0xZjFmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERThcdUQ4M0NcdURERkNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1jeFwiOntcImlkXCI6XCJmbGFnLWN4XCIsXCJuYW1lXCI6XCJDaHJpc3RtYXMgSXNsYW5kIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY3hcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTgtMWYxZmRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU4XHVEODNDXHVEREZEXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctY3lcIjp7XCJpZFwiOlwiZmxhZy1jeVwiLFwibmFtZVwiOlwiQ3lwcnVzIEZsYWdcIixcImtleXdvcmRzXCI6W1wiY3lcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTgtMWYxZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU4XHVEODNDXHVEREZFXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctY3pcIjp7XCJpZFwiOlwiZmxhZy1jelwiLFwibmFtZVwiOlwiQ3plY2hpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImN6XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU4LTFmMWZmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOFx1RDgzQ1x1RERGRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJkZVwiOntcImlkXCI6XCJkZVwiLFwibmFtZVwiOlwiR2VybWFueSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImRlXCIsXCJnZXJtYW5cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZTktMWYxZWFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREU5XHVEODNDXHVEREVBXCJ9XSxcInZlcnNpb25cIjoxfSxcImZsYWctZGdcIjp7XCJpZFwiOlwiZmxhZy1kZ1wiLFwibmFtZVwiOlwiRGllZ28gR2FyY2lhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiZGdcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOS0xZjFlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTlcdUQ4M0NcdURERUNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1kalwiOntcImlkXCI6XCJmbGFnLWRqXCIsXCJuYW1lXCI6XCJEamlib3V0aSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImRqXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU5LTFmMWVmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOVx1RDgzQ1x1RERFRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWRrXCI6e1wiaWRcIjpcImZsYWctZGtcIixcIm5hbWVcIjpcIkRlbm1hcmsgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJka1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOS0xZjFmMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTlcdUQ4M0NcdURERjBcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1kbVwiOntcImlkXCI6XCJmbGFnLWRtXCIsXCJuYW1lXCI6XCJEb21pbmljYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImRtXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU5LTFmMWYyXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOVx1RDgzQ1x1RERGMlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWRvXCI6e1wiaWRcIjpcImZsYWctZG9cIixcIm5hbWVcIjpcIkRvbWluaWNhbiBSZXB1YmxpYyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImRvXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWU5LTFmMWY0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFOVx1RDgzQ1x1RERGNFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWR6XCI6e1wiaWRcIjpcImZsYWctZHpcIixcIm5hbWVcIjpcIkFsZ2VyaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJkelwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlOS0xZjFmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERTlcdUQ4M0NcdURERkZcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1lYVwiOntcImlkXCI6XCJmbGFnLWVhXCIsXCJuYW1lXCI6XCJDZXV0YSAmIE1lbGlsbGEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJlYVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVhLTFmMWU2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQVx1RDgzQ1x1RERFNlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWVjXCI6e1wiaWRcIjpcImZsYWctZWNcIixcIm5hbWVcIjpcIkVjdWFkb3IgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJlY1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYS0xZjFlOFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUFcdUQ4M0NcdURERThcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1lZVwiOntcImlkXCI6XCJmbGFnLWVlXCIsXCJuYW1lXCI6XCJFc3RvbmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiZWVcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWEtMWYxZWFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVBXHVEODNDXHVEREVBXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctZWdcIjp7XCJpZFwiOlwiZmxhZy1lZ1wiLFwibmFtZVwiOlwiRWd5cHQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJlZ1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYS0xZjFlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUFcdUQ4M0NcdURERUNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1laFwiOntcImlkXCI6XCJmbGFnLWVoXCIsXCJuYW1lXCI6XCJXZXN0ZXJuIFNhaGFyYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImVoXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVhLTFmMWVkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQVx1RDgzQ1x1RERFRFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWVyXCI6e1wiaWRcIjpcImZsYWctZXJcIixcIm5hbWVcIjpcIkVyaXRyZWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJlclwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYS0xZjFmN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUFcdUQ4M0NcdURERjdcIn1dLFwidmVyc2lvblwiOjJ9LFwiZXNcIjp7XCJpZFwiOlwiZXNcIixcIm5hbWVcIjpcIlNwYWluIEZsYWdcIixcImtleXdvcmRzXCI6W1wiZXNcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWEtMWYxZjhcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVBXHVEODNDXHVEREY4XCJ9XSxcInZlcnNpb25cIjoxfSxcImZsYWctZXRcIjp7XCJpZFwiOlwiZmxhZy1ldFwiLFwibmFtZVwiOlwiRXRoaW9waWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJldFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYS0xZjFmOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUFcdUQ4M0NcdURERjlcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1ldVwiOntcImlkXCI6XCJmbGFnLWV1XCIsXCJuYW1lXCI6XCJFdXJvcGVhbiBVbmlvbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImV1XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYS0xZjFmYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUFcdUQ4M0NcdURERkFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1maVwiOntcImlkXCI6XCJmbGFnLWZpXCIsXCJuYW1lXCI6XCJGaW5sYW5kIEZsYWdcIixcImtleXdvcmRzXCI6W1wiZmlcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWItMWYxZWVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVCXHVEODNDXHVEREVFXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctZmpcIjp7XCJpZFwiOlwiZmxhZy1malwiLFwibmFtZVwiOlwiRmlqaSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImZqXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWViLTFmMWVmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQlx1RDgzQ1x1RERFRlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWZrXCI6e1wiaWRcIjpcImZsYWctZmtcIixcIm5hbWVcIjpcIkZhbGtsYW5kIElzbGFuZHMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJma1wiLFwibWFsdmluYXNcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWItMWYxZjBcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVCXHVEODNDXHVEREYwXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctZm1cIjp7XCJpZFwiOlwiZmxhZy1mbVwiLFwibmFtZVwiOlwiTWljcm9uZXNpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImZtXCIsXCJmZWRlcmF0ZWRcIixcInN0YXRlc1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYi0xZjFmMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUJcdUQ4M0NcdURERjJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1mb1wiOntcImlkXCI6XCJmbGFnLWZvXCIsXCJuYW1lXCI6XCJGYXJvZSBJc2xhbmRzIEZsYWdcIixcImtleXdvcmRzXCI6W1wiZm9cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWItMWYxZjRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVCXHVEODNDXHVEREY0XCJ9XSxcInZlcnNpb25cIjoyfSxcImZyXCI6e1wiaWRcIjpcImZyXCIsXCJuYW1lXCI6XCJGcmFuY2UgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJmclwiLFwiYmFubmVyXCIsXCJuYXRpb25cIixcImZyZW5jaFwiLFwiY291bnRyeVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWViLTFmMWY3XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQlx1RDgzQ1x1RERGN1wifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmbGFnLWdhXCI6e1wiaWRcIjpcImZsYWctZ2FcIixcIm5hbWVcIjpcIkdhYm9uIEZsYWdcIixcImtleXdvcmRzXCI6W1wiZ2FcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWMtMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVDXHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImdiXCI6e1wiaWRcIjpcImdiXCIsXCJuYW1lXCI6XCJVbml0ZWQgS2luZ2RvbSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImdiXCIsXCJ1a1wiLFwiZ3JlYXRcIixcImJyaXRhaW5cIixcIm5vcnRoZXJuXCIsXCJpcmVsYW5kXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiLFwiYnJpdGlzaFwiLFwiVUtcIixcImVuZ2xpc2hcIixcImVuZ2xhbmRcIixcInVuaW9uXCIsXCJqYWNrXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWMtMWYxZTdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVDXHVEODNDXHVEREU3XCJ9XSxcInZlcnNpb25cIjoxfSxcImZsYWctZ2RcIjp7XCJpZFwiOlwiZmxhZy1nZFwiLFwibmFtZVwiOlwiR3JlbmFkYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImdkXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWU5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERFOVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWdlXCI6e1wiaWRcIjpcImZsYWctZ2VcIixcIm5hbWVcIjpcIkdlb3JnaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJnZVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYy0xZjFlYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUNcdUQ4M0NcdURERUFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1nZlwiOntcImlkXCI6XCJmbGFnLWdmXCIsXCJuYW1lXCI6XCJGcmVuY2ggR3VpYW5hIEZsYWdcIixcImtleXdvcmRzXCI6W1wiZ2ZcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWMtMWYxZWJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVDXHVEODNDXHVEREVCXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctZ2dcIjp7XCJpZFwiOlwiZmxhZy1nZ1wiLFwibmFtZVwiOlwiR3Vlcm5zZXkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJnZ1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYy0xZjFlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUNcdUQ4M0NcdURERUNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1naFwiOntcImlkXCI6XCJmbGFnLWdoXCIsXCJuYW1lXCI6XCJHaGFuYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImdoXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWVkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERFRFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWdpXCI6e1wiaWRcIjpcImZsYWctZ2lcIixcIm5hbWVcIjpcIkdpYnJhbHRhciBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImdpXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWVlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERFRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWdsXCI6e1wiaWRcIjpcImZsYWctZ2xcIixcIm5hbWVcIjpcIkdyZWVubGFuZCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImdsXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWYxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERGMVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWdtXCI6e1wiaWRcIjpcImZsYWctZ21cIixcIm5hbWVcIjpcIkdhbWJpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImdtXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWYyXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERGMlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWduXCI6e1wiaWRcIjpcImZsYWctZ25cIixcIm5hbWVcIjpcIkd1aW5lYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImduXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERGM1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWdwXCI6e1wiaWRcIjpcImZsYWctZ3BcIixcIm5hbWVcIjpcIkd1YWRlbG91cGUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJncFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYy0xZjFmNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUNcdUQ4M0NcdURERjVcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1ncVwiOntcImlkXCI6XCJmbGFnLWdxXCIsXCJuYW1lXCI6XCJFcXVhdG9yaWFsIEd1aW5lYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImdxXCIsXCJnblwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYy0xZjFmNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUNcdUQ4M0NcdURERjZcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1nclwiOntcImlkXCI6XCJmbGFnLWdyXCIsXCJuYW1lXCI6XCJHcmVlY2UgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJnclwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYy0xZjFmN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUNcdUQ4M0NcdURERjdcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1nc1wiOntcImlkXCI6XCJmbGFnLWdzXCIsXCJuYW1lXCI6XCJTb3V0aCBHZW9yZ2lhICYgU291dGggU2FuZHdpY2ggSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImdzXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERGOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWd0XCI6e1wiaWRcIjpcImZsYWctZ3RcIixcIm5hbWVcIjpcIkd1YXRlbWFsYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImd0XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERGOVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWd1XCI6e1wiaWRcIjpcImZsYWctZ3VcIixcIm5hbWVcIjpcIkd1YW0gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJndVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlYy0xZjFmYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUNcdUQ4M0NcdURERkFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1nd1wiOntcImlkXCI6XCJmbGFnLWd3XCIsXCJuYW1lXCI6XCJHdWluZWEtQmlzc2F1IEZsYWdcIixcImtleXdvcmRzXCI6W1wiZ3dcIixcImd1aW5lYVwiLFwiYmlzc2F1XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERGQ1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWd5XCI6e1wiaWRcIjpcImZsYWctZ3lcIixcIm5hbWVcIjpcIkd1eWFuYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImd5XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVjLTFmMWZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFQ1x1RDgzQ1x1RERGRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWhrXCI6e1wiaWRcIjpcImZsYWctaGtcIixcIm5hbWVcIjpcIkhvbmcgS29uZyBTYXIgQ2hpbmEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJoa1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlZC0xZjFmMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERURcdUQ4M0NcdURERjBcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1obVwiOntcImlkXCI6XCJmbGFnLWhtXCIsXCJuYW1lXCI6XCJIZWFyZCAmIE1jZG9uYWxkIElzbGFuZHMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJobVwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVkLTFmMWYyXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFRFx1RDgzQ1x1RERGMlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWhuXCI6e1wiaWRcIjpcImZsYWctaG5cIixcIm5hbWVcIjpcIkhvbmR1cmFzIEZsYWdcIixcImtleXdvcmRzXCI6W1wiaG5cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWQtMWYxZjNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVEXHVEODNDXHVEREYzXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctaHJcIjp7XCJpZFwiOlwiZmxhZy1oclwiLFwibmFtZVwiOlwiQ3JvYXRpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImhyXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVkLTFmMWY3XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFRFx1RDgzQ1x1RERGN1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWh0XCI6e1wiaWRcIjpcImZsYWctaHRcIixcIm5hbWVcIjpcIkhhaXRpIEZsYWdcIixcImtleXdvcmRzXCI6W1wiaHRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWQtMWYxZjlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVEXHVEODNDXHVEREY5XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctaHVcIjp7XCJpZFwiOlwiZmxhZy1odVwiLFwibmFtZVwiOlwiSHVuZ2FyeSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImh1XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVkLTFmMWZhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFRFx1RDgzQ1x1RERGQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWljXCI6e1wiaWRcIjpcImZsYWctaWNcIixcIm5hbWVcIjpcIkNhbmFyeSBJc2xhbmRzIEZsYWdcIixcImtleXdvcmRzXCI6W1wiaWNcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWUtMWYxZThcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVFXHVEODNDXHVEREU4XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctaWRcIjp7XCJpZFwiOlwiZmxhZy1pZFwiLFwibmFtZVwiOlwiSW5kb25lc2lhIEZsYWdcIixcImtleXdvcmRzXCI6W1wiaWRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWUtMWYxZTlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVFXHVEODNDXHVEREU5XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctaWVcIjp7XCJpZFwiOlwiZmxhZy1pZVwiLFwibmFtZVwiOlwiSXJlbGFuZCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImllXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVlLTFmMWVhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFRVx1RDgzQ1x1RERFQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWlsXCI6e1wiaWRcIjpcImZsYWctaWxcIixcIm5hbWVcIjpcIklzcmFlbCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImlsXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVlLTFmMWYxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFRVx1RDgzQ1x1RERGMVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWltXCI6e1wiaWRcIjpcImZsYWctaW1cIixcIm5hbWVcIjpcIklzbGUgb2YgTWFuIEZsYWdcIixcImtleXdvcmRzXCI6W1wiaW1cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWUtMWYxZjJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVFXHVEODNDXHVEREYyXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctaW5cIjp7XCJpZFwiOlwiZmxhZy1pblwiLFwibmFtZVwiOlwiSW5kaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJpblwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlZS0xZjFmM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUVcdUQ4M0NcdURERjNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1pb1wiOntcImlkXCI6XCJmbGFnLWlvXCIsXCJuYW1lXCI6XCJCcml0aXNoIEluZGlhbiBPY2VhbiBUZXJyaXRvcnkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJpb1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlZS0xZjFmNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUVcdUQ4M0NcdURERjRcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1pcVwiOntcImlkXCI6XCJmbGFnLWlxXCIsXCJuYW1lXCI6XCJJcmFxIEZsYWdcIixcImtleXdvcmRzXCI6W1wiaXFcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWUtMWYxZjZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVFXHVEODNDXHVEREY2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctaXJcIjp7XCJpZFwiOlwiZmxhZy1pclwiLFwibmFtZVwiOlwiSXJhbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImlyXCIsXCJpc2xhbWljXCIsXCJyZXB1YmxpY1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlZS0xZjFmN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUVcdUQ4M0NcdURERjdcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1pc1wiOntcImlkXCI6XCJmbGFnLWlzXCIsXCJuYW1lXCI6XCJJY2VsYW5kIEZsYWdcIixcImtleXdvcmRzXCI6W1wiaXNcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZWUtMWYxZjhcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREVFXHVEODNDXHVEREY4XCJ9XSxcInZlcnNpb25cIjoyfSxcIml0XCI6e1wiaWRcIjpcIml0XCIsXCJuYW1lXCI6XCJJdGFseSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIml0XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVlLTFmMWY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFRVx1RDgzQ1x1RERGOVwifV0sXCJ2ZXJzaW9uXCI6MX0sXCJmbGFnLWplXCI6e1wiaWRcIjpcImZsYWctamVcIixcIm5hbWVcIjpcIkplcnNleSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImplXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWVmLTFmMWVhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERFRlx1RDgzQ1x1RERFQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWptXCI6e1wiaWRcIjpcImZsYWctam1cIixcIm5hbWVcIjpcIkphbWFpY2EgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJqbVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlZi0xZjFmMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUZcdUQ4M0NcdURERjJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1qb1wiOntcImlkXCI6XCJmbGFnLWpvXCIsXCJuYW1lXCI6XCJKb3JkYW4gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJqb1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlZi0xZjFmNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUZcdUQ4M0NcdURERjRcIn1dLFwidmVyc2lvblwiOjJ9LFwianBcIjp7XCJpZFwiOlwianBcIixcIm5hbWVcIjpcIkphcGFuIEZsYWdcIixcImtleXdvcmRzXCI6W1wianBcIixcImphcGFuZXNlXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiLFwiamFcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFlZi0xZjFmNVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERUZcdUQ4M0NcdURERjVcIn1dLFwidmVyc2lvblwiOjF9LFwiZmxhZy1rZVwiOntcImlkXCI6XCJmbGFnLWtlXCIsXCJuYW1lXCI6XCJLZW55YSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImtlXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYwLTFmMWVhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMFx1RDgzQ1x1RERFQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWtnXCI6e1wiaWRcIjpcImZsYWcta2dcIixcIm5hbWVcIjpcIkt5cmd5enN0YW4gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJrZ1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMC0xZjFlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjBcdUQ4M0NcdURERUNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1raFwiOntcImlkXCI6XCJmbGFnLWtoXCIsXCJuYW1lXCI6XCJDYW1ib2RpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImtoXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYwLTFmMWVkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMFx1RDgzQ1x1RERFRFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWtpXCI6e1wiaWRcIjpcImZsYWcta2lcIixcIm5hbWVcIjpcIktpcmliYXRpIEZsYWdcIixcImtleXdvcmRzXCI6W1wia2lcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjAtMWYxZWVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYwXHVEODNDXHVEREVFXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWcta21cIjp7XCJpZFwiOlwiZmxhZy1rbVwiLFwibmFtZVwiOlwiQ29tb3JvcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImttXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYwLTFmMWYyXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMFx1RDgzQ1x1RERGMlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWtuXCI6e1wiaWRcIjpcImZsYWcta25cIixcIm5hbWVcIjpcIlN0LiBLaXR0cyAmIE5ldmlzIEZsYWdcIixcImtleXdvcmRzXCI6W1wia25cIixcInN0XCIsXCJzYWludFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMC0xZjFmM1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjBcdUQ4M0NcdURERjNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1rcFwiOntcImlkXCI6XCJmbGFnLWtwXCIsXCJuYW1lXCI6XCJOb3J0aCBLb3JlYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImtwXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYwLTFmMWY1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMFx1RDgzQ1x1RERGNVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJrclwiOntcImlkXCI6XCJrclwiLFwibmFtZVwiOlwiU291dGggS29yZWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJrclwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMC0xZjFmN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjBcdUQ4M0NcdURERjdcIn1dLFwidmVyc2lvblwiOjF9LFwiZmxhZy1rd1wiOntcImlkXCI6XCJmbGFnLWt3XCIsXCJuYW1lXCI6XCJLdXdhaXQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJrd1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMC0xZjFmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjBcdUQ4M0NcdURERkNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1reVwiOntcImlkXCI6XCJmbGFnLWt5XCIsXCJuYW1lXCI6XCJDYXltYW4gSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImt5XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYwLTFmMWZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMFx1RDgzQ1x1RERGRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWt6XCI6e1wiaWRcIjpcImZsYWcta3pcIixcIm5hbWVcIjpcIkthemFraHN0YW4gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJrelwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMC0xZjFmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjBcdUQ4M0NcdURERkZcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1sYVwiOntcImlkXCI6XCJmbGFnLWxhXCIsXCJuYW1lXCI6XCJMYW9zIEZsYWdcIixcImtleXdvcmRzXCI6W1wibGFcIixcImxhb1wiLFwiZGVtb2NyYXRpY1wiLFwicmVwdWJsaWNcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjEtMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYxXHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbGJcIjp7XCJpZFwiOlwiZmxhZy1sYlwiLFwibmFtZVwiOlwiTGViYW5vbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImxiXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYxLTFmMWU3XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMVx1RDgzQ1x1RERFN1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWxjXCI6e1wiaWRcIjpcImZsYWctbGNcIixcIm5hbWVcIjpcIlN0LiBMdWNpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImxjXCIsXCJzdFwiLFwic2FpbnRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjEtMWYxZThcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYxXHVEODNDXHVEREU4XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbGlcIjp7XCJpZFwiOlwiZmxhZy1saVwiLFwibmFtZVwiOlwiTGllY2h0ZW5zdGVpbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImxpXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYxLTFmMWVlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMVx1RDgzQ1x1RERFRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWxrXCI6e1wiaWRcIjpcImZsYWctbGtcIixcIm5hbWVcIjpcIlNyaSBMYW5rYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImxrXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYxLTFmMWYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMVx1RDgzQ1x1RERGMFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWxyXCI6e1wiaWRcIjpcImZsYWctbHJcIixcIm5hbWVcIjpcIkxpYmVyaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJsclwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMS0xZjFmN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjFcdUQ4M0NcdURERjdcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1sc1wiOntcImlkXCI6XCJmbGFnLWxzXCIsXCJuYW1lXCI6XCJMZXNvdGhvIEZsYWdcIixcImtleXdvcmRzXCI6W1wibHNcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjEtMWYxZjhcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYxXHVEODNDXHVEREY4XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbHRcIjp7XCJpZFwiOlwiZmxhZy1sdFwiLFwibmFtZVwiOlwiTGl0aHVhbmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wibHRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjEtMWYxZjlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYxXHVEODNDXHVEREY5XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbHVcIjp7XCJpZFwiOlwiZmxhZy1sdVwiLFwibmFtZVwiOlwiTHV4ZW1ib3VyZyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImx1XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYxLTFmMWZhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMVx1RDgzQ1x1RERGQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWx2XCI6e1wiaWRcIjpcImZsYWctbHZcIixcIm5hbWVcIjpcIkxhdHZpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcImx2XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYxLTFmMWZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMVx1RDgzQ1x1RERGQlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLWx5XCI6e1wiaWRcIjpcImZsYWctbHlcIixcIm5hbWVcIjpcIkxpYnlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wibHlcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjEtMWYxZmVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYxXHVEODNDXHVEREZFXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbWFcIjp7XCJpZFwiOlwiZmxhZy1tYVwiLFwibmFtZVwiOlwiTW9yb2NjbyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1hXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWU2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERFNlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW1jXCI6e1wiaWRcIjpcImZsYWctbWNcIixcIm5hbWVcIjpcIk1vbmFjbyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1jXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWU4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERFOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW1kXCI6e1wiaWRcIjpcImZsYWctbWRcIixcIm5hbWVcIjpcIk1vbGRvdmEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtZFwiLFwicmVwdWJsaWNcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjItMWYxZTlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYyXHVEODNDXHVEREU5XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbWVcIjp7XCJpZFwiOlwiZmxhZy1tZVwiLFwibmFtZVwiOlwiTW9udGVuZWdybyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1lXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWVhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERFQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW1mXCI6e1wiaWRcIjpcImZsYWctbWZcIixcIm5hbWVcIjpcIlN0LiBNYXJ0aW4gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtZlwiLFwic3RcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMi0xZjFlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjJcdUQ4M0NcdURERUJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1tZ1wiOntcImlkXCI6XCJmbGFnLW1nXCIsXCJuYW1lXCI6XCJNYWRhZ2FzY2FyIEZsYWdcIixcImtleXdvcmRzXCI6W1wibWdcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjItMWYxZWNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYyXHVEODNDXHVEREVDXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbWhcIjp7XCJpZFwiOlwiZmxhZy1taFwiLFwibmFtZVwiOlwiTWFyc2hhbGwgSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1oXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWVkXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERFRFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW1rXCI6e1wiaWRcIjpcImZsYWctbWtcIixcIm5hbWVcIjpcIk5vcnRoIE1hY2Vkb25pYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1rXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERGMFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW1sXCI6e1wiaWRcIjpcImZsYWctbWxcIixcIm5hbWVcIjpcIk1hbGkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtbFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMi0xZjFmMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjJcdUQ4M0NcdURERjFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1tbVwiOntcImlkXCI6XCJmbGFnLW1tXCIsXCJuYW1lXCI6XCJNeWFubWFyIChidXJtYSkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtbVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMi0xZjFmMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjJcdUQ4M0NcdURERjJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1tblwiOntcImlkXCI6XCJmbGFnLW1uXCIsXCJuYW1lXCI6XCJNb25nb2xpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1uXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERGM1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW1vXCI6e1wiaWRcIjpcImZsYWctbW9cIixcIm5hbWVcIjpcIk1hY2FvIFNhciBDaGluYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1vXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWY0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERGNFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW1wXCI6e1wiaWRcIjpcImZsYWctbXBcIixcIm5hbWVcIjpcIk5vcnRoZXJuIE1hcmlhbmEgSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1wXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWY1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERGNVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW1xXCI6e1wiaWRcIjpcImZsYWctbXFcIixcIm5hbWVcIjpcIk1hcnRpbmlxdWUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtcVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMi0xZjFmNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjJcdUQ4M0NcdURERjZcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1tclwiOntcImlkXCI6XCJmbGFnLW1yXCIsXCJuYW1lXCI6XCJNYXVyaXRhbmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wibXJcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjItMWYxZjdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYyXHVEODNDXHVEREY3XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbXNcIjp7XCJpZFwiOlwiZmxhZy1tc1wiLFwibmFtZVwiOlwiTW9udHNlcnJhdCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm1zXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERGOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW10XCI6e1wiaWRcIjpcImZsYWctbXRcIixcIm5hbWVcIjpcIk1hbHRhIEZsYWdcIixcImtleXdvcmRzXCI6W1wibXRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjItMWYxZjlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYyXHVEODNDXHVEREY5XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbXVcIjp7XCJpZFwiOlwiZmxhZy1tdVwiLFwibmFtZVwiOlwiTWF1cml0aXVzIEZsYWdcIixcImtleXdvcmRzXCI6W1wibXVcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjItMWYxZmFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYyXHVEODNDXHVEREZBXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbXZcIjp7XCJpZFwiOlwiZmxhZy1tdlwiLFwibmFtZVwiOlwiTWFsZGl2ZXMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtdlwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMi0xZjFmYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjJcdUQ4M0NcdURERkJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1td1wiOntcImlkXCI6XCJmbGFnLW13XCIsXCJuYW1lXCI6XCJNYWxhd2kgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtd1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMi0xZjFmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjJcdUQ4M0NcdURERkNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1teFwiOntcImlkXCI6XCJmbGFnLW14XCIsXCJuYW1lXCI6XCJNZXhpY28gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJteFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMi0xZjFmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjJcdUQ4M0NcdURERkRcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1teVwiOntcImlkXCI6XCJmbGFnLW15XCIsXCJuYW1lXCI6XCJNYWxheXNpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm15XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYyLTFmMWZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGMlx1RDgzQ1x1RERGRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW16XCI6e1wiaWRcIjpcImZsYWctbXpcIixcIm5hbWVcIjpcIk1vemFtYmlxdWUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJtelwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMi0xZjFmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjJcdUQ4M0NcdURERkZcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1uYVwiOntcImlkXCI6XCJmbGFnLW5hXCIsXCJuYW1lXCI6XCJOYW1pYmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wibmFcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjMtMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYzXHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbmNcIjp7XCJpZFwiOlwiZmxhZy1uY1wiLFwibmFtZVwiOlwiTmV3IENhbGVkb25pYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm5jXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYzLTFmMWU4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGM1x1RDgzQ1x1RERFOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW5lXCI6e1wiaWRcIjpcImZsYWctbmVcIixcIm5hbWVcIjpcIk5pZ2VyIEZsYWdcIixcImtleXdvcmRzXCI6W1wibmVcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjMtMWYxZWFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYzXHVEODNDXHVEREVBXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbmZcIjp7XCJpZFwiOlwiZmxhZy1uZlwiLFwibmFtZVwiOlwiTm9yZm9sayBJc2xhbmQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJuZlwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMy0xZjFlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjNcdUQ4M0NcdURERUJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1uZ1wiOntcImlkXCI6XCJmbGFnLW5nXCIsXCJuYW1lXCI6XCJOaWdlcmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wibmdcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjMtMWYxZWNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYzXHVEODNDXHVEREVDXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbmlcIjp7XCJpZFwiOlwiZmxhZy1uaVwiLFwibmFtZVwiOlwiTmljYXJhZ3VhIEZsYWdcIixcImtleXdvcmRzXCI6W1wibmlcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjMtMWYxZWVcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYzXHVEODNDXHVEREVFXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbmxcIjp7XCJpZFwiOlwiZmxhZy1ubFwiLFwibmFtZVwiOlwiTmV0aGVybGFuZHMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJubFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMy0xZjFmMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjNcdUQ4M0NcdURERjFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1ub1wiOntcImlkXCI6XCJmbGFnLW5vXCIsXCJuYW1lXCI6XCJOb3J3YXkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJub1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmMy0xZjFmNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjNcdUQ4M0NcdURERjRcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1ucFwiOntcImlkXCI6XCJmbGFnLW5wXCIsXCJuYW1lXCI6XCJOZXBhbCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm5wXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYzLTFmMWY1XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGM1x1RDgzQ1x1RERGNVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW5yXCI6e1wiaWRcIjpcImZsYWctbnJcIixcIm5hbWVcIjpcIk5hdXJ1IEZsYWdcIixcImtleXdvcmRzXCI6W1wibnJcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjMtMWYxZjdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYzXHVEODNDXHVEREY3XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctbnVcIjp7XCJpZFwiOlwiZmxhZy1udVwiLFwibmFtZVwiOlwiTml1ZSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm51XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWYzLTFmMWZhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGM1x1RDgzQ1x1RERGQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLW56XCI6e1wiaWRcIjpcImZsYWctbnpcIixcIm5hbWVcIjpcIk5ldyBaZWFsYW5kIEZsYWdcIixcImtleXdvcmRzXCI6W1wibnpcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjMtMWYxZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREYzXHVEODNDXHVEREZGXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctb21cIjp7XCJpZFwiOlwiZmxhZy1vbVwiLFwibmFtZVwiOlwiT21hbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIm9tXCIsXCJzeW1ib2xcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjQtMWYxZjJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY0XHVEODNDXHVEREYyXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctcGFcIjp7XCJpZFwiOlwiZmxhZy1wYVwiLFwibmFtZVwiOlwiUGFuYW1hIEZsYWdcIixcImtleXdvcmRzXCI6W1wicGFcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjUtMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY1XHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctcGVcIjp7XCJpZFwiOlwiZmxhZy1wZVwiLFwibmFtZVwiOlwiUGVydSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInBlXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY1LTFmMWVhXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGNVx1RDgzQ1x1RERFQVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXBmXCI6e1wiaWRcIjpcImZsYWctcGZcIixcIm5hbWVcIjpcIkZyZW5jaCBQb2x5bmVzaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJwZlwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmNS0xZjFlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjVcdUQ4M0NcdURERUJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1wZ1wiOntcImlkXCI6XCJmbGFnLXBnXCIsXCJuYW1lXCI6XCJQYXB1YSBOZXcgR3VpbmVhIEZsYWdcIixcImtleXdvcmRzXCI6W1wicGdcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjUtMWYxZWNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY1XHVEODNDXHVEREVDXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctcGhcIjp7XCJpZFwiOlwiZmxhZy1waFwiLFwibmFtZVwiOlwiUGhpbGlwcGluZXMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJwaFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmNS0xZjFlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjVcdUQ4M0NcdURERURcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1wa1wiOntcImlkXCI6XCJmbGFnLXBrXCIsXCJuYW1lXCI6XCJQYWtpc3RhbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInBrXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY1LTFmMWYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGNVx1RDgzQ1x1RERGMFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXBsXCI6e1wiaWRcIjpcImZsYWctcGxcIixcIm5hbWVcIjpcIlBvbGFuZCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInBsXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY1LTFmMWYxXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGNVx1RDgzQ1x1RERGMVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXBtXCI6e1wiaWRcIjpcImZsYWctcG1cIixcIm5hbWVcIjpcIlN0LiBQaWVycmUgJiBNaXF1ZWxvbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInBtXCIsXCJzdFwiLFwic2FpbnRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjUtMWYxZjJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY1XHVEODNDXHVEREYyXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctcG5cIjp7XCJpZFwiOlwiZmxhZy1wblwiLFwibmFtZVwiOlwiUGl0Y2Fpcm4gSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInBuXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY1LTFmMWYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGNVx1RDgzQ1x1RERGM1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXByXCI6e1wiaWRcIjpcImZsYWctcHJcIixcIm5hbWVcIjpcIlB1ZXJ0byBSaWNvIEZsYWdcIixcImtleXdvcmRzXCI6W1wicHJcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjUtMWYxZjdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY1XHVEODNDXHVEREY3XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctcHNcIjp7XCJpZFwiOlwiZmxhZy1wc1wiLFwibmFtZVwiOlwiUGFsZXN0aW5pYW4gVGVycml0b3JpZXMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJwc1wiLFwicGFsZXN0aW5lXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY1LTFmMWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGNVx1RDgzQ1x1RERGOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXB0XCI6e1wiaWRcIjpcImZsYWctcHRcIixcIm5hbWVcIjpcIlBvcnR1Z2FsIEZsYWdcIixcImtleXdvcmRzXCI6W1wicHRcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjUtMWYxZjlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY1XHVEODNDXHVEREY5XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctcHdcIjp7XCJpZFwiOlwiZmxhZy1wd1wiLFwibmFtZVwiOlwiUGFsYXUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJwd1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmNS0xZjFmY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjVcdUQ4M0NcdURERkNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1weVwiOntcImlkXCI6XCJmbGFnLXB5XCIsXCJuYW1lXCI6XCJQYXJhZ3VheSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInB5XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY1LTFmMWZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGNVx1RDgzQ1x1RERGRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXFhXCI6e1wiaWRcIjpcImZsYWctcWFcIixcIm5hbWVcIjpcIlFhdGFyIEZsYWdcIixcImtleXdvcmRzXCI6W1wicWFcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjYtMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY2XHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctcmVcIjp7XCJpZFwiOlwiZmxhZy1yZVwiLFwibmFtZVwiOlwiUlx1MDBFOXVuaW9uIEZsYWdcIixcImtleXdvcmRzXCI6W1wicmVcIixcInJldW5pb25cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjctMWYxZWFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY3XHVEODNDXHVEREVBXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctcm9cIjp7XCJpZFwiOlwiZmxhZy1yb1wiLFwibmFtZVwiOlwiUm9tYW5pYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInJvXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY3LTFmMWY0XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGN1x1RDgzQ1x1RERGNFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXJzXCI6e1wiaWRcIjpcImZsYWctcnNcIixcIm5hbWVcIjpcIlNlcmJpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInJzXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY3LTFmMWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGN1x1RDgzQ1x1RERGOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJydVwiOntcImlkXCI6XCJydVwiLFwibmFtZVwiOlwiUnVzc2lhIEZsYWdcIixcImtleXdvcmRzXCI6W1wicnVcIixcInJ1c3NpYW5cIixcImZlZGVyYXRpb25cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjctMWYxZmFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY3XHVEODNDXHVEREZBXCJ9XSxcInZlcnNpb25cIjoxfSxcImZsYWctcndcIjp7XCJpZFwiOlwiZmxhZy1yd1wiLFwibmFtZVwiOlwiUndhbmRhIEZsYWdcIixcImtleXdvcmRzXCI6W1wicndcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjctMWYxZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY3XHVEODNDXHVEREZDXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc2FcIjp7XCJpZFwiOlwiZmxhZy1zYVwiLFwibmFtZVwiOlwiU2F1ZGkgQXJhYmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1wic2FcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc2JcIjp7XCJpZFwiOlwiZmxhZy1zYlwiLFwibmFtZVwiOlwiU29sb21vbiBJc2xhbmRzIEZsYWdcIixcImtleXdvcmRzXCI6W1wic2JcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZTdcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREU3XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc2NcIjp7XCJpZFwiOlwiZmxhZy1zY1wiLFwibmFtZVwiOlwiU2V5Y2hlbGxlcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInNjXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY4LTFmMWU4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOFx1RDgzQ1x1RERFOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXNkXCI6e1wiaWRcIjpcImZsYWctc2RcIixcIm5hbWVcIjpcIlN1ZGFuIEZsYWdcIixcImtleXdvcmRzXCI6W1wic2RcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZTlcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREU5XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc2VcIjp7XCJpZFwiOlwiZmxhZy1zZVwiLFwibmFtZVwiOlwiU3dlZGVuIEZsYWdcIixcImtleXdvcmRzXCI6W1wic2VcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZWFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREVBXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc2dcIjp7XCJpZFwiOlwiZmxhZy1zZ1wiLFwibmFtZVwiOlwiU2luZ2Fwb3JlIEZsYWdcIixcImtleXdvcmRzXCI6W1wic2dcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZWNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREVDXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc2hcIjp7XCJpZFwiOlwiZmxhZy1zaFwiLFwibmFtZVwiOlwiU3QuIEhlbGVuYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInNoXCIsXCJzdFwiLFwic2FpbnRcIixcImFzY2Vuc2lvblwiLFwidHJpc3RhblwiLFwiY3VuaGFcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZWRcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREVEXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc2lcIjp7XCJpZFwiOlwiZmxhZy1zaVwiLFwibmFtZVwiOlwiU2xvdmVuaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJzaVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOC0xZjFlZVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjhcdUQ4M0NcdURERUVcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1zalwiOntcImlkXCI6XCJmbGFnLXNqXCIsXCJuYW1lXCI6XCJTdmFsYmFyZCAmIEphbiBNYXllbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInNqXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZWZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREVGXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc2tcIjp7XCJpZFwiOlwiZmxhZy1za1wiLFwibmFtZVwiOlwiU2xvdmFraWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJza1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOC0xZjFmMFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjhcdUQ4M0NcdURERjBcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1zbFwiOntcImlkXCI6XCJmbGFnLXNsXCIsXCJuYW1lXCI6XCJTaWVycmEgTGVvbmUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJzbFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOC0xZjFmMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjhcdUQ4M0NcdURERjFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1zbVwiOntcImlkXCI6XCJmbGFnLXNtXCIsXCJuYW1lXCI6XCJTYW4gTWFyaW5vIEZsYWdcIixcImtleXdvcmRzXCI6W1wic21cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZjJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREYyXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctc25cIjp7XCJpZFwiOlwiZmxhZy1zblwiLFwibmFtZVwiOlwiU2VuZWdhbCBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInNuXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY4LTFmMWYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOFx1RDgzQ1x1RERGM1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXNvXCI6e1wiaWRcIjpcImZsYWctc29cIixcIm5hbWVcIjpcIlNvbWFsaWEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJzb1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOC0xZjFmNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjhcdUQ4M0NcdURERjRcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1zclwiOntcImlkXCI6XCJmbGFnLXNyXCIsXCJuYW1lXCI6XCJTdXJpbmFtZSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInNyXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY4LTFmMWY3XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOFx1RDgzQ1x1RERGN1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXNzXCI6e1wiaWRcIjpcImZsYWctc3NcIixcIm5hbWVcIjpcIlNvdXRoIFN1ZGFuIEZsYWdcIixcImtleXdvcmRzXCI6W1wic3NcIixcInNkXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY4LTFmMWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOFx1RDgzQ1x1RERGOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXN0XCI6e1wiaWRcIjpcImZsYWctc3RcIixcIm5hbWVcIjpcIlNcdTAwRTNvIFRvbVx1MDBFOSAmIFByXHUwMEVEbmNpcGUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJzdFwiLFwic2FvXCIsXCJ0b21lXCIsXCJwcmluY2lwZVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOC0xZjFmOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjhcdUQ4M0NcdURERjlcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1zdlwiOntcImlkXCI6XCJmbGFnLXN2XCIsXCJuYW1lXCI6XCJFbCBTYWx2YWRvciBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInN2XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY4LTFmMWZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOFx1RDgzQ1x1RERGQlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXN4XCI6e1wiaWRcIjpcImZsYWctc3hcIixcIm5hbWVcIjpcIlNpbnQgTWFhcnRlbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInN4XCIsXCJkdXRjaFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOC0xZjFmZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjhcdUQ4M0NcdURERkRcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy1zeVwiOntcImlkXCI6XCJmbGFnLXN5XCIsXCJuYW1lXCI6XCJTeXJpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInN5XCIsXCJzeXJpYW5cIixcImFyYWJcIixcInJlcHVibGljXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY4LTFmMWZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOFx1RDgzQ1x1RERGRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXN6XCI6e1wiaWRcIjpcImZsYWctc3pcIixcIm5hbWVcIjpcIkVzd2F0aW5pIEZsYWdcIixcImtleXdvcmRzXCI6W1wic3pcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjgtMWYxZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY4XHVEODNDXHVEREZGXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctdGFcIjp7XCJpZFwiOlwiZmxhZy10YVwiLFwibmFtZVwiOlwiVHJpc3RhbiBEYSBDdW5oYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInRhXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjktMWYxZTZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY5XHVEODNDXHVEREU2XCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctdGNcIjp7XCJpZFwiOlwiZmxhZy10Y1wiLFwibmFtZVwiOlwiVHVya3MgJiBDYWljb3MgSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInRjXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY5LTFmMWU4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOVx1RDgzQ1x1RERFOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXRkXCI6e1wiaWRcIjpcImZsYWctdGRcIixcIm5hbWVcIjpcIkNoYWQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ0ZFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOS0xZjFlOVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjlcdUQ4M0NcdURERTlcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy10ZlwiOntcImlkXCI6XCJmbGFnLXRmXCIsXCJuYW1lXCI6XCJGcmVuY2ggU291dGhlcm4gVGVycml0b3JpZXMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ0ZlwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOS0xZjFlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjlcdUQ4M0NcdURERUJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy10Z1wiOntcImlkXCI6XCJmbGFnLXRnXCIsXCJuYW1lXCI6XCJUb2dvIEZsYWdcIixcImtleXdvcmRzXCI6W1widGdcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjktMWYxZWNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY5XHVEODNDXHVEREVDXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctdGhcIjp7XCJpZFwiOlwiZmxhZy10aFwiLFwibmFtZVwiOlwiVGhhaWxhbmQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ0aFwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOS0xZjFlZFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjlcdUQ4M0NcdURERURcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy10alwiOntcImlkXCI6XCJmbGFnLXRqXCIsXCJuYW1lXCI6XCJUYWppa2lzdGFuIEZsYWdcIixcImtleXdvcmRzXCI6W1widGpcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjktMWYxZWZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY5XHVEODNDXHVEREVGXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctdGtcIjp7XCJpZFwiOlwiZmxhZy10a1wiLFwibmFtZVwiOlwiVG9rZWxhdSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInRrXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY5LTFmMWYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOVx1RDgzQ1x1RERGMFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXRsXCI6e1wiaWRcIjpcImZsYWctdGxcIixcIm5hbWVcIjpcIlRpbW9yLUxlc3RlIEZsYWdcIixcImtleXdvcmRzXCI6W1widGxcIixcInRpbW9yXCIsXCJsZXN0ZVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOS0xZjFmMVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjlcdUQ4M0NcdURERjFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy10bVwiOntcImlkXCI6XCJmbGFnLXRtXCIsXCJuYW1lXCI6XCJUdXJrbWVuaXN0YW4gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ0bVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOS0xZjFmMlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjlcdUQ4M0NcdURERjJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy10blwiOntcImlkXCI6XCJmbGFnLXRuXCIsXCJuYW1lXCI6XCJUdW5pc2lhIEZsYWdcIixcImtleXdvcmRzXCI6W1widG5cIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjktMWYxZjNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY5XHVEODNDXHVEREYzXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctdG9cIjp7XCJpZFwiOlwiZmxhZy10b1wiLFwibmFtZVwiOlwiVG9uZ2EgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ0b1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOS0xZjFmNFwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjlcdUQ4M0NcdURERjRcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy10clwiOntcImlkXCI6XCJmbGFnLXRyXCIsXCJuYW1lXCI6XCJUdXJrZXkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ0clwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmOS0xZjFmN1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERjlcdUQ4M0NcdURERjdcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy10dFwiOntcImlkXCI6XCJmbGFnLXR0XCIsXCJuYW1lXCI6XCJUcmluaWRhZCAmIFRvYmFnbyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInR0XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY5LTFmMWY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOVx1RDgzQ1x1RERGOVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXR2XCI6e1wiaWRcIjpcImZsYWctdHZcIixcIm5hbWVcIjpcIlR1dmFsdSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInR2XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY5LTFmMWZiXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOVx1RDgzQ1x1RERGQlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXR3XCI6e1wiaWRcIjpcImZsYWctdHdcIixcIm5hbWVcIjpcIlRhaXdhbiBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInR3XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWY5LTFmMWZjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGOVx1RDgzQ1x1RERGQ1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXR6XCI6e1wiaWRcIjpcImZsYWctdHpcIixcIm5hbWVcIjpcIlRhbnphbmlhIEZsYWdcIixcImtleXdvcmRzXCI6W1widHpcIixcInVuaXRlZFwiLFwicmVwdWJsaWNcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZjktMWYxZmZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREY5XHVEODNDXHVEREZGXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctdWFcIjp7XCJpZFwiOlwiZmxhZy11YVwiLFwibmFtZVwiOlwiVWtyYWluZSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInVhXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZhLTFmMWU2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGQVx1RDgzQ1x1RERFNlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXVnXCI6e1wiaWRcIjpcImZsYWctdWdcIixcIm5hbWVcIjpcIlVnYW5kYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInVnXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZhLTFmMWVjXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGQVx1RDgzQ1x1RERFQ1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXVtXCI6e1wiaWRcIjpcImZsYWctdW1cIixcIm5hbWVcIjpcIlUucy4gT3V0bHlpbmcgSXNsYW5kcyBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInVtXCIsXCJ1XCIsXCJzXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZmEtMWYxZjJcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREZBXHVEODNDXHVEREYyXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctdW5cIjp7XCJpZFwiOlwiZmxhZy11blwiLFwibmFtZVwiOlwiVW5pdGVkIE5hdGlvbnMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ1blwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZmEtMWYxZjNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREZBXHVEODNDXHVEREYzXCJ9XSxcInZlcnNpb25cIjo0fSxcInVzXCI6e1wiaWRcIjpcInVzXCIsXCJuYW1lXCI6XCJVbml0ZWQgU3RhdGVzIEZsYWdcIixcImtleXdvcmRzXCI6W1widXNcIixcImFtZXJpY2FcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZmEtMWYxZjhcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREZBXHVEODNDXHVEREY4XCJ9XSxcInZlcnNpb25cIjoxfSxcImZsYWctdXlcIjp7XCJpZFwiOlwiZmxhZy11eVwiLFwibmFtZVwiOlwiVXJ1Z3VheSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInV5XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZhLTFmMWZlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGQVx1RDgzQ1x1RERGRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXV6XCI6e1wiaWRcIjpcImZsYWctdXpcIixcIm5hbWVcIjpcIlV6YmVraXN0YW4gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ1elwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmYS0xZjFmZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERkFcdUQ4M0NcdURERkZcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy12YVwiOntcImlkXCI6XCJmbGFnLXZhXCIsXCJuYW1lXCI6XCJWYXRpY2FuIENpdHkgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ2YVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmYi0xZjFlNlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERkJcdUQ4M0NcdURERTZcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy12Y1wiOntcImlkXCI6XCJmbGFnLXZjXCIsXCJuYW1lXCI6XCJTdC4gVmluY2VudCAmIEdyZW5hZGluZXMgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ2Y1wiLFwic3RcIixcInNhaW50XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZiLTFmMWU4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGQlx1RDgzQ1x1RERFOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXZlXCI6e1wiaWRcIjpcImZsYWctdmVcIixcIm5hbWVcIjpcIlZlbmV6dWVsYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInZlXCIsXCJib2xpdmFyaWFuXCIsXCJyZXB1YmxpY1wiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmYi0xZjFlYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERkJcdUQ4M0NcdURERUFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy12Z1wiOntcImlkXCI6XCJmbGFnLXZnXCIsXCJuYW1lXCI6XCJCcml0aXNoIFZpcmdpbiBJc2xhbmRzIEZsYWdcIixcImtleXdvcmRzXCI6W1widmdcIixcImJ2aVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmYi0xZjFlY1wiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERkJcdUQ4M0NcdURERUNcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy12aVwiOntcImlkXCI6XCJmbGFnLXZpXCIsXCJuYW1lXCI6XCJVLnMuIFZpcmdpbiBJc2xhbmRzIEZsYWdcIixcImtleXdvcmRzXCI6W1widmlcIixcInVcIixcInNcIixcInVzXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZiLTFmMWVlXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGQlx1RDgzQ1x1RERFRVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXZuXCI6e1wiaWRcIjpcImZsYWctdm5cIixcIm5hbWVcIjpcIlZpZXRuYW0gRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ2blwiLFwidmlldFwiLFwibmFtXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZiLTFmMWYzXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGQlx1RDgzQ1x1RERGM1wifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXZ1XCI6e1wiaWRcIjpcImZsYWctdnVcIixcIm5hbWVcIjpcIlZhbnVhdHUgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ2dVwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmYi0xZjFmYVwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERkJcdUQ4M0NcdURERkFcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy13ZlwiOntcImlkXCI6XCJmbGFnLXdmXCIsXCJuYW1lXCI6XCJXYWxsaXMgJiBGdXR1bmEgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJ3ZlwiLFwibmF0aW9uXCIsXCJjb3VudHJ5XCIsXCJiYW5uZXJcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjFmYy0xZjFlYlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURERkNcdUQ4M0NcdURERUJcIn1dLFwidmVyc2lvblwiOjJ9LFwiZmxhZy13c1wiOntcImlkXCI6XCJmbGFnLXdzXCIsXCJuYW1lXCI6XCJTYW1vYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcIndzXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZjLTFmMWY4XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGQ1x1RDgzQ1x1RERGOFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXhrXCI6e1wiaWRcIjpcImZsYWcteGtcIixcIm5hbWVcIjpcIktvc292byBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInhrXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZkLTFmMWYwXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGRFx1RDgzQ1x1RERGMFwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXllXCI6e1wiaWRcIjpcImZsYWcteWVcIixcIm5hbWVcIjpcIlllbWVuIEZsYWdcIixcImtleXdvcmRzXCI6W1wieWVcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZmUtMWYxZWFcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREZFXHVEODNDXHVEREVBXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWcteXRcIjp7XCJpZFwiOlwiZmxhZy15dFwiLFwibmFtZVwiOlwiTWF5b3R0ZSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInl0XCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZlLTFmMWY5XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGRVx1RDgzQ1x1RERGOVwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXphXCI6e1wiaWRcIjpcImZsYWctemFcIixcIm5hbWVcIjpcIlNvdXRoIEFmcmljYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInphXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZmLTFmMWU2XCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGRlx1RDgzQ1x1RERFNlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXptXCI6e1wiaWRcIjpcImZsYWctem1cIixcIm5hbWVcIjpcIlphbWJpYSBGbGFnXCIsXCJrZXl3b3Jkc1wiOltcInptXCIsXCJuYXRpb25cIixcImNvdW50cnlcIixcImJhbm5lclwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmMWZmLTFmMWYyXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1RERGRlx1RDgzQ1x1RERGMlwifV0sXCJ2ZXJzaW9uXCI6Mn0sXCJmbGFnLXp3XCI6e1wiaWRcIjpcImZsYWctendcIixcIm5hbWVcIjpcIlppbWJhYndlIEZsYWdcIixcImtleXdvcmRzXCI6W1wiendcIixcIm5hdGlvblwiLFwiY291bnRyeVwiLFwiYmFubmVyXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYxZmYtMWYxZmNcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVEREZGXHVEODNDXHVEREZDXCJ9XSxcInZlcnNpb25cIjoyfSxcImZsYWctZW5nbGFuZFwiOntcImlkXCI6XCJmbGFnLWVuZ2xhbmRcIixcIm5hbWVcIjpcIkVuZ2xhbmQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJlbmdsaXNoXCJdLFwic2tpbnNcIjpbe1widW5pZmllZFwiOlwiMWYzZjQtZTAwNjctZTAwNjItZTAwNjUtZTAwNmUtZTAwNjctZTAwN2ZcIixcIm5hdGl2ZVwiOlwiXHVEODNDXHVERkY0XHVEQjQwXHVEQzY3XHVEQjQwXHVEQzYyXHVEQjQwXHVEQzY1XHVEQjQwXHVEQzZFXHVEQjQwXHVEQzY3XHVEQjQwXHVEQzdGXCJ9XSxcInZlcnNpb25cIjo1fSxcImZsYWctc2NvdGxhbmRcIjp7XCJpZFwiOlwiZmxhZy1zY290bGFuZFwiLFwibmFtZVwiOlwiU2NvdGxhbmQgRmxhZ1wiLFwia2V5d29yZHNcIjpbXCJzY290dGlzaFwiXSxcInNraW5zXCI6W3tcInVuaWZpZWRcIjpcIjFmM2Y0LWUwMDY3LWUwMDYyLWUwMDczLWUwMDYzLWUwMDc0LWUwMDdmXCIsXCJuYXRpdmVcIjpcIlx1RDgzQ1x1REZGNFx1REI0MFx1REM2N1x1REI0MFx1REM2Mlx1REI0MFx1REM3M1x1REI0MFx1REM2M1x1REI0MFx1REM3NFx1REI0MFx1REM3RlwifV0sXCJ2ZXJzaW9uXCI6NX0sXCJmbGFnLXdhbGVzXCI6e1wiaWRcIjpcImZsYWctd2FsZXNcIixcIm5hbWVcIjpcIldhbGVzIEZsYWdcIixcImtleXdvcmRzXCI6W1wid2Vsc2hcIl0sXCJza2luc1wiOlt7XCJ1bmlmaWVkXCI6XCIxZjNmNC1lMDA2Ny1lMDA2Mi1lMDA3Ny1lMDA2Yy1lMDA3My1lMDA3ZlwiLFwibmF0aXZlXCI6XCJcdUQ4M0NcdURGRjRcdURCNDBcdURDNjdcdURCNDBcdURDNjJcdURCNDBcdURDNzdcdURCNDBcdURDNkNcdURCNDBcdURDNzNcdURCNDBcdURDN0ZcIn1dLFwidmVyc2lvblwiOjV9fSxcImFsaWFzZXNcIjp7XCJzYXRpc2ZpZWRcIjpcImxhdWdoaW5nXCIsXCJncmlubmluZ19mYWNlX3dpdGhfc3Rhcl9leWVzXCI6XCJzdGFyLXN0cnVja1wiLFwiZ3Jpbm5pbmdfZmFjZV93aXRoX29uZV9sYXJnZV9hbmRfb25lX3NtYWxsX2V5ZVwiOlwiemFueV9mYWNlXCIsXCJzbWlsaW5nX2ZhY2Vfd2l0aF9zbWlsaW5nX2V5ZXNfYW5kX2hhbmRfY292ZXJpbmdfbW91dGhcIjpcImZhY2Vfd2l0aF9oYW5kX292ZXJfbW91dGhcIixcImZhY2Vfd2l0aF9maW5nZXJfY292ZXJpbmdfY2xvc2VkX2xpcHNcIjpcInNodXNoaW5nX2ZhY2VcIixcImZhY2Vfd2l0aF9vbmVfZXllYnJvd19yYWlzZWRcIjpcImZhY2Vfd2l0aF9yYWlzZWRfZXllYnJvd1wiLFwiZmFjZV93aXRoX29wZW5fbW91dGhfdm9taXRpbmdcIjpcImZhY2Vfdm9taXRpbmdcIixcInNob2NrZWRfZmFjZV93aXRoX2V4cGxvZGluZ19oZWFkXCI6XCJleHBsb2RpbmdfaGVhZFwiLFwic2VyaW91c19mYWNlX3dpdGhfc3ltYm9sc19jb3ZlcmluZ19tb3V0aFwiOlwiZmFjZV93aXRoX3N5bWJvbHNfb25fbW91dGhcIixcInBvb3BcIjpcImhhbmtleVwiLFwic2hpdFwiOlwiaGFua2V5XCIsXCJjb2xsaXNpb25cIjpcImJvb21cIixcInJhaXNlZF9oYW5kXCI6XCJoYW5kXCIsXCJoYW5kX3dpdGhfaW5kZXhfYW5kX21pZGRsZV9maW5nZXJzX2Nyb3NzZWRcIjpcImNyb3NzZWRfZmluZ2Vyc1wiLFwic2lnbl9vZl90aGVfaG9ybnNcIjpcInRoZV9ob3Juc1wiLFwicmV2ZXJzZWRfaGFuZF93aXRoX21pZGRsZV9maW5nZXJfZXh0ZW5kZWRcIjpcIm1pZGRsZV9maW5nZXJcIixcInRodW1ic3VwXCI6XCIrMVwiLFwidGh1bWJzZG93blwiOlwiLTFcIixcInB1bmNoXCI6XCJmYWNlcHVuY2hcIixcIm1vdGhlcl9jaHJpc3RtYXNcIjpcIm1yc19jbGF1c1wiLFwicnVubmluZ1wiOlwicnVubmVyXCIsXCJtYW4td2l0aC1idW5ueS1lYXJzLXBhcnR5aW5nXCI6XCJtZW4td2l0aC1idW5ueS1lYXJzLXBhcnR5aW5nXCIsXCJ3b21hbi13aXRoLWJ1bm55LWVhcnMtcGFydHlpbmdcIjpcIndvbWVuLXdpdGgtYnVubnktZWFycy1wYXJ0eWluZ1wiLFwid29tZW5faG9sZGluZ19oYW5kc1wiOlwidHdvX3dvbWVuX2hvbGRpbmdfaGFuZHNcIixcIndvbWFuX2FuZF9tYW5faG9sZGluZ19oYW5kc1wiOlwibWFuX2FuZF93b21hbl9ob2xkaW5nX2hhbmRzXCIsXCJjb3VwbGVcIjpcIm1hbl9hbmRfd29tYW5faG9sZGluZ19oYW5kc1wiLFwibWVuX2hvbGRpbmdfaGFuZHNcIjpcInR3b19tZW5faG9sZGluZ19oYW5kc1wiLFwicGF3X3ByaW50c1wiOlwiZmVldFwiLFwiZmxpcHBlclwiOlwiZG9scGhpblwiLFwiaG9uZXliZWVcIjpcImJlZVwiLFwibGFkeV9iZWV0bGVcIjpcImxhZHlidWdcIixcImNvb2tpbmdcIjpcImZyaWVkX2VnZ1wiLFwia25pZmVcIjpcImhvY2hvXCIsXCJyZWRfY2FyXCI6XCJjYXJcIixcInNhaWxib2F0XCI6XCJib2F0XCIsXCJ3YXhpbmdfZ2liYm91c19tb29uXCI6XCJtb29uXCIsXCJzdW5fc21hbGxfY2xvdWRcIjpcIm1vc3RseV9zdW5ueVwiLFwic3VuX2JlaGluZF9jbG91ZFwiOlwiYmFyZWx5X3N1bm55XCIsXCJzdW5fYmVoaW5kX3JhaW5fY2xvdWRcIjpcInBhcnRseV9zdW5ueV9yYWluXCIsXCJsaWdodG5pbmdfY2xvdWRcIjpcImxpZ2h0bmluZ1wiLFwidG9ybmFkb19jbG91ZFwiOlwidG9ybmFkb1wiLFwidHNoaXJ0XCI6XCJzaGlydFwiLFwic2hvZVwiOlwibWFuc19zaG9lXCIsXCJ0ZWxlcGhvbmVcIjpcInBob25lXCIsXCJsYW50ZXJuXCI6XCJpemFrYXlhX2xhbnRlcm5cIixcIm9wZW5fYm9va1wiOlwiYm9va1wiLFwiZW52ZWxvcGVcIjpcImVtYWlsXCIsXCJwZW5jaWxcIjpcIm1lbW9cIixcImhlYXZ5X2V4Y2xhbWF0aW9uX21hcmtcIjpcImV4Y2xhbWF0aW9uXCIsXCJzdGFmZl9vZl9hZXNjdWxhcGl1c1wiOlwibWVkaWNhbF9zeW1ib2xcIixcImZsYWctY25cIjpcImNuXCIsXCJmbGFnLWRlXCI6XCJkZVwiLFwiZmxhZy1lc1wiOlwiZXNcIixcImZsYWctZnJcIjpcImZyXCIsXCJ1a1wiOlwiZ2JcIixcImZsYWctZ2JcIjpcImdiXCIsXCJmbGFnLWl0XCI6XCJpdFwiLFwiZmxhZy1qcFwiOlwianBcIixcImZsYWcta3JcIjpcImtyXCIsXCJmbGFnLXJ1XCI6XCJydVwiLFwiZmxhZy11c1wiOlwidXNcIn0sXCJzaGVldFwiOntcImNvbHNcIjo2MSxcInJvd3NcIjo2MX19IiwgImV4cG9ydCB7IFBpY2tlckVsZW1lbnQgYXMgUGlja2VyIH0gZnJvbSAnLi9jb21wb25lbnRzL1BpY2tlcidcbmV4cG9ydCB7IEVtb2ppRWxlbWVudCBhcyBFbW9qaSB9IGZyb20gJy4vY29tcG9uZW50cy9FbW9qaSdcblxuZXhwb3J0IHsgRnJlcXVlbnRseVVzZWQsIFNhZmVGbGFncywgU2VhcmNoSW5kZXgsIFN0b3JlIH0gZnJvbSAnLi9oZWxwZXJzJ1xuXG5leHBvcnQgeyBpbml0LCBEYXRhLCBJMThuIH0gZnJvbSAnLi9jb25maWcnXG5cbmV4cG9ydCB7IGdldEVtb2ppRGF0YUZyb21OYXRpdmUgfSBmcm9tICcuL3V0aWxzJ1xuIiwgIi8vIEB0cy1ub2NoZWNrXG5leHBvcnQgeyBkZWZhdWx0IGFzIFBpY2tlciB9IGZyb20gJy4vUGlja2VyJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQaWNrZXJFbGVtZW50IH0gZnJvbSAnLi9QaWNrZXJFbGVtZW50J1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQaWNrZXJTdHlsZXMgfSBmcm9tICdidW5kbGUtdGV4dDouL1BpY2tlclN0eWxlcy5zY3NzJ1xuIiwgIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgeyBDb21wb25lbnQsIGNyZWF0ZVJlZiB9IGZyb20gJ3ByZWFjdCdcblxuaW1wb3J0IHsgZGVlcEVxdWFsLCBzbGVlcCwgZ2V0RW1vamlEYXRhIH0gZnJvbSAnLi4vLi4vdXRpbHMnXG5pbXBvcnQgeyBEYXRhLCBJMThuLCBpbml0IH0gZnJvbSAnLi4vLi4vY29uZmlnJ1xuaW1wb3J0IHsgU2VhcmNoSW5kZXgsIFN0b3JlLCBGcmVxdWVudGx5VXNlZCB9IGZyb20gJy4uLy4uL2hlbHBlcnMnXG5pbXBvcnQgSWNvbnMgZnJvbSAnLi4vLi4vaWNvbnMnXG5cbmltcG9ydCB7IEVtb2ppIH0gZnJvbSAnLi4vRW1vamknXG5pbXBvcnQgeyBOYXZpZ2F0aW9uIH0gZnJvbSAnLi4vTmF2aWdhdGlvbidcbmltcG9ydCB7IFB1cmVJbmxpbmVDb21wb25lbnQgfSBmcm9tICcuLi9IT0NzJ1xuXG5jb25zdCBQZXJmb3JtYW5jZSA9IHtcbiAgcm93c1BlclJlbmRlcjogMTAsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBpY2tlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIoKVxuXG4gICAgdGhpcy5vYnNlcnZlcnMgPSBbXVxuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHBvczogWy0xLCAtMV0sXG4gICAgICBwZXJMaW5lOiB0aGlzLmluaXREeW5hbWljUGVyTGluZShwcm9wcyksXG4gICAgICB2aXNpYmxlUm93czogeyAwOiB0cnVlIH0sXG4gICAgICAuLi50aGlzLmdldEluaXRpYWxTdGF0ZShwcm9wcyksXG4gICAgfVxuICB9XG5cbiAgZ2V0SW5pdGlhbFN0YXRlKHByb3BzID0gdGhpcy5wcm9wcykge1xuICAgIHJldHVybiB7XG4gICAgICBza2luOiBTdG9yZS5nZXQoJ3NraW4nKSB8fCBwcm9wcy5za2luLFxuICAgICAgdGhlbWU6IHRoaXMuaW5pdFRoZW1lKHByb3BzLnRoZW1lKSxcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdGhpcy5kaXIgPSBJMThuLnJ0bCA/ICdydGwnIDogJ2x0cidcbiAgICB0aGlzLnJlZnMgPSB7XG4gICAgICBtZW51OiBjcmVhdGVSZWYoKSxcbiAgICAgIG5hdmlnYXRpb246IGNyZWF0ZVJlZigpLFxuICAgICAgc2Nyb2xsOiBjcmVhdGVSZWYoKSxcbiAgICAgIHNlYXJjaDogY3JlYXRlUmVmKCksXG4gICAgICBzZWFyY2hJbnB1dDogY3JlYXRlUmVmKCksXG4gICAgICBza2luVG9uZUJ1dHRvbjogY3JlYXRlUmVmKCksXG4gICAgICBza2luVG9uZVJhZGlvOiBjcmVhdGVSZWYoKSxcbiAgICB9XG5cbiAgICB0aGlzLmluaXRHcmlkKClcblxuICAgIGlmIChcbiAgICAgIHRoaXMucHJvcHMuc3RpY2t5U2VhcmNoID09IGZhbHNlICYmXG4gICAgICB0aGlzLnByb3BzLnNlYXJjaFBvc2l0aW9uID09ICdzdGlja3knXG4gICAgKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICdbRW1vamlNYXJ0XSBEZXByZWNhdGlvbiB3YXJuaW5nOiBgc3RpY2t5U2VhcmNoYCBoYXMgYmVlbiByZW5hbWVkIGBzZWFyY2hQb3NpdGlvbmAuJyxcbiAgICAgIClcblxuICAgICAgdGhpcy5wcm9wcy5zZWFyY2hQb3NpdGlvbiA9ICdzdGF0aWMnXG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5yZWdpc3RlcigpXG5cbiAgICB0aGlzLnNoYWRvd1Jvb3QgPSB0aGlzLmJhc2UucGFyZW50Tm9kZVxuXG4gICAgaWYgKHRoaXMucHJvcHMuYXV0b0ZvY3VzKSB7XG4gICAgICBjb25zdCB7IHNlYXJjaElucHV0IH0gPSB0aGlzLnJlZnNcbiAgICAgIGlmIChzZWFyY2hJbnB1dC5jdXJyZW50KSB7XG4gICAgICAgIHNlYXJjaElucHV0LmN1cnJlbnQuZm9jdXMoKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgdGhpcy5uZXh0U3RhdGUgfHwgKHRoaXMubmV4dFN0YXRlID0ge30pXG5cbiAgICBmb3IgKGNvbnN0IGsgaW4gbmV4dFByb3BzKSB7XG4gICAgICB0aGlzLm5leHRTdGF0ZVtrXSA9IG5leHRQcm9wc1trXVxuICAgIH1cblxuICAgIGNsZWFyVGltZW91dCh0aGlzLm5leHRTdGF0ZVRpbWVyKVxuICAgIHRoaXMubmV4dFN0YXRlVGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGxldCByZXF1aXJlc0dyaWRSZXNldCA9IGZhbHNlXG5cbiAgICAgIGZvciAoY29uc3QgayBpbiB0aGlzLm5leHRTdGF0ZSkge1xuICAgICAgICB0aGlzLnByb3BzW2tdID0gdGhpcy5uZXh0U3RhdGVba11cblxuICAgICAgICBpZiAoayA9PT0gJ2N1c3RvbScgfHwgayA9PT0gJ2NhdGVnb3JpZXMnKSB7XG4gICAgICAgICAgcmVxdWlyZXNHcmlkUmVzZXQgPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZGVsZXRlIHRoaXMubmV4dFN0YXRlXG4gICAgICBjb25zdCBuZXh0U3RhdGUgPSB0aGlzLmdldEluaXRpYWxTdGF0ZSgpXG5cbiAgICAgIGlmIChyZXF1aXJlc0dyaWRSZXNldCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXNldChuZXh0U3RhdGUpXG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0U3RhdGUobmV4dFN0YXRlKVxuICAgIH0pXG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnVucmVnaXN0ZXIoKVxuICB9XG5cbiAgYXN5bmMgcmVzZXQobmV4dFN0YXRlID0ge30pIHtcbiAgICBhd2FpdCBpbml0KHRoaXMucHJvcHMpXG5cbiAgICB0aGlzLmluaXRHcmlkKClcbiAgICB0aGlzLnVub2JzZXJ2ZSgpXG5cbiAgICB0aGlzLnNldFN0YXRlKG5leHRTdGF0ZSwgKCkgPT4ge1xuICAgICAgdGhpcy5vYnNlcnZlQ2F0ZWdvcmllcygpXG4gICAgICB0aGlzLm9ic2VydmVSb3dzKClcbiAgICB9KVxuICB9XG5cbiAgcmVnaXN0ZXIoKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZUNsaWNrT3V0c2lkZSlcbiAgICB0aGlzLm9ic2VydmUoKVxuICB9XG5cbiAgdW5yZWdpc3RlcigpIHtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlQ2xpY2tPdXRzaWRlKVxuICAgIHRoaXMuZGFya01lZGlhPy5yZW1vdmVFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLmRhcmtNZWRpYUNhbGxiYWNrKVxuICAgIHRoaXMudW5vYnNlcnZlKClcbiAgfVxuXG4gIG9ic2VydmUoKSB7XG4gICAgdGhpcy5vYnNlcnZlQ2F0ZWdvcmllcygpXG4gICAgdGhpcy5vYnNlcnZlUm93cygpXG4gIH1cblxuICB1bm9ic2VydmUoeyBleGNlcHQgPSBbXSB9ID0ge30pIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZXhjZXB0KSkge1xuICAgICAgZXhjZXB0ID0gW2V4Y2VwdF1cbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IG9ic2VydmVyIG9mIHRoaXMub2JzZXJ2ZXJzKSB7XG4gICAgICBpZiAoZXhjZXB0LmluY2x1ZGVzKG9ic2VydmVyKSkgY29udGludWVcbiAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKVxuICAgIH1cblxuICAgIHRoaXMub2JzZXJ2ZXJzID0gW10uY29uY2F0KGV4Y2VwdClcbiAgfVxuXG4gIGluaXRHcmlkKCkge1xuICAgIGNvbnN0IHsgY2F0ZWdvcmllcyB9ID0gRGF0YVxuXG4gICAgdGhpcy5yZWZzLmNhdGVnb3JpZXMgPSBuZXcgTWFwKClcblxuICAgIGNvbnN0IG5hdktleSA9IERhdGEuY2F0ZWdvcmllcy5tYXAoKGNhdGVnb3J5KSA9PiBjYXRlZ29yeS5pZCkuam9pbignLCcpXG4gICAgaWYgKHRoaXMubmF2S2V5ICYmIHRoaXMubmF2S2V5ICE9IG5hdktleSkge1xuICAgICAgdGhpcy5yZWZzLnNjcm9sbC5jdXJyZW50ICYmICh0aGlzLnJlZnMuc2Nyb2xsLmN1cnJlbnQuc2Nyb2xsVG9wID0gMClcbiAgICB9XG4gICAgdGhpcy5uYXZLZXkgPSBuYXZLZXlcblxuICAgIHRoaXMuZ3JpZCA9IFtdXG4gICAgdGhpcy5ncmlkLnNldHNpemUgPSAwXG5cbiAgICBjb25zdCBhZGRSb3cgPSAocm93cywgY2F0ZWdvcnkpID0+IHtcbiAgICAgIGNvbnN0IHJvdyA9IFtdXG4gICAgICByb3cuX19jYXRlZ29yeUlkID0gY2F0ZWdvcnkuaWRcbiAgICAgIHJvdy5fX2luZGV4ID0gcm93cy5sZW5ndGhcbiAgICAgIHRoaXMuZ3JpZC5wdXNoKHJvdylcblxuICAgICAgY29uc3Qgcm93SW5kZXggPSB0aGlzLmdyaWQubGVuZ3RoIC0gMVxuICAgICAgY29uc3Qgcm93UmVmID0gcm93SW5kZXggJSBQZXJmb3JtYW5jZS5yb3dzUGVyUmVuZGVyID8ge30gOiBjcmVhdGVSZWYoKVxuICAgICAgcm93UmVmLmluZGV4ID0gcm93SW5kZXhcbiAgICAgIHJvd1JlZi5wb3NpbnNldCA9IHRoaXMuZ3JpZC5zZXRzaXplICsgMVxuICAgICAgcm93cy5wdXNoKHJvd1JlZilcblxuICAgICAgcmV0dXJuIHJvd1xuICAgIH1cblxuICAgIGZvciAobGV0IGNhdGVnb3J5IG9mIGNhdGVnb3JpZXMpIHtcbiAgICAgIGNvbnN0IHJvd3MgPSBbXVxuICAgICAgbGV0IHJvdyA9IGFkZFJvdyhyb3dzLCBjYXRlZ29yeSlcblxuICAgICAgZm9yIChsZXQgZW1vamkgb2YgY2F0ZWdvcnkuZW1vamlzKSB7XG4gICAgICAgIGlmIChyb3cubGVuZ3RoID09IHRoaXMuZ2V0UGVyTGluZSgpKSB7XG4gICAgICAgICAgcm93ID0gYWRkUm93KHJvd3MsIGNhdGVnb3J5KVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5ncmlkLnNldHNpemUgKz0gMVxuICAgICAgICByb3cucHVzaChlbW9qaSlcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZWZzLmNhdGVnb3JpZXMuc2V0KGNhdGVnb3J5LmlkLCB7IHJvb3Q6IGNyZWF0ZVJlZigpLCByb3dzIH0pXG4gICAgfVxuICB9XG5cbiAgZGFya01lZGlhQ2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMudGhlbWUgIT0gJ2F1dG8nKSByZXR1cm5cbiAgICB0aGlzLnNldFN0YXRlKHsgdGhlbWU6IHRoaXMuZGFya01lZGlhLm1hdGNoZXMgPyAnZGFyaycgOiAnbGlnaHQnIH0pXG4gIH1cblxuICBpbml0VGhlbWUodGhlbWUpIHtcbiAgICBpZiAodGhlbWUgIT0gJ2F1dG8nKSByZXR1cm4gdGhlbWVcblxuICAgIGlmICghdGhpcy5kYXJrTWVkaWEpIHtcbiAgICAgIHRoaXMuZGFya01lZGlhID0gbWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpXG4gICAgICBpZiAodGhpcy5kYXJrTWVkaWEubWVkaWEubWF0Y2goL15ub3QvKSkgcmV0dXJuICdsaWdodCdcblxuICAgICAgdGhpcy5kYXJrTWVkaWEuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdGhpcy5kYXJrTWVkaWFDYWxsYmFjaylcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5kYXJrTWVkaWEubWF0Y2hlcyA/ICdkYXJrJyA6ICdsaWdodCdcbiAgfVxuXG4gIGhhbmRsZUNsaWNrT3V0c2lkZSA9IChlKSA9PiB7XG4gICAgY29uc3QgeyBlbGVtZW50IH0gPSB0aGlzLnByb3BzXG5cbiAgICBpZiAoZS50YXJnZXQgIT0gZWxlbWVudCkge1xuICAgICAgaWYgKHRoaXMuc3RhdGUuc2hvd1NraW5zKSB7XG4gICAgICAgIHRoaXMuY2xvc2VTa2lucygpXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLm9uQ2xpY2tPdXRzaWRlKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25DbGlja091dHNpZGUoZSlcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBoYW5kbGVCYXNlQ2xpY2sgPSAoZSkgPT4ge1xuICAgIGlmICghdGhpcy5zdGF0ZS5zaG93U2tpbnMpIHJldHVyblxuICAgIGlmICghZS50YXJnZXQuY2xvc2VzdCgnLm1lbnUnKSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXG5cbiAgICAgIHRoaXMuY2xvc2VTa2lucygpXG4gICAgfVxuICB9XG5cbiAgaGFuZGxlQmFzZUtleWRvd24gPSAoZSkgPT4ge1xuICAgIGlmICghdGhpcy5zdGF0ZS5zaG93U2tpbnMpIHJldHVyblxuICAgIGlmIChlLmtleSA9PSAnRXNjYXBlJykge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXG5cbiAgICAgIHRoaXMuY2xvc2VTa2lucygpXG4gICAgfVxuICB9XG5cbiAgaW5pdER5bmFtaWNQZXJMaW5lKHByb3BzID0gdGhpcy5wcm9wcykge1xuICAgIGlmICghcHJvcHMuZHluYW1pY1dpZHRoKSByZXR1cm5cbiAgICBjb25zdCB7IGVsZW1lbnQsIGVtb2ppQnV0dG9uU2l6ZSB9ID0gcHJvcHNcblxuICAgIGNvbnN0IGNhbGN1bGF0ZVBlckxpbmUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHdpZHRoIH0gPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgICByZXR1cm4gTWF0aC5mbG9vcih3aWR0aCAvIGVtb2ppQnV0dG9uU2l6ZSlcbiAgICB9XG5cbiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoKSA9PiB7XG4gICAgICB0aGlzLnVub2JzZXJ2ZSh7IGV4Y2VwdDogb2JzZXJ2ZXIgfSlcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBwZXJMaW5lOiBjYWxjdWxhdGVQZXJMaW5lKCkgfSwgKCkgPT4ge1xuICAgICAgICB0aGlzLmluaXRHcmlkKClcbiAgICAgICAgdGhpcy5mb3JjZVVwZGF0ZSgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5vYnNlcnZlQ2F0ZWdvcmllcygpXG4gICAgICAgICAgdGhpcy5vYnNlcnZlUm93cygpXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH0pXG5cbiAgICBvYnNlcnZlci5vYnNlcnZlKGVsZW1lbnQpXG4gICAgdGhpcy5vYnNlcnZlcnMucHVzaChvYnNlcnZlcilcblxuICAgIHJldHVybiBjYWxjdWxhdGVQZXJMaW5lKClcbiAgfVxuXG4gIGdldFBlckxpbmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUucGVyTGluZSB8fCB0aGlzLnByb3BzLnBlckxpbmVcbiAgfVxuXG4gIGdldEVtb2ppQnlQb3MoW3AxLCBwMl0pIHtcbiAgICBjb25zdCBncmlkID0gdGhpcy5zdGF0ZS5zZWFyY2hSZXN1bHRzIHx8IHRoaXMuZ3JpZFxuICAgIGNvbnN0IGVtb2ppID0gZ3JpZFtwMV0gJiYgZ3JpZFtwMV1bcDJdXG5cbiAgICBpZiAoIWVtb2ppKSByZXR1cm5cbiAgICByZXR1cm4gU2VhcmNoSW5kZXguZ2V0KGVtb2ppKVxuICB9XG5cbiAgb2JzZXJ2ZUNhdGVnb3JpZXMoKSB7XG4gICAgY29uc3QgbmF2aWdhdGlvbiA9IHRoaXMucmVmcy5uYXZpZ2F0aW9uLmN1cnJlbnRcbiAgICBpZiAoIW5hdmlnYXRpb24pIHJldHVyblxuXG4gICAgY29uc3QgdmlzaWJsZUNhdGVnb3JpZXMgPSBuZXcgTWFwKClcbiAgICBjb25zdCBzZXRGb2N1c2VkQ2F0ZWdvcnkgPSAoY2F0ZWdvcnlJZCkgPT4ge1xuICAgICAgaWYgKGNhdGVnb3J5SWQgIT0gbmF2aWdhdGlvbi5zdGF0ZS5jYXRlZ29yeUlkKSB7XG4gICAgICAgIG5hdmlnYXRpb24uc2V0U3RhdGUoeyBjYXRlZ29yeUlkIH0pXG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3Qgb2JzZXJ2ZXJPcHRpb25zID0ge1xuICAgICAgcm9vdDogdGhpcy5yZWZzLnNjcm9sbC5jdXJyZW50LFxuICAgICAgdGhyZXNob2xkOiBbMC4wLCAxLjBdLFxuICAgIH1cblxuICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChlbnRyaWVzKSA9PiB7XG4gICAgICBmb3IgKGNvbnN0IGVudHJ5IG9mIGVudHJpZXMpIHtcbiAgICAgICAgY29uc3QgaWQgPSBlbnRyeS50YXJnZXQuZGF0YXNldC5pZFxuICAgICAgICB2aXNpYmxlQ2F0ZWdvcmllcy5zZXQoaWQsIGVudHJ5LmludGVyc2VjdGlvblJhdGlvKVxuICAgICAgfVxuXG4gICAgICBjb25zdCByYXRpb3MgPSBbLi4udmlzaWJsZUNhdGVnb3JpZXNdXG4gICAgICBmb3IgKGNvbnN0IFtpZCwgcmF0aW9dIG9mIHJhdGlvcykge1xuICAgICAgICBpZiAocmF0aW8pIHtcbiAgICAgICAgICBzZXRGb2N1c2VkQ2F0ZWdvcnkoaWQpXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIG9ic2VydmVyT3B0aW9ucylcblxuICAgIGZvciAoY29uc3QgeyByb290IH0gb2YgdGhpcy5yZWZzLmNhdGVnb3JpZXMudmFsdWVzKCkpIHtcbiAgICAgIG9ic2VydmVyLm9ic2VydmUocm9vdC5jdXJyZW50KVxuICAgIH1cblxuICAgIHRoaXMub2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpXG4gIH1cblxuICBvYnNlcnZlUm93cygpIHtcbiAgICBjb25zdCB2aXNpYmxlUm93cyA9IHsgLi4udGhpcy5zdGF0ZS52aXNpYmxlUm93cyB9XG5cbiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihcbiAgICAgIChlbnRyaWVzKSA9PiB7XG4gICAgICAgIGZvciAoY29uc3QgZW50cnkgb2YgZW50cmllcykge1xuICAgICAgICAgIGNvbnN0IGluZGV4ID0gcGFyc2VJbnQoZW50cnkudGFyZ2V0LmRhdGFzZXQuaW5kZXgpXG5cbiAgICAgICAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcbiAgICAgICAgICAgIHZpc2libGVSb3dzW2luZGV4XSA9IHRydWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVsZXRlIHZpc2libGVSb3dzW2luZGV4XVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB2aXNpYmxlUm93cyB9KVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcm9vdDogdGhpcy5yZWZzLnNjcm9sbC5jdXJyZW50LFxuICAgICAgICByb290TWFyZ2luOiBgJHtcbiAgICAgICAgICB0aGlzLnByb3BzLmVtb2ppQnV0dG9uU2l6ZSAqIChQZXJmb3JtYW5jZS5yb3dzUGVyUmVuZGVyICsgNSlcbiAgICAgICAgfXB4IDBweCAke3RoaXMucHJvcHMuZW1vamlCdXR0b25TaXplICogUGVyZm9ybWFuY2Uucm93c1BlclJlbmRlcn1weGAsXG4gICAgICB9LFxuICAgIClcblxuICAgIGZvciAoY29uc3QgeyByb3dzIH0gb2YgdGhpcy5yZWZzLmNhdGVnb3JpZXMudmFsdWVzKCkpIHtcbiAgICAgIGZvciAoY29uc3Qgcm93IG9mIHJvd3MpIHtcbiAgICAgICAgaWYgKHJvdy5jdXJyZW50KSB7XG4gICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShyb3cuY3VycmVudClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMub2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpXG4gIH1cblxuICBwcmV2ZW50RGVmYXVsdChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gIH1cblxuICBoYW5kbGVTZWFyY2hDbGljayA9ICgpID0+IHtcbiAgICBjb25zdCBlbW9qaSA9IHRoaXMuZ2V0RW1vamlCeVBvcyh0aGlzLnN0YXRlLnBvcylcbiAgICBpZiAoIWVtb2ppKSByZXR1cm5cblxuICAgIHRoaXMuc2V0U3RhdGUoeyBwb3M6IFstMSwgLTFdIH0pXG4gIH1cblxuICBoYW5kbGVTZWFyY2hJbnB1dCA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBpbnB1dCA9IHRoaXMucmVmcy5zZWFyY2hJbnB1dC5jdXJyZW50XG4gICAgaWYgKCFpbnB1dCkgcmV0dXJuXG5cbiAgICBjb25zdCB7IHZhbHVlIH0gPSBpbnB1dFxuICAgIGNvbnN0IHNlYXJjaFJlc3VsdHMgPSBhd2FpdCBTZWFyY2hJbmRleC5zZWFyY2godmFsdWUpXG4gICAgY29uc3QgYWZ0ZXJSZW5kZXIgPSAoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMucmVmcy5zY3JvbGwuY3VycmVudCkgcmV0dXJuXG4gICAgICB0aGlzLnJlZnMuc2Nyb2xsLmN1cnJlbnQuc2Nyb2xsVG9wID0gMFxuICAgIH1cblxuICAgIGlmICghc2VhcmNoUmVzdWx0cykge1xuICAgICAgcmV0dXJuIHRoaXMuc2V0U3RhdGUoeyBzZWFyY2hSZXN1bHRzLCBwb3M6IFstMSwgLTFdIH0sIGFmdGVyUmVuZGVyKVxuICAgIH1cblxuICAgIGNvbnN0IHBvcyA9IGlucHV0LnNlbGVjdGlvblN0YXJ0ID09IGlucHV0LnZhbHVlLmxlbmd0aCA/IFswLCAwXSA6IFstMSwgLTFdXG4gICAgY29uc3QgZ3JpZCA9IFtdXG4gICAgZ3JpZC5zZXRzaXplID0gc2VhcmNoUmVzdWx0cy5sZW5ndGhcbiAgICBsZXQgcm93ID0gbnVsbFxuXG4gICAgZm9yIChsZXQgZW1vamkgb2Ygc2VhcmNoUmVzdWx0cykge1xuICAgICAgaWYgKCFncmlkLmxlbmd0aCB8fCByb3cubGVuZ3RoID09IHRoaXMuZ2V0UGVyTGluZSgpKSB7XG4gICAgICAgIHJvdyA9IFtdXG4gICAgICAgIHJvdy5fX2NhdGVnb3J5SWQgPSAnc2VhcmNoJ1xuICAgICAgICByb3cuX19pbmRleCA9IGdyaWQubGVuZ3RoXG4gICAgICAgIGdyaWQucHVzaChyb3cpXG4gICAgICB9XG5cbiAgICAgIHJvdy5wdXNoKGVtb2ppKVxuICAgIH1cblxuICAgIHRoaXMuaWdub3JlTW91c2UoKVxuICAgIHRoaXMuc2V0U3RhdGUoeyBzZWFyY2hSZXN1bHRzOiBncmlkLCBwb3MgfSwgYWZ0ZXJSZW5kZXIpXG4gIH1cblxuICBoYW5kbGVTZWFyY2hLZXlEb3duID0gKGUpID0+IHtcbiAgICAvLyBjb25zdCBzcGVjaWFsS2V5ID0gZS5hbHRLZXkgfHwgZS5jdHJsS2V5IHx8IGUubWV0YUtleVxuICAgIGNvbnN0IGlucHV0ID0gZS5jdXJyZW50VGFyZ2V0XG4gICAgZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKVxuXG4gICAgc3dpdGNoIChlLmtleSkge1xuICAgICAgY2FzZSAnQXJyb3dMZWZ0JzpcbiAgICAgICAgLy8gaWYgKHNwZWNpYWxLZXkpIHJldHVyblxuICAgICAgICAvLyBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgdGhpcy5uYXZpZ2F0ZSh7IGUsIGlucHV0LCBsZWZ0OiB0cnVlIH0pXG4gICAgICAgIGJyZWFrXG5cbiAgICAgIGNhc2UgJ0Fycm93UmlnaHQnOlxuICAgICAgICAvLyBpZiAoc3BlY2lhbEtleSkgcmV0dXJuXG4gICAgICAgIC8vIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICB0aGlzLm5hdmlnYXRlKHsgZSwgaW5wdXQsIHJpZ2h0OiB0cnVlIH0pXG4gICAgICAgIGJyZWFrXG5cbiAgICAgIGNhc2UgJ0Fycm93VXAnOlxuICAgICAgICAvLyBpZiAoc3BlY2lhbEtleSkgcmV0dXJuXG4gICAgICAgIC8vIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICB0aGlzLm5hdmlnYXRlKHsgZSwgaW5wdXQsIHVwOiB0cnVlIH0pXG4gICAgICAgIGJyZWFrXG5cbiAgICAgIGNhc2UgJ0Fycm93RG93bic6XG4gICAgICAgIC8vIGlmIChzcGVjaWFsS2V5KSByZXR1cm5cbiAgICAgICAgLy8gZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIHRoaXMubmF2aWdhdGUoeyBlLCBpbnB1dCwgZG93bjogdHJ1ZSB9KVxuICAgICAgICBicmVha1xuXG4gICAgICBjYXNlICdFbnRlcic6XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICB0aGlzLmhhbmRsZUVtb2ppQ2xpY2soeyBlLCBwb3M6IHRoaXMuc3RhdGUucG9zIH0pXG4gICAgICAgIGJyZWFrXG5cbiAgICAgIGNhc2UgJ0VzY2FwZSc6XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBpZiAodGhpcy5zdGF0ZS5zZWFyY2hSZXN1bHRzKSB7XG4gICAgICAgICAgdGhpcy5jbGVhclNlYXJjaCgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy51bmZvY3VzU2VhcmNoKClcbiAgICAgICAgfVxuICAgICAgICBicmVha1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIGNsZWFyU2VhcmNoID0gKCkgPT4ge1xuICAgIGNvbnN0IGlucHV0ID0gdGhpcy5yZWZzLnNlYXJjaElucHV0LmN1cnJlbnRcbiAgICBpZiAoIWlucHV0KSByZXR1cm5cblxuICAgIGlucHV0LnZhbHVlID0gJydcbiAgICBpbnB1dC5mb2N1cygpXG5cbiAgICB0aGlzLmhhbmRsZVNlYXJjaElucHV0KClcbiAgfVxuXG4gIHVuZm9jdXNTZWFyY2goKSB7XG4gICAgY29uc3QgaW5wdXQgPSB0aGlzLnJlZnMuc2VhcmNoSW5wdXQuY3VycmVudFxuICAgIGlmICghaW5wdXQpIHJldHVyblxuXG4gICAgaW5wdXQuYmx1cigpXG4gIH1cblxuICBuYXZpZ2F0ZSh7IGUsIGlucHV0LCBsZWZ0LCByaWdodCwgdXAsIGRvd24gfSkge1xuICAgIGNvbnN0IGdyaWQgPSB0aGlzLnN0YXRlLnNlYXJjaFJlc3VsdHMgfHwgdGhpcy5ncmlkXG4gICAgaWYgKCFncmlkLmxlbmd0aCkgcmV0dXJuXG5cbiAgICBsZXQgW3AxLCBwMl0gPSB0aGlzLnN0YXRlLnBvc1xuXG4gICAgY29uc3QgcG9zID0gKCgpID0+IHtcbiAgICAgIGlmIChwMSA9PSAwKSB7XG4gICAgICAgIGlmIChwMiA9PSAwICYmICFlLnJlcGVhdCAmJiAobGVmdCB8fCB1cCkpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwMSA9PSAtMSkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgIWUucmVwZWF0ICYmXG4gICAgICAgICAgKHJpZ2h0IHx8IGRvd24pICYmXG4gICAgICAgICAgaW5wdXQuc2VsZWN0aW9uU3RhcnQgPT0gaW5wdXQudmFsdWUubGVuZ3RoXG4gICAgICAgICkge1xuICAgICAgICAgIHJldHVybiBbMCwgMF1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBudWxsXG4gICAgICB9XG5cbiAgICAgIGlmIChsZWZ0IHx8IHJpZ2h0KSB7XG4gICAgICAgIGxldCByb3cgPSBncmlkW3AxXVxuICAgICAgICBjb25zdCBpbmNyZW1lbnQgPSBsZWZ0ID8gLTEgOiAxXG5cbiAgICAgICAgcDIgKz0gaW5jcmVtZW50XG4gICAgICAgIGlmICghcm93W3AyXSkge1xuICAgICAgICAgIHAxICs9IGluY3JlbWVudFxuICAgICAgICAgIHJvdyA9IGdyaWRbcDFdXG5cbiAgICAgICAgICBpZiAoIXJvdykge1xuICAgICAgICAgICAgcDEgPSBsZWZ0ID8gMCA6IGdyaWQubGVuZ3RoIC0gMVxuICAgICAgICAgICAgcDIgPSBsZWZ0ID8gMCA6IGdyaWRbcDFdLmxlbmd0aCAtIDFcblxuICAgICAgICAgICAgcmV0dXJuIFtwMSwgcDJdXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcDIgPSBsZWZ0ID8gcm93Lmxlbmd0aCAtIDEgOiAwXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gW3AxLCBwMl1cbiAgICAgIH1cblxuICAgICAgaWYgKHVwIHx8IGRvd24pIHtcbiAgICAgICAgcDEgKz0gdXAgPyAtMSA6IDFcbiAgICAgICAgY29uc3Qgcm93ID0gZ3JpZFtwMV1cblxuICAgICAgICBpZiAoIXJvdykge1xuICAgICAgICAgIHAxID0gdXAgPyAwIDogZ3JpZC5sZW5ndGggLSAxXG4gICAgICAgICAgcDIgPSB1cCA/IDAgOiBncmlkW3AxXS5sZW5ndGggLSAxXG5cbiAgICAgICAgICByZXR1cm4gW3AxLCBwMl1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghcm93W3AyXSkge1xuICAgICAgICAgIHAyID0gcm93Lmxlbmd0aCAtIDFcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBbcDEsIHAyXVxuICAgICAgfVxuICAgIH0pKClcblxuICAgIGlmIChwb3MpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodGhpcy5zdGF0ZS5wb3NbMF0gPiAtMSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgcG9zOiBbLTEsIC0xXSB9KVxuICAgICAgfVxuXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgcG9zLCBrZXlib2FyZDogdHJ1ZSB9LCAoKSA9PiB7XG4gICAgICB0aGlzLnNjcm9sbFRvKHsgcm93OiBwb3NbMF0gfSlcbiAgICB9KVxuICB9XG5cbiAgc2Nyb2xsVG8oeyBjYXRlZ29yeUlkLCByb3cgfSkge1xuICAgIGNvbnN0IGdyaWQgPSB0aGlzLnN0YXRlLnNlYXJjaFJlc3VsdHMgfHwgdGhpcy5ncmlkXG4gICAgaWYgKCFncmlkLmxlbmd0aCkgcmV0dXJuXG5cbiAgICBjb25zdCBzY3JvbGwgPSB0aGlzLnJlZnMuc2Nyb2xsLmN1cnJlbnRcbiAgICBjb25zdCBzY3JvbGxSZWN0ID0gc2Nyb2xsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cbiAgICBsZXQgc2Nyb2xsVG9wID0gMFxuXG4gICAgaWYgKHJvdyA+PSAwKSB7XG4gICAgICBjYXRlZ29yeUlkID0gZ3JpZFtyb3ddLl9fY2F0ZWdvcnlJZFxuICAgIH1cblxuICAgIGlmIChjYXRlZ29yeUlkKSB7XG4gICAgICBjb25zdCByZWYgPVxuICAgICAgICB0aGlzLnJlZnNbY2F0ZWdvcnlJZF0gfHwgdGhpcy5yZWZzLmNhdGVnb3JpZXMuZ2V0KGNhdGVnb3J5SWQpLnJvb3RcbiAgICAgIGNvbnN0IGNhdGVnb3J5UmVjdCA9IHJlZi5jdXJyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cbiAgICAgIHNjcm9sbFRvcCA9IGNhdGVnb3J5UmVjdC50b3AgLSAoc2Nyb2xsUmVjdC50b3AgLSBzY3JvbGwuc2Nyb2xsVG9wKSArIDFcbiAgICB9XG5cbiAgICBpZiAocm93ID49IDApIHtcbiAgICAgIGlmICghcm93KSB7XG4gICAgICAgIHNjcm9sbFRvcCA9IDBcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IHJvd0luZGV4ID0gZ3JpZFtyb3ddLl9faW5kZXhcbiAgICAgICAgY29uc3Qgcm93VG9wID0gc2Nyb2xsVG9wICsgcm93SW5kZXggKiB0aGlzLnByb3BzLmVtb2ppQnV0dG9uU2l6ZVxuICAgICAgICBjb25zdCByb3dCb3QgPVxuICAgICAgICAgIHJvd1RvcCArXG4gICAgICAgICAgdGhpcy5wcm9wcy5lbW9qaUJ1dHRvblNpemUgK1xuICAgICAgICAgIHRoaXMucHJvcHMuZW1vamlCdXR0b25TaXplICogMC44OFxuXG4gICAgICAgIGlmIChyb3dUb3AgPCBzY3JvbGwuc2Nyb2xsVG9wKSB7XG4gICAgICAgICAgc2Nyb2xsVG9wID0gcm93VG9wXG4gICAgICAgIH0gZWxzZSBpZiAocm93Qm90ID4gc2Nyb2xsLnNjcm9sbFRvcCArIHNjcm9sbFJlY3QuaGVpZ2h0KSB7XG4gICAgICAgICAgc2Nyb2xsVG9wID0gcm93Qm90IC0gc2Nyb2xsUmVjdC5oZWlnaHRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuaWdub3JlTW91c2UoKVxuICAgIHNjcm9sbC5zY3JvbGxUb3AgPSBzY3JvbGxUb3BcbiAgfVxuXG4gIGlnbm9yZU1vdXNlKCkge1xuICAgIHRoaXMubW91c2VJc0lnbm9yZWQgPSB0cnVlXG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuaWdub3JlTW91c2VUaW1lcilcbiAgICB0aGlzLmlnbm9yZU1vdXNlVGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGRlbGV0ZSB0aGlzLm1vdXNlSXNJZ25vcmVkXG4gICAgfSwgMTAwKVxuICB9XG5cbiAgaGFuZGxlQ2F0ZWdvcnlDbGljayA9ICh7IGNhdGVnb3J5LCBpIH0pID0+IHtcbiAgICB0aGlzLnNjcm9sbFRvKGkgPT0gMCA/IHsgcm93OiAtMSB9IDogeyBjYXRlZ29yeUlkOiBjYXRlZ29yeS5pZCB9KVxuICB9XG5cbiAgaGFuZGxlRW1vamlPdmVyKHBvcykge1xuICAgIGlmICh0aGlzLm1vdXNlSXNJZ25vcmVkIHx8IHRoaXMuc3RhdGUuc2hvd1NraW5zKSByZXR1cm5cbiAgICB0aGlzLnNldFN0YXRlKHsgcG9zOiBwb3MgfHwgWy0xLCAtMV0sIGtleWJvYXJkOiBmYWxzZSB9KVxuICB9XG5cbiAgaGFuZGxlRW1vamlDbGljayh7IGUsIGVtb2ppLCBwb3MgfSkge1xuICAgIGlmICghdGhpcy5wcm9wcy5vbkVtb2ppU2VsZWN0KSByZXR1cm5cblxuICAgIGlmICghZW1vamkgJiYgcG9zKSB7XG4gICAgICBlbW9qaSA9IHRoaXMuZ2V0RW1vamlCeVBvcyhwb3MpXG4gICAgfVxuXG4gICAgaWYgKGVtb2ppKSB7XG4gICAgICBjb25zdCBlbW9qaURhdGEgPSBnZXRFbW9qaURhdGEoZW1vamksIHsgc2tpbkluZGV4OiB0aGlzLnN0YXRlLnNraW4gLSAxIH0pXG5cbiAgICAgIGlmICh0aGlzLnByb3BzLm1heEZyZXF1ZW50Um93cykge1xuICAgICAgICBGcmVxdWVudGx5VXNlZC5hZGQoZW1vamlEYXRhLCB0aGlzLnByb3BzKVxuICAgICAgfVxuXG4gICAgICB0aGlzLnByb3BzLm9uRW1vamlTZWxlY3QoZW1vamlEYXRhLCBlKVxuICAgIH1cbiAgfVxuXG4gIG9wZW5Ta2lucyA9IChlKSA9PiB7XG4gICAgY29uc3QgeyBjdXJyZW50VGFyZ2V0IH0gPSBlXG4gICAgY29uc3QgcmVjdCA9IGN1cnJlbnRUYXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcblxuICAgIHRoaXMuc2V0U3RhdGUoeyBzaG93U2tpbnM6IHJlY3QgfSwgYXN5bmMgKCkgPT4ge1xuICAgICAgLy8gRmlyZWZveCByZXF1aXJlcyAyIGZyYW1lcyBmb3IgdGhlIHRyYW5zaXRpb24gdG8gY29uc2lzdGVubHkgd29ya1xuICAgICAgYXdhaXQgc2xlZXAoMilcblxuICAgICAgY29uc3QgbWVudSA9IHRoaXMucmVmcy5tZW51LmN1cnJlbnRcbiAgICAgIGlmICghbWVudSkgcmV0dXJuXG5cbiAgICAgIG1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJylcbiAgICAgIHRoaXMucmVmcy5za2luVG9uZVJhZGlvLmN1cnJlbnQuZm9jdXMoKVxuXG4gICAgICB0aGlzLmJhc2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZUJhc2VDbGljaywgdHJ1ZSlcbiAgICAgIHRoaXMuYmFzZS5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5oYW5kbGVCYXNlS2V5ZG93biwgdHJ1ZSlcbiAgICB9KVxuICB9XG5cbiAgY2xvc2VTa2lucygpIHtcbiAgICBpZiAoIXRoaXMuc3RhdGUuc2hvd1NraW5zKSByZXR1cm5cbiAgICB0aGlzLnNldFN0YXRlKHsgc2hvd1NraW5zOiBudWxsLCB0ZW1wU2tpbjogbnVsbCB9KVxuXG4gICAgdGhpcy5iYXNlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVCYXNlQ2xpY2spXG4gICAgdGhpcy5iYXNlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmhhbmRsZUJhc2VLZXlkb3duKVxuICB9XG5cbiAgaGFuZGxlU2tpbk1vdXNlT3Zlcih0ZW1wU2tpbikge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0ZW1wU2tpbiB9KVxuICB9XG5cbiAgaGFuZGxlU2tpbkNsaWNrKHNraW4pIHtcbiAgICB0aGlzLmlnbm9yZU1vdXNlKClcbiAgICB0aGlzLmNsb3NlU2tpbnMoKVxuXG4gICAgdGhpcy5zZXRTdGF0ZSh7IHNraW4sIHRlbXBTa2luOiBudWxsIH0pXG4gICAgU3RvcmUuc2V0KCdza2luJywgc2tpbilcbiAgfVxuXG4gIHJlbmRlck5hdigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPE5hdmlnYXRpb25cbiAgICAgICAga2V5PXt0aGlzLm5hdktleX1cbiAgICAgICAgcmVmPXt0aGlzLnJlZnMubmF2aWdhdGlvbn1cbiAgICAgICAgaWNvbnM9e3RoaXMucHJvcHMuaWNvbnN9XG4gICAgICAgIHRoZW1lPXt0aGlzLnN0YXRlLnRoZW1lfVxuICAgICAgICBkaXI9e3RoaXMuZGlyfVxuICAgICAgICB1bmZvY3VzZWQ9eyEhdGhpcy5zdGF0ZS5zZWFyY2hSZXN1bHRzfVxuICAgICAgICBwb3NpdGlvbj17dGhpcy5wcm9wcy5uYXZQb3NpdGlvbn1cbiAgICAgICAgb25DbGljaz17dGhpcy5oYW5kbGVDYXRlZ29yeUNsaWNrfVxuICAgICAgLz5cbiAgICApXG4gIH1cblxuICByZW5kZXJQcmV2aWV3KCkge1xuICAgIGNvbnN0IGVtb2ppID0gdGhpcy5nZXRFbW9qaUJ5UG9zKHRoaXMuc3RhdGUucG9zKVxuICAgIGNvbnN0IG5vU2VhcmNoUmVzdWx0cyA9XG4gICAgICB0aGlzLnN0YXRlLnNlYXJjaFJlc3VsdHMgJiYgIXRoaXMuc3RhdGUuc2VhcmNoUmVzdWx0cy5sZW5ndGhcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGlkPVwicHJldmlld1wiXG4gICAgICAgIGNsYXNzPVwiZmxleCBmbGV4LW1pZGRsZVwiXG4gICAgICAgIGRpcj17dGhpcy5kaXJ9XG4gICAgICAgIGRhdGEtcG9zaXRpb249e3RoaXMucHJvcHMucHJldmlld1Bvc2l0aW9ufVxuICAgICAgPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBmbGV4LW1pZGRsZSBmbGV4LWdyb3dcIj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzcz1cImZsZXggZmxleC1hdXRvIGZsZXgtbWlkZGxlIGZsZXgtY2VudGVyXCJcbiAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgIGhlaWdodDogdGhpcy5wcm9wcy5lbW9qaUJ1dHRvblNpemUsXG4gICAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLnByb3BzLmVtb2ppQnV0dG9uU2l6ZSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEVtb2ppXG4gICAgICAgICAgICAgIGVtb2ppPXtlbW9qaX1cbiAgICAgICAgICAgICAgaWQ9e1xuICAgICAgICAgICAgICAgIG5vU2VhcmNoUmVzdWx0c1xuICAgICAgICAgICAgICAgICAgPyB0aGlzLnByb3BzLm5vUmVzdWx0c0Vtb2ppIHx8ICdjcnknXG4gICAgICAgICAgICAgICAgICA6IHRoaXMucHJvcHMucHJldmlld0Vtb2ppIHx8XG4gICAgICAgICAgICAgICAgICAgICh0aGlzLnByb3BzLnByZXZpZXdQb3NpdGlvbiA9PSAndG9wJ1xuICAgICAgICAgICAgICAgICAgICAgID8gJ3BvaW50X2Rvd24nXG4gICAgICAgICAgICAgICAgICAgICAgOiAncG9pbnRfdXAnKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHNldD17dGhpcy5wcm9wcy5zZXR9XG4gICAgICAgICAgICAgIHNpemU9e3RoaXMucHJvcHMuZW1vamlCdXR0b25TaXplfVxuICAgICAgICAgICAgICBza2luPXt0aGlzLnN0YXRlLnRlbXBTa2luIHx8IHRoaXMuc3RhdGUuc2tpbn1cbiAgICAgICAgICAgICAgc3ByaXRlc2hlZXQ9e3RydWV9XG4gICAgICAgICAgICAgIGdldFNwcml0ZXNoZWV0VVJMPXt0aGlzLnByb3BzLmdldFNwcml0ZXNoZWV0VVJMfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3M9e2BtYXJnaW4tJHt0aGlzLmRpclswXX1gfT5cbiAgICAgICAgICAgIHtlbW9qaSB8fCBub1NlYXJjaFJlc3VsdHMgPyAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9e2BwYWRkaW5nLSR7dGhpcy5kaXJbMl19IGFsaWduLSR7dGhpcy5kaXJbMF19YH0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByZXZpZXctdGl0bGUgZWxsaXBzaXNcIj5cbiAgICAgICAgICAgICAgICAgIHtlbW9qaSA/IGVtb2ppLm5hbWUgOiBJMThuLnNlYXJjaF9ub19yZXN1bHRzXzF9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByZXZpZXctc3VidGl0bGUgZWxsaXBzaXMgY29sb3ItY1wiPlxuICAgICAgICAgICAgICAgICAge2Vtb2ppID8gZW1vamkuc2tpbnNbMF0uc2hvcnRjb2RlcyA6IEkxOG4uc2VhcmNoX25vX3Jlc3VsdHNfMn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJldmlldy1wbGFjZWhvbGRlciBjb2xvci1jXCI+e0kxOG4ucGlja308L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHshZW1vamkgJiZcbiAgICAgICAgICB0aGlzLnByb3BzLnNraW5Ub25lUG9zaXRpb24gPT0gJ3ByZXZpZXcnICYmXG4gICAgICAgICAgdGhpcy5yZW5kZXJTa2luVG9uZUJ1dHRvbigpfVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyRW1vamlCdXR0b24oZW1vamksIHsgcG9zLCBwb3NpbnNldCwgZ3JpZCB9KSB7XG4gICAgY29uc3Qgc2l6ZSA9IHRoaXMucHJvcHMuZW1vamlCdXR0b25TaXplXG4gICAgY29uc3Qgc2tpbiA9IHRoaXMuc3RhdGUudGVtcFNraW4gfHwgdGhpcy5zdGF0ZS5za2luXG4gICAgY29uc3QgZW1vamlTa2luID0gZW1vamkuc2tpbnNbc2tpbiAtIDFdIHx8IGVtb2ppLnNraW5zWzBdXG4gICAgY29uc3QgbmF0aXZlID0gZW1vamlTa2luLm5hdGl2ZVxuICAgIGNvbnN0IHNlbGVjdGVkID0gZGVlcEVxdWFsKHRoaXMuc3RhdGUucG9zLCBwb3MpXG4gICAgY29uc3Qga2V5ID0gcG9zLmNvbmNhdChlbW9qaS5pZCkuam9pbignJylcblxuICAgIHJldHVybiAoXG4gICAgICA8UHVyZUlubGluZUNvbXBvbmVudCBrZXk9e2tleX0gey4uLnsgc2VsZWN0ZWQsIHNraW4sIHNpemUgfX0+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBhcmlhLWxhYmVsPXtuYXRpdmV9XG4gICAgICAgICAgYXJpYS1zZWxlY3RlZD17c2VsZWN0ZWQgfHwgdW5kZWZpbmVkfVxuICAgICAgICAgIGFyaWEtcG9zaW5zZXQ9e3Bvc2luc2V0fVxuICAgICAgICAgIGFyaWEtc2V0c2l6ZT17Z3JpZC5zZXRzaXplfVxuICAgICAgICAgIGRhdGEta2V5Ym9hcmQ9e3RoaXMuc3RhdGUua2V5Ym9hcmR9XG4gICAgICAgICAgdGl0bGU9e3RoaXMucHJvcHMucHJldmlld1Bvc2l0aW9uID09ICdub25lJyA/IGVtb2ppLm5hbWUgOiB1bmRlZmluZWR9XG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgY2xhc3M9XCJmbGV4IGZsZXgtY2VudGVyIGZsZXgtbWlkZGxlXCJcbiAgICAgICAgICB0YWJpbmRleD1cIi0xXCJcbiAgICAgICAgICBvbkNsaWNrPXsoZSkgPT4gdGhpcy5oYW5kbGVFbW9qaUNsaWNrKHsgZSwgZW1vamkgfSl9XG4gICAgICAgICAgb25Nb3VzZUVudGVyPXsoKSA9PiB0aGlzLmhhbmRsZUVtb2ppT3Zlcihwb3MpfVxuICAgICAgICAgIG9uTW91c2VMZWF2ZT17KCkgPT4gdGhpcy5oYW5kbGVFbW9qaU92ZXIoKX1cbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgd2lkdGg6IHRoaXMucHJvcHMuZW1vamlCdXR0b25TaXplLFxuICAgICAgICAgICAgaGVpZ2h0OiB0aGlzLnByb3BzLmVtb2ppQnV0dG9uU2l6ZSxcbiAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLnByb3BzLmVtb2ppU2l6ZSxcbiAgICAgICAgICAgIGxpbmVIZWlnaHQ6IDAsXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgICAgICAgICBjbGFzcz1cImJhY2tncm91bmRcIlxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiB0aGlzLnByb3BzLmVtb2ppQnV0dG9uUmFkaXVzLFxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMucHJvcHMuZW1vamlCdXR0b25Db2xvcnNcbiAgICAgICAgICAgICAgICA/IHRoaXMucHJvcHMuZW1vamlCdXR0b25Db2xvcnNbXG4gICAgICAgICAgICAgICAgICAgIChwb3NpbnNldCAtIDEpICUgdGhpcy5wcm9wcy5lbW9qaUJ1dHRvbkNvbG9ycy5sZW5ndGhcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPjwvZGl2PlxuICAgICAgICAgIDxFbW9qaVxuICAgICAgICAgICAgZW1vamk9e2Vtb2ppfVxuICAgICAgICAgICAgc2V0PXt0aGlzLnByb3BzLnNldH1cbiAgICAgICAgICAgIHNpemU9e3RoaXMucHJvcHMuZW1vamlTaXplfVxuICAgICAgICAgICAgc2tpbj17c2tpbn1cbiAgICAgICAgICAgIHNwcml0ZXNoZWV0PXt0cnVlfVxuICAgICAgICAgICAgZ2V0U3ByaXRlc2hlZXRVUkw9e3RoaXMucHJvcHMuZ2V0U3ByaXRlc2hlZXRVUkx9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L1B1cmVJbmxpbmVDb21wb25lbnQ+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyU2VhcmNoKCkge1xuICAgIGNvbnN0IHJlbmRlclNraW5Ub25lID1cbiAgICAgIHRoaXMucHJvcHMucHJldmlld1Bvc2l0aW9uID09ICdub25lJyB8fFxuICAgICAgdGhpcy5wcm9wcy5za2luVG9uZVBvc2l0aW9uID09ICdzZWFyY2gnXG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNwYWNlclwiPjwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBmbGV4LW1pZGRsZVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZWFyY2ggcmVsYXRpdmUgZmxleC1ncm93XCI+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgdHlwZT1cInNlYXJjaFwiXG4gICAgICAgICAgICAgIHJlZj17dGhpcy5yZWZzLnNlYXJjaElucHV0fVxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17STE4bi5zZWFyY2h9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuaGFuZGxlU2VhcmNoQ2xpY2t9XG4gICAgICAgICAgICAgIG9uSW5wdXQ9e3RoaXMuaGFuZGxlU2VhcmNoSW5wdXR9XG4gICAgICAgICAgICAgIG9uS2V5RG93bj17dGhpcy5oYW5kbGVTZWFyY2hLZXlEb3dufVxuICAgICAgICAgICAgICBhdXRvQ29tcGxldGU9XCJvZmZcIlxuICAgICAgICAgICAgPjwvaW5wdXQ+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImljb24gbG91cGUgZmxleFwiPntJY29ucy5zZWFyY2gubG91cGV9PC9zcGFuPlxuICAgICAgICAgICAge3RoaXMuc3RhdGUuc2VhcmNoUmVzdWx0cyAmJiAoXG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICB0aXRsZT1cIkNsZWFyXCJcbiAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiQ2xlYXJcIlxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiaWNvbiBkZWxldGUgZmxleFwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5jbGVhclNlYXJjaH1cbiAgICAgICAgICAgICAgICBvbk1vdXNlRG93bj17dGhpcy5wcmV2ZW50RGVmYXVsdH1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtJY29ucy5zZWFyY2guZGVsZXRlfVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICB7cmVuZGVyU2tpblRvbmUgJiYgdGhpcy5yZW5kZXJTa2luVG9uZUJ1dHRvbigpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIHJlbmRlclNlYXJjaFJlc3VsdHMoKSB7XG4gICAgY29uc3QgeyBzZWFyY2hSZXN1bHRzIH0gPSB0aGlzLnN0YXRlXG4gICAgaWYgKCFzZWFyY2hSZXN1bHRzKSByZXR1cm4gbnVsbFxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3M9XCJjYXRlZ29yeVwiIHJlZj17dGhpcy5yZWZzLnNlYXJjaH0+XG4gICAgICAgIDxkaXYgY2xhc3M9e2BzdGlja3kgcGFkZGluZy1zbWFsbCBhbGlnbi0ke3RoaXMuZGlyWzBdfWB9PlxuICAgICAgICAgIHtJMThuLmNhdGVnb3JpZXMuc2VhcmNofVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICB7IXNlYXJjaFJlc3VsdHMubGVuZ3RoID8gKFxuICAgICAgICAgICAgPGRpdiBjbGFzcz17YHBhZGRpbmctc21hbGwgYWxpZ24tJHt0aGlzLmRpclswXX1gfT5cbiAgICAgICAgICAgICAge3RoaXMucHJvcHMub25BZGRDdXN0b21FbW9qaSAmJiAoXG4gICAgICAgICAgICAgICAgPGEgb25DbGljaz17dGhpcy5wcm9wcy5vbkFkZEN1c3RvbUVtb2ppfT57STE4bi5hZGRfY3VzdG9tfTwvYT5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICBzZWFyY2hSZXN1bHRzLm1hcCgocm93LCBpKSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXhcIj5cbiAgICAgICAgICAgICAgICAgIHtyb3cubWFwKChlbW9qaSwgaWkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyRW1vamlCdXR0b24oZW1vamksIHtcbiAgICAgICAgICAgICAgICAgICAgICBwb3M6IFtpLCBpaV0sXG4gICAgICAgICAgICAgICAgICAgICAgcG9zaW5zZXQ6IGkgKiB0aGlzLnByb3BzLnBlckxpbmUgKyBpaSArIDEsXG4gICAgICAgICAgICAgICAgICAgICAgZ3JpZDogc2VhcmNoUmVzdWx0cyxcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyQ2F0ZWdvcmllcygpIHtcbiAgICBjb25zdCB7IGNhdGVnb3JpZXMgfSA9IERhdGFcbiAgICBjb25zdCBoaWRkZW4gPSAhIXRoaXMuc3RhdGUuc2VhcmNoUmVzdWx0c1xuICAgIGNvbnN0IHBlckxpbmUgPSB0aGlzLmdldFBlckxpbmUoKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW4gPyAnaGlkZGVuJyA6IHVuZGVmaW5lZCxcbiAgICAgICAgICBkaXNwbGF5OiBoaWRkZW4gPyAnbm9uZScgOiB1bmRlZmluZWQsXG4gICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIHtjYXRlZ29yaWVzLm1hcCgoY2F0ZWdvcnkpID0+IHtcbiAgICAgICAgICBjb25zdCB7IHJvb3QsIHJvd3MgfSA9IHRoaXMucmVmcy5jYXRlZ29yaWVzLmdldChjYXRlZ29yeS5pZClcblxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGRhdGEtaWQ9e2NhdGVnb3J5LnRhcmdldCA/IGNhdGVnb3J5LnRhcmdldC5pZCA6IGNhdGVnb3J5LmlkfVxuICAgICAgICAgICAgICBjbGFzcz1cImNhdGVnb3J5XCJcbiAgICAgICAgICAgICAgcmVmPXtyb290fVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPXtgc3RpY2t5IHBhZGRpbmctc21hbGwgYWxpZ24tJHt0aGlzLmRpclswXX1gfT5cbiAgICAgICAgICAgICAgICB7Y2F0ZWdvcnkubmFtZSB8fCBJMThuLmNhdGVnb3JpZXNbY2F0ZWdvcnkuaWRdfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGNsYXNzPVwicmVsYXRpdmVcIlxuICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICBoZWlnaHQ6IHJvd3MubGVuZ3RoICogdGhpcy5wcm9wcy5lbW9qaUJ1dHRvblNpemUsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtyb3dzLm1hcCgocm93LCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXRSb3cgPVxuICAgICAgICAgICAgICAgICAgICByb3cuaW5kZXggLSAocm93LmluZGV4ICUgUGVyZm9ybWFuY2Uucm93c1BlclJlbmRlcilcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHZpc2libGUgPSB0aGlzLnN0YXRlLnZpc2libGVSb3dzW3RhcmdldFJvd11cbiAgICAgICAgICAgICAgICAgIGNvbnN0IHJlZiA9ICdjdXJyZW50JyBpbiByb3cgPyByb3cgOiB1bmRlZmluZWRcblxuICAgICAgICAgICAgICAgICAgaWYgKCF2aXNpYmxlICYmICFyZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBpICogcGVyTGluZVxuICAgICAgICAgICAgICAgICAgY29uc3QgZW5kID0gc3RhcnQgKyBwZXJMaW5lXG4gICAgICAgICAgICAgICAgICBjb25zdCBlbW9qaUlkcyA9IGNhdGVnb3J5LmVtb2ppcy5zbGljZShzdGFydCwgZW5kKVxuXG4gICAgICAgICAgICAgICAgICBpZiAoZW1vamlJZHMubGVuZ3RoIDwgcGVyTGluZSkge1xuICAgICAgICAgICAgICAgICAgICBlbW9qaUlkcy5wdXNoKC4uLm5ldyBBcnJheShwZXJMaW5lIC0gZW1vamlJZHMubGVuZ3RoKSlcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgIGtleT17cm93LmluZGV4fVxuICAgICAgICAgICAgICAgICAgICAgIGRhdGEtaW5kZXg9e3Jvdy5pbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImZsZXggcm93XCJcbiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyB0b3A6IGkgKiB0aGlzLnByb3BzLmVtb2ppQnV0dG9uU2l6ZSB9fVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAge3Zpc2libGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGVtb2ppSWRzLm1hcCgoZW1vamlJZCwgaWkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFlbW9qaUlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogdGhpcy5wcm9wcy5lbW9qaUJ1dHRvblNpemUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiB0aGlzLnByb3BzLmVtb2ppQnV0dG9uU2l6ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbW9qaSA9IFNlYXJjaEluZGV4LmdldChlbW9qaUlkKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlckVtb2ppQnV0dG9uKGVtb2ppLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBbcm93LmluZGV4LCBpaV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaW5zZXQ6IHJvdy5wb3NpbnNldCArIGlpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyaWQ6IHRoaXMuZ3JpZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH0pfVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyU2tpblRvbmVCdXR0b24oKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc2tpblRvbmVQb3NpdGlvbiA9PSAnbm9uZScpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJmbGV4IGZsZXgtYXV0byBmbGV4LWNlbnRlciBmbGV4LW1pZGRsZVwiXG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICAgICAgd2lkdGg6IHRoaXMucHJvcHMuZW1vamlCdXR0b25TaXplLFxuICAgICAgICAgIGhlaWdodDogdGhpcy5wcm9wcy5lbW9qaUJ1dHRvblNpemUsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICByZWY9e3RoaXMucmVmcy5za2luVG9uZUJ1dHRvbn1cbiAgICAgICAgICBjbGFzcz1cInNraW4tdG9uZS1idXR0b24gZmxleCBmbGV4LWF1dG8gZmxleC1jZW50ZXIgZmxleC1taWRkbGVcIlxuICAgICAgICAgIGFyaWEtc2VsZWN0ZWQ9e3RoaXMuc3RhdGUuc2hvd1NraW5zID8gJycgOiB1bmRlZmluZWR9XG4gICAgICAgICAgYXJpYS1sYWJlbD17STE4bi5za2lucy5jaG9vc2V9XG4gICAgICAgICAgdGl0bGU9e0kxOG4uc2tpbnMuY2hvb3NlfVxuICAgICAgICAgIG9uQ2xpY2s9e3RoaXMub3BlblNraW5zfVxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICB3aWR0aDogdGhpcy5wcm9wcy5lbW9qaVNpemUsXG4gICAgICAgICAgICBoZWlnaHQ6IHRoaXMucHJvcHMuZW1vamlTaXplLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICA8c3BhbiBjbGFzcz17YHNraW4tdG9uZSBza2luLXRvbmUtJHt0aGlzLnN0YXRlLnNraW59YH0+PC9zcGFuPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIHJlbmRlckxpdmVSZWdpb24oKSB7XG4gICAgY29uc3QgZW1vamkgPSB0aGlzLmdldEVtb2ppQnlQb3ModGhpcy5zdGF0ZS5wb3MpXG4gICAgY29uc3QgY29udGVudHMgPSBlbW9qaSA/IGVtb2ppLm5hbWUgOiAnJ1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgYXJpYS1saXZlPVwicG9saXRlXCIgY2xhc3M9XCJzci1vbmx5XCI+XG4gICAgICAgIHtjb250ZW50c31cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIHJlbmRlclNraW5zKCkge1xuICAgIGNvbnN0IHNraW5Ub25lQnV0dG9uID0gdGhpcy5yZWZzLnNraW5Ub25lQnV0dG9uLmN1cnJlbnRcbiAgICBjb25zdCBza2luVG9uZUJ1dHRvblJlY3QgPSBza2luVG9uZUJ1dHRvbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgIGNvbnN0IGJhc2VSZWN0ID0gdGhpcy5iYXNlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cbiAgICBjb25zdCBwb3NpdGlvbiA9IHt9XG5cbiAgICBpZiAodGhpcy5kaXIgPT0gJ2x0cicpIHtcbiAgICAgIHBvc2l0aW9uLnJpZ2h0ID0gYmFzZVJlY3QucmlnaHQgLSBza2luVG9uZUJ1dHRvblJlY3QucmlnaHQgLSAzXG4gICAgfSBlbHNlIHtcbiAgICAgIHBvc2l0aW9uLmxlZnQgPSBza2luVG9uZUJ1dHRvblJlY3QubGVmdCAtIGJhc2VSZWN0LmxlZnQgLSAzXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgdGhpcy5wcm9wcy5wcmV2aWV3UG9zaXRpb24gPT0gJ2JvdHRvbScgJiZcbiAgICAgIHRoaXMucHJvcHMuc2tpblRvbmVQb3NpdGlvbiA9PSAncHJldmlldydcbiAgICApIHtcbiAgICAgIHBvc2l0aW9uLmJvdHRvbSA9IGJhc2VSZWN0LmJvdHRvbSAtIHNraW5Ub25lQnV0dG9uUmVjdC50b3AgKyA2XG4gICAgfSBlbHNlIHtcbiAgICAgIHBvc2l0aW9uLnRvcCA9IHNraW5Ub25lQnV0dG9uUmVjdC5ib3R0b20gLSBiYXNlUmVjdC50b3AgKyAzXG4gICAgICBwb3NpdGlvbi5ib3R0b20gPSAnYXV0bydcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICByZWY9e3RoaXMucmVmcy5tZW51fVxuICAgICAgICByb2xlPVwicmFkaW9ncm91cFwiXG4gICAgICAgIGRpcj17dGhpcy5kaXJ9XG4gICAgICAgIGFyaWEtbGFiZWw9e0kxOG4uc2tpbnMuY2hvb3NlfVxuICAgICAgICBjbGFzcz1cIm1lbnUgaGlkZGVuXCJcbiAgICAgICAgZGF0YS1wb3NpdGlvbj17cG9zaXRpb24udG9wID8gJ3RvcCcgOiAnYm90dG9tJ31cbiAgICAgICAgc3R5bGU9e3Bvc2l0aW9ufVxuICAgICAgPlxuICAgICAgICB7Wy4uLkFycmF5KDYpLmtleXMoKV0ubWFwKChpKSA9PiB7XG4gICAgICAgICAgY29uc3Qgc2tpbiA9IGkgKyAxXG4gICAgICAgICAgY29uc3QgY2hlY2tlZCA9IHRoaXMuc3RhdGUuc2tpbiA9PSBza2luXG5cbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICAgICAgICBuYW1lPVwic2tpbi10b25lXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17c2tpbn1cbiAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPXtJMThuLnNraW5zW3NraW5dfVxuICAgICAgICAgICAgICAgIHJlZj17Y2hlY2tlZCA/IHRoaXMucmVmcy5za2luVG9uZVJhZGlvIDogbnVsbH1cbiAgICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17Y2hlY2tlZH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4gdGhpcy5oYW5kbGVTa2luTW91c2VPdmVyKHNraW4pfVxuICAgICAgICAgICAgICAgIG9uS2V5RG93bj17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgZS5jb2RlID09ICdFbnRlcicgfHxcbiAgICAgICAgICAgICAgICAgICAgZS5jb2RlID09ICdTcGFjZScgfHxcbiAgICAgICAgICAgICAgICAgICAgZS5jb2RlID09ICdUYWInXG4gICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlU2tpbkNsaWNrKHNraW4pXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPjwvaW5wdXQ+XG5cbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgdGFiaW5kZXg9XCItMVwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5oYW5kbGVTa2luQ2xpY2soc2tpbil9XG4gICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyPXsoKSA9PiB0aGlzLmhhbmRsZVNraW5Nb3VzZU92ZXIoc2tpbil9XG4gICAgICAgICAgICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiB0aGlzLmhhbmRsZVNraW5Nb3VzZU92ZXIoKX1cbiAgICAgICAgICAgICAgICBjbGFzcz1cIm9wdGlvbiBmbGV4IGZsZXgtZ3JvdyBmbGV4LW1pZGRsZVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz17YHNraW4tdG9uZSBza2luLXRvbmUtJHtza2lufWB9Pjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1hcmdpbi1zbWFsbC1sclwiPntJMThuLnNraW5zW3NraW5dfTwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH0pfVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IGxpbmVXaWR0aCA9IHRoaXMucHJvcHMucGVyTGluZSAqIHRoaXMucHJvcHMuZW1vamlCdXR0b25TaXplXG5cbiAgICByZXR1cm4gKFxuICAgICAgPHNlY3Rpb25cbiAgICAgICAgaWQ9XCJyb290XCJcbiAgICAgICAgY2xhc3M9XCJmbGV4IGZsZXgtY29sdW1uXCJcbiAgICAgICAgZGlyPXt0aGlzLmRpcn1cbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICB3aWR0aDogdGhpcy5wcm9wcy5keW5hbWljV2lkdGhcbiAgICAgICAgICAgID8gJzEwMCUnXG4gICAgICAgICAgICA6IGBjYWxjKCR7bGluZVdpZHRofXB4ICsgKHZhcigtLXBhZGRpbmcpICsgdmFyKC0tc2lkZWJhci13aWR0aCkpKWAsXG4gICAgICAgIH19XG4gICAgICAgIGRhdGEtZW1vamktc2V0PXt0aGlzLnByb3BzLnNldH1cbiAgICAgICAgZGF0YS10aGVtZT17dGhpcy5zdGF0ZS50aGVtZX1cbiAgICAgICAgZGF0YS1tZW51PXt0aGlzLnN0YXRlLnNob3dTa2lucyA/ICcnIDogdW5kZWZpbmVkfVxuICAgICAgPlxuICAgICAgICB7dGhpcy5wcm9wcy5wcmV2aWV3UG9zaXRpb24gPT0gJ3RvcCcgJiYgdGhpcy5yZW5kZXJQcmV2aWV3KCl9XG4gICAgICAgIHt0aGlzLnByb3BzLm5hdlBvc2l0aW9uID09ICd0b3AnICYmIHRoaXMucmVuZGVyTmF2KCl9XG4gICAgICAgIHt0aGlzLnByb3BzLnNlYXJjaFBvc2l0aW9uID09ICdzdGlja3knICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFkZGluZy1sclwiPnt0aGlzLnJlbmRlclNlYXJjaCgpfTwvZGl2PlxuICAgICAgICApfVxuXG4gICAgICAgIDxkaXYgcmVmPXt0aGlzLnJlZnMuc2Nyb2xsfSBjbGFzcz1cInNjcm9sbCBmbGV4LWdyb3cgcGFkZGluZy1sclwiPlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgIHdpZHRoOiB0aGlzLnByb3BzLmR5bmFtaWNXaWR0aCA/ICcxMDAlJyA6IGxpbmVXaWR0aCxcbiAgICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt0aGlzLnByb3BzLnNlYXJjaFBvc2l0aW9uID09ICdzdGF0aWMnICYmIHRoaXMucmVuZGVyU2VhcmNoKCl9XG4gICAgICAgICAgICB7dGhpcy5yZW5kZXJTZWFyY2hSZXN1bHRzKCl9XG4gICAgICAgICAgICB7dGhpcy5yZW5kZXJDYXRlZ29yaWVzKCl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHt0aGlzLnByb3BzLm5hdlBvc2l0aW9uID09ICdib3R0b20nICYmIHRoaXMucmVuZGVyTmF2KCl9XG4gICAgICAgIHt0aGlzLnByb3BzLnByZXZpZXdQb3NpdGlvbiA9PSAnYm90dG9tJyAmJiB0aGlzLnJlbmRlclByZXZpZXcoKX1cbiAgICAgICAge3RoaXMuc3RhdGUuc2hvd1NraW5zICYmIHRoaXMucmVuZGVyU2tpbnMoKX1cbiAgICAgICAge3RoaXMucmVuZGVyTGl2ZVJlZ2lvbigpfVxuICAgICAgPC9zZWN0aW9uPlxuICAgIClcbiAgfVxufVxuIiwgImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuIiwgImltcG9ydHtvcHRpb25zIGFzIHIsRnJhZ21lbnQgYXMgX31mcm9tXCJwcmVhY3RcIjtleHBvcnR7RnJhZ21lbnR9ZnJvbVwicHJlYWN0XCI7dmFyIG89MDtmdW5jdGlvbiBlKF8sZSxuLHQsZil7dmFyIGwscyx1PXt9O2ZvcihzIGluIGUpXCJyZWZcIj09cz9sPWVbc106dVtzXT1lW3NdO3ZhciBhPXt0eXBlOl8scHJvcHM6dSxrZXk6bixyZWY6bCxfX2s6bnVsbCxfXzpudWxsLF9fYjowLF9fZTpudWxsLF9fZDp2b2lkIDAsX19jOm51bGwsX19oOm51bGwsY29uc3RydWN0b3I6dm9pZCAwLF9fdjotLW8sX19zb3VyY2U6dCxfX3NlbGY6Zn07aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgXyYmKGw9Xy5kZWZhdWx0UHJvcHMpKWZvcihzIGluIGwpdm9pZCAwPT09dVtzXSYmKHVbc109bFtzXSk7cmV0dXJuIHIudm5vZGUmJnIudm5vZGUoYSksYX1leHBvcnR7ZSBhcyBqc3gsZSBhcyBqc3hzLGUgYXMganN4REVWfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWpzeFJ1bnRpbWUubW9kdWxlLmpzLm1hcFxuIiwgImltcG9ydCB7IG9wdGlvbnMsIEZyYWdtZW50IH0gZnJvbSAncHJlYWN0JztcclxuXHJcbi8qKiBAdHlwZWRlZiB7aW1wb3J0KCdwcmVhY3QnKS5WTm9kZX0gVk5vZGUgKi9cclxuXHJcbmxldCB2bm9kZUlkID0gMDtcclxuXHJcbi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3XHJcbiAqIFRoaXMgZmlsZSBleHBvcnRzIHZhcmlvdXMgbWV0aG9kcyB0aGF0IGltcGxlbWVudCBCYWJlbCdzIFwiYXV0b21hdGljXCIgSlNYIHJ1bnRpbWUgQVBJOlxyXG4gKiAtIGpzeCh0eXBlLCBwcm9wcywga2V5KVxyXG4gKiAtIGpzeHModHlwZSwgcHJvcHMsIGtleSlcclxuICogLSBqc3hERVYodHlwZSwgcHJvcHMsIGtleSwgX19zb3VyY2UsIF9fc2VsZilcclxuICpcclxuICogVGhlIGltcGxlbWVudGF0aW9uIG9mIGNyZWF0ZVZOb2RlIGhlcmUgaXMgb3B0aW1pemVkIGZvciBwZXJmb3JtYW5jZS5cclxuICogQmVuY2htYXJrczogaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81ZjZiNTRhMGI0NjMyMTAwYTdkY2QyYjNcclxuICovXHJcblxyXG4vKipcclxuICogSlNYLkVsZW1lbnQgZmFjdG9yeSB1c2VkIGJ5IEJhYmVsJ3Mge3J1bnRpbWU6XCJhdXRvbWF0aWNcIn0gSlNYIHRyYW5zZm9ybVxyXG4gKiBAcGFyYW0ge1ZOb2RlWyd0eXBlJ119IHR5cGVcclxuICogQHBhcmFtIHtWTm9kZVsncHJvcHMnXX0gcHJvcHNcclxuICogQHBhcmFtIHtWTm9kZVsna2V5J119IFtrZXldXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbX19zb3VyY2VdXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbX19zZWxmXVxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlVk5vZGUodHlwZSwgcHJvcHMsIGtleSwgX19zb3VyY2UsIF9fc2VsZikge1xyXG5cdC8vIFdlJ2xsIHdhbnQgdG8gcHJlc2VydmUgYHJlZmAgaW4gcHJvcHMgdG8gZ2V0IHJpZCBvZiB0aGUgbmVlZCBmb3JcclxuXHQvLyBmb3J3YXJkUmVmIGNvbXBvbmVudHMgaW4gdGhlIGZ1dHVyZSwgYnV0IHRoYXQgc2hvdWxkIGhhcHBlbiB2aWFcclxuXHQvLyBhIHNlcGFyYXRlIFBSLlxyXG5cdGxldCBub3JtYWxpemVkUHJvcHMgPSB7fSxcclxuXHRcdHJlZixcclxuXHRcdGk7XHJcblx0Zm9yIChpIGluIHByb3BzKSB7XHJcblx0XHRpZiAoaSA9PSAncmVmJykge1xyXG5cdFx0XHRyZWYgPSBwcm9wc1tpXTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdG5vcm1hbGl6ZWRQcm9wc1tpXSA9IHByb3BzW2ldO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Y29uc3Qgdm5vZGUgPSB7XHJcblx0XHR0eXBlLFxyXG5cdFx0cHJvcHM6IG5vcm1hbGl6ZWRQcm9wcyxcclxuXHRcdGtleSxcclxuXHRcdHJlZixcclxuXHRcdF9jaGlsZHJlbjogbnVsbCxcclxuXHRcdF9wYXJlbnQ6IG51bGwsXHJcblx0XHRfZGVwdGg6IDAsXHJcblx0XHRfZG9tOiBudWxsLFxyXG5cdFx0X25leHREb206IHVuZGVmaW5lZCxcclxuXHRcdF9jb21wb25lbnQ6IG51bGwsXHJcblx0XHRfaHlkcmF0aW5nOiBudWxsLFxyXG5cdFx0Y29uc3RydWN0b3I6IHVuZGVmaW5lZCxcclxuXHRcdF9vcmlnaW5hbDogLS12bm9kZUlkLFxyXG5cdFx0X19zb3VyY2UsXHJcblx0XHRfX3NlbGZcclxuXHR9O1xyXG5cclxuXHQvLyBJZiBhIENvbXBvbmVudCBWTm9kZSwgY2hlY2sgZm9yIGFuZCBhcHBseSBkZWZhdWx0UHJvcHMuXHJcblx0Ly8gTm90ZTogYHR5cGVgIGlzIG9mdGVuIGEgU3RyaW5nLCBhbmQgY2FuIGJlIGB1bmRlZmluZWRgIGluIGRldmVsb3BtZW50LlxyXG5cdGlmICh0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJyAmJiAocmVmID0gdHlwZS5kZWZhdWx0UHJvcHMpKSB7XHJcblx0XHRmb3IgKGkgaW4gcmVmKVxyXG5cdFx0XHRpZiAodHlwZW9mIG5vcm1hbGl6ZWRQcm9wc1tpXSA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuXHRcdFx0XHRub3JtYWxpemVkUHJvcHNbaV0gPSByZWZbaV07XHJcblx0XHRcdH1cclxuXHR9XHJcblxyXG5cdGlmIChvcHRpb25zLnZub2RlKSBvcHRpb25zLnZub2RlKHZub2RlKTtcclxuXHRyZXR1cm4gdm5vZGU7XHJcbn1cclxuXHJcbmV4cG9ydCB7XHJcblx0Y3JlYXRlVk5vZGUgYXMganN4LFxyXG5cdGNyZWF0ZVZOb2RlIGFzIGpzeHMsXHJcblx0Y3JlYXRlVk5vZGUgYXMganN4REVWLFxyXG5cdEZyYWdtZW50XHJcbn07XHJcbiIsICJ2YXIgbixsLHUsaSx0LHIsbyxmLGU9e30sYz1bXSxzPS9hY2l0fGV4KD86c3xnfG58cHwkKXxycGh8Z3JpZHxvd3N8bW5jfG50d3xpbmVbY2hdfHpvb3xeb3JkfGl0ZXJhL2k7ZnVuY3Rpb24gYShuLGwpe2Zvcih2YXIgdSBpbiBsKW5bdV09bFt1XTtyZXR1cm4gbn1mdW5jdGlvbiBoKG4pe3ZhciBsPW4ucGFyZW50Tm9kZTtsJiZsLnJlbW92ZUNoaWxkKG4pfWZ1bmN0aW9uIHYobCx1LGkpe3ZhciB0LHIsbyxmPXt9O2ZvcihvIGluIHUpXCJrZXlcIj09bz90PXVbb106XCJyZWZcIj09bz9yPXVbb106ZltvXT11W29dO2lmKGFyZ3VtZW50cy5sZW5ndGg+MiYmKGYuY2hpbGRyZW49YXJndW1lbnRzLmxlbmd0aD4zP24uY2FsbChhcmd1bWVudHMsMik6aSksXCJmdW5jdGlvblwiPT10eXBlb2YgbCYmbnVsbCE9bC5kZWZhdWx0UHJvcHMpZm9yKG8gaW4gbC5kZWZhdWx0UHJvcHMpdm9pZCAwPT09ZltvXSYmKGZbb109bC5kZWZhdWx0UHJvcHNbb10pO3JldHVybiB5KGwsZix0LHIsbnVsbCl9ZnVuY3Rpb24geShuLGksdCxyLG8pe3ZhciBmPXt0eXBlOm4scHJvcHM6aSxrZXk6dCxyZWY6cixfX2s6bnVsbCxfXzpudWxsLF9fYjowLF9fZTpudWxsLF9fZDp2b2lkIDAsX19jOm51bGwsX19oOm51bGwsY29uc3RydWN0b3I6dm9pZCAwLF9fdjpudWxsPT1vPysrdTpvfTtyZXR1cm4gbnVsbD09byYmbnVsbCE9bC52bm9kZSYmbC52bm9kZShmKSxmfWZ1bmN0aW9uIHAoKXtyZXR1cm57Y3VycmVudDpudWxsfX1mdW5jdGlvbiBkKG4pe3JldHVybiBuLmNoaWxkcmVufWZ1bmN0aW9uIF8obixsKXt0aGlzLnByb3BzPW4sdGhpcy5jb250ZXh0PWx9ZnVuY3Rpb24gayhuLGwpe2lmKG51bGw9PWwpcmV0dXJuIG4uX18/ayhuLl9fLG4uX18uX19rLmluZGV4T2YobikrMSk6bnVsbDtmb3IodmFyIHU7bDxuLl9fay5sZW5ndGg7bCsrKWlmKG51bGwhPSh1PW4uX19rW2xdKSYmbnVsbCE9dS5fX2UpcmV0dXJuIHUuX19lO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIG4udHlwZT9rKG4pOm51bGx9ZnVuY3Rpb24gYihuKXt2YXIgbCx1O2lmKG51bGwhPShuPW4uX18pJiZudWxsIT1uLl9fYyl7Zm9yKG4uX19lPW4uX19jLmJhc2U9bnVsbCxsPTA7bDxuLl9fay5sZW5ndGg7bCsrKWlmKG51bGwhPSh1PW4uX19rW2xdKSYmbnVsbCE9dS5fX2Upe24uX19lPW4uX19jLmJhc2U9dS5fX2U7YnJlYWt9cmV0dXJuIGIobil9fWZ1bmN0aW9uIG0obil7KCFuLl9fZCYmKG4uX19kPSEwKSYmdC5wdXNoKG4pJiYhZy5fX3IrK3x8byE9PWwuZGVib3VuY2VSZW5kZXJpbmcpJiYoKG89bC5kZWJvdW5jZVJlbmRlcmluZyl8fHIpKGcpfWZ1bmN0aW9uIGcoKXtmb3IodmFyIG47Zy5fX3I9dC5sZW5ndGg7KW49dC5zb3J0KGZ1bmN0aW9uKG4sbCl7cmV0dXJuIG4uX192Ll9fYi1sLl9fdi5fX2J9KSx0PVtdLG4uc29tZShmdW5jdGlvbihuKXt2YXIgbCx1LGksdCxyLG87bi5fX2QmJihyPSh0PShsPW4pLl9fdikuX19lLChvPWwuX19QKSYmKHU9W10sKGk9YSh7fSx0KSkuX192PXQuX192KzEsaihvLHQsaSxsLl9fbix2b2lkIDAhPT1vLm93bmVyU1ZHRWxlbWVudCxudWxsIT10Ll9faD9bcl06bnVsbCx1LG51bGw9PXI/ayh0KTpyLHQuX19oKSx6KHUsdCksdC5fX2UhPXImJmIodCkpKX0pfWZ1bmN0aW9uIHcobixsLHUsaSx0LHIsbyxmLHMsYSl7dmFyIGgsdixwLF8sYixtLGcsdz1pJiZpLl9fa3x8YyxBPXcubGVuZ3RoO2Zvcih1Ll9faz1bXSxoPTA7aDxsLmxlbmd0aDtoKyspaWYobnVsbCE9KF89dS5fX2tbaF09bnVsbD09KF89bFtoXSl8fFwiYm9vbGVhblwiPT10eXBlb2YgXz9udWxsOlwic3RyaW5nXCI9PXR5cGVvZiBffHxcIm51bWJlclwiPT10eXBlb2YgX3x8XCJiaWdpbnRcIj09dHlwZW9mIF8/eShudWxsLF8sbnVsbCxudWxsLF8pOkFycmF5LmlzQXJyYXkoXyk/eShkLHtjaGlsZHJlbjpffSxudWxsLG51bGwsbnVsbCk6Xy5fX2I+MD95KF8udHlwZSxfLnByb3BzLF8ua2V5LG51bGwsXy5fX3YpOl8pKXtpZihfLl9fPXUsXy5fX2I9dS5fX2IrMSxudWxsPT09KHA9d1toXSl8fHAmJl8ua2V5PT1wLmtleSYmXy50eXBlPT09cC50eXBlKXdbaF09dm9pZCAwO2Vsc2UgZm9yKHY9MDt2PEE7disrKXtpZigocD13W3ZdKSYmXy5rZXk9PXAua2V5JiZfLnR5cGU9PT1wLnR5cGUpe3dbdl09dm9pZCAwO2JyZWFrfXA9bnVsbH1qKG4sXyxwPXB8fGUsdCxyLG8sZixzLGEpLGI9Xy5fX2UsKHY9Xy5yZWYpJiZwLnJlZiE9diYmKGd8fChnPVtdKSxwLnJlZiYmZy5wdXNoKHAucmVmLG51bGwsXyksZy5wdXNoKHYsXy5fX2N8fGIsXykpLG51bGwhPWI/KG51bGw9PW0mJihtPWIpLFwiZnVuY3Rpb25cIj09dHlwZW9mIF8udHlwZSYmXy5fX2s9PT1wLl9faz9fLl9fZD1zPXgoXyxzLG4pOnM9UChuLF8scCx3LGIscyksXCJmdW5jdGlvblwiPT10eXBlb2YgdS50eXBlJiYodS5fX2Q9cykpOnMmJnAuX19lPT1zJiZzLnBhcmVudE5vZGUhPW4mJihzPWsocCkpfWZvcih1Ll9fZT1tLGg9QTtoLS07KW51bGwhPXdbaF0mJihcImZ1bmN0aW9uXCI9PXR5cGVvZiB1LnR5cGUmJm51bGwhPXdbaF0uX19lJiZ3W2hdLl9fZT09dS5fX2QmJih1Ll9fZD1rKGksaCsxKSksTih3W2hdLHdbaF0pKTtpZihnKWZvcihoPTA7aDxnLmxlbmd0aDtoKyspTShnW2hdLGdbKytoXSxnWysraF0pfWZ1bmN0aW9uIHgobixsLHUpe2Zvcih2YXIgaSx0PW4uX19rLHI9MDt0JiZyPHQubGVuZ3RoO3IrKykoaT10W3JdKSYmKGkuX189bixsPVwiZnVuY3Rpb25cIj09dHlwZW9mIGkudHlwZT94KGksbCx1KTpQKHUsaSxpLHQsaS5fX2UsbCkpO3JldHVybiBsfWZ1bmN0aW9uIEEobixsKXtyZXR1cm4gbD1sfHxbXSxudWxsPT1ufHxcImJvb2xlYW5cIj09dHlwZW9mIG58fChBcnJheS5pc0FycmF5KG4pP24uc29tZShmdW5jdGlvbihuKXtBKG4sbCl9KTpsLnB1c2gobikpLGx9ZnVuY3Rpb24gUChuLGwsdSxpLHQscil7dmFyIG8sZixlO2lmKHZvaWQgMCE9PWwuX19kKW89bC5fX2QsbC5fX2Q9dm9pZCAwO2Vsc2UgaWYobnVsbD09dXx8dCE9cnx8bnVsbD09dC5wYXJlbnROb2RlKW46aWYobnVsbD09cnx8ci5wYXJlbnROb2RlIT09biluLmFwcGVuZENoaWxkKHQpLG89bnVsbDtlbHNle2ZvcihmPXIsZT0wOyhmPWYubmV4dFNpYmxpbmcpJiZlPGkubGVuZ3RoO2UrPTIpaWYoZj09dClicmVhayBuO24uaW5zZXJ0QmVmb3JlKHQsciksbz1yfXJldHVybiB2b2lkIDAhPT1vP286dC5uZXh0U2libGluZ31mdW5jdGlvbiBDKG4sbCx1LGksdCl7dmFyIHI7Zm9yKHIgaW4gdSlcImNoaWxkcmVuXCI9PT1yfHxcImtleVwiPT09cnx8ciBpbiBsfHxIKG4scixudWxsLHVbcl0saSk7Zm9yKHIgaW4gbCl0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBsW3JdfHxcImNoaWxkcmVuXCI9PT1yfHxcImtleVwiPT09cnx8XCJ2YWx1ZVwiPT09cnx8XCJjaGVja2VkXCI9PT1yfHx1W3JdPT09bFtyXXx8SChuLHIsbFtyXSx1W3JdLGkpfWZ1bmN0aW9uICQobixsLHUpe1wiLVwiPT09bFswXT9uLnNldFByb3BlcnR5KGwsdSk6bltsXT1udWxsPT11P1wiXCI6XCJudW1iZXJcIiE9dHlwZW9mIHV8fHMudGVzdChsKT91OnUrXCJweFwifWZ1bmN0aW9uIEgobixsLHUsaSx0KXt2YXIgcjtuOmlmKFwic3R5bGVcIj09PWwpaWYoXCJzdHJpbmdcIj09dHlwZW9mIHUpbi5zdHlsZS5jc3NUZXh0PXU7ZWxzZXtpZihcInN0cmluZ1wiPT10eXBlb2YgaSYmKG4uc3R5bGUuY3NzVGV4dD1pPVwiXCIpLGkpZm9yKGwgaW4gaSl1JiZsIGluIHV8fCQobi5zdHlsZSxsLFwiXCIpO2lmKHUpZm9yKGwgaW4gdSlpJiZ1W2xdPT09aVtsXXx8JChuLnN0eWxlLGwsdVtsXSl9ZWxzZSBpZihcIm9cIj09PWxbMF0mJlwiblwiPT09bFsxXSlyPWwhPT0obD1sLnJlcGxhY2UoL0NhcHR1cmUkLyxcIlwiKSksbD1sLnRvTG93ZXJDYXNlKClpbiBuP2wudG9Mb3dlckNhc2UoKS5zbGljZSgyKTpsLnNsaWNlKDIpLG4ubHx8KG4ubD17fSksbi5sW2wrcl09dSx1P2l8fG4uYWRkRXZlbnRMaXN0ZW5lcihsLHI/VDpJLHIpOm4ucmVtb3ZlRXZlbnRMaXN0ZW5lcihsLHI/VDpJLHIpO2Vsc2UgaWYoXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCl7aWYodClsPWwucmVwbGFjZSgveGxpbmtbSDpoXS8sXCJoXCIpLnJlcGxhY2UoL3NOYW1lJC8sXCJzXCIpO2Vsc2UgaWYoXCJocmVmXCIhPT1sJiZcImxpc3RcIiE9PWwmJlwiZm9ybVwiIT09bCYmXCJ0YWJJbmRleFwiIT09bCYmXCJkb3dubG9hZFwiIT09bCYmbCBpbiBuKXRyeXtuW2xdPW51bGw9PXU/XCJcIjp1O2JyZWFrIG59Y2F0Y2gobil7fVwiZnVuY3Rpb25cIj09dHlwZW9mIHV8fChudWxsIT11JiYoITEhPT11fHxcImFcIj09PWxbMF0mJlwiclwiPT09bFsxXSk/bi5zZXRBdHRyaWJ1dGUobCx1KTpuLnJlbW92ZUF0dHJpYnV0ZShsKSl9fWZ1bmN0aW9uIEkobil7dGhpcy5sW24udHlwZSshMV0obC5ldmVudD9sLmV2ZW50KG4pOm4pfWZ1bmN0aW9uIFQobil7dGhpcy5sW24udHlwZSshMF0obC5ldmVudD9sLmV2ZW50KG4pOm4pfWZ1bmN0aW9uIGoobix1LGksdCxyLG8sZixlLGMpe3ZhciBzLGgsdix5LHAsayxiLG0sZyx4LEEsUD11LnR5cGU7aWYodm9pZCAwIT09dS5jb25zdHJ1Y3RvcilyZXR1cm4gbnVsbDtudWxsIT1pLl9faCYmKGM9aS5fX2gsZT11Ll9fZT1pLl9fZSx1Ll9faD1udWxsLG89W2VdKSwocz1sLl9fYikmJnModSk7dHJ5e246aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgUCl7aWYobT11LnByb3BzLGc9KHM9UC5jb250ZXh0VHlwZSkmJnRbcy5fX2NdLHg9cz9nP2cucHJvcHMudmFsdWU6cy5fXzp0LGkuX19jP2I9KGg9dS5fX2M9aS5fX2MpLl9fPWguX19FOihcInByb3RvdHlwZVwiaW4gUCYmUC5wcm90b3R5cGUucmVuZGVyP3UuX19jPWg9bmV3IFAobSx4KToodS5fX2M9aD1uZXcgXyhtLHgpLGguY29uc3RydWN0b3I9UCxoLnJlbmRlcj1PKSxnJiZnLnN1YihoKSxoLnByb3BzPW0saC5zdGF0ZXx8KGguc3RhdGU9e30pLGguY29udGV4dD14LGguX19uPXQsdj1oLl9fZD0hMCxoLl9faD1bXSksbnVsbD09aC5fX3MmJihoLl9fcz1oLnN0YXRlKSxudWxsIT1QLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyYmKGguX19zPT1oLnN0YXRlJiYoaC5fX3M9YSh7fSxoLl9fcykpLGEoaC5fX3MsUC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMobSxoLl9fcykpKSx5PWgucHJvcHMscD1oLnN0YXRlLHYpbnVsbD09UC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMmJm51bGwhPWguY29tcG9uZW50V2lsbE1vdW50JiZoLmNvbXBvbmVudFdpbGxNb3VudCgpLG51bGwhPWguY29tcG9uZW50RGlkTW91bnQmJmguX19oLnB1c2goaC5jb21wb25lbnREaWRNb3VudCk7ZWxzZXtpZihudWxsPT1QLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyYmbSE9PXkmJm51bGwhPWguY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmaC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG0seCksIWguX19lJiZudWxsIT1oLnNob3VsZENvbXBvbmVudFVwZGF0ZSYmITE9PT1oLnNob3VsZENvbXBvbmVudFVwZGF0ZShtLGguX19zLHgpfHx1Ll9fdj09PWkuX192KXtoLnByb3BzPW0saC5zdGF0ZT1oLl9fcyx1Ll9fdiE9PWkuX192JiYoaC5fX2Q9ITEpLGguX192PXUsdS5fX2U9aS5fX2UsdS5fX2s9aS5fX2ssdS5fX2suZm9yRWFjaChmdW5jdGlvbihuKXtuJiYobi5fXz11KX0pLGguX19oLmxlbmd0aCYmZi5wdXNoKGgpO2JyZWFrIG59bnVsbCE9aC5jb21wb25lbnRXaWxsVXBkYXRlJiZoLmNvbXBvbmVudFdpbGxVcGRhdGUobSxoLl9fcyx4KSxudWxsIT1oLmNvbXBvbmVudERpZFVwZGF0ZSYmaC5fX2gucHVzaChmdW5jdGlvbigpe2guY29tcG9uZW50RGlkVXBkYXRlKHkscCxrKX0pfWguY29udGV4dD14LGgucHJvcHM9bSxoLnN0YXRlPWguX19zLChzPWwuX19yKSYmcyh1KSxoLl9fZD0hMSxoLl9fdj11LGguX19QPW4scz1oLnJlbmRlcihoLnByb3BzLGguc3RhdGUsaC5jb250ZXh0KSxoLnN0YXRlPWguX19zLG51bGwhPWguZ2V0Q2hpbGRDb250ZXh0JiYodD1hKGEoe30sdCksaC5nZXRDaGlsZENvbnRleHQoKSkpLHZ8fG51bGw9PWguZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fChrPWguZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoeSxwKSksQT1udWxsIT1zJiZzLnR5cGU9PT1kJiZudWxsPT1zLmtleT9zLnByb3BzLmNoaWxkcmVuOnMsdyhuLEFycmF5LmlzQXJyYXkoQSk/QTpbQV0sdSxpLHQscixvLGYsZSxjKSxoLmJhc2U9dS5fX2UsdS5fX2g9bnVsbCxoLl9faC5sZW5ndGgmJmYucHVzaChoKSxiJiYoaC5fX0U9aC5fXz1udWxsKSxoLl9fZT0hMX1lbHNlIG51bGw9PW8mJnUuX192PT09aS5fX3Y/KHUuX19rPWkuX19rLHUuX19lPWkuX19lKTp1Ll9fZT1MKGkuX19lLHUsaSx0LHIsbyxmLGMpOyhzPWwuZGlmZmVkKSYmcyh1KX1jYXRjaChuKXt1Ll9fdj1udWxsLChjfHxudWxsIT1vKSYmKHUuX19lPWUsdS5fX2g9ISFjLG9bby5pbmRleE9mKGUpXT1udWxsKSxsLl9fZShuLHUsaSl9fWZ1bmN0aW9uIHoobix1KXtsLl9fYyYmbC5fX2ModSxuKSxuLnNvbWUoZnVuY3Rpb24odSl7dHJ5e249dS5fX2gsdS5fX2g9W10sbi5zb21lKGZ1bmN0aW9uKG4pe24uY2FsbCh1KX0pfWNhdGNoKG4pe2wuX19lKG4sdS5fX3YpfX0pfWZ1bmN0aW9uIEwobCx1LGksdCxyLG8sZixjKXt2YXIgcyxhLHYseT1pLnByb3BzLHA9dS5wcm9wcyxkPXUudHlwZSxfPTA7aWYoXCJzdmdcIj09PWQmJihyPSEwKSxudWxsIT1vKWZvcig7XzxvLmxlbmd0aDtfKyspaWYoKHM9b1tfXSkmJlwic2V0QXR0cmlidXRlXCJpbiBzPT0hIWQmJihkP3MubG9jYWxOYW1lPT09ZDozPT09cy5ub2RlVHlwZSkpe2w9cyxvW19dPW51bGw7YnJlYWt9aWYobnVsbD09bCl7aWYobnVsbD09PWQpcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHApO2w9cj9kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLGQpOmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZCxwLmlzJiZwKSxvPW51bGwsYz0hMX1pZihudWxsPT09ZCl5PT09cHx8YyYmbC5kYXRhPT09cHx8KGwuZGF0YT1wKTtlbHNle2lmKG89byYmbi5jYWxsKGwuY2hpbGROb2RlcyksYT0oeT1pLnByb3BzfHxlKS5kYW5nZXJvdXNseVNldElubmVySFRNTCx2PXAuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwsIWMpe2lmKG51bGwhPW8pZm9yKHk9e30sXz0wO188bC5hdHRyaWJ1dGVzLmxlbmd0aDtfKyspeVtsLmF0dHJpYnV0ZXNbX10ubmFtZV09bC5hdHRyaWJ1dGVzW19dLnZhbHVlOyh2fHxhKSYmKHYmJihhJiZ2Ll9faHRtbD09YS5fX2h0bWx8fHYuX19odG1sPT09bC5pbm5lckhUTUwpfHwobC5pbm5lckhUTUw9diYmdi5fX2h0bWx8fFwiXCIpKX1pZihDKGwscCx5LHIsYyksdil1Ll9faz1bXTtlbHNlIGlmKF89dS5wcm9wcy5jaGlsZHJlbix3KGwsQXJyYXkuaXNBcnJheShfKT9fOltfXSx1LGksdCxyJiZcImZvcmVpZ25PYmplY3RcIiE9PWQsbyxmLG8/b1swXTppLl9fayYmayhpLDApLGMpLG51bGwhPW8pZm9yKF89by5sZW5ndGg7Xy0tOyludWxsIT1vW19dJiZoKG9bX10pO2N8fChcInZhbHVlXCJpbiBwJiZ2b2lkIDAhPT0oXz1wLnZhbHVlKSYmKF8hPT15LnZhbHVlfHxfIT09bC52YWx1ZXx8XCJwcm9ncmVzc1wiPT09ZCYmIV8pJiZIKGwsXCJ2YWx1ZVwiLF8seS52YWx1ZSwhMSksXCJjaGVja2VkXCJpbiBwJiZ2b2lkIDAhPT0oXz1wLmNoZWNrZWQpJiZfIT09bC5jaGVja2VkJiZIKGwsXCJjaGVja2VkXCIsXyx5LmNoZWNrZWQsITEpKX1yZXR1cm4gbH1mdW5jdGlvbiBNKG4sdSxpKXt0cnl7XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uKHUpOm4uY3VycmVudD11fWNhdGNoKG4pe2wuX19lKG4saSl9fWZ1bmN0aW9uIE4obix1LGkpe3ZhciB0LHI7aWYobC51bm1vdW50JiZsLnVubW91bnQobiksKHQ9bi5yZWYpJiYodC5jdXJyZW50JiZ0LmN1cnJlbnQhPT1uLl9fZXx8TSh0LG51bGwsdSkpLG51bGwhPSh0PW4uX19jKSl7aWYodC5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7dC5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKG4pe2wuX19lKG4sdSl9dC5iYXNlPXQuX19QPW51bGx9aWYodD1uLl9faylmb3Iocj0wO3I8dC5sZW5ndGg7cisrKXRbcl0mJk4odFtyXSx1LFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4udHlwZSk7aXx8bnVsbD09bi5fX2V8fGgobi5fX2UpLG4uX19lPW4uX19kPXZvaWQgMH1mdW5jdGlvbiBPKG4sbCx1KXtyZXR1cm4gdGhpcy5jb25zdHJ1Y3RvcihuLHUpfWZ1bmN0aW9uIFModSxpLHQpe3ZhciByLG8sZjtsLl9fJiZsLl9fKHUsaSksbz0ocj1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0KT9udWxsOnQmJnQuX19rfHxpLl9fayxmPVtdLGooaSx1PSghciYmdHx8aSkuX19rPXYoZCxudWxsLFt1XSksb3x8ZSxlLHZvaWQgMCE9PWkub3duZXJTVkdFbGVtZW50LCFyJiZ0P1t0XTpvP251bGw6aS5maXJzdENoaWxkP24uY2FsbChpLmNoaWxkTm9kZXMpOm51bGwsZiwhciYmdD90Om8/by5fX2U6aS5maXJzdENoaWxkLHIpLHooZix1KX1mdW5jdGlvbiBxKG4sbCl7UyhuLGwscSl9ZnVuY3Rpb24gQihsLHUsaSl7dmFyIHQscixvLGY9YSh7fSxsLnByb3BzKTtmb3IobyBpbiB1KVwia2V5XCI9PW8/dD11W29dOlwicmVmXCI9PW8/cj11W29dOmZbb109dVtvXTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4yJiYoZi5jaGlsZHJlbj1hcmd1bWVudHMubGVuZ3RoPjM/bi5jYWxsKGFyZ3VtZW50cywyKTppKSx5KGwudHlwZSxmLHR8fGwua2V5LHJ8fGwucmVmLG51bGwpfWZ1bmN0aW9uIEQobixsKXt2YXIgdT17X19jOmw9XCJfX2NDXCIrZisrLF9fOm4sQ29uc3VtZXI6ZnVuY3Rpb24obixsKXtyZXR1cm4gbi5jaGlsZHJlbihsKX0sUHJvdmlkZXI6ZnVuY3Rpb24obil7dmFyIHUsaTtyZXR1cm4gdGhpcy5nZXRDaGlsZENvbnRleHR8fCh1PVtdLChpPXt9KVtsXT10aGlzLHRoaXMuZ2V0Q2hpbGRDb250ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIGl9LHRoaXMuc2hvdWxkQ29tcG9uZW50VXBkYXRlPWZ1bmN0aW9uKG4pe3RoaXMucHJvcHMudmFsdWUhPT1uLnZhbHVlJiZ1LnNvbWUobSl9LHRoaXMuc3ViPWZ1bmN0aW9uKG4pe3UucHVzaChuKTt2YXIgbD1uLmNvbXBvbmVudFdpbGxVbm1vdW50O24uY29tcG9uZW50V2lsbFVubW91bnQ9ZnVuY3Rpb24oKXt1LnNwbGljZSh1LmluZGV4T2YobiksMSksbCYmbC5jYWxsKG4pfX0pLG4uY2hpbGRyZW59fTtyZXR1cm4gdS5Qcm92aWRlci5fXz11LkNvbnN1bWVyLmNvbnRleHRUeXBlPXV9bj1jLnNsaWNlLGw9e19fZTpmdW5jdGlvbihuLGwpe2Zvcih2YXIgdSxpLHQ7bD1sLl9fOylpZigodT1sLl9fYykmJiF1Ll9fKXRyeXtpZigoaT11LmNvbnN0cnVjdG9yKSYmbnVsbCE9aS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3ImJih1LnNldFN0YXRlKGkuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yKG4pKSx0PXUuX19kKSxudWxsIT11LmNvbXBvbmVudERpZENhdGNoJiYodS5jb21wb25lbnREaWRDYXRjaChuKSx0PXUuX19kKSx0KXJldHVybiB1Ll9fRT11fWNhdGNoKGwpe249bH10aHJvdyBufX0sdT0wLGk9ZnVuY3Rpb24obil7cmV0dXJuIG51bGwhPW4mJnZvaWQgMD09PW4uY29uc3RydWN0b3J9LF8ucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKG4sbCl7dmFyIHU7dT1udWxsIT10aGlzLl9fcyYmdGhpcy5fX3MhPT10aGlzLnN0YXRlP3RoaXMuX19zOnRoaXMuX19zPWEoe30sdGhpcy5zdGF0ZSksXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmKG49bihhKHt9LHUpLHRoaXMucHJvcHMpKSxuJiZhKHUsbiksbnVsbCE9biYmdGhpcy5fX3YmJihsJiZ0aGlzLl9faC5wdXNoKGwpLG0odGhpcykpfSxfLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihuKXt0aGlzLl9fdiYmKHRoaXMuX19lPSEwLG4mJnRoaXMuX19oLnB1c2gobiksbSh0aGlzKSl9LF8ucHJvdG90eXBlLnJlbmRlcj1kLHQ9W10scj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm9taXNlP1Byb21pc2UucHJvdG90eXBlLnRoZW4uYmluZChQcm9taXNlLnJlc29sdmUoKSk6c2V0VGltZW91dCxnLl9fcj0wLGY9MDtleHBvcnR7UyBhcyByZW5kZXIscSBhcyBoeWRyYXRlLHYgYXMgY3JlYXRlRWxlbWVudCx2IGFzIGgsZCBhcyBGcmFnbWVudCxwIGFzIGNyZWF0ZVJlZixpIGFzIGlzVmFsaWRFbGVtZW50LF8gYXMgQ29tcG9uZW50LEIgYXMgY2xvbmVFbGVtZW50LEQgYXMgY3JlYXRlQ29udGV4dCxBIGFzIHRvQ2hpbGRBcnJheSxsIGFzIG9wdGlvbnN9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJlYWN0Lm1vZHVsZS5qcy5tYXBcbiIsICJleHBvcnQgY29uc3QgRU1QVFlfT0JKID0ge307XHJcbmV4cG9ydCBjb25zdCBFTVBUWV9BUlIgPSBbXTtcclxuZXhwb3J0IGNvbnN0IElTX05PTl9ESU1FTlNJT05BTCA9IC9hY2l0fGV4KD86c3xnfG58cHwkKXxycGh8Z3JpZHxvd3N8bW5jfG50d3xpbmVbY2hdfHpvb3xeb3JkfGl0ZXJhL2k7XHJcbiIsICJpbXBvcnQgeyBFTVBUWV9BUlIgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcclxuXHJcbi8qKlxyXG4gKiBBc3NpZ24gcHJvcGVydGllcyBmcm9tIGBwcm9wc2AgdG8gYG9iamBcclxuICogQHRlbXBsYXRlIE8sIFAgVGhlIG9iaiBhbmQgcHJvcHMgdHlwZXNcclxuICogQHBhcmFtIHtPfSBvYmogVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgdG9cclxuICogQHBhcmFtIHtQfSBwcm9wcyBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tXHJcbiAqIEByZXR1cm5zIHtPICYgUH1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ24ob2JqLCBwcm9wcykge1xyXG5cdC8vIEB0cy1pZ25vcmUgV2UgY2hhbmdlIHRoZSB0eXBlIG9mIGBvYmpgIHRvIGJlIGBPICYgUGBcclxuXHRmb3IgKGxldCBpIGluIHByb3BzKSBvYmpbaV0gPSBwcm9wc1tpXTtcclxuXHRyZXR1cm4gLyoqIEB0eXBlIHtPICYgUH0gKi8gKG9iaik7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgYSBjaGlsZCBub2RlIGZyb20gaXRzIHBhcmVudCBpZiBhdHRhY2hlZC4gVGhpcyBpcyBhIHdvcmthcm91bmQgZm9yXHJcbiAqIElFMTEgd2hpY2ggZG9lc24ndCBzdXBwb3J0IGBFbGVtZW50LnByb3RvdHlwZS5yZW1vdmUoKWAuIFVzaW5nIHRoaXMgZnVuY3Rpb25cclxuICogaXMgc21hbGxlciB0aGFuIGluY2x1ZGluZyBhIGRlZGljYXRlZCBwb2x5ZmlsbC5cclxuICogQHBhcmFtIHtOb2RlfSBub2RlIFRoZSBub2RlIHRvIHJlbW92ZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZU5vZGUobm9kZSkge1xyXG5cdGxldCBwYXJlbnROb2RlID0gbm9kZS5wYXJlbnROb2RlO1xyXG5cdGlmIChwYXJlbnROb2RlKSBwYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgc2xpY2UgPSBFTVBUWV9BUlIuc2xpY2U7XHJcbiIsICJpbXBvcnQgeyBfY2F0Y2hFcnJvciB9IGZyb20gJy4vZGlmZi9jYXRjaC1lcnJvcic7XHJcblxyXG4vKipcclxuICogVGhlIGBvcHRpb25gIG9iamVjdCBjYW4gcG90ZW50aWFsbHkgY29udGFpbiBjYWxsYmFjayBmdW5jdGlvbnNcclxuICogdGhhdCBhcmUgY2FsbGVkIGR1cmluZyB2YXJpb3VzIHN0YWdlcyBvZiBvdXIgcmVuZGVyZXIuIFRoaXMgaXMgdGhlXHJcbiAqIGZvdW5kYXRpb24gb24gd2hpY2ggYWxsIG91ciBhZGRvbnMgbGlrZSBgcHJlYWN0L2RlYnVnYCwgYHByZWFjdC9jb21wYXRgLFxyXG4gKiBhbmQgYHByZWFjdC9ob29rc2AgYXJlIGJhc2VkIG9uLiBTZWUgdGhlIGBPcHRpb25zYCB0eXBlIGluIGBpbnRlcm5hbC5kLnRzYFxyXG4gKiBmb3IgYSBmdWxsIGxpc3Qgb2YgYXZhaWxhYmxlIG9wdGlvbiBob29rcyAobW9zdCBlZGl0b3JzL0lERXMgYWxsb3cgeW91IHRvXHJcbiAqIGN0cmwrY2xpY2sgb3IgY21kK2NsaWNrIG9uIG1hYyB0aGUgdHlwZSBkZWZpbml0aW9uIGJlbG93KS5cclxuICogQHR5cGUge2ltcG9ydCgnLi9pbnRlcm5hbCcpLk9wdGlvbnN9XHJcbiAqL1xyXG5jb25zdCBvcHRpb25zID0ge1xyXG5cdF9jYXRjaEVycm9yXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBvcHRpb25zO1xyXG4iLCAiaW1wb3J0IHsgc2xpY2UgfSBmcm9tICcuL3V0aWwnO1xyXG5pbXBvcnQgb3B0aW9ucyBmcm9tICcuL29wdGlvbnMnO1xyXG5cclxubGV0IHZub2RlSWQgPSAwO1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhbiB2aXJ0dWFsIG5vZGUgKHVzZWQgZm9yIEpTWClcclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5WTm9kZVtcInR5cGVcIl19IHR5cGUgVGhlIG5vZGUgbmFtZSBvciBDb21wb25lbnRcclxuICogY29uc3RydWN0b3IgZm9yIHRoaXMgdmlydHVhbCBub2RlXHJcbiAqIEBwYXJhbSB7b2JqZWN0IHwgbnVsbCB8IHVuZGVmaW5lZH0gW3Byb3BzXSBUaGUgcHJvcGVydGllcyBvZiB0aGUgdmlydHVhbCBub2RlXHJcbiAqIEBwYXJhbSB7QXJyYXk8aW1wb3J0KCcuJykuQ29tcG9uZW50Q2hpbGRyZW4+fSBbY2hpbGRyZW5dIFRoZSBjaGlsZHJlbiBvZiB0aGUgdmlydHVhbCBub2RlXHJcbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5WTm9kZX1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFbGVtZW50KHR5cGUsIHByb3BzLCBjaGlsZHJlbikge1xyXG5cdGxldCBub3JtYWxpemVkUHJvcHMgPSB7fSxcclxuXHRcdGtleSxcclxuXHRcdHJlZixcclxuXHRcdGk7XHJcblx0Zm9yIChpIGluIHByb3BzKSB7XHJcblx0XHRpZiAoaSA9PSAna2V5Jykga2V5ID0gcHJvcHNbaV07XHJcblx0XHRlbHNlIGlmIChpID09ICdyZWYnKSByZWYgPSBwcm9wc1tpXTtcclxuXHRcdGVsc2Ugbm9ybWFsaXplZFByb3BzW2ldID0gcHJvcHNbaV07XHJcblx0fVxyXG5cclxuXHRpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDIpIHtcclxuXHRcdG5vcm1hbGl6ZWRQcm9wcy5jaGlsZHJlbiA9XHJcblx0XHRcdGFyZ3VtZW50cy5sZW5ndGggPiAzID8gc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpIDogY2hpbGRyZW47XHJcblx0fVxyXG5cclxuXHQvLyBJZiBhIENvbXBvbmVudCBWTm9kZSwgY2hlY2sgZm9yIGFuZCBhcHBseSBkZWZhdWx0UHJvcHNcclxuXHQvLyBOb3RlOiB0eXBlIG1heSBiZSB1bmRlZmluZWQgaW4gZGV2ZWxvcG1lbnQsIG11c3QgbmV2ZXIgZXJyb3IgaGVyZS5cclxuXHRpZiAodHlwZW9mIHR5cGUgPT0gJ2Z1bmN0aW9uJyAmJiB0eXBlLmRlZmF1bHRQcm9wcyAhPSBudWxsKSB7XHJcblx0XHRmb3IgKGkgaW4gdHlwZS5kZWZhdWx0UHJvcHMpIHtcclxuXHRcdFx0aWYgKG5vcm1hbGl6ZWRQcm9wc1tpXSA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdFx0bm9ybWFsaXplZFByb3BzW2ldID0gdHlwZS5kZWZhdWx0UHJvcHNbaV07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBjcmVhdGVWTm9kZSh0eXBlLCBub3JtYWxpemVkUHJvcHMsIGtleSwgcmVmLCBudWxsKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIFZOb2RlICh1c2VkIGludGVybmFsbHkgYnkgUHJlYWN0KVxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlZOb2RlW1widHlwZVwiXX0gdHlwZSBUaGUgbm9kZSBuYW1lIG9yIENvbXBvbmVudFxyXG4gKiBDb25zdHJ1Y3RvciBmb3IgdGhpcyB2aXJ0dWFsIG5vZGVcclxuICogQHBhcmFtIHtvYmplY3QgfCBzdHJpbmcgfCBudW1iZXIgfCBudWxsfSBwcm9wcyBUaGUgcHJvcGVydGllcyBvZiB0aGlzIHZpcnR1YWwgbm9kZS5cclxuICogSWYgdGhpcyB2aXJ0dWFsIG5vZGUgcmVwcmVzZW50cyBhIHRleHQgbm9kZSwgdGhpcyBpcyB0aGUgdGV4dCBvZiB0aGUgbm9kZSAoc3RyaW5nIG9yIG51bWJlcikuXHJcbiAqIEBwYXJhbSB7c3RyaW5nIHwgbnVtYmVyIHwgbnVsbH0ga2V5IFRoZSBrZXkgZm9yIHRoaXMgdmlydHVhbCBub2RlLCB1c2VkIHdoZW5cclxuICogZGlmZmluZyBpdCBhZ2FpbnN0IGl0cyBjaGlsZHJlblxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlZOb2RlW1wicmVmXCJdfSByZWYgVGhlIHJlZiBwcm9wZXJ0eSB0aGF0IHdpbGxcclxuICogcmVjZWl2ZSBhIHJlZmVyZW5jZSB0byBpdHMgY3JlYXRlZCBjaGlsZFxyXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL2ludGVybmFsJykuVk5vZGV9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVk5vZGUodHlwZSwgcHJvcHMsIGtleSwgcmVmLCBvcmlnaW5hbCkge1xyXG5cdC8vIFY4IHNlZW1zIHRvIGJlIGJldHRlciBhdCBkZXRlY3RpbmcgdHlwZSBzaGFwZXMgaWYgdGhlIG9iamVjdCBpcyBhbGxvY2F0ZWQgZnJvbSB0aGUgc2FtZSBjYWxsIHNpdGVcclxuXHQvLyBEbyBub3QgaW5saW5lIGludG8gY3JlYXRlRWxlbWVudCBhbmQgY29lcmNlVG9WTm9kZSFcclxuXHRjb25zdCB2bm9kZSA9IHtcclxuXHRcdHR5cGUsXHJcblx0XHRwcm9wcyxcclxuXHRcdGtleSxcclxuXHRcdHJlZixcclxuXHRcdF9jaGlsZHJlbjogbnVsbCxcclxuXHRcdF9wYXJlbnQ6IG51bGwsXHJcblx0XHRfZGVwdGg6IDAsXHJcblx0XHRfZG9tOiBudWxsLFxyXG5cdFx0Ly8gX25leHREb20gbXVzdCBiZSBpbml0aWFsaXplZCB0byB1bmRlZmluZWQgYi9jIGl0IHdpbGwgZXZlbnR1YWxseVxyXG5cdFx0Ly8gYmUgc2V0IHRvIGRvbS5uZXh0U2libGluZyB3aGljaCBjYW4gcmV0dXJuIGBudWxsYCBhbmQgaXQgaXMgaW1wb3J0YW50XHJcblx0XHQvLyB0byBiZSBhYmxlIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gYW4gdW5pbml0aWFsaXplZCBfbmV4dERvbSBhbmRcclxuXHRcdC8vIGEgX25leHREb20gdGhhdCBoYXMgYmVlbiBzZXQgdG8gYG51bGxgXHJcblx0XHRfbmV4dERvbTogdW5kZWZpbmVkLFxyXG5cdFx0X2NvbXBvbmVudDogbnVsbCxcclxuXHRcdF9oeWRyYXRpbmc6IG51bGwsXHJcblx0XHRjb25zdHJ1Y3RvcjogdW5kZWZpbmVkLFxyXG5cdFx0X29yaWdpbmFsOiBvcmlnaW5hbCA9PSBudWxsID8gKyt2bm9kZUlkIDogb3JpZ2luYWxcclxuXHR9O1xyXG5cclxuXHQvLyBPbmx5IGludm9rZSB0aGUgdm5vZGUgaG9vayBpZiB0aGlzIHdhcyAqbm90KiBhIGRpcmVjdCBjb3B5OlxyXG5cdGlmIChvcmlnaW5hbCA9PSBudWxsICYmIG9wdGlvbnMudm5vZGUgIT0gbnVsbCkgb3B0aW9ucy52bm9kZSh2bm9kZSk7XHJcblxyXG5cdHJldHVybiB2bm9kZTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJlZigpIHtcclxuXHRyZXR1cm4geyBjdXJyZW50OiBudWxsIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBGcmFnbWVudChwcm9wcykge1xyXG5cdHJldHVybiBwcm9wcy5jaGlsZHJlbjtcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrIGlmIGEgdGhlIGFyZ3VtZW50IGlzIGEgdmFsaWQgUHJlYWN0IFZOb2RlLlxyXG4gKiBAcGFyYW0geyp9IHZub2RlXHJcbiAqIEByZXR1cm5zIHt2bm9kZSBpcyBpbXBvcnQoJy4vaW50ZXJuYWwnKS5WTm9kZX1cclxuICovXHJcbmV4cG9ydCBjb25zdCBpc1ZhbGlkRWxlbWVudCA9IHZub2RlID0+XHJcblx0dm5vZGUgIT0gbnVsbCAmJiB2bm9kZS5jb25zdHJ1Y3RvciA9PT0gdW5kZWZpbmVkO1xyXG4iLCAiaW1wb3J0IHsgYXNzaWduIH0gZnJvbSAnLi91dGlsJztcclxuaW1wb3J0IHsgZGlmZiwgY29tbWl0Um9vdCB9IGZyb20gJy4vZGlmZi9pbmRleCc7XHJcbmltcG9ydCBvcHRpb25zIGZyb20gJy4vb3B0aW9ucyc7XHJcbmltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSAnLi9jcmVhdGUtZWxlbWVudCc7XHJcblxyXG4vKipcclxuICogQmFzZSBDb21wb25lbnQgY2xhc3MuIFByb3ZpZGVzIGBzZXRTdGF0ZSgpYCBhbmQgYGZvcmNlVXBkYXRlKClgLCB3aGljaFxyXG4gKiB0cmlnZ2VyIHJlbmRlcmluZ1xyXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHMgVGhlIGluaXRpYWwgY29tcG9uZW50IHByb3BzXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb250ZXh0IFRoZSBpbml0aWFsIGNvbnRleHQgZnJvbSBwYXJlbnQgY29tcG9uZW50cydcclxuICogZ2V0Q2hpbGRDb250ZXh0XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gQ29tcG9uZW50KHByb3BzLCBjb250ZXh0KSB7XHJcblx0dGhpcy5wcm9wcyA9IHByb3BzO1xyXG5cdHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVcGRhdGUgY29tcG9uZW50IHN0YXRlIGFuZCBzY2hlZHVsZSBhIHJlLXJlbmRlci5cclxuICogQHRoaXMge2ltcG9ydCgnLi9pbnRlcm5hbCcpLkNvbXBvbmVudH1cclxuICogQHBhcmFtIHtvYmplY3QgfCAoKHM6IG9iamVjdCwgcDogb2JqZWN0KSA9PiBvYmplY3QpfSB1cGRhdGUgQSBoYXNoIG9mIHN0YXRlXHJcbiAqIHByb3BlcnRpZXMgdG8gdXBkYXRlIHdpdGggbmV3IHZhbHVlcyBvciBhIGZ1bmN0aW9uIHRoYXQgZ2l2ZW4gdGhlIGN1cnJlbnRcclxuICogc3RhdGUgYW5kIHByb3BzIHJldHVybnMgYSBuZXcgcGFydGlhbCBzdGF0ZVxyXG4gKiBAcGFyYW0geygpID0+IHZvaWR9IFtjYWxsYmFja10gQSBmdW5jdGlvbiB0byBiZSBjYWxsZWQgb25jZSBjb21wb25lbnQgc3RhdGUgaXNcclxuICogdXBkYXRlZFxyXG4gKi9cclxuQ29tcG9uZW50LnByb3RvdHlwZS5zZXRTdGF0ZSA9IGZ1bmN0aW9uKHVwZGF0ZSwgY2FsbGJhY2spIHtcclxuXHQvLyBvbmx5IGNsb25lIHN0YXRlIHdoZW4gY29weWluZyB0byBuZXh0U3RhdGUgdGhlIGZpcnN0IHRpbWUuXHJcblx0bGV0IHM7XHJcblx0aWYgKHRoaXMuX25leHRTdGF0ZSAhPSBudWxsICYmIHRoaXMuX25leHRTdGF0ZSAhPT0gdGhpcy5zdGF0ZSkge1xyXG5cdFx0cyA9IHRoaXMuX25leHRTdGF0ZTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0cyA9IHRoaXMuX25leHRTdGF0ZSA9IGFzc2lnbih7fSwgdGhpcy5zdGF0ZSk7XHJcblx0fVxyXG5cclxuXHRpZiAodHlwZW9mIHVwZGF0ZSA9PSAnZnVuY3Rpb24nKSB7XHJcblx0XHQvLyBTb21lIGxpYnJhcmllcyBsaWtlIGBpbW1lcmAgbWFyayB0aGUgY3VycmVudCBzdGF0ZSBhcyByZWFkb25seSxcclxuXHRcdC8vIHByZXZlbnRpbmcgdXMgZnJvbSBtdXRhdGluZyBpdCwgc28gd2UgbmVlZCB0byBjbG9uZSBpdC4gU2VlICMyNzE2XHJcblx0XHR1cGRhdGUgPSB1cGRhdGUoYXNzaWduKHt9LCBzKSwgdGhpcy5wcm9wcyk7XHJcblx0fVxyXG5cclxuXHRpZiAodXBkYXRlKSB7XHJcblx0XHRhc3NpZ24ocywgdXBkYXRlKTtcclxuXHR9XHJcblxyXG5cdC8vIFNraXAgdXBkYXRlIGlmIHVwZGF0ZXIgZnVuY3Rpb24gcmV0dXJuZWQgbnVsbFxyXG5cdGlmICh1cGRhdGUgPT0gbnVsbCkgcmV0dXJuO1xyXG5cclxuXHRpZiAodGhpcy5fdm5vZGUpIHtcclxuXHRcdGlmIChjYWxsYmFjaykgdGhpcy5fcmVuZGVyQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xyXG5cdFx0ZW5xdWV1ZVJlbmRlcih0aGlzKTtcclxuXHR9XHJcbn07XHJcblxyXG4vKipcclxuICogSW1tZWRpYXRlbHkgcGVyZm9ybSBhIHN5bmNocm9ub3VzIHJlLXJlbmRlciBvZiB0aGUgY29tcG9uZW50XHJcbiAqIEB0aGlzIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5Db21wb25lbnR9XHJcbiAqIEBwYXJhbSB7KCkgPT4gdm9pZH0gW2NhbGxiYWNrXSBBIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBhZnRlciBjb21wb25lbnQgaXNcclxuICogcmUtcmVuZGVyZWRcclxuICovXHJcbkNvbXBvbmVudC5wcm90b3R5cGUuZm9yY2VVcGRhdGUgPSBmdW5jdGlvbihjYWxsYmFjaykge1xyXG5cdGlmICh0aGlzLl92bm9kZSkge1xyXG5cdFx0Ly8gU2V0IHJlbmRlciBtb2RlIHNvIHRoYXQgd2UgY2FuIGRpZmZlcmVudGlhdGUgd2hlcmUgdGhlIHJlbmRlciByZXF1ZXN0XHJcblx0XHQvLyBpcyBjb21pbmcgZnJvbS4gV2UgbmVlZCB0aGlzIGJlY2F1c2UgZm9yY2VVcGRhdGUgc2hvdWxkIG5ldmVyIGNhbGxcclxuXHRcdC8vIHNob3VsZENvbXBvbmVudFVwZGF0ZVxyXG5cdFx0dGhpcy5fZm9yY2UgPSB0cnVlO1xyXG5cdFx0aWYgKGNhbGxiYWNrKSB0aGlzLl9yZW5kZXJDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XHJcblx0XHRlbnF1ZXVlUmVuZGVyKHRoaXMpO1xyXG5cdH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBBY2NlcHRzIGBwcm9wc2AgYW5kIGBzdGF0ZWAsIGFuZCByZXR1cm5zIGEgbmV3IFZpcnR1YWwgRE9NIHRyZWUgdG8gYnVpbGQuXHJcbiAqIFZpcnR1YWwgRE9NIGlzIGdlbmVyYWxseSBjb25zdHJ1Y3RlZCB2aWEgW0pTWF0oaHR0cDovL2phc29uZm9ybWF0LmNvbS93dGYtaXMtanN4KS5cclxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzIFByb3BzIChlZzogSlNYIGF0dHJpYnV0ZXMpIHJlY2VpdmVkIGZyb20gcGFyZW50XHJcbiAqIGVsZW1lbnQvY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBzdGF0ZSBUaGUgY29tcG9uZW50J3MgY3VycmVudCBzdGF0ZVxyXG4gKiBAcGFyYW0ge29iamVjdH0gY29udGV4dCBDb250ZXh0IG9iamVjdCwgYXMgcmV0dXJuZWQgYnkgdGhlIG5lYXJlc3RcclxuICogYW5jZXN0b3IncyBgZ2V0Q2hpbGRDb250ZXh0KClgXHJcbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4vaW5kZXgnKS5Db21wb25lbnRDaGlsZHJlbiB8IHZvaWR9XHJcbiAqL1xyXG5Db21wb25lbnQucHJvdG90eXBlLnJlbmRlciA9IEZyYWdtZW50O1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuVk5vZGV9IHZub2RlXHJcbiAqIEBwYXJhbSB7bnVtYmVyIHwgbnVsbH0gW2NoaWxkSW5kZXhdXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9tU2libGluZyh2bm9kZSwgY2hpbGRJbmRleCkge1xyXG5cdGlmIChjaGlsZEluZGV4ID09IG51bGwpIHtcclxuXHRcdC8vIFVzZSBjaGlsZEluZGV4PT1udWxsIGFzIGEgc2lnbmFsIHRvIHJlc3VtZSB0aGUgc2VhcmNoIGZyb20gdGhlIHZub2RlJ3Mgc2libGluZ1xyXG5cdFx0cmV0dXJuIHZub2RlLl9wYXJlbnRcclxuXHRcdFx0PyBnZXREb21TaWJsaW5nKHZub2RlLl9wYXJlbnQsIHZub2RlLl9wYXJlbnQuX2NoaWxkcmVuLmluZGV4T2Yodm5vZGUpICsgMSlcclxuXHRcdFx0OiBudWxsO1xyXG5cdH1cclxuXHJcblx0bGV0IHNpYmxpbmc7XHJcblx0Zm9yICg7IGNoaWxkSW5kZXggPCB2bm9kZS5fY2hpbGRyZW4ubGVuZ3RoOyBjaGlsZEluZGV4KyspIHtcclxuXHRcdHNpYmxpbmcgPSB2bm9kZS5fY2hpbGRyZW5bY2hpbGRJbmRleF07XHJcblxyXG5cdFx0aWYgKHNpYmxpbmcgIT0gbnVsbCAmJiBzaWJsaW5nLl9kb20gIT0gbnVsbCkge1xyXG5cdFx0XHQvLyBTaW5jZSB1cGRhdGVQYXJlbnREb21Qb2ludGVycyBrZWVwcyBfZG9tIHBvaW50ZXIgY29ycmVjdCxcclxuXHRcdFx0Ly8gd2UgY2FuIHJlbHkgb24gX2RvbSB0byB0ZWxsIHVzIGlmIHRoaXMgc3VidHJlZSBjb250YWlucyBhXHJcblx0XHRcdC8vIHJlbmRlcmVkIERPTSBub2RlLCBhbmQgd2hhdCB0aGUgZmlyc3QgcmVuZGVyZWQgRE9NIG5vZGUgaXNcclxuXHRcdFx0cmV0dXJuIHNpYmxpbmcuX2RvbTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIElmIHdlIGdldCBoZXJlLCB3ZSBoYXZlIG5vdCBmb3VuZCBhIERPTSBub2RlIGluIHRoaXMgdm5vZGUncyBjaGlsZHJlbi5cclxuXHQvLyBXZSBtdXN0IHJlc3VtZSBmcm9tIHRoaXMgdm5vZGUncyBzaWJsaW5nIChpbiBpdCdzIHBhcmVudCBfY2hpbGRyZW4gYXJyYXkpXHJcblx0Ly8gT25seSBjbGltYiB1cCBhbmQgc2VhcmNoIHRoZSBwYXJlbnQgaWYgd2UgYXJlbid0IHNlYXJjaGluZyB0aHJvdWdoIGEgRE9NXHJcblx0Ly8gVk5vZGUgKG1lYW5pbmcgd2UgcmVhY2hlZCB0aGUgRE9NIHBhcmVudCBvZiB0aGUgb3JpZ2luYWwgdm5vZGUgdGhhdCBiZWdhblxyXG5cdC8vIHRoZSBzZWFyY2gpXHJcblx0cmV0dXJuIHR5cGVvZiB2bm9kZS50eXBlID09ICdmdW5jdGlvbicgPyBnZXREb21TaWJsaW5nKHZub2RlKSA6IG51bGw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUcmlnZ2VyIGluLXBsYWNlIHJlLXJlbmRlcmluZyBvZiBhIGNvbXBvbmVudC5cclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5Db21wb25lbnR9IGNvbXBvbmVudCBUaGUgY29tcG9uZW50IHRvIHJlcmVuZGVyXHJcbiAqL1xyXG5mdW5jdGlvbiByZW5kZXJDb21wb25lbnQoY29tcG9uZW50KSB7XHJcblx0bGV0IHZub2RlID0gY29tcG9uZW50Ll92bm9kZSxcclxuXHRcdG9sZERvbSA9IHZub2RlLl9kb20sXHJcblx0XHRwYXJlbnREb20gPSBjb21wb25lbnQuX3BhcmVudERvbTtcclxuXHJcblx0aWYgKHBhcmVudERvbSkge1xyXG5cdFx0bGV0IGNvbW1pdFF1ZXVlID0gW107XHJcblx0XHRjb25zdCBvbGRWTm9kZSA9IGFzc2lnbih7fSwgdm5vZGUpO1xyXG5cdFx0b2xkVk5vZGUuX29yaWdpbmFsID0gdm5vZGUuX29yaWdpbmFsICsgMTtcclxuXHJcblx0XHRkaWZmKFxyXG5cdFx0XHRwYXJlbnREb20sXHJcblx0XHRcdHZub2RlLFxyXG5cdFx0XHRvbGRWTm9kZSxcclxuXHRcdFx0Y29tcG9uZW50Ll9nbG9iYWxDb250ZXh0LFxyXG5cdFx0XHRwYXJlbnREb20ub3duZXJTVkdFbGVtZW50ICE9PSB1bmRlZmluZWQsXHJcblx0XHRcdHZub2RlLl9oeWRyYXRpbmcgIT0gbnVsbCA/IFtvbGREb21dIDogbnVsbCxcclxuXHRcdFx0Y29tbWl0UXVldWUsXHJcblx0XHRcdG9sZERvbSA9PSBudWxsID8gZ2V0RG9tU2libGluZyh2bm9kZSkgOiBvbGREb20sXHJcblx0XHRcdHZub2RlLl9oeWRyYXRpbmdcclxuXHRcdCk7XHJcblx0XHRjb21taXRSb290KGNvbW1pdFF1ZXVlLCB2bm9kZSk7XHJcblxyXG5cdFx0aWYgKHZub2RlLl9kb20gIT0gb2xkRG9tKSB7XHJcblx0XHRcdHVwZGF0ZVBhcmVudERvbVBvaW50ZXJzKHZub2RlKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlZOb2RlfSB2bm9kZVxyXG4gKi9cclxuZnVuY3Rpb24gdXBkYXRlUGFyZW50RG9tUG9pbnRlcnModm5vZGUpIHtcclxuXHRpZiAoKHZub2RlID0gdm5vZGUuX3BhcmVudCkgIT0gbnVsbCAmJiB2bm9kZS5fY29tcG9uZW50ICE9IG51bGwpIHtcclxuXHRcdHZub2RlLl9kb20gPSB2bm9kZS5fY29tcG9uZW50LmJhc2UgPSBudWxsO1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB2bm9kZS5fY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0bGV0IGNoaWxkID0gdm5vZGUuX2NoaWxkcmVuW2ldO1xyXG5cdFx0XHRpZiAoY2hpbGQgIT0gbnVsbCAmJiBjaGlsZC5fZG9tICE9IG51bGwpIHtcclxuXHRcdFx0XHR2bm9kZS5fZG9tID0gdm5vZGUuX2NvbXBvbmVudC5iYXNlID0gY2hpbGQuX2RvbTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB1cGRhdGVQYXJlbnREb21Qb2ludGVycyh2bm9kZSk7XHJcblx0fVxyXG59XHJcblxyXG4vKipcclxuICogVGhlIHJlbmRlciBxdWV1ZVxyXG4gKiBAdHlwZSB7QXJyYXk8aW1wb3J0KCcuL2ludGVybmFsJykuQ29tcG9uZW50Pn1cclxuICovXHJcbmxldCByZXJlbmRlclF1ZXVlID0gW107XHJcblxyXG4vKipcclxuICogQXN5bmNocm9ub3VzbHkgc2NoZWR1bGUgYSBjYWxsYmFja1xyXG4gKiBAdHlwZSB7KGNiOiAoKSA9PiB2b2lkKSA9PiB2b2lkfVxyXG4gKi9cclxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuLy8gTm90ZSB0aGUgZm9sbG93aW5nIGxpbmUgaXNuJ3QgdHJlZS1zaGFrZW4gYnkgcm9sbHVwIGN1eiBvZiByb2xsdXAvcm9sbHVwIzI1NjZcclxuY29uc3QgZGVmZXIgPVxyXG5cdHR5cGVvZiBQcm9taXNlID09ICdmdW5jdGlvbidcclxuXHRcdD8gUHJvbWlzZS5wcm90b3R5cGUudGhlbi5iaW5kKFByb21pc2UucmVzb2x2ZSgpKVxyXG5cdFx0OiBzZXRUaW1lb3V0O1xyXG5cclxuLypcclxuICogVGhlIHZhbHVlIG9mIGBDb21wb25lbnQuZGVib3VuY2VgIG11c3QgYXN5bmNocm9ub3VzbHkgaW52b2tlIHRoZSBwYXNzZWQgaW4gY2FsbGJhY2suIEl0IGlzXHJcbiAqIGltcG9ydGFudCB0aGF0IGNvbnRyaWJ1dG9ycyB0byBQcmVhY3QgY2FuIGNvbnNpc3RlbnRseSByZWFzb24gYWJvdXQgd2hhdCBjYWxscyB0byBgc2V0U3RhdGVgLCBldGMuXHJcbiAqIGRvLCBhbmQgd2hlbiB0aGVpciBlZmZlY3RzIHdpbGwgYmUgYXBwbGllZC4gU2VlIHRoZSBsaW5rcyBiZWxvdyBmb3Igc29tZSBmdXJ0aGVyIHJlYWRpbmcgb24gZGVzaWduaW5nXHJcbiAqIGFzeW5jaHJvbm91cyBBUElzLlxyXG4gKiAqIFtEZXNpZ25pbmcgQVBJcyBmb3IgQXN5bmNocm9ueV0oaHR0cHM6Ly9ibG9nLml6cy5tZS8yMDEzLzA4L2Rlc2lnbmluZy1hcGlzLWZvci1hc3luY2hyb255KVxyXG4gKiAqIFtDYWxsYmFja3Mgc3luY2hyb25vdXMgYW5kIGFzeW5jaHJvbm91c10oaHR0cHM6Ly9ibG9nLm9tZXRlci5jb20vMjAxMS8wNy8yNC9jYWxsYmFja3Mtc3luY2hyb25vdXMtYW5kLWFzeW5jaHJvbm91cy8pXHJcbiAqL1xyXG5cclxubGV0IHByZXZEZWJvdW5jZTtcclxuXHJcbi8qKlxyXG4gKiBFbnF1ZXVlIGEgcmVyZW5kZXIgb2YgYSBjb21wb25lbnRcclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5Db21wb25lbnR9IGMgVGhlIGNvbXBvbmVudCB0byByZXJlbmRlclxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGVucXVldWVSZW5kZXIoYykge1xyXG5cdGlmIChcclxuXHRcdCghYy5fZGlydHkgJiZcclxuXHRcdFx0KGMuX2RpcnR5ID0gdHJ1ZSkgJiZcclxuXHRcdFx0cmVyZW5kZXJRdWV1ZS5wdXNoKGMpICYmXHJcblx0XHRcdCFwcm9jZXNzLl9yZXJlbmRlckNvdW50KyspIHx8XHJcblx0XHRwcmV2RGVib3VuY2UgIT09IG9wdGlvbnMuZGVib3VuY2VSZW5kZXJpbmdcclxuXHQpIHtcclxuXHRcdHByZXZEZWJvdW5jZSA9IG9wdGlvbnMuZGVib3VuY2VSZW5kZXJpbmc7XHJcblx0XHQocHJldkRlYm91bmNlIHx8IGRlZmVyKShwcm9jZXNzKTtcclxuXHR9XHJcbn1cclxuXHJcbi8qKiBGbHVzaCB0aGUgcmVuZGVyIHF1ZXVlIGJ5IHJlcmVuZGVyaW5nIGFsbCBxdWV1ZWQgY29tcG9uZW50cyAqL1xyXG5mdW5jdGlvbiBwcm9jZXNzKCkge1xyXG5cdGxldCBxdWV1ZTtcclxuXHR3aGlsZSAoKHByb2Nlc3MuX3JlcmVuZGVyQ291bnQgPSByZXJlbmRlclF1ZXVlLmxlbmd0aCkpIHtcclxuXHRcdHF1ZXVlID0gcmVyZW5kZXJRdWV1ZS5zb3J0KChhLCBiKSA9PiBhLl92bm9kZS5fZGVwdGggLSBiLl92bm9kZS5fZGVwdGgpO1xyXG5cdFx0cmVyZW5kZXJRdWV1ZSA9IFtdO1xyXG5cdFx0Ly8gRG9uJ3QgdXBkYXRlIGByZW5kZXJDb3VudGAgeWV0LiBLZWVwIGl0cyB2YWx1ZSBub24temVybyB0byBwcmV2ZW50IHVubmVjZXNzYXJ5XHJcblx0XHQvLyBwcm9jZXNzKCkgY2FsbHMgZnJvbSBnZXR0aW5nIHNjaGVkdWxlZCB3aGlsZSBgcXVldWVgIGlzIHN0aWxsIGJlaW5nIGNvbnN1bWVkLlxyXG5cdFx0cXVldWUuc29tZShjID0+IHtcclxuXHRcdFx0aWYgKGMuX2RpcnR5KSByZW5kZXJDb21wb25lbnQoYyk7XHJcblx0XHR9KTtcclxuXHR9XHJcbn1cclxucHJvY2Vzcy5fcmVyZW5kZXJDb3VudCA9IDA7XHJcbiIsICJpbXBvcnQgeyBlbnF1ZXVlUmVuZGVyIH0gZnJvbSAnLi9jb21wb25lbnQnO1xyXG5cclxuZXhwb3J0IGxldCBpID0gMDtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY29udGV4dElkKSB7XHJcblx0Y29udGV4dElkID0gJ19fY0MnICsgaSsrO1xyXG5cclxuXHRjb25zdCBjb250ZXh0ID0ge1xyXG5cdFx0X2lkOiBjb250ZXh0SWQsXHJcblx0XHRfZGVmYXVsdFZhbHVlOiBkZWZhdWx0VmFsdWUsXHJcblx0XHQvKiogQHR5cGUge2ltcG9ydCgnLi9pbnRlcm5hbCcpLkZ1bmN0aW9uQ29tcG9uZW50fSAqL1xyXG5cdFx0Q29uc3VtZXIocHJvcHMsIGNvbnRleHRWYWx1ZSkge1xyXG5cdFx0XHQvLyByZXR1cm4gcHJvcHMuY2hpbGRyZW4oXHJcblx0XHRcdC8vIFx0Y29udGV4dFtjb250ZXh0SWRdID8gY29udGV4dFtjb250ZXh0SWRdLnByb3BzLnZhbHVlIDogZGVmYXVsdFZhbHVlXHJcblx0XHRcdC8vICk7XHJcblx0XHRcdHJldHVybiBwcm9wcy5jaGlsZHJlbihjb250ZXh0VmFsdWUpO1xyXG5cdFx0fSxcclxuXHRcdC8qKiBAdHlwZSB7aW1wb3J0KCcuL2ludGVybmFsJykuRnVuY3Rpb25Db21wb25lbnR9ICovXHJcblx0XHRQcm92aWRlcihwcm9wcykge1xyXG5cdFx0XHRpZiAoIXRoaXMuZ2V0Q2hpbGRDb250ZXh0KSB7XHJcblx0XHRcdFx0bGV0IHN1YnMgPSBbXTtcclxuXHRcdFx0XHRsZXQgY3R4ID0ge307XHJcblx0XHRcdFx0Y3R4W2NvbnRleHRJZF0gPSB0aGlzO1xyXG5cclxuXHRcdFx0XHR0aGlzLmdldENoaWxkQ29udGV4dCA9ICgpID0+IGN0eDtcclxuXHJcblx0XHRcdFx0dGhpcy5zaG91bGRDb21wb25lbnRVcGRhdGUgPSBmdW5jdGlvbihfcHJvcHMpIHtcclxuXHRcdFx0XHRcdGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBfcHJvcHMudmFsdWUpIHtcclxuXHRcdFx0XHRcdFx0Ly8gSSB0aGluayB0aGUgZm9yY2VkIHZhbHVlIHByb3BhZ2F0aW9uIGhlcmUgd2FzIG9ubHkgbmVlZGVkIHdoZW4gYG9wdGlvbnMuZGVib3VuY2VSZW5kZXJpbmdgIHdhcyBiZWluZyBieXBhc3NlZDpcclxuXHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL3ByZWFjdGpzL3ByZWFjdC9jb21taXQvNGQzMzlmYjgwM2JlYTA5ZTlmMTk4YWJmMzhjYTFiZjhlYTRiNzc3MSNkaWZmLTU0NjgyY2UzODA5MzVhNzE3ZTQxYjhiZmM1NDczN2Y2UjM1OFxyXG5cdFx0XHRcdFx0XHQvLyBJbiB0aG9zZSBjYXNlcyB0aG91Z2gsIGV2ZW4gd2l0aCB0aGUgdmFsdWUgY29ycmVjdGVkLCB3ZSdyZSBkb3VibGUtcmVuZGVyaW5nIGFsbCBub2Rlcy5cclxuXHRcdFx0XHRcdFx0Ly8gSXQgbWlnaHQgYmUgYmV0dGVyIHRvIGp1c3QgdGVsbCBmb2xrcyBub3QgdG8gdXNlIGZvcmNlLXN5bmMgbW9kZS5cclxuXHRcdFx0XHRcdFx0Ly8gQ3VycmVudGx5LCB1c2luZyBgdXNlQ29udGV4dCgpYCBpbiBhIGNsYXNzIGNvbXBvbmVudCB3aWxsIG92ZXJ3cml0ZSBpdHMgYHRoaXMuY29udGV4dGAgdmFsdWUuXHJcblx0XHRcdFx0XHRcdC8vIHN1YnMuc29tZShjID0+IHtcclxuXHRcdFx0XHRcdFx0Ly8gXHRjLmNvbnRleHQgPSBfcHJvcHMudmFsdWU7XHJcblx0XHRcdFx0XHRcdC8vIFx0ZW5xdWV1ZVJlbmRlcihjKTtcclxuXHRcdFx0XHRcdFx0Ly8gfSk7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBzdWJzLnNvbWUoYyA9PiB7XHJcblx0XHRcdFx0XHRcdC8vIFx0Yy5jb250ZXh0W2NvbnRleHRJZF0gPSBfcHJvcHMudmFsdWU7XHJcblx0XHRcdFx0XHRcdC8vIFx0ZW5xdWV1ZVJlbmRlcihjKTtcclxuXHRcdFx0XHRcdFx0Ly8gfSk7XHJcblx0XHRcdFx0XHRcdHN1YnMuc29tZShlbnF1ZXVlUmVuZGVyKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9O1xyXG5cclxuXHRcdFx0XHR0aGlzLnN1YiA9IGMgPT4ge1xyXG5cdFx0XHRcdFx0c3Vicy5wdXNoKGMpO1xyXG5cdFx0XHRcdFx0bGV0IG9sZCA9IGMuY29tcG9uZW50V2lsbFVubW91bnQ7XHJcblx0XHRcdFx0XHRjLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRzdWJzLnNwbGljZShzdWJzLmluZGV4T2YoYyksIDEpO1xyXG5cdFx0XHRcdFx0XHRpZiAob2xkKSBvbGQuY2FsbChjKTtcclxuXHRcdFx0XHRcdH07XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIHByb3BzLmNoaWxkcmVuO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdC8vIERldnRvb2xzIG5lZWRzIGFjY2VzcyB0byB0aGUgY29udGV4dCBvYmplY3Qgd2hlbiBpdFxyXG5cdC8vIGVuY291bnRlcnMgYSBQcm92aWRlci4gVGhpcyBpcyBuZWNlc3NhcnkgdG8gc3VwcG9ydFxyXG5cdC8vIHNldHRpbmcgYGRpc3BsYXlOYW1lYCBvbiB0aGUgY29udGV4dCBvYmplY3QgaW5zdGVhZFxyXG5cdC8vIG9mIG9uIHRoZSBjb21wb25lbnQgaXRzZWxmLiBTZWU6XHJcblx0Ly8gaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2NvbnRleHQuaHRtbCNjb250ZXh0ZGlzcGxheW5hbWVcclxuXHJcblx0cmV0dXJuIChjb250ZXh0LlByb3ZpZGVyLl9jb250ZXh0UmVmID0gY29udGV4dC5Db25zdW1lci5jb250ZXh0VHlwZSA9IGNvbnRleHQpO1xyXG59XHJcbiIsICJpbXBvcnQgeyBkaWZmLCB1bm1vdW50LCBhcHBseVJlZiB9IGZyb20gJy4vaW5kZXgnO1xyXG5pbXBvcnQgeyBjcmVhdGVWTm9kZSwgRnJhZ21lbnQgfSBmcm9tICcuLi9jcmVhdGUtZWxlbWVudCc7XHJcbmltcG9ydCB7IEVNUFRZX09CSiwgRU1QVFlfQVJSIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcclxuaW1wb3J0IHsgZ2V0RG9tU2libGluZyB9IGZyb20gJy4uL2NvbXBvbmVudCc7XHJcblxyXG4vKipcclxuICogRGlmZiB0aGUgY2hpbGRyZW4gb2YgYSB2aXJ0dWFsIG5vZGVcclxuICogQHBhcmFtIHtpbXBvcnQoJy4uL2ludGVybmFsJykuUHJlYWN0RWxlbWVudH0gcGFyZW50RG9tIFRoZSBET00gZWxlbWVudCB3aG9zZVxyXG4gKiBjaGlsZHJlbiBhcmUgYmVpbmcgZGlmZmVkXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLkNvbXBvbmVudENoaWxkcmVuW119IHJlbmRlclJlc3VsdFxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW50ZXJuYWwnKS5WTm9kZX0gbmV3UGFyZW50Vk5vZGUgVGhlIG5ldyB2aXJ0dWFsXHJcbiAqIG5vZGUgd2hvc2UgY2hpbGRyZW4gc2hvdWxkIGJlIGRpZmYnZWQgYWdhaW5zdCBvbGRQYXJlbnRWTm9kZVxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW50ZXJuYWwnKS5WTm9kZX0gb2xkUGFyZW50Vk5vZGUgVGhlIG9sZCB2aXJ0dWFsXHJcbiAqIG5vZGUgd2hvc2UgY2hpbGRyZW4gc2hvdWxkIGJlIGRpZmYnZWQgYWdhaW5zdCBuZXdQYXJlbnRWTm9kZVxyXG4gKiBAcGFyYW0ge29iamVjdH0gZ2xvYmFsQ29udGV4dCBUaGUgY3VycmVudCBjb250ZXh0IG9iamVjdCAtIG1vZGlmaWVkIGJ5IGdldENoaWxkQ29udGV4dFxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzU3ZnIFdoZXRoZXIgb3Igbm90IHRoaXMgRE9NIG5vZGUgaXMgYW4gU1ZHIG5vZGVcclxuICogQHBhcmFtIHtBcnJheTxpbXBvcnQoJy4uL2ludGVybmFsJykuUHJlYWN0RWxlbWVudD59IGV4Y2Vzc0RvbUNoaWxkcmVuXHJcbiAqIEBwYXJhbSB7QXJyYXk8aW1wb3J0KCcuLi9pbnRlcm5hbCcpLkNvbXBvbmVudD59IGNvbW1pdFF1ZXVlIExpc3Qgb2YgY29tcG9uZW50c1xyXG4gKiB3aGljaCBoYXZlIGNhbGxiYWNrcyB0byBpbnZva2UgaW4gY29tbWl0Um9vdFxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW50ZXJuYWwnKS5QcmVhY3RFbGVtZW50fSBvbGREb20gVGhlIGN1cnJlbnQgYXR0YWNoZWQgRE9NXHJcbiAqIGVsZW1lbnQgYW55IG5ldyBkb20gZWxlbWVudHMgc2hvdWxkIGJlIHBsYWNlZCBhcm91bmQuIExpa2VseSBgbnVsbGAgb24gZmlyc3RcclxuICogcmVuZGVyIChleGNlcHQgd2hlbiBoeWRyYXRpbmcpLiBDYW4gYmUgYSBzaWJsaW5nIERPTSBlbGVtZW50IHdoZW4gZGlmZmluZ1xyXG4gKiBGcmFnbWVudHMgdGhhdCBoYXZlIHNpYmxpbmdzLiBJbiBtb3N0IGNhc2VzLCBpdCBzdGFydHMgb3V0IGFzIGBvbGRDaGlsZHJlblswXS5fZG9tYC5cclxuICogQHBhcmFtIHtib29sZWFufSBpc0h5ZHJhdGluZyBXaGV0aGVyIG9yIG5vdCB3ZSBhcmUgaW4gaHlkcmF0aW9uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZGlmZkNoaWxkcmVuKFxyXG5cdHBhcmVudERvbSxcclxuXHRyZW5kZXJSZXN1bHQsXHJcblx0bmV3UGFyZW50Vk5vZGUsXHJcblx0b2xkUGFyZW50Vk5vZGUsXHJcblx0Z2xvYmFsQ29udGV4dCxcclxuXHRpc1N2ZyxcclxuXHRleGNlc3NEb21DaGlsZHJlbixcclxuXHRjb21taXRRdWV1ZSxcclxuXHRvbGREb20sXHJcblx0aXNIeWRyYXRpbmdcclxuKSB7XHJcblx0bGV0IGksIGosIG9sZFZOb2RlLCBjaGlsZFZOb2RlLCBuZXdEb20sIGZpcnN0Q2hpbGREb20sIHJlZnM7XHJcblxyXG5cdC8vIFRoaXMgaXMgYSBjb21wcmVzc2lvbiBvZiBvbGRQYXJlbnRWTm9kZSE9bnVsbCAmJiBvbGRQYXJlbnRWTm9kZSAhPSBFTVBUWV9PQkogJiYgb2xkUGFyZW50Vk5vZGUuX2NoaWxkcmVuIHx8IEVNUFRZX0FSUlxyXG5cdC8vIGFzIEVNUFRZX09CSi5fY2hpbGRyZW4gc2hvdWxkIGJlIGB1bmRlZmluZWRgLlxyXG5cdGxldCBvbGRDaGlsZHJlbiA9IChvbGRQYXJlbnRWTm9kZSAmJiBvbGRQYXJlbnRWTm9kZS5fY2hpbGRyZW4pIHx8IEVNUFRZX0FSUjtcclxuXHJcblx0bGV0IG9sZENoaWxkcmVuTGVuZ3RoID0gb2xkQ2hpbGRyZW4ubGVuZ3RoO1xyXG5cclxuXHRuZXdQYXJlbnRWTm9kZS5fY2hpbGRyZW4gPSBbXTtcclxuXHRmb3IgKGkgPSAwOyBpIDwgcmVuZGVyUmVzdWx0Lmxlbmd0aDsgaSsrKSB7XHJcblx0XHRjaGlsZFZOb2RlID0gcmVuZGVyUmVzdWx0W2ldO1xyXG5cclxuXHRcdGlmIChjaGlsZFZOb2RlID09IG51bGwgfHwgdHlwZW9mIGNoaWxkVk5vZGUgPT0gJ2Jvb2xlYW4nKSB7XHJcblx0XHRcdGNoaWxkVk5vZGUgPSBuZXdQYXJlbnRWTm9kZS5fY2hpbGRyZW5baV0gPSBudWxsO1xyXG5cdFx0fVxyXG5cdFx0Ly8gSWYgdGhpcyBuZXdWTm9kZSBpcyBiZWluZyByZXVzZWQgKGUuZy4gPGRpdj57cmV1c2V9e3JldXNlfTwvZGl2PikgaW4gdGhlIHNhbWUgZGlmZixcclxuXHRcdC8vIG9yIHdlIGFyZSByZW5kZXJpbmcgYSBjb21wb25lbnQgKGUuZy4gc2V0U3RhdGUpIGNvcHkgdGhlIG9sZFZOb2RlcyBzbyBpdCBjYW4gaGF2ZVxyXG5cdFx0Ly8gaXQncyBvd24gRE9NICYgZXRjLiBwb2ludGVyc1xyXG5cdFx0ZWxzZSBpZiAoXHJcblx0XHRcdHR5cGVvZiBjaGlsZFZOb2RlID09ICdzdHJpbmcnIHx8XHJcblx0XHRcdHR5cGVvZiBjaGlsZFZOb2RlID09ICdudW1iZXInIHx8XHJcblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB2YWxpZC10eXBlb2ZcclxuXHRcdFx0dHlwZW9mIGNoaWxkVk5vZGUgPT0gJ2JpZ2ludCdcclxuXHRcdCkge1xyXG5cdFx0XHRjaGlsZFZOb2RlID0gbmV3UGFyZW50Vk5vZGUuX2NoaWxkcmVuW2ldID0gY3JlYXRlVk5vZGUoXHJcblx0XHRcdFx0bnVsbCxcclxuXHRcdFx0XHRjaGlsZFZOb2RlLFxyXG5cdFx0XHRcdG51bGwsXHJcblx0XHRcdFx0bnVsbCxcclxuXHRcdFx0XHRjaGlsZFZOb2RlXHJcblx0XHRcdCk7XHJcblx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRWTm9kZSkpIHtcclxuXHRcdFx0Y2hpbGRWTm9kZSA9IG5ld1BhcmVudFZOb2RlLl9jaGlsZHJlbltpXSA9IGNyZWF0ZVZOb2RlKFxyXG5cdFx0XHRcdEZyYWdtZW50LFxyXG5cdFx0XHRcdHsgY2hpbGRyZW46IGNoaWxkVk5vZGUgfSxcclxuXHRcdFx0XHRudWxsLFxyXG5cdFx0XHRcdG51bGwsXHJcblx0XHRcdFx0bnVsbFxyXG5cdFx0XHQpO1xyXG5cdFx0fSBlbHNlIGlmIChjaGlsZFZOb2RlLl9kZXB0aCA+IDApIHtcclxuXHRcdFx0Ly8gVk5vZGUgaXMgYWxyZWFkeSBpbiB1c2UsIGNsb25lIGl0LiBUaGlzIGNhbiBoYXBwZW4gaW4gdGhlIGZvbGxvd2luZ1xyXG5cdFx0XHQvLyBzY2VuYXJpbzpcclxuXHRcdFx0Ly8gICBjb25zdCByZXVzZSA9IDxkaXYgLz5cclxuXHRcdFx0Ly8gICA8ZGl2PntyZXVzZX08c3BhbiAvPntyZXVzZX08L2Rpdj5cclxuXHRcdFx0Y2hpbGRWTm9kZSA9IG5ld1BhcmVudFZOb2RlLl9jaGlsZHJlbltpXSA9IGNyZWF0ZVZOb2RlKFxyXG5cdFx0XHRcdGNoaWxkVk5vZGUudHlwZSxcclxuXHRcdFx0XHRjaGlsZFZOb2RlLnByb3BzLFxyXG5cdFx0XHRcdGNoaWxkVk5vZGUua2V5LFxyXG5cdFx0XHRcdG51bGwsXHJcblx0XHRcdFx0Y2hpbGRWTm9kZS5fb3JpZ2luYWxcclxuXHRcdFx0KTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGNoaWxkVk5vZGUgPSBuZXdQYXJlbnRWTm9kZS5fY2hpbGRyZW5baV0gPSBjaGlsZFZOb2RlO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFRlcnNlciByZW1vdmVzIHRoZSBgY29udGludWVgIGhlcmUgYW5kIHdyYXBzIHRoZSBsb29wIGJvZHlcclxuXHRcdC8vIGluIGEgYGlmIChjaGlsZFZOb2RlKSB7IC4uLiB9IGNvbmRpdGlvblxyXG5cdFx0aWYgKGNoaWxkVk5vZGUgPT0gbnVsbCkge1xyXG5cdFx0XHRjb250aW51ZTtcclxuXHRcdH1cclxuXHJcblx0XHRjaGlsZFZOb2RlLl9wYXJlbnQgPSBuZXdQYXJlbnRWTm9kZTtcclxuXHRcdGNoaWxkVk5vZGUuX2RlcHRoID0gbmV3UGFyZW50Vk5vZGUuX2RlcHRoICsgMTtcclxuXHJcblx0XHQvLyBDaGVjayBpZiB3ZSBmaW5kIGEgY29ycmVzcG9uZGluZyBlbGVtZW50IGluIG9sZENoaWxkcmVuLlxyXG5cdFx0Ly8gSWYgZm91bmQsIGRlbGV0ZSB0aGUgYXJyYXkgaXRlbSBieSBzZXR0aW5nIHRvIGB1bmRlZmluZWRgLlxyXG5cdFx0Ly8gV2UgdXNlIGB1bmRlZmluZWRgLCBhcyBgbnVsbGAgaXMgcmVzZXJ2ZWQgZm9yIGVtcHR5IHBsYWNlaG9sZGVyc1xyXG5cdFx0Ly8gKGhvbGVzKS5cclxuXHRcdG9sZFZOb2RlID0gb2xkQ2hpbGRyZW5baV07XHJcblxyXG5cdFx0aWYgKFxyXG5cdFx0XHRvbGRWTm9kZSA9PT0gbnVsbCB8fFxyXG5cdFx0XHQob2xkVk5vZGUgJiZcclxuXHRcdFx0XHRjaGlsZFZOb2RlLmtleSA9PSBvbGRWTm9kZS5rZXkgJiZcclxuXHRcdFx0XHRjaGlsZFZOb2RlLnR5cGUgPT09IG9sZFZOb2RlLnR5cGUpXHJcblx0XHQpIHtcclxuXHRcdFx0b2xkQ2hpbGRyZW5baV0gPSB1bmRlZmluZWQ7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHQvLyBFaXRoZXIgb2xkVk5vZGUgPT09IHVuZGVmaW5lZCBvciBvbGRDaGlsZHJlbkxlbmd0aCA+IDAsXHJcblx0XHRcdC8vIHNvIGFmdGVyIHRoaXMgbG9vcCBvbGRWTm9kZSA9PSBudWxsIG9yIG9sZFZOb2RlIGlzIGEgdmFsaWQgdmFsdWUuXHJcblx0XHRcdGZvciAoaiA9IDA7IGogPCBvbGRDaGlsZHJlbkxlbmd0aDsgaisrKSB7XHJcblx0XHRcdFx0b2xkVk5vZGUgPSBvbGRDaGlsZHJlbltqXTtcclxuXHRcdFx0XHQvLyBJZiBjaGlsZFZOb2RlIGlzIHVua2V5ZWQsIHdlIG9ubHkgbWF0Y2ggc2ltaWxhcmx5IHVua2V5ZWQgbm9kZXMsIG90aGVyd2lzZSB3ZSBtYXRjaCBieSBrZXkuXHJcblx0XHRcdFx0Ly8gV2UgYWx3YXlzIG1hdGNoIGJ5IHR5cGUgKGluIGVpdGhlciBjYXNlKS5cclxuXHRcdFx0XHRpZiAoXHJcblx0XHRcdFx0XHRvbGRWTm9kZSAmJlxyXG5cdFx0XHRcdFx0Y2hpbGRWTm9kZS5rZXkgPT0gb2xkVk5vZGUua2V5ICYmXHJcblx0XHRcdFx0XHRjaGlsZFZOb2RlLnR5cGUgPT09IG9sZFZOb2RlLnR5cGVcclxuXHRcdFx0XHQpIHtcclxuXHRcdFx0XHRcdG9sZENoaWxkcmVuW2pdID0gdW5kZWZpbmVkO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdG9sZFZOb2RlID0gbnVsbDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdG9sZFZOb2RlID0gb2xkVk5vZGUgfHwgRU1QVFlfT0JKO1xyXG5cclxuXHRcdC8vIE1vcnBoIHRoZSBvbGQgZWxlbWVudCBpbnRvIHRoZSBuZXcgb25lLCBidXQgZG9uJ3QgYXBwZW5kIGl0IHRvIHRoZSBkb20geWV0XHJcblx0XHRkaWZmKFxyXG5cdFx0XHRwYXJlbnREb20sXHJcblx0XHRcdGNoaWxkVk5vZGUsXHJcblx0XHRcdG9sZFZOb2RlLFxyXG5cdFx0XHRnbG9iYWxDb250ZXh0LFxyXG5cdFx0XHRpc1N2ZyxcclxuXHRcdFx0ZXhjZXNzRG9tQ2hpbGRyZW4sXHJcblx0XHRcdGNvbW1pdFF1ZXVlLFxyXG5cdFx0XHRvbGREb20sXHJcblx0XHRcdGlzSHlkcmF0aW5nXHJcblx0XHQpO1xyXG5cclxuXHRcdG5ld0RvbSA9IGNoaWxkVk5vZGUuX2RvbTtcclxuXHJcblx0XHRpZiAoKGogPSBjaGlsZFZOb2RlLnJlZikgJiYgb2xkVk5vZGUucmVmICE9IGopIHtcclxuXHRcdFx0aWYgKCFyZWZzKSByZWZzID0gW107XHJcblx0XHRcdGlmIChvbGRWTm9kZS5yZWYpIHJlZnMucHVzaChvbGRWTm9kZS5yZWYsIG51bGwsIGNoaWxkVk5vZGUpO1xyXG5cdFx0XHRyZWZzLnB1c2goaiwgY2hpbGRWTm9kZS5fY29tcG9uZW50IHx8IG5ld0RvbSwgY2hpbGRWTm9kZSk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKG5ld0RvbSAhPSBudWxsKSB7XHJcblx0XHRcdGlmIChmaXJzdENoaWxkRG9tID09IG51bGwpIHtcclxuXHRcdFx0XHRmaXJzdENoaWxkRG9tID0gbmV3RG9tO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoXHJcblx0XHRcdFx0dHlwZW9mIGNoaWxkVk5vZGUudHlwZSA9PSAnZnVuY3Rpb24nICYmXHJcblx0XHRcdFx0Y2hpbGRWTm9kZS5fY2hpbGRyZW4gPT09IG9sZFZOb2RlLl9jaGlsZHJlblxyXG5cdFx0XHQpIHtcclxuXHRcdFx0XHRjaGlsZFZOb2RlLl9uZXh0RG9tID0gb2xkRG9tID0gcmVvcmRlckNoaWxkcmVuKFxyXG5cdFx0XHRcdFx0Y2hpbGRWTm9kZSxcclxuXHRcdFx0XHRcdG9sZERvbSxcclxuXHRcdFx0XHRcdHBhcmVudERvbVxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0b2xkRG9tID0gcGxhY2VDaGlsZChcclxuXHRcdFx0XHRcdHBhcmVudERvbSxcclxuXHRcdFx0XHRcdGNoaWxkVk5vZGUsXHJcblx0XHRcdFx0XHRvbGRWTm9kZSxcclxuXHRcdFx0XHRcdG9sZENoaWxkcmVuLFxyXG5cdFx0XHRcdFx0bmV3RG9tLFxyXG5cdFx0XHRcdFx0b2xkRG9tXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKHR5cGVvZiBuZXdQYXJlbnRWTm9kZS50eXBlID09ICdmdW5jdGlvbicpIHtcclxuXHRcdFx0XHQvLyBCZWNhdXNlIHRoZSBuZXdQYXJlbnRWTm9kZSBpcyBGcmFnbWVudC1saWtlLCB3ZSBuZWVkIHRvIHNldCBpdCdzXHJcblx0XHRcdFx0Ly8gX25leHREb20gcHJvcGVydHkgdG8gdGhlIG5leHRTaWJsaW5nIG9mIGl0cyBsYXN0IGNoaWxkIERPTSBub2RlLlxyXG5cdFx0XHRcdC8vXHJcblx0XHRcdFx0Ly8gYG9sZERvbWAgY29udGFpbnMgdGhlIGNvcnJlY3QgdmFsdWUgaGVyZSBiZWNhdXNlIGlmIHRoZSBsYXN0IGNoaWxkXHJcblx0XHRcdFx0Ly8gaXMgYSBGcmFnbWVudC1saWtlLCB0aGVuIG9sZERvbSBoYXMgYWxyZWFkeSBiZWVuIHNldCB0byB0aGF0IGNoaWxkJ3MgX25leHREb20uXHJcblx0XHRcdFx0Ly8gSWYgdGhlIGxhc3QgY2hpbGQgaXMgYSBET00gVk5vZGUsIHRoZW4gb2xkRG9tIHdpbGwgYmUgc2V0IHRvIHRoYXQgRE9NXHJcblx0XHRcdFx0Ly8gbm9kZSdzIG5leHRTaWJsaW5nLlxyXG5cdFx0XHRcdG5ld1BhcmVudFZOb2RlLl9uZXh0RG9tID0gb2xkRG9tO1xyXG5cdFx0XHR9XHJcblx0XHR9IGVsc2UgaWYgKFxyXG5cdFx0XHRvbGREb20gJiZcclxuXHRcdFx0b2xkVk5vZGUuX2RvbSA9PSBvbGREb20gJiZcclxuXHRcdFx0b2xkRG9tLnBhcmVudE5vZGUgIT0gcGFyZW50RG9tXHJcblx0XHQpIHtcclxuXHRcdFx0Ly8gVGhlIGFib3ZlIGNvbmRpdGlvbiBpcyB0byBoYW5kbGUgbnVsbCBwbGFjZWhvbGRlcnMuIFNlZSB0ZXN0IGluIHBsYWNlaG9sZGVyLnRlc3QuanM6XHJcblx0XHRcdC8vIGBlZmZpY2llbnRseSByZXBsYWNlIG51bGwgcGxhY2Vob2xkZXJzIGluIHBhcmVudCByZXJlbmRlcnNgXHJcblx0XHRcdG9sZERvbSA9IGdldERvbVNpYmxpbmcob2xkVk5vZGUpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0bmV3UGFyZW50Vk5vZGUuX2RvbSA9IGZpcnN0Q2hpbGREb207XHJcblxyXG5cdC8vIFJlbW92ZSByZW1haW5pbmcgb2xkQ2hpbGRyZW4gaWYgdGhlcmUgYXJlIGFueS5cclxuXHRmb3IgKGkgPSBvbGRDaGlsZHJlbkxlbmd0aDsgaS0tOyApIHtcclxuXHRcdGlmIChvbGRDaGlsZHJlbltpXSAhPSBudWxsKSB7XHJcblx0XHRcdGlmIChcclxuXHRcdFx0XHR0eXBlb2YgbmV3UGFyZW50Vk5vZGUudHlwZSA9PSAnZnVuY3Rpb24nICYmXHJcblx0XHRcdFx0b2xkQ2hpbGRyZW5baV0uX2RvbSAhPSBudWxsICYmXHJcblx0XHRcdFx0b2xkQ2hpbGRyZW5baV0uX2RvbSA9PSBuZXdQYXJlbnRWTm9kZS5fbmV4dERvbVxyXG5cdFx0XHQpIHtcclxuXHRcdFx0XHQvLyBJZiB0aGUgbmV3UGFyZW50Vk5vZGUuX19uZXh0RG9tIHBvaW50cyB0byBhIGRvbSBub2RlIHRoYXQgaXMgYWJvdXQgdG9cclxuXHRcdFx0XHQvLyBiZSB1bm1vdW50ZWQsIHRoZW4gZ2V0IHRoZSBuZXh0IHNpYmxpbmcgb2YgdGhhdCB2bm9kZSBhbmQgc2V0XHJcblx0XHRcdFx0Ly8gX25leHREb20gdG8gaXRcclxuXHRcdFx0XHRuZXdQYXJlbnRWTm9kZS5fbmV4dERvbSA9IGdldERvbVNpYmxpbmcob2xkUGFyZW50Vk5vZGUsIGkgKyAxKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dW5tb3VudChvbGRDaGlsZHJlbltpXSwgb2xkQ2hpbGRyZW5baV0pO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gU2V0IHJlZnMgb25seSBhZnRlciB1bm1vdW50XHJcblx0aWYgKHJlZnMpIHtcclxuXHRcdGZvciAoaSA9IDA7IGkgPCByZWZzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGFwcGx5UmVmKHJlZnNbaV0sIHJlZnNbKytpXSwgcmVmc1srK2ldKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlb3JkZXJDaGlsZHJlbihjaGlsZFZOb2RlLCBvbGREb20sIHBhcmVudERvbSkge1xyXG5cdC8vIE5vdGU6IFZOb2RlcyBpbiBuZXN0ZWQgc3VzcGVuZGVkIHRyZWVzIG1heSBiZSBtaXNzaW5nIF9jaGlsZHJlbi5cclxuXHRsZXQgYyA9IGNoaWxkVk5vZGUuX2NoaWxkcmVuO1xyXG5cdGxldCB0bXAgPSAwO1xyXG5cdGZvciAoOyBjICYmIHRtcCA8IGMubGVuZ3RoOyB0bXArKykge1xyXG5cdFx0bGV0IHZub2RlID0gY1t0bXBdO1xyXG5cdFx0aWYgKHZub2RlKSB7XHJcblx0XHRcdC8vIFdlIHR5cGljYWxseSBlbnRlciB0aGlzIGNvZGUgcGF0aCBvbiBzQ1UgYmFpbG91dCwgd2hlcmUgd2UgY29weVxyXG5cdFx0XHQvLyBvbGRWTm9kZS5fY2hpbGRyZW4gdG8gbmV3Vk5vZGUuX2NoaWxkcmVuLiBJZiB0aGF0IGlzIHRoZSBjYXNlLCB3ZSBuZWVkXHJcblx0XHRcdC8vIHRvIHVwZGF0ZSB0aGUgb2xkIGNoaWxkcmVuJ3MgX3BhcmVudCBwb2ludGVyIHRvIHBvaW50IHRvIHRoZSBuZXdWTm9kZVxyXG5cdFx0XHQvLyAoY2hpbGRWTm9kZSBoZXJlKS5cclxuXHRcdFx0dm5vZGUuX3BhcmVudCA9IGNoaWxkVk5vZGU7XHJcblxyXG5cdFx0XHRpZiAodHlwZW9mIHZub2RlLnR5cGUgPT0gJ2Z1bmN0aW9uJykge1xyXG5cdFx0XHRcdG9sZERvbSA9IHJlb3JkZXJDaGlsZHJlbih2bm9kZSwgb2xkRG9tLCBwYXJlbnREb20pO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdG9sZERvbSA9IHBsYWNlQ2hpbGQoXHJcblx0XHRcdFx0XHRwYXJlbnREb20sXHJcblx0XHRcdFx0XHR2bm9kZSxcclxuXHRcdFx0XHRcdHZub2RlLFxyXG5cdFx0XHRcdFx0YyxcclxuXHRcdFx0XHRcdHZub2RlLl9kb20sXHJcblx0XHRcdFx0XHRvbGREb21cclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gb2xkRG9tO1xyXG59XHJcblxyXG4vKipcclxuICogRmxhdHRlbiBhbmQgbG9vcCB0aHJvdWdoIHRoZSBjaGlsZHJlbiBvZiBhIHZpcnR1YWwgbm9kZVxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW5kZXgnKS5Db21wb25lbnRDaGlsZHJlbn0gY2hpbGRyZW4gVGhlIHVuZmxhdHRlbmVkXHJcbiAqIGNoaWxkcmVuIG9mIGEgdmlydHVhbCBub2RlXHJcbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4uL2ludGVybmFsJykuVk5vZGVbXX1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0b0NoaWxkQXJyYXkoY2hpbGRyZW4sIG91dCkge1xyXG5cdG91dCA9IG91dCB8fCBbXTtcclxuXHRpZiAoY2hpbGRyZW4gPT0gbnVsbCB8fCB0eXBlb2YgY2hpbGRyZW4gPT0gJ2Jvb2xlYW4nKSB7XHJcblx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSkge1xyXG5cdFx0Y2hpbGRyZW4uc29tZShjaGlsZCA9PiB7XHJcblx0XHRcdHRvQ2hpbGRBcnJheShjaGlsZCwgb3V0KTtcclxuXHRcdH0pO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRvdXQucHVzaChjaGlsZHJlbik7XHJcblx0fVxyXG5cdHJldHVybiBvdXQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHBsYWNlQ2hpbGQoXHJcblx0cGFyZW50RG9tLFxyXG5cdGNoaWxkVk5vZGUsXHJcblx0b2xkVk5vZGUsXHJcblx0b2xkQ2hpbGRyZW4sXHJcblx0bmV3RG9tLFxyXG5cdG9sZERvbVxyXG4pIHtcclxuXHRsZXQgbmV4dERvbTtcclxuXHRpZiAoY2hpbGRWTm9kZS5fbmV4dERvbSAhPT0gdW5kZWZpbmVkKSB7XHJcblx0XHQvLyBPbmx5IEZyYWdtZW50cyBvciBjb21wb25lbnRzIHRoYXQgcmV0dXJuIEZyYWdtZW50IGxpa2UgVk5vZGVzIHdpbGxcclxuXHRcdC8vIGhhdmUgYSBub24tdW5kZWZpbmVkIF9uZXh0RG9tLiBDb250aW51ZSB0aGUgZGlmZiBmcm9tIHRoZSBzaWJsaW5nXHJcblx0XHQvLyBvZiBsYXN0IERPTSBjaGlsZCBvZiB0aGlzIGNoaWxkIFZOb2RlXHJcblx0XHRuZXh0RG9tID0gY2hpbGRWTm9kZS5fbmV4dERvbTtcclxuXHJcblx0XHQvLyBFYWdlcmx5IGNsZWFudXAgX25leHREb20uIFdlIGRvbid0IG5lZWQgdG8gcGVyc2lzdCB0aGUgdmFsdWUgYmVjYXVzZVxyXG5cdFx0Ly8gaXQgaXMgb25seSB1c2VkIGJ5IGBkaWZmQ2hpbGRyZW5gIHRvIGRldGVybWluZSB3aGVyZSB0byByZXN1bWUgdGhlIGRpZmYgYWZ0ZXJcclxuXHRcdC8vIGRpZmZpbmcgQ29tcG9uZW50cyBhbmQgRnJhZ21lbnRzLiBPbmNlIHdlIHN0b3JlIGl0IHRoZSBuZXh0RE9NIGxvY2FsIHZhciwgd2VcclxuXHRcdC8vIGNhbiBjbGVhbiB1cCB0aGUgcHJvcGVydHlcclxuXHRcdGNoaWxkVk5vZGUuX25leHREb20gPSB1bmRlZmluZWQ7XHJcblx0fSBlbHNlIGlmIChcclxuXHRcdG9sZFZOb2RlID09IG51bGwgfHxcclxuXHRcdG5ld0RvbSAhPSBvbGREb20gfHxcclxuXHRcdG5ld0RvbS5wYXJlbnROb2RlID09IG51bGxcclxuXHQpIHtcclxuXHRcdG91dGVyOiBpZiAob2xkRG9tID09IG51bGwgfHwgb2xkRG9tLnBhcmVudE5vZGUgIT09IHBhcmVudERvbSkge1xyXG5cdFx0XHRwYXJlbnREb20uYXBwZW5kQ2hpbGQobmV3RG9tKTtcclxuXHRcdFx0bmV4dERvbSA9IG51bGw7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHQvLyBgajxvbGRDaGlsZHJlbkxlbmd0aDsgais9MmAgaXMgYW4gYWx0ZXJuYXRpdmUgdG8gYGorKzxvbGRDaGlsZHJlbkxlbmd0aC8yYFxyXG5cdFx0XHRmb3IgKFxyXG5cdFx0XHRcdGxldCBzaWJEb20gPSBvbGREb20sIGogPSAwO1xyXG5cdFx0XHRcdChzaWJEb20gPSBzaWJEb20ubmV4dFNpYmxpbmcpICYmIGogPCBvbGRDaGlsZHJlbi5sZW5ndGg7XHJcblx0XHRcdFx0aiArPSAyXHJcblx0XHRcdCkge1xyXG5cdFx0XHRcdGlmIChzaWJEb20gPT0gbmV3RG9tKSB7XHJcblx0XHRcdFx0XHRicmVhayBvdXRlcjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cGFyZW50RG9tLmluc2VydEJlZm9yZShuZXdEb20sIG9sZERvbSk7XHJcblx0XHRcdG5leHREb20gPSBvbGREb207XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBJZiB3ZSBoYXZlIHByZS1jYWxjdWxhdGVkIHRoZSBuZXh0RE9NIG5vZGUsIHVzZSBpdC4gRWxzZSBjYWxjdWxhdGUgaXQgbm93XHJcblx0Ly8gU3RyaWN0bHkgY2hlY2sgZm9yIGB1bmRlZmluZWRgIGhlcmUgY3V6IGBudWxsYCBpcyBhIHZhbGlkIHZhbHVlIG9mIGBuZXh0RG9tYC5cclxuXHQvLyBTZWUgbW9yZSBkZXRhaWwgaW4gY3JlYXRlLWVsZW1lbnQuanM6Y3JlYXRlVk5vZGVcclxuXHRpZiAobmV4dERvbSAhPT0gdW5kZWZpbmVkKSB7XHJcblx0XHRvbGREb20gPSBuZXh0RG9tO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRvbGREb20gPSBuZXdEb20ubmV4dFNpYmxpbmc7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gb2xkRG9tO1xyXG59XHJcbiIsICJpbXBvcnQgeyBJU19OT05fRElNRU5TSU9OQUwgfSBmcm9tICcuLi9jb25zdGFudHMnO1xyXG5pbXBvcnQgb3B0aW9ucyBmcm9tICcuLi9vcHRpb25zJztcclxuXHJcbi8qKlxyXG4gKiBEaWZmIHRoZSBvbGQgYW5kIG5ldyBwcm9wZXJ0aWVzIG9mIGEgVk5vZGUgYW5kIGFwcGx5IGNoYW5nZXMgdG8gdGhlIERPTSBub2RlXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLlByZWFjdEVsZW1lbnR9IGRvbSBUaGUgRE9NIG5vZGUgdG8gYXBwbHlcclxuICogY2hhbmdlcyB0b1xyXG4gKiBAcGFyYW0ge29iamVjdH0gbmV3UHJvcHMgVGhlIG5ldyBwcm9wc1xyXG4gKiBAcGFyYW0ge29iamVjdH0gb2xkUHJvcHMgVGhlIG9sZCBwcm9wc1xyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzU3ZnIFdoZXRoZXIgb3Igbm90IHRoaXMgbm9kZSBpcyBhbiBTVkcgbm9kZVxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGh5ZHJhdGUgV2hldGhlciBvciBub3Qgd2UgYXJlIGluIGh5ZHJhdGlvbiBtb2RlXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZGlmZlByb3BzKGRvbSwgbmV3UHJvcHMsIG9sZFByb3BzLCBpc1N2ZywgaHlkcmF0ZSkge1xyXG5cdGxldCBpO1xyXG5cclxuXHRmb3IgKGkgaW4gb2xkUHJvcHMpIHtcclxuXHRcdGlmIChpICE9PSAnY2hpbGRyZW4nICYmIGkgIT09ICdrZXknICYmICEoaSBpbiBuZXdQcm9wcykpIHtcclxuXHRcdFx0c2V0UHJvcGVydHkoZG9tLCBpLCBudWxsLCBvbGRQcm9wc1tpXSwgaXNTdmcpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Zm9yIChpIGluIG5ld1Byb3BzKSB7XHJcblx0XHRpZiAoXHJcblx0XHRcdCghaHlkcmF0ZSB8fCB0eXBlb2YgbmV3UHJvcHNbaV0gPT0gJ2Z1bmN0aW9uJykgJiZcclxuXHRcdFx0aSAhPT0gJ2NoaWxkcmVuJyAmJlxyXG5cdFx0XHRpICE9PSAna2V5JyAmJlxyXG5cdFx0XHRpICE9PSAndmFsdWUnICYmXHJcblx0XHRcdGkgIT09ICdjaGVja2VkJyAmJlxyXG5cdFx0XHRvbGRQcm9wc1tpXSAhPT0gbmV3UHJvcHNbaV1cclxuXHRcdCkge1xyXG5cdFx0XHRzZXRQcm9wZXJ0eShkb20sIGksIG5ld1Byb3BzW2ldLCBvbGRQcm9wc1tpXSwgaXNTdmcpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gc2V0U3R5bGUoc3R5bGUsIGtleSwgdmFsdWUpIHtcclxuXHRpZiAoa2V5WzBdID09PSAnLScpIHtcclxuXHRcdHN0eWxlLnNldFByb3BlcnR5KGtleSwgdmFsdWUpO1xyXG5cdH0gZWxzZSBpZiAodmFsdWUgPT0gbnVsbCkge1xyXG5cdFx0c3R5bGVba2V5XSA9ICcnO1xyXG5cdH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlICE9ICdudW1iZXInIHx8IElTX05PTl9ESU1FTlNJT05BTC50ZXN0KGtleSkpIHtcclxuXHRcdHN0eWxlW2tleV0gPSB2YWx1ZTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0c3R5bGVba2V5XSA9IHZhbHVlICsgJ3B4JztcclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTZXQgYSBwcm9wZXJ0eSB2YWx1ZSBvbiBhIERPTSBub2RlXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLlByZWFjdEVsZW1lbnR9IGRvbSBUaGUgRE9NIG5vZGUgdG8gbW9kaWZ5XHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0byBzZXRcclxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0IHRoZSBwcm9wZXJ0eSB0b1xyXG4gKiBAcGFyYW0geyp9IG9sZFZhbHVlIFRoZSBvbGQgdmFsdWUgdGhlIHByb3BlcnR5IGhhZFxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzU3ZnIFdoZXRoZXIgb3Igbm90IHRoaXMgRE9NIG5vZGUgaXMgYW4gU1ZHIG5vZGUgb3Igbm90XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc2V0UHJvcGVydHkoZG9tLCBuYW1lLCB2YWx1ZSwgb2xkVmFsdWUsIGlzU3ZnKSB7XHJcblx0bGV0IHVzZUNhcHR1cmU7XHJcblxyXG5cdG86IGlmIChuYW1lID09PSAnc3R5bGUnKSB7XHJcblx0XHRpZiAodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnKSB7XHJcblx0XHRcdGRvbS5zdHlsZS5jc3NUZXh0ID0gdmFsdWU7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRpZiAodHlwZW9mIG9sZFZhbHVlID09ICdzdHJpbmcnKSB7XHJcblx0XHRcdFx0ZG9tLnN0eWxlLmNzc1RleHQgPSBvbGRWYWx1ZSA9ICcnO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAob2xkVmFsdWUpIHtcclxuXHRcdFx0XHRmb3IgKG5hbWUgaW4gb2xkVmFsdWUpIHtcclxuXHRcdFx0XHRcdGlmICghKHZhbHVlICYmIG5hbWUgaW4gdmFsdWUpKSB7XHJcblx0XHRcdFx0XHRcdHNldFN0eWxlKGRvbS5zdHlsZSwgbmFtZSwgJycpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKHZhbHVlKSB7XHJcblx0XHRcdFx0Zm9yIChuYW1lIGluIHZhbHVlKSB7XHJcblx0XHRcdFx0XHRpZiAoIW9sZFZhbHVlIHx8IHZhbHVlW25hbWVdICE9PSBvbGRWYWx1ZVtuYW1lXSkge1xyXG5cdFx0XHRcdFx0XHRzZXRTdHlsZShkb20uc3R5bGUsIG5hbWUsIHZhbHVlW25hbWVdKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblx0Ly8gQmVuY2htYXJrIGZvciBjb21wYXJpc29uOiBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzU3NGM5NTRiZGI5NjViOWEwMDk2NWFjNlxyXG5cdGVsc2UgaWYgKG5hbWVbMF0gPT09ICdvJyAmJiBuYW1lWzFdID09PSAnbicpIHtcclxuXHRcdHVzZUNhcHR1cmUgPSBuYW1lICE9PSAobmFtZSA9IG5hbWUucmVwbGFjZSgvQ2FwdHVyZSQvLCAnJykpO1xyXG5cclxuXHRcdC8vIEluZmVyIGNvcnJlY3QgY2FzaW5nIGZvciBET00gYnVpbHQtaW4gZXZlbnRzOlxyXG5cdFx0aWYgKG5hbWUudG9Mb3dlckNhc2UoKSBpbiBkb20pIG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCkuc2xpY2UoMik7XHJcblx0XHRlbHNlIG5hbWUgPSBuYW1lLnNsaWNlKDIpO1xyXG5cclxuXHRcdGlmICghZG9tLl9saXN0ZW5lcnMpIGRvbS5fbGlzdGVuZXJzID0ge307XHJcblx0XHRkb20uX2xpc3RlbmVyc1tuYW1lICsgdXNlQ2FwdHVyZV0gPSB2YWx1ZTtcclxuXHJcblx0XHRpZiAodmFsdWUpIHtcclxuXHRcdFx0aWYgKCFvbGRWYWx1ZSkge1xyXG5cdFx0XHRcdGNvbnN0IGhhbmRsZXIgPSB1c2VDYXB0dXJlID8gZXZlbnRQcm94eUNhcHR1cmUgOiBldmVudFByb3h5O1xyXG5cdFx0XHRcdGRvbS5hZGRFdmVudExpc3RlbmVyKG5hbWUsIGhhbmRsZXIsIHVzZUNhcHR1cmUpO1xyXG5cdFx0XHR9XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRjb25zdCBoYW5kbGVyID0gdXNlQ2FwdHVyZSA/IGV2ZW50UHJveHlDYXB0dXJlIDogZXZlbnRQcm94eTtcclxuXHRcdFx0ZG9tLnJlbW92ZUV2ZW50TGlzdGVuZXIobmFtZSwgaGFuZGxlciwgdXNlQ2FwdHVyZSk7XHJcblx0XHR9XHJcblx0fSBlbHNlIGlmIChuYW1lICE9PSAnZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwnKSB7XHJcblx0XHRpZiAoaXNTdmcpIHtcclxuXHRcdFx0Ly8gTm9ybWFsaXplIGluY29ycmVjdCBwcm9wIHVzYWdlIGZvciBTVkc6XHJcblx0XHRcdC8vIC0geGxpbms6aHJlZiAvIHhsaW5rSHJlZiAtLT4gaHJlZiAoeGxpbms6aHJlZiB3YXMgcmVtb3ZlZCBmcm9tIFNWRyBhbmQgaXNuJ3QgbmVlZGVkKVxyXG5cdFx0XHQvLyAtIGNsYXNzTmFtZSAtLT4gY2xhc3NcclxuXHRcdFx0bmFtZSA9IG5hbWUucmVwbGFjZSgveGxpbmtbSDpoXS8sICdoJykucmVwbGFjZSgvc05hbWUkLywgJ3MnKTtcclxuXHRcdH0gZWxzZSBpZiAoXHJcblx0XHRcdG5hbWUgIT09ICdocmVmJyAmJlxyXG5cdFx0XHRuYW1lICE9PSAnbGlzdCcgJiZcclxuXHRcdFx0bmFtZSAhPT0gJ2Zvcm0nICYmXHJcblx0XHRcdC8vIERlZmF1bHQgdmFsdWUgaW4gYnJvd3NlcnMgaXMgYC0xYCBhbmQgYW4gZW1wdHkgc3RyaW5nIGlzXHJcblx0XHRcdC8vIGNhc3QgdG8gYDBgIGluc3RlYWRcclxuXHRcdFx0bmFtZSAhPT0gJ3RhYkluZGV4JyAmJlxyXG5cdFx0XHRuYW1lICE9PSAnZG93bmxvYWQnICYmXHJcblx0XHRcdG5hbWUgaW4gZG9tXHJcblx0XHQpIHtcclxuXHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRkb21bbmFtZV0gPSB2YWx1ZSA9PSBudWxsID8gJycgOiB2YWx1ZTtcclxuXHRcdFx0XHQvLyBsYWJlbGxlZCBicmVhayBpcyAxYiBzbWFsbGVyIGhlcmUgdGhhbiBhIHJldHVybiBzdGF0ZW1lbnQgKHNvcnJ5KVxyXG5cdFx0XHRcdGJyZWFrIG87XHJcblx0XHRcdH0gY2F0Y2ggKGUpIHt9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQVJJQS1hdHRyaWJ1dGVzIGhhdmUgYSBkaWZmZXJlbnQgbm90aW9uIG9mIGJvb2xlYW4gdmFsdWVzLlxyXG5cdFx0Ly8gVGhlIHZhbHVlIGBmYWxzZWAgaXMgZGlmZmVyZW50IGZyb20gdGhlIGF0dHJpYnV0ZSBub3RcclxuXHRcdC8vIGV4aXN0aW5nIG9uIHRoZSBET00sIHNvIHdlIGNhbid0IHJlbW92ZSBpdC4gRm9yIG5vbi1ib29sZWFuXHJcblx0XHQvLyBBUklBLWF0dHJpYnV0ZXMgd2UgY291bGQgdHJlYXQgZmFsc2UgYXMgYSByZW1vdmFsLCBidXQgdGhlXHJcblx0XHQvLyBhbW91bnQgb2YgZXhjZXB0aW9ucyB3b3VsZCBjb3N0IHVzIHRvbyBtYW55IGJ5dGVzLiBPbiB0b3Agb2ZcclxuXHRcdC8vIHRoYXQgb3RoZXIgVkRPTSBmcmFtZXdvcmtzIGFsc28gYWx3YXlzIHN0cmluZ2lmeSBgZmFsc2VgLlxyXG5cclxuXHRcdGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHtcclxuXHRcdFx0Ly8gbmV2ZXIgc2VyaWFsaXplIGZ1bmN0aW9ucyBhcyBhdHRyaWJ1dGUgdmFsdWVzXHJcblx0XHR9IGVsc2UgaWYgKFxyXG5cdFx0XHR2YWx1ZSAhPSBudWxsICYmXHJcblx0XHRcdCh2YWx1ZSAhPT0gZmFsc2UgfHwgKG5hbWVbMF0gPT09ICdhJyAmJiBuYW1lWzFdID09PSAncicpKVxyXG5cdFx0KSB7XHJcblx0XHRcdGRvbS5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0ZG9tLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcm94eSBhbiBldmVudCB0byBob29rZWQgZXZlbnQgaGFuZGxlcnNcclxuICogQHBhcmFtIHtFdmVudH0gZSBUaGUgZXZlbnQgb2JqZWN0IGZyb20gdGhlIGJyb3dzZXJcclxuICogQHByaXZhdGVcclxuICovXHJcbmZ1bmN0aW9uIGV2ZW50UHJveHkoZSkge1xyXG5cdHRoaXMuX2xpc3RlbmVyc1tlLnR5cGUgKyBmYWxzZV0ob3B0aW9ucy5ldmVudCA/IG9wdGlvbnMuZXZlbnQoZSkgOiBlKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZXZlbnRQcm94eUNhcHR1cmUoZSkge1xyXG5cdHRoaXMuX2xpc3RlbmVyc1tlLnR5cGUgKyB0cnVlXShvcHRpb25zLmV2ZW50ID8gb3B0aW9ucy5ldmVudChlKSA6IGUpO1xyXG59XHJcbiIsICJpbXBvcnQgeyBFTVBUWV9PQkogfSBmcm9tICcuLi9jb25zdGFudHMnO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIGdldERvbVNpYmxpbmcgfSBmcm9tICcuLi9jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gJy4uL2NyZWF0ZS1lbGVtZW50JztcclxuaW1wb3J0IHsgZGlmZkNoaWxkcmVuIH0gZnJvbSAnLi9jaGlsZHJlbic7XHJcbmltcG9ydCB7IGRpZmZQcm9wcywgc2V0UHJvcGVydHkgfSBmcm9tICcuL3Byb3BzJztcclxuaW1wb3J0IHsgYXNzaWduLCByZW1vdmVOb2RlLCBzbGljZSB9IGZyb20gJy4uL3V0aWwnO1xyXG5pbXBvcnQgb3B0aW9ucyBmcm9tICcuLi9vcHRpb25zJztcclxuXHJcbi8qKlxyXG4gKiBEaWZmIHR3byB2aXJ0dWFsIG5vZGVzIGFuZCBhcHBseSBwcm9wZXIgY2hhbmdlcyB0byB0aGUgRE9NXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLlByZWFjdEVsZW1lbnR9IHBhcmVudERvbSBUaGUgcGFyZW50IG9mIHRoZSBET00gZWxlbWVudFxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW50ZXJuYWwnKS5WTm9kZX0gbmV3Vk5vZGUgVGhlIG5ldyB2aXJ0dWFsIG5vZGVcclxuICogQHBhcmFtIHtpbXBvcnQoJy4uL2ludGVybmFsJykuVk5vZGV9IG9sZFZOb2RlIFRoZSBvbGQgdmlydHVhbCBub2RlXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBnbG9iYWxDb250ZXh0IFRoZSBjdXJyZW50IGNvbnRleHQgb2JqZWN0LiBNb2RpZmllZCBieSBnZXRDaGlsZENvbnRleHRcclxuICogQHBhcmFtIHtib29sZWFufSBpc1N2ZyBXaGV0aGVyIG9yIG5vdCB0aGlzIGVsZW1lbnQgaXMgYW4gU1ZHIG5vZGVcclxuICogQHBhcmFtIHtBcnJheTxpbXBvcnQoJy4uL2ludGVybmFsJykuUHJlYWN0RWxlbWVudD59IGV4Y2Vzc0RvbUNoaWxkcmVuXHJcbiAqIEBwYXJhbSB7QXJyYXk8aW1wb3J0KCcuLi9pbnRlcm5hbCcpLkNvbXBvbmVudD59IGNvbW1pdFF1ZXVlIExpc3Qgb2YgY29tcG9uZW50c1xyXG4gKiB3aGljaCBoYXZlIGNhbGxiYWNrcyB0byBpbnZva2UgaW4gY29tbWl0Um9vdFxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW50ZXJuYWwnKS5QcmVhY3RFbGVtZW50fSBvbGREb20gVGhlIGN1cnJlbnQgYXR0YWNoZWQgRE9NXHJcbiAqIGVsZW1lbnQgYW55IG5ldyBkb20gZWxlbWVudHMgc2hvdWxkIGJlIHBsYWNlZCBhcm91bmQuIExpa2VseSBgbnVsbGAgb24gZmlyc3RcclxuICogcmVuZGVyIChleGNlcHQgd2hlbiBoeWRyYXRpbmcpLiBDYW4gYmUgYSBzaWJsaW5nIERPTSBlbGVtZW50IHdoZW4gZGlmZmluZ1xyXG4gKiBGcmFnbWVudHMgdGhhdCBoYXZlIHNpYmxpbmdzLiBJbiBtb3N0IGNhc2VzLCBpdCBzdGFydHMgb3V0IGFzIGBvbGRDaGlsZHJlblswXS5fZG9tYC5cclxuICogQHBhcmFtIHtib29sZWFufSBbaXNIeWRyYXRpbmddIFdoZXRoZXIgb3Igbm90IHdlIGFyZSBpbiBoeWRyYXRpb25cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBkaWZmKFxyXG5cdHBhcmVudERvbSxcclxuXHRuZXdWTm9kZSxcclxuXHRvbGRWTm9kZSxcclxuXHRnbG9iYWxDb250ZXh0LFxyXG5cdGlzU3ZnLFxyXG5cdGV4Y2Vzc0RvbUNoaWxkcmVuLFxyXG5cdGNvbW1pdFF1ZXVlLFxyXG5cdG9sZERvbSxcclxuXHRpc0h5ZHJhdGluZ1xyXG4pIHtcclxuXHRsZXQgdG1wLFxyXG5cdFx0bmV3VHlwZSA9IG5ld1ZOb2RlLnR5cGU7XHJcblxyXG5cdC8vIFdoZW4gcGFzc2luZyB0aHJvdWdoIGNyZWF0ZUVsZW1lbnQgaXQgYXNzaWducyB0aGUgb2JqZWN0XHJcblx0Ly8gY29uc3RydWN0b3IgYXMgdW5kZWZpbmVkLiBUaGlzIHRvIHByZXZlbnQgSlNPTi1pbmplY3Rpb24uXHJcblx0aWYgKG5ld1ZOb2RlLmNvbnN0cnVjdG9yICE9PSB1bmRlZmluZWQpIHJldHVybiBudWxsO1xyXG5cclxuXHQvLyBJZiB0aGUgcHJldmlvdXMgZGlmZiBiYWlsZWQgb3V0LCByZXN1bWUgY3JlYXRpbmcvaHlkcmF0aW5nLlxyXG5cdGlmIChvbGRWTm9kZS5faHlkcmF0aW5nICE9IG51bGwpIHtcclxuXHRcdGlzSHlkcmF0aW5nID0gb2xkVk5vZGUuX2h5ZHJhdGluZztcclxuXHRcdG9sZERvbSA9IG5ld1ZOb2RlLl9kb20gPSBvbGRWTm9kZS5fZG9tO1xyXG5cdFx0Ly8gaWYgd2UgcmVzdW1lLCB3ZSB3YW50IHRoZSB0cmVlIHRvIGJlIFwidW5sb2NrZWRcIlxyXG5cdFx0bmV3Vk5vZGUuX2h5ZHJhdGluZyA9IG51bGw7XHJcblx0XHRleGNlc3NEb21DaGlsZHJlbiA9IFtvbGREb21dO1xyXG5cdH1cclxuXHJcblx0aWYgKCh0bXAgPSBvcHRpb25zLl9kaWZmKSkgdG1wKG5ld1ZOb2RlKTtcclxuXHJcblx0dHJ5IHtcclxuXHRcdG91dGVyOiBpZiAodHlwZW9mIG5ld1R5cGUgPT0gJ2Z1bmN0aW9uJykge1xyXG5cdFx0XHRsZXQgYywgaXNOZXcsIG9sZFByb3BzLCBvbGRTdGF0ZSwgc25hcHNob3QsIGNsZWFyUHJvY2Vzc2luZ0V4Y2VwdGlvbjtcclxuXHRcdFx0bGV0IG5ld1Byb3BzID0gbmV3Vk5vZGUucHJvcHM7XHJcblxyXG5cdFx0XHQvLyBOZWNlc3NhcnkgZm9yIGNyZWF0ZUNvbnRleHQgYXBpLiBTZXR0aW5nIHRoaXMgcHJvcGVydHkgd2lsbCBwYXNzXHJcblx0XHRcdC8vIHRoZSBjb250ZXh0IHZhbHVlIGFzIGB0aGlzLmNvbnRleHRgIGp1c3QgZm9yIHRoaXMgY29tcG9uZW50LlxyXG5cdFx0XHR0bXAgPSBuZXdUeXBlLmNvbnRleHRUeXBlO1xyXG5cdFx0XHRsZXQgcHJvdmlkZXIgPSB0bXAgJiYgZ2xvYmFsQ29udGV4dFt0bXAuX2lkXTtcclxuXHRcdFx0bGV0IGNvbXBvbmVudENvbnRleHQgPSB0bXBcclxuXHRcdFx0XHQ/IHByb3ZpZGVyXHJcblx0XHRcdFx0XHQ/IHByb3ZpZGVyLnByb3BzLnZhbHVlXHJcblx0XHRcdFx0XHQ6IHRtcC5fZGVmYXVsdFZhbHVlXHJcblx0XHRcdFx0OiBnbG9iYWxDb250ZXh0O1xyXG5cclxuXHRcdFx0Ly8gR2V0IGNvbXBvbmVudCBhbmQgc2V0IGl0IHRvIGBjYFxyXG5cdFx0XHRpZiAob2xkVk5vZGUuX2NvbXBvbmVudCkge1xyXG5cdFx0XHRcdGMgPSBuZXdWTm9kZS5fY29tcG9uZW50ID0gb2xkVk5vZGUuX2NvbXBvbmVudDtcclxuXHRcdFx0XHRjbGVhclByb2Nlc3NpbmdFeGNlcHRpb24gPSBjLl9wcm9jZXNzaW5nRXhjZXB0aW9uID0gYy5fcGVuZGluZ0Vycm9yO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdC8vIEluc3RhbnRpYXRlIHRoZSBuZXcgY29tcG9uZW50XHJcblx0XHRcdFx0aWYgKCdwcm90b3R5cGUnIGluIG5ld1R5cGUgJiYgbmV3VHlwZS5wcm90b3R5cGUucmVuZGVyKSB7XHJcblx0XHRcdFx0XHQvLyBAdHMtaWdub3JlIFRoZSBjaGVjayBhYm92ZSB2ZXJpZmllcyB0aGF0IG5ld1R5cGUgaXMgc3VwcG9zZSB0byBiZSBjb25zdHJ1Y3RlZFxyXG5cdFx0XHRcdFx0bmV3Vk5vZGUuX2NvbXBvbmVudCA9IGMgPSBuZXcgbmV3VHlwZShuZXdQcm9wcywgY29tcG9uZW50Q29udGV4dCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbmV3LWNhcFxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQvLyBAdHMtaWdub3JlIFRydXN0IG1lLCBDb21wb25lbnQgaW1wbGVtZW50cyB0aGUgaW50ZXJmYWNlIHdlIHdhbnRcclxuXHRcdFx0XHRcdG5ld1ZOb2RlLl9jb21wb25lbnQgPSBjID0gbmV3IENvbXBvbmVudChuZXdQcm9wcywgY29tcG9uZW50Q29udGV4dCk7XHJcblx0XHRcdFx0XHRjLmNvbnN0cnVjdG9yID0gbmV3VHlwZTtcclxuXHRcdFx0XHRcdGMucmVuZGVyID0gZG9SZW5kZXI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmIChwcm92aWRlcikgcHJvdmlkZXIuc3ViKGMpO1xyXG5cclxuXHRcdFx0XHRjLnByb3BzID0gbmV3UHJvcHM7XHJcblx0XHRcdFx0aWYgKCFjLnN0YXRlKSBjLnN0YXRlID0ge307XHJcblx0XHRcdFx0Yy5jb250ZXh0ID0gY29tcG9uZW50Q29udGV4dDtcclxuXHRcdFx0XHRjLl9nbG9iYWxDb250ZXh0ID0gZ2xvYmFsQ29udGV4dDtcclxuXHRcdFx0XHRpc05ldyA9IGMuX2RpcnR5ID0gdHJ1ZTtcclxuXHRcdFx0XHRjLl9yZW5kZXJDYWxsYmFja3MgPSBbXTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSW52b2tlIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc1xyXG5cdFx0XHRpZiAoYy5fbmV4dFN0YXRlID09IG51bGwpIHtcclxuXHRcdFx0XHRjLl9uZXh0U3RhdGUgPSBjLnN0YXRlO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChuZXdUeXBlLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyAhPSBudWxsKSB7XHJcblx0XHRcdFx0aWYgKGMuX25leHRTdGF0ZSA9PSBjLnN0YXRlKSB7XHJcblx0XHRcdFx0XHRjLl9uZXh0U3RhdGUgPSBhc3NpZ24oe30sIGMuX25leHRTdGF0ZSk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRhc3NpZ24oXHJcblx0XHRcdFx0XHRjLl9uZXh0U3RhdGUsXHJcblx0XHRcdFx0XHRuZXdUeXBlLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXdQcm9wcywgYy5fbmV4dFN0YXRlKVxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdG9sZFByb3BzID0gYy5wcm9wcztcclxuXHRcdFx0b2xkU3RhdGUgPSBjLnN0YXRlO1xyXG5cclxuXHRcdFx0Ly8gSW52b2tlIHByZS1yZW5kZXIgbGlmZWN5Y2xlIG1ldGhvZHNcclxuXHRcdFx0aWYgKGlzTmV3KSB7XHJcblx0XHRcdFx0aWYgKFxyXG5cdFx0XHRcdFx0bmV3VHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMgPT0gbnVsbCAmJlxyXG5cdFx0XHRcdFx0Yy5jb21wb25lbnRXaWxsTW91bnQgIT0gbnVsbFxyXG5cdFx0XHRcdCkge1xyXG5cdFx0XHRcdFx0Yy5jb21wb25lbnRXaWxsTW91bnQoKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmIChjLmNvbXBvbmVudERpZE1vdW50ICE9IG51bGwpIHtcclxuXHRcdFx0XHRcdGMuX3JlbmRlckNhbGxiYWNrcy5wdXNoKGMuY29tcG9uZW50RGlkTW91bnQpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRpZiAoXHJcblx0XHRcdFx0XHRuZXdUeXBlLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9PSBudWxsICYmXHJcblx0XHRcdFx0XHRuZXdQcm9wcyAhPT0gb2xkUHJvcHMgJiZcclxuXHRcdFx0XHRcdGMuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyAhPSBudWxsXHJcblx0XHRcdFx0KSB7XHJcblx0XHRcdFx0XHRjLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV3UHJvcHMsIGNvbXBvbmVudENvbnRleHQpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYgKFxyXG5cdFx0XHRcdFx0KCFjLl9mb3JjZSAmJlxyXG5cdFx0XHRcdFx0XHRjLnNob3VsZENvbXBvbmVudFVwZGF0ZSAhPSBudWxsICYmXHJcblx0XHRcdFx0XHRcdGMuc2hvdWxkQ29tcG9uZW50VXBkYXRlKFxyXG5cdFx0XHRcdFx0XHRcdG5ld1Byb3BzLFxyXG5cdFx0XHRcdFx0XHRcdGMuX25leHRTdGF0ZSxcclxuXHRcdFx0XHRcdFx0XHRjb21wb25lbnRDb250ZXh0XHJcblx0XHRcdFx0XHRcdCkgPT09IGZhbHNlKSB8fFxyXG5cdFx0XHRcdFx0bmV3Vk5vZGUuX29yaWdpbmFsID09PSBvbGRWTm9kZS5fb3JpZ2luYWxcclxuXHRcdFx0XHQpIHtcclxuXHRcdFx0XHRcdGMucHJvcHMgPSBuZXdQcm9wcztcclxuXHRcdFx0XHRcdGMuc3RhdGUgPSBjLl9uZXh0U3RhdGU7XHJcblx0XHRcdFx0XHQvLyBNb3JlIGluZm8gYWJvdXQgdGhpcyBoZXJlOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9Kb3ZpRGVDcm9vY2svYmVjNWYyY2U5MzU0NGQyZTYwNzBlZjhlMDAzNmU0ZThcclxuXHRcdFx0XHRcdGlmIChuZXdWTm9kZS5fb3JpZ2luYWwgIT09IG9sZFZOb2RlLl9vcmlnaW5hbCkgYy5fZGlydHkgPSBmYWxzZTtcclxuXHRcdFx0XHRcdGMuX3Zub2RlID0gbmV3Vk5vZGU7XHJcblx0XHRcdFx0XHRuZXdWTm9kZS5fZG9tID0gb2xkVk5vZGUuX2RvbTtcclxuXHRcdFx0XHRcdG5ld1ZOb2RlLl9jaGlsZHJlbiA9IG9sZFZOb2RlLl9jaGlsZHJlbjtcclxuXHRcdFx0XHRcdG5ld1ZOb2RlLl9jaGlsZHJlbi5mb3JFYWNoKHZub2RlID0+IHtcclxuXHRcdFx0XHRcdFx0aWYgKHZub2RlKSB2bm9kZS5fcGFyZW50ID0gbmV3Vk5vZGU7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGlmIChjLl9yZW5kZXJDYWxsYmFja3MubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRcdGNvbW1pdFF1ZXVlLnB1c2goYyk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0YnJlYWsgb3V0ZXI7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRpZiAoYy5jb21wb25lbnRXaWxsVXBkYXRlICE9IG51bGwpIHtcclxuXHRcdFx0XHRcdGMuY29tcG9uZW50V2lsbFVwZGF0ZShuZXdQcm9wcywgYy5fbmV4dFN0YXRlLCBjb21wb25lbnRDb250ZXh0KTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmIChjLmNvbXBvbmVudERpZFVwZGF0ZSAhPSBudWxsKSB7XHJcblx0XHRcdFx0XHRjLl9yZW5kZXJDYWxsYmFja3MucHVzaCgoKSA9PiB7XHJcblx0XHRcdFx0XHRcdGMuY29tcG9uZW50RGlkVXBkYXRlKG9sZFByb3BzLCBvbGRTdGF0ZSwgc25hcHNob3QpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRjLmNvbnRleHQgPSBjb21wb25lbnRDb250ZXh0O1xyXG5cdFx0XHRjLnByb3BzID0gbmV3UHJvcHM7XHJcblx0XHRcdGMuc3RhdGUgPSBjLl9uZXh0U3RhdGU7XHJcblxyXG5cdFx0XHRpZiAoKHRtcCA9IG9wdGlvbnMuX3JlbmRlcikpIHRtcChuZXdWTm9kZSk7XHJcblxyXG5cdFx0XHRjLl9kaXJ0eSA9IGZhbHNlO1xyXG5cdFx0XHRjLl92bm9kZSA9IG5ld1ZOb2RlO1xyXG5cdFx0XHRjLl9wYXJlbnREb20gPSBwYXJlbnREb207XHJcblxyXG5cdFx0XHR0bXAgPSBjLnJlbmRlcihjLnByb3BzLCBjLnN0YXRlLCBjLmNvbnRleHQpO1xyXG5cclxuXHRcdFx0Ly8gSGFuZGxlIHNldFN0YXRlIGNhbGxlZCBpbiByZW5kZXIsIHNlZSAjMjU1M1xyXG5cdFx0XHRjLnN0YXRlID0gYy5fbmV4dFN0YXRlO1xyXG5cclxuXHRcdFx0aWYgKGMuZ2V0Q2hpbGRDb250ZXh0ICE9IG51bGwpIHtcclxuXHRcdFx0XHRnbG9iYWxDb250ZXh0ID0gYXNzaWduKGFzc2lnbih7fSwgZ2xvYmFsQ29udGV4dCksIGMuZ2V0Q2hpbGRDb250ZXh0KCkpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIWlzTmV3ICYmIGMuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUgIT0gbnVsbCkge1xyXG5cdFx0XHRcdHNuYXBzaG90ID0gYy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShvbGRQcm9wcywgb2xkU3RhdGUpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRsZXQgaXNUb3BMZXZlbEZyYWdtZW50ID1cclxuXHRcdFx0XHR0bXAgIT0gbnVsbCAmJiB0bXAudHlwZSA9PT0gRnJhZ21lbnQgJiYgdG1wLmtleSA9PSBudWxsO1xyXG5cdFx0XHRsZXQgcmVuZGVyUmVzdWx0ID0gaXNUb3BMZXZlbEZyYWdtZW50ID8gdG1wLnByb3BzLmNoaWxkcmVuIDogdG1wO1xyXG5cclxuXHRcdFx0ZGlmZkNoaWxkcmVuKFxyXG5cdFx0XHRcdHBhcmVudERvbSxcclxuXHRcdFx0XHRBcnJheS5pc0FycmF5KHJlbmRlclJlc3VsdCkgPyByZW5kZXJSZXN1bHQgOiBbcmVuZGVyUmVzdWx0XSxcclxuXHRcdFx0XHRuZXdWTm9kZSxcclxuXHRcdFx0XHRvbGRWTm9kZSxcclxuXHRcdFx0XHRnbG9iYWxDb250ZXh0LFxyXG5cdFx0XHRcdGlzU3ZnLFxyXG5cdFx0XHRcdGV4Y2Vzc0RvbUNoaWxkcmVuLFxyXG5cdFx0XHRcdGNvbW1pdFF1ZXVlLFxyXG5cdFx0XHRcdG9sZERvbSxcclxuXHRcdFx0XHRpc0h5ZHJhdGluZ1xyXG5cdFx0XHQpO1xyXG5cclxuXHRcdFx0Yy5iYXNlID0gbmV3Vk5vZGUuX2RvbTtcclxuXHJcblx0XHRcdC8vIFdlIHN1Y2Nlc3NmdWxseSByZW5kZXJlZCB0aGlzIFZOb2RlLCB1bnNldCBhbnkgc3RvcmVkIGh5ZHJhdGlvbi9iYWlsb3V0IHN0YXRlOlxyXG5cdFx0XHRuZXdWTm9kZS5faHlkcmF0aW5nID0gbnVsbDtcclxuXHJcblx0XHRcdGlmIChjLl9yZW5kZXJDYWxsYmFja3MubGVuZ3RoKSB7XHJcblx0XHRcdFx0Y29tbWl0UXVldWUucHVzaChjKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKGNsZWFyUHJvY2Vzc2luZ0V4Y2VwdGlvbikge1xyXG5cdFx0XHRcdGMuX3BlbmRpbmdFcnJvciA9IGMuX3Byb2Nlc3NpbmdFeGNlcHRpb24gPSBudWxsO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRjLl9mb3JjZSA9IGZhbHNlO1xyXG5cdFx0fSBlbHNlIGlmIChcclxuXHRcdFx0ZXhjZXNzRG9tQ2hpbGRyZW4gPT0gbnVsbCAmJlxyXG5cdFx0XHRuZXdWTm9kZS5fb3JpZ2luYWwgPT09IG9sZFZOb2RlLl9vcmlnaW5hbFxyXG5cdFx0KSB7XHJcblx0XHRcdG5ld1ZOb2RlLl9jaGlsZHJlbiA9IG9sZFZOb2RlLl9jaGlsZHJlbjtcclxuXHRcdFx0bmV3Vk5vZGUuX2RvbSA9IG9sZFZOb2RlLl9kb207XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRuZXdWTm9kZS5fZG9tID0gZGlmZkVsZW1lbnROb2RlcyhcclxuXHRcdFx0XHRvbGRWTm9kZS5fZG9tLFxyXG5cdFx0XHRcdG5ld1ZOb2RlLFxyXG5cdFx0XHRcdG9sZFZOb2RlLFxyXG5cdFx0XHRcdGdsb2JhbENvbnRleHQsXHJcblx0XHRcdFx0aXNTdmcsXHJcblx0XHRcdFx0ZXhjZXNzRG9tQ2hpbGRyZW4sXHJcblx0XHRcdFx0Y29tbWl0UXVldWUsXHJcblx0XHRcdFx0aXNIeWRyYXRpbmdcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoKHRtcCA9IG9wdGlvbnMuZGlmZmVkKSkgdG1wKG5ld1ZOb2RlKTtcclxuXHR9IGNhdGNoIChlKSB7XHJcblx0XHRuZXdWTm9kZS5fb3JpZ2luYWwgPSBudWxsO1xyXG5cdFx0Ly8gaWYgaHlkcmF0aW5nIG9yIGNyZWF0aW5nIGluaXRpYWwgdHJlZSwgYmFpbG91dCBwcmVzZXJ2ZXMgRE9NOlxyXG5cdFx0aWYgKGlzSHlkcmF0aW5nIHx8IGV4Y2Vzc0RvbUNoaWxkcmVuICE9IG51bGwpIHtcclxuXHRcdFx0bmV3Vk5vZGUuX2RvbSA9IG9sZERvbTtcclxuXHRcdFx0bmV3Vk5vZGUuX2h5ZHJhdGluZyA9ICEhaXNIeWRyYXRpbmc7XHJcblx0XHRcdGV4Y2Vzc0RvbUNoaWxkcmVuW2V4Y2Vzc0RvbUNoaWxkcmVuLmluZGV4T2Yob2xkRG9tKV0gPSBudWxsO1xyXG5cdFx0XHQvLyBeIGNvdWxkIHBvc3NpYmx5IGJlIHNpbXBsaWZpZWQgdG86XHJcblx0XHRcdC8vIGV4Y2Vzc0RvbUNoaWxkcmVuLmxlbmd0aCA9IDA7XHJcblx0XHR9XHJcblx0XHRvcHRpb25zLl9jYXRjaEVycm9yKGUsIG5ld1ZOb2RlLCBvbGRWTm9kZSk7XHJcblx0fVxyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtBcnJheTxpbXBvcnQoJy4uL2ludGVybmFsJykuQ29tcG9uZW50Pn0gY29tbWl0UXVldWUgTGlzdCBvZiBjb21wb25lbnRzXHJcbiAqIHdoaWNoIGhhdmUgY2FsbGJhY2tzIHRvIGludm9rZSBpbiBjb21taXRSb290XHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLlZOb2RlfSByb290XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29tbWl0Um9vdChjb21taXRRdWV1ZSwgcm9vdCkge1xyXG5cdGlmIChvcHRpb25zLl9jb21taXQpIG9wdGlvbnMuX2NvbW1pdChyb290LCBjb21taXRRdWV1ZSk7XHJcblxyXG5cdGNvbW1pdFF1ZXVlLnNvbWUoYyA9PiB7XHJcblx0XHR0cnkge1xyXG5cdFx0XHQvLyBAdHMtaWdub3JlIFJldXNlIHRoZSBjb21taXRRdWV1ZSB2YXJpYWJsZSBoZXJlIHNvIHRoZSB0eXBlIGNoYW5nZXNcclxuXHRcdFx0Y29tbWl0UXVldWUgPSBjLl9yZW5kZXJDYWxsYmFja3M7XHJcblx0XHRcdGMuX3JlbmRlckNhbGxiYWNrcyA9IFtdO1xyXG5cdFx0XHRjb21taXRRdWV1ZS5zb21lKGNiID0+IHtcclxuXHRcdFx0XHQvLyBAdHMtaWdub3JlIFNlZSBhYm92ZSB0cy1pZ25vcmUgb24gY29tbWl0UXVldWVcclxuXHRcdFx0XHRjYi5jYWxsKGMpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0gY2F0Y2ggKGUpIHtcclxuXHRcdFx0b3B0aW9ucy5fY2F0Y2hFcnJvcihlLCBjLl92bm9kZSk7XHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEaWZmIHR3byB2aXJ0dWFsIG5vZGVzIHJlcHJlc2VudGluZyBET00gZWxlbWVudFxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vaW50ZXJuYWwnKS5QcmVhY3RFbGVtZW50fSBkb20gVGhlIERPTSBlbGVtZW50IHJlcHJlc2VudGluZ1xyXG4gKiB0aGUgdmlydHVhbCBub2RlcyBiZWluZyBkaWZmZWRcclxuICogQHBhcmFtIHtpbXBvcnQoJy4uL2ludGVybmFsJykuVk5vZGV9IG5ld1ZOb2RlIFRoZSBuZXcgdmlydHVhbCBub2RlXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLlZOb2RlfSBvbGRWTm9kZSBUaGUgb2xkIHZpcnR1YWwgbm9kZVxyXG4gKiBAcGFyYW0ge29iamVjdH0gZ2xvYmFsQ29udGV4dCBUaGUgY3VycmVudCBjb250ZXh0IG9iamVjdFxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzU3ZnIFdoZXRoZXIgb3Igbm90IHRoaXMgRE9NIG5vZGUgaXMgYW4gU1ZHIG5vZGVcclxuICogQHBhcmFtIHsqfSBleGNlc3NEb21DaGlsZHJlblxyXG4gKiBAcGFyYW0ge0FycmF5PGltcG9ydCgnLi4vaW50ZXJuYWwnKS5Db21wb25lbnQ+fSBjb21taXRRdWV1ZSBMaXN0IG9mIGNvbXBvbmVudHNcclxuICogd2hpY2ggaGF2ZSBjYWxsYmFja3MgdG8gaW52b2tlIGluIGNvbW1pdFJvb3RcclxuICogQHBhcmFtIHtib29sZWFufSBpc0h5ZHJhdGluZyBXaGV0aGVyIG9yIG5vdCB3ZSBhcmUgaW4gaHlkcmF0aW9uXHJcbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4uL2ludGVybmFsJykuUHJlYWN0RWxlbWVudH1cclxuICovXHJcbmZ1bmN0aW9uIGRpZmZFbGVtZW50Tm9kZXMoXHJcblx0ZG9tLFxyXG5cdG5ld1ZOb2RlLFxyXG5cdG9sZFZOb2RlLFxyXG5cdGdsb2JhbENvbnRleHQsXHJcblx0aXNTdmcsXHJcblx0ZXhjZXNzRG9tQ2hpbGRyZW4sXHJcblx0Y29tbWl0UXVldWUsXHJcblx0aXNIeWRyYXRpbmdcclxuKSB7XHJcblx0bGV0IG9sZFByb3BzID0gb2xkVk5vZGUucHJvcHM7XHJcblx0bGV0IG5ld1Byb3BzID0gbmV3Vk5vZGUucHJvcHM7XHJcblx0bGV0IG5vZGVUeXBlID0gbmV3Vk5vZGUudHlwZTtcclxuXHRsZXQgaSA9IDA7XHJcblxyXG5cdC8vIFRyYWNrcyBlbnRlcmluZyBhbmQgZXhpdGluZyBTVkcgbmFtZXNwYWNlIHdoZW4gZGVzY2VuZGluZyB0aHJvdWdoIHRoZSB0cmVlLlxyXG5cdGlmIChub2RlVHlwZSA9PT0gJ3N2ZycpIGlzU3ZnID0gdHJ1ZTtcclxuXHJcblx0aWYgKGV4Y2Vzc0RvbUNoaWxkcmVuICE9IG51bGwpIHtcclxuXHRcdGZvciAoOyBpIDwgZXhjZXNzRG9tQ2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0Y29uc3QgY2hpbGQgPSBleGNlc3NEb21DaGlsZHJlbltpXTtcclxuXHJcblx0XHRcdC8vIGlmIG5ld1ZOb2RlIG1hdGNoZXMgYW4gZWxlbWVudCBpbiBleGNlc3NEb21DaGlsZHJlbiBvciB0aGUgYGRvbWBcclxuXHRcdFx0Ly8gYXJndW1lbnQgbWF0Y2hlcyBhbiBlbGVtZW50IGluIGV4Y2Vzc0RvbUNoaWxkcmVuLCByZW1vdmUgaXQgZnJvbVxyXG5cdFx0XHQvLyBleGNlc3NEb21DaGlsZHJlbiBzbyBpdCBpc24ndCBsYXRlciByZW1vdmVkIGluIGRpZmZDaGlsZHJlblxyXG5cdFx0XHRpZiAoXHJcblx0XHRcdFx0Y2hpbGQgJiZcclxuXHRcdFx0XHQnc2V0QXR0cmlidXRlJyBpbiBjaGlsZCA9PT0gISFub2RlVHlwZSAmJlxyXG5cdFx0XHRcdChub2RlVHlwZSA/IGNoaWxkLmxvY2FsTmFtZSA9PT0gbm9kZVR5cGUgOiBjaGlsZC5ub2RlVHlwZSA9PT0gMylcclxuXHRcdFx0KSB7XHJcblx0XHRcdFx0ZG9tID0gY2hpbGQ7XHJcblx0XHRcdFx0ZXhjZXNzRG9tQ2hpbGRyZW5baV0gPSBudWxsO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRpZiAoZG9tID09IG51bGwpIHtcclxuXHRcdGlmIChub2RlVHlwZSA9PT0gbnVsbCkge1xyXG5cdFx0XHQvLyBAdHMtaWdub3JlIGNyZWF0ZVRleHROb2RlIHJldHVybnMgVGV4dCwgd2UgZXhwZWN0IFByZWFjdEVsZW1lbnRcclxuXHRcdFx0cmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG5ld1Byb3BzKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoaXNTdmcpIHtcclxuXHRcdFx0ZG9tID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFxyXG5cdFx0XHRcdCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsXHJcblx0XHRcdFx0Ly8gQHRzLWlnbm9yZSBXZSBrbm93IGBuZXdWTm9kZS50eXBlYCBpcyBhIHN0cmluZ1xyXG5cdFx0XHRcdG5vZGVUeXBlXHJcblx0XHRcdCk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRkb20gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFxyXG5cdFx0XHRcdC8vIEB0cy1pZ25vcmUgV2Uga25vdyBgbmV3Vk5vZGUudHlwZWAgaXMgYSBzdHJpbmdcclxuXHRcdFx0XHRub2RlVHlwZSxcclxuXHRcdFx0XHRuZXdQcm9wcy5pcyAmJiBuZXdQcm9wc1xyXG5cdFx0XHQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIHdlIGNyZWF0ZWQgYSBuZXcgcGFyZW50LCBzbyBub25lIG9mIHRoZSBwcmV2aW91c2x5IGF0dGFjaGVkIGNoaWxkcmVuIGNhbiBiZSByZXVzZWQ6XHJcblx0XHRleGNlc3NEb21DaGlsZHJlbiA9IG51bGw7XHJcblx0XHQvLyB3ZSBhcmUgY3JlYXRpbmcgYSBuZXcgbm9kZSwgc28gd2UgY2FuIGFzc3VtZSB0aGlzIGlzIGEgbmV3IHN1YnRyZWUgKGluIGNhc2Ugd2UgYXJlIGh5ZHJhdGluZyksIHRoaXMgZGVvcHRzIHRoZSBoeWRyYXRlXHJcblx0XHRpc0h5ZHJhdGluZyA9IGZhbHNlO1xyXG5cdH1cclxuXHJcblx0aWYgKG5vZGVUeXBlID09PSBudWxsKSB7XHJcblx0XHQvLyBEdXJpbmcgaHlkcmF0aW9uLCB3ZSBzdGlsbCBoYXZlIHRvIHNwbGl0IG1lcmdlZCB0ZXh0IGZyb20gU1NSJ2QgSFRNTC5cclxuXHRcdGlmIChvbGRQcm9wcyAhPT0gbmV3UHJvcHMgJiYgKCFpc0h5ZHJhdGluZyB8fCBkb20uZGF0YSAhPT0gbmV3UHJvcHMpKSB7XHJcblx0XHRcdGRvbS5kYXRhID0gbmV3UHJvcHM7XHJcblx0XHR9XHJcblx0fSBlbHNlIHtcclxuXHRcdC8vIElmIGV4Y2Vzc0RvbUNoaWxkcmVuIHdhcyBub3QgbnVsbCwgcmVwb3B1bGF0ZSBpdCB3aXRoIHRoZSBjdXJyZW50IGVsZW1lbnQncyBjaGlsZHJlbjpcclxuXHRcdGV4Y2Vzc0RvbUNoaWxkcmVuID0gZXhjZXNzRG9tQ2hpbGRyZW4gJiYgc2xpY2UuY2FsbChkb20uY2hpbGROb2Rlcyk7XHJcblxyXG5cdFx0b2xkUHJvcHMgPSBvbGRWTm9kZS5wcm9wcyB8fCBFTVBUWV9PQko7XHJcblxyXG5cdFx0bGV0IG9sZEh0bWwgPSBvbGRQcm9wcy5kYW5nZXJvdXNseVNldElubmVySFRNTDtcclxuXHRcdGxldCBuZXdIdG1sID0gbmV3UHJvcHMuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw7XHJcblxyXG5cdFx0Ly8gRHVyaW5nIGh5ZHJhdGlvbiwgcHJvcHMgYXJlIG5vdCBkaWZmZWQgYXQgYWxsIChpbmNsdWRpbmcgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpXHJcblx0XHQvLyBAVE9ETyB3ZSBzaG91bGQgd2FybiBpbiBkZWJ1ZyBtb2RlIHdoZW4gcHJvcHMgZG9uJ3QgbWF0Y2ggaGVyZS5cclxuXHRcdGlmICghaXNIeWRyYXRpbmcpIHtcclxuXHRcdFx0Ly8gQnV0LCBpZiB3ZSBhcmUgaW4gYSBzaXR1YXRpb24gd2hlcmUgd2UgYXJlIHVzaW5nIGV4aXN0aW5nIERPTSAoZS5nLiByZXBsYWNlTm9kZSlcclxuXHRcdFx0Ly8gd2Ugc2hvdWxkIHJlYWQgdGhlIGV4aXN0aW5nIERPTSBhdHRyaWJ1dGVzIHRvIGRpZmYgdGhlbVxyXG5cdFx0XHRpZiAoZXhjZXNzRG9tQ2hpbGRyZW4gIT0gbnVsbCkge1xyXG5cdFx0XHRcdG9sZFByb3BzID0ge307XHJcblx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IGRvbS5hdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdFx0XHRvbGRQcm9wc1tkb20uYXR0cmlidXRlc1tpXS5uYW1lXSA9IGRvbS5hdHRyaWJ1dGVzW2ldLnZhbHVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKG5ld0h0bWwgfHwgb2xkSHRtbCkge1xyXG5cdFx0XHRcdC8vIEF2b2lkIHJlLWFwcGx5aW5nIHRoZSBzYW1lICdfX2h0bWwnIGlmIGl0IGRpZCBub3QgY2hhbmdlZCBiZXR3ZWVuIHJlLXJlbmRlclxyXG5cdFx0XHRcdGlmIChcclxuXHRcdFx0XHRcdCFuZXdIdG1sIHx8XHJcblx0XHRcdFx0XHQoKCFvbGRIdG1sIHx8IG5ld0h0bWwuX19odG1sICE9IG9sZEh0bWwuX19odG1sKSAmJlxyXG5cdFx0XHRcdFx0XHRuZXdIdG1sLl9faHRtbCAhPT0gZG9tLmlubmVySFRNTClcclxuXHRcdFx0XHQpIHtcclxuXHRcdFx0XHRcdGRvbS5pbm5lckhUTUwgPSAobmV3SHRtbCAmJiBuZXdIdG1sLl9faHRtbCkgfHwgJyc7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0ZGlmZlByb3BzKGRvbSwgbmV3UHJvcHMsIG9sZFByb3BzLCBpc1N2ZywgaXNIeWRyYXRpbmcpO1xyXG5cclxuXHRcdC8vIElmIHRoZSBuZXcgdm5vZGUgZGlkbid0IGhhdmUgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwsIGRpZmYgaXRzIGNoaWxkcmVuXHJcblx0XHRpZiAobmV3SHRtbCkge1xyXG5cdFx0XHRuZXdWTm9kZS5fY2hpbGRyZW4gPSBbXTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGkgPSBuZXdWTm9kZS5wcm9wcy5jaGlsZHJlbjtcclxuXHRcdFx0ZGlmZkNoaWxkcmVuKFxyXG5cdFx0XHRcdGRvbSxcclxuXHRcdFx0XHRBcnJheS5pc0FycmF5KGkpID8gaSA6IFtpXSxcclxuXHRcdFx0XHRuZXdWTm9kZSxcclxuXHRcdFx0XHRvbGRWTm9kZSxcclxuXHRcdFx0XHRnbG9iYWxDb250ZXh0LFxyXG5cdFx0XHRcdGlzU3ZnICYmIG5vZGVUeXBlICE9PSAnZm9yZWlnbk9iamVjdCcsXHJcblx0XHRcdFx0ZXhjZXNzRG9tQ2hpbGRyZW4sXHJcblx0XHRcdFx0Y29tbWl0UXVldWUsXHJcblx0XHRcdFx0ZXhjZXNzRG9tQ2hpbGRyZW5cclxuXHRcdFx0XHRcdD8gZXhjZXNzRG9tQ2hpbGRyZW5bMF1cclxuXHRcdFx0XHRcdDogb2xkVk5vZGUuX2NoaWxkcmVuICYmIGdldERvbVNpYmxpbmcob2xkVk5vZGUsIDApLFxyXG5cdFx0XHRcdGlzSHlkcmF0aW5nXHJcblx0XHRcdCk7XHJcblxyXG5cdFx0XHQvLyBSZW1vdmUgY2hpbGRyZW4gdGhhdCBhcmUgbm90IHBhcnQgb2YgYW55IHZub2RlLlxyXG5cdFx0XHRpZiAoZXhjZXNzRG9tQ2hpbGRyZW4gIT0gbnVsbCkge1xyXG5cdFx0XHRcdGZvciAoaSA9IGV4Y2Vzc0RvbUNoaWxkcmVuLmxlbmd0aDsgaS0tOyApIHtcclxuXHRcdFx0XHRcdGlmIChleGNlc3NEb21DaGlsZHJlbltpXSAhPSBudWxsKSByZW1vdmVOb2RlKGV4Y2Vzc0RvbUNoaWxkcmVuW2ldKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyAoYXMgYWJvdmUsIGRvbid0IGRpZmYgcHJvcHMgZHVyaW5nIGh5ZHJhdGlvbilcclxuXHRcdGlmICghaXNIeWRyYXRpbmcpIHtcclxuXHRcdFx0aWYgKFxyXG5cdFx0XHRcdCd2YWx1ZScgaW4gbmV3UHJvcHMgJiZcclxuXHRcdFx0XHQoaSA9IG5ld1Byb3BzLnZhbHVlKSAhPT0gdW5kZWZpbmVkICYmXHJcblx0XHRcdFx0Ly8gIzI3NTYgRm9yIHRoZSA8cHJvZ3Jlc3M+LWVsZW1lbnQgdGhlIGluaXRpYWwgdmFsdWUgaXMgMCxcclxuXHRcdFx0XHQvLyBkZXNwaXRlIHRoZSBhdHRyaWJ1dGUgbm90IGJlaW5nIHByZXNlbnQuIFdoZW4gdGhlIGF0dHJpYnV0ZVxyXG5cdFx0XHRcdC8vIGlzIG1pc3NpbmcgdGhlIHByb2dyZXNzIGJhciBpcyB0cmVhdGVkIGFzIGluZGV0ZXJtaW5hdGUuXHJcblx0XHRcdFx0Ly8gVG8gZml4IHRoYXQgd2UnbGwgYWx3YXlzIHVwZGF0ZSBpdCB3aGVuIGl0IGlzIDAgZm9yIHByb2dyZXNzIGVsZW1lbnRzXHJcblx0XHRcdFx0KGkgIT09IG9sZFByb3BzLnZhbHVlIHx8XHJcblx0XHRcdFx0XHRpICE9PSBkb20udmFsdWUgfHxcclxuXHRcdFx0XHRcdChub2RlVHlwZSA9PT0gJ3Byb2dyZXNzJyAmJiAhaSkpXHJcblx0XHRcdCkge1xyXG5cdFx0XHRcdHNldFByb3BlcnR5KGRvbSwgJ3ZhbHVlJywgaSwgb2xkUHJvcHMudmFsdWUsIGZhbHNlKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoXHJcblx0XHRcdFx0J2NoZWNrZWQnIGluIG5ld1Byb3BzICYmXHJcblx0XHRcdFx0KGkgPSBuZXdQcm9wcy5jaGVja2VkKSAhPT0gdW5kZWZpbmVkICYmXHJcblx0XHRcdFx0aSAhPT0gZG9tLmNoZWNrZWRcclxuXHRcdFx0KSB7XHJcblx0XHRcdFx0c2V0UHJvcGVydHkoZG9tLCAnY2hlY2tlZCcsIGksIG9sZFByb3BzLmNoZWNrZWQsIGZhbHNlKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIGRvbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEludm9rZSBvciB1cGRhdGUgYSByZWYsIGRlcGVuZGluZyBvbiB3aGV0aGVyIGl0IGlzIGEgZnVuY3Rpb24gb3Igb2JqZWN0IHJlZi5cclxuICogQHBhcmFtIHtvYmplY3R8ZnVuY3Rpb259IHJlZlxyXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcclxuICogQHBhcmFtIHtpbXBvcnQoJy4uL2ludGVybmFsJykuVk5vZGV9IHZub2RlXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlSZWYocmVmLCB2YWx1ZSwgdm5vZGUpIHtcclxuXHR0cnkge1xyXG5cdFx0aWYgKHR5cGVvZiByZWYgPT0gJ2Z1bmN0aW9uJykgcmVmKHZhbHVlKTtcclxuXHRcdGVsc2UgcmVmLmN1cnJlbnQgPSB2YWx1ZTtcclxuXHR9IGNhdGNoIChlKSB7XHJcblx0XHRvcHRpb25zLl9jYXRjaEVycm9yKGUsIHZub2RlKTtcclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVbm1vdW50IGEgdmlydHVhbCBub2RlIGZyb20gdGhlIHRyZWUgYW5kIGFwcGx5IERPTSBjaGFuZ2VzXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLlZOb2RlfSB2bm9kZSBUaGUgdmlydHVhbCBub2RlIHRvIHVubW91bnRcclxuICogQHBhcmFtIHtpbXBvcnQoJy4uL2ludGVybmFsJykuVk5vZGV9IHBhcmVudFZOb2RlIFRoZSBwYXJlbnQgb2YgdGhlIFZOb2RlIHRoYXRcclxuICogaW5pdGlhdGVkIHRoZSB1bm1vdW50XHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW3NraXBSZW1vdmVdIEZsYWcgdGhhdCBpbmRpY2F0ZXMgdGhhdCBhIHBhcmVudCBub2RlIG9mIHRoZVxyXG4gKiBjdXJyZW50IGVsZW1lbnQgaXMgYWxyZWFkeSBkZXRhY2hlZCBmcm9tIHRoZSBET00uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdW5tb3VudCh2bm9kZSwgcGFyZW50Vk5vZGUsIHNraXBSZW1vdmUpIHtcclxuXHRsZXQgcjtcclxuXHRpZiAob3B0aW9ucy51bm1vdW50KSBvcHRpb25zLnVubW91bnQodm5vZGUpO1xyXG5cclxuXHRpZiAoKHIgPSB2bm9kZS5yZWYpKSB7XHJcblx0XHRpZiAoIXIuY3VycmVudCB8fCByLmN1cnJlbnQgPT09IHZub2RlLl9kb20pIGFwcGx5UmVmKHIsIG51bGwsIHBhcmVudFZOb2RlKTtcclxuXHR9XHJcblxyXG5cdGlmICgociA9IHZub2RlLl9jb21wb25lbnQpICE9IG51bGwpIHtcclxuXHRcdGlmIChyLmNvbXBvbmVudFdpbGxVbm1vdW50KSB7XHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0ci5jb21wb25lbnRXaWxsVW5tb3VudCgpO1xyXG5cdFx0XHR9IGNhdGNoIChlKSB7XHJcblx0XHRcdFx0b3B0aW9ucy5fY2F0Y2hFcnJvcihlLCBwYXJlbnRWTm9kZSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyLmJhc2UgPSByLl9wYXJlbnREb20gPSBudWxsO1xyXG5cdH1cclxuXHJcblx0aWYgKChyID0gdm5vZGUuX2NoaWxkcmVuKSkge1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCByLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGlmIChyW2ldKSB7XHJcblx0XHRcdFx0dW5tb3VudChyW2ldLCBwYXJlbnRWTm9kZSwgdHlwZW9mIHZub2RlLnR5cGUgIT0gJ2Z1bmN0aW9uJyk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGlmICghc2tpcFJlbW92ZSAmJiB2bm9kZS5fZG9tICE9IG51bGwpIHJlbW92ZU5vZGUodm5vZGUuX2RvbSk7XHJcblxyXG5cdC8vIE11c3QgYmUgc2V0IHRvIGB1bmRlZmluZWRgIHRvIHByb3Blcmx5IGNsZWFuIHVwIGBfbmV4dERvbWBcclxuXHQvLyBmb3Igd2hpY2ggYG51bGxgIGlzIGEgdmFsaWQgdmFsdWUuIFNlZSBjb21tZW50IGluIGBjcmVhdGUtZWxlbWVudC5qc2BcclxuXHR2bm9kZS5fZG9tID0gdm5vZGUuX25leHREb20gPSB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbi8qKiBUaGUgYC5yZW5kZXIoKWAgbWV0aG9kIGZvciBhIFBGQyBiYWNraW5nIGluc3RhbmNlLiAqL1xyXG5mdW5jdGlvbiBkb1JlbmRlcihwcm9wcywgc3RhdGUsIGNvbnRleHQpIHtcclxuXHRyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvcihwcm9wcywgY29udGV4dCk7XHJcbn1cclxuIiwgImltcG9ydCB7IEVNUFRZX09CSiB9IGZyb20gJy4vY29uc3RhbnRzJztcclxuaW1wb3J0IHsgY29tbWl0Um9vdCwgZGlmZiB9IGZyb20gJy4vZGlmZi9pbmRleCc7XHJcbmltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIEZyYWdtZW50IH0gZnJvbSAnLi9jcmVhdGUtZWxlbWVudCc7XHJcbmltcG9ydCBvcHRpb25zIGZyb20gJy4vb3B0aW9ucyc7XHJcbmltcG9ydCB7IHNsaWNlIH0gZnJvbSAnLi91dGlsJztcclxuXHJcbi8qKlxyXG4gKiBSZW5kZXIgYSBQcmVhY3QgdmlydHVhbCBub2RlIGludG8gYSBET00gZWxlbWVudFxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLkNvbXBvbmVudENoaWxkfSB2bm9kZSBUaGUgdmlydHVhbCBub2RlIHRvIHJlbmRlclxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlByZWFjdEVsZW1lbnR9IHBhcmVudERvbSBUaGUgRE9NIGVsZW1lbnQgdG9cclxuICogcmVuZGVyIGludG9cclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5QcmVhY3RFbGVtZW50IHwgb2JqZWN0fSBbcmVwbGFjZU5vZGVdIE9wdGlvbmFsOiBBdHRlbXB0IHRvIHJlLXVzZSBhblxyXG4gKiBleGlzdGluZyBET00gdHJlZSByb290ZWQgYXQgYHJlcGxhY2VOb2RlYFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcih2bm9kZSwgcGFyZW50RG9tLCByZXBsYWNlTm9kZSkge1xyXG5cdGlmIChvcHRpb25zLl9yb290KSBvcHRpb25zLl9yb290KHZub2RlLCBwYXJlbnREb20pO1xyXG5cclxuXHQvLyBXZSBhYnVzZSB0aGUgYHJlcGxhY2VOb2RlYCBwYXJhbWV0ZXIgaW4gYGh5ZHJhdGUoKWAgdG8gc2lnbmFsIGlmIHdlIGFyZSBpblxyXG5cdC8vIGh5ZHJhdGlvbiBtb2RlIG9yIG5vdCBieSBwYXNzaW5nIHRoZSBgaHlkcmF0ZWAgZnVuY3Rpb24gaW5zdGVhZCBvZiBhIERPTVxyXG5cdC8vIGVsZW1lbnQuLlxyXG5cdGxldCBpc0h5ZHJhdGluZyA9IHR5cGVvZiByZXBsYWNlTm9kZSA9PT0gJ2Z1bmN0aW9uJztcclxuXHJcblx0Ly8gVG8gYmUgYWJsZSB0byBzdXBwb3J0IGNhbGxpbmcgYHJlbmRlcigpYCBtdWx0aXBsZSB0aW1lcyBvbiB0aGUgc2FtZVxyXG5cdC8vIERPTSBub2RlLCB3ZSBuZWVkIHRvIG9idGFpbiBhIHJlZmVyZW5jZSB0byB0aGUgcHJldmlvdXMgdHJlZS4gV2UgZG9cclxuXHQvLyB0aGlzIGJ5IGFzc2lnbmluZyBhIG5ldyBgX2NoaWxkcmVuYCBwcm9wZXJ0eSB0byBET00gbm9kZXMgd2hpY2ggcG9pbnRzXHJcblx0Ly8gdG8gdGhlIGxhc3QgcmVuZGVyZWQgdHJlZS4gQnkgZGVmYXVsdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBwcmVzZW50LCB3aGljaFxyXG5cdC8vIG1lYW5zIHRoYXQgd2UgYXJlIG1vdW50aW5nIGEgbmV3IHRyZWUgZm9yIHRoZSBmaXJzdCB0aW1lLlxyXG5cdGxldCBvbGRWTm9kZSA9IGlzSHlkcmF0aW5nXHJcblx0XHQ/IG51bGxcclxuXHRcdDogKHJlcGxhY2VOb2RlICYmIHJlcGxhY2VOb2RlLl9jaGlsZHJlbikgfHwgcGFyZW50RG9tLl9jaGlsZHJlbjtcclxuXHJcblx0dm5vZGUgPSAoXHJcblx0XHQoIWlzSHlkcmF0aW5nICYmIHJlcGxhY2VOb2RlKSB8fFxyXG5cdFx0cGFyZW50RG9tXHJcblx0KS5fY2hpbGRyZW4gPSBjcmVhdGVFbGVtZW50KEZyYWdtZW50LCBudWxsLCBbdm5vZGVdKTtcclxuXHJcblx0Ly8gTGlzdCBvZiBlZmZlY3RzIHRoYXQgbmVlZCB0byBiZSBjYWxsZWQgYWZ0ZXIgZGlmZmluZy5cclxuXHRsZXQgY29tbWl0UXVldWUgPSBbXTtcclxuXHRkaWZmKFxyXG5cdFx0cGFyZW50RG9tLFxyXG5cdFx0Ly8gRGV0ZXJtaW5lIHRoZSBuZXcgdm5vZGUgdHJlZSBhbmQgc3RvcmUgaXQgb24gdGhlIERPTSBlbGVtZW50IG9uXHJcblx0XHQvLyBvdXIgY3VzdG9tIGBfY2hpbGRyZW5gIHByb3BlcnR5LlxyXG5cdFx0dm5vZGUsXHJcblx0XHRvbGRWTm9kZSB8fCBFTVBUWV9PQkosXHJcblx0XHRFTVBUWV9PQkosXHJcblx0XHRwYXJlbnREb20ub3duZXJTVkdFbGVtZW50ICE9PSB1bmRlZmluZWQsXHJcblx0XHQhaXNIeWRyYXRpbmcgJiYgcmVwbGFjZU5vZGVcclxuXHRcdFx0PyBbcmVwbGFjZU5vZGVdXHJcblx0XHRcdDogb2xkVk5vZGVcclxuXHRcdFx0PyBudWxsXHJcblx0XHRcdDogcGFyZW50RG9tLmZpcnN0Q2hpbGRcclxuXHRcdFx0PyBzbGljZS5jYWxsKHBhcmVudERvbS5jaGlsZE5vZGVzKVxyXG5cdFx0XHQ6IG51bGwsXHJcblx0XHRjb21taXRRdWV1ZSxcclxuXHRcdCFpc0h5ZHJhdGluZyAmJiByZXBsYWNlTm9kZVxyXG5cdFx0XHQ/IHJlcGxhY2VOb2RlXHJcblx0XHRcdDogb2xkVk5vZGVcclxuXHRcdFx0PyBvbGRWTm9kZS5fZG9tXHJcblx0XHRcdDogcGFyZW50RG9tLmZpcnN0Q2hpbGQsXHJcblx0XHRpc0h5ZHJhdGluZ1xyXG5cdCk7XHJcblxyXG5cdC8vIEZsdXNoIGFsbCBxdWV1ZWQgZWZmZWN0c1xyXG5cdGNvbW1pdFJvb3QoY29tbWl0UXVldWUsIHZub2RlKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFVwZGF0ZSBhbiBleGlzdGluZyBET00gZWxlbWVudCB3aXRoIGRhdGEgZnJvbSBhIFByZWFjdCB2aXJ0dWFsIG5vZGVcclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5Db21wb25lbnRDaGlsZH0gdm5vZGUgVGhlIHZpcnR1YWwgbm9kZSB0byByZW5kZXJcclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5QcmVhY3RFbGVtZW50fSBwYXJlbnREb20gVGhlIERPTSBlbGVtZW50IHRvXHJcbiAqIHVwZGF0ZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGh5ZHJhdGUodm5vZGUsIHBhcmVudERvbSkge1xyXG5cdHJlbmRlcih2bm9kZSwgcGFyZW50RG9tLCBoeWRyYXRlKTtcclxufVxyXG4iLCAiaW1wb3J0IHsgYXNzaWduLCBzbGljZSB9IGZyb20gJy4vdXRpbCc7XHJcbmltcG9ydCB7IGNyZWF0ZVZOb2RlIH0gZnJvbSAnLi9jcmVhdGUtZWxlbWVudCc7XHJcblxyXG4vKipcclxuICogQ2xvbmVzIHRoZSBnaXZlbiBWTm9kZSwgb3B0aW9uYWxseSBhZGRpbmcgYXR0cmlidXRlcy9wcm9wcyBhbmQgcmVwbGFjaW5nIGl0cyBjaGlsZHJlbi5cclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5WTm9kZX0gdm5vZGUgVGhlIHZpcnR1YWwgRE9NIGVsZW1lbnQgdG8gY2xvbmVcclxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzIEF0dHJpYnV0ZXMvcHJvcHMgdG8gYWRkIHdoZW4gY2xvbmluZ1xyXG4gKiBAcGFyYW0ge0FycmF5PGltcG9ydCgnLi9pbnRlcm5hbCcpLkNvbXBvbmVudENoaWxkcmVuPn0gcmVzdCBBbnkgYWRkaXRpb25hbCBhcmd1bWVudHMgd2lsbCBiZSB1c2VkIGFzIHJlcGxhY2VtZW50IGNoaWxkcmVuLlxyXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL2ludGVybmFsJykuVk5vZGV9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY2xvbmVFbGVtZW50KHZub2RlLCBwcm9wcywgY2hpbGRyZW4pIHtcclxuXHRsZXQgbm9ybWFsaXplZFByb3BzID0gYXNzaWduKHt9LCB2bm9kZS5wcm9wcyksXHJcblx0XHRrZXksXHJcblx0XHRyZWYsXHJcblx0XHRpO1xyXG5cdGZvciAoaSBpbiBwcm9wcykge1xyXG5cdFx0aWYgKGkgPT0gJ2tleScpIGtleSA9IHByb3BzW2ldO1xyXG5cdFx0ZWxzZSBpZiAoaSA9PSAncmVmJykgcmVmID0gcHJvcHNbaV07XHJcblx0XHRlbHNlIG5vcm1hbGl6ZWRQcm9wc1tpXSA9IHByb3BzW2ldO1xyXG5cdH1cclxuXHJcblx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPiAyKSB7XHJcblx0XHRub3JtYWxpemVkUHJvcHMuY2hpbGRyZW4gPVxyXG5cdFx0XHRhcmd1bWVudHMubGVuZ3RoID4gMyA/IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKSA6IGNoaWxkcmVuO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIGNyZWF0ZVZOb2RlKFxyXG5cdFx0dm5vZGUudHlwZSxcclxuXHRcdG5vcm1hbGl6ZWRQcm9wcyxcclxuXHRcdGtleSB8fCB2bm9kZS5rZXksXHJcblx0XHRyZWYgfHwgdm5vZGUucmVmLFxyXG5cdFx0bnVsbFxyXG5cdCk7XHJcbn1cclxuIiwgIi8qKlxyXG4gKiBGaW5kIHRoZSBjbG9zZXN0IGVycm9yIGJvdW5kYXJ5IHRvIGEgdGhyb3duIGVycm9yIGFuZCBjYWxsIGl0XHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBlcnJvciBUaGUgdGhyb3duIHZhbHVlXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLlZOb2RlfSB2bm9kZSBUaGUgdm5vZGUgdGhhdCB0aHJld1xyXG4gKiB0aGUgZXJyb3IgdGhhdCB3YXMgY2F1Z2h0IChleGNlcHQgZm9yIHVubW91bnRpbmcgd2hlbiB0aGlzIHBhcmFtZXRlclxyXG4gKiBpcyB0aGUgaGlnaGVzdCBwYXJlbnQgdGhhdCB3YXMgYmVpbmcgdW5tb3VudGVkKVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIF9jYXRjaEVycm9yKGVycm9yLCB2bm9kZSkge1xyXG5cdC8qKiBAdHlwZSB7aW1wb3J0KCcuLi9pbnRlcm5hbCcpLkNvbXBvbmVudH0gKi9cclxuXHRsZXQgY29tcG9uZW50LCBjdG9yLCBoYW5kbGVkO1xyXG5cclxuXHRmb3IgKDsgKHZub2RlID0gdm5vZGUuX3BhcmVudCk7ICkge1xyXG5cdFx0aWYgKChjb21wb25lbnQgPSB2bm9kZS5fY29tcG9uZW50KSAmJiAhY29tcG9uZW50Ll9wcm9jZXNzaW5nRXhjZXB0aW9uKSB7XHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0Y3RvciA9IGNvbXBvbmVudC5jb25zdHJ1Y3RvcjtcclxuXHJcblx0XHRcdFx0aWYgKGN0b3IgJiYgY3Rvci5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IgIT0gbnVsbCkge1xyXG5cdFx0XHRcdFx0Y29tcG9uZW50LnNldFN0YXRlKGN0b3IuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yKGVycm9yKSk7XHJcblx0XHRcdFx0XHRoYW5kbGVkID0gY29tcG9uZW50Ll9kaXJ0eTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmIChjb21wb25lbnQuY29tcG9uZW50RGlkQ2F0Y2ggIT0gbnVsbCkge1xyXG5cdFx0XHRcdFx0Y29tcG9uZW50LmNvbXBvbmVudERpZENhdGNoKGVycm9yKTtcclxuXHRcdFx0XHRcdGhhbmRsZWQgPSBjb21wb25lbnQuX2RpcnR5O1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gVGhpcyBpcyBhbiBlcnJvciBib3VuZGFyeS4gTWFyayBpdCBhcyBoYXZpbmcgYmFpbGVkIG91dCwgYW5kIHdoZXRoZXIgaXQgd2FzIG1pZC1oeWRyYXRpb24uXHJcblx0XHRcdFx0aWYgKGhhbmRsZWQpIHtcclxuXHRcdFx0XHRcdHJldHVybiAoY29tcG9uZW50Ll9wZW5kaW5nRXJyb3IgPSBjb21wb25lbnQpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBjYXRjaCAoZSkge1xyXG5cdFx0XHRcdGVycm9yID0gZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0dGhyb3cgZXJyb3I7XHJcbn1cclxuIiwgImltcG9ydCB7IFNlYXJjaEluZGV4IH0gZnJvbSAnLi9oZWxwZXJzJ1xuXG5leHBvcnQgZnVuY3Rpb24gZGVlcEVxdWFsKGE6IGFueSwgYjogYW55KTogYm9vbGVhbiB7XG4gIHJldHVybiAoXG4gICAgQXJyYXkuaXNBcnJheShhKSAmJlxuICAgIEFycmF5LmlzQXJyYXkoYikgJiZcbiAgICBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiZcbiAgICBhLmV2ZXJ5KCh2YWwsIGluZGV4KSA9PiB2YWwgPT0gYltpbmRleF0pXG4gIClcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNsZWVwKGZyYW1lcyA9IDEpIHtcbiAgZm9yIChsZXQgXyBpbiBbLi4uQXJyYXkoZnJhbWVzKS5rZXlzKCldKSB7XG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVxdWVzdEFuaW1hdGlvbkZyYW1lKVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbW9qaURhdGEoZW1vamksIHsgc2tpbkluZGV4ID0gMCB9ID0ge30pIHtcbiAgY29uc3Qgc2tpbiA9XG4gICAgZW1vamkuc2tpbnNbc2tpbkluZGV4XSB8fFxuICAgICgoKSA9PiB7XG4gICAgICBza2luSW5kZXggPSAwXG4gICAgICByZXR1cm4gZW1vamkuc2tpbnNbc2tpbkluZGV4XVxuICAgIH0pKClcblxuICBjb25zdCBlbW9qaURhdGE6IGFueSA9IHtcbiAgICBpZDogZW1vamkuaWQsXG4gICAgbmFtZTogZW1vamkubmFtZSxcbiAgICBuYXRpdmU6IHNraW4ubmF0aXZlLFxuICAgIHVuaWZpZWQ6IHNraW4udW5pZmllZCxcbiAgICBrZXl3b3JkczogZW1vamkua2V5d29yZHMsXG4gICAgc2hvcnRjb2Rlczogc2tpbi5zaG9ydGNvZGVzIHx8IGVtb2ppLnNob3J0Y29kZXMsXG4gIH1cblxuICBpZiAoZW1vamkuc2tpbnMubGVuZ3RoID4gMSkge1xuICAgIGVtb2ppRGF0YS5za2luID0gc2tpbkluZGV4ICsgMVxuICB9XG5cbiAgaWYgKHNraW4uc3JjKSB7XG4gICAgZW1vamlEYXRhLnNyYyA9IHNraW4uc3JjXG4gIH1cblxuICBpZiAoZW1vamkuYWxpYXNlcyAmJiBlbW9qaS5hbGlhc2VzLmxlbmd0aCkge1xuICAgIGVtb2ppRGF0YS5hbGlhc2VzID0gZW1vamkuYWxpYXNlc1xuICB9XG5cbiAgaWYgKGVtb2ppLmVtb3RpY29ucyAmJiBlbW9qaS5lbW90aWNvbnMubGVuZ3RoKSB7XG4gICAgZW1vamlEYXRhLmVtb3RpY29ucyA9IGVtb2ppLmVtb3RpY29uc1xuICB9XG5cbiAgcmV0dXJuIGVtb2ppRGF0YVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RW1vamlEYXRhRnJvbU5hdGl2ZShuYXRpdmVTdHJpbmcpIHtcbiAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IFNlYXJjaEluZGV4LnNlYXJjaChuYXRpdmVTdHJpbmcsIHtcbiAgICBtYXhSZXN1bHRzOiAxLFxuICAgIGNhbGxlcjogJ2dldEVtb2ppRGF0YUZyb21OYXRpdmUnLFxuICB9KVxuICBpZiAoIXJlc3VsdHMgfHwgIXJlc3VsdHMubGVuZ3RoKSByZXR1cm4gbnVsbFxuXG4gIGNvbnN0IGVtb2ppID0gcmVzdWx0c1swXVxuICBsZXQgc2tpbkluZGV4ID0gMFxuXG4gIGZvciAobGV0IHNraW4gb2YgZW1vamkuc2tpbnMpIHtcbiAgICBpZiAoc2tpbi5uYXRpdmUgPT0gbmF0aXZlU3RyaW5nKSB7XG4gICAgICBicmVha1xuICAgIH1cblxuICAgIHNraW5JbmRleCsrXG4gIH1cblxuICByZXR1cm4gZ2V0RW1vamlEYXRhKGVtb2ppLCB7IHNraW5JbmRleCB9KVxufVxuIiwgImV4cG9ydCB7IGRlZmF1bHQgYXMgU3RvcmUgfSBmcm9tICcuL3N0b3JlJ1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIE5hdGl2ZVN1cHBvcnQgfSBmcm9tICcuL25hdGl2ZS1zdXBwb3J0J1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBGcmVxdWVudGx5VXNlZCB9IGZyb20gJy4vZnJlcXVlbnRseS11c2VkJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTZWFyY2hJbmRleCB9IGZyb20gJy4vc2VhcmNoLWluZGV4J1xuXG5leHBvcnQgY29uc3QgU2FmZUZsYWdzID0gW1xuICAnY2hlY2tlcmVkX2ZsYWcnLFxuICAnY3Jvc3NlZF9mbGFncycsXG4gICdwaXJhdGVfZmxhZycsXG4gICdyYWluYm93LWZsYWcnLFxuICAndHJhbnNnZW5kZXJfZmxhZycsXG4gICd0cmlhbmd1bGFyX2ZsYWdfb25fcG9zdCcsXG4gICd3YXZpbmdfYmxhY2tfZmxhZycsXG4gICd3YXZpbmdfd2hpdGVfZmxhZycsXG5dXG4iLCAiZnVuY3Rpb24gc2V0KGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSB7XG4gIHRyeSB7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZVtgZW1vamktbWFydC4ke2tleX1gXSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKVxuICB9IGNhdGNoIChlcnJvcikge31cbn1cblxuZnVuY3Rpb24gZ2V0KGtleTogc3RyaW5nKTogYW55IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB2YWx1ZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2VbYGVtb2ppLW1hcnQuJHtrZXl9YF1cblxuICAgIGlmICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgeyBzZXQsIGdldCB9XG4iLCAiY29uc3QgQ0FDSEUgPSBuZXcgTWFwKClcbmNvbnN0IFZFUlNJT05TID0gW1xuICB7IHY6IDE1LCBlbW9qaTogJ/Cfq6gnIH0sXG4gIHsgdjogMTQsIGVtb2ppOiAn8J+roCcgfSxcbiAgeyB2OiAxMy4xLCBlbW9qaTogJ/CfmLbigI3wn4yr77iPJyB9LFxuICB7IHY6IDEzLCBlbW9qaTogJ/CfpbgnIH0sXG4gIHsgdjogMTIuMSwgZW1vamk6ICfwn6eR4oCN8J+msCcgfSxcbiAgeyB2OiAxMiwgZW1vamk6ICfwn6WxJyB9LFxuICB7IHY6IDExLCBlbW9qaTogJ/CfpbAnIH0sXG4gIHsgdjogNSwgZW1vamk6ICfwn6SpJyB9LFxuICB7IHY6IDQsIGVtb2ppOiAn8J+RseKAjeKZgO+4jycgfSxcbiAgeyB2OiAzLCBlbW9qaTogJ/CfpKMnIH0sXG4gIHsgdjogMiwgZW1vamk6ICfwn5GL8J+PuycgfSxcbiAgeyB2OiAxLCBlbW9qaTogJ/CfmYMnIH0sXG5dXG5cbmZ1bmN0aW9uIGxhdGVzdFZlcnNpb24oKSB7XG4gIGZvciAoY29uc3QgeyB2LCBlbW9qaSB9IG9mIFZFUlNJT05TKSB7XG4gICAgaWYgKGlzU3VwcG9ydGVkKGVtb2ppKSkge1xuICAgICAgcmV0dXJuIHZcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gbm9Db3VudHJ5RmxhZ3MoKSB7XG4gIGlmIChpc1N1cHBvcnRlZCgn8J+HqPCfh6YnKSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgcmV0dXJuIHRydWVcbn1cblxuZnVuY3Rpb24gaXNTdXBwb3J0ZWQoZW1vamkpIHtcbiAgaWYgKENBQ0hFLmhhcyhlbW9qaSkpIHtcbiAgICByZXR1cm4gQ0FDSEUuZ2V0KGVtb2ppKVxuICB9XG5cbiAgY29uc3Qgc3VwcG9ydGVkID0gaXNFbW9qaVN1cHBvcnRlZChlbW9qaSlcbiAgQ0FDSEUuc2V0KGVtb2ppLCBzdXBwb3J0ZWQpXG5cbiAgcmV0dXJuIHN1cHBvcnRlZFxufVxuXG4vLyBodHRwczovL2dpdGh1Yi5jb20va29hbGEtaW50ZXJhY3RpdmUvaXMtZW1vamktc3VwcG9ydGVkXG5jb25zdCBpc0Vtb2ppU3VwcG9ydGVkID0gKCgpID0+IHtcbiAgbGV0IGN0eCA9IG51bGxcbiAgdHJ5IHtcbiAgICBpZiAoIW5hdmlnYXRvci51c2VyQWdlbnQuaW5jbHVkZXMoJ2pzZG9tJykpIHtcbiAgICAgIGN0eCA9IGRvY3VtZW50XG4gICAgICAgIC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKVxuICAgICAgICAuZ2V0Q29udGV4dCgnMmQnLCB7IHdpbGxSZWFkRnJlcXVlbnRseTogdHJ1ZSB9KVxuICAgIH1cbiAgfSBjYXRjaCB7fVxuXG4gIC8vIE5vdCBpbiBicm93c2VyIGVudlxuICBpZiAoIWN0eCkge1xuICAgIHJldHVybiAoKSA9PiBmYWxzZVxuICB9XG5cbiAgY29uc3QgQ0FOVkFTX0hFSUdIVCA9IDI1XG4gIGNvbnN0IENBTlZBU19XSURUSCA9IDIwXG4gIGNvbnN0IHRleHRTaXplID0gTWF0aC5mbG9vcihDQU5WQVNfSEVJR0hUIC8gMilcblxuICAvLyBJbml0aWFsaXplIGNvbnZhcyBjb250ZXh0XG4gIGN0eC5mb250ID0gdGV4dFNpemUgKyAncHggQXJpYWwsIFNhbnMtU2VyaWYnXG4gIGN0eC50ZXh0QmFzZWxpbmUgPSAndG9wJ1xuICBjdHguY2FudmFzLndpZHRoID0gQ0FOVkFTX1dJRFRIICogMlxuICBjdHguY2FudmFzLmhlaWdodCA9IENBTlZBU19IRUlHSFRcblxuICByZXR1cm4gKHVuaWNvZGUpID0+IHtcbiAgICBjdHguY2xlYXJSZWN0KDAsIDAsIENBTlZBU19XSURUSCAqIDIsIENBTlZBU19IRUlHSFQpXG5cbiAgICAvLyBEcmF3IGluIHJlZCBvbiB0aGUgbGVmdFxuICAgIGN0eC5maWxsU3R5bGUgPSAnI0ZGMDAwMCdcbiAgICBjdHguZmlsbFRleHQodW5pY29kZSwgMCwgMjIpXG5cbiAgICAvLyBEcmF3IGluIGJsdWUgb24gcmlnaHRcbiAgICBjdHguZmlsbFN0eWxlID0gJyMwMDAwRkYnXG4gICAgY3R4LmZpbGxUZXh0KHVuaWNvZGUsIENBTlZBU19XSURUSCwgMjIpXG5cbiAgICBjb25zdCBhID0gY3R4LmdldEltYWdlRGF0YSgwLCAwLCBDQU5WQVNfV0lEVEgsIENBTlZBU19IRUlHSFQpLmRhdGFcbiAgICBjb25zdCBjb3VudCA9IGEubGVuZ3RoXG4gICAgbGV0IGkgPSAwXG5cbiAgICAvLyBTZWFyY2ggdGhlIGZpcnN0IHZpc2libGUgcGl4ZWxcbiAgICBmb3IgKDsgaSA8IGNvdW50ICYmICFhW2kgKyAzXTsgaSArPSA0KTtcblxuICAgIC8vIE5vIHZpc2libGUgcGl4ZWxcbiAgICBpZiAoaSA+PSBjb3VudCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgLy8gRW1vamkgaGFzIGltbXV0YWJsZSBjb2xvciwgc28gd2UgY2hlY2sgdGhlIGNvbG9yIG9mIHRoZSBlbW9qaSBpbiB0d28gZGlmZmVyZW50IGNvbG9yc1xuICAgIC8vIHRoZSByZXN1bHQgc2hvdyBiZSB0aGUgc2FtZS5cbiAgICBjb25zdCB4ID0gQ0FOVkFTX1dJRFRIICsgKChpIC8gNCkgJSBDQU5WQVNfV0lEVEgpXG4gICAgY29uc3QgeSA9IE1hdGguZmxvb3IoaSAvIDQgLyBDQU5WQVNfV0lEVEgpXG4gICAgY29uc3QgYiA9IGN0eC5nZXRJbWFnZURhdGEoeCwgeSwgMSwgMSkuZGF0YVxuXG4gICAgaWYgKGFbaV0gIT09IGJbMF0gfHwgYVtpICsgMl0gIT09IGJbMl0pIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIC8vIFNvbWUgZW1vamlzIGFyZSBhIGNvbnRyYWN0aW9uIG9mIGRpZmZlcmVudCBvbmVzLCBzbyBpZiBpdCdzIG5vdFxuICAgIC8vIHN1cHBvcnRlZCwgaXQgd2lsbCBzaG93IG11bHRpcGxlIGNoYXJhY3RlcnNcbiAgICBpZiAoY3R4Lm1lYXN1cmVUZXh0KHVuaWNvZGUpLndpZHRoID49IENBTlZBU19XSURUSCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgLy8gU3VwcG9ydGVkXG4gICAgcmV0dXJuIHRydWVcbiAgfVxufSkoKVxuXG5leHBvcnQgZGVmYXVsdCB7IGxhdGVzdFZlcnNpb24sIG5vQ291bnRyeUZsYWdzIH1cbiIsICIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgU3RvcmUgfSBmcm9tICcuLi9oZWxwZXJzJ1xuXG5jb25zdCBERUZBVUxUUyA9IFtcbiAgJysxJyxcbiAgJ2dyaW5uaW5nJyxcbiAgJ2tpc3NpbmdfaGVhcnQnLFxuICAnaGVhcnRfZXllcycsXG4gICdsYXVnaGluZycsXG4gICdzdHVja19vdXRfdG9uZ3VlX3dpbmtpbmdfZXllJyxcbiAgJ3N3ZWF0X3NtaWxlJyxcbiAgJ2pveScsXG4gICdzY3JlYW0nLFxuICAnZGlzYXBwb2ludGVkJyxcbiAgJ3VuYW11c2VkJyxcbiAgJ3dlYXJ5JyxcbiAgJ3NvYicsXG4gICdzdW5nbGFzc2VzJyxcbiAgJ2hlYXJ0Jyxcbl1cblxubGV0IEluZGV4OiBhbnkgfCBudWxsID0gbnVsbFxuXG5mdW5jdGlvbiBhZGQoZW1vamk6IHsgaWQ6IHN0cmluZyB9KSB7XG4gIEluZGV4IHx8IChJbmRleCA9IFN0b3JlLmdldCgnZnJlcXVlbnRseScpIHx8IHt9KVxuXG4gIGNvbnN0IGVtb2ppSWQgPSBlbW9qaS5pZCB8fCBlbW9qaVxuICBpZiAoIWVtb2ppSWQpIHJldHVyblxuXG4gIEluZGV4W2Vtb2ppSWRdIHx8IChJbmRleFtlbW9qaUlkXSA9IDApXG4gIEluZGV4W2Vtb2ppSWRdICs9IDFcblxuICBTdG9yZS5zZXQoJ2xhc3QnLCBlbW9qaUlkKVxuICBTdG9yZS5zZXQoJ2ZyZXF1ZW50bHknLCBJbmRleClcbn1cblxuZnVuY3Rpb24gZ2V0KHsgbWF4RnJlcXVlbnRSb3dzLCBwZXJMaW5lIH0pIHtcbiAgaWYgKCFtYXhGcmVxdWVudFJvd3MpIHJldHVybiBbXVxuXG4gIEluZGV4IHx8IChJbmRleCA9IFN0b3JlLmdldCgnZnJlcXVlbnRseScpKVxuICBsZXQgZW1vamlJZHMgPSBbXVxuXG4gIGlmICghSW5kZXgpIHtcbiAgICBJbmRleCA9IHt9XG5cbiAgICBmb3IgKGxldCBpIGluIERFRkFVTFRTLnNsaWNlKDAsIHBlckxpbmUpKSB7XG4gICAgICBjb25zdCBlbW9qaUlkID0gREVGQVVMVFNbaV1cblxuICAgICAgSW5kZXhbZW1vamlJZF0gPSBwZXJMaW5lIC0gaVxuICAgICAgZW1vamlJZHMucHVzaChlbW9qaUlkKVxuICAgIH1cblxuICAgIHJldHVybiBlbW9qaUlkc1xuICB9XG5cbiAgY29uc3QgbWF4ID0gbWF4RnJlcXVlbnRSb3dzICogcGVyTGluZVxuICBjb25zdCBsYXN0ID0gU3RvcmUuZ2V0KCdsYXN0JylcblxuICBmb3IgKGxldCBlbW9qaUlkIGluIEluZGV4KSB7XG4gICAgZW1vamlJZHMucHVzaChlbW9qaUlkKVxuICB9XG5cbiAgZW1vamlJZHMuc29ydCgoYSwgYikgPT4ge1xuICAgIGNvbnN0IGFTY29yZSA9IEluZGV4W2JdXG4gICAgY29uc3QgYlNjb3JlID0gSW5kZXhbYV1cblxuICAgIGlmIChhU2NvcmUgPT0gYlNjb3JlKSB7XG4gICAgICByZXR1cm4gYS5sb2NhbGVDb21wYXJlKGIpXG4gICAgfVxuXG4gICAgcmV0dXJuIGFTY29yZSAtIGJTY29yZVxuICB9KVxuXG4gIGlmIChlbW9qaUlkcy5sZW5ndGggPiBtYXgpIHtcbiAgICBjb25zdCByZW1vdmVkSWRzID0gZW1vamlJZHMuc2xpY2UobWF4KVxuICAgIGVtb2ppSWRzID0gZW1vamlJZHMuc2xpY2UoMCwgbWF4KVxuXG4gICAgZm9yIChsZXQgcmVtb3ZlZElkIG9mIHJlbW92ZWRJZHMpIHtcbiAgICAgIGlmIChyZW1vdmVkSWQgPT0gbGFzdCkgY29udGludWVcbiAgICAgIGRlbGV0ZSBJbmRleFtyZW1vdmVkSWRdXG4gICAgfVxuXG4gICAgaWYgKGxhc3QgJiYgZW1vamlJZHMuaW5kZXhPZihsYXN0KSA9PSAtMSkge1xuICAgICAgZGVsZXRlIEluZGV4W2Vtb2ppSWRzW2Vtb2ppSWRzLmxlbmd0aCAtIDFdXVxuICAgICAgZW1vamlJZHMuc3BsaWNlKC0xLCAxLCBsYXN0KVxuICAgIH1cblxuICAgIFN0b3JlLnNldCgnZnJlcXVlbnRseScsIEluZGV4KVxuICB9XG5cbiAgcmV0dXJuIGVtb2ppSWRzXG59XG5cbmV4cG9ydCBkZWZhdWx0IHsgYWRkLCBnZXQsIERFRkFVTFRTIH1cbiIsICIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgaW5pdCwgRGF0YSB9IGZyb20gJy4uL2NvbmZpZydcblxuY29uc3QgU0hPUlRDT0RFU19SRUdFWCA9IC9eKD86XFw6KFteXFw6XSspXFw6KSg/OlxcOnNraW4tdG9uZS0oXFxkKVxcOik/JC9cbmxldCBQb29sID0gbnVsbFxuXG5mdW5jdGlvbiBnZXQoZW1vamlJZCkge1xuICBpZiAoZW1vamlJZC5pZCkge1xuICAgIHJldHVybiBlbW9qaUlkXG4gIH1cblxuICByZXR1cm4gKFxuICAgIERhdGEuZW1vamlzW2Vtb2ppSWRdIHx8XG4gICAgRGF0YS5lbW9qaXNbRGF0YS5hbGlhc2VzW2Vtb2ppSWRdXSB8fFxuICAgIERhdGEuZW1vamlzW0RhdGEubmF0aXZlc1tlbW9qaUlkXV1cbiAgKVxufVxuXG5mdW5jdGlvbiByZXNldCgpIHtcbiAgUG9vbCA9IG51bGxcbn1cblxuYXN5bmMgZnVuY3Rpb24gc2VhcmNoKHZhbHVlLCB7IG1heFJlc3VsdHMsIGNhbGxlciB9ID0ge30pIHtcbiAgaWYgKCF2YWx1ZSB8fCAhdmFsdWUudHJpbSgpLmxlbmd0aCkgcmV0dXJuIG51bGxcbiAgbWF4UmVzdWx0cyB8fCAobWF4UmVzdWx0cyA9IDkwKVxuXG4gIGF3YWl0IGluaXQobnVsbCwgeyBjYWxsZXI6IGNhbGxlciB8fCAnU2VhcmNoSW5kZXguc2VhcmNoJyB9KVxuXG4gIGNvbnN0IHZhbHVlcyA9IHZhbHVlXG4gICAgLnRvTG93ZXJDYXNlKClcbiAgICAucmVwbGFjZSgvKFxcdyktLywgJyQxICcpXG4gICAgLnNwbGl0KC9bXFxzfCxdKy8pXG4gICAgLmZpbHRlcigod29yZCwgaSwgd29yZHMpID0+IHtcbiAgICAgIHJldHVybiB3b3JkLnRyaW0oKSAmJiB3b3Jkcy5pbmRleE9mKHdvcmQpID09IGlcbiAgICB9KVxuXG4gIGlmICghdmFsdWVzLmxlbmd0aCkgcmV0dXJuXG5cbiAgbGV0IHBvb2wgPSBQb29sIHx8IChQb29sID0gT2JqZWN0LnZhbHVlcyhEYXRhLmVtb2ppcykpXG4gIGxldCByZXN1bHRzLCBzY29yZXNcblxuICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgIGlmICghcG9vbC5sZW5ndGgpIGJyZWFrXG5cbiAgICByZXN1bHRzID0gW11cbiAgICBzY29yZXMgPSB7fVxuXG4gICAgZm9yIChjb25zdCBlbW9qaSBvZiBwb29sKSB7XG4gICAgICBpZiAoIWVtb2ppLnNlYXJjaCkgY29udGludWVcbiAgICAgIGNvbnN0IHNjb3JlID0gZW1vamkuc2VhcmNoLmluZGV4T2YoYCwke3ZhbHVlfWApXG4gICAgICBpZiAoc2NvcmUgPT0gLTEpIGNvbnRpbnVlXG5cbiAgICAgIHJlc3VsdHMucHVzaChlbW9qaSlcbiAgICAgIHNjb3Jlc1tlbW9qaS5pZF0gfHwgKHNjb3Jlc1tlbW9qaS5pZF0gPSAwKVxuICAgICAgc2NvcmVzW2Vtb2ppLmlkXSArPSBlbW9qaS5pZCA9PSB2YWx1ZSA/IDAgOiBzY29yZSArIDFcbiAgICB9XG5cbiAgICBwb29sID0gcmVzdWx0c1xuICB9XG5cbiAgaWYgKHJlc3VsdHMubGVuZ3RoIDwgMikge1xuICAgIHJldHVybiByZXN1bHRzXG4gIH1cblxuICByZXN1bHRzLnNvcnQoKGEsIGIpID0+IHtcbiAgICBjb25zdCBhU2NvcmUgPSBzY29yZXNbYS5pZF1cbiAgICBjb25zdCBiU2NvcmUgPSBzY29yZXNbYi5pZF1cblxuICAgIGlmIChhU2NvcmUgPT0gYlNjb3JlKSB7XG4gICAgICByZXR1cm4gYS5pZC5sb2NhbGVDb21wYXJlKGIuaWQpXG4gICAgfVxuXG4gICAgcmV0dXJuIGFTY29yZSAtIGJTY29yZVxuICB9KVxuXG4gIGlmIChyZXN1bHRzLmxlbmd0aCA+IG1heFJlc3VsdHMpIHtcbiAgICByZXN1bHRzID0gcmVzdWx0cy5zbGljZSgwLCBtYXhSZXN1bHRzKVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdHNcbn1cblxuZXhwb3J0IGRlZmF1bHQgeyBzZWFyY2gsIGdldCwgcmVzZXQsIFNIT1JUQ09ERVNfUkVHRVggfVxuIiwgIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgaTE4bl9lbiBmcm9tICdAZW1vamktbWFydC9kYXRhL2kxOG4vZW4uanNvbidcbmltcG9ydCBQaWNrZXJQcm9wcyBmcm9tICcuL2NvbXBvbmVudHMvUGlja2VyL1BpY2tlclByb3BzJ1xuaW1wb3J0IHtcbiAgRnJlcXVlbnRseVVzZWQsXG4gIE5hdGl2ZVN1cHBvcnQsXG4gIFNhZmVGbGFncyxcbiAgU2VhcmNoSW5kZXgsXG59IGZyb20gJy4vaGVscGVycydcblxuZXhwb3J0IGxldCBJMThuID0gbnVsbFxuZXhwb3J0IGxldCBEYXRhID0gbnVsbFxuXG5jb25zdCBmZXRjaENhY2hlID0ge31cbmFzeW5jIGZ1bmN0aW9uIGZldGNoSlNPTihzcmMpIHtcbiAgaWYgKGZldGNoQ2FjaGVbc3JjXSkge1xuICAgIHJldHVybiBmZXRjaENhY2hlW3NyY11cbiAgfVxuXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goc3JjKVxuICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG5cbiAgZmV0Y2hDYWNoZVtzcmNdID0ganNvblxuICByZXR1cm4ganNvblxufVxuXG5sZXQgcHJvbWlzZTogUHJvbWlzZTx2b2lkPiB8IG51bGwgPSBudWxsXG5sZXQgaW5pdGlhdGVkID0gZmFsc2VcbmxldCBpbml0Q2FsbGJhY2sgPSBudWxsXG5sZXQgaW5pdGlhbGl6ZWQgPSBmYWxzZVxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdChvcHRpb25zLCB7IGNhbGxlciB9ID0ge30pIHtcbiAgcHJvbWlzZSB8fFxuICAgIChwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIGluaXRDYWxsYmFjayA9IHJlc29sdmVcbiAgICB9KSlcblxuICBpZiAob3B0aW9ucykge1xuICAgIF9pbml0KG9wdGlvbnMpXG4gIH0gZWxzZSBpZiAoY2FsbGVyICYmICFpbml0aWFsaXplZCkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIGBcXGAke2NhbGxlcn1cXGAgcmVxdWlyZXMgZGF0YSB0byBiZSBpbml0aWFsaXplZCBmaXJzdC4gUHJvbWlzZSB3aWxsIGJlIHBlbmRpbmcgdW50aWwgXFxgaW5pdFxcYCBpcyBjYWxsZWQuYCxcbiAgICApXG4gIH1cblxuICByZXR1cm4gcHJvbWlzZVxufVxuXG5hc3luYyBmdW5jdGlvbiBfaW5pdChwcm9wcykge1xuICBpbml0aWFsaXplZCA9IHRydWVcblxuICBsZXQgeyBlbW9qaVZlcnNpb24sIHNldCwgbG9jYWxlIH0gPSBwcm9wc1xuICBlbW9qaVZlcnNpb24gfHwgKGVtb2ppVmVyc2lvbiA9IFBpY2tlclByb3BzLmVtb2ppVmVyc2lvbi52YWx1ZSlcbiAgc2V0IHx8IChzZXQgPSBQaWNrZXJQcm9wcy5zZXQudmFsdWUpXG4gIGxvY2FsZSB8fCAobG9jYWxlID0gUGlja2VyUHJvcHMubG9jYWxlLnZhbHVlKVxuXG4gIGlmICghRGF0YSkge1xuICAgIERhdGEgPVxuICAgICAgKHR5cGVvZiBwcm9wcy5kYXRhID09PSAnZnVuY3Rpb24nID8gYXdhaXQgcHJvcHMuZGF0YSgpIDogcHJvcHMuZGF0YSkgfHxcbiAgICAgIChhd2FpdCBmZXRjaEpTT04oXG4gICAgICAgIGBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL0BlbW9qaS1tYXJ0L2RhdGFAbGF0ZXN0L3NldHMvJHtlbW9qaVZlcnNpb259LyR7c2V0fS5qc29uYCxcbiAgICAgICkpXG5cbiAgICBEYXRhLmVtb3RpY29ucyA9IHt9XG4gICAgRGF0YS5uYXRpdmVzID0ge31cblxuICAgIERhdGEuY2F0ZWdvcmllcy51bnNoaWZ0KHtcbiAgICAgIGlkOiAnZnJlcXVlbnQnLFxuICAgICAgZW1vamlzOiBbXSxcbiAgICB9KVxuXG4gICAgZm9yIChjb25zdCBhbGlhcyBpbiBEYXRhLmFsaWFzZXMpIHtcbiAgICAgIGNvbnN0IGVtb2ppSWQgPSBEYXRhLmFsaWFzZXNbYWxpYXNdXG4gICAgICBjb25zdCBlbW9qaSA9IERhdGEuZW1vamlzW2Vtb2ppSWRdXG4gICAgICBpZiAoIWVtb2ppKSBjb250aW51ZVxuXG4gICAgICBlbW9qaS5hbGlhc2VzIHx8IChlbW9qaS5hbGlhc2VzID0gW10pXG4gICAgICBlbW9qaS5hbGlhc2VzLnB1c2goYWxpYXMpXG4gICAgfVxuXG4gICAgRGF0YS5vcmlnaW5hbENhdGVnb3JpZXMgPSBEYXRhLmNhdGVnb3JpZXNcbiAgfSBlbHNlIHtcbiAgICBEYXRhLmNhdGVnb3JpZXMgPSBEYXRhLmNhdGVnb3JpZXMuZmlsdGVyKChjKSA9PiB7XG4gICAgICBjb25zdCBpc0N1c3RvbSA9ICEhYy5uYW1lXG4gICAgICBpZiAoIWlzQ3VzdG9tKSByZXR1cm4gdHJ1ZVxuXG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9KVxuICB9XG5cbiAgSTE4biA9XG4gICAgKHR5cGVvZiBwcm9wcy5pMThuID09PSAnZnVuY3Rpb24nID8gYXdhaXQgcHJvcHMuaTE4bigpIDogcHJvcHMuaTE4bikgfHxcbiAgICAobG9jYWxlID09ICdlbidcbiAgICAgID8gaTE4bl9lblxuICAgICAgOiBhd2FpdCBmZXRjaEpTT04oXG4gICAgICAgICAgYGh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vQGVtb2ppLW1hcnQvZGF0YUBsYXRlc3QvaTE4bi8ke2xvY2FsZX0uanNvbmAsXG4gICAgICAgICkpXG5cbiAgaWYgKHByb3BzLmN1c3RvbSkge1xuICAgIGZvciAobGV0IGkgaW4gcHJvcHMuY3VzdG9tKSB7XG4gICAgICBpID0gcGFyc2VJbnQoaSlcbiAgICAgIGNvbnN0IGNhdGVnb3J5ID0gcHJvcHMuY3VzdG9tW2ldXG4gICAgICBjb25zdCBwcmV2Q2F0ZWdvcnkgPSBwcm9wcy5jdXN0b21baSAtIDFdXG5cbiAgICAgIGlmICghY2F0ZWdvcnkuZW1vamlzIHx8ICFjYXRlZ29yeS5lbW9qaXMubGVuZ3RoKSBjb250aW51ZVxuXG4gICAgICBjYXRlZ29yeS5pZCB8fCAoY2F0ZWdvcnkuaWQgPSBgY3VzdG9tXyR7aSArIDF9YClcbiAgICAgIGNhdGVnb3J5Lm5hbWUgfHwgKGNhdGVnb3J5Lm5hbWUgPSBJMThuLmNhdGVnb3JpZXMuY3VzdG9tKVxuXG4gICAgICBpZiAocHJldkNhdGVnb3J5ICYmICFjYXRlZ29yeS5pY29uKSB7XG4gICAgICAgIGNhdGVnb3J5LnRhcmdldCA9IHByZXZDYXRlZ29yeS50YXJnZXQgfHwgcHJldkNhdGVnb3J5XG4gICAgICB9XG5cbiAgICAgIERhdGEuY2F0ZWdvcmllcy5wdXNoKGNhdGVnb3J5KVxuXG4gICAgICBmb3IgKGNvbnN0IGVtb2ppIG9mIGNhdGVnb3J5LmVtb2ppcykge1xuICAgICAgICBEYXRhLmVtb2ppc1tlbW9qaS5pZF0gPSBlbW9qaVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChwcm9wcy5jYXRlZ29yaWVzKSB7XG4gICAgRGF0YS5jYXRlZ29yaWVzID0gRGF0YS5vcmlnaW5hbENhdGVnb3JpZXNcbiAgICAgIC5maWx0ZXIoKGMpID0+IHtcbiAgICAgICAgcmV0dXJuIHByb3BzLmNhdGVnb3JpZXMuaW5kZXhPZihjLmlkKSAhPSAtMVxuICAgICAgfSlcbiAgICAgIC5zb3J0KChjMSwgYzIpID0+IHtcbiAgICAgICAgY29uc3QgaTEgPSBwcm9wcy5jYXRlZ29yaWVzLmluZGV4T2YoYzEuaWQpXG4gICAgICAgIGNvbnN0IGkyID0gcHJvcHMuY2F0ZWdvcmllcy5pbmRleE9mKGMyLmlkKVxuXG4gICAgICAgIHJldHVybiBpMSAtIGkyXG4gICAgICB9KVxuICB9XG5cbiAgbGV0IGxhdGVzdFZlcnNpb25TdXBwb3J0ID0gbnVsbFxuICBsZXQgbm9Db3VudHJ5RmxhZ3MgPSBudWxsXG4gIGlmIChzZXQgPT0gJ25hdGl2ZScpIHtcbiAgICBsYXRlc3RWZXJzaW9uU3VwcG9ydCA9IE5hdGl2ZVN1cHBvcnQubGF0ZXN0VmVyc2lvbigpXG4gICAgbm9Db3VudHJ5RmxhZ3MgPSBwcm9wcy5ub0NvdW50cnlGbGFncyB8fCBOYXRpdmVTdXBwb3J0Lm5vQ291bnRyeUZsYWdzKClcbiAgfVxuXG4gIGxldCBjYXRlZ29yeUluZGV4ID0gRGF0YS5jYXRlZ29yaWVzLmxlbmd0aFxuICBsZXQgcmVzZXRTZWFyY2hJbmRleCA9IGZhbHNlXG4gIHdoaWxlIChjYXRlZ29yeUluZGV4LS0pIHtcbiAgICBjb25zdCBjYXRlZ29yeSA9IERhdGEuY2F0ZWdvcmllc1tjYXRlZ29yeUluZGV4XVxuXG4gICAgaWYgKGNhdGVnb3J5LmlkID09ICdmcmVxdWVudCcpIHtcbiAgICAgIGxldCB7IG1heEZyZXF1ZW50Um93cywgcGVyTGluZSB9ID0gcHJvcHNcblxuICAgICAgbWF4RnJlcXVlbnRSb3dzID1cbiAgICAgICAgbWF4RnJlcXVlbnRSb3dzID49IDBcbiAgICAgICAgICA/IG1heEZyZXF1ZW50Um93c1xuICAgICAgICAgIDogUGlja2VyUHJvcHMubWF4RnJlcXVlbnRSb3dzLnZhbHVlXG4gICAgICBwZXJMaW5lIHx8IChwZXJMaW5lID0gUGlja2VyUHJvcHMucGVyTGluZS52YWx1ZSlcblxuICAgICAgY2F0ZWdvcnkuZW1vamlzID0gRnJlcXVlbnRseVVzZWQuZ2V0KHsgbWF4RnJlcXVlbnRSb3dzLCBwZXJMaW5lIH0pXG4gICAgfVxuXG4gICAgaWYgKCFjYXRlZ29yeS5lbW9qaXMgfHwgIWNhdGVnb3J5LmVtb2ppcy5sZW5ndGgpIHtcbiAgICAgIERhdGEuY2F0ZWdvcmllcy5zcGxpY2UoY2F0ZWdvcnlJbmRleCwgMSlcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgY29uc3QgeyBjYXRlZ29yeUljb25zIH0gPSBwcm9wc1xuICAgIGlmIChjYXRlZ29yeUljb25zKSB7XG4gICAgICBjb25zdCBpY29uID0gY2F0ZWdvcnlJY29uc1tjYXRlZ29yeS5pZF1cbiAgICAgIGlmIChpY29uICYmICFjYXRlZ29yeS5pY29uKSB7XG4gICAgICAgIGNhdGVnb3J5Lmljb24gPSBpY29uXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IGVtb2ppSW5kZXggPSBjYXRlZ29yeS5lbW9qaXMubGVuZ3RoXG4gICAgd2hpbGUgKGVtb2ppSW5kZXgtLSkge1xuICAgICAgY29uc3QgZW1vamlJZCA9IGNhdGVnb3J5LmVtb2ppc1tlbW9qaUluZGV4XVxuICAgICAgY29uc3QgZW1vamkgPSBlbW9qaUlkLmlkID8gZW1vamlJZCA6IERhdGEuZW1vamlzW2Vtb2ppSWRdXG5cbiAgICAgIGNvbnN0IGlnbm9yZSA9ICgpID0+IHtcbiAgICAgICAgY2F0ZWdvcnkuZW1vamlzLnNwbGljZShlbW9qaUluZGV4LCAxKVxuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgICFlbW9qaSB8fFxuICAgICAgICAocHJvcHMuZXhjZXB0RW1vamlzICYmIHByb3BzLmV4Y2VwdEVtb2ppcy5pbmNsdWRlcyhlbW9qaS5pZCkpXG4gICAgICApIHtcbiAgICAgICAgaWdub3JlKClcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgaWYgKGxhdGVzdFZlcnNpb25TdXBwb3J0ICYmIGVtb2ppLnZlcnNpb24gPiBsYXRlc3RWZXJzaW9uU3VwcG9ydCkge1xuICAgICAgICBpZ25vcmUoKVxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBpZiAobm9Db3VudHJ5RmxhZ3MgJiYgY2F0ZWdvcnkuaWQgPT0gJ2ZsYWdzJykge1xuICAgICAgICBpZiAoIVNhZmVGbGFncy5pbmNsdWRlcyhlbW9qaS5pZCkpIHtcbiAgICAgICAgICBpZ25vcmUoKVxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFlbW9qaS5zZWFyY2gpIHtcbiAgICAgICAgcmVzZXRTZWFyY2hJbmRleCA9IHRydWVcbiAgICAgICAgZW1vamkuc2VhcmNoID1cbiAgICAgICAgICAnLCcgK1xuICAgICAgICAgIFtcbiAgICAgICAgICAgIFtlbW9qaS5pZCwgZmFsc2VdLFxuICAgICAgICAgICAgW2Vtb2ppLm5hbWUsIHRydWVdLFxuICAgICAgICAgICAgW2Vtb2ppLmtleXdvcmRzLCBmYWxzZV0sXG4gICAgICAgICAgICBbZW1vamkuZW1vdGljb25zLCBmYWxzZV0sXG4gICAgICAgICAgXVxuICAgICAgICAgICAgLm1hcCgoW3N0cmluZ3MsIHNwbGl0XSkgPT4ge1xuICAgICAgICAgICAgICBpZiAoIXN0cmluZ3MpIHJldHVyblxuICAgICAgICAgICAgICByZXR1cm4gKEFycmF5LmlzQXJyYXkoc3RyaW5ncykgPyBzdHJpbmdzIDogW3N0cmluZ3NdKVxuICAgICAgICAgICAgICAgIC5tYXAoKHN0cmluZykgPT4ge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIChzcGxpdCA/IHN0cmluZy5zcGxpdCgvWy18X3xcXHNdKy8pIDogW3N0cmluZ10pLm1hcChcbiAgICAgICAgICAgICAgICAgICAgKHMpID0+IHMudG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5mbGF0KClcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuZmxhdCgpXG4gICAgICAgICAgICAuZmlsdGVyKChhKSA9PiBhICYmIGEudHJpbSgpKVxuICAgICAgICAgICAgLmpvaW4oJywnKVxuXG4gICAgICAgIGlmIChlbW9qaS5lbW90aWNvbnMpIHtcbiAgICAgICAgICBmb3IgKGNvbnN0IGVtb3RpY29uIG9mIGVtb2ppLmVtb3RpY29ucykge1xuICAgICAgICAgICAgaWYgKERhdGEuZW1vdGljb25zW2Vtb3RpY29uXSkgY29udGludWVcbiAgICAgICAgICAgIERhdGEuZW1vdGljb25zW2Vtb3RpY29uXSA9IGVtb2ppLmlkXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHNraW5JbmRleCA9IDBcbiAgICAgICAgZm9yIChjb25zdCBza2luIG9mIGVtb2ppLnNraW5zKSB7XG4gICAgICAgICAgaWYgKCFza2luKSBjb250aW51ZVxuICAgICAgICAgIHNraW5JbmRleCsrXG5cbiAgICAgICAgICBjb25zdCB7IG5hdGl2ZSB9ID0gc2tpblxuICAgICAgICAgIGlmIChuYXRpdmUpIHtcbiAgICAgICAgICAgIERhdGEubmF0aXZlc1tuYXRpdmVdID0gZW1vamkuaWRcbiAgICAgICAgICAgIGVtb2ppLnNlYXJjaCArPSBgLCR7bmF0aXZlfWBcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCBza2luU2hvcnRjb2RlcyA9XG4gICAgICAgICAgICBza2luSW5kZXggPT0gMSA/ICcnIDogYDpza2luLXRvbmUtJHtza2luSW5kZXh9OmBcbiAgICAgICAgICBza2luLnNob3J0Y29kZXMgPSBgOiR7ZW1vamkuaWR9OiR7c2tpblNob3J0Y29kZXN9YFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKHJlc2V0U2VhcmNoSW5kZXgpIHtcbiAgICBTZWFyY2hJbmRleC5yZXNldCgpXG4gIH1cblxuICBpbml0Q2FsbGJhY2soKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvcHMocHJvcHMsIGRlZmF1bHRQcm9wcywgZWxlbWVudCkge1xuICBwcm9wcyB8fCAocHJvcHMgPSB7fSlcblxuICBjb25zdCBfcHJvcHMgPSB7fVxuICBmb3IgKGxldCBrIGluIGRlZmF1bHRQcm9wcykge1xuICAgIF9wcm9wc1trXSA9IGdldFByb3AoaywgcHJvcHMsIGRlZmF1bHRQcm9wcywgZWxlbWVudClcbiAgfVxuXG4gIHJldHVybiBfcHJvcHNcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3AocHJvcE5hbWUsIHByb3BzLCBkZWZhdWx0UHJvcHMsIGVsZW1lbnQpIHtcbiAgY29uc3QgZGVmYXVsdHMgPSBkZWZhdWx0UHJvcHNbcHJvcE5hbWVdXG4gIGxldCB2YWx1ZSA9XG4gICAgKGVsZW1lbnQgJiYgZWxlbWVudC5nZXRBdHRyaWJ1dGUocHJvcE5hbWUpKSB8fFxuICAgIChwcm9wc1twcm9wTmFtZV0gIT0gbnVsbCAmJiBwcm9wc1twcm9wTmFtZV0gIT0gdW5kZWZpbmVkXG4gICAgICA/IHByb3BzW3Byb3BOYW1lXVxuICAgICAgOiBudWxsKVxuXG4gIGlmICghZGVmYXVsdHMpIHtcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIGlmIChcbiAgICB2YWx1ZSAhPSBudWxsICYmXG4gICAgZGVmYXVsdHMudmFsdWUgJiZcbiAgICB0eXBlb2YgZGVmYXVsdHMudmFsdWUgIT0gdHlwZW9mIHZhbHVlXG4gICkge1xuICAgIGlmICh0eXBlb2YgZGVmYXVsdHMudmFsdWUgPT0gJ2Jvb2xlYW4nKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlID09ICdmYWxzZScgPyBmYWxzZSA6IHRydWVcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgPSBkZWZhdWx0cy52YWx1ZS5jb25zdHJ1Y3Rvcih2YWx1ZSlcbiAgICB9XG4gIH1cblxuICBpZiAoZGVmYXVsdHMudHJhbnNmb3JtICYmIHZhbHVlKSB7XG4gICAgdmFsdWUgPSBkZWZhdWx0cy50cmFuc2Zvcm0odmFsdWUpXG4gIH1cblxuICBpZiAoXG4gICAgdmFsdWUgPT0gbnVsbCB8fFxuICAgIChkZWZhdWx0cy5jaG9pY2VzICYmIGRlZmF1bHRzLmNob2ljZXMuaW5kZXhPZih2YWx1ZSkgPT0gLTEpXG4gICkge1xuICAgIHZhbHVlID0gZGVmYXVsdHMudmFsdWVcbiAgfVxuXG4gIHJldHVybiB2YWx1ZVxufVxuIiwgIntcbiAgXCJzZWFyY2hcIjogXCJTZWFyY2hcIixcbiAgXCJzZWFyY2hfbm9fcmVzdWx0c18xXCI6IFwiT2ggbm8hXCIsXG4gIFwic2VhcmNoX25vX3Jlc3VsdHNfMlwiOiBcIlRoYXQgZW1vamkgY291bGRu4oCZdCBiZSBmb3VuZFwiLFxuICBcInBpY2tcIjogXCJQaWNrIGFuIGVtb2pp4oCmXCIsXG4gIFwiYWRkX2N1c3RvbVwiOiBcIkFkZCBjdXN0b20gZW1vamlcIixcbiAgXCJjYXRlZ29yaWVzXCI6IHtcbiAgICBcImFjdGl2aXR5XCI6IFwiQWN0aXZpdHlcIixcbiAgICBcImN1c3RvbVwiOiBcIkN1c3RvbVwiLFxuICAgIFwiZmxhZ3NcIjogXCJGbGFnc1wiLFxuICAgIFwiZm9vZHNcIjogXCJGb29kICYgRHJpbmtcIixcbiAgICBcImZyZXF1ZW50XCI6IFwiRnJlcXVlbnRseSB1c2VkXCIsXG4gICAgXCJuYXR1cmVcIjogXCJBbmltYWxzICYgTmF0dXJlXCIsXG4gICAgXCJvYmplY3RzXCI6IFwiT2JqZWN0c1wiLFxuICAgIFwicGVvcGxlXCI6IFwiU21pbGV5cyAmIFBlb3BsZVwiLFxuICAgIFwicGxhY2VzXCI6IFwiVHJhdmVsICYgUGxhY2VzXCIsXG4gICAgXCJzZWFyY2hcIjogXCJTZWFyY2ggUmVzdWx0c1wiLFxuICAgIFwic3ltYm9sc1wiOiBcIlN5bWJvbHNcIlxuICB9LFxuICBcInNraW5zXCI6IHtcbiAgICBcImNob29zZVwiOiBcIkNob29zZSBkZWZhdWx0IHNraW4gdG9uZVwiLFxuICAgIFwiMVwiOiBcIkRlZmF1bHRcIixcbiAgICBcIjJcIjogXCJMaWdodFwiLFxuICAgIFwiM1wiOiBcIk1lZGl1bS1MaWdodFwiLFxuICAgIFwiNFwiOiBcIk1lZGl1bVwiLFxuICAgIFwiNVwiOiBcIk1lZGl1bS1EYXJrXCIsXG4gICAgXCI2XCI6IFwiRGFya1wiXG4gIH1cbn1cbiIsICJleHBvcnQgZGVmYXVsdCB7XG4gIGF1dG9Gb2N1czoge1xuICAgIHZhbHVlOiBmYWxzZSxcbiAgfSxcbiAgZHluYW1pY1dpZHRoOiB7XG4gICAgdmFsdWU6IGZhbHNlLFxuICB9LFxuICBlbW9qaUJ1dHRvbkNvbG9yczoge1xuICAgIHZhbHVlOiBudWxsLFxuICB9LFxuICBlbW9qaUJ1dHRvblJhZGl1czoge1xuICAgIHZhbHVlOiAnMTAwJScsXG4gIH0sXG4gIGVtb2ppQnV0dG9uU2l6ZToge1xuICAgIHZhbHVlOiAzNixcbiAgfSxcbiAgZW1vamlTaXplOiB7XG4gICAgdmFsdWU6IDI0LFxuICB9LFxuICBlbW9qaVZlcnNpb246IHtcbiAgICB2YWx1ZTogMTUsXG4gICAgY2hvaWNlczogWzEsIDIsIDMsIDQsIDUsIDExLCAxMiwgMTIuMSwgMTMsIDEzLjEsIDE0LCAxNV0sXG4gIH0sXG4gIGV4Y2VwdEVtb2ppczoge1xuICAgIHZhbHVlOiBbXSxcbiAgfSxcbiAgaWNvbnM6IHtcbiAgICB2YWx1ZTogJ2F1dG8nLFxuICAgIGNob2ljZXM6IFsnYXV0bycsICdvdXRsaW5lJywgJ3NvbGlkJ10sXG4gIH0sXG4gIGxvY2FsZToge1xuICAgIHZhbHVlOiAnZW4nLFxuICAgIGNob2ljZXM6IFtcbiAgICAgICdlbicsXG4gICAgICAnYXInLFxuICAgICAgJ2JlJyxcbiAgICAgICdjcycsXG4gICAgICAnZGUnLFxuICAgICAgJ2VzJyxcbiAgICAgICdmYScsXG4gICAgICAnZmknLFxuICAgICAgJ2ZyJyxcbiAgICAgICdoaScsXG4gICAgICAnaXQnLFxuICAgICAgJ2phJyxcbiAgICAgICdrbycsXG4gICAgICAnbmwnLFxuICAgICAgJ3BsJyxcbiAgICAgICdwdCcsXG4gICAgICAncnUnLFxuICAgICAgJ3NhJyxcbiAgICAgICd0cicsXG4gICAgICAndWsnLFxuICAgICAgJ3ZpJyxcbiAgICAgICd6aCcsXG4gICAgXSxcbiAgfSxcbiAgbWF4RnJlcXVlbnRSb3dzOiB7XG4gICAgdmFsdWU6IDQsXG4gIH0sXG4gIG5hdlBvc2l0aW9uOiB7XG4gICAgdmFsdWU6ICd0b3AnLFxuICAgIGNob2ljZXM6IFsndG9wJywgJ2JvdHRvbScsICdub25lJ10sXG4gIH0sXG4gIG5vQ291bnRyeUZsYWdzOiB7XG4gICAgdmFsdWU6IGZhbHNlLFxuICB9LFxuICBub1Jlc3VsdHNFbW9qaToge1xuICAgIHZhbHVlOiBudWxsLFxuICB9LFxuICBwZXJMaW5lOiB7XG4gICAgdmFsdWU6IDksXG4gIH0sXG4gIHByZXZpZXdFbW9qaToge1xuICAgIHZhbHVlOiBudWxsLFxuICB9LFxuICBwcmV2aWV3UG9zaXRpb246IHtcbiAgICB2YWx1ZTogJ2JvdHRvbScsXG4gICAgY2hvaWNlczogWyd0b3AnLCAnYm90dG9tJywgJ25vbmUnXSxcbiAgfSxcbiAgc2VhcmNoUG9zaXRpb246IHtcbiAgICB2YWx1ZTogJ3N0aWNreScsXG4gICAgY2hvaWNlczogWydzdGlja3knLCAnc3RhdGljJywgJ25vbmUnXSxcbiAgfSxcbiAgc2V0OiB7XG4gICAgdmFsdWU6ICduYXRpdmUnLFxuICAgIGNob2ljZXM6IFsnbmF0aXZlJywgJ2FwcGxlJywgJ2ZhY2Vib29rJywgJ2dvb2dsZScsICd0d2l0dGVyJ10sXG4gIH0sXG4gIHNraW46IHtcbiAgICB2YWx1ZTogMSxcbiAgICBjaG9pY2VzOiBbMSwgMiwgMywgNCwgNSwgNl0sXG4gIH0sXG4gIHNraW5Ub25lUG9zaXRpb246IHtcbiAgICB2YWx1ZTogJ3ByZXZpZXcnLFxuICAgIGNob2ljZXM6IFsncHJldmlldycsICdzZWFyY2gnLCAnbm9uZSddLFxuICB9LFxuICB0aGVtZToge1xuICAgIHZhbHVlOiAnYXV0bycsXG4gICAgY2hvaWNlczogWydhdXRvJywgJ2xpZ2h0JywgJ2RhcmsnXSxcbiAgfSxcblxuICAvLyBEYXRhXG4gIGNhdGVnb3JpZXM6IG51bGwsXG4gIGNhdGVnb3J5SWNvbnM6IG51bGwsXG4gIGN1c3RvbTogbnVsbCxcbiAgZGF0YTogbnVsbCxcbiAgaTE4bjogbnVsbCxcblxuICAvLyBDYWxsYmFja3NcbiAgZ2V0SW1hZ2VVUkw6IG51bGwsXG4gIGdldFNwcml0ZXNoZWV0VVJMOiBudWxsLFxuICBvbkFkZEN1c3RvbUVtb2ppOiBudWxsLFxuICBvbkNsaWNrT3V0c2lkZTogbnVsbCxcbiAgb25FbW9qaVNlbGVjdDogbnVsbCxcblxuICAvLyBEZXByZWNhdGVkXG4gIHN0aWNreVNlYXJjaDoge1xuICAgIGRlcHJlY2F0ZWQ6IHRydWUsXG4gICAgdmFsdWU6IHRydWUsXG4gIH0sXG59XG4iLCAiY29uc3QgY2F0ZWdvcmllcyA9IHtcbiAgYWN0aXZpdHk6IHtcbiAgICBvdXRsaW5lOiAoXG4gICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTIgMEM1LjM3MyAwIDAgNS4zNzIgMCAxMmMwIDYuNjI3IDUuMzczIDEyIDEyIDEyIDYuNjI4IDAgMTItNS4zNzMgMTItMTIgMC02LjYyOC01LjM3Mi0xMi0xMi0xMm05Ljk0OSAxMUgxNy4wNWMuMjI0LTIuNTI3IDEuMjMyLTQuNzczIDEuOTY4LTYuMTEzQTkuOTY2IDkuOTY2IDAgMCAxIDIxLjk0OSAxMU0xMyAxMVYyLjA1MWE5Ljk0NSA5Ljk0NSAwIDAgMSA0LjQzMiAxLjU2NGMtLjg1OCAxLjQ5MS0yLjE1NiA0LjIyLTIuMzkyIDcuMzg1SDEzem0tMiAwSDguOTYxYy0uMjM4LTMuMTY1LTEuNTM2LTUuODk0LTIuMzkzLTcuMzg1QTkuOTUgOS45NSAwIDAgMSAxMSAyLjA1MVYxMXptMCAydjguOTQ5YTkuOTM3IDkuOTM3IDAgMCAxLTQuNDMyLTEuNTY0Yy44NTctMS40OTIgMi4xNTUtNC4yMjEgMi4zOTMtNy4zODVIMTF6bTQuMDQgMGMuMjM2IDMuMTY0IDEuNTM0IDUuODkzIDIuMzkyIDcuMzg1QTkuOTIgOS45MiAwIDAgMSAxMyAyMS45NDlWMTNoMi4wNHpNNC45ODIgNC44ODdDNS43MTggNi4yMjcgNi43MjYgOC40NzMgNi45NTEgMTFoLTQuOWE5Ljk3NyA5Ljk3NyAwIDAgMSAyLjkzMS02LjExM00yLjA1MSAxM2g0LjljLS4yMjYgMi41MjctMS4yMzMgNC43NzEtMS45NjkgNi4xMTNBOS45NzIgOS45NzIgMCAwIDEgMi4wNTEgMTNtMTYuOTY3IDYuMTEzYy0uNzM1LTEuMzQyLTEuNzQ0LTMuNTg2LTEuOTY4LTYuMTEzaDQuODk5YTkuOTYxIDkuOTYxIDAgMCAxLTIuOTMxIDYuMTEzXCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gICAgc29saWQ6IChcbiAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiPlxuICAgICAgICA8cGF0aCBkPVwiTTE2LjE3IDMzNy41YzAgNDQuOTggNy41NjUgODMuNTQgMTMuOTggMTA3LjlDMzUuMjIgNDY0LjMgNTAuNDYgNDk2IDE3NC45IDQ5NmM5LjU2NiAwIDE5LjU5LS40NzA3IDI5Ljg0LTEuMjcxTDE3LjMzIDMwNy4zQzE2LjUzIDMxNy42IDE2LjE3IDMyNy43IDE2LjE3IDMzNy41ek00OTUuOCAxNzQuNWMwLTQ0Ljk4LTcuNTY1LTgzLjUzLTEzLjk4LTEwNy45Yy00LjY4OC0xNy41NC0xOC4zNC0zMS4yMy0zNi4wNC0zNS45NUM0MzUuNSAyNy45MSAzOTIuOSAxNiAzMzcgMTZjLTkuNTY0IDAtMTkuNTkgLjQ3MDctMjkuODQgMS4yNzFsMTg3LjUgMTg3LjVDNDk1LjUgMTk0LjQgNDk1LjggMTg0LjMgNDk1LjggMTc0LjV6TTI2Ljc3IDI0OC44bDIzNi4zIDIzNi4zYzE0Mi0zNi4xIDIwMy45LTE1MC40IDIyMi4yLTIyMS4xTDI0OC45IDI2Ljg3QzEwNi45IDYyLjk2IDQ1LjA3IDE3Ny4yIDI2Ljc3IDI0OC44ek0yNTYgMzM1LjFjMCA5LjE0MS03LjQ3NCAxNi0xNiAxNmMtNC4wOTQgMC04LjE4OC0xLjU2NC0xMS4zMS00LjY4OUwxNjQuNyAyODMuM0MxNjEuNiAyODAuMiAxNjAgMjc2LjEgMTYwIDI3MS4xYzAtOC41MjkgNi44NjUtMTYgMTYtMTZjNC4wOTUgMCA4LjE4OSAxLjU2MiAxMS4zMSA0LjY4OGw2NC4wMSA2NEMyNTQuNCAzMjcuOCAyNTYgMzMxLjkgMjU2IDMzNS4xek0zMDQgMjg3LjFjMCA5LjE0MS03LjQ3NCAxNi0xNiAxNmMtNC4wOTQgMC04LjE4OC0xLjU2NC0xMS4zMS00LjY4OUwyMTIuNyAyMzUuM0MyMDkuNiAyMzIuMiAyMDggMjI4LjEgMjA4IDIyMy4xYzAtOS4xNDEgNy40NzMtMTYgMTYtMTZjNC4wOTQgMCA4LjE4OCAxLjU2MiAxMS4zMSA0LjY4OGw2NC4wMSA2NC4wMUMzMDIuNSAyNzkuOCAzMDQgMjgzLjkgMzA0IDI4Ny4xek0yNTYgMTc1LjFjMC05LjE0MSA3LjQ3My0xNiAxNi0xNmM0LjA5NCAwIDguMTg4IDEuNTYyIDExLjMxIDQuNjg4bDY0LjAxIDY0LjAxYzMuMTI1IDMuMTI1IDQuNjg4IDcuMjE5IDQuNjg4IDExLjMxYzAgOS4xMzMtNy40NjggMTYtMTYgMTZjLTQuMDk0IDAtOC4xODktMS41NjItMTEuMzEtNC42ODhsLTY0LjAxLTY0LjAxQzI1Ny42IDE4NC4yIDI1NiAxODAuMSAyNTYgMTc1LjF6XCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gIH0sXG5cbiAgY3VzdG9tOiAoXG4gICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA0NDggNTEyXCI+XG4gICAgICA8cGF0aCBkPVwiTTQxNy4xIDM2OGMtNS45MzcgMTAuMjctMTYuNjkgMTYtMjcuNzUgMTZjLTUuNDIyIDAtMTAuOTItMS4zNzUtMTUuOTctNC4yODFMMjU2IDMxMS40VjQ0OGMwIDE3LjY3LTE0LjMzIDMyLTMxLjEgMzJTMTkyIDQ2NS43IDE5MiA0NDhWMzExLjRsLTExOC4zIDY4LjI5QzY4LjY3IDM4Mi42IDYzLjE3IDM4NCA1Ny43NSAzODRjLTExLjA2IDAtMjEuODEtNS43MzQtMjcuNzUtMTZjLTguODI4LTE1LjMxLTMuNTk0LTM0Ljg4IDExLjcyLTQzLjcyTDE1OS4xIDI1Nkw0MS43MiAxODcuN0MyNi40MSAxNzguOSAyMS4xNyAxNTkuMyAyOS4xIDE0NEMzNi42MyAxMzIuNSA0OS4yNiAxMjYuNyA2MS42NSAxMjguMkM2NS43OCAxMjguNyA2OS44OCAxMzAuMSA3My43MiAxMzIuM0wxOTIgMjAwLjZWNjRjMC0xNy42NyAxNC4zMy0zMiAzMi0zMlMyNTYgNDYuMzMgMjU2IDY0djEzNi42bDExOC4zLTY4LjI5YzMuODM4LTIuMjEzIDcuOTM5LTMuNTM5IDEyLjA3LTQuMDUxQzM5OC43IDEyNi43IDQxMS40IDEzMi41IDQxNy4xIDE0NGM4LjgyOCAxNS4zMSAzLjU5NCAzNC44OC0xMS43MiA0My43MkwyODggMjU2bDExOC4zIDY4LjI4QzQyMS42IDMzMy4xIDQyNi44IDM1Mi43IDQxNy4xIDM2OHpcIiAvPlxuICAgIDwvc3ZnPlxuICApLFxuXG4gIGZsYWdzOiB7XG4gICAgb3V0bGluZTogKFxuICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICA8cGF0aCBkPVwiTTAgMGw2LjA4NCAyNEg4TDEuOTE2IDB6TTIxIDVoLTRsLTEtNEg0bDMgMTJoM2wxIDRoMTNMMjEgNXpNNi41NjMgM2g3Ljg3NWwyIDhIOC41NjNsLTItOHptOC44MzIgMTBsLTIuODU2IDEuOTA0TDEyLjA2MyAxM2gzLjMzMnpNMTkgMTNsLTEuNS02aDEuOTM4bDIgOEgxNmwzLTJ6XCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gICAgc29saWQ6IChcbiAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiPlxuICAgICAgICA8cGF0aCBkPVwiTTY0IDQ5NkM2NCA1MDQuOCA1Ni43NSA1MTIgNDggNTEyaC0zMkM3LjI1IDUxMiAwIDUwNC44IDAgNDk2VjMyYzAtMTcuNzUgMTQuMjUtMzIgMzItMzJzMzIgMTQuMjUgMzIgMzJWNDk2ek00NzYuMyAwYy02LjM2NSAwLTEzLjAxIDEuMzUtMTkuMzQgNC4yMzNjLTQ1LjY5IDIwLjg2LTc5LjU2IDI3Ljk0LTEwNy44IDI3Ljk0Yy01OS45NiAwLTk0LjgxLTMxLjg2LTE2My45LTMxLjg3QzE2MC45IC4zMDU1IDEzMS42IDQuODY3IDk2IDE1Ljc1djM1MC41YzMyLTkuOTg0IDU5Ljg3LTE0LjEgODQuODUtMTQuMWM3My42MyAwIDEyNC45IDMxLjc4IDE5OC42IDMxLjc4YzMxLjkxIDAgNjguMDItNS45NzEgMTExLjEtMjMuMDlDNTA0LjEgMzU1LjkgNTEyIDM0NC40IDUxMiAzMzIuMVYzMC43M0M1MTIgMTEuMSA0OTUuMyAwIDQ3Ni4zIDB6XCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gIH0sXG5cbiAgZm9vZHM6IHtcbiAgICBvdXRsaW5lOiAoXG4gICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTcgNC45NzhjLTEuODM4IDAtMi44NzYuMzk2LTMuNjguOTM0LjUxMy0xLjE3MiAxLjc2OC0yLjkzNCA0LjY4LTIuOTM0YTEgMSAwIDAgMCAwLTJjLTIuOTIxIDAtNC42MjkgMS4zNjUtNS41NDcgMi41MTItLjA2NC4wNzgtLjExOS4xNjItLjE4LjI0NEMxMS43MyAxLjgzOCAxMC43OTguMDIzIDkuMjA3LjAyMyA4LjU3OS4wMjIgNy44NS4zMDYgNyAuOTc4IDUuMDI3IDIuNTQgNS4zMjkgMy45MDIgNi40OTIgNC45OTkgMy42MDkgNS4yMjIgMCA3LjM1MiAwIDEyLjk2OWMwIDQuNTgyIDQuOTYxIDExLjAwOSA5IDExLjAwOSAxLjk3NSAwIDIuMzcxLS40ODYgMy0xIC42MjkuNTE0IDEuMDI1IDEgMyAxIDQuMDM5IDAgOS02LjQxOCA5LTExIDAtNS45NTMtNC4wNTUtOC03LThNOC4yNDIgMi41NDZjLjY0MS0uNTA4Ljk0My0uNTIzLjk2NS0uNTIzLjQyNi4xNjkuOTc1IDEuNDA1IDEuMzU3IDMuMDU1LTEuNTI3LS42MjktMi43NDEtMS4zNTItMi45OC0xLjg0Ni4wNTktLjExMi4yNDEtLjM1Ni42NTgtLjY4Nk0xNSAyMS45NzhjLTEuMDggMC0xLjIxLS4xMDktMS41NTktLjQwMmwtLjE3Ni0uMTQ2Yy0uMzY3LS4zMDItLjgxNi0uNDUyLTEuMjY2LS40NTJzLS44OTguMTUtMS4yNjYuNDUybC0uMTc2LjE0NmMtLjM0Ny4yOTItLjQ3Ny40MDItMS41NTcuNDAyLTIuODEzIDAtNy01LjM4OS03LTkuMDA5IDAtNS44MjMgNC40ODgtNS45OTEgNS01Ljk5MSAxLjkzOSAwIDIuNDg0LjQ3MSAzLjM4NyAxLjI1MWwuMzIzLjI3NmExLjk5NSAxLjk5NSAwIDAgMCAyLjU4IDBsLjMyMy0uMjc2Yy45MDItLjc4IDEuNDQ3LTEuMjUxIDMuMzg3LTEuMjUxLjUxMiAwIDUgLjE2OCA1IDYgMCAzLjYxNy00LjE4NyA5LTcgOVwiIC8+XG4gICAgICA8L3N2Zz5cbiAgICApLFxuICAgIHNvbGlkOiAoXG4gICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIj5cbiAgICAgICAgPHBhdGggZD1cIk00ODEuOSAyNzAuMUM0OTAuOSAyNzkuMSA0OTYgMjkxLjMgNDk2IDMwNEM0OTYgMzE2LjcgNDkwLjkgMzI4LjkgNDgxLjkgMzM3LjlDNDcyLjkgMzQ2LjkgNDYwLjcgMzUyIDQ0OCAzNTJINjRDNTEuMjcgMzUyIDM5LjA2IDM0Ni45IDMwLjA2IDMzNy45QzIxLjA2IDMyOC45IDE2IDMxNi43IDE2IDMwNEMxNiAyOTEuMyAyMS4wNiAyNzkuMSAzMC4wNiAyNzAuMUMzOS4wNiAyNjEuMSA1MS4yNyAyNTYgNjQgMjU2SDQ0OEM0NjAuNyAyNTYgNDcyLjkgMjYxLjEgNDgxLjkgMjcwLjF6TTQ3NS4zIDM4OC43QzQ3OC4zIDM5MS43IDQ4MCAzOTUuOCA0ODAgNDAwVjQxNkM0ODAgNDMyLjEgNDczLjMgNDQ5LjMgNDYxLjMgNDYxLjNDNDQ5LjMgNDczLjMgNDMyLjEgNDgwIDQxNiA0ODBIOTZDNzkuMDMgNDgwIDYyLjc1IDQ3My4zIDUwLjc1IDQ2MS4zQzM4Ljc0IDQ0OS4zIDMyIDQzMi4xIDMyIDQxNlY0MDBDMzIgMzk1LjggMzMuNjkgMzkxLjcgMzYuNjkgMzg4LjdDMzkuNjkgMzg1LjcgNDMuNzYgMzg0IDQ4IDM4NEg0NjRDNDY4LjIgMzg0IDQ3Mi4zIDM4NS43IDQ3NS4zIDM4OC43ek01MC4zOSAyMjAuOEM0NS45MyAyMTguNiA0Mi4wMyAyMTUuNSAzOC45NyAyMTEuNkMzNS45MSAyMDcuNyAzMy43OSAyMDMuMiAzMi43NSAxOTguNEMzMS43MSAxOTMuNSAzMS44IDE4OC41IDMyLjk5IDE4My43QzU0Ljk4IDk3LjAyIDE0Ni41IDMyIDI1NiAzMkMzNjUuNSAzMiA0NTcgOTcuMDIgNDc5IDE4My43QzQ4MC4yIDE4OC41IDQ4MC4zIDE5My41IDQ3OS4yIDE5OC40QzQ3OC4yIDIwMy4yIDQ3Ni4xIDIwNy43IDQ3MyAyMTEuNkM0NjkuMSAyMTUuNSA0NjYuMSAyMTguNiA0NjEuNiAyMjAuOEM0NTcuMiAyMjIuOSA0NTIuMyAyMjQgNDQ3LjMgMjI0SDY0LjY3QzU5LjczIDIyNCA1NC44NCAyMjIuOSA1MC4zOSAyMjAuOHpNMzcyLjcgMTE2LjdDMzY5LjcgMTE5LjcgMzY4IDEyMy44IDM2OCAxMjhDMzY4IDEzMS4yIDM2OC45IDEzNC4zIDM3MC43IDEzNi45QzM3Mi41IDEzOS41IDM3NC4xIDE0MS42IDM3Ny45IDE0Mi44QzM4MC44IDE0My4xIDM4NCAxNDQuMyAzODcuMSAxNDMuN0MzOTAuMiAxNDMuMSAzOTMuMSAxNDEuNiAzOTUuMyAxMzkuM0MzOTcuNiAxMzcuMSAzOTkuMSAxMzQuMiAzOTkuNyAxMzEuMUM0MDAuMyAxMjggMzk5LjEgMTI0LjggMzk4LjggMTIxLjlDMzk3LjYgMTE4LjEgMzk1LjUgMTE2LjUgMzkyLjkgMTE0LjdDMzkwLjMgMTEyLjkgMzg3LjIgMTExLjEgMzg0IDExMS4xQzM3OS44IDExMS4xIDM3NS43IDExMy43IDM3Mi43IDExNi43VjExNi43ek0yNDQuNyA4NC42OUMyNDEuNyA4Ny42OSAyNDAgOTEuNzYgMjQwIDk2QzI0MCA5OS4xNiAyNDAuOSAxMDIuMyAyNDIuNyAxMDQuOUMyNDQuNSAxMDcuNSAyNDYuMSAxMDkuNiAyNDkuOSAxMTAuOEMyNTIuOCAxMTEuMSAyNTYgMTEyLjMgMjU5LjEgMTExLjdDMjYyLjIgMTExLjEgMjY1LjEgMTA5LjYgMjY3LjMgMTA3LjNDMjY5LjYgMTA1LjEgMjcxLjEgMTAyLjIgMjcxLjcgOTkuMTJDMjcyLjMgOTYuMDIgMjcxLjEgOTIuOCAyNzAuOCA4OS44OEMyNjkuNiA4Ni45NSAyNjcuNSA4NC40NSAyNjQuOSA4Mi43QzI2Mi4zIDgwLjk0IDI1OS4yIDc5LjEgMjU2IDc5LjFDMjUxLjggNzkuMSAyNDcuNyA4MS42OSAyNDQuNyA4NC42OVY4NC42OXpNMTE2LjcgMTE2LjdDMTEzLjcgMTE5LjcgMTEyIDEyMy44IDExMiAxMjhDMTEyIDEzMS4yIDExMi45IDEzNC4zIDExNC43IDEzNi45QzExNi41IDEzOS41IDExOC4xIDE0MS42IDEyMS45IDE0Mi44QzEyNC44IDE0My4xIDEyOCAxNDQuMyAxMzEuMSAxNDMuN0MxMzQuMiAxNDMuMSAxMzcuMSAxNDEuNiAxMzkuMyAxMzkuM0MxNDEuNiAxMzcuMSAxNDMuMSAxMzQuMiAxNDMuNyAxMzEuMUMxNDQuMyAxMjggMTQzLjEgMTI0LjggMTQyLjggMTIxLjlDMTQxLjYgMTE4LjEgMTM5LjUgMTE2LjUgMTM2LjkgMTE0LjdDMTM0LjMgMTEyLjkgMTMxLjIgMTExLjEgMTI4IDExMS4xQzEyMy44IDExMS4xIDExOS43IDExMy43IDExNi43IDExNi43TDExNi43IDExNi43elwiIC8+XG4gICAgICA8L3N2Zz5cbiAgICApLFxuICB9LFxuXG4gIGZyZXF1ZW50OiB7XG4gICAgb3V0bGluZTogKFxuICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICA8cGF0aCBkPVwiTTEzIDRoLTJsLS4wMDEgN0g5djJoMnYyaDJ2LTJoNHYtMmgtNHpcIiAvPlxuICAgICAgICA8cGF0aCBkPVwiTTEyIDBDNS4zNzMgMCAwIDUuMzczIDAgMTJzNS4zNzMgMTIgMTIgMTIgMTItNS4zNzMgMTItMTJTMTguNjI3IDAgMTIgMG0wIDIyQzYuNDg2IDIyIDIgMTcuNTE0IDIgMTJTNi40ODYgMiAxMiAyczEwIDQuNDg2IDEwIDEwLTQuNDg2IDEwLTEwIDEwXCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gICAgc29saWQ6IChcbiAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiPlxuICAgICAgICA8cGF0aCBkPVwiTTI1NiA1MTJDMTE0LjYgNTEyIDAgMzk3LjQgMCAyNTZDMCAxMTQuNiAxMTQuNiAwIDI1NiAwQzM5Ny40IDAgNTEyIDExNC42IDUxMiAyNTZDNTEyIDM5Ny40IDM5Ny40IDUxMiAyNTYgNTEyek0yMzIgMjU2QzIzMiAyNjQgMjM2IDI3MS41IDI0Mi43IDI3NS4xTDMzOC43IDMzOS4xQzM0OS43IDM0Ny4zIDM2NC42IDM0NC4zIDM3MS4xIDMzMy4zQzM3OS4zIDMyMi4zIDM3Ni4zIDMwNy40IDM2NS4zIDMwMEwyODAgMjQzLjJWMTIwQzI4MCAxMDYuNyAyNjkuMyA5NiAyNTUuMSA5NkMyNDIuNyA5NiAyMzEuMSAxMDYuNyAyMzEuMSAxMjBMMjMyIDI1NnpcIiAvPlxuICAgICAgPC9zdmc+XG4gICAgKSxcbiAgfSxcblxuICBuYXR1cmU6IHtcbiAgICBvdXRsaW5lOiAoXG4gICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTUuNSA4YTEuNSAxLjUgMCAxIDAgLjAwMSAzLjAwMUExLjUgMS41IDAgMCAwIDE1LjUgOE04LjUgOGExLjUgMS41IDAgMSAwIC4wMDEgMy4wMDFBMS41IDEuNSAwIDAgMCA4LjUgOFwiIC8+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTguOTMzIDBoLS4wMjdjLS45NyAwLTIuMTM4Ljc4Ny0zLjAxOCAxLjQ5Ny0xLjI3NC0uMzc0LTIuNjEyLS41MS0zLjg4Ny0uNTEtMS4yODUgMC0yLjYxNi4xMzMtMy44NzQuNTE3QzcuMjQ1Ljc5IDYuMDY5IDAgNS4wOTMgMGgtLjAyN0MzLjM1MiAwIC4wNyAyLjY3LjAwMiA3LjAyNmMtLjAzOSAyLjQ3OS4yNzYgNC4yMzggMS4wNCA1LjAxMy4yNTQuMjU4Ljg4Mi42NzcgMS4yOTUuODgyLjE5MSAzLjE3Ny45MjIgNS4yMzggMi41MzYgNi4zOC44OTcuNjM3IDIuMTg3Ljk0OSAzLjIgMS4xMDJDOC4wNCAyMC42IDggMjAuNzk1IDggMjFjMCAxLjc3MyAyLjM1IDMgNCAzIDEuNjQ4IDAgNC0xLjIyNyA0LTMgMC0uMjAxLS4wMzgtLjM5My0uMDcyLS41ODYgMi41NzMtLjM4NSA1LjQzNS0xLjg3NyA1LjkyNS03LjU4Ny4zOTYtLjIyLjg4Ny0uNTY4IDEuMTA0LS43ODguNzYzLS43NzQgMS4wNzktMi41MzQgMS4wNC01LjAxM0MyMy45MjkgMi42NyAyMC42NDYgMCAxOC45MzMgME0zLjIyMyA5LjEzNWMtLjIzNy4yODEtLjgzNyAxLjE1NS0uODg0IDEuMjM4LS4xNS0uNDEtLjM2OC0xLjM0OS0uMzM3LTMuMjkxLjA1MS0zLjI4MSAyLjQ3OC00Ljk3MiAzLjA5MS01LjAzMS4yNTYuMDE1LjczMS4yNyAxLjI2NS42NDYtMS4xMSAxLjE3MS0yLjI3NSAyLjkxNS0yLjM1MiA1LjEyNS0uMTMzLjU0Ni0uMzk4Ljg1OC0uNzgzIDEuMzEzTTEyIDIyYy0uOTAxIDAtMS45NTQtLjY5My0yLTEgMC0uNjU0LjQ3NS0xLjIzNiAxLTEuNjAyVjIwYTEgMSAwIDEgMCAyIDB2LS42MDJjLjUyNC4zNjUgMSAuOTQ3IDEgMS42MDItLjA0Ni4zMDctMS4wOTkgMS0yIDFtMy0zLjQ4di4wMmE0Ljc1MiA0Ljc1MiAwIDAgMC0xLjI2Mi0xLjAyYzEuMDkyLS41MTYgMi4yMzktMS4zMzQgMi4yMzktMi4yMTcgMC0xLjg0Mi0xLjc4MS0yLjE5NS0zLjk3Ny0yLjE5NS0yLjE5NiAwLTMuOTc4LjM1NC0zLjk3OCAyLjE5NSAwIC44ODMgMS4xNDggMS43MDEgMi4yMzggMi4yMTdBNC44IDQuOCAwIDAgMCA5IDE4LjUzOXYtLjAyNWMtMS0uMDc2LTIuMTgyLS4yODEtMi45NzMtLjg0Mi0xLjMwMS0uOTItMS44MzgtMy4wNDUtMS44NTMtNi40NzhsLjAyMy0uMDQxYy40OTYtLjgyNiAxLjQ5LTEuNDUgMS44MDQtMy4xMDIgMC0yLjA0NyAxLjM1Ny0zLjYzMSAyLjM2Mi00LjUyMkM5LjM3IDMuMTc4IDEwLjU1NSAzIDExLjk0OCAzYzEuNDQ3IDAgMi42ODUuMTkyIDMuNzMzLjU3IDEgLjkgMi4zMTYgMi40NjUgMi4zMTYgNC40OC4zMTMgMS42NTEgMS4zMDcgMi4yNzUgMS44MDMgMy4xMDIuMDM1LjA1OC4wNjguMTE3LjEwMi4xNzgtLjA1OSA1Ljk2Ny0xLjk0OSA3LjAxLTQuOTAyIDcuMTltNi42MjgtOC4yMDJjLS4wMzctLjA2NS0uMDc0LS4xMy0uMTEzLS4xOTVhNy41ODcgNy41ODcgMCAwIDAtLjczOS0uOTg3Yy0uMzg1LS40NTUtLjY0OC0uNzY4LS43ODItMS4zMTMtLjA3Ni0yLjIwOS0xLjI0MS0zLjk1NC0yLjM1My01LjEyNC41MzEtLjM3NiAxLjAwNC0uNjMgMS4yNjEtLjY0Ny42MzYuMDcxIDMuMDQ0IDEuNzY0IDMuMDk2IDUuMDMxLjAyNyAxLjgxLS4zNDcgMy4yMTgtLjM3IDMuMjM1XCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gICAgc29saWQ6IChcbiAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTc2IDUxMlwiPlxuICAgICAgICA8cGF0aCBkPVwiTTMzMi43IDE5Ljg1QzMzNC42IDguMzk1IDM0NC41IDAgMzU2LjEgMEMzNjMuNiAwIDM3MC42IDMuNTIgMzc1LjEgOS41MDJMMzkyIDMySDQ0NC4xQzQ1Ni44IDMyIDQ2OS4xIDM3LjA2IDQ3OC4xIDQ2LjA2TDQ5NiA2NEg1NTJDNTY1LjMgNjQgNTc2IDc0Ljc1IDU3NiA4OFYxMTJDNTc2IDE1Ni4yIDU0MC4yIDE5MiA0OTYgMTkySDQyNi43TDQyMS42IDIyMi41TDMwOS42IDE1OC41TDMzMi43IDE5Ljg1ek00NDggNjRDNDM5LjIgNjQgNDMyIDcxLjE2IDQzMiA4MEM0MzIgODguODQgNDM5LjIgOTYgNDQ4IDk2QzQ1Ni44IDk2IDQ2NCA4OC44NCA0NjQgODBDNDY0IDcxLjE2IDQ1Ni44IDY0IDQ0OCA2NHpNNDE2IDI1Ni4xVjQ4MEM0MTYgNDk3LjcgNDAxLjcgNTEyIDM4NCA1MTJIMzUyQzMzNC4zIDUxMiAzMjAgNDk3LjcgMzIwIDQ4MFYzNjQuOEMyOTUuMSAzNzcuMSAyNjguOCAzODQgMjQwIDM4NEMyMTEuMiAzODQgMTg0IDM3Ny4xIDE2MCAzNjQuOFY0ODBDMTYwIDQ5Ny43IDE0NS43IDUxMiAxMjggNTEySDk2Qzc4LjMzIDUxMiA2NCA0OTcuNyA2NCA0ODBWMjQ5LjhDMzUuMjMgMjM4LjkgMTIuNjQgMjE0LjUgNC44MzYgMTgzLjNMLjk1NTggMTY3LjhDLTMuMzMxIDE1MC42IDcuMDk0IDEzMy4yIDI0LjI0IDEyOC4xQzQxLjM4IDEyNC43IDU4Ljc2IDEzNS4xIDYzLjA1IDE1Mi4yTDY2LjkzIDE2Ny44QzcwLjQ5IDE4MiA4My4yOSAxOTEuMSA5Ny45NyAxOTEuMUgzMDMuOEw0MTYgMjU2LjF6XCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gIH0sXG5cbiAgb2JqZWN0czoge1xuICAgIG91dGxpbmU6IChcbiAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgPHBhdGggZD1cIk0xMiAwYTkgOSAwIDAgMC01IDE2LjQ4MlYyMXMyLjAzNSAzIDUgMyA1LTMgNS0zdi00LjUxOEE5IDkgMCAwIDAgMTIgMHptMCAyYzMuODYgMCA3IDMuMTQxIDcgN3MtMy4xNCA3LTcgNy03LTMuMTQxLTctNyAzLjE0LTcgNy03ek05IDE3LjQ3N2MuOTQuMzMyIDEuOTQ2LjUyMyAzIC41MjNzMi4wNi0uMTkgMy0uNTIzdi44MzRjLS45MS40MzYtMS45MjUuNjg5LTMgLjY4OWE2LjkyNCA2LjkyNCAwIDAgMS0zLS42OXYtLjgzM3ptLjIzNiAzLjA3QTguODU0IDguODU0IDAgMCAwIDEyIDIxYy45NjUgMCAxLjg4OC0uMTY3IDIuNzU4LS40NTFDMTQuMTU1IDIxLjE3MyAxMy4xNTMgMjIgMTIgMjJjLTEuMTAyIDAtMi4xMTctLjc4OS0yLjc2NC0xLjQ1M3pcIiAvPlxuICAgICAgICA8cGF0aCBkPVwiTTE0Ljc0NSAxMi40NDloLS4wMDRjLS44NTItLjAyNC0xLjE4OC0uODU4LTEuNTc3LTEuODI0LS40MjEtMS4wNjEtLjcwMy0xLjU2MS0xLjE4Mi0xLjU2NmgtLjAwOWMtLjQ4MSAwLS43ODMuNDk3LTEuMjM1IDEuNTM3LS40MzYuOTgyLS44MDEgMS44MTEtMS42MzYgMS43OTFsLS4yNzYtLjA0M2MtLjU2NS0uMTcxLS44NTMtLjY5MS0xLjI4NC0xLjc5NC0uMTI1LS4zMTMtLjIwMi0uNjMyLS4yNy0uOTEzLS4wNTEtLjIxMy0uMTI3LS41My0uMTk1LS42MzRDNy4wNjcgOS4wMDQgNy4wMzkgOSA2Ljk5IDlBMSAxIDAgMCAxIDcgN2guMDFjMS42NjIuMDE3IDIuMDE1IDEuMzczIDIuMTk4IDIuMTM0LjQ4Ni0uOTgxIDEuMzA0LTIuMDU4IDIuNzk3LTIuMDc1IDEuNTMxLjAxOCAyLjI4IDEuMTUzIDIuNzMxIDIuMTQxbC4wMDItLjAwOEMxNC45NDQgOC40MjQgMTUuMzI3IDcgMTYuOTc5IDdoLjAzMkExIDEgMCAxIDEgMTcgOWgtLjAxMWMtLjE0OS4wNzYtLjI1Ni40NzQtLjMxOS43MDlhNi40ODQgNi40ODQgMCAwIDEtLjMxMS45NTFjLS40MjkuOTczLS43OSAxLjc4OS0xLjYxNCAxLjc4OVwiIC8+XG4gICAgICA8L3N2Zz5cbiAgICApLFxuICAgIHNvbGlkOiAoXG4gICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDM4NCA1MTJcIj5cbiAgICAgICAgPHBhdGggZD1cIk0xMTIuMSA0NTQuM2MwIDYuMjk3IDEuODE2IDEyLjQ0IDUuMjg0IDE3LjY5bDE3LjE0IDI1LjY5YzUuMjUgNy44NzUgMTcuMTcgMTQuMjggMjYuNjQgMTQuMjhoNjEuNjdjOS40MzggMCAyMS4zNi02LjQwMSAyNi42MS0xNC4yOGwxNy4wOC0yNS42OGMyLjkzOC00LjQzOCA1LjM0OC0xMi4zNyA1LjM0OC0xNy43TDI3MiA0MTUuMWgtMTYwTDExMi4xIDQ1NC4zek0xOTEuNCAuMDEzMkM4OS40NCAuMzI1NyAxNiA4Mi45NyAxNiAxNzUuMWMwIDQ0LjM4IDE2LjQ0IDg0Ljg0IDQzLjU2IDExNS44YzE2LjUzIDE4Ljg0IDQyLjM0IDU4LjIzIDUyLjIyIDkxLjQ1Yy4wMzEzIC4yNSAuMDkzOCAuNTE2NiAuMTI1IC43ODIzaDE2MC4yYy4wMzEzLS4yNjU2IC4wOTM4LS41MTY2IC4xMjUtLjc4MjNjOS44NzUtMzMuMjIgMzUuNjktNzIuNjEgNTIuMjItOTEuNDVDMzUxLjYgMjYwLjggMzY4IDIyMC40IDM2OCAxNzUuMUMzNjggNzguNjEgMjg4LjktLjI4MzcgMTkxLjQgLjAxMzJ6TTE5MiA5Ni4wMWMtNDQuMTMgMC04MCAzNS44OS04MCA3OS4xQzExMiAxODQuOCAxMDQuOCAxOTIgOTYgMTkyUzgwIDE4NC44IDgwIDE3NmMwLTYxLjc2IDUwLjI1LTExMS4xIDExMi0xMTEuMWM4Ljg0NCAwIDE2IDcuMTU5IDE2IDE2UzIwMC44IDk2LjAxIDE5MiA5Ni4wMXpcIiAvPlxuICAgICAgPC9zdmc+XG4gICAgKSxcbiAgfSxcblxuICBwZW9wbGU6IHtcbiAgICBvdXRsaW5lOiAoXG4gICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTIgMEM1LjM3MyAwIDAgNS4zNzMgMCAxMnM1LjM3MyAxMiAxMiAxMiAxMi01LjM3MyAxMi0xMlMxOC42MjcgMCAxMiAwbTAgMjJDNi40ODYgMjIgMiAxNy41MTQgMiAxMlM2LjQ4NiAyIDEyIDJzMTAgNC40ODYgMTAgMTAtNC40ODYgMTAtMTAgMTBcIiAvPlxuICAgICAgICA8cGF0aCBkPVwiTTggN2EyIDIgMCAxIDAtLjAwMSAzLjk5OUEyIDIgMCAwIDAgOCA3TTE2IDdhMiAyIDAgMSAwLS4wMDEgMy45OTlBMiAyIDAgMCAwIDE2IDdNMTUuMjMyIDE1Yy0uNjkzIDEuMTk1LTEuODcgMi0zLjM0OSAyLTEuNDc3IDAtMi42NTUtLjgwNS0zLjM0Ny0ySDE1bTMtMkg2YTYgNiAwIDEgMCAxMiAwXCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gICAgc29saWQ6IChcbiAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiPlxuICAgICAgICA8cGF0aCBkPVwiTTAgMjU2QzAgMTE0LjYgMTE0LjYgMCAyNTYgMEMzOTcuNCAwIDUxMiAxMTQuNiA1MTIgMjU2QzUxMiAzOTcuNCAzOTcuNCA1MTIgMjU2IDUxMkMxMTQuNiA1MTIgMCAzOTcuNCAwIDI1NnpNMjU2IDQzMkMzMzIuMSA0MzIgMzk2LjIgMzgyIDQxNS4yIDMxNC4xQzQxOS4xIDMwMC40IDQwNy44IDI4OCAzOTMuNiAyODhIMTE4LjRDMTA0LjIgMjg4IDkyLjkyIDMwMC40IDk2Ljc2IDMxNC4xQzExNS44IDM4MiAxNzkuOSA0MzIgMjU2IDQzMlY0MzJ6TTE3Ni40IDE2MEMxNTguNyAxNjAgMTQ0LjQgMTc0LjMgMTQ0LjQgMTkyQzE0NC40IDIwOS43IDE1OC43IDIyNCAxNzYuNCAyMjRDMTk0IDIyNCAyMDguNCAyMDkuNyAyMDguNCAxOTJDMjA4LjQgMTc0LjMgMTk0IDE2MCAxNzYuNCAxNjB6TTMzNi40IDIyNEMzNTQgMjI0IDM2OC40IDIwOS43IDM2OC40IDE5MkMzNjguNCAxNzQuMyAzNTQgMTYwIDMzNi40IDE2MEMzMTguNyAxNjAgMzA0LjQgMTc0LjMgMzA0LjQgMTkyQzMwNC40IDIwOS43IDMxOC43IDIyNCAzMzYuNCAyMjR6XCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gIH0sXG5cbiAgcGxhY2VzOiB7XG4gICAgb3V0bGluZTogKFxuICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICA8cGF0aCBkPVwiTTYuNSAxMkM1LjEyMiAxMiA0IDEzLjEyMSA0IDE0LjVTNS4xMjIgMTcgNi41IDE3IDkgMTUuODc5IDkgMTQuNSA3Ljg3OCAxMiA2LjUgMTJtMCAzYy0uMjc1IDAtLjUtLjIyNS0uNS0uNXMuMjI1LS41LjUtLjUuNS4yMjUuNS41LS4yMjUuNS0uNS41TTE3LjUgMTJjLTEuMzc4IDAtMi41IDEuMTIxLTIuNSAyLjVzMS4xMjIgMi41IDIuNSAyLjUgMi41LTEuMTIxIDIuNS0yLjUtMS4xMjItMi41LTIuNS0yLjVtMCAzYy0uMjc1IDAtLjUtLjIyNS0uNS0uNXMuMjI1LS41LjUtLjUuNS4yMjUuNS41LS4yMjUuNS0uNS41XCIgLz5cbiAgICAgICAgPHBhdGggZD1cIk0yMi40ODIgOS40OTRsLTEuMDM5LS4zNDZMMjEuNCA5aC42Yy41NTIgMCAxLS40MzkgMS0uOTkyIDAtLjAwNi0uMDAzLS4wMDgtLjAwMy0uMDA4SDIzYzAtMS0uODg5LTItMS45ODQtMmgtLjY0MmwtLjczMS0xLjcxN0MxOS4yNjIgMy4wMTIgMTguMDkxIDIgMTYuNzY0IDJINy4yMzZDNS45MDkgMiA0LjczOCAzLjAxMiA0LjM1NyA0LjI4M0wzLjYyNiA2aC0uNjQyQzEuODg5IDYgMSA3IDEgOGguMDAzUzEgOC4wMDIgMSA4LjAwOEMxIDguNTYxIDEuNDQ4IDkgMiA5aC42bC0uMDQzLjE0OC0xLjAzOS4zNDZhMi4wMDEgMi4wMDEgMCAwIDAtMS4zNTkgMi4wOTdsLjc1MSA3LjUwOGExIDEgMCAwIDAgLjk5NC45MDFIM3YxYzAgMS4xMDMuODk2IDIgMiAyaDJjMS4xMDQgMCAyLS44OTcgMi0ydi0xaDZ2MWMwIDEuMTAzLjg5NiAyIDIgMmgyYzEuMTA0IDAgMi0uODk3IDItMnYtMWgxLjA5NmEuOTk5Ljk5OSAwIDAgMCAuOTk0LS45MDFsLjc1MS03LjUwOGEyLjAwMSAyLjAwMSAwIDAgMC0xLjM1OS0yLjA5N002LjI3MyA0Ljg1N0M2LjQwMiA0LjQzIDYuNzg4IDQgNy4yMzYgNGg5LjUyN2MuNDQ4IDAgLjgzNC40My45NjMuODU3TDE5LjMxMyA5SDQuNjg4bDEuNTg1LTQuMTQzek03IDIxSDV2LTFoMnYxem0xMiAwaC0ydi0xaDJ2MXptMi4xODktM0gyLjgxMWwtLjY2Mi02LjYwN0wzIDExaDE4bC44NTIuMzkzTDIxLjE4OSAxOHpcIiAvPlxuICAgICAgPC9zdmc+XG4gICAgKSxcbiAgICBzb2xpZDogKFxuICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCI+XG4gICAgICAgIDxwYXRoIGQ9XCJNMzkuNjEgMTk2LjhMNzQuOCA5Ni4yOUM4OC4yNyA1Ny43OCAxMjQuNiAzMiAxNjUuNCAzMkgzNDYuNkMzODcuNCAzMiA0MjMuNyA1Ny43OCA0MzcuMiA5Ni4yOUw0NzIuNCAxOTYuOEM0OTUuNiAyMDYuNCA1MTIgMjI5LjMgNTEyIDI1NlY0NDhDNTEyIDQ2NS43IDQ5Ny43IDQ4MCA0ODAgNDgwSDQ0OEM0MzAuMyA0ODAgNDE2IDQ2NS43IDQxNiA0NDhWNDAwSDk2VjQ0OEM5NiA0NjUuNyA4MS42NyA0ODAgNjQgNDgwSDMyQzE0LjMzIDQ4MCAwIDQ2NS43IDAgNDQ4VjI1NkMwIDIyOS4zIDE2LjM2IDIwNi40IDM5LjYxIDE5Ni44VjE5Ni44ek0xMDkuMSAxOTJINDAyLjlMMzc2LjggMTE3LjRDMzcyLjMgMTA0LjYgMzYwLjIgOTYgMzQ2LjYgOTZIMTY1LjRDMTUxLjggOTYgMTM5LjcgMTA0LjYgMTM1LjIgMTE3LjRMMTA5LjEgMTkyek05NiAyNTZDNzguMzMgMjU2IDY0IDI3MC4zIDY0IDI4OEM2NCAzMDUuNyA3OC4zMyAzMjAgOTYgMzIwQzExMy43IDMyMCAxMjggMzA1LjcgMTI4IDI4OEMxMjggMjcwLjMgMTEzLjcgMjU2IDk2IDI1NnpNNDE2IDMyMEM0MzMuNyAzMjAgNDQ4IDMwNS43IDQ0OCAyODhDNDQ4IDI3MC4zIDQzMy43IDI1NiA0MTYgMjU2QzM5OC4zIDI1NiAzODQgMjcwLjMgMzg0IDI4OEMzODQgMzA1LjcgMzk4LjMgMzIwIDQxNiAzMjB6XCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gIH0sXG5cbiAgc3ltYm9sczoge1xuICAgIG91dGxpbmU6IChcbiAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgPHBhdGggZD1cIk0wIDBoMTF2Mkgwek00IDExaDNWNmg0VjRIMHYyaDR6TTE1LjUgMTdjMS4zODEgMCAyLjUtMS4xMTYgMi41LTIuNDkzcy0xLjExOS0yLjQ5My0yLjUtMi40OTNTMTMgMTMuMTMgMTMgMTQuNTA3IDE0LjExOSAxNyAxNS41IDE3bTAtMi45ODZjLjI3NiAwIC41LjIyMi41LjQ5MyAwIC4yNzItLjIyNC40OTMtLjUuNDkzcy0uNS0uMjIxLS41LS40OTMuMjI0LS40OTMuNS0uNDkzTTIxLjUgMTkuMDE0Yy0xLjM4MSAwLTIuNSAxLjExNi0yLjUgMi40OTNTMjAuMTE5IDI0IDIxLjUgMjRzMi41LTEuMTE2IDIuNS0yLjQ5My0xLjExOS0yLjQ5My0yLjUtMi40OTNtMCAyLjk4NmEuNDk3LjQ5NyAwIDAgMS0uNS0uNDkzYzAtLjI3MS4yMjQtLjQ5My41LS40OTNzLjUuMjIyLjUuNDkzYS40OTcuNDk3IDAgMCAxLS41LjQ5M00yMiAxM2wtOSA5IDEuNTEzIDEuNSA4Ljk5LTkuMDA5ek0xNyAxMWMyLjIwOSAwIDQtMS4xMTkgNC0yLjVWMnMuOTg1LS4xNjEgMS40OTguOTQ5QzIzLjAxIDQuMDU1IDIzIDYgMjMgNnMxLTEuMTE5IDEtMy4xMzVDMjQtLjAyIDIxIDAgMjEgMGgtMnY2LjM0N0E1Ljg1MyA1Ljg1MyAwIDAgMCAxNyA2Yy0yLjIwOSAwLTQgMS4xMTktNCAyLjVzMS43OTEgMi41IDQgMi41TTEwLjI5NyAyMC40ODJsLTEuNDc1LTEuNTg1YTQ3LjU0IDQ3LjU0IDAgMCAxLTEuNDQyIDEuMTI5Yy0uMzA3LS4yODgtLjk4OS0xLjAxNi0yLjA0NS0yLjE4My45MDItLjgzNiAxLjQ3OS0xLjQ2NiAxLjcyOS0xLjg5MnMuMzc2LS44NzEuMzc2LTEuMzM2YzAtLjU5Mi0uMjczLTEuMTc4LS44MTgtMS43NTktLjU0Ni0uNTgxLTEuMzI5LS44NzEtMi4zNDktLjg3MS0xLjAwOCAwLTEuNzkuMjkzLTIuMzQ0Ljg3OS0uNTU2LjU4Ny0uODMyIDEuMTgxLS44MzIgMS43ODQgMCAuODEzLjQxOSAxLjc0OCAxLjI1NiAyLjgwNS0uODQ3LjYxNC0xLjQ0NCAxLjIwOC0xLjc5NCAxLjc4NGEzLjQ2NSAzLjQ2NSAwIDAgMC0uNTIzIDEuODMzYzAgLjg1Ny4zMDggMS41Ni45MjQgMi4xMDcuNjE2LjU0OSAxLjQyMy44MjMgMi40Mi44MjMgMS4xNzMgMCAyLjQ0NC0uMzc5IDMuODEzLTEuMTM3TDguMjM1IDI0aDIuODE5bC0yLjA5LTIuMzgzIDEuMzMzLTEuMTM1em0tNi43MzYtNi4zODlhMS4wMiAxLjAyIDAgMCAxIC43My0uMjg2Yy4zMSAwIC41NTkuMDg1Ljc0Ny4yNTRhLjg0OS44NDkgMCAwIDEgLjI4My42NTljMCAuNTE4LS40MTkgMS4xMTItMS4yNTcgMS43ODQtLjUzNi0uNjUxLS44MDUtMS4yMzEtLjgwNS0xLjc0MmEuOTAxLjkwMSAwIDAgMSAuMzAyLS42NjlNMy43NCAyMmMtLjQyNyAwLS43NzgtLjExNi0xLjA1Ny0uMzQ5LS4yNzktLjIzMi0uNDE4LS40ODctLjQxOC0uNzY2IDAtLjU5NC41MDktMS4yODggMS41MjctMi4wODMuOTY4IDEuMTM0IDEuNzE3IDEuOTQ2IDIuMjQ4IDIuNDM4LS45MjEuNTA3LTEuNjg2Ljc2LTIuMy43NlwiIC8+XG4gICAgICA8L3N2Zz5cbiAgICApLFxuICAgIHNvbGlkOiAoXG4gICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIj5cbiAgICAgICAgPHBhdGggZD1cIk01MDAuMyA3LjI1MUM1MDcuNyAxMy4zMyA1MTIgMjIuNDEgNTEyIDMxLjFWMTc1LjFDNTEyIDIwMi41IDQ4My4zIDIyMy4xIDQ0Ny4xIDIyMy4xQzQxMi43IDIyMy4xIDM4My4xIDIwMi41IDM4My4xIDE3NS4xQzM4My4xIDE0OS41IDQxMi43IDEyNy4xIDQ0Ny4xIDEyNy4xVjcxLjAzTDM1MS4xIDkwLjIzVjIwNy4xQzM1MS4xIDIzNC41IDMyMy4zIDI1NS4xIDI4Ny4xIDI1NS4xQzI1Mi43IDI1NS4xIDIyMy4xIDIzNC41IDIyMy4xIDIwNy4xQzIyMy4xIDE4MS41IDI1Mi43IDE1OS4xIDI4Ny4xIDE1OS4xVjYzLjFDMjg3LjEgNDguNzQgMjk4LjggMzUuNjEgMzEzLjcgMzIuNjJMNDczLjcgLjYxOThDNDgzLjEtMS4yNjEgNDkyLjkgMS4xNzMgNTAwLjMgNy4yNTFINTAwLjN6TTc0LjY2IDMwMy4xTDg2LjUgMjg2LjJDOTIuNDMgMjc3LjMgMTAyLjQgMjcxLjEgMTEzLjEgMjcxLjFIMTc0LjlDMTg1LjYgMjcxLjEgMTk1LjYgMjc3LjMgMjAxLjUgMjg2LjJMMjEzLjMgMzAzLjFIMjM5LjFDMjY2LjUgMzAzLjEgMjg3LjEgMzI1LjUgMjg3LjEgMzUxLjFWNDYzLjFDMjg3LjEgNDkwLjUgMjY2LjUgNTExLjEgMjM5LjEgNTExLjFINDcuMUMyMS40OSA1MTEuMS0uMDAxOSA0OTAuNS0uMDAxOSA0NjMuMVYzNTEuMUMtLjAwMTkgMzI1LjUgMjEuNDkgMzAzLjEgNDcuMSAzMDMuMUg3NC42NnpNMTQzLjEgMzU5LjFDMTE3LjUgMzU5LjEgOTUuMSAzODEuNSA5NS4xIDQwNy4xQzk1LjEgNDM0LjUgMTE3LjUgNDU1LjEgMTQzLjEgNDU1LjFDMTcwLjUgNDU1LjEgMTkxLjEgNDM0LjUgMTkxLjEgNDA3LjFDMTkxLjEgMzgxLjUgMTcwLjUgMzU5LjEgMTQzLjEgMzU5LjF6TTQ0MC4zIDM2Ny4xSDQ5NkM1MDIuNyAzNjcuMSA1MDguNiAzNzIuMSA1MTAuMSAzNzguNEM1MTMuMyAzODQuNiA1MTEuNiAzOTEuNyA1MDYuNSAzOTZMMzc4LjUgNTA4QzM3Mi45IDUxMi4xIDM2NC42IDUxMy4zIDM1OC42IDUwOC45QzM1Mi42IDUwNC42IDM1MC4zIDQ5Ni42IDM1My4zIDQ4OS43TDM5MS43IDM5OS4xSDMzNkMzMjkuMyAzOTkuMSAzMjMuNCAzOTUuOSAzMjEgMzg5LjZDMzE4LjcgMzgzLjQgMzIwLjQgMzc2LjMgMzI1LjUgMzcxLjFMNDUzLjUgMjU5LjFDNDU5LjEgMjU1IDQ2Ny40IDI1NC43IDQ3My40IDI1OS4xQzQ3OS40IDI2My40IDQ4MS42IDI3MS40IDQ3OC43IDI3OC4zTDQ0MC4zIDM2Ny4xek0xMTYuNyAyMTkuMUwxOS44NSAxMTkuMkMtOC4xMTIgOTAuMjYtNi42MTQgNDIuMzEgMjQuODUgMTUuMzRDNTEuODItOC4xMzcgOTMuMjYtMy42NDIgMTE4LjIgMjEuODNMMTI4LjIgMzIuMzJMMTM3LjcgMjEuODNDMTYyLjctMy42NDIgMjAzLjYtOC4xMzcgMjMxLjYgMTUuMzRDMjYyLjYgNDIuMzEgMjY0LjEgOTAuMjYgMjM2LjEgMTE5LjJMMTM5LjcgMjE5LjFDMTMzLjIgMjI1LjYgMTIyLjcgMjI1LjYgMTE2LjcgMjE5LjFIMTE2Ljd6XCIgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gIH0sXG59XG5cbmNvbnN0IHNlYXJjaCA9IHtcbiAgbG91cGU6IChcbiAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDIwIDIwXCI+XG4gICAgICA8cGF0aCBkPVwiTTEyLjkgMTQuMzJhOCA4IDAgMSAxIDEuNDEtMS40MWw1LjM1IDUuMzMtMS40MiAxLjQyLTUuMzMtNS4zNHpNOCAxNEE2IDYgMCAxIDAgOCAyYTYgNiAwIDAgMCAwIDEyelwiIC8+XG4gICAgPC9zdmc+XG4gICksXG5cbiAgZGVsZXRlOiAoXG4gICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyMCAyMFwiPlxuICAgICAgPHBhdGggZD1cIk0xMCA4LjU4NkwyLjkyOSAxLjUxNSAxLjUxNSAyLjkyOSA4LjU4NiAxMGwtNy4wNzEgNy4wNzEgMS40MTQgMS40MTRMMTAgMTEuNDE0bDcuMDcxIDcuMDcxIDEuNDE0LTEuNDE0TDExLjQxNCAxMGw3LjA3MS03LjA3MS0xLjQxNC0xLjQxNEwxMCA4LjU4NnpcIiAvPlxuICAgIDwvc3ZnPlxuICApLFxufVxuXG5leHBvcnQgZGVmYXVsdCB7IGNhdGVnb3JpZXMsIHNlYXJjaCB9XG4iLCAiZXhwb3J0IHsgZGVmYXVsdCBhcyBFbW9qaSB9IGZyb20gJy4vRW1vamknXG5leHBvcnQgeyBkZWZhdWx0IGFzIEVtb2ppRWxlbWVudCB9IGZyb20gJy4vRW1vamlFbGVtZW50J1xuIiwgImltcG9ydCB7IERhdGEgfSBmcm9tICcuLi8uLi9jb25maWcnXG5pbXBvcnQgeyBTZWFyY2hJbmRleCB9IGZyb20gJy4uLy4uL2hlbHBlcnMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVtb2ppKHByb3BzKSB7XG4gIGxldCB7IGlkLCBza2luLCBlbW9qaSB9ID0gcHJvcHNcblxuICBpZiAocHJvcHMuc2hvcnRjb2Rlcykge1xuICAgIGNvbnN0IG1hdGNoZXMgPSBwcm9wcy5zaG9ydGNvZGVzLm1hdGNoKFNlYXJjaEluZGV4LlNIT1JUQ09ERVNfUkVHRVgpXG5cbiAgICBpZiAobWF0Y2hlcykge1xuICAgICAgaWQgPSBtYXRjaGVzWzFdXG5cbiAgICAgIGlmIChtYXRjaGVzWzJdKSB7XG4gICAgICAgIHNraW4gPSBtYXRjaGVzWzJdXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZW1vamkgfHwgKGVtb2ppID0gU2VhcmNoSW5kZXguZ2V0KGlkIHx8IHByb3BzLm5hdGl2ZSkpXG4gIGlmICghZW1vamkpIHJldHVybiBwcm9wcy5mYWxsYmFja1xuXG4gIGNvbnN0IGVtb2ppU2tpbiA9IGVtb2ppLnNraW5zW3NraW4gLSAxXSB8fCBlbW9qaS5za2luc1swXVxuXG4gIGNvbnN0IGltYWdlU3JjID1cbiAgICBlbW9qaVNraW4uc3JjIHx8XG4gICAgKHByb3BzLnNldCAhPSAnbmF0aXZlJyAmJiAhcHJvcHMuc3ByaXRlc2hlZXRcbiAgICAgID8gdHlwZW9mIHByb3BzLmdldEltYWdlVVJMID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcHJvcHMuZ2V0SW1hZ2VVUkwocHJvcHMuc2V0LCBlbW9qaVNraW4udW5pZmllZClcbiAgICAgICAgOiBgaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9lbW9qaS1kYXRhc291cmNlLSR7cHJvcHMuc2V0fUAxNS4wLjEvaW1nLyR7cHJvcHMuc2V0fS82NC8ke2Vtb2ppU2tpbi51bmlmaWVkfS5wbmdgXG4gICAgICA6IHVuZGVmaW5lZClcblxuICBjb25zdCBzcHJpdGVzaGVldFNyYyA9XG4gICAgdHlwZW9mIHByb3BzLmdldFNwcml0ZXNoZWV0VVJMID09PSAnZnVuY3Rpb24nXG4gICAgICA/IHByb3BzLmdldFNwcml0ZXNoZWV0VVJMKHByb3BzLnNldClcbiAgICAgIDogYGh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vZW1vamktZGF0YXNvdXJjZS0ke3Byb3BzLnNldH1AMTUuMC4xL2ltZy8ke3Byb3BzLnNldH0vc2hlZXRzLTI1Ni82NC5wbmdgXG5cbiAgcmV0dXJuIChcbiAgICA8c3BhbiBjbGFzcz1cImVtb2ppLW1hcnQtZW1vamlcIiBkYXRhLWVtb2ppLXNldD17cHJvcHMuc2V0fT5cbiAgICAgIHtpbWFnZVNyYyA/IChcbiAgICAgICAgPGltZ1xuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBtYXhXaWR0aDogcHJvcHMuc2l6ZSB8fCAnMWVtJyxcbiAgICAgICAgICAgIG1heEhlaWdodDogcHJvcHMuc2l6ZSB8fCAnMWVtJyxcbiAgICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgICAgIH19XG4gICAgICAgICAgYWx0PXtlbW9qaVNraW4ubmF0aXZlIHx8IGVtb2ppU2tpbi5zaG9ydGNvZGVzfVxuICAgICAgICAgIHNyYz17aW1hZ2VTcmN9XG4gICAgICAgIC8+XG4gICAgICApIDogcHJvcHMuc2V0ID09ICduYXRpdmUnID8gKFxuICAgICAgICA8c3BhblxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBmb250U2l6ZTogcHJvcHMuc2l6ZSxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6XG4gICAgICAgICAgICAgICdcIkVtb2ppTWFydFwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCIsIFwiU2Vnb2UgVUlcIiwgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlR3ZW1vamkgTW96aWxsYVwiLCBcIk5vdG8gQ29sb3IgRW1vamlcIiwgXCJBbmRyb2lkIEVtb2ppXCInLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICB7ZW1vamlTa2luLm5hdGl2ZX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKSA6IChcbiAgICAgICAgPHNwYW5cbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgICAgICAgIHdpZHRoOiBwcm9wcy5zaXplLFxuICAgICAgICAgICAgaGVpZ2h0OiBwcm9wcy5zaXplLFxuICAgICAgICAgICAgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7c3ByaXRlc2hlZXRTcmN9KWAsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kU2l6ZTogYCR7MTAwICogRGF0YS5zaGVldC5jb2xzfSUgJHtcbiAgICAgICAgICAgICAgMTAwICogRGF0YS5zaGVldC5yb3dzXG4gICAgICAgICAgICB9JWAsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kUG9zaXRpb246IGAke1xuICAgICAgICAgICAgICAoMTAwIC8gKERhdGEuc2hlZXQuY29scyAtIDEpKSAqIGVtb2ppU2tpbi54XG4gICAgICAgICAgICB9JSAkeygxMDAgLyAoRGF0YS5zaGVldC5yb3dzIC0gMSkpICogZW1vamlTa2luLnl9JWAsXG4gICAgICAgICAgfX1cbiAgICAgICAgPjwvc3Bhbj5cbiAgICAgICl9XG4gICAgPC9zcGFuPlxuICApXG59XG4iLCAiaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAncHJlYWN0J1xuXG5pbXBvcnQgeyBpbml0LCBnZXRQcm9wcyB9IGZyb20gJy4uLy4uL2NvbmZpZydcbmltcG9ydCB7IEhUTUxFbGVtZW50IH0gZnJvbSAnLi4vSFRNTEVsZW1lbnQnXG5pbXBvcnQgeyBFbW9qaSB9IGZyb20gJy4nXG5pbXBvcnQgRW1vamlQcm9wcyBmcm9tICcuL0Vtb2ppUHJvcHMnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVtb2ppRWxlbWVudCBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgc3RhdGljIFByb3BzID0gRW1vamlQcm9wc1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG4gIH1cblxuICBhc3luYyBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBjb25zdCBwcm9wcyA9IGdldFByb3BzKHRoaXMucHJvcHMsIEVtb2ppUHJvcHMsIHRoaXMpXG4gICAgcHJvcHMuZWxlbWVudCA9IHRoaXNcbiAgICBwcm9wcy5yZWYgPSAoY29tcG9uZW50KSA9PiB7XG4gICAgICB0aGlzLmNvbXBvbmVudCA9IGNvbXBvbmVudFxuICAgIH1cblxuICAgIGF3YWl0IGluaXQoKVxuICAgIGlmICh0aGlzLmRpc2Nvbm5lY3RlZCkgcmV0dXJuXG5cbiAgICByZW5kZXIoPEVtb2ppIHsuLi5wcm9wc30gLz4sIHRoaXMpXG4gIH1cbn1cblxuaWYgKHR5cGVvZiBjdXN0b21FbGVtZW50cyAhPT0gJ3VuZGVmaW5lZCcgJiYgIWN1c3RvbUVsZW1lbnRzLmdldCgnZW0tZW1vamknKSkge1xuICBjdXN0b21FbGVtZW50cy5kZWZpbmUoJ2VtLWVtb2ppJywgRW1vamlFbGVtZW50KVxufVxuIiwgImV4cG9ydCB7IGRlZmF1bHQgYXMgSFRNTEVsZW1lbnQgfSBmcm9tICcuL0hUTUxFbGVtZW50J1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTaGFkb3dFbGVtZW50IH0gZnJvbSAnLi9TaGFkb3dFbGVtZW50J1xuIiwgIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgeyBnZXRQcm9wIH0gZnJvbSAnLi4vLi4vY29uZmlnJ1xuXG5jb25zdCBXaW5kb3dIVE1MRWxlbWVudCA9XG4gIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5IVE1MRWxlbWVudFxuICAgID8gd2luZG93LkhUTUxFbGVtZW50XG4gICAgOiBPYmplY3RcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSFRNTEVsZW1lbnQgZXh0ZW5kcyBXaW5kb3dIVE1MRWxlbWVudCB7XG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLlByb3BzKVxuICB9XG5cbiAgY29uc3RydWN0b3IocHJvcHMgPSB7fSkge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLnByb3BzID0gcHJvcHNcblxuICAgIGlmIChwcm9wcy5wYXJlbnQgfHwgcHJvcHMucmVmKSB7XG4gICAgICBsZXQgcmVmID0gbnVsbFxuICAgICAgY29uc3QgcGFyZW50ID0gcHJvcHMucGFyZW50IHx8IChyZWYgPSBwcm9wcy5yZWYgJiYgcHJvcHMucmVmLmN1cnJlbnQpXG5cbiAgICAgIGlmIChyZWYpIHJlZi5pbm5lckhUTUwgPSAnJ1xuICAgICAgaWYgKHBhcmVudCkgcGFyZW50LmFwcGVuZENoaWxkKHRoaXMpXG4gICAgfVxuICB9XG5cbiAgdXBkYXRlKHByb3BzID0ge30pIHtcbiAgICBmb3IgKGxldCBrIGluIHByb3BzKSB7XG4gICAgICB0aGlzLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhrLCBudWxsLCBwcm9wc1trXSlcbiAgICB9XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soYXR0ciwgXywgbmV3VmFsdWUpIHtcbiAgICBpZiAoIXRoaXMuY29tcG9uZW50KSByZXR1cm5cblxuICAgIGNvbnN0IHZhbHVlID0gZ2V0UHJvcChcbiAgICAgIGF0dHIsXG4gICAgICB7IFthdHRyXTogbmV3VmFsdWUgfSxcbiAgICAgIHRoaXMuY29uc3RydWN0b3IuUHJvcHMsXG4gICAgICB0aGlzLFxuICAgIClcblxuICAgIGlmICh0aGlzLmNvbXBvbmVudC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKSB7XG4gICAgICB0aGlzLmNvbXBvbmVudC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKHsgW2F0dHJdOiB2YWx1ZSB9KVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNvbXBvbmVudC5wcm9wc1thdHRyXSA9IHZhbHVlXG4gICAgICB0aGlzLmNvbXBvbmVudC5mb3JjZVVwZGF0ZSgpXG4gICAgfVxuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5kaXNjb25uZWN0ZWQgPSB0cnVlXG5cbiAgICBpZiAodGhpcy5jb21wb25lbnQgJiYgdGhpcy5jb21wb25lbnQudW5yZWdpc3Rlcikge1xuICAgICAgdGhpcy5jb21wb25lbnQudW5yZWdpc3RlcigpXG4gICAgfVxuICB9XG59XG4iLCAiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCB7IEhUTUxFbGVtZW50IH0gZnJvbSAnLidcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hhZG93RWxlbWVudCBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMsIHsgc3R5bGVzIH0gPSB7fSkge1xuICAgIHN1cGVyKHByb3BzKVxuXG4gICAgdGhpcy5zZXRTaGFkb3coKVxuICAgIHRoaXMuaW5qZWN0U3R5bGVzKHN0eWxlcylcbiAgfVxuXG4gIHNldFNoYWRvdygpIHtcbiAgICB0aGlzLmF0dGFjaFNoYWRvdyh7IG1vZGU6ICdvcGVuJyB9KVxuICB9XG5cbiAgaW5qZWN0U3R5bGVzKHN0eWxlcykge1xuICAgIGlmICghc3R5bGVzKSByZXR1cm5cblxuICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKVxuICAgIHN0eWxlLnRleHRDb250ZW50ID0gc3R5bGVzXG5cbiAgICB0aGlzLnNoYWRvd1Jvb3QuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0aGlzLnNoYWRvd1Jvb3QuZmlyc3RDaGlsZClcbiAgfVxufVxuIiwgImltcG9ydCBQaWNrZXJQcm9wcyBmcm9tICcuLi9QaWNrZXIvUGlja2VyUHJvcHMnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZmFsbGJhY2s6ICcnLFxuICBpZDogJycsXG4gIG5hdGl2ZTogJycsXG4gIHNob3J0Y29kZXM6ICcnLFxuICBzaXplOiB7XG4gICAgdmFsdWU6ICcnLFxuICAgIHRyYW5zZm9ybTogKHZhbHVlKSA9PiB7XG4gICAgICAvLyBJZiB0aGUgdmFsdWUgaXMgYSBudW1iZXIsIHRoZW4gd2UgYXNzdW1lIGl04oCZcyBhIHBpeGVsIHZhbHVlLlxuICAgICAgaWYgKCEvXFxELy50ZXN0KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gYCR7dmFsdWV9cHhgXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB2YWx1ZVxuICAgIH0sXG4gIH0sXG5cbiAgLy8gU2hhcmVkXG4gIHNldDogUGlja2VyUHJvcHMuc2V0LFxuICBza2luOiBQaWNrZXJQcm9wcy5za2luLFxufVxuIiwgImV4cG9ydCB7IGRlZmF1bHQgYXMgTmF2aWdhdGlvbiB9IGZyb20gJy4vTmF2aWdhdGlvbidcbiIsICIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3ByZWFjdC9jb21wYXQnXG5pbXBvcnQgeyBEYXRhLCBJMThuIH0gZnJvbSAnLi4vLi4vY29uZmlnJ1xuaW1wb3J0IEljb25zIGZyb20gJy4uLy4uL2ljb25zJ1xuXG5jb25zdCBUSEVNRV9JQ09OUyA9IHtcbiAgbGlnaHQ6ICdvdXRsaW5lJyxcbiAgZGFyazogJ3NvbGlkJyxcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmF2aWdhdGlvbiBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpXG5cbiAgICB0aGlzLmNhdGVnb3JpZXMgPSBEYXRhLmNhdGVnb3JpZXMuZmlsdGVyKChjYXRlZ29yeSkgPT4ge1xuICAgICAgcmV0dXJuICFjYXRlZ29yeS50YXJnZXRcbiAgICB9KVxuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGNhdGVnb3J5SWQ6IHRoaXMuY2F0ZWdvcmllc1swXS5pZCxcbiAgICB9XG4gIH1cblxuICByZW5kZXJJY29uKGNhdGVnb3J5KSB7XG4gICAgY29uc3QgeyBpY29uIH0gPSBjYXRlZ29yeVxuXG4gICAgaWYgKGljb24pIHtcbiAgICAgIGlmIChpY29uLnN2Zykge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICBjbGFzcz1cImZsZXhcIlxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBpY29uLnN2ZyB9fVxuICAgICAgICAgID48L3NwYW4+XG4gICAgICAgIClcbiAgICAgIH1cblxuICAgICAgaWYgKGljb24uc3JjKSB7XG4gICAgICAgIHJldHVybiA8aW1nIHNyYz17aWNvbi5zcmN9IC8+XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgY2F0ZWdvcnlJY29ucyA9XG4gICAgICBJY29ucy5jYXRlZ29yaWVzW2NhdGVnb3J5LmlkXSB8fCBJY29ucy5jYXRlZ29yaWVzLmN1c3RvbVxuXG4gICAgY29uc3Qgc3R5bGUgPVxuICAgICAgdGhpcy5wcm9wcy5pY29ucyA9PSAnYXV0bydcbiAgICAgICAgPyBUSEVNRV9JQ09OU1t0aGlzLnByb3BzLnRoZW1lXVxuICAgICAgICA6IHRoaXMucHJvcHMuaWNvbnNcblxuICAgIHJldHVybiBjYXRlZ29yeUljb25zW3N0eWxlXSB8fCBjYXRlZ29yeUljb25zXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHNlbGVjdGVkQ2F0ZWdvcnlJbmRleCA9IG51bGxcblxuICAgIHJldHVybiAoXG4gICAgICA8bmF2XG4gICAgICAgIGlkPVwibmF2XCJcbiAgICAgICAgY2xhc3M9XCJwYWRkaW5nXCJcbiAgICAgICAgZGF0YS1wb3NpdGlvbj17dGhpcy5wcm9wcy5wb3NpdGlvbn1cbiAgICAgICAgZGlyPXt0aGlzLnByb3BzLmRpcn1cbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggcmVsYXRpdmVcIj5cbiAgICAgICAgICB7dGhpcy5jYXRlZ29yaWVzLm1hcCgoY2F0ZWdvcnksIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gY2F0ZWdvcnkubmFtZSB8fCBJMThuLmNhdGVnb3JpZXNbY2F0ZWdvcnkuaWRdXG4gICAgICAgICAgICBjb25zdCBzZWxlY3RlZCA9XG4gICAgICAgICAgICAgICF0aGlzLnByb3BzLnVuZm9jdXNlZCAmJiBjYXRlZ29yeS5pZCA9PSB0aGlzLnN0YXRlLmNhdGVnb3J5SWRcblxuICAgICAgICAgICAgaWYgKHNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgIHNlbGVjdGVkQ2F0ZWdvcnlJbmRleCA9IGlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9e3RpdGxlfVxuICAgICAgICAgICAgICAgIGFyaWEtc2VsZWN0ZWQ9e3NlbGVjdGVkIHx8IHVuZGVmaW5lZH1cbiAgICAgICAgICAgICAgICB0aXRsZT17dGl0bGV9XG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJmbGV4IGZsZXgtZ3JvdyBmbGV4LWNlbnRlclwiXG4gICAgICAgICAgICAgICAgb25Nb3VzZURvd249eyhlKSA9PiBlLnByZXZlbnREZWZhdWx0KCl9XG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkNsaWNrKHsgY2F0ZWdvcnksIGkgfSlcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3RoaXMucmVuZGVySWNvbihjYXRlZ29yeSl9XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgKVxuICAgICAgICAgIH0pfVxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJiYXJcIlxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgd2lkdGg6IGAkezEwMCAvIHRoaXMuY2F0ZWdvcmllcy5sZW5ndGh9JWAsXG4gICAgICAgICAgICAgIG9wYWNpdHk6IHNlbGVjdGVkQ2F0ZWdvcnlJbmRleCA9PSBudWxsID8gMCA6IDEsXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTpcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmRpciA9PT0gJ3J0bCdcbiAgICAgICAgICAgICAgICAgID8gYHNjYWxlWCgtMSkgdHJhbnNsYXRlWCgke3NlbGVjdGVkQ2F0ZWdvcnlJbmRleCAqIDEwMH0lKWBcbiAgICAgICAgICAgICAgICAgIDogYHRyYW5zbGF0ZVgoJHtzZWxlY3RlZENhdGVnb3J5SW5kZXggKiAxMDB9JSlgLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9uYXY+XG4gICAgKVxuICB9XG59XG4iLCAiaW1wb3J0e3VzZVN0YXRlIGFzIG4sdXNlUmVkdWNlciBhcyB0LHVzZUVmZmVjdCBhcyBlLHVzZUxheW91dEVmZmVjdCBhcyByLHVzZVJlZiBhcyB1LHVzZUltcGVyYXRpdmVIYW5kbGUgYXMgbyx1c2VNZW1vIGFzIGksdXNlQ2FsbGJhY2sgYXMgbCx1c2VDb250ZXh0IGFzIGMsdXNlRGVidWdWYWx1ZSBhcyBmfWZyb21cInByZWFjdC9ob29rc1wiO2V4cG9ydCpmcm9tXCJwcmVhY3QvaG9va3NcIjtpbXBvcnR7Q29tcG9uZW50IGFzIGEsY3JlYXRlRWxlbWVudCBhcyBzLG9wdGlvbnMgYXMgaCx0b0NoaWxkQXJyYXkgYXMgZCxGcmFnbWVudCBhcyB2LHJlbmRlciBhcyBwLGh5ZHJhdGUgYXMgbSxjbG9uZUVsZW1lbnQgYXMgeSxjcmVhdGVSZWYgYXMgYixjcmVhdGVDb250ZXh0IGFzIF99ZnJvbVwicHJlYWN0XCI7ZXhwb3J0e2NyZWF0ZUVsZW1lbnQsY3JlYXRlQ29udGV4dCxjcmVhdGVSZWYsRnJhZ21lbnQsQ29tcG9uZW50fWZyb21cInByZWFjdFwiO2Z1bmN0aW9uIFMobix0KXtmb3IodmFyIGUgaW4gdCluW2VdPXRbZV07cmV0dXJuIG59ZnVuY3Rpb24gQyhuLHQpe2Zvcih2YXIgZSBpbiBuKWlmKFwiX19zb3VyY2VcIiE9PWUmJiEoZSBpbiB0KSlyZXR1cm4hMDtmb3IodmFyIHIgaW4gdClpZihcIl9fc291cmNlXCIhPT1yJiZuW3JdIT09dFtyXSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBFKG4pe3RoaXMucHJvcHM9bn1mdW5jdGlvbiBnKG4sdCl7ZnVuY3Rpb24gZShuKXt2YXIgZT10aGlzLnByb3BzLnJlZixyPWU9PW4ucmVmO3JldHVybiFyJiZlJiYoZS5jYWxsP2UobnVsbCk6ZS5jdXJyZW50PW51bGwpLHQ/IXQodGhpcy5wcm9wcyxuKXx8IXI6Qyh0aGlzLnByb3BzLG4pfWZ1bmN0aW9uIHIodCl7cmV0dXJuIHRoaXMuc2hvdWxkQ29tcG9uZW50VXBkYXRlPWUscyhuLHQpfXJldHVybiByLmRpc3BsYXlOYW1lPVwiTWVtbyhcIisobi5kaXNwbGF5TmFtZXx8bi5uYW1lKStcIilcIixyLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PSEwLHIuX19mPSEwLHJ9KEUucHJvdG90eXBlPW5ldyBhKS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMCxFLnByb3RvdHlwZS5zaG91bGRDb21wb25lbnRVcGRhdGU9ZnVuY3Rpb24obix0KXtyZXR1cm4gQyh0aGlzLnByb3BzLG4pfHxDKHRoaXMuc3RhdGUsdCl9O3ZhciB3PWguX19iO2guX19iPWZ1bmN0aW9uKG4pe24udHlwZSYmbi50eXBlLl9fZiYmbi5yZWYmJihuLnByb3BzLnJlZj1uLnJlZixuLnJlZj1udWxsKSx3JiZ3KG4pfTt2YXIgUj1cInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yJiZTeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIil8fDM5MTE7ZnVuY3Rpb24geChuKXtmdW5jdGlvbiB0KHQsZSl7dmFyIHI9Uyh7fSx0KTtyZXR1cm4gZGVsZXRlIHIucmVmLG4ociwoZT10LnJlZnx8ZSkmJihcIm9iamVjdFwiIT10eXBlb2YgZXx8XCJjdXJyZW50XCJpbiBlKT9lOm51bGwpfXJldHVybiB0LiQkdHlwZW9mPVIsdC5yZW5kZXI9dCx0LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXQuX19mPSEwLHQuZGlzcGxheU5hbWU9XCJGb3J3YXJkUmVmKFwiKyhuLmRpc3BsYXlOYW1lfHxuLm5hbWUpK1wiKVwiLHR9dmFyIE49ZnVuY3Rpb24obix0KXtyZXR1cm4gbnVsbD09bj9udWxsOmQoZChuKS5tYXAodCkpfSxrPXttYXA6Tixmb3JFYWNoOk4sY291bnQ6ZnVuY3Rpb24obil7cmV0dXJuIG4/ZChuKS5sZW5ndGg6MH0sb25seTpmdW5jdGlvbihuKXt2YXIgdD1kKG4pO2lmKDEhPT10Lmxlbmd0aCl0aHJvd1wiQ2hpbGRyZW4ub25seVwiO3JldHVybiB0WzBdfSx0b0FycmF5OmR9LEE9aC5fX2U7aC5fX2U9ZnVuY3Rpb24obix0LGUpe2lmKG4udGhlbilmb3IodmFyIHIsdT10O3U9dS5fXzspaWYoKHI9dS5fX2MpJiZyLl9fYylyZXR1cm4gbnVsbD09dC5fX2UmJih0Ll9fZT1lLl9fZSx0Ll9faz1lLl9fayksci5fX2Mobix0KTtBKG4sdCxlKX07dmFyIE89aC51bm1vdW50O2Z1bmN0aW9uIEwoKXt0aGlzLl9fdT0wLHRoaXMudD1udWxsLHRoaXMuX19iPW51bGx9ZnVuY3Rpb24gVShuKXt2YXIgdD1uLl9fLl9fYztyZXR1cm4gdCYmdC5fX2UmJnQuX19lKG4pfWZ1bmN0aW9uIEYobil7dmFyIHQsZSxyO2Z1bmN0aW9uIHUodSl7aWYodHx8KHQ9bigpKS50aGVuKGZ1bmN0aW9uKG4pe2U9bi5kZWZhdWx0fHxufSxmdW5jdGlvbihuKXtyPW59KSxyKXRocm93IHI7aWYoIWUpdGhyb3cgdDtyZXR1cm4gcyhlLHUpfXJldHVybiB1LmRpc3BsYXlOYW1lPVwiTGF6eVwiLHUuX19mPSEwLHV9ZnVuY3Rpb24gTSgpe3RoaXMudT1udWxsLHRoaXMubz1udWxsfWgudW5tb3VudD1mdW5jdGlvbihuKXt2YXIgdD1uLl9fYzt0JiZ0Ll9fUiYmdC5fX1IoKSx0JiYhMD09PW4uX19oJiYobi50eXBlPW51bGwpLE8mJk8obil9LChMLnByb3RvdHlwZT1uZXcgYSkuX19jPWZ1bmN0aW9uKG4sdCl7dmFyIGU9dC5fX2Mscj10aGlzO251bGw9PXIudCYmKHIudD1bXSksci50LnB1c2goZSk7dmFyIHU9VShyLl9fdiksbz0hMSxpPWZ1bmN0aW9uKCl7b3x8KG89ITAsZS5fX1I9bnVsbCx1P3UobCk6bCgpKX07ZS5fX1I9aTt2YXIgbD1mdW5jdGlvbigpe2lmKCEtLXIuX191KXtpZihyLnN0YXRlLl9fZSl7dmFyIG49ci5zdGF0ZS5fX2U7ci5fX3YuX19rWzBdPWZ1bmN0aW9uIG4odCxlLHIpe3JldHVybiB0JiYodC5fX3Y9bnVsbCx0Ll9faz10Ll9fayYmdC5fX2subWFwKGZ1bmN0aW9uKHQpe3JldHVybiBuKHQsZSxyKX0pLHQuX19jJiZ0Ll9fYy5fX1A9PT1lJiYodC5fX2UmJnIuaW5zZXJ0QmVmb3JlKHQuX19lLHQuX19kKSx0Ll9fYy5fX2U9ITAsdC5fX2MuX19QPXIpKSx0fShuLG4uX19jLl9fUCxuLl9fYy5fX08pfXZhciB0O2ZvcihyLnNldFN0YXRlKHtfX2U6ci5fX2I9bnVsbH0pO3Q9ci50LnBvcCgpOyl0LmZvcmNlVXBkYXRlKCl9fSxjPSEwPT09dC5fX2g7ci5fX3UrK3x8Y3x8ci5zZXRTdGF0ZSh7X19lOnIuX19iPXIuX192Ll9fa1swXX0pLG4udGhlbihpLGkpfSxMLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe3RoaXMudD1bXX0sTC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKG4sdCl7aWYodGhpcy5fX2Ipe2lmKHRoaXMuX192Ll9fayl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxyPXRoaXMuX192Ll9fa1swXS5fX2M7dGhpcy5fX3YuX19rWzBdPWZ1bmN0aW9uIG4odCxlLHIpe3JldHVybiB0JiYodC5fX2MmJnQuX19jLl9fSCYmKHQuX19jLl9fSC5fXy5mb3JFYWNoKGZ1bmN0aW9uKG4pe1wiZnVuY3Rpb25cIj09dHlwZW9mIG4uX19jJiZuLl9fYygpfSksdC5fX2MuX19IPW51bGwpLG51bGwhPSh0PVMoe30sdCkpLl9fYyYmKHQuX19jLl9fUD09PXImJih0Ll9fYy5fX1A9ZSksdC5fX2M9bnVsbCksdC5fX2s9dC5fX2smJnQuX19rLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbih0LGUscil9KSksdH0odGhpcy5fX2IsZSxyLl9fTz1yLl9fUCl9dGhpcy5fX2I9bnVsbH12YXIgdT10Ll9fZSYmcyh2LG51bGwsbi5mYWxsYmFjayk7cmV0dXJuIHUmJih1Ll9faD1udWxsKSxbcyh2LG51bGwsdC5fX2U/bnVsbDpuLmNoaWxkcmVuKSx1XX07dmFyIFQ9ZnVuY3Rpb24obix0LGUpe2lmKCsrZVsxXT09PWVbMF0mJm4uby5kZWxldGUodCksbi5wcm9wcy5yZXZlYWxPcmRlciYmKFwidFwiIT09bi5wcm9wcy5yZXZlYWxPcmRlclswXXx8IW4uby5zaXplKSlmb3IoZT1uLnU7ZTspe2Zvcig7ZS5sZW5ndGg+MzspZS5wb3AoKSgpO2lmKGVbMV08ZVswXSlicmVhaztuLnU9ZT1lWzJdfX07ZnVuY3Rpb24gRChuKXtyZXR1cm4gdGhpcy5nZXRDaGlsZENvbnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gbi5jb250ZXh0fSxuLmNoaWxkcmVufWZ1bmN0aW9uIEkobil7dmFyIHQ9dGhpcyxlPW4uaTt0LmNvbXBvbmVudFdpbGxVbm1vdW50PWZ1bmN0aW9uKCl7cChudWxsLHQubCksdC5sPW51bGwsdC5pPW51bGx9LHQuaSYmdC5pIT09ZSYmdC5jb21wb25lbnRXaWxsVW5tb3VudCgpLG4uX192Pyh0Lmx8fCh0Lmk9ZSx0Lmw9e25vZGVUeXBlOjEscGFyZW50Tm9kZTplLGNoaWxkTm9kZXM6W10sYXBwZW5kQ2hpbGQ6ZnVuY3Rpb24obil7dGhpcy5jaGlsZE5vZGVzLnB1c2gobiksdC5pLmFwcGVuZENoaWxkKG4pfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24obixlKXt0aGlzLmNoaWxkTm9kZXMucHVzaChuKSx0LmkuYXBwZW5kQ2hpbGQobil9LHJlbW92ZUNoaWxkOmZ1bmN0aW9uKG4pe3RoaXMuY2hpbGROb2Rlcy5zcGxpY2UodGhpcy5jaGlsZE5vZGVzLmluZGV4T2Yobik+Pj4xLDEpLHQuaS5yZW1vdmVDaGlsZChuKX19KSxwKHMoRCx7Y29udGV4dDp0LmNvbnRleHR9LG4uX192KSx0LmwpKTp0LmwmJnQuY29tcG9uZW50V2lsbFVubW91bnQoKX1mdW5jdGlvbiBXKG4sdCl7cmV0dXJuIHMoSSx7X192Om4saTp0fSl9KE0ucHJvdG90eXBlPW5ldyBhKS5fX2U9ZnVuY3Rpb24obil7dmFyIHQ9dGhpcyxlPVUodC5fX3YpLHI9dC5vLmdldChuKTtyZXR1cm4gclswXSsrLGZ1bmN0aW9uKHUpe3ZhciBvPWZ1bmN0aW9uKCl7dC5wcm9wcy5yZXZlYWxPcmRlcj8oci5wdXNoKHUpLFQodCxuLHIpKTp1KCl9O2U/ZShvKTpvKCl9fSxNLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24obil7dGhpcy51PW51bGwsdGhpcy5vPW5ldyBNYXA7dmFyIHQ9ZChuLmNoaWxkcmVuKTtuLnJldmVhbE9yZGVyJiZcImJcIj09PW4ucmV2ZWFsT3JkZXJbMF0mJnQucmV2ZXJzZSgpO2Zvcih2YXIgZT10Lmxlbmd0aDtlLS07KXRoaXMuby5zZXQodFtlXSx0aGlzLnU9WzEsMCx0aGlzLnVdKTtyZXR1cm4gbi5jaGlsZHJlbn0sTS5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlPU0ucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50PWZ1bmN0aW9uKCl7dmFyIG49dGhpczt0aGlzLm8uZm9yRWFjaChmdW5jdGlvbih0LGUpe1QobixlLHQpfSl9O3ZhciBqPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3ImJlN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpfHw2MDEwMyxQPS9eKD86YWNjZW50fGFsaWdubWVudHxhcmFiaWN8YmFzZWxpbmV8Y2FwfGNsaXAoPyFQYXRoVSl8Y29sb3J8ZG9taW5hbnR8ZmlsbHxmbG9vZHxmb250fGdseXBoKD8hUil8aG9yaXp8bWFya2VyKD8hSHxXfFUpfG92ZXJsaW5lfHBhaW50fHN0b3B8c3RyaWtldGhyb3VnaHxzdHJva2V8dGV4dCg/IUwpfHVuZGVybGluZXx1bmljb2RlfHVuaXRzfHZ8dmVjdG9yfHZlcnR8d29yZHx3cml0aW5nfHgoPyFDKSlbQS1aXS8sVj1cInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQsej1mdW5jdGlvbihuKXtyZXR1cm4oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbCgpPy9maWx8Y2hlfHJhZC9pOi9maWx8Y2hlfHJhL2kpLnRlc3Qobil9O2Z1bmN0aW9uIEIobix0LGUpe3JldHVybiBudWxsPT10Ll9fayYmKHQudGV4dENvbnRlbnQ9XCJcIikscChuLHQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJmUoKSxuP24uX19jOm51bGx9ZnVuY3Rpb24gJChuLHQsZSl7cmV0dXJuIG0obix0KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiZlKCksbj9uLl9fYzpudWxsfWEucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e30sW1wiY29tcG9uZW50V2lsbE1vdW50XCIsXCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzXCIsXCJjb21wb25lbnRXaWxsVXBkYXRlXCJdLmZvckVhY2goZnVuY3Rpb24obil7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEucHJvdG90eXBlLG4se2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tcIlVOU0FGRV9cIituXX0sc2V0OmZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLG4se2NvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTp0fSl9fSl9KTt2YXIgSD1oLmV2ZW50O2Z1bmN0aW9uIFooKXt9ZnVuY3Rpb24gWSgpe3JldHVybiB0aGlzLmNhbmNlbEJ1YmJsZX1mdW5jdGlvbiBxKCl7cmV0dXJuIHRoaXMuZGVmYXVsdFByZXZlbnRlZH1oLmV2ZW50PWZ1bmN0aW9uKG4pe3JldHVybiBIJiYobj1IKG4pKSxuLnBlcnNpc3Q9WixuLmlzUHJvcGFnYXRpb25TdG9wcGVkPVksbi5pc0RlZmF1bHRQcmV2ZW50ZWQ9cSxuLm5hdGl2ZUV2ZW50PW59O3ZhciBHLEo9e2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbGFzc319LEs9aC52bm9kZTtoLnZub2RlPWZ1bmN0aW9uKG4pe3ZhciB0PW4udHlwZSxlPW4ucHJvcHMscj1lO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXt2YXIgdT0tMT09PXQuaW5kZXhPZihcIi1cIik7Zm9yKHZhciBvIGluIHI9e30sZSl7dmFyIGk9ZVtvXTtWJiZcImNoaWxkcmVuXCI9PT1vJiZcIm5vc2NyaXB0XCI9PT10fHxcInZhbHVlXCI9PT1vJiZcImRlZmF1bHRWYWx1ZVwiaW4gZSYmbnVsbD09aXx8KFwiZGVmYXVsdFZhbHVlXCI9PT1vJiZcInZhbHVlXCJpbiBlJiZudWxsPT1lLnZhbHVlP289XCJ2YWx1ZVwiOlwiZG93bmxvYWRcIj09PW8mJiEwPT09aT9pPVwiXCI6L29uZG91YmxlY2xpY2svaS50ZXN0KG8pP289XCJvbmRibGNsaWNrXCI6L15vbmNoYW5nZSh0ZXh0YXJlYXxpbnB1dCkvaS50ZXN0KG8rdCkmJiF6KGUudHlwZSk/bz1cIm9uaW5wdXRcIjovXm9uZm9jdXMkL2kudGVzdChvKT9vPVwib25mb2N1c2luXCI6L15vbmJsdXIkL2kudGVzdChvKT9vPVwib25mb2N1c291dFwiOi9eb24oQW5pfFRyYXxUb3V8QmVmb3JlSW5wKS8udGVzdChvKT9vPW8udG9Mb3dlckNhc2UoKTp1JiZQLnRlc3Qobyk/bz1vLnJlcGxhY2UoL1tBLVowLTldLyxcIi0kJlwiKS50b0xvd2VyQ2FzZSgpOm51bGw9PT1pJiYoaT12b2lkIDApLHJbb109aSl9XCJzZWxlY3RcIj09dCYmci5tdWx0aXBsZSYmQXJyYXkuaXNBcnJheShyLnZhbHVlKSYmKHIudmFsdWU9ZChlLmNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe24ucHJvcHMuc2VsZWN0ZWQ9LTEhPXIudmFsdWUuaW5kZXhPZihuLnByb3BzLnZhbHVlKX0pKSxcInNlbGVjdFwiPT10JiZudWxsIT1yLmRlZmF1bHRWYWx1ZSYmKHIudmFsdWU9ZChlLmNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe24ucHJvcHMuc2VsZWN0ZWQ9ci5tdWx0aXBsZT8tMSE9ci5kZWZhdWx0VmFsdWUuaW5kZXhPZihuLnByb3BzLnZhbHVlKTpyLmRlZmF1bHRWYWx1ZT09bi5wcm9wcy52YWx1ZX0pKSxuLnByb3BzPXIsZS5jbGFzcyE9ZS5jbGFzc05hbWUmJihKLmVudW1lcmFibGU9XCJjbGFzc05hbWVcImluIGUsbnVsbCE9ZS5jbGFzc05hbWUmJihyLmNsYXNzPWUuY2xhc3NOYW1lKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcImNsYXNzTmFtZVwiLEopKX1uLiQkdHlwZW9mPWosSyYmSyhuKX07dmFyIFE9aC5fX3I7aC5fX3I9ZnVuY3Rpb24obil7USYmUShuKSxHPW4uX19jfTt2YXIgWD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjp7Y3VycmVudDp7cmVhZENvbnRleHQ6ZnVuY3Rpb24obil7cmV0dXJuIEcuX19uW24uX19jXS5wcm9wcy52YWx1ZX19fX0sbm49XCIxNy4wLjJcIjtmdW5jdGlvbiB0bihuKXtyZXR1cm4gcy5iaW5kKG51bGwsbil9ZnVuY3Rpb24gZW4obil7cmV0dXJuISFuJiZuLiQkdHlwZW9mPT09an1mdW5jdGlvbiBybihuKXtyZXR1cm4gZW4obik/eS5hcHBseShudWxsLGFyZ3VtZW50cyk6bn1mdW5jdGlvbiB1bihuKXtyZXR1cm4hIW4uX19rJiYocChudWxsLG4pLCEwKX1mdW5jdGlvbiBvbihuKXtyZXR1cm4gbiYmKG4uYmFzZXx8MT09PW4ubm9kZVR5cGUmJm4pfHxudWxsfXZhciBsbj1mdW5jdGlvbihuLHQpe3JldHVybiBuKHQpfSxjbj1mdW5jdGlvbihuLHQpe3JldHVybiBuKHQpfSxmbj12O2V4cG9ydCBkZWZhdWx0e3VzZVN0YXRlOm4sdXNlUmVkdWNlcjp0LHVzZUVmZmVjdDplLHVzZUxheW91dEVmZmVjdDpyLHVzZVJlZjp1LHVzZUltcGVyYXRpdmVIYW5kbGU6byx1c2VNZW1vOmksdXNlQ2FsbGJhY2s6bCx1c2VDb250ZXh0OmMsdXNlRGVidWdWYWx1ZTpmLHZlcnNpb246XCIxNy4wLjJcIixDaGlsZHJlbjprLHJlbmRlcjpCLGh5ZHJhdGU6JCx1bm1vdW50Q29tcG9uZW50QXROb2RlOnVuLGNyZWF0ZVBvcnRhbDpXLGNyZWF0ZUVsZW1lbnQ6cyxjcmVhdGVDb250ZXh0Ol8sY3JlYXRlRmFjdG9yeTp0bixjbG9uZUVsZW1lbnQ6cm4sY3JlYXRlUmVmOmIsRnJhZ21lbnQ6dixpc1ZhbGlkRWxlbWVudDplbixmaW5kRE9NTm9kZTpvbixDb21wb25lbnQ6YSxQdXJlQ29tcG9uZW50OkUsbWVtbzpnLGZvcndhcmRSZWY6eCxmbHVzaFN5bmM6Y24sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6bG4sU3RyaWN0TW9kZTp2LFN1c3BlbnNlOkwsU3VzcGVuc2VMaXN0Ok0sbGF6eTpGLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOlh9O2V4cG9ydHtubiBhcyB2ZXJzaW9uLGsgYXMgQ2hpbGRyZW4sQiBhcyByZW5kZXIsJCBhcyBoeWRyYXRlLHVuIGFzIHVubW91bnRDb21wb25lbnRBdE5vZGUsVyBhcyBjcmVhdGVQb3J0YWwsdG4gYXMgY3JlYXRlRmFjdG9yeSxybiBhcyBjbG9uZUVsZW1lbnQsZW4gYXMgaXNWYWxpZEVsZW1lbnQsb24gYXMgZmluZERPTU5vZGUsRSBhcyBQdXJlQ29tcG9uZW50LGcgYXMgbWVtbyx4IGFzIGZvcndhcmRSZWYsY24gYXMgZmx1c2hTeW5jLGxuIGFzIHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzLGZuIGFzIFN0cmljdE1vZGUsTCBhcyBTdXNwZW5zZSxNIGFzIFN1c3BlbnNlTGlzdCxGIGFzIGxhenksWCBhcyBfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wYXQubW9kdWxlLmpzLm1hcFxuIiwgIi8qKlxyXG4gKiBBc3NpZ24gcHJvcGVydGllcyBmcm9tIGBwcm9wc2AgdG8gYG9iamBcclxuICogQHRlbXBsYXRlIE8sIFAgVGhlIG9iaiBhbmQgcHJvcHMgdHlwZXNcclxuICogQHBhcmFtIHtPfSBvYmogVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgdG9cclxuICogQHBhcmFtIHtQfSBwcm9wcyBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tXHJcbiAqIEByZXR1cm5zIHtPICYgUH1cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ24ob2JqLCBwcm9wcykge1xyXG5cdGZvciAobGV0IGkgaW4gcHJvcHMpIG9ialtpXSA9IHByb3BzW2ldO1xyXG5cdHJldHVybiAvKiogQHR5cGUge08gJiBQfSAqLyAob2JqKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrIGlmIHR3byBvYmplY3RzIGhhdmUgYSBkaWZmZXJlbnQgc2hhcGVcclxuICogQHBhcmFtIHtvYmplY3R9IGFcclxuICogQHBhcmFtIHtvYmplY3R9IGJcclxuICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc2hhbGxvd0RpZmZlcnMoYSwgYikge1xyXG5cdGZvciAobGV0IGkgaW4gYSkgaWYgKGkgIT09ICdfX3NvdXJjZScgJiYgIShpIGluIGIpKSByZXR1cm4gdHJ1ZTtcclxuXHRmb3IgKGxldCBpIGluIGIpIGlmIChpICE9PSAnX19zb3VyY2UnICYmIGFbaV0gIT09IGJbaV0pIHJldHVybiB0cnVlO1xyXG5cdHJldHVybiBmYWxzZTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZU5vZGUobm9kZSkge1xyXG5cdGxldCBwYXJlbnROb2RlID0gbm9kZS5wYXJlbnROb2RlO1xyXG5cdGlmIChwYXJlbnROb2RlKSBwYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xyXG59XHJcbiIsICJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdwcmVhY3QnO1xyXG5pbXBvcnQgeyBzaGFsbG93RGlmZmVycyB9IGZyb20gJy4vdXRpbCc7XHJcblxyXG4vKipcclxuICogQ29tcG9uZW50IGNsYXNzIHdpdGggYSBwcmVkZWZpbmVkIGBzaG91bGRDb21wb25lbnRVcGRhdGVgIGltcGxlbWVudGF0aW9uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gUHVyZUNvbXBvbmVudChwKSB7XHJcblx0dGhpcy5wcm9wcyA9IHA7XHJcbn1cclxuUHVyZUNvbXBvbmVudC5wcm90b3R5cGUgPSBuZXcgQ29tcG9uZW50KCk7XHJcbi8vIFNvbWUgdGhpcmQtcGFydHkgbGlicmFyaWVzIGNoZWNrIGlmIHRoaXMgcHJvcGVydHkgaXMgcHJlc2VudFxyXG5QdXJlQ29tcG9uZW50LnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudCA9IHRydWU7XHJcblB1cmVDb21wb25lbnQucHJvdG90eXBlLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZ1bmN0aW9uKHByb3BzLCBzdGF0ZSkge1xyXG5cdHJldHVybiBzaGFsbG93RGlmZmVycyh0aGlzLnByb3BzLCBwcm9wcykgfHwgc2hhbGxvd0RpZmZlcnModGhpcy5zdGF0ZSwgc3RhdGUpO1xyXG59O1xyXG4iLCAiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3ByZWFjdCc7XHJcbmltcG9ydCB7IHNoYWxsb3dEaWZmZXJzIH0gZnJvbSAnLi91dGlsJztcclxuXHJcbi8qKlxyXG4gKiBNZW1vaXplIGEgY29tcG9uZW50LCBzbyB0aGF0IGl0IG9ubHkgdXBkYXRlcyB3aGVuIHRoZSBwcm9wcyBhY3R1YWxseSBoYXZlXHJcbiAqIGNoYW5nZWQuIFRoaXMgd2FzIHByZXZpb3VzbHkga25vd24gYXMgYFJlYWN0LnB1cmVgLlxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLkZ1bmN0aW9uQ29tcG9uZW50fSBjIGZ1bmN0aW9uYWwgY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7KHByZXY6IG9iamVjdCwgbmV4dDogb2JqZWN0KSA9PiBib29sZWFufSBbY29tcGFyZXJdIEN1c3RvbSBlcXVhbGl0eSBmdW5jdGlvblxyXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL2ludGVybmFsJykuRnVuY3Rpb25Db21wb25lbnR9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbWVtbyhjLCBjb21wYXJlcikge1xyXG5cdGZ1bmN0aW9uIHNob3VsZFVwZGF0ZShuZXh0UHJvcHMpIHtcclxuXHRcdGxldCByZWYgPSB0aGlzLnByb3BzLnJlZjtcclxuXHRcdGxldCB1cGRhdGVSZWYgPSByZWYgPT0gbmV4dFByb3BzLnJlZjtcclxuXHRcdGlmICghdXBkYXRlUmVmICYmIHJlZikge1xyXG5cdFx0XHRyZWYuY2FsbCA/IHJlZihudWxsKSA6IChyZWYuY3VycmVudCA9IG51bGwpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICghY29tcGFyZXIpIHtcclxuXHRcdFx0cmV0dXJuIHNoYWxsb3dEaWZmZXJzKHRoaXMucHJvcHMsIG5leHRQcm9wcyk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuICFjb21wYXJlcih0aGlzLnByb3BzLCBuZXh0UHJvcHMpIHx8ICF1cGRhdGVSZWY7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBNZW1vZWQocHJvcHMpIHtcclxuXHRcdHRoaXMuc2hvdWxkQ29tcG9uZW50VXBkYXRlID0gc2hvdWxkVXBkYXRlO1xyXG5cdFx0cmV0dXJuIGNyZWF0ZUVsZW1lbnQoYywgcHJvcHMpO1xyXG5cdH1cclxuXHRNZW1vZWQuZGlzcGxheU5hbWUgPSAnTWVtbygnICsgKGMuZGlzcGxheU5hbWUgfHwgYy5uYW1lKSArICcpJztcclxuXHRNZW1vZWQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQgPSB0cnVlO1xyXG5cdE1lbW9lZC5fZm9yd2FyZGVkID0gdHJ1ZTtcclxuXHRyZXR1cm4gTWVtb2VkO1xyXG59XHJcbiIsICJpbXBvcnQgeyBvcHRpb25zIH0gZnJvbSAncHJlYWN0JztcclxuaW1wb3J0IHsgYXNzaWduIH0gZnJvbSAnLi91dGlsJztcclxuXHJcbmxldCBvbGREaWZmSG9vayA9IG9wdGlvbnMuX2RpZmY7XHJcbm9wdGlvbnMuX2RpZmYgPSB2bm9kZSA9PiB7XHJcblx0aWYgKHZub2RlLnR5cGUgJiYgdm5vZGUudHlwZS5fZm9yd2FyZGVkICYmIHZub2RlLnJlZikge1xyXG5cdFx0dm5vZGUucHJvcHMucmVmID0gdm5vZGUucmVmO1xyXG5cdFx0dm5vZGUucmVmID0gbnVsbDtcclxuXHR9XHJcblx0aWYgKG9sZERpZmZIb29rKSBvbGREaWZmSG9vayh2bm9kZSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgUkVBQ1RfRk9SV0FSRF9TWU1CT0wgPVxyXG5cdCh0eXBlb2YgU3ltYm9sICE9ICd1bmRlZmluZWQnICYmXHJcblx0XHRTeW1ib2wuZm9yICYmXHJcblx0XHRTeW1ib2wuZm9yKCdyZWFjdC5mb3J3YXJkX3JlZicpKSB8fFxyXG5cdDB4ZjQ3O1xyXG5cclxuLyoqXHJcbiAqIFBhc3MgcmVmIGRvd24gdG8gYSBjaGlsZC4gVGhpcyBpcyBtYWlubHkgdXNlZCBpbiBsaWJyYXJpZXMgd2l0aCBIT0NzIHRoYXRcclxuICogd3JhcCBjb21wb25lbnRzLiBVc2luZyBgZm9yd2FyZFJlZmAgdGhlcmUgaXMgYW4gZWFzeSB3YXkgdG8gZ2V0IGEgcmVmZXJlbmNlXHJcbiAqIG9mIHRoZSB3cmFwcGVkIGNvbXBvbmVudCBpbnN0ZWFkIG9mIG9uZSBvZiB0aGUgd3JhcHBlciBpdHNlbGYuXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2luZGV4JykuRm9yd2FyZEZufSBmblxyXG4gKiBAcmV0dXJucyB7aW1wb3J0KCcuL2ludGVybmFsJykuRnVuY3Rpb25Db21wb25lbnR9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZFJlZihmbikge1xyXG5cdC8vIFdlIGFsd2F5cyBoYXZlIHJlZiBpbiBwcm9wcy5yZWYsIGV4Y2VwdCBmb3JcclxuXHQvLyBtb2J4LXJlYWN0LiBJdCB3aWxsIGNhbGwgdGhpcyBmdW5jdGlvbiBkaXJlY3RseVxyXG5cdC8vIGFuZCBhbHdheXMgcGFzcyByZWYgYXMgdGhlIHNlY29uZCBhcmd1bWVudC5cclxuXHRmdW5jdGlvbiBGb3J3YXJkZWQocHJvcHMsIHJlZikge1xyXG5cdFx0bGV0IGNsb25lID0gYXNzaWduKHt9LCBwcm9wcyk7XHJcblx0XHRkZWxldGUgY2xvbmUucmVmO1xyXG5cdFx0cmVmID0gcHJvcHMucmVmIHx8IHJlZjtcclxuXHRcdHJldHVybiBmbihcclxuXHRcdFx0Y2xvbmUsXHJcblx0XHRcdCFyZWYgfHwgKHR5cGVvZiByZWYgPT09ICdvYmplY3QnICYmICEoJ2N1cnJlbnQnIGluIHJlZikpID8gbnVsbCA6IHJlZlxyXG5cdFx0KTtcclxuXHR9XHJcblxyXG5cdC8vIG1vYngtcmVhY3QgY2hlY2tzIGZvciB0aGlzIGJlaW5nIHByZXNlbnRcclxuXHRGb3J3YXJkZWQuJCR0eXBlb2YgPSBSRUFDVF9GT1JXQVJEX1NZTUJPTDtcclxuXHQvLyBtb2J4LXJlYWN0IGhlYXZpbHkgcmVsaWVzIG9uIGltcGxlbWVudGF0aW9uIGRldGFpbHMuXHJcblx0Ly8gSXQgZXhwZWN0cyBhbiBvYmplY3QgaGVyZSB3aXRoIGEgYHJlbmRlcmAgcHJvcGVydHksXHJcblx0Ly8gYW5kIHByb3RvdHlwZS5yZW5kZXIgd2lsbCBmYWlsLiBXaXRob3V0IHRoaXNcclxuXHQvLyBtb2J4LXJlYWN0IHRocm93cy5cclxuXHRGb3J3YXJkZWQucmVuZGVyID0gRm9yd2FyZGVkO1xyXG5cclxuXHRGb3J3YXJkZWQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQgPSBGb3J3YXJkZWQuX2ZvcndhcmRlZCA9IHRydWU7XHJcblx0Rm9yd2FyZGVkLmRpc3BsYXlOYW1lID0gJ0ZvcndhcmRSZWYoJyArIChmbi5kaXNwbGF5TmFtZSB8fCBmbi5uYW1lKSArICcpJztcclxuXHRyZXR1cm4gRm9yd2FyZGVkO1xyXG59XHJcbiIsICJpbXBvcnQgeyB0b0NoaWxkQXJyYXkgfSBmcm9tICdwcmVhY3QnO1xyXG5cclxuY29uc3QgbWFwRm4gPSAoY2hpbGRyZW4sIGZuKSA9PiB7XHJcblx0aWYgKGNoaWxkcmVuID09IG51bGwpIHJldHVybiBudWxsO1xyXG5cdHJldHVybiB0b0NoaWxkQXJyYXkodG9DaGlsZEFycmF5KGNoaWxkcmVuKS5tYXAoZm4pKTtcclxufTtcclxuXHJcbi8vIFRoaXMgQVBJIGlzIGNvbXBsZXRlbHkgdW5uZWNlc3NhcnkgZm9yIFByZWFjdCwgc28gaXQncyBiYXNpY2FsbHkgcGFzc3Rocm91Z2guXHJcbmV4cG9ydCBjb25zdCBDaGlsZHJlbiA9IHtcclxuXHRtYXA6IG1hcEZuLFxyXG5cdGZvckVhY2g6IG1hcEZuLFxyXG5cdGNvdW50KGNoaWxkcmVuKSB7XHJcblx0XHRyZXR1cm4gY2hpbGRyZW4gPyB0b0NoaWxkQXJyYXkoY2hpbGRyZW4pLmxlbmd0aCA6IDA7XHJcblx0fSxcclxuXHRvbmx5KGNoaWxkcmVuKSB7XHJcblx0XHRjb25zdCBub3JtYWxpemVkID0gdG9DaGlsZEFycmF5KGNoaWxkcmVuKTtcclxuXHRcdGlmIChub3JtYWxpemVkLmxlbmd0aCAhPT0gMSkgdGhyb3cgJ0NoaWxkcmVuLm9ubHknO1xyXG5cdFx0cmV0dXJuIG5vcm1hbGl6ZWRbMF07XHJcblx0fSxcclxuXHR0b0FycmF5OiB0b0NoaWxkQXJyYXlcclxufTtcclxuIiwgImltcG9ydCB7IENvbXBvbmVudCwgY3JlYXRlRWxlbWVudCwgb3B0aW9ucywgRnJhZ21lbnQgfSBmcm9tICdwcmVhY3QnO1xyXG5pbXBvcnQgeyBhc3NpZ24gfSBmcm9tICcuL3V0aWwnO1xyXG5cclxuY29uc3Qgb2xkQ2F0Y2hFcnJvciA9IG9wdGlvbnMuX2NhdGNoRXJyb3I7XHJcbm9wdGlvbnMuX2NhdGNoRXJyb3IgPSBmdW5jdGlvbihlcnJvciwgbmV3Vk5vZGUsIG9sZFZOb2RlKSB7XHJcblx0aWYgKGVycm9yLnRoZW4pIHtcclxuXHRcdC8qKiBAdHlwZSB7aW1wb3J0KCcuL2ludGVybmFsJykuQ29tcG9uZW50fSAqL1xyXG5cdFx0bGV0IGNvbXBvbmVudDtcclxuXHRcdGxldCB2bm9kZSA9IG5ld1ZOb2RlO1xyXG5cclxuXHRcdGZvciAoOyAodm5vZGUgPSB2bm9kZS5fcGFyZW50KTsgKSB7XHJcblx0XHRcdGlmICgoY29tcG9uZW50ID0gdm5vZGUuX2NvbXBvbmVudCkgJiYgY29tcG9uZW50Ll9jaGlsZERpZFN1c3BlbmQpIHtcclxuXHRcdFx0XHRpZiAobmV3Vk5vZGUuX2RvbSA9PSBudWxsKSB7XHJcblx0XHRcdFx0XHRuZXdWTm9kZS5fZG9tID0gb2xkVk5vZGUuX2RvbTtcclxuXHRcdFx0XHRcdG5ld1ZOb2RlLl9jaGlsZHJlbiA9IG9sZFZOb2RlLl9jaGlsZHJlbjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Ly8gRG9uJ3QgY2FsbCBvbGRDYXRjaEVycm9yIGlmIHdlIGZvdW5kIGEgU3VzcGVuc2VcclxuXHRcdFx0XHRyZXR1cm4gY29tcG9uZW50Ll9jaGlsZERpZFN1c3BlbmQoZXJyb3IsIG5ld1ZOb2RlKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHRvbGRDYXRjaEVycm9yKGVycm9yLCBuZXdWTm9kZSwgb2xkVk5vZGUpO1xyXG59O1xyXG5cclxuY29uc3Qgb2xkVW5tb3VudCA9IG9wdGlvbnMudW5tb3VudDtcclxub3B0aW9ucy51bm1vdW50ID0gZnVuY3Rpb24odm5vZGUpIHtcclxuXHQvKiogQHR5cGUge2ltcG9ydCgnLi9pbnRlcm5hbCcpLkNvbXBvbmVudH0gKi9cclxuXHRjb25zdCBjb21wb25lbnQgPSB2bm9kZS5fY29tcG9uZW50O1xyXG5cdGlmIChjb21wb25lbnQgJiYgY29tcG9uZW50Ll9vblJlc29sdmUpIHtcclxuXHRcdGNvbXBvbmVudC5fb25SZXNvbHZlKCk7XHJcblx0fVxyXG5cclxuXHQvLyBpZiB0aGUgY29tcG9uZW50IGlzIHN0aWxsIGh5ZHJhdGluZ1xyXG5cdC8vIG1vc3QgbGlrZWx5IGl0IGlzIGJlY2F1c2UgdGhlIGNvbXBvbmVudCBpcyBzdXNwZW5kZWRcclxuXHQvLyB3ZSBzZXQgdGhlIHZub2RlLnR5cGUgYXMgYG51bGxgIHNvIHRoYXQgaXQgaXMgbm90IGEgdHlwZW9mIGZ1bmN0aW9uXHJcblx0Ly8gc28gdGhlIHVubW91bnQgd2lsbCByZW1vdmUgdGhlIHZub2RlLl9kb21cclxuXHRpZiAoY29tcG9uZW50ICYmIHZub2RlLl9oeWRyYXRpbmcgPT09IHRydWUpIHtcclxuXHRcdHZub2RlLnR5cGUgPSBudWxsO1xyXG5cdH1cclxuXHJcblx0aWYgKG9sZFVubW91bnQpIG9sZFVubW91bnQodm5vZGUpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gZGV0YWNoZWRDbG9uZSh2bm9kZSwgZGV0YWNoZWRQYXJlbnQsIHBhcmVudERvbSkge1xyXG5cdGlmICh2bm9kZSkge1xyXG5cdFx0aWYgKHZub2RlLl9jb21wb25lbnQgJiYgdm5vZGUuX2NvbXBvbmVudC5fX2hvb2tzKSB7XHJcblx0XHRcdHZub2RlLl9jb21wb25lbnQuX19ob29rcy5fbGlzdC5mb3JFYWNoKGVmZmVjdCA9PiB7XHJcblx0XHRcdFx0aWYgKHR5cGVvZiBlZmZlY3QuX2NsZWFudXAgPT0gJ2Z1bmN0aW9uJykgZWZmZWN0Ll9jbGVhbnVwKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0dm5vZGUuX2NvbXBvbmVudC5fX2hvb2tzID0gbnVsbDtcclxuXHRcdH1cclxuXHJcblx0XHR2bm9kZSA9IGFzc2lnbih7fSwgdm5vZGUpO1xyXG5cdFx0aWYgKHZub2RlLl9jb21wb25lbnQgIT0gbnVsbCkge1xyXG5cdFx0XHRpZiAodm5vZGUuX2NvbXBvbmVudC5fcGFyZW50RG9tID09PSBwYXJlbnREb20pIHtcclxuXHRcdFx0XHR2bm9kZS5fY29tcG9uZW50Ll9wYXJlbnREb20gPSBkZXRhY2hlZFBhcmVudDtcclxuXHRcdFx0fVxyXG5cdFx0XHR2bm9kZS5fY29tcG9uZW50ID0gbnVsbDtcclxuXHRcdH1cclxuXHJcblx0XHR2bm9kZS5fY2hpbGRyZW4gPVxyXG5cdFx0XHR2bm9kZS5fY2hpbGRyZW4gJiZcclxuXHRcdFx0dm5vZGUuX2NoaWxkcmVuLm1hcChjaGlsZCA9PlxyXG5cdFx0XHRcdGRldGFjaGVkQ2xvbmUoY2hpbGQsIGRldGFjaGVkUGFyZW50LCBwYXJlbnREb20pXHJcblx0XHRcdCk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdm5vZGU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbW92ZU9yaWdpbmFsKHZub2RlLCBkZXRhY2hlZFBhcmVudCwgb3JpZ2luYWxQYXJlbnQpIHtcclxuXHRpZiAodm5vZGUpIHtcclxuXHRcdHZub2RlLl9vcmlnaW5hbCA9IG51bGw7XHJcblx0XHR2bm9kZS5fY2hpbGRyZW4gPVxyXG5cdFx0XHR2bm9kZS5fY2hpbGRyZW4gJiZcclxuXHRcdFx0dm5vZGUuX2NoaWxkcmVuLm1hcChjaGlsZCA9PlxyXG5cdFx0XHRcdHJlbW92ZU9yaWdpbmFsKGNoaWxkLCBkZXRhY2hlZFBhcmVudCwgb3JpZ2luYWxQYXJlbnQpXHJcblx0XHRcdCk7XHJcblxyXG5cdFx0aWYgKHZub2RlLl9jb21wb25lbnQpIHtcclxuXHRcdFx0aWYgKHZub2RlLl9jb21wb25lbnQuX3BhcmVudERvbSA9PT0gZGV0YWNoZWRQYXJlbnQpIHtcclxuXHRcdFx0XHRpZiAodm5vZGUuX2RvbSkge1xyXG5cdFx0XHRcdFx0b3JpZ2luYWxQYXJlbnQuaW5zZXJ0QmVmb3JlKHZub2RlLl9kb20sIHZub2RlLl9uZXh0RG9tKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0dm5vZGUuX2NvbXBvbmVudC5fZm9yY2UgPSB0cnVlO1xyXG5cdFx0XHRcdHZub2RlLl9jb21wb25lbnQuX3BhcmVudERvbSA9IG9yaWdpbmFsUGFyZW50O1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdm5vZGU7XHJcbn1cclxuXHJcbi8vIGhhdmluZyBjdXN0b20gaW5oZXJpdGFuY2UgaW5zdGVhZCBvZiBhIGNsYXNzIGhlcmUgc2F2ZXMgYSBsb3Qgb2YgYnl0ZXNcclxuZXhwb3J0IGZ1bmN0aW9uIFN1c3BlbnNlKCkge1xyXG5cdC8vIHdlIGRvIG5vdCBjYWxsIHN1cGVyIGhlcmUgdG8gZ29sZiBzb21lIGJ5dGVzLi4uXHJcblx0dGhpcy5fcGVuZGluZ1N1c3BlbnNpb25Db3VudCA9IDA7XHJcblx0dGhpcy5fc3VzcGVuZGVycyA9IG51bGw7XHJcblx0dGhpcy5fZGV0YWNoT25OZXh0UmVuZGVyID0gbnVsbDtcclxufVxyXG5cclxuLy8gVGhpbmdzIHdlIGRvIGhlcmUgdG8gc2F2ZSBzb21lIGJ5dGVzIGJ1dCBhcmUgbm90IHByb3BlciBKUyBpbmhlcml0YW5jZTpcclxuLy8gLSBjYWxsIGBuZXcgQ29tcG9uZW50KClgIGFzIHRoZSBwcm90b3R5cGVcclxuLy8gLSBkbyBub3Qgc2V0IGBTdXNwZW5zZS5wcm90b3R5cGUuY29uc3RydWN0b3JgIHRvIGBTdXNwZW5zZWBcclxuU3VzcGVuc2UucHJvdG90eXBlID0gbmV3IENvbXBvbmVudCgpO1xyXG5cclxuLyoqXHJcbiAqIEB0aGlzIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5TdXNwZW5zZUNvbXBvbmVudH1cclxuICogQHBhcmFtIHtQcm9taXNlfSBwcm9taXNlIFRoZSB0aHJvd24gcHJvbWlzZVxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlZOb2RlPGFueSwgYW55Pn0gc3VzcGVuZGluZ1ZOb2RlIFRoZSBzdXNwZW5kaW5nIGNvbXBvbmVudFxyXG4gKi9cclxuU3VzcGVuc2UucHJvdG90eXBlLl9jaGlsZERpZFN1c3BlbmQgPSBmdW5jdGlvbihwcm9taXNlLCBzdXNwZW5kaW5nVk5vZGUpIHtcclxuXHRjb25zdCBzdXNwZW5kaW5nQ29tcG9uZW50ID0gc3VzcGVuZGluZ1ZOb2RlLl9jb21wb25lbnQ7XHJcblxyXG5cdC8qKiBAdHlwZSB7aW1wb3J0KCcuL2ludGVybmFsJykuU3VzcGVuc2VDb21wb25lbnR9ICovXHJcblx0Y29uc3QgYyA9IHRoaXM7XHJcblxyXG5cdGlmIChjLl9zdXNwZW5kZXJzID09IG51bGwpIHtcclxuXHRcdGMuX3N1c3BlbmRlcnMgPSBbXTtcclxuXHR9XHJcblx0Yy5fc3VzcGVuZGVycy5wdXNoKHN1c3BlbmRpbmdDb21wb25lbnQpO1xyXG5cclxuXHRjb25zdCByZXNvbHZlID0gc3VzcGVuZGVkKGMuX3Zub2RlKTtcclxuXHJcblx0bGV0IHJlc29sdmVkID0gZmFsc2U7XHJcblx0Y29uc3Qgb25SZXNvbHZlZCA9ICgpID0+IHtcclxuXHRcdGlmIChyZXNvbHZlZCkgcmV0dXJuO1xyXG5cclxuXHRcdHJlc29sdmVkID0gdHJ1ZTtcclxuXHRcdHN1c3BlbmRpbmdDb21wb25lbnQuX29uUmVzb2x2ZSA9IG51bGw7XHJcblxyXG5cdFx0aWYgKHJlc29sdmUpIHtcclxuXHRcdFx0cmVzb2x2ZShvblN1c3BlbnNpb25Db21wbGV0ZSk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRvblN1c3BlbnNpb25Db21wbGV0ZSgpO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdHN1c3BlbmRpbmdDb21wb25lbnQuX29uUmVzb2x2ZSA9IG9uUmVzb2x2ZWQ7XHJcblxyXG5cdGNvbnN0IG9uU3VzcGVuc2lvbkNvbXBsZXRlID0gKCkgPT4ge1xyXG5cdFx0aWYgKCEtLWMuX3BlbmRpbmdTdXNwZW5zaW9uQ291bnQpIHtcclxuXHRcdFx0Ly8gSWYgdGhlIHN1c3BlbnNpb24gd2FzIGR1cmluZyBoeWRyYXRpb24gd2UgZG9uJ3QgbmVlZCB0byByZXN0b3JlIHRoZVxyXG5cdFx0XHQvLyBzdXNwZW5kZWQgY2hpbGRyZW4gaW50byB0aGUgX2NoaWxkcmVuIGFycmF5XHJcblx0XHRcdGlmIChjLnN0YXRlLl9zdXNwZW5kZWQpIHtcclxuXHRcdFx0XHRjb25zdCBzdXNwZW5kZWRWTm9kZSA9IGMuc3RhdGUuX3N1c3BlbmRlZDtcclxuXHRcdFx0XHRjLl92bm9kZS5fY2hpbGRyZW5bMF0gPSByZW1vdmVPcmlnaW5hbChcclxuXHRcdFx0XHRcdHN1c3BlbmRlZFZOb2RlLFxyXG5cdFx0XHRcdFx0c3VzcGVuZGVkVk5vZGUuX2NvbXBvbmVudC5fcGFyZW50RG9tLFxyXG5cdFx0XHRcdFx0c3VzcGVuZGVkVk5vZGUuX2NvbXBvbmVudC5fb3JpZ2luYWxQYXJlbnREb21cclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRjLnNldFN0YXRlKHsgX3N1c3BlbmRlZDogKGMuX2RldGFjaE9uTmV4dFJlbmRlciA9IG51bGwpIH0pO1xyXG5cclxuXHRcdFx0bGV0IHN1c3BlbmRlZDtcclxuXHRcdFx0d2hpbGUgKChzdXNwZW5kZWQgPSBjLl9zdXNwZW5kZXJzLnBvcCgpKSkge1xyXG5cdFx0XHRcdHN1c3BlbmRlZC5mb3JjZVVwZGF0ZSgpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogV2UgZG8gbm90IHNldCBgc3VzcGVuZGVkOiB0cnVlYCBkdXJpbmcgaHlkcmF0aW9uIGJlY2F1c2Ugd2Ugd2FudCB0aGUgYWN0dWFsIG1hcmt1cFxyXG5cdCAqIHRvIHJlbWFpbiBvbiBzY3JlZW4gYW5kIGh5ZHJhdGUgaXQgd2hlbiB0aGUgc3VzcGVuc2UgYWN0dWFsbHkgZ2V0cyByZXNvbHZlZC5cclxuXHQgKiBXaGlsZSBpbiBub24taHlkcmF0aW9uIGNhc2VzIHRoZSB1c3VhbCBmYWxsYmFjayAtPiBjb21wb25lbnQgZmxvdyB3b3VsZCBvY2NvdXIuXHJcblx0ICovXHJcblx0Y29uc3Qgd2FzSHlkcmF0aW5nID0gc3VzcGVuZGluZ1ZOb2RlLl9oeWRyYXRpbmcgPT09IHRydWU7XHJcblx0aWYgKCFjLl9wZW5kaW5nU3VzcGVuc2lvbkNvdW50KysgJiYgIXdhc0h5ZHJhdGluZykge1xyXG5cdFx0Yy5zZXRTdGF0ZSh7IF9zdXNwZW5kZWQ6IChjLl9kZXRhY2hPbk5leHRSZW5kZXIgPSBjLl92bm9kZS5fY2hpbGRyZW5bMF0pIH0pO1xyXG5cdH1cclxuXHRwcm9taXNlLnRoZW4ob25SZXNvbHZlZCwgb25SZXNvbHZlZCk7XHJcbn07XHJcblxyXG5TdXNwZW5zZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbigpIHtcclxuXHR0aGlzLl9zdXNwZW5kZXJzID0gW107XHJcbn07XHJcblxyXG4vKipcclxuICogQHRoaXMge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlN1c3BlbnNlQ29tcG9uZW50fVxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlN1c3BlbnNlQ29tcG9uZW50W1wicHJvcHNcIl19IHByb3BzXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuU3VzcGVuc2VTdGF0ZX0gc3RhdGVcclxuICovXHJcblN1c3BlbnNlLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbihwcm9wcywgc3RhdGUpIHtcclxuXHRpZiAodGhpcy5fZGV0YWNoT25OZXh0UmVuZGVyKSB7XHJcblx0XHQvLyBXaGVuIHRoZSBTdXNwZW5zZSdzIF92bm9kZSB3YXMgY3JlYXRlZCBieSBhIGNhbGwgdG8gY3JlYXRlVk5vZGVcclxuXHRcdC8vIChpLmUuIGR1ZSB0byBhIHNldFN0YXRlIGZ1cnRoZXIgdXAgaW4gdGhlIHRyZWUpXHJcblx0XHQvLyBpdCdzIF9jaGlsZHJlbiBwcm9wIGlzIG51bGwsIGluIHRoaXMgY2FzZSB3ZSBcImZvcmdldFwiIGFib3V0IHRoZSBwYXJrZWQgdm5vZGVzIHRvIGRldGFjaFxyXG5cdFx0aWYgKHRoaXMuX3Zub2RlLl9jaGlsZHJlbikge1xyXG5cdFx0XHRjb25zdCBkZXRhY2hlZFBhcmVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0XHRjb25zdCBkZXRhY2hlZENvbXBvbmVudCA9IHRoaXMuX3Zub2RlLl9jaGlsZHJlblswXS5fY29tcG9uZW50O1xyXG5cdFx0XHR0aGlzLl92bm9kZS5fY2hpbGRyZW5bMF0gPSBkZXRhY2hlZENsb25lKFxyXG5cdFx0XHRcdHRoaXMuX2RldGFjaE9uTmV4dFJlbmRlcixcclxuXHRcdFx0XHRkZXRhY2hlZFBhcmVudCxcclxuXHRcdFx0XHQoZGV0YWNoZWRDb21wb25lbnQuX29yaWdpbmFsUGFyZW50RG9tID0gZGV0YWNoZWRDb21wb25lbnQuX3BhcmVudERvbSlcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLl9kZXRhY2hPbk5leHRSZW5kZXIgPSBudWxsO1xyXG5cdH1cclxuXHJcblx0Ly8gV3JhcCBmYWxsYmFjayB0cmVlIGluIGEgVk5vZGUgdGhhdCBwcmV2ZW50cyBpdHNlbGYgZnJvbSBiZWluZyBtYXJrZWQgYXMgYWJvcnRpbmcgbWlkLWh5ZHJhdGlvbjpcclxuXHQvKiogQHR5cGUge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlZOb2RlfSAqL1xyXG5cdGNvbnN0IGZhbGxiYWNrID1cclxuXHRcdHN0YXRlLl9zdXNwZW5kZWQgJiYgY3JlYXRlRWxlbWVudChGcmFnbWVudCwgbnVsbCwgcHJvcHMuZmFsbGJhY2spO1xyXG5cdGlmIChmYWxsYmFjaykgZmFsbGJhY2suX2h5ZHJhdGluZyA9IG51bGw7XHJcblxyXG5cdHJldHVybiBbXHJcblx0XHRjcmVhdGVFbGVtZW50KEZyYWdtZW50LCBudWxsLCBzdGF0ZS5fc3VzcGVuZGVkID8gbnVsbCA6IHByb3BzLmNoaWxkcmVuKSxcclxuXHRcdGZhbGxiYWNrXHJcblx0XTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBDaGVja3MgYW5kIGNhbGxzIHRoZSBwYXJlbnQgY29tcG9uZW50J3MgX3N1c3BlbmRlZCBtZXRob2QsIHBhc3NpbmcgaW4gdGhlXHJcbiAqIHN1c3BlbmRlZCB2bm9kZS4gVGhpcyBpcyBhIHdheSBmb3IgYSBwYXJlbnQgKGUuZy4gU3VzcGVuc2VMaXN0KSB0byBnZXQgbm90aWZpZWRcclxuICogdGhhdCBvbmUgb2YgaXRzIGNoaWxkcmVuL2Rlc2NlbmRhbnRzIHN1c3BlbmRlZC5cclxuICpcclxuICogVGhlIHBhcmVudCBNQVkgcmV0dXJuIGEgY2FsbGJhY2suIFRoZSBjYWxsYmFjayB3aWxsIGdldCBjYWxsZWQgd2hlbiB0aGVcclxuICogc3VzcGVuc2lvbiByZXNvbHZlcywgbm90aWZ5aW5nIHRoZSBwYXJlbnQgb2YgdGhlIGZhY3QuXHJcbiAqIE1vcmVvdmVyLCB0aGUgY2FsbGJhY2sgZ2V0cyBmdW5jdGlvbiBgdW5zdXNwZW5kYCBhcyBhIHBhcmFtZXRlci4gVGhlIHJlc29sdmVkXHJcbiAqIGNoaWxkIGRlc2NlbmRhbnQgd2lsbCBub3QgYWN0dWFsbHkgZ2V0IHVuc3VzcGVuZGVkIHVudGlsIGB1bnN1c3BlbmRgIGdldHMgY2FsbGVkLlxyXG4gKiBUaGlzIGlzIGEgd2F5IGZvciB0aGUgcGFyZW50IHRvIGRlbGF5IHVuc3VzcGVuZGluZy5cclxuICpcclxuICogSWYgdGhlIHBhcmVudCBkb2VzIG5vdCByZXR1cm4gYSBjYWxsYmFjayB0aGVuIHRoZSByZXNvbHZlZCB2bm9kZVxyXG4gKiBnZXRzIHVuc3VzcGVuZGVkIGltbWVkaWF0ZWx5IHdoZW4gaXQgcmVzb2x2ZXMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuVk5vZGV9IHZub2RlXHJcbiAqIEByZXR1cm5zIHsoKHVuc3VzcGVuZDogKCkgPT4gdm9pZCkgPT4gdm9pZCk/fVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHN1c3BlbmRlZCh2bm9kZSkge1xyXG5cdC8qKiBAdHlwZSB7aW1wb3J0KCcuL2ludGVybmFsJykuQ29tcG9uZW50fSAqL1xyXG5cdGxldCBjb21wb25lbnQgPSB2bm9kZS5fcGFyZW50Ll9jb21wb25lbnQ7XHJcblx0cmV0dXJuIGNvbXBvbmVudCAmJiBjb21wb25lbnQuX3N1c3BlbmRlZCAmJiBjb21wb25lbnQuX3N1c3BlbmRlZCh2bm9kZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBsYXp5KGxvYWRlcikge1xyXG5cdGxldCBwcm9tO1xyXG5cdGxldCBjb21wb25lbnQ7XHJcblx0bGV0IGVycm9yO1xyXG5cclxuXHRmdW5jdGlvbiBMYXp5KHByb3BzKSB7XHJcblx0XHRpZiAoIXByb20pIHtcclxuXHRcdFx0cHJvbSA9IGxvYWRlcigpO1xyXG5cdFx0XHRwcm9tLnRoZW4oXHJcblx0XHRcdFx0ZXhwb3J0cyA9PiB7XHJcblx0XHRcdFx0XHRjb21wb25lbnQgPSBleHBvcnRzLmRlZmF1bHQgfHwgZXhwb3J0cztcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGUgPT4ge1xyXG5cdFx0XHRcdFx0ZXJyb3IgPSBlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoZXJyb3IpIHtcclxuXHRcdFx0dGhyb3cgZXJyb3I7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCFjb21wb25lbnQpIHtcclxuXHRcdFx0dGhyb3cgcHJvbTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKTtcclxuXHR9XHJcblxyXG5cdExhenkuZGlzcGxheU5hbWUgPSAnTGF6eSc7XHJcblx0TGF6eS5fZm9yd2FyZGVkID0gdHJ1ZTtcclxuXHRyZXR1cm4gTGF6eTtcclxufVxyXG4iLCAiaW1wb3J0IHsgQ29tcG9uZW50LCB0b0NoaWxkQXJyYXkgfSBmcm9tICdwcmVhY3QnO1xyXG5pbXBvcnQgeyBzdXNwZW5kZWQgfSBmcm9tICcuL3N1c3BlbnNlLmpzJztcclxuXHJcbi8vIEluZGV4ZXMgdG8gbGlua2VkIGxpc3Qgbm9kZXMgKG5vZGVzIGFyZSBzdG9yZWQgYXMgYXJyYXlzIHRvIHNhdmUgYnl0ZXMpLlxyXG5jb25zdCBTVVNQRU5ERURfQ09VTlQgPSAwO1xyXG5jb25zdCBSRVNPTFZFRF9DT1VOVCA9IDE7XHJcbmNvbnN0IE5FWFRfTk9ERSA9IDI7XHJcblxyXG4vLyBIYXZpbmcgY3VzdG9tIGluaGVyaXRhbmNlIGluc3RlYWQgb2YgYSBjbGFzcyBoZXJlIHNhdmVzIGEgbG90IG9mIGJ5dGVzLlxyXG5leHBvcnQgZnVuY3Rpb24gU3VzcGVuc2VMaXN0KCkge1xyXG5cdHRoaXMuX25leHQgPSBudWxsO1xyXG5cdHRoaXMuX21hcCA9IG51bGw7XHJcbn1cclxuXHJcbi8vIE1hcmsgb25lIG9mIGNoaWxkJ3MgZWFybGllciBzdXNwZW5zaW9ucyBhcyByZXNvbHZlZC5cclxuLy8gU29tZSBwZW5kaW5nIGNhbGxiYWNrcyBtYXkgYmVjb21lIGNhbGxhYmxlIGR1ZSB0byB0aGlzXHJcbi8vIChlLmcuIHRoZSBsYXN0IHN1c3BlbmRlZCBkZXNjZW5kYW50IGdldHMgcmVzb2x2ZWQgd2hlblxyXG4vLyByZXZlYWxPcmRlciA9PT0gJ3RvZ2V0aGVyJykuIFByb2Nlc3MgdGhvc2UgY2FsbGJhY2tzIGFzIHdlbGwuXHJcbmNvbnN0IHJlc29sdmUgPSAobGlzdCwgY2hpbGQsIG5vZGUpID0+IHtcclxuXHRpZiAoKytub2RlW1JFU09MVkVEX0NPVU5UXSA9PT0gbm9kZVtTVVNQRU5ERURfQ09VTlRdKSB7XHJcblx0XHQvLyBUaGUgbnVtYmVyIGEgY2hpbGQgKG9yIGFueSBvZiBpdHMgZGVzY2VuZGFudHMpIGhhcyBiZWVuIHN1c3BlbmRlZFxyXG5cdFx0Ly8gbWF0Y2hlcyB0aGUgbnVtYmVyIG9mIHRpbWVzIGl0J3MgYmVlbiByZXNvbHZlZC4gVGhlcmVmb3JlIHdlXHJcblx0XHQvLyBtYXJrIHRoZSBjaGlsZCBhcyBjb21wbGV0ZWx5IHJlc29sdmVkIGJ5IGRlbGV0aW5nIGl0IGZyb20gLl9tYXAuXHJcblx0XHQvLyBUaGlzIGlzIHVzZWQgdG8gZmlndXJlIG91dCB3aGVuICphbGwqIGNoaWxkcmVuIGhhdmUgYmVlbiBjb21wbGV0ZWx5XHJcblx0XHQvLyByZXNvbHZlZCB3aGVuIHJldmVhbE9yZGVyIGlzICd0b2dldGhlcicuXHJcblx0XHRsaXN0Ll9tYXAuZGVsZXRlKGNoaWxkKTtcclxuXHR9XHJcblxyXG5cdC8vIElmIHJldmVhbE9yZGVyIGlzIGZhbHN5IHRoZW4gd2UgY2FuIGRvIGFuIGVhcmx5IGV4aXQsIGFzIHRoZVxyXG5cdC8vIGNhbGxiYWNrcyB3b24ndCBnZXQgcXVldWVkIGluIHRoZSBub2RlIGFueXdheS5cclxuXHQvLyBJZiByZXZlYWxPcmRlciBpcyAndG9nZXRoZXInIHRoZW4gYWxzbyBkbyBhbiBlYXJseSBleGl0XHJcblx0Ly8gaWYgYWxsIHN1c3BlbmRlZCBkZXNjZW5kYW50cyBoYXZlIG5vdCB5ZXQgYmVlbiByZXNvbHZlZC5cclxuXHRpZiAoXHJcblx0XHQhbGlzdC5wcm9wcy5yZXZlYWxPcmRlciB8fFxyXG5cdFx0KGxpc3QucHJvcHMucmV2ZWFsT3JkZXJbMF0gPT09ICd0JyAmJiBsaXN0Ll9tYXAuc2l6ZSlcclxuXHQpIHtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdC8vIFdhbGsgdGhlIGN1cnJlbnRseSBzdXNwZW5kZWQgY2hpbGRyZW4gaW4gb3JkZXIsIGNhbGxpbmcgdGhlaXJcclxuXHQvLyBzdG9yZWQgY2FsbGJhY2tzIG9uIHRoZSB3YXkuIFN0b3AgaWYgd2UgZW5jb3VudGVyIGEgY2hpbGQgdGhhdFxyXG5cdC8vIGhhcyBub3QgYmVlbiBjb21wbGV0ZWx5IHJlc29sdmVkIHlldC5cclxuXHRub2RlID0gbGlzdC5fbmV4dDtcclxuXHR3aGlsZSAobm9kZSkge1xyXG5cdFx0d2hpbGUgKG5vZGUubGVuZ3RoID4gMykge1xyXG5cdFx0XHRub2RlLnBvcCgpKCk7XHJcblx0XHR9XHJcblx0XHRpZiAobm9kZVtSRVNPTFZFRF9DT1VOVF0gPCBub2RlW1NVU1BFTkRFRF9DT1VOVF0pIHtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHR9XHJcblx0XHRsaXN0Ll9uZXh0ID0gbm9kZSA9IG5vZGVbTkVYVF9OT0RFXTtcclxuXHR9XHJcbn07XHJcblxyXG4vLyBUaGluZ3Mgd2UgZG8gaGVyZSB0byBzYXZlIHNvbWUgYnl0ZXMgYnV0IGFyZSBub3QgcHJvcGVyIEpTIGluaGVyaXRhbmNlOlxyXG4vLyAtIGNhbGwgYG5ldyBDb21wb25lbnQoKWAgYXMgdGhlIHByb3RvdHlwZVxyXG4vLyAtIGRvIG5vdCBzZXQgYFN1c3BlbnNlLnByb3RvdHlwZS5jb25zdHJ1Y3RvcmAgdG8gYFN1c3BlbnNlYFxyXG5TdXNwZW5zZUxpc3QucHJvdG90eXBlID0gbmV3IENvbXBvbmVudCgpO1xyXG5cclxuU3VzcGVuc2VMaXN0LnByb3RvdHlwZS5fc3VzcGVuZGVkID0gZnVuY3Rpb24oY2hpbGQpIHtcclxuXHRjb25zdCBsaXN0ID0gdGhpcztcclxuXHRjb25zdCBkZWxlZ2F0ZWQgPSBzdXNwZW5kZWQobGlzdC5fdm5vZGUpO1xyXG5cclxuXHRsZXQgbm9kZSA9IGxpc3QuX21hcC5nZXQoY2hpbGQpO1xyXG5cdG5vZGVbU1VTUEVOREVEX0NPVU5UXSsrO1xyXG5cclxuXHRyZXR1cm4gdW5zdXNwZW5kID0+IHtcclxuXHRcdGNvbnN0IHdyYXBwZWRVbnN1c3BlbmQgPSAoKSA9PiB7XHJcblx0XHRcdGlmICghbGlzdC5wcm9wcy5yZXZlYWxPcmRlcikge1xyXG5cdFx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0aGUgdW5kZWZpbmVkIChmYWxzeSkgcmV2ZWFsT3JkZXIsIGFzIHRoZXJlXHJcblx0XHRcdFx0Ly8gaXMgbm8gbmVlZCB0byBjb29yZGluYXRlIGEgc3BlY2lmaWMgb3JkZXIgb3IgdW5zdXNwZW5kcy5cclxuXHRcdFx0XHR1bnN1c3BlbmQoKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRub2RlLnB1c2godW5zdXNwZW5kKTtcclxuXHRcdFx0XHRyZXNvbHZlKGxpc3QsIGNoaWxkLCBub2RlKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdGlmIChkZWxlZ2F0ZWQpIHtcclxuXHRcdFx0ZGVsZWdhdGVkKHdyYXBwZWRVbnN1c3BlbmQpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0d3JhcHBlZFVuc3VzcGVuZCgpO1xyXG5cdFx0fVxyXG5cdH07XHJcbn07XHJcblxyXG5TdXNwZW5zZUxpc3QucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uKHByb3BzKSB7XHJcblx0dGhpcy5fbmV4dCA9IG51bGw7XHJcblx0dGhpcy5fbWFwID0gbmV3IE1hcCgpO1xyXG5cclxuXHRjb25zdCBjaGlsZHJlbiA9IHRvQ2hpbGRBcnJheShwcm9wcy5jaGlsZHJlbik7XHJcblx0aWYgKHByb3BzLnJldmVhbE9yZGVyICYmIHByb3BzLnJldmVhbE9yZGVyWzBdID09PSAnYicpIHtcclxuXHRcdC8vIElmIG9yZGVyID09PSAnYmFja3dhcmRzJyAob3IsIHdlbGwsIGFueXRoaW5nIHN0YXJ0aW5nIHdpdGggYSAnYicpXHJcblx0XHQvLyB0aGVuIGZsaXAgdGhlIGNoaWxkIGxpc3QgYXJvdW5kIHNvIHRoYXQgdGhlIGxhc3QgY2hpbGQgd2lsbCBiZVxyXG5cdFx0Ly8gdGhlIGZpcnN0IGluIHRoZSBsaW5rZWQgbGlzdC5cclxuXHRcdGNoaWxkcmVuLnJldmVyc2UoKTtcclxuXHR9XHJcblx0Ly8gQnVpbGQgdGhlIGxpbmtlZCBsaXN0LiBJdGVyYXRlIHRocm91Z2ggdGhlIGNoaWxkcmVuIGluIHJldmVyc2Ugb3JkZXJcclxuXHQvLyBzbyB0aGF0IGBfbmV4dGAgcG9pbnRzIHRvIHRoZSBmaXJzdCBsaW5rZWQgbGlzdCBub2RlIHRvIGJlIHJlc29sdmVkLlxyXG5cdGZvciAobGV0IGkgPSBjaGlsZHJlbi5sZW5ndGg7IGktLTsgKSB7XHJcblx0XHQvLyBDcmVhdGUgYSBuZXcgbGlua2VkIGxpc3Qgbm9kZSBhcyBhbiBhcnJheSBvZiBmb3JtOlxyXG5cdFx0Ly8gXHRbc3VzcGVuZGVkX2NvdW50LCByZXNvbHZlZF9jb3VudCwgbmV4dF9ub2RlXVxyXG5cdFx0Ly8gd2hlcmUgc3VzcGVuZGVkX2NvdW50IGFuZCByZXNvbHZlZF9jb3VudCBhcmUgbnVtZXJpYyBjb3VudGVycyBmb3JcclxuXHRcdC8vIGtlZXBpbmcgdHJhY2sgaG93IG1hbnkgdGltZXMgYSBub2RlIGhhcyBiZWVuIHN1c3BlbmRlZCBhbmQgcmVzb2x2ZWQuXHJcblx0XHQvL1xyXG5cdFx0Ly8gTm90ZSB0aGF0IHN1c3BlbmRlZF9jb3VudCBzdGFydHMgZnJvbSAxIGluc3RlYWQgb2YgMCwgc28gd2UgY2FuIGJsb2NrXHJcblx0XHQvLyBwcm9jZXNzaW5nIGNhbGxiYWNrcyB1bnRpbCBjb21wb25lbnREaWRNb3VudCBoYXMgYmVlbiBjYWxsZWQuIEluIGEgc2Vuc2VcclxuXHRcdC8vIG5vZGUgaXMgc3VzcGVuZGVkIGF0IGxlYXN0IHVudGlsIGNvbXBvbmVudERpZE1vdW50IGdldHMgY2FsbGVkIVxyXG5cdFx0Ly9cclxuXHRcdC8vIFBlbmRpbmcgY2FsbGJhY2tzIGFyZSBhZGRlZCB0byB0aGUgZW5kIG9mIHRoZSBub2RlOlxyXG5cdFx0Ly8gXHRbc3VzcGVuZGVkX2NvdW50LCByZXNvbHZlZF9jb3VudCwgbmV4dF9ub2RlLCBjYWxsYmFja18wLCBjYWxsYmFja18xLCAuLi5dXHJcblx0XHR0aGlzLl9tYXAuc2V0KGNoaWxkcmVuW2ldLCAodGhpcy5fbmV4dCA9IFsxLCAwLCB0aGlzLl9uZXh0XSkpO1xyXG5cdH1cclxuXHRyZXR1cm4gcHJvcHMuY2hpbGRyZW47XHJcbn07XHJcblxyXG5TdXNwZW5zZUxpc3QucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IFN1c3BlbnNlTGlzdC5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbigpIHtcclxuXHQvLyBJdGVyYXRlIHRocm91Z2ggYWxsIGNoaWxkcmVuIGFmdGVyIG1vdW50aW5nIGZvciB0d28gcmVhc29uczpcclxuXHQvLyAxLiBBcyBlYWNoIG5vZGVbU1VTUEVOREVEX0NPVU5UXSBzdGFydHMgZnJvbSAxLCB0aGlzIGl0ZXJhdGlvbiBpbmNyZWFzZXNcclxuXHQvLyAgICBlYWNoIG5vZGVbUkVMRUFTRURfQ09VTlRdIGJ5IDEsIHRoZXJlZm9yZSBiYWxhbmNpbmcgdGhlIGNvdW50ZXJzLlxyXG5cdC8vICAgIFRoZSBub2RlcyBjYW4gbm93IGJlIGNvbXBsZXRlbHkgY29uc3VtZWQgZnJvbSB0aGUgbGlua2VkIGxpc3QuXHJcblx0Ly8gMi4gSGFuZGxlIG5vZGVzIHRoYXQgbWlnaHQgaGF2ZSBnb3R0ZW4gcmVzb2x2ZWQgYmV0d2VlbiByZW5kZXIgYW5kXHJcblx0Ly8gICAgY29tcG9uZW50RGlkTW91bnQuXHJcblx0dGhpcy5fbWFwLmZvckVhY2goKG5vZGUsIGNoaWxkKSA9PiB7XHJcblx0XHRyZXNvbHZlKHRoaXMsIGNoaWxkLCBub2RlKTtcclxuXHR9KTtcclxufTtcclxuIiwgImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIHJlbmRlciB9IGZyb20gJ3ByZWFjdCc7XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtpbXBvcnQoJy4uLy4uL3NyYy9pbmRleCcpLlJlbmRlcmFibGVQcm9wczx7IGNvbnRleHQ6IGFueSB9Pn0gcHJvcHNcclxuICovXHJcbmZ1bmN0aW9uIENvbnRleHRQcm92aWRlcihwcm9wcykge1xyXG5cdHRoaXMuZ2V0Q2hpbGRDb250ZXh0ID0gKCkgPT4gcHJvcHMuY29udGV4dDtcclxuXHRyZXR1cm4gcHJvcHMuY2hpbGRyZW47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQb3J0YWwgY29tcG9uZW50XHJcbiAqIEB0aGlzIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5Db21wb25lbnR9XHJcbiAqIEBwYXJhbSB7b2JqZWN0IHwgbnVsbCB8IHVuZGVmaW5lZH0gcHJvcHNcclxuICpcclxuICogVE9ETzogdXNlIGNyZWF0ZVJvb3QoKSBpbnN0ZWFkIG9mIGZha2Ugcm9vdFxyXG4gKi9cclxuZnVuY3Rpb24gUG9ydGFsKHByb3BzKSB7XHJcblx0Y29uc3QgX3RoaXMgPSB0aGlzO1xyXG5cdGxldCBjb250YWluZXIgPSBwcm9wcy5fY29udGFpbmVyO1xyXG5cclxuXHRfdGhpcy5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmVuZGVyKG51bGwsIF90aGlzLl90ZW1wKTtcclxuXHRcdF90aGlzLl90ZW1wID0gbnVsbDtcclxuXHRcdF90aGlzLl9jb250YWluZXIgPSBudWxsO1xyXG5cdH07XHJcblxyXG5cdC8vIFdoZW4gd2UgY2hhbmdlIGNvbnRhaW5lciB3ZSBzaG91bGQgY2xlYXIgb3VyIG9sZCBjb250YWluZXIgYW5kXHJcblx0Ly8gaW5kaWNhdGUgYSBuZXcgbW91bnQuXHJcblx0aWYgKF90aGlzLl9jb250YWluZXIgJiYgX3RoaXMuX2NvbnRhaW5lciAhPT0gY29udGFpbmVyKSB7XHJcblx0XHRfdGhpcy5jb21wb25lbnRXaWxsVW5tb3VudCgpO1xyXG5cdH1cclxuXHJcblx0Ly8gV2hlbiBwcm9wcy52bm9kZSBpcyB1bmRlZmluZWQvZmFsc2UvbnVsbCB3ZSBhcmUgZGVhbGluZyB3aXRoIHNvbWUga2luZCBvZlxyXG5cdC8vIGNvbmRpdGlvbmFsIHZub2RlLiBUaGlzIHNob3VsZCBub3QgdHJpZ2dlciBhIHJlbmRlci5cclxuXHRpZiAocHJvcHMuX3Zub2RlKSB7XHJcblx0XHRpZiAoIV90aGlzLl90ZW1wKSB7XHJcblx0XHRcdF90aGlzLl9jb250YWluZXIgPSBjb250YWluZXI7XHJcblxyXG5cdFx0XHQvLyBDcmVhdGUgYSBmYWtlIERPTSBwYXJlbnQgbm9kZSB0aGF0IG1hbmFnZXMgYSBzdWJzZXQgb2YgYGNvbnRhaW5lcmAncyBjaGlsZHJlbjpcclxuXHRcdFx0X3RoaXMuX3RlbXAgPSB7XHJcblx0XHRcdFx0bm9kZVR5cGU6IDEsXHJcblx0XHRcdFx0cGFyZW50Tm9kZTogY29udGFpbmVyLFxyXG5cdFx0XHRcdGNoaWxkTm9kZXM6IFtdLFxyXG5cdFx0XHRcdGFwcGVuZENoaWxkKGNoaWxkKSB7XHJcblx0XHRcdFx0XHR0aGlzLmNoaWxkTm9kZXMucHVzaChjaGlsZCk7XHJcblx0XHRcdFx0XHRfdGhpcy5fY29udGFpbmVyLmFwcGVuZENoaWxkKGNoaWxkKTtcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGluc2VydEJlZm9yZShjaGlsZCwgYmVmb3JlKSB7XHJcblx0XHRcdFx0XHR0aGlzLmNoaWxkTm9kZXMucHVzaChjaGlsZCk7XHJcblx0XHRcdFx0XHRfdGhpcy5fY29udGFpbmVyLmFwcGVuZENoaWxkKGNoaWxkKTtcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHJlbW92ZUNoaWxkKGNoaWxkKSB7XHJcblx0XHRcdFx0XHR0aGlzLmNoaWxkTm9kZXMuc3BsaWNlKHRoaXMuY2hpbGROb2Rlcy5pbmRleE9mKGNoaWxkKSA+Pj4gMSwgMSk7XHJcblx0XHRcdFx0XHRfdGhpcy5fY29udGFpbmVyLnJlbW92ZUNoaWxkKGNoaWxkKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUmVuZGVyIG91ciB3cmFwcGluZyBlbGVtZW50IGludG8gdGVtcC5cclxuXHRcdHJlbmRlcihcclxuXHRcdFx0Y3JlYXRlRWxlbWVudChDb250ZXh0UHJvdmlkZXIsIHsgY29udGV4dDogX3RoaXMuY29udGV4dCB9LCBwcm9wcy5fdm5vZGUpLFxyXG5cdFx0XHRfdGhpcy5fdGVtcFxyXG5cdFx0KTtcclxuXHR9XHJcblx0Ly8gV2hlbiB3ZSBjb21lIGZyb20gYSBjb25kaXRpb25hbCByZW5kZXIsIG9uIGEgbW91bnRlZFxyXG5cdC8vIHBvcnRhbCB3ZSBzaG91bGQgY2xlYXIgdGhlIERPTS5cclxuXHRlbHNlIGlmIChfdGhpcy5fdGVtcCkge1xyXG5cdFx0X3RoaXMuY29tcG9uZW50V2lsbFVubW91bnQoKTtcclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgYSBgUG9ydGFsYCB0byBjb250aW51ZSByZW5kZXJpbmcgdGhlIHZub2RlIHRyZWUgYXQgYSBkaWZmZXJlbnQgRE9NIG5vZGVcclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5WTm9kZX0gdm5vZGUgVGhlIHZub2RlIHRvIHJlbmRlclxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlByZWFjdEVsZW1lbnR9IGNvbnRhaW5lciBUaGUgRE9NIG5vZGUgdG8gY29udGludWUgcmVuZGVyaW5nIGluIHRvLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvcnRhbCh2bm9kZSwgY29udGFpbmVyKSB7XHJcblx0cmV0dXJuIGNyZWF0ZUVsZW1lbnQoUG9ydGFsLCB7IF92bm9kZTogdm5vZGUsIF9jb250YWluZXI6IGNvbnRhaW5lciB9KTtcclxufVxyXG4iLCAiaW1wb3J0IHtcclxuXHRyZW5kZXIgYXMgcHJlYWN0UmVuZGVyLFxyXG5cdGh5ZHJhdGUgYXMgcHJlYWN0SHlkcmF0ZSxcclxuXHRvcHRpb25zLFxyXG5cdHRvQ2hpbGRBcnJheSxcclxuXHRDb21wb25lbnRcclxufSBmcm9tICdwcmVhY3QnO1xyXG5cclxuZXhwb3J0IGNvbnN0IFJFQUNUX0VMRU1FTlRfVFlQRSA9XHJcblx0KHR5cGVvZiBTeW1ib2wgIT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLmZvciAmJiBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykpIHx8XHJcblx0MHhlYWM3O1xyXG5cclxuY29uc3QgQ0FNRUxfUFJPUFMgPSAvXig/OmFjY2VudHxhbGlnbm1lbnR8YXJhYmljfGJhc2VsaW5lfGNhcHxjbGlwKD8hUGF0aFUpfGNvbG9yfGRvbWluYW50fGZpbGx8Zmxvb2R8Zm9udHxnbHlwaCg/IVIpfGhvcml6fG1hcmtlcig/IUh8V3xVKXxvdmVybGluZXxwYWludHxzdG9wfHN0cmlrZXRocm91Z2h8c3Ryb2tlfHRleHQoPyFMKXx1bmRlcmxpbmV8dW5pY29kZXx1bml0c3x2fHZlY3Rvcnx2ZXJ0fHdvcmR8d3JpdGluZ3x4KD8hQykpW0EtWl0vO1xyXG5cclxuY29uc3QgSVNfRE9NID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJztcclxuXHJcbi8vIElucHV0IHR5cGVzIGZvciB3aGljaCBvbmNoYW5nZSBzaG91bGQgbm90IGJlIGNvbnZlcnRlZCB0byBvbmlucHV0LlxyXG4vLyB0eXBlPVwiZmlsZXxjaGVja2JveHxyYWRpb1wiLCBwbHVzIFwicmFuZ2VcIiBpbiBJRTExLlxyXG4vLyAoSUUxMSBkb2Vzbid0IHN1cHBvcnQgU3ltYm9sLCB3aGljaCB3ZSB1c2UgaGVyZSB0byB0dXJuIGByYWRgIGludG8gYHJhYCB3aGljaCBtYXRjaGVzIFwicmFuZ2VcIilcclxuY29uc3Qgb25DaGFuZ2VJbnB1dFR5cGUgPSB0eXBlID0+XHJcblx0KHR5cGVvZiBTeW1ib2wgIT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIFN5bWJvbCgpID09ICdzeW1ib2wnXHJcblx0XHQ/IC9maWx8Y2hlfHJhZC9pXHJcblx0XHQ6IC9maWx8Y2hlfHJhL2lcclxuXHQpLnRlc3QodHlwZSk7XHJcblxyXG4vLyBTb21lIGxpYnJhcmllcyBsaWtlIGByZWFjdC12aXJ0dWFsaXplZGAgZXhwbGljaXRseSBjaGVjayBmb3IgdGhpcy5cclxuQ29tcG9uZW50LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50ID0ge307XHJcblxyXG4vLyBgVU5TQUZFXypgIGxpZmVjeWNsZSBob29rc1xyXG4vLyBQcmVhY3Qgb25seSBldmVyIGludm9rZXMgdGhlIHVucHJlZml4ZWQgbWV0aG9kcy5cclxuLy8gSGVyZSB3ZSBwcm92aWRlIGEgYmFzZSBcImZhbGxiYWNrXCIgaW1wbGVtZW50YXRpb24gdGhhdCBjYWxscyBhbnkgZGVmaW5lZCBVTlNBRkVfIHByZWZpeGVkIG1ldGhvZC5cclxuLy8gLSBJZiBhIGNvbXBvbmVudCBkZWZpbmVzIGl0cyBvd24gYGNvbXBvbmVudERpZE1vdW50KClgIChpbmNsdWRpbmcgdmlhIGRlZmluZVByb3BlcnR5KSwgdXNlIHRoYXQuXHJcbi8vIC0gSWYgYSBjb21wb25lbnQgZGVmaW5lcyBgVU5TQUZFX2NvbXBvbmVudERpZE1vdW50KClgLCBgY29tcG9uZW50RGlkTW91bnRgIGlzIHRoZSBhbGlhcyBnZXR0ZXIvc2V0dGVyLlxyXG4vLyAtIElmIGFueXRoaW5nIGFzc2lnbnMgdG8gYW4gYFVOU0FGRV8qYCBwcm9wZXJ0eSwgdGhlIGFzc2lnbm1lbnQgaXMgZm9yd2FyZGVkIHRvIHRoZSB1bnByZWZpeGVkIHByb3BlcnR5LlxyXG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3ByZWFjdGpzL3ByZWFjdC9pc3N1ZXMvMTk0MVxyXG5bXHJcblx0J2NvbXBvbmVudFdpbGxNb3VudCcsXHJcblx0J2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMnLFxyXG5cdCdjb21wb25lbnRXaWxsVXBkYXRlJ1xyXG5dLmZvckVhY2goa2V5ID0+IHtcclxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29tcG9uZW50LnByb3RvdHlwZSwga2V5LCB7XHJcblx0XHRjb25maWd1cmFibGU6IHRydWUsXHJcblx0XHRnZXQoKSB7XHJcblx0XHRcdHJldHVybiB0aGlzWydVTlNBRkVfJyArIGtleV07XHJcblx0XHR9LFxyXG5cdFx0c2V0KHYpIHtcclxuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIGtleSwge1xyXG5cdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuXHRcdFx0XHR3cml0YWJsZTogdHJ1ZSxcclxuXHRcdFx0XHR2YWx1ZTogdlxyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcblxyXG4vKipcclxuICogUHJveHkgcmVuZGVyKCkgc2luY2UgUmVhY3QgcmV0dXJucyBhIENvbXBvbmVudCByZWZlcmVuY2UuXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuVk5vZGV9IHZub2RlIFZOb2RlIHRyZWUgdG8gcmVuZGVyXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuUHJlYWN0RWxlbWVudH0gcGFyZW50IERPTSBub2RlIHRvIHJlbmRlciB2bm9kZSB0cmVlIGludG9cclxuICogQHBhcmFtIHsoKSA9PiB2b2lkfSBbY2FsbGJhY2tdIE9wdGlvbmFsIGNhbGxiYWNrIHRoYXQgd2lsbCBiZSBjYWxsZWQgYWZ0ZXIgcmVuZGVyaW5nXHJcbiAqIEByZXR1cm5zIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5Db21wb25lbnQgfCBudWxsfSBUaGUgcm9vdCBjb21wb25lbnQgcmVmZXJlbmNlIG9yIG51bGxcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiByZW5kZXIodm5vZGUsIHBhcmVudCwgY2FsbGJhY2spIHtcclxuXHQvLyBSZWFjdCBkZXN0cm95cyBhbnkgZXhpc3RpbmcgRE9NIG5vZGVzLCBzZWUgIzE3MjdcclxuXHQvLyAuLi5idXQgb25seSBvbiB0aGUgZmlyc3QgcmVuZGVyLCBzZWUgIzE4MjhcclxuXHRpZiAocGFyZW50Ll9jaGlsZHJlbiA9PSBudWxsKSB7XHJcblx0XHRwYXJlbnQudGV4dENvbnRlbnQgPSAnJztcclxuXHR9XHJcblxyXG5cdHByZWFjdFJlbmRlcih2bm9kZSwgcGFyZW50KTtcclxuXHRpZiAodHlwZW9mIGNhbGxiYWNrID09ICdmdW5jdGlvbicpIGNhbGxiYWNrKCk7XHJcblxyXG5cdHJldHVybiB2bm9kZSA/IHZub2RlLl9jb21wb25lbnQgOiBudWxsO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaHlkcmF0ZSh2bm9kZSwgcGFyZW50LCBjYWxsYmFjaykge1xyXG5cdHByZWFjdEh5ZHJhdGUodm5vZGUsIHBhcmVudCk7XHJcblx0aWYgKHR5cGVvZiBjYWxsYmFjayA9PSAnZnVuY3Rpb24nKSBjYWxsYmFjaygpO1xyXG5cclxuXHRyZXR1cm4gdm5vZGUgPyB2bm9kZS5fY29tcG9uZW50IDogbnVsbDtcclxufVxyXG5cclxubGV0IG9sZEV2ZW50SG9vayA9IG9wdGlvbnMuZXZlbnQ7XHJcbm9wdGlvbnMuZXZlbnQgPSBlID0+IHtcclxuXHRpZiAob2xkRXZlbnRIb29rKSBlID0gb2xkRXZlbnRIb29rKGUpO1xyXG5cdGUucGVyc2lzdCA9IGVtcHR5O1xyXG5cdGUuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSBpc1Byb3BhZ2F0aW9uU3RvcHBlZDtcclxuXHRlLmlzRGVmYXVsdFByZXZlbnRlZCA9IGlzRGVmYXVsdFByZXZlbnRlZDtcclxuXHRyZXR1cm4gKGUubmF0aXZlRXZlbnQgPSBlKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIGVtcHR5KCkge31cclxuXHJcbmZ1bmN0aW9uIGlzUHJvcGFnYXRpb25TdG9wcGVkKCkge1xyXG5cdHJldHVybiB0aGlzLmNhbmNlbEJ1YmJsZTtcclxufVxyXG5cclxuZnVuY3Rpb24gaXNEZWZhdWx0UHJldmVudGVkKCkge1xyXG5cdHJldHVybiB0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ7XHJcbn1cclxuXHJcbmxldCBjbGFzc05hbWVEZXNjcmlwdG9yID0ge1xyXG5cdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuXHRnZXQoKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5jbGFzcztcclxuXHR9XHJcbn07XHJcblxyXG5sZXQgb2xkVk5vZGVIb29rID0gb3B0aW9ucy52bm9kZTtcclxub3B0aW9ucy52bm9kZSA9IHZub2RlID0+IHtcclxuXHRsZXQgdHlwZSA9IHZub2RlLnR5cGU7XHJcblx0bGV0IHByb3BzID0gdm5vZGUucHJvcHM7XHJcblx0bGV0IG5vcm1hbGl6ZWRQcm9wcyA9IHByb3BzO1xyXG5cclxuXHQvLyBvbmx5IG5vcm1hbGl6ZSBwcm9wcyBvbiBFbGVtZW50IG5vZGVzXHJcblx0aWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJykge1xyXG5cdFx0Y29uc3Qgbm9uQ3VzdG9tRWxlbWVudCA9IHR5cGUuaW5kZXhPZignLScpID09PSAtMTtcclxuXHRcdG5vcm1hbGl6ZWRQcm9wcyA9IHt9O1xyXG5cclxuXHRcdGZvciAobGV0IGkgaW4gcHJvcHMpIHtcclxuXHRcdFx0bGV0IHZhbHVlID0gcHJvcHNbaV07XHJcblxyXG5cdFx0XHRpZiAoSVNfRE9NICYmIGkgPT09ICdjaGlsZHJlbicgJiYgdHlwZSA9PT0gJ25vc2NyaXB0Jykge1xyXG5cdFx0XHRcdC8vIEVtdWxhdGUgUmVhY3QncyBiZWhhdmlvciBvZiBub3QgcmVuZGVyaW5nIHRoZSBjb250ZW50cyBvZiBub3NjcmlwdCB0YWdzIG9uIHRoZSBjbGllbnQuXHJcblx0XHRcdFx0Y29udGludWU7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiAoaSA9PT0gJ3ZhbHVlJyAmJiAnZGVmYXVsdFZhbHVlJyBpbiBwcm9wcyAmJiB2YWx1ZSA9PSBudWxsKSB7XHJcblx0XHRcdFx0Ly8gU2tpcCBhcHBseWluZyB2YWx1ZSBpZiBpdCBpcyBudWxsL3VuZGVmaW5lZCBhbmQgd2UgYWxyZWFkeSBzZXRcclxuXHRcdFx0XHQvLyBhIGRlZmF1bHQgdmFsdWVcclxuXHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0fSBlbHNlIGlmIChcclxuXHRcdFx0XHRpID09PSAnZGVmYXVsdFZhbHVlJyAmJlxyXG5cdFx0XHRcdCd2YWx1ZScgaW4gcHJvcHMgJiZcclxuXHRcdFx0XHRwcm9wcy52YWx1ZSA9PSBudWxsXHJcblx0XHRcdCkge1xyXG5cdFx0XHRcdC8vIGBkZWZhdWx0VmFsdWVgIGlzIHRyZWF0ZWQgYXMgYSBmYWxsYmFjayBgdmFsdWVgIHdoZW4gYSB2YWx1ZSBwcm9wIGlzIHByZXNlbnQgYnV0IG51bGwvdW5kZWZpbmVkLlxyXG5cdFx0XHRcdC8vIGBkZWZhdWx0VmFsdWVgIGZvciBFbGVtZW50cyB3aXRoIG5vIHZhbHVlIHByb3AgaXMgdGhlIHNhbWUgYXMgdGhlIERPTSBkZWZhdWx0VmFsdWUgcHJvcGVydHkuXHJcblx0XHRcdFx0aSA9ICd2YWx1ZSc7XHJcblx0XHRcdH0gZWxzZSBpZiAoaSA9PT0gJ2Rvd25sb2FkJyAmJiB2YWx1ZSA9PT0gdHJ1ZSkge1xyXG5cdFx0XHRcdC8vIENhbGxpbmcgYHNldEF0dHJpYnV0ZWAgd2l0aCBhIHRydXRoeSB2YWx1ZSB3aWxsIGxlYWQgdG8gaXQgYmVpbmdcclxuXHRcdFx0XHQvLyBwYXNzZWQgYXMgYSBzdHJpbmdpZmllZCB2YWx1ZSwgZS5nLiBgZG93bmxvYWQ9XCJ0cnVlXCJgLiBSZWFjdFxyXG5cdFx0XHRcdC8vIGNvbnZlcnRzIGl0IHRvIGFuIGVtcHR5IHN0cmluZyBpbnN0ZWFkLCBvdGhlcndpc2UgdGhlIGF0dHJpYnV0ZVxyXG5cdFx0XHRcdC8vIHZhbHVlIHdpbGwgYmUgdXNlZCBhcyB0aGUgZmlsZSBuYW1lIGFuZCB0aGUgZmlsZSB3aWxsIGJlIGNhbGxlZFxyXG5cdFx0XHRcdC8vIFwidHJ1ZVwiIHVwb24gZG93bmxvYWRpbmcgaXQuXHJcblx0XHRcdFx0dmFsdWUgPSAnJztcclxuXHRcdFx0fSBlbHNlIGlmICgvb25kb3VibGVjbGljay9pLnRlc3QoaSkpIHtcclxuXHRcdFx0XHRpID0gJ29uZGJsY2xpY2snO1xyXG5cdFx0XHR9IGVsc2UgaWYgKFxyXG5cdFx0XHRcdC9eb25jaGFuZ2UodGV4dGFyZWF8aW5wdXQpL2kudGVzdChpICsgdHlwZSkgJiZcclxuXHRcdFx0XHQhb25DaGFuZ2VJbnB1dFR5cGUocHJvcHMudHlwZSlcclxuXHRcdFx0KSB7XHJcblx0XHRcdFx0aSA9ICdvbmlucHV0JztcclxuXHRcdFx0fSBlbHNlIGlmICgvXm9uZm9jdXMkL2kudGVzdChpKSkge1xyXG5cdFx0XHRcdGkgPSAnb25mb2N1c2luJztcclxuXHRcdFx0fSBlbHNlIGlmICgvXm9uYmx1ciQvaS50ZXN0KGkpKSB7XHJcblx0XHRcdFx0aSA9ICdvbmZvY3Vzb3V0JztcclxuXHRcdFx0fSBlbHNlIGlmICgvXm9uKEFuaXxUcmF8VG91fEJlZm9yZUlucCkvLnRlc3QoaSkpIHtcclxuXHRcdFx0XHRpID0gaS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHR9IGVsc2UgaWYgKG5vbkN1c3RvbUVsZW1lbnQgJiYgQ0FNRUxfUFJPUFMudGVzdChpKSkge1xyXG5cdFx0XHRcdGkgPSBpLnJlcGxhY2UoL1tBLVowLTldLywgJy0kJicpLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRcdH0gZWxzZSBpZiAodmFsdWUgPT09IG51bGwpIHtcclxuXHRcdFx0XHR2YWx1ZSA9IHVuZGVmaW5lZDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0bm9ybWFsaXplZFByb3BzW2ldID0gdmFsdWU7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQWRkIHN1cHBvcnQgZm9yIGFycmF5IHNlbGVjdCB2YWx1ZXM6IDxzZWxlY3QgbXVsdGlwbGUgdmFsdWU9e1tdfSAvPlxyXG5cdFx0aWYgKFxyXG5cdFx0XHR0eXBlID09ICdzZWxlY3QnICYmXHJcblx0XHRcdG5vcm1hbGl6ZWRQcm9wcy5tdWx0aXBsZSAmJlxyXG5cdFx0XHRBcnJheS5pc0FycmF5KG5vcm1hbGl6ZWRQcm9wcy52YWx1ZSlcclxuXHRcdCkge1xyXG5cdFx0XHQvLyBmb3JFYWNoKCkgYWx3YXlzIHJldHVybnMgdW5kZWZpbmVkLCB3aGljaCB3ZSBhYnVzZSBoZXJlIHRvIHVuc2V0IHRoZSB2YWx1ZSBwcm9wLlxyXG5cdFx0XHRub3JtYWxpemVkUHJvcHMudmFsdWUgPSB0b0NoaWxkQXJyYXkocHJvcHMuY2hpbGRyZW4pLmZvckVhY2goY2hpbGQgPT4ge1xyXG5cdFx0XHRcdGNoaWxkLnByb3BzLnNlbGVjdGVkID1cclxuXHRcdFx0XHRcdG5vcm1hbGl6ZWRQcm9wcy52YWx1ZS5pbmRleE9mKGNoaWxkLnByb3BzLnZhbHVlKSAhPSAtMTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQWRkaW5nIHN1cHBvcnQgZm9yIGRlZmF1bHRWYWx1ZSBpbiBzZWxlY3QgdGFnXHJcblx0XHRpZiAodHlwZSA9PSAnc2VsZWN0JyAmJiBub3JtYWxpemVkUHJvcHMuZGVmYXVsdFZhbHVlICE9IG51bGwpIHtcclxuXHRcdFx0bm9ybWFsaXplZFByb3BzLnZhbHVlID0gdG9DaGlsZEFycmF5KHByb3BzLmNoaWxkcmVuKS5mb3JFYWNoKGNoaWxkID0+IHtcclxuXHRcdFx0XHRpZiAobm9ybWFsaXplZFByb3BzLm11bHRpcGxlKSB7XHJcblx0XHRcdFx0XHRjaGlsZC5wcm9wcy5zZWxlY3RlZCA9XHJcblx0XHRcdFx0XHRcdG5vcm1hbGl6ZWRQcm9wcy5kZWZhdWx0VmFsdWUuaW5kZXhPZihjaGlsZC5wcm9wcy52YWx1ZSkgIT0gLTE7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGNoaWxkLnByb3BzLnNlbGVjdGVkID1cclxuXHRcdFx0XHRcdFx0bm9ybWFsaXplZFByb3BzLmRlZmF1bHRWYWx1ZSA9PSBjaGlsZC5wcm9wcy52YWx1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZub2RlLnByb3BzID0gbm9ybWFsaXplZFByb3BzO1xyXG5cclxuXHRcdGlmIChwcm9wcy5jbGFzcyAhPSBwcm9wcy5jbGFzc05hbWUpIHtcclxuXHRcdFx0Y2xhc3NOYW1lRGVzY3JpcHRvci5lbnVtZXJhYmxlID0gJ2NsYXNzTmFtZScgaW4gcHJvcHM7XHJcblx0XHRcdGlmIChwcm9wcy5jbGFzc05hbWUgIT0gbnVsbCkgbm9ybWFsaXplZFByb3BzLmNsYXNzID0gcHJvcHMuY2xhc3NOYW1lO1xyXG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobm9ybWFsaXplZFByb3BzLCAnY2xhc3NOYW1lJywgY2xhc3NOYW1lRGVzY3JpcHRvcik7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHR2bm9kZS4kJHR5cGVvZiA9IFJFQUNUX0VMRU1FTlRfVFlQRTtcclxuXHJcblx0aWYgKG9sZFZOb2RlSG9vaykgb2xkVk5vZGVIb29rKHZub2RlKTtcclxufTtcclxuXHJcbi8vIE9ubHkgbmVlZGVkIGZvciByZWFjdC1yZWxheVxyXG5sZXQgY3VycmVudENvbXBvbmVudDtcclxuY29uc3Qgb2xkQmVmb3JlUmVuZGVyID0gb3B0aW9ucy5fcmVuZGVyO1xyXG5vcHRpb25zLl9yZW5kZXIgPSBmdW5jdGlvbih2bm9kZSkge1xyXG5cdGlmIChvbGRCZWZvcmVSZW5kZXIpIHtcclxuXHRcdG9sZEJlZm9yZVJlbmRlcih2bm9kZSk7XHJcblx0fVxyXG5cdGN1cnJlbnRDb21wb25lbnQgPSB2bm9kZS5fY29tcG9uZW50O1xyXG59O1xyXG5cclxuLy8gVGhpcyBpcyBhIHZlcnkgdmVyeSBwcml2YXRlIGludGVybmFsIGZ1bmN0aW9uIGZvciBSZWFjdCBpdFxyXG4vLyBpcyB1c2VkIHRvIHNvcnQtb2YgZG8gcnVudGltZSBkZXBlbmRlbmN5IGluamVjdGlvbi4gU28gZmFyXHJcbi8vIG9ubHkgYHJlYWN0LXJlbGF5YCBtYWtlcyB1c2Ugb2YgaXQuIEl0IHVzZXMgaXQgdG8gcmVhZCB0aGVcclxuLy8gY29udGV4dCB2YWx1ZS5cclxuZXhwb3J0IGNvbnN0IF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEID0ge1xyXG5cdFJlYWN0Q3VycmVudERpc3BhdGNoZXI6IHtcclxuXHRcdGN1cnJlbnQ6IHtcclxuXHRcdFx0cmVhZENvbnRleHQoY29udGV4dCkge1xyXG5cdFx0XHRcdHJldHVybiBjdXJyZW50Q29tcG9uZW50Ll9nbG9iYWxDb250ZXh0W2NvbnRleHQuX2lkXS5wcm9wcy52YWx1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufTtcclxuIiwgImltcG9ydCB7XHJcblx0Y3JlYXRlRWxlbWVudCxcclxuXHRyZW5kZXIgYXMgcHJlYWN0UmVuZGVyLFxyXG5cdGNsb25lRWxlbWVudCBhcyBwcmVhY3RDbG9uZUVsZW1lbnQsXHJcblx0Y3JlYXRlUmVmLFxyXG5cdENvbXBvbmVudCxcclxuXHRjcmVhdGVDb250ZXh0LFxyXG5cdEZyYWdtZW50XHJcbn0gZnJvbSAncHJlYWN0JztcclxuaW1wb3J0IHtcclxuXHR1c2VTdGF0ZSxcclxuXHR1c2VSZWR1Y2VyLFxyXG5cdHVzZUVmZmVjdCxcclxuXHR1c2VMYXlvdXRFZmZlY3QsXHJcblx0dXNlUmVmLFxyXG5cdHVzZUltcGVyYXRpdmVIYW5kbGUsXHJcblx0dXNlTWVtbyxcclxuXHR1c2VDYWxsYmFjayxcclxuXHR1c2VDb250ZXh0LFxyXG5cdHVzZURlYnVnVmFsdWVcclxufSBmcm9tICdwcmVhY3QvaG9va3MnO1xyXG5pbXBvcnQgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAnLi9QdXJlQ29tcG9uZW50JztcclxuaW1wb3J0IHsgbWVtbyB9IGZyb20gJy4vbWVtbyc7XHJcbmltcG9ydCB7IGZvcndhcmRSZWYgfSBmcm9tICcuL2ZvcndhcmRSZWYnO1xyXG5pbXBvcnQgeyBDaGlsZHJlbiB9IGZyb20gJy4vQ2hpbGRyZW4nO1xyXG5pbXBvcnQgeyBTdXNwZW5zZSwgbGF6eSB9IGZyb20gJy4vc3VzcGVuc2UnO1xyXG5pbXBvcnQgeyBTdXNwZW5zZUxpc3QgfSBmcm9tICcuL3N1c3BlbnNlLWxpc3QnO1xyXG5pbXBvcnQgeyBjcmVhdGVQb3J0YWwgfSBmcm9tICcuL3BvcnRhbHMnO1xyXG5pbXBvcnQge1xyXG5cdGh5ZHJhdGUsXHJcblx0cmVuZGVyLFxyXG5cdFJFQUNUX0VMRU1FTlRfVFlQRSxcclxuXHRfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRFxyXG59IGZyb20gJy4vcmVuZGVyJztcclxuXHJcbmNvbnN0IHZlcnNpb24gPSAnMTcuMC4yJzsgLy8gdHJpY2sgbGlicmFyaWVzIHRvIHRoaW5rIHdlIGFyZSByZWFjdFxyXG5cclxuLyoqXHJcbiAqIExlZ2FjeSB2ZXJzaW9uIG9mIGNyZWF0ZUVsZW1lbnQuXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuVk5vZGVbXCJ0eXBlXCJdfSB0eXBlIFRoZSBub2RlIG5hbWUgb3IgQ29tcG9uZW50IGNvbnN0cnVjdG9yXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVGYWN0b3J5KHR5cGUpIHtcclxuXHRyZXR1cm4gY3JlYXRlRWxlbWVudC5iaW5kKG51bGwsIHR5cGUpO1xyXG59XHJcblxyXG4vKipcclxuICogQ2hlY2sgaWYgdGhlIHBhc3NlZCBlbGVtZW50IGlzIGEgdmFsaWQgKHApcmVhY3Qgbm9kZS5cclxuICogQHBhcmFtIHsqfSBlbGVtZW50IFRoZSBlbGVtZW50IHRvIGNoZWNrXHJcbiAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gKi9cclxuZnVuY3Rpb24gaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkge1xyXG5cdHJldHVybiAhIWVsZW1lbnQgJiYgZWxlbWVudC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xyXG59XHJcblxyXG4vKipcclxuICogV3JhcCBgY2xvbmVFbGVtZW50YCB0byBhYm9ydCBpZiB0aGUgcGFzc2VkIGVsZW1lbnQgaXMgbm90IGEgdmFsaWQgZWxlbWVudCBhbmQgYXBwbHlcclxuICogYWxsIHZub2RlIG5vcm1hbGl6YXRpb25zLlxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlZOb2RlfSBlbGVtZW50IFRoZSB2bm9kZSB0byBjbG9uZVxyXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHMgUHJvcHMgdG8gYWRkIHdoZW4gY2xvbmluZ1xyXG4gKiBAcGFyYW0ge0FycmF5PGltcG9ydCgnLi9pbnRlcm5hbCcpLkNvbXBvbmVudENoaWxkcmVuPn0gcmVzdCBPcHRpb25hbCBjb21wb25lbnQgY2hpbGRyZW5cclxuICovXHJcbmZ1bmN0aW9uIGNsb25lRWxlbWVudChlbGVtZW50KSB7XHJcblx0aWYgKCFpc1ZhbGlkRWxlbWVudChlbGVtZW50KSkgcmV0dXJuIGVsZW1lbnQ7XHJcblx0cmV0dXJuIHByZWFjdENsb25lRWxlbWVudC5hcHBseShudWxsLCBhcmd1bWVudHMpO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIGEgY29tcG9uZW50IHRyZWUgZnJvbSB0aGUgRE9NLCBpbmNsdWRpbmcgc3RhdGUgYW5kIGV2ZW50IGhhbmRsZXJzLlxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlByZWFjdEVsZW1lbnR9IGNvbnRhaW5lclxyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICovXHJcbmZ1bmN0aW9uIHVubW91bnRDb21wb25lbnRBdE5vZGUoY29udGFpbmVyKSB7XHJcblx0aWYgKGNvbnRhaW5lci5fY2hpbGRyZW4pIHtcclxuXHRcdHByZWFjdFJlbmRlcihudWxsLCBjb250YWluZXIpO1xyXG5cdFx0cmV0dXJuIHRydWU7XHJcblx0fVxyXG5cdHJldHVybiBmYWxzZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCB0aGUgbWF0Y2hpbmcgRE9NIG5vZGUgZm9yIGEgY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuQ29tcG9uZW50fSBjb21wb25lbnRcclxuICogQHJldHVybnMge2ltcG9ydCgnLi9pbnRlcm5hbCcpLlByZWFjdEVsZW1lbnQgfCBudWxsfVxyXG4gKi9cclxuZnVuY3Rpb24gZmluZERPTU5vZGUoY29tcG9uZW50KSB7XHJcblx0cmV0dXJuIChcclxuXHRcdChjb21wb25lbnQgJiZcclxuXHRcdFx0KGNvbXBvbmVudC5iYXNlIHx8IChjb21wb25lbnQubm9kZVR5cGUgPT09IDEgJiYgY29tcG9uZW50KSkpIHx8XHJcblx0XHRudWxsXHJcblx0KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIERlcHJlY2F0ZWQgd2F5IHRvIGNvbnRyb2wgYmF0Y2hlZCByZW5kZXJpbmcgaW5zaWRlIHRoZSByZWNvbmNpbGVyLCBidXQgd2VcclxuICogYWxyZWFkeSBzY2hlZHVsZSBpbiBiYXRjaGVzIGluc2lkZSBvdXIgcmVuZGVyaW5nIGNvZGVcclxuICogQHRlbXBsYXRlIEFyZ1xyXG4gKiBAcGFyYW0geyhhcmc6IEFyZykgPT4gdm9pZH0gY2FsbGJhY2sgZnVuY3Rpb24gdGhhdCB0cmlnZ2VycyB0aGUgdXBkYXRlZFxyXG4gKiBAcGFyYW0ge0FyZ30gW2FyZ10gT3B0aW9uYWwgYXJndW1lbnQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIHRoZSBjYWxsYmFja1xyXG4gKi9cclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxyXG5jb25zdCB1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyA9IChjYWxsYmFjaywgYXJnKSA9PiBjYWxsYmFjayhhcmcpO1xyXG5cclxuLyoqXHJcbiAqIEluIFJlYWN0LCBgZmx1c2hTeW5jYCBmbHVzaGVzIHRoZSBlbnRpcmUgdHJlZSBhbmQgZm9yY2VzIGEgcmVyZW5kZXIuIEl0J3NcclxuICogaW1wbG1lbnRlZCBoZXJlIGFzIGEgbm8tb3AuXHJcbiAqIEB0ZW1wbGF0ZSBBcmdcclxuICogQHRlbXBsYXRlIFJlc3VsdFxyXG4gKiBAcGFyYW0geyhhcmc6IEFyZykgPT4gUmVzdWx0fSBjYWxsYmFjayBmdW5jdGlvbiB0aGF0IHJ1bnMgYmVmb3JlIHRoZSBmbHVzaFxyXG4gKiBAcGFyYW0ge0FyZ30gW2FyZ10gT3B0aW9uYWwgYXJ1Z21lbnQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIHRoZSBjYWxsYmFja1xyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuY29uc3QgZmx1c2hTeW5jID0gKGNhbGxiYWNrLCBhcmcpID0+IGNhbGxiYWNrKGFyZyk7XHJcblxyXG4vKipcclxuICogU3RyaWN0IE1vZGUgaXMgbm90IGltcGxlbWVudGVkIGluIFByZWFjdCwgc28gd2UgcHJvdmlkZSBhIHN0YW5kLWluIGZvciBpdFxyXG4gKiB0aGF0IGp1c3QgcmVuZGVycyBpdHMgY2hpbGRyZW4gd2l0aG91dCBpbXBvc2luZyBhbnkgcmVzdHJpY3Rpb25zLlxyXG4gKi9cclxuY29uc3QgU3RyaWN0TW9kZSA9IEZyYWdtZW50O1xyXG5cclxuZXhwb3J0ICogZnJvbSAncHJlYWN0L2hvb2tzJztcclxuZXhwb3J0IHtcclxuXHR2ZXJzaW9uLFxyXG5cdENoaWxkcmVuLFxyXG5cdHJlbmRlcixcclxuXHRoeWRyYXRlLFxyXG5cdHVubW91bnRDb21wb25lbnRBdE5vZGUsXHJcblx0Y3JlYXRlUG9ydGFsLFxyXG5cdGNyZWF0ZUVsZW1lbnQsXHJcblx0Y3JlYXRlQ29udGV4dCxcclxuXHRjcmVhdGVGYWN0b3J5LFxyXG5cdGNsb25lRWxlbWVudCxcclxuXHRjcmVhdGVSZWYsXHJcblx0RnJhZ21lbnQsXHJcblx0aXNWYWxpZEVsZW1lbnQsXHJcblx0ZmluZERPTU5vZGUsXHJcblx0Q29tcG9uZW50LFxyXG5cdFB1cmVDb21wb25lbnQsXHJcblx0bWVtbyxcclxuXHRmb3J3YXJkUmVmLFxyXG5cdGZsdXNoU3luYyxcclxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2FtZWxjYXNlXHJcblx0dW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMsXHJcblx0U3RyaWN0TW9kZSxcclxuXHRTdXNwZW5zZSxcclxuXHRTdXNwZW5zZUxpc3QsXHJcblx0bGF6eSxcclxuXHRfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRFxyXG59O1xyXG5cclxuLy8gUmVhY3QgY29waWVzIHRoZSBuYW1lZCBleHBvcnRzIHRvIHRoZSBkZWZhdWx0IG9uZS5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdHVzZVN0YXRlLFxyXG5cdHVzZVJlZHVjZXIsXHJcblx0dXNlRWZmZWN0LFxyXG5cdHVzZUxheW91dEVmZmVjdCxcclxuXHR1c2VSZWYsXHJcblx0dXNlSW1wZXJhdGl2ZUhhbmRsZSxcclxuXHR1c2VNZW1vLFxyXG5cdHVzZUNhbGxiYWNrLFxyXG5cdHVzZUNvbnRleHQsXHJcblx0dXNlRGVidWdWYWx1ZSxcclxuXHR2ZXJzaW9uLFxyXG5cdENoaWxkcmVuLFxyXG5cdHJlbmRlcixcclxuXHRoeWRyYXRlLFxyXG5cdHVubW91bnRDb21wb25lbnRBdE5vZGUsXHJcblx0Y3JlYXRlUG9ydGFsLFxyXG5cdGNyZWF0ZUVsZW1lbnQsXHJcblx0Y3JlYXRlQ29udGV4dCxcclxuXHRjcmVhdGVGYWN0b3J5LFxyXG5cdGNsb25lRWxlbWVudCxcclxuXHRjcmVhdGVSZWYsXHJcblx0RnJhZ21lbnQsXHJcblx0aXNWYWxpZEVsZW1lbnQsXHJcblx0ZmluZERPTU5vZGUsXHJcblx0Q29tcG9uZW50LFxyXG5cdFB1cmVDb21wb25lbnQsXHJcblx0bWVtbyxcclxuXHRmb3J3YXJkUmVmLFxyXG5cdGZsdXNoU3luYyxcclxuXHR1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyxcclxuXHRTdHJpY3RNb2RlLFxyXG5cdFN1c3BlbnNlLFxyXG5cdFN1c3BlbnNlTGlzdCxcclxuXHRsYXp5LFxyXG5cdF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEXHJcbn07XHJcbiIsICJpbXBvcnR7b3B0aW9ucyBhcyBufWZyb21cInByZWFjdFwiO3ZhciB0LHUscixvPTAsaT1bXSxjPW4uX19iLGY9bi5fX3IsZT1uLmRpZmZlZCxhPW4uX19jLHY9bi51bm1vdW50O2Z1bmN0aW9uIG0odCxyKXtuLl9faCYmbi5fX2godSx0LG98fHIpLG89MDt2YXIgaT11Ll9fSHx8KHUuX19IPXtfXzpbXSxfX2g6W119KTtyZXR1cm4gdD49aS5fXy5sZW5ndGgmJmkuX18ucHVzaCh7fSksaS5fX1t0XX1mdW5jdGlvbiBsKG4pe3JldHVybiBvPTEscCh3LG4pfWZ1bmN0aW9uIHAobixyLG8pe3ZhciBpPW0odCsrLDIpO3JldHVybiBpLnQ9bixpLl9fY3x8KGkuX189W28/byhyKTp3KHZvaWQgMCxyKSxmdW5jdGlvbihuKXt2YXIgdD1pLnQoaS5fX1swXSxuKTtpLl9fWzBdIT09dCYmKGkuX189W3QsaS5fX1sxXV0saS5fX2Muc2V0U3RhdGUoe30pKX1dLGkuX19jPXUpLGkuX199ZnVuY3Rpb24geShyLG8pe3ZhciBpPW0odCsrLDMpOyFuLl9fcyYmayhpLl9fSCxvKSYmKGkuX189cixpLl9fSD1vLHUuX19ILl9faC5wdXNoKGkpKX1mdW5jdGlvbiBoKHIsbyl7dmFyIGk9bSh0KyssNCk7IW4uX19zJiZrKGkuX19ILG8pJiYoaS5fXz1yLGkuX19IPW8sdS5fX2gucHVzaChpKSl9ZnVuY3Rpb24gcyhuKXtyZXR1cm4gbz01LGQoZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpufX0sW10pfWZ1bmN0aW9uIF8obix0LHUpe289NixoKGZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uKHQoKSk6biYmKG4uY3VycmVudD10KCkpfSxudWxsPT11P3U6dS5jb25jYXQobikpfWZ1bmN0aW9uIGQobix1KXt2YXIgcj1tKHQrKyw3KTtyZXR1cm4gayhyLl9fSCx1KSYmKHIuX189bigpLHIuX19IPXUsci5fX2g9biksci5fX31mdW5jdGlvbiBBKG4sdCl7cmV0dXJuIG89OCxkKGZ1bmN0aW9uKCl7cmV0dXJuIG59LHQpfWZ1bmN0aW9uIEYobil7dmFyIHI9dS5jb250ZXh0W24uX19jXSxvPW0odCsrLDkpO3JldHVybiBvLmM9bixyPyhudWxsPT1vLl9fJiYoby5fXz0hMCxyLnN1Yih1KSksci5wcm9wcy52YWx1ZSk6bi5fX31mdW5jdGlvbiBUKHQsdSl7bi51c2VEZWJ1Z1ZhbHVlJiZuLnVzZURlYnVnVmFsdWUodT91KHQpOnQpfWZ1bmN0aW9uIHEobil7dmFyIHI9bSh0KyssMTApLG89bCgpO3JldHVybiByLl9fPW4sdS5jb21wb25lbnREaWRDYXRjaHx8KHUuY29tcG9uZW50RGlkQ2F0Y2g9ZnVuY3Rpb24obil7ci5fXyYmci5fXyhuKSxvWzFdKG4pfSksW29bMF0sZnVuY3Rpb24oKXtvWzFdKHZvaWQgMCl9XX1mdW5jdGlvbiB4KCl7dmFyIHQ7Zm9yKGkuc29ydChmdW5jdGlvbihuLHQpe3JldHVybiBuLl9fdi5fX2ItdC5fX3YuX19ifSk7dD1pLnBvcCgpOylpZih0Ll9fUCl0cnl7dC5fX0guX19oLmZvckVhY2goZyksdC5fX0guX19oLmZvckVhY2goaiksdC5fX0guX19oPVtdfWNhdGNoKHUpe3QuX19ILl9faD1bXSxuLl9fZSh1LHQuX192KX19bi5fX2I9ZnVuY3Rpb24obil7dT1udWxsLGMmJmMobil9LG4uX19yPWZ1bmN0aW9uKG4pe2YmJmYobiksdD0wO3ZhciByPSh1PW4uX19jKS5fX0g7ciYmKHIuX19oLmZvckVhY2goZyksci5fX2guZm9yRWFjaChqKSxyLl9faD1bXSl9LG4uZGlmZmVkPWZ1bmN0aW9uKHQpe2UmJmUodCk7dmFyIG89dC5fX2M7byYmby5fX0gmJm8uX19ILl9faC5sZW5ndGgmJigxIT09aS5wdXNoKG8pJiZyPT09bi5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fCgocj1uLnJlcXVlc3RBbmltYXRpb25GcmFtZSl8fGZ1bmN0aW9uKG4pe3ZhciB0LHU9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQociksYiYmY2FuY2VsQW5pbWF0aW9uRnJhbWUodCksc2V0VGltZW91dChuKX0scj1zZXRUaW1lb3V0KHUsMTAwKTtiJiYodD1yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodSkpfSkoeCkpLHU9bnVsbH0sbi5fX2M9ZnVuY3Rpb24odCx1KXt1LnNvbWUoZnVuY3Rpb24odCl7dHJ5e3QuX19oLmZvckVhY2goZyksdC5fX2g9dC5fX2guZmlsdGVyKGZ1bmN0aW9uKG4pe3JldHVybiFuLl9ffHxqKG4pfSl9Y2F0Y2gocil7dS5zb21lKGZ1bmN0aW9uKG4pe24uX19oJiYobi5fX2g9W10pfSksdT1bXSxuLl9fZShyLHQuX192KX19KSxhJiZhKHQsdSl9LG4udW5tb3VudD1mdW5jdGlvbih0KXt2JiZ2KHQpO3ZhciB1LHI9dC5fX2M7ciYmci5fX0gmJihyLl9fSC5fXy5mb3JFYWNoKGZ1bmN0aW9uKG4pe3RyeXtnKG4pfWNhdGNoKG4pe3U9bn19KSx1JiZuLl9fZSh1LHIuX192KSl9O3ZhciBiPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZTtmdW5jdGlvbiBnKG4pe3ZhciB0PXUscj1uLl9fYztcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiYobi5fX2M9dm9pZCAwLHIoKSksdT10fWZ1bmN0aW9uIGoobil7dmFyIHQ9dTtuLl9fYz1uLl9fKCksdT10fWZ1bmN0aW9uIGsobix0KXtyZXR1cm4hbnx8bi5sZW5ndGghPT10Lmxlbmd0aHx8dC5zb21lKGZ1bmN0aW9uKHQsdSl7cmV0dXJuIHQhPT1uW3VdfSl9ZnVuY3Rpb24gdyhuLHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dChuKTp0fWV4cG9ydHtsIGFzIHVzZVN0YXRlLHAgYXMgdXNlUmVkdWNlcix5IGFzIHVzZUVmZmVjdCxoIGFzIHVzZUxheW91dEVmZmVjdCxzIGFzIHVzZVJlZixfIGFzIHVzZUltcGVyYXRpdmVIYW5kbGUsZCBhcyB1c2VNZW1vLEEgYXMgdXNlQ2FsbGJhY2ssRiBhcyB1c2VDb250ZXh0LFQgYXMgdXNlRGVidWdWYWx1ZSxxIGFzIHVzZUVycm9yQm91bmRhcnl9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG9va3MubW9kdWxlLmpzLm1hcFxuIiwgImltcG9ydCB7IG9wdGlvbnMgfSBmcm9tICdwcmVhY3QnO1xyXG5cclxuLyoqIEB0eXBlIHtudW1iZXJ9ICovXHJcbmxldCBjdXJyZW50SW5kZXg7XHJcblxyXG4vKiogQHR5cGUge2ltcG9ydCgnLi9pbnRlcm5hbCcpLkNvbXBvbmVudH0gKi9cclxubGV0IGN1cnJlbnRDb21wb25lbnQ7XHJcblxyXG4vKiogQHR5cGUge251bWJlcn0gKi9cclxubGV0IGN1cnJlbnRIb29rID0gMDtcclxuXHJcbi8qKiBAdHlwZSB7QXJyYXk8aW1wb3J0KCcuL2ludGVybmFsJykuQ29tcG9uZW50Pn0gKi9cclxubGV0IGFmdGVyUGFpbnRFZmZlY3RzID0gW107XHJcblxyXG5sZXQgb2xkQmVmb3JlRGlmZiA9IG9wdGlvbnMuX2RpZmY7XHJcbmxldCBvbGRCZWZvcmVSZW5kZXIgPSBvcHRpb25zLl9yZW5kZXI7XHJcbmxldCBvbGRBZnRlckRpZmYgPSBvcHRpb25zLmRpZmZlZDtcclxubGV0IG9sZENvbW1pdCA9IG9wdGlvbnMuX2NvbW1pdDtcclxubGV0IG9sZEJlZm9yZVVubW91bnQgPSBvcHRpb25zLnVubW91bnQ7XHJcblxyXG5jb25zdCBSQUZfVElNRU9VVCA9IDEwMDtcclxubGV0IHByZXZSYWY7XHJcblxyXG5vcHRpb25zLl9kaWZmID0gdm5vZGUgPT4ge1xyXG5cdGN1cnJlbnRDb21wb25lbnQgPSBudWxsO1xyXG5cdGlmIChvbGRCZWZvcmVEaWZmKSBvbGRCZWZvcmVEaWZmKHZub2RlKTtcclxufTtcclxuXHJcbm9wdGlvbnMuX3JlbmRlciA9IHZub2RlID0+IHtcclxuXHRpZiAob2xkQmVmb3JlUmVuZGVyKSBvbGRCZWZvcmVSZW5kZXIodm5vZGUpO1xyXG5cclxuXHRjdXJyZW50Q29tcG9uZW50ID0gdm5vZGUuX2NvbXBvbmVudDtcclxuXHRjdXJyZW50SW5kZXggPSAwO1xyXG5cclxuXHRjb25zdCBob29rcyA9IGN1cnJlbnRDb21wb25lbnQuX19ob29rcztcclxuXHRpZiAoaG9va3MpIHtcclxuXHRcdGhvb2tzLl9wZW5kaW5nRWZmZWN0cy5mb3JFYWNoKGludm9rZUNsZWFudXApO1xyXG5cdFx0aG9va3MuX3BlbmRpbmdFZmZlY3RzLmZvckVhY2goaW52b2tlRWZmZWN0KTtcclxuXHRcdGhvb2tzLl9wZW5kaW5nRWZmZWN0cyA9IFtdO1xyXG5cdH1cclxufTtcclxuXHJcbm9wdGlvbnMuZGlmZmVkID0gdm5vZGUgPT4ge1xyXG5cdGlmIChvbGRBZnRlckRpZmYpIG9sZEFmdGVyRGlmZih2bm9kZSk7XHJcblxyXG5cdGNvbnN0IGMgPSB2bm9kZS5fY29tcG9uZW50O1xyXG5cdGlmIChjICYmIGMuX19ob29rcyAmJiBjLl9faG9va3MuX3BlbmRpbmdFZmZlY3RzLmxlbmd0aCkge1xyXG5cdFx0YWZ0ZXJQYWludChhZnRlclBhaW50RWZmZWN0cy5wdXNoKGMpKTtcclxuXHR9XHJcblx0Y3VycmVudENvbXBvbmVudCA9IG51bGw7XHJcbn07XHJcblxyXG5vcHRpb25zLl9jb21taXQgPSAodm5vZGUsIGNvbW1pdFF1ZXVlKSA9PiB7XHJcblx0Y29tbWl0UXVldWUuc29tZShjb21wb25lbnQgPT4ge1xyXG5cdFx0dHJ5IHtcclxuXHRcdFx0Y29tcG9uZW50Ll9yZW5kZXJDYWxsYmFja3MuZm9yRWFjaChpbnZva2VDbGVhbnVwKTtcclxuXHRcdFx0Y29tcG9uZW50Ll9yZW5kZXJDYWxsYmFja3MgPSBjb21wb25lbnQuX3JlbmRlckNhbGxiYWNrcy5maWx0ZXIoY2IgPT5cclxuXHRcdFx0XHRjYi5fdmFsdWUgPyBpbnZva2VFZmZlY3QoY2IpIDogdHJ1ZVxyXG5cdFx0XHQpO1xyXG5cdFx0fSBjYXRjaCAoZSkge1xyXG5cdFx0XHRjb21taXRRdWV1ZS5zb21lKGMgPT4ge1xyXG5cdFx0XHRcdGlmIChjLl9yZW5kZXJDYWxsYmFja3MpIGMuX3JlbmRlckNhbGxiYWNrcyA9IFtdO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0Y29tbWl0UXVldWUgPSBbXTtcclxuXHRcdFx0b3B0aW9ucy5fY2F0Y2hFcnJvcihlLCBjb21wb25lbnQuX3Zub2RlKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0aWYgKG9sZENvbW1pdCkgb2xkQ29tbWl0KHZub2RlLCBjb21taXRRdWV1ZSk7XHJcbn07XHJcblxyXG5vcHRpb25zLnVubW91bnQgPSB2bm9kZSA9PiB7XHJcblx0aWYgKG9sZEJlZm9yZVVubW91bnQpIG9sZEJlZm9yZVVubW91bnQodm5vZGUpO1xyXG5cclxuXHRjb25zdCBjID0gdm5vZGUuX2NvbXBvbmVudDtcclxuXHRpZiAoYyAmJiBjLl9faG9va3MpIHtcclxuXHRcdGxldCBoYXNFcnJvcmVkO1xyXG5cdFx0Yy5fX2hvb2tzLl9saXN0LmZvckVhY2gocyA9PiB7XHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0aW52b2tlQ2xlYW51cChzKTtcclxuXHRcdFx0fSBjYXRjaCAoZSkge1xyXG5cdFx0XHRcdGhhc0Vycm9yZWQgPSBlO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdGlmIChoYXNFcnJvcmVkKSBvcHRpb25zLl9jYXRjaEVycm9yKGhhc0Vycm9yZWQsIGMuX3Zub2RlKTtcclxuXHR9XHJcbn07XHJcblxyXG4vKipcclxuICogR2V0IGEgaG9vaydzIHN0YXRlIGZyb20gdGhlIGN1cnJlbnRDb21wb25lbnRcclxuICogQHBhcmFtIHtudW1iZXJ9IGluZGV4IFRoZSBpbmRleCBvZiB0aGUgaG9vayB0byBnZXRcclxuICogQHBhcmFtIHtudW1iZXJ9IHR5cGUgVGhlIGluZGV4IG9mIHRoZSBob29rIHRvIGdldFxyXG4gKiBAcmV0dXJucyB7YW55fVxyXG4gKi9cclxuZnVuY3Rpb24gZ2V0SG9va1N0YXRlKGluZGV4LCB0eXBlKSB7XHJcblx0aWYgKG9wdGlvbnMuX2hvb2spIHtcclxuXHRcdG9wdGlvbnMuX2hvb2soY3VycmVudENvbXBvbmVudCwgaW5kZXgsIGN1cnJlbnRIb29rIHx8IHR5cGUpO1xyXG5cdH1cclxuXHRjdXJyZW50SG9vayA9IDA7XHJcblxyXG5cdC8vIExhcmdlbHkgaW5zcGlyZWQgYnk6XHJcblx0Ly8gKiBodHRwczovL2dpdGh1Yi5jb20vbWljaGFlbC1rbGVpbi9mdW5jeS5qcy9ibG9iL2Y2YmU3MzQ2OGU2ZWM0NmIwZmY1YWEzY2M0YzliYWY3MmEyOTAyNWEvc3JjL2hvb2tzL2NvcmVfaG9va3MubWpzXHJcblx0Ly8gKiBodHRwczovL2dpdGh1Yi5jb20vbWljaGFlbC1rbGVpbi9mdW5jeS5qcy9ibG9iLzY1MGJlYWE1OGM0M2MzM2E3NDgyMGEzYzk4YjNjNzA3OWNmMmUzMzMvc3JjL3JlbmRlcmVyLm1qc1xyXG5cdC8vIE90aGVyIGltcGxlbWVudGF0aW9ucyB0byBsb29rIGF0OlxyXG5cdC8vICogaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9zL21ub3gwNXFwOFxyXG5cdGNvbnN0IGhvb2tzID1cclxuXHRcdGN1cnJlbnRDb21wb25lbnQuX19ob29rcyB8fFxyXG5cdFx0KGN1cnJlbnRDb21wb25lbnQuX19ob29rcyA9IHtcclxuXHRcdFx0X2xpc3Q6IFtdLFxyXG5cdFx0XHRfcGVuZGluZ0VmZmVjdHM6IFtdXHJcblx0XHR9KTtcclxuXHJcblx0aWYgKGluZGV4ID49IGhvb2tzLl9saXN0Lmxlbmd0aCkge1xyXG5cdFx0aG9va3MuX2xpc3QucHVzaCh7fSk7XHJcblx0fVxyXG5cdHJldHVybiBob29rcy5fbGlzdFtpbmRleF07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9pbmRleCcpLlN0YXRlVXBkYXRlcjxhbnk+fSBbaW5pdGlhbFN0YXRlXVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZVN0YXRlKGluaXRpYWxTdGF0ZSkge1xyXG5cdGN1cnJlbnRIb29rID0gMTtcclxuXHRyZXR1cm4gdXNlUmVkdWNlcihpbnZva2VPclJldHVybiwgaW5pdGlhbFN0YXRlKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2luZGV4JykuUmVkdWNlcjxhbnksIGFueT59IHJlZHVjZXJcclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW5kZXgnKS5TdGF0ZVVwZGF0ZXI8YW55Pn0gaW5pdGlhbFN0YXRlXHJcbiAqIEBwYXJhbSB7KGluaXRpYWxTdGF0ZTogYW55KSA9PiB2b2lkfSBbaW5pdF1cclxuICogQHJldHVybnMge1sgYW55LCAoc3RhdGU6IGFueSkgPT4gdm9pZCBdfVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZVJlZHVjZXIocmVkdWNlciwgaW5pdGlhbFN0YXRlLCBpbml0KSB7XHJcblx0LyoqIEB0eXBlIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5SZWR1Y2VySG9va1N0YXRlfSAqL1xyXG5cdGNvbnN0IGhvb2tTdGF0ZSA9IGdldEhvb2tTdGF0ZShjdXJyZW50SW5kZXgrKywgMik7XHJcblx0aG9va1N0YXRlLl9yZWR1Y2VyID0gcmVkdWNlcjtcclxuXHRpZiAoIWhvb2tTdGF0ZS5fY29tcG9uZW50KSB7XHJcblx0XHRob29rU3RhdGUuX3ZhbHVlID0gW1xyXG5cdFx0XHQhaW5pdCA/IGludm9rZU9yUmV0dXJuKHVuZGVmaW5lZCwgaW5pdGlhbFN0YXRlKSA6IGluaXQoaW5pdGlhbFN0YXRlKSxcclxuXHJcblx0XHRcdGFjdGlvbiA9PiB7XHJcblx0XHRcdFx0Y29uc3QgbmV4dFZhbHVlID0gaG9va1N0YXRlLl9yZWR1Y2VyKGhvb2tTdGF0ZS5fdmFsdWVbMF0sIGFjdGlvbik7XHJcblx0XHRcdFx0aWYgKGhvb2tTdGF0ZS5fdmFsdWVbMF0gIT09IG5leHRWYWx1ZSkge1xyXG5cdFx0XHRcdFx0aG9va1N0YXRlLl92YWx1ZSA9IFtuZXh0VmFsdWUsIGhvb2tTdGF0ZS5fdmFsdWVbMV1dO1xyXG5cdFx0XHRcdFx0aG9va1N0YXRlLl9jb21wb25lbnQuc2V0U3RhdGUoe30pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XTtcclxuXHJcblx0XHRob29rU3RhdGUuX2NvbXBvbmVudCA9IGN1cnJlbnRDb21wb25lbnQ7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gaG9va1N0YXRlLl92YWx1ZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuRWZmZWN0fSBjYWxsYmFja1xyXG4gKiBAcGFyYW0ge2FueVtdfSBhcmdzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlRWZmZWN0KGNhbGxiYWNrLCBhcmdzKSB7XHJcblx0LyoqIEB0eXBlIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5FZmZlY3RIb29rU3RhdGV9ICovXHJcblx0Y29uc3Qgc3RhdGUgPSBnZXRIb29rU3RhdGUoY3VycmVudEluZGV4KyssIDMpO1xyXG5cdGlmICghb3B0aW9ucy5fc2tpcEVmZmVjdHMgJiYgYXJnc0NoYW5nZWQoc3RhdGUuX2FyZ3MsIGFyZ3MpKSB7XHJcblx0XHRzdGF0ZS5fdmFsdWUgPSBjYWxsYmFjaztcclxuXHRcdHN0YXRlLl9hcmdzID0gYXJncztcclxuXHJcblx0XHRjdXJyZW50Q29tcG9uZW50Ll9faG9va3MuX3BlbmRpbmdFZmZlY3RzLnB1c2goc3RhdGUpO1xyXG5cdH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuRWZmZWN0fSBjYWxsYmFja1xyXG4gKiBAcGFyYW0ge2FueVtdfSBhcmdzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlTGF5b3V0RWZmZWN0KGNhbGxiYWNrLCBhcmdzKSB7XHJcblx0LyoqIEB0eXBlIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5FZmZlY3RIb29rU3RhdGV9ICovXHJcblx0Y29uc3Qgc3RhdGUgPSBnZXRIb29rU3RhdGUoY3VycmVudEluZGV4KyssIDQpO1xyXG5cdGlmICghb3B0aW9ucy5fc2tpcEVmZmVjdHMgJiYgYXJnc0NoYW5nZWQoc3RhdGUuX2FyZ3MsIGFyZ3MpKSB7XHJcblx0XHRzdGF0ZS5fdmFsdWUgPSBjYWxsYmFjaztcclxuXHRcdHN0YXRlLl9hcmdzID0gYXJncztcclxuXHJcblx0XHRjdXJyZW50Q29tcG9uZW50Ll9yZW5kZXJDYWxsYmFja3MucHVzaChzdGF0ZSk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXNlUmVmKGluaXRpYWxWYWx1ZSkge1xyXG5cdGN1cnJlbnRIb29rID0gNTtcclxuXHRyZXR1cm4gdXNlTWVtbygoKSA9PiAoeyBjdXJyZW50OiBpbml0aWFsVmFsdWUgfSksIFtdKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZWZcclxuICogQHBhcmFtIHsoKSA9PiBvYmplY3R9IGNyZWF0ZUhhbmRsZVxyXG4gKiBAcGFyYW0ge2FueVtdfSBhcmdzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlSW1wZXJhdGl2ZUhhbmRsZShyZWYsIGNyZWF0ZUhhbmRsZSwgYXJncykge1xyXG5cdGN1cnJlbnRIb29rID0gNjtcclxuXHR1c2VMYXlvdXRFZmZlY3QoXHJcblx0XHQoKSA9PiB7XHJcblx0XHRcdGlmICh0eXBlb2YgcmVmID09ICdmdW5jdGlvbicpIHJlZihjcmVhdGVIYW5kbGUoKSk7XHJcblx0XHRcdGVsc2UgaWYgKHJlZikgcmVmLmN1cnJlbnQgPSBjcmVhdGVIYW5kbGUoKTtcclxuXHRcdH0sXHJcblx0XHRhcmdzID09IG51bGwgPyBhcmdzIDogYXJncy5jb25jYXQocmVmKVxyXG5cdCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0geygpID0+IGFueX0gZmFjdG9yeVxyXG4gKiBAcGFyYW0ge2FueVtdfSBhcmdzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlTWVtbyhmYWN0b3J5LCBhcmdzKSB7XHJcblx0LyoqIEB0eXBlIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5NZW1vSG9va1N0YXRlfSAqL1xyXG5cdGNvbnN0IHN0YXRlID0gZ2V0SG9va1N0YXRlKGN1cnJlbnRJbmRleCsrLCA3KTtcclxuXHRpZiAoYXJnc0NoYW5nZWQoc3RhdGUuX2FyZ3MsIGFyZ3MpKSB7XHJcblx0XHRzdGF0ZS5fdmFsdWUgPSBmYWN0b3J5KCk7XHJcblx0XHRzdGF0ZS5fYXJncyA9IGFyZ3M7XHJcblx0XHRzdGF0ZS5fZmFjdG9yeSA9IGZhY3Rvcnk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gc3RhdGUuX3ZhbHVlO1xyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHsoKSA9PiB2b2lkfSBjYWxsYmFja1xyXG4gKiBAcGFyYW0ge2FueVtdfSBhcmdzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlQ2FsbGJhY2soY2FsbGJhY2ssIGFyZ3MpIHtcclxuXHRjdXJyZW50SG9vayA9IDg7XHJcblx0cmV0dXJuIHVzZU1lbW8oKCkgPT4gY2FsbGJhY2ssIGFyZ3MpO1xyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5QcmVhY3RDb250ZXh0fSBjb250ZXh0XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlQ29udGV4dChjb250ZXh0KSB7XHJcblx0Y29uc3QgcHJvdmlkZXIgPSBjdXJyZW50Q29tcG9uZW50LmNvbnRleHRbY29udGV4dC5faWRdO1xyXG5cdC8vIFdlIGNvdWxkIHNraXAgdGhpcyBjYWxsIGhlcmUsIGJ1dCB0aGFuIHdlJ2Qgbm90IGNhbGxcclxuXHQvLyBgb3B0aW9ucy5faG9va2AuIFdlIG5lZWQgdG8gZG8gdGhhdCBpbiBvcmRlciB0byBtYWtlXHJcblx0Ly8gdGhlIGRldnRvb2xzIGF3YXJlIG9mIHRoaXMgaG9vay5cclxuXHQvKiogQHR5cGUge2ltcG9ydCgnLi9pbnRlcm5hbCcpLkNvbnRleHRIb29rU3RhdGV9ICovXHJcblx0Y29uc3Qgc3RhdGUgPSBnZXRIb29rU3RhdGUoY3VycmVudEluZGV4KyssIDkpO1xyXG5cdC8vIFRoZSBkZXZ0b29scyBuZWVkcyBhY2Nlc3MgdG8gdGhlIGNvbnRleHQgb2JqZWN0IHRvXHJcblx0Ly8gYmUgYWJsZSB0byBwdWxsIG9mIHRoZSBkZWZhdWx0IHZhbHVlIHdoZW4gbm8gcHJvdmlkZXJcclxuXHQvLyBpcyBwcmVzZW50IGluIHRoZSB0cmVlLlxyXG5cdHN0YXRlLl9jb250ZXh0ID0gY29udGV4dDtcclxuXHRpZiAoIXByb3ZpZGVyKSByZXR1cm4gY29udGV4dC5fZGVmYXVsdFZhbHVlO1xyXG5cdC8vIFRoaXMgaXMgcHJvYmFibHkgbm90IHNhZmUgdG8gY29udmVydCB0byBcIiFcIlxyXG5cdGlmIChzdGF0ZS5fdmFsdWUgPT0gbnVsbCkge1xyXG5cdFx0c3RhdGUuX3ZhbHVlID0gdHJ1ZTtcclxuXHRcdHByb3ZpZGVyLnN1YihjdXJyZW50Q29tcG9uZW50KTtcclxuXHR9XHJcblx0cmV0dXJuIHByb3ZpZGVyLnByb3BzLnZhbHVlO1xyXG59XHJcblxyXG4vKipcclxuICogRGlzcGxheSBhIGN1c3RvbSBsYWJlbCBmb3IgYSBjdXN0b20gaG9vayBmb3IgdGhlIGRldnRvb2xzIHBhbmVsXHJcbiAqIEB0eXBlIHs8VD4odmFsdWU6IFQsIGNiPzogKHZhbHVlOiBUKSA9PiBzdHJpbmcgfCBudW1iZXIpID0+IHZvaWR9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlRGVidWdWYWx1ZSh2YWx1ZSwgZm9ybWF0dGVyKSB7XHJcblx0aWYgKG9wdGlvbnMudXNlRGVidWdWYWx1ZSkge1xyXG5cdFx0b3B0aW9ucy51c2VEZWJ1Z1ZhbHVlKGZvcm1hdHRlciA/IGZvcm1hdHRlcih2YWx1ZSkgOiB2YWx1ZSk7XHJcblx0fVxyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHsoZXJyb3I6IGFueSkgPT4gdm9pZH0gY2JcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VFcnJvckJvdW5kYXJ5KGNiKSB7XHJcblx0LyoqIEB0eXBlIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5FcnJvckJvdW5kYXJ5SG9va1N0YXRlfSAqL1xyXG5cdGNvbnN0IHN0YXRlID0gZ2V0SG9va1N0YXRlKGN1cnJlbnRJbmRleCsrLCAxMCk7XHJcblx0Y29uc3QgZXJyU3RhdGUgPSB1c2VTdGF0ZSgpO1xyXG5cdHN0YXRlLl92YWx1ZSA9IGNiO1xyXG5cdGlmICghY3VycmVudENvbXBvbmVudC5jb21wb25lbnREaWRDYXRjaCkge1xyXG5cdFx0Y3VycmVudENvbXBvbmVudC5jb21wb25lbnREaWRDYXRjaCA9IGVyciA9PiB7XHJcblx0XHRcdGlmIChzdGF0ZS5fdmFsdWUpIHN0YXRlLl92YWx1ZShlcnIpO1xyXG5cdFx0XHRlcnJTdGF0ZVsxXShlcnIpO1xyXG5cdFx0fTtcclxuXHR9XHJcblx0cmV0dXJuIFtcclxuXHRcdGVyclN0YXRlWzBdLFxyXG5cdFx0KCkgPT4ge1xyXG5cdFx0XHRlcnJTdGF0ZVsxXSh1bmRlZmluZWQpO1xyXG5cdFx0fVxyXG5cdF07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZnRlciBwYWludCBlZmZlY3RzIGNvbnN1bWVyLlxyXG4gKi9cclxuZnVuY3Rpb24gZmx1c2hBZnRlclBhaW50RWZmZWN0cygpIHtcclxuXHRsZXQgY29tcG9uZW50O1xyXG5cdC8vIHNvcnQgdGhlIHF1ZXVlIGJ5IGRlcHRoIChvdXRlcm1vc3QgdG8gaW5uZXJtb3N0KVxyXG5cdGFmdGVyUGFpbnRFZmZlY3RzLnNvcnQoKGEsIGIpID0+IGEuX3Zub2RlLl9kZXB0aCAtIGIuX3Zub2RlLl9kZXB0aCk7XHJcblx0d2hpbGUgKGNvbXBvbmVudCA9IGFmdGVyUGFpbnRFZmZlY3RzLnBvcCgpKSB7XHJcblx0XHRpZiAoIWNvbXBvbmVudC5fcGFyZW50RG9tKSBjb250aW51ZTtcclxuXHRcdHRyeSB7XHJcblx0XHRcdGNvbXBvbmVudC5fX2hvb2tzLl9wZW5kaW5nRWZmZWN0cy5mb3JFYWNoKGludm9rZUNsZWFudXApO1xyXG5cdFx0XHRjb21wb25lbnQuX19ob29rcy5fcGVuZGluZ0VmZmVjdHMuZm9yRWFjaChpbnZva2VFZmZlY3QpO1xyXG5cdFx0XHRjb21wb25lbnQuX19ob29rcy5fcGVuZGluZ0VmZmVjdHMgPSBbXTtcclxuXHRcdH0gY2F0Y2ggKGUpIHtcclxuXHRcdFx0Y29tcG9uZW50Ll9faG9va3MuX3BlbmRpbmdFZmZlY3RzID0gW107XHJcblx0XHRcdG9wdGlvbnMuX2NhdGNoRXJyb3IoZSwgY29tcG9uZW50Ll92bm9kZSk7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5sZXQgSEFTX1JBRiA9IHR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPT0gJ2Z1bmN0aW9uJztcclxuXHJcbi8qKlxyXG4gKiBTY2hlZHVsZSBhIGNhbGxiYWNrIHRvIGJlIGludm9rZWQgYWZ0ZXIgdGhlIGJyb3dzZXIgaGFzIGEgY2hhbmNlIHRvIHBhaW50IGEgbmV3IGZyYW1lLlxyXG4gKiBEbyB0aGlzIGJ5IGNvbWJpbmluZyByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgKHJBRikgKyBzZXRUaW1lb3V0IHRvIGludm9rZSBhIGNhbGxiYWNrIGFmdGVyXHJcbiAqIHRoZSBuZXh0IGJyb3dzZXIgZnJhbWUuXHJcbiAqXHJcbiAqIEFsc28sIHNjaGVkdWxlIGEgdGltZW91dCBpbiBwYXJhbGxlbCB0byB0aGUgdGhlIHJBRiB0byBlbnN1cmUgdGhlIGNhbGxiYWNrIGlzIGludm9rZWRcclxuICogZXZlbiBpZiBSQUYgZG9lc24ndCBmaXJlIChmb3IgZXhhbXBsZSBpZiB0aGUgYnJvd3NlciB0YWIgaXMgbm90IHZpc2libGUpXHJcbiAqXHJcbiAqIEBwYXJhbSB7KCkgPT4gdm9pZH0gY2FsbGJhY2tcclxuICovXHJcbmZ1bmN0aW9uIGFmdGVyTmV4dEZyYW1lKGNhbGxiYWNrKSB7XHJcblx0Y29uc3QgZG9uZSA9ICgpID0+IHtcclxuXHRcdGNsZWFyVGltZW91dCh0aW1lb3V0KTtcclxuXHRcdGlmIChIQVNfUkFGKSBjYW5jZWxBbmltYXRpb25GcmFtZShyYWYpO1xyXG5cdFx0c2V0VGltZW91dChjYWxsYmFjayk7XHJcblx0fTtcclxuXHRjb25zdCB0aW1lb3V0ID0gc2V0VGltZW91dChkb25lLCBSQUZfVElNRU9VVCk7XHJcblxyXG5cdGxldCByYWY7XHJcblx0aWYgKEhBU19SQUYpIHtcclxuXHRcdHJhZiA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShkb25lKTtcclxuXHR9XHJcbn1cclxuXHJcbi8vIE5vdGU6IGlmIHNvbWVvbmUgdXNlZCBvcHRpb25zLmRlYm91bmNlUmVuZGVyaW5nID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lLFxyXG4vLyB0aGVuIGVmZmVjdHMgd2lsbCBBTFdBWVMgcnVuIG9uIHRoZSBORVhUIGZyYW1lIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgb25lLCBpbmN1cnJpbmcgYSB+MTZtcyBkZWxheS5cclxuLy8gUGVyaGFwcyB0aGlzIGlzIG5vdCBzdWNoIGEgYmlnIGRlYWwuXHJcbi8qKlxyXG4gKiBTY2hlZHVsZSBhZnRlclBhaW50RWZmZWN0cyBmbHVzaCBhZnRlciB0aGUgYnJvd3NlciBwYWludHNcclxuICogQHBhcmFtIHtudW1iZXJ9IG5ld1F1ZXVlTGVuZ3RoXHJcbiAqL1xyXG5mdW5jdGlvbiBhZnRlclBhaW50KG5ld1F1ZXVlTGVuZ3RoKSB7XHJcblx0aWYgKG5ld1F1ZXVlTGVuZ3RoID09PSAxIHx8IHByZXZSYWYgIT09IG9wdGlvbnMucmVxdWVzdEFuaW1hdGlvbkZyYW1lKSB7XHJcblx0XHRwcmV2UmFmID0gb3B0aW9ucy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU7XHJcblx0XHQocHJldlJhZiB8fCBhZnRlck5leHRGcmFtZSkoZmx1c2hBZnRlclBhaW50RWZmZWN0cyk7XHJcblx0fVxyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtpbXBvcnQoJy4vaW50ZXJuYWwnKS5FZmZlY3RIb29rU3RhdGV9IGhvb2tcclxuICovXHJcbmZ1bmN0aW9uIGludm9rZUNsZWFudXAoaG9vaykge1xyXG5cdC8vIEEgaG9vayBjbGVhbnVwIGNhbiBpbnRyb2R1Y2UgYSBjYWxsIHRvIHJlbmRlciB3aGljaCBjcmVhdGVzIGEgbmV3IHJvb3QsIHRoaXMgd2lsbCBjYWxsIG9wdGlvbnMudm5vZGVcclxuXHQvLyBhbmQgbW92ZSB0aGUgY3VycmVudENvbXBvbmVudCBhd2F5LlxyXG5cdGNvbnN0IGNvbXAgPSBjdXJyZW50Q29tcG9uZW50O1xyXG5cdGxldCBjbGVhbnVwID0gaG9vay5fY2xlYW51cDtcclxuXHRpZiAodHlwZW9mIGNsZWFudXAgPT0gJ2Z1bmN0aW9uJykge1xyXG5cdFx0aG9vay5fY2xlYW51cCA9IHVuZGVmaW5lZDtcclxuXHRcdGNsZWFudXAoKTtcclxuXHR9XHJcblx0Y3VycmVudENvbXBvbmVudCA9IGNvbXA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbnZva2UgYSBIb29rJ3MgZWZmZWN0XHJcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL2ludGVybmFsJykuRWZmZWN0SG9va1N0YXRlfSBob29rXHJcbiAqL1xyXG5mdW5jdGlvbiBpbnZva2VFZmZlY3QoaG9vaykge1xyXG5cdC8vIEEgaG9vayBjYWxsIGNhbiBpbnRyb2R1Y2UgYSBjYWxsIHRvIHJlbmRlciB3aGljaCBjcmVhdGVzIGEgbmV3IHJvb3QsIHRoaXMgd2lsbCBjYWxsIG9wdGlvbnMudm5vZGVcclxuXHQvLyBhbmQgbW92ZSB0aGUgY3VycmVudENvbXBvbmVudCBhd2F5LlxyXG5cdGNvbnN0IGNvbXAgPSBjdXJyZW50Q29tcG9uZW50O1xyXG5cdGhvb2suX2NsZWFudXAgPSBob29rLl92YWx1ZSgpO1xyXG5cdGN1cnJlbnRDb21wb25lbnQgPSBjb21wO1xyXG59XHJcblxyXG4vKipcclxuICogQHBhcmFtIHthbnlbXX0gb2xkQXJnc1xyXG4gKiBAcGFyYW0ge2FueVtdfSBuZXdBcmdzXHJcbiAqL1xyXG5mdW5jdGlvbiBhcmdzQ2hhbmdlZChvbGRBcmdzLCBuZXdBcmdzKSB7XHJcblx0cmV0dXJuIChcclxuXHRcdCFvbGRBcmdzIHx8XHJcblx0XHRvbGRBcmdzLmxlbmd0aCAhPT0gbmV3QXJncy5sZW5ndGggfHxcclxuXHRcdG5ld0FyZ3Muc29tZSgoYXJnLCBpbmRleCkgPT4gYXJnICE9PSBvbGRBcmdzW2luZGV4XSlcclxuXHQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBpbnZva2VPclJldHVybihhcmcsIGYpIHtcclxuXHRyZXR1cm4gdHlwZW9mIGYgPT0gJ2Z1bmN0aW9uJyA/IGYoYXJnKSA6IGY7XHJcbn1cclxuIiwgImV4cG9ydCB7IGRlZmF1bHQgYXMgUHVyZUlubGluZUNvbXBvbmVudCB9IGZyb20gJy4vUHVyZUlubGluZUNvbXBvbmVudCdcbiIsICJpbXBvcnQgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncHJlYWN0L2NvbXBhdCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHVyZUlubGluZUNvbXBvbmVudCBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgZm9yIChsZXQgayBpbiBuZXh0UHJvcHMpIHtcbiAgICAgIGlmIChrID09ICdjaGlsZHJlbicpIGNvbnRpbnVlXG5cbiAgICAgIGlmIChuZXh0UHJvcHNba10gIT0gdGhpcy5wcm9wc1trXSkge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gIH1cbn1cbiIsICIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAncHJlYWN0J1xuXG5pbXBvcnQgeyBpbml0LCBnZXRQcm9wcyB9IGZyb20gJy4uLy4uL2NvbmZpZydcbmltcG9ydCB7IFNoYWRvd0VsZW1lbnQgfSBmcm9tICcuLi9IVE1MRWxlbWVudCdcbmltcG9ydCB7IFBpY2tlciwgUGlja2VyU3R5bGVzIH0gZnJvbSAnLidcbmltcG9ydCBQaWNrZXJQcm9wcyBmcm9tICcuL1BpY2tlclByb3BzJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQaWNrZXJFbGVtZW50IGV4dGVuZHMgU2hhZG93RWxlbWVudCB7XG4gIHN0YXRpYyBQcm9wcyA9IFBpY2tlclByb3BzXG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcywgeyBzdHlsZXM6IFBpY2tlclN0eWxlcyB9KVxuICB9XG5cbiAgYXN5bmMgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29uc3QgcHJvcHMgPSBnZXRQcm9wcyh0aGlzLnByb3BzLCBQaWNrZXJQcm9wcywgdGhpcylcbiAgICBwcm9wcy5lbGVtZW50ID0gdGhpc1xuICAgIHByb3BzLnJlZiA9IChjb21wb25lbnQpID0+IHtcbiAgICAgIHRoaXMuY29tcG9uZW50ID0gY29tcG9uZW50XG4gICAgfVxuXG4gICAgYXdhaXQgaW5pdChwcm9wcylcbiAgICBpZiAodGhpcy5kaXNjb25uZWN0ZWQpIHJldHVyblxuXG4gICAgcmVuZGVyKDxQaWNrZXIgey4uLnByb3BzfSAvPiwgdGhpcy5zaGFkb3dSb290KVxuICB9XG59XG5cbmlmIChcbiAgdHlwZW9mIGN1c3RvbUVsZW1lbnRzICE9PSAndW5kZWZpbmVkJyAmJlxuICAhY3VzdG9tRWxlbWVudHMuZ2V0KCdlbS1lbW9qaS1waWNrZXInKVxuKSB7XG4gIGN1c3RvbUVsZW1lbnRzLmRlZmluZSgnZW0tZW1vamktcGlja2VyJywgUGlja2VyRWxlbWVudClcbn1cbiIsICJtb2R1bGUuZXhwb3J0cyA9IFwiNTY1MTEyZTM3ZTk5MDg1Y1wiOyIsICJpbXBvcnQgeyB0eXBlIENvbXBvbmVudFR5cGUsIFN2ZWx0ZUNvbXBvbmVudCB9IGZyb20gXCJzdmVsdGVcIjtcbmltcG9ydCB7IFBvcG92ZXIgfSBmcm9tIFwiLi9iYXNlXCI7XG5pbXBvcnQgeyBhcnJvdywgYXV0b1VwZGF0ZSwgY29tcHV0ZVBvc2l0aW9uLCBmbGlwIH0gZnJvbSBcIkBmbG9hdGluZy11aS9kb21cIjtcbmltcG9ydCB7IENBTEVOREFSX1BPUE9WRVJfSUQsIE1PREFMX0NMQVNTLCBTVElDS0VSX1BPUE9WRVJfSUQgfSBmcm9tIFwiQC9jb25zdGFudHNcIjtcbmltcG9ydCB7IHR5cGUgVFdpbmRvd0V2ZW50cywgdHlwZSBXaW5kb3dFdmVudEhhbmRsZXIgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbmltcG9ydCB7IGdldCB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcbmltcG9ydCB7IHNldHRpbmdzU3RvcmUgfSBmcm9tIFwiQC9zZXR0aW5nc1wiO1xuXG5leHBvcnQgY2xhc3MgQmFzZUNvbXBvbmVudEJlaGF2aW9yIHtcbiAgICBwdWJsaWMgY29tcG9uZW50SHRtbEVsOiBIVE1MRWxlbWVudDtcbiAgICBwdWJsaWMgY29tcG9uZW50OiBTdmVsdGVDb21wb25lbnQ7XG4gICAgcHVibGljIGF1dG9VcGRhdGVDbGVhbnVwOiAoKCkgPT4gdm9pZCkgfCBudWxsIHwgdW5kZWZpbmVkO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBpZDogdHlwZW9mIFNUSUNLRVJfUE9QT1ZFUl9JRCB8IHR5cGVvZiBDQUxFTkRBUl9QT1BPVkVSX0lELFxuICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBDb21wb25lbnQ6IENvbXBvbmVudFR5cGU7XG4gICAgICAgICAgICBwcm9wcz86IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xuICAgICAgICB9LFxuICAgICkge1xuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IG5ldyB2aWV3LkNvbXBvbmVudCh7XG4gICAgICAgICAgICB0YXJnZXQ6IGRvY3VtZW50LmJvZHksXG4gICAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgICAgIHBvcG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgY2xvc2U6IHRoaXMuY2xvc2UsXG4gICAgICAgICAgICAgICAgLi4udmlldy5wcm9wc1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb21wb25lbnRIdG1sRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpZH1bZGF0YS1wb3BvdmVyPVwidHJ1ZVwiXWApIGFzIEhUTUxFbGVtZW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBvcGVuKHJlZkh0bWxFbDogRWxlbWVudCkge1xuICAgICAgICAvLyBjbG9zZSBhbGwgcG9wb3ZlcnMgd2hlbiBhIG5ldyBtb2RhbCBpcyBkaXNwbGF5ZWQgdG8gcHJldmVudCBvdmVybGFwcGluZ1xuICAgICAgICBpZiAoIVBvcG92ZXIubXV0YXRpb25PYnNlcnZlclN0YXJ0ZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGNiID0gKG11dGF0aW9uUmVjb3JkczogTXV0YXRpb25SZWNvcmRbXSkgPT4ge1xuICAgICAgICAgICAgICAgIG11dGF0aW9uUmVjb3Jkcy5mb3JFYWNoKChyZWNvcmQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBtb2RhbEZvdW5kID0gWy4uLnJlY29yZC5hZGRlZE5vZGVzXS5maW5kKChub2RlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUuY2xhc3NOYW1lLmNvbnRhaW5zKE1PREFMX0NMQVNTKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtb2RhbEZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBQb3BvdmVyLmluc3RhbmNlcy5mb3JFYWNoKChpbnN0YW5jZSkgPT4gaW5zdGFuY2U/LmNsb3NlKCkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBtdXRhdGlvbk9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFBvcG92ZXIubXV0YXRpb25PYnNlcnZlclN0YXJ0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgY29uc3QgbXV0YXRpb25PYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGNiKTtcbiAgICAgICAgICAgIG11dGF0aW9uT2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykgYXMgSFRNTEJvZHlFbGVtZW50LCB7XG4gICAgICAgICAgICAgICAgY2hpbGRMaXN0OiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2hvdygpXG4gICAgICAgIHRoaXMuc2V0SW50ZXJhY3Rpdml0eSh0cnVlKTtcbiAgICAgICAgdGhpcy5wb3NpdGlvbkNvbXBvbmVudCh7IHJlZkh0bWxFbCB9KTtcbiAgICAgICAgdGhpcy5hdXRvVXBkYXRlQ2xlYW51cCA9IGF1dG9VcGRhdGUocmVmSHRtbEVsLCB0aGlzLmNvbXBvbmVudEh0bWxFbCwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbkNvbXBvbmVudCh7IHJlZkh0bWxFbCB9KTtcbiAgICAgICAgfSlcbiAgICB9XG4gICAgcHVibGljIGNsb3NlKCkge1xuICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgdGhpcy5zZXRJbnRlcmFjdGl2aXR5KGZhbHNlKTtcbiAgICAgICAgdGhpcy5hdXRvVXBkYXRlQ2xlYW51cD8uKCk7XG4gICAgICAgIHRoaXMuYXV0b1VwZGF0ZUNsZWFudXAgPSBudWxsO1xuICAgIH1cbiAgICBwdWJsaWMgY2xlYW51cCgpIHtcbiAgICB9XG5cbiAgICBwdWJsaWMgcG9zaXRpb25Db21wb25lbnQoe1xuICAgICAgICByZWZIdG1sRWwsXG4gICAgICAgIGN1c3RvbVgsXG4gICAgICAgIGN1c3RvbVlcbiAgICB9OiB7XG4gICAgICAgIHJlZkh0bWxFbDogRWxlbWVudDtcbiAgICAgICAgY3VzdG9tWD86IG51bWJlcjtcbiAgICAgICAgY3VzdG9tWT86IG51bWJlcjtcbiAgICB9KSB7XG4gICAgICAgIGNvbnN0IGFycm93RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHt0aGlzLmlkfS1hcnJvd2ApIGFzIEhUTUxEaXZFbGVtZW50O1xuICAgICAgICBjb21wdXRlUG9zaXRpb24ocmVmSHRtbEVsLCB0aGlzLmNvbXBvbmVudEh0bWxFbCwge1xuICAgICAgICAgICAgcGxhY2VtZW50OiAncmlnaHQtc3RhcnQnLFxuICAgICAgICAgICAgbWlkZGxld2FyZTogW2ZsaXAoKSwgYXJyb3coeyBlbGVtZW50OiBhcnJvd0VsIH0pXVxuICAgICAgICB9KS50aGVuKCh7IHgsIHksIHBsYWNlbWVudCwgbWlkZGxld2FyZURhdGEgfSkgPT4ge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLmNvbXBvbmVudEh0bWxFbCEuc3R5bGUsIHtcbiAgICAgICAgICAgICAgICBsZWZ0OiBgJHtjdXN0b21YIHx8IHh9cHhgLFxuICAgICAgICAgICAgICAgIHRvcDogYCR7Y3VzdG9tWSB8fCB5fXB4YFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyBIYW5kbGUgQXJyb3cgUGxhY2VtZW50OlxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9hcnJvd1xuICAgICAgICAgICAgaWYgKGFycm93RWwgJiYgbWlkZGxld2FyZURhdGEuYXJyb3cpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHg6IGFycm93WCwgeTogYXJyb3dZIH0gPSBtaWRkbGV3YXJlRGF0YS5hcnJvdztcblxuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRpY1NpZGUgPSB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogJ2JvdHRvbScsXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAnbGVmdCcsXG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogJ3RvcCcsXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6ICdyaWdodCdcbiAgICAgICAgICAgICAgICB9W3BsYWNlbWVudC5zcGxpdCgnLScpWzBdXTtcblxuICAgICAgICAgICAgICAgIHN0YXRpY1NpZGUgJiZcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihhcnJvd0VsLnN0eWxlLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBhcnJvd1ggIT0gbnVsbCA/IGAke2Fycm93WH1weGAgOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogYXJyb3dZICE9IG51bGwgPyBgJHthcnJvd1l9cHhgIDogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICBib3R0b206ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgW3N0YXRpY1NpZGVdOiAnOXB4J1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZFdpbmRvd0xpc3RlbmVycyh3aW5kb3dFdmVudHM6IFRXaW5kb3dFdmVudHMsIHBvcG92ZXJJbnN0YW5jZTogQmFzZUNvbXBvbmVudEJlaGF2aW9yLCBib3VuZENhbGxiYWNrczogTWFwPGtleW9mIFdpbmRvd0V2ZW50TWFwLCBXaW5kb3dFdmVudEhhbmRsZXI8a2V5b2YgV2luZG93RXZlbnRNYXA+Pikge1xuICAgICAgICAoT2JqZWN0LmVudHJpZXMod2luZG93RXZlbnRzKSBhcyBba2V5b2YgV2luZG93RXZlbnRNYXAsIFdpbmRvd0V2ZW50SGFuZGxlcjxrZXlvZiBXaW5kb3dFdmVudE1hcD5dW10pLmZvckVhY2goXG4gICAgICAgICAgICAoW2V2TmFtZSwgY2JdKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGNiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChldk5hbWUgPT09ICdtb3VzZW92ZXInICYmICFnZXQoc2V0dGluZ3NTdG9yZSkub3BlblBvcG92ZXJPblJpYmJvbkhvdmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYm91bmRDYWxsYmFjayA9IGNiLmJpbmQocG9wb3Zlckluc3RhbmNlKTtcbiAgICAgICAgICAgICAgICAgICAgYm91bmRDYWxsYmFja3Muc2V0KGV2TmFtZSwgYm91bmRDYWxsYmFjayk7XG5cbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoZXZOYW1lLCBib3VuZENhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuICAgIHB1YmxpYyByZW1vdmVXaW5kb3dMaXN0ZW5lcnMod2luZG93RXZlbnRzOiBUV2luZG93RXZlbnRzLCBib3VuZENhbGxiYWNrczogTWFwPGtleW9mIFdpbmRvd0V2ZW50TWFwLCBXaW5kb3dFdmVudEhhbmRsZXI8a2V5b2YgV2luZG93RXZlbnRNYXA+Pikge1xuICAgICAgICAoT2JqZWN0LmVudHJpZXMod2luZG93RXZlbnRzKSBhcyBba2V5b2YgV2luZG93RXZlbnRNYXAsIFdpbmRvd0V2ZW50SGFuZGxlcjxrZXlvZiBXaW5kb3dFdmVudE1hcD5dW10pLmZvckVhY2goXG4gICAgICAgICAgICAoW2V2TmFtZV0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYiA9IGJvdW5kQ2FsbGJhY2tzLmdldChldk5hbWUpO1xuICAgICAgICAgICAgICAgIGlmIChjYikge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihldk5hbWUsIGNiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIClcbiAgICB9XG5cbiAgICBwcml2YXRlIHNob3coKSB7XG4gICAgICAgIHRoaXMuY29tcG9uZW50SHRtbEVsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICB0aGlzLmNvbXBvbmVudEh0bWxFbC5zdHlsZS5vcGFjaXR5ID0gJzEnO1xuICAgICAgICB0aGlzLmNvbXBvbmVudEh0bWxFbC5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ2F1dG8nO1xuICAgIH1cbiAgICBwcml2YXRlIGhpZGUoKSB7XG4gICAgICAgIHRoaXMuY29tcG9uZW50SHRtbEVsLnN0eWxlLm9wYWNpdHkgPSAnMCc7XG4gICAgfVxuICAgIHByaXZhdGUgc2V0SW50ZXJhY3Rpdml0eShlbmFibGVkID0gdHJ1ZSkge1xuICAgICAgICBpZiAoZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnRIdG1sRWwucmVtb3ZlQXR0cmlidXRlKCdpbmVydCcpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnRIdG1sRWwuc2V0QXR0cmlidXRlKCdpbmVydCcsICcnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgeyBDQUxFTkRBUl9QT1BPVkVSX0lELCBGSUxFX01FTlVfUE9QT1ZFUl9JRCwgU1RJQ0tFUl9QT1BPVkVSX0lEIH0gZnJvbSAnQC9jb25zdGFudHMnO1xuaW1wb3J0IHsgc2V0dGluZ3NTdG9yZSB9IGZyb20gXCJAL3NldHRpbmdzXCI7XG5pbXBvcnQgeyB0eXBlIENvbXBvbmVudFR5cGUgfSBmcm9tICdzdmVsdGUnO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSAnc3ZlbHRlL3N0b3JlJztcbmltcG9ydCB7IHR5cGUgVFdpbmRvd0V2ZW50cyB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IGdldFBvcG92ZXJJbnN0YW5jZSB9IGZyb20gJy4vYmFzZSc7XG5pbXBvcnQgeyBCYXNlQ29tcG9uZW50QmVoYXZpb3IgfSBmcm9tICcuL2Jhc2UtY29tcG9uZW50LWJlaGF2aW9yJztcblxuZnVuY3Rpb24gZ2V0UmVmSHRtbEVsKCkge1xuICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbaWQ9JHtDQUxFTkRBUl9QT1BPVkVSX0lEfS1yaWJib24tcmVmLWVsXWApIGFzIEhUTUxFbGVtZW50IHwgdW5kZWZpbmVkXG59XG5cbmV4cG9ydCB0eXBlIFRDYWxlbmRhclBvcG92ZXJQYXJhbXMgPSB7XG4gICAgaWQ6IHR5cGVvZiBDQUxFTkRBUl9QT1BPVkVSX0lELFxuICAgIHZpZXc6IHtcbiAgICAgICAgQ29tcG9uZW50OiBDb21wb25lbnRUeXBlO1xuICAgICAgICBwcm9wcz86IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhbGVuZGFyUG9wb3ZlckJlaGF2aW9yIGV4dGVuZHMgQmFzZUNvbXBvbmVudEJlaGF2aW9yIHtcbiAgICBwdWJsaWMgcmVmSHRtbEVsOiBIVE1MRWxlbWVudCB8IHVuZGVmaW5lZDtcbiAgICBwdWJsaWMgYm91bmRDYWxsYmFja3MgPSBuZXcgTWFwKCk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBwYXJhbXM6IFRDYWxlbmRhclBvcG92ZXJQYXJhbXMsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKHBhcmFtcy5pZCwgcGFyYW1zLnZpZXcpO1xuICAgICAgICB0aGlzLnJlZkh0bWxFbCA9IGdldFJlZkh0bWxFbCgpO1xuXG4gICAgICAgIGlmICh0aGlzLnJlZkh0bWxFbCAmJiBnZXQoc2V0dGluZ3NTdG9yZSkub3BlblBvcG92ZXJPblJpYmJvbkhvdmVyKSB7XG4gICAgICAgICAgICB0aGlzLnJlZkh0bWxFbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCB0aGlzLmhhbmRsZVJlZmVyZW5jZUVsSG92ZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIG9wZW4oKSB7XG4gICAgICAgIHRoaXMucmVmSHRtbEVsID0gZ2V0UmVmSHRtbEVsKCk7XG4gICAgICAgIHRoaXMucmVmSHRtbEVsICYmIHN1cGVyLm9wZW4odGhpcy5yZWZIdG1sRWwpO1xuICAgICAgICB0aGlzLmFkZFdpbmRvd0xpc3RlbmVycyh0aGlzLmdldFdpbmRvd0V2ZW50cygpLCB0aGlzLCB0aGlzLmJvdW5kQ2FsbGJhY2tzKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xvc2UoKSB7XG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgICAgIHRoaXMucmVtb3ZlV2luZG93TGlzdGVuZXJzKHRoaXMuZ2V0V2luZG93RXZlbnRzKCksIHRoaXMuYm91bmRDYWxsYmFja3MpO1xuICAgIH1cbiAgICBwdWJsaWMgY2xlYW51cCgpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB0aGlzLnJlZkh0bWxFbD8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgdGhpcy5oYW5kbGVSZWZlcmVuY2VFbEhvdmVyKTtcbiAgICAgICAgdGhpcy5jb21wb25lbnQuJGRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFdpbmRvd0V2ZW50cygpOiBUV2luZG93RXZlbnRzIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNsaWNrOiB0aGlzLmhhbmRsZVdpbmRvd0NsaWNrLFxuICAgICAgICAgICAgYXV4Y2xpY2s6IHRoaXMuaGFuZGxlV2luZG93Q2xpY2ssXG4gICAgICAgICAgICBrZXlkb3duOiB0aGlzLmhhbmRsZVdpbmRvd0tleWRvd24sXG4gICAgICAgICAgICBtb3VzZW92ZXI6IHRoaXMuaGFuZGxlV2luZG93TW91c2VvdmVyXG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIGhhbmRsZVdpbmRvd0NsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGV2ID0gZXZlbnQgYXMgTW91c2VFdmVudCAmIHsgdGFyZ2V0OiBIVE1MRWxlbWVudCB8IG51bGwgfTtcblxuICAgICAgICBjb25zdCBzZXR0aW5ncyA9IGdldChzZXR0aW5nc1N0b3JlKTtcbiAgICAgICAgY29uc3QgbWVudUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1lbnUnKTtcbiAgICAgICAgY29uc3Qgc3RpY2tlckVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7U1RJQ0tFUl9QT1BPVkVSX0lEfVtkYXRhLXBvcG92ZXI9XCJ0cnVlXCJdYCkgYXMgSFRNTEVsZW1lbnQgfCB1bmRlZmluZWQ7XG5cbiAgICAgICAgY29uc3QgY2FsZW5kYXJFbFRvdWNoZWQgPVxuICAgICAgICAgICAgdGhpcy5jb21wb25lbnRIdG1sRWwuY29udGFpbnMoZXYudGFyZ2V0KSB8fFxuICAgICAgICAgICAgZXYudGFyZ2V0Py5pZC5pbmNsdWRlcyhDQUxFTkRBUl9QT1BPVkVSX0lEKTtcbiAgICAgICAgY29uc3Qgc3RpY2tlckVsVG91Y2hlZCA9XG4gICAgICAgICAgICBzdGlja2VyRWw/LmNvbnRhaW5zKGV2LnRhcmdldCkgfHxcbiAgICAgICAgICAgIGV2LnRhcmdldD8uaWQuaW5jbHVkZXMoU1RJQ0tFUl9QT1BPVkVSX0lEKTtcbiAgICAgICAgY29uc3QgbWVudUVsVG91Y2hlZCA9IG1lbnVFbD8uY29udGFpbnMoZXYudGFyZ2V0KSB8fCBldi50YXJnZXQ/LmNsYXNzTmFtZS5pbmNsdWRlcygnbWVudScpO1xuXG4gICAgICAgIGNvbnN0IHRhcmdldE91dCA9ICFjYWxlbmRhckVsVG91Y2hlZCAmJiAhbWVudUVsVG91Y2hlZCAmJiAhc3RpY2tlckVsVG91Y2hlZDtcblxuICAgICAgICAvLyBhdm9pZHMgY2xvc2luZyBjYWxlbmRhciBpZiBzdGlja2VyIGlzIG9wZW4gdG9vIFxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBnZXRQb3BvdmVySW5zdGFuY2UodGhpcy5wYXJhbXMuaWQpPy5vcGVuZWQgJiZcbiAgICAgICAgICAgIGdldFBvcG92ZXJJbnN0YW5jZShTVElDS0VSX1BPUE9WRVJfSUQpPy5vcGVuZWQgJiZcbiAgICAgICAgICAgIHNldHRpbmdzLnBvcG92ZXJzQ2xvc2luZy5jbG9zZVBvcG92ZXJzT25lQnlPbmVPbkNsaWNrT3V0XG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY2xvc2UgY2FsZW5kYXIgcG9wb3ZlciBpZiB1c2VyIGNsaWNrZWQgYW55d2hlcmUgYnV0IGVpdGhlciBjYWxlbmRhciBwb3BvdmVyLCBjb250ZXh0IG1lbnUgb3IgU1BcbiAgICAgICAgaWYgKHRhcmdldE91dCkge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHB1YmxpYyBoYW5kbGVXaW5kb3dLZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHNldHRpbmdzID0gZ2V0KHNldHRpbmdzU3RvcmUpO1xuXG4gICAgICAgIGNvbnN0IGZvY3VzYWJsZVNlbGVjdG9ycyA9XG4gICAgICAgICAgICAnOmlzKGFbaHJlZl0sIGJ1dHRvbiwgaW5wdXQsIHRleHRhcmVhLCBzZWxlY3QsIGRldGFpbHMsIFt0YWJpbmRleF0pOm5vdChbdGFiaW5kZXg9XCItMVwiXSknO1xuXG4gICAgICAgIGNvbnN0IGZvY3VzYWJsZVBvcG92ZXJFbGVtZW50czogSFRNTEVsZW1lbnRbXSA9IEFycmF5LmZyb20oXG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudEh0bWxFbC5xdWVyeVNlbGVjdG9yQWxsKGZvY3VzYWJsZVNlbGVjdG9ycylcbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCByZWZlcmVuY2VFbEZvY3VzZWQ6IGJvb2xlYW4gPVxuICAgICAgICAgICAgKGdldFBvcG92ZXJJbnN0YW5jZSh0aGlzLnBhcmFtcy5pZCk/Lm9wZW5lZCAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSB0aGlzLnJlZkh0bWxFbCkgfHwgZmFsc2U7XG4gICAgICAgIC8vIFdoZW4gdGhlIHVzZXIgZm9jdXNlcyBvbiAncmVmZXJlbmNlRWwnIGFuZCB0aGVuIHByZXNzZXMgdGhlIFRhYiBvciBBcnJvd0Rvd24ga2V5LCB0aGUgZmlyc3QgZWxlbWVudCBpbnNpZGUgdGhlIHZpZXcgc2hvdWxkIHJlY2VpdmUgZm9jdXMuXG4gICAgICAgIC8vIFRPRE86IG1ha2UgaXQgd29yayFcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgcmVmZXJlbmNlRWxGb2N1c2VkICYmXG4gICAgICAgICAgICAoZXZlbnQua2V5ID09PSAnQXJyb3dEb3duJyB8fCBldmVudC5rZXkgPT09ICdUYWInKSAmJlxuICAgICAgICAgICAgZm9jdXNhYmxlUG9wb3ZlckVsZW1lbnRzLmxlbmd0aCA+IDBcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBmb2N1c2FibGVQb3BvdmVyRWxlbWVudHNbMF0uZm9jdXMoKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gYXZvaWRzIGNsb3NpbmcgY2FsZW5kYXIgaWYgc3RpY2tlciBpcyBvcGVuIHRvbyBcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgZ2V0UG9wb3Zlckluc3RhbmNlKHRoaXMucGFyYW1zLmlkKT8ub3BlbmVkICYmXG4gICAgICAgICAgICBnZXRQb3BvdmVySW5zdGFuY2UoU1RJQ0tFUl9QT1BPVkVSX0lEKT8ub3BlbmVkICYmXG4gICAgICAgICAgICBzZXR0aW5ncy5wb3BvdmVyc0Nsb3NpbmcuY2xvc2VQb3BvdmVyc09uZUJ5T25lT25Fc2NLZXlkb3duXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgICAgIHRoaXMucmVmSHRtbEVsPy5mb2N1cygpO1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcHVibGljIGhhbmRsZVdpbmRvd01vdXNlb3ZlcihldmVudDogTW91c2VFdmVudCkge1xuICAgICAgICBpZiAoZ2V0KHNldHRpbmdzU3RvcmUpLm9wZW5Qb3BvdmVyT25SaWJib25Ib3Zlcikge1xuICAgICAgICAgICAgY29uc3QgZXYgPSBldmVudCBhcyBNb3VzZUV2ZW50ICYgeyB0YXJnZXQ6IEhUTUxFbGVtZW50IHwgbnVsbCB9O1xuXG4gICAgICAgICAgICBjb25zdCBjYWxlbmRhclBvcG92ZXIgPSBnZXRQb3BvdmVySW5zdGFuY2UoQ0FMRU5EQVJfUE9QT1ZFUl9JRCk7XG4gICAgICAgICAgICBjb25zdCBzdGlja2VyUG9wb3ZlciA9IGdldFBvcG92ZXJJbnN0YW5jZShTVElDS0VSX1BPUE9WRVJfSUQpO1xuICAgICAgICAgICAgY29uc3QgZmlsZU1lbnVQb3BvdmVyID0gZ2V0UG9wb3Zlckluc3RhbmNlKEZJTEVfTUVOVV9QT1BPVkVSX0lEKTtcblxuICAgICAgICAgICAgY29uc3QgbWVudUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1lbnUnKTtcbiAgICAgICAgICAgIGNvbnN0IHN0aWNrZXJFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke1NUSUNLRVJfUE9QT1ZFUl9JRH1bZGF0YS1wb3BvdmVyPVwidHJ1ZVwiXWApIGFzIEhUTUxFbGVtZW50IHwgdW5kZWZpbmVkO1xuXG4gICAgICAgICAgICBjb25zdCBjYWxlbmRhckVsVG91Y2hlZCA9XG4gICAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnRIdG1sRWwuY29udGFpbnMoZXYudGFyZ2V0KSB8fFxuICAgICAgICAgICAgICAgIGV2LnRhcmdldD8uaWQuaW5jbHVkZXMoQ0FMRU5EQVJfUE9QT1ZFUl9JRCk7XG4gICAgICAgICAgICBjb25zdCBzdGlja2VyRWxUb3VjaGVkID1cbiAgICAgICAgICAgICAgICBzdGlja2VyRWw/LmNvbnRhaW5zKGV2LnRhcmdldCkgfHxcbiAgICAgICAgICAgICAgICBldi50YXJnZXQ/LmlkLmluY2x1ZGVzKFNUSUNLRVJfUE9QT1ZFUl9JRCk7XG4gICAgICAgICAgICBjb25zdCBtZW51RWxUb3VjaGVkID0gbWVudUVsPy5jb250YWlucyhldi50YXJnZXQpIHx8IGV2LnRhcmdldD8uY2xhc3NOYW1lLmluY2x1ZGVzKCdtZW51Jyk7XG4gICAgICAgICAgICBjb25zdCByZWZlcmVuY2VFbFRvdWNoZWQgPSB0aGlzLnJlZkh0bWxFbD8uY29udGFpbnMoZXZlbnQudGFyZ2V0IGFzIE5vZGUpO1xuXG4gICAgICAgICAgICBjb25zdCB0YXJnZXRPdXQgPSAhY2FsZW5kYXJFbFRvdWNoZWQgJiYgIW1lbnVFbFRvdWNoZWQgJiYgIXN0aWNrZXJFbFRvdWNoZWQ7XG5cbiAgICAgICAgICAgIGlmIChyZWZlcmVuY2VFbFRvdWNoZWQpIHJldHVybjtcblxuICAgICAgICAgICAgY29uc3QgaXNPbmx5Q2FsZW5kYXJQb3BvdmVyT3BlbiA9XG4gICAgICAgICAgICAgICAgY2FsZW5kYXJQb3BvdmVyPy5vcGVuZWQgJiYgIXN0aWNrZXJQb3BvdmVyPy5vcGVuZWQgJiYgIWZpbGVNZW51UG9wb3Zlcj8ub3BlbmVkO1xuXG4gICAgICAgICAgICAvLyBjbG9zZSBjYWxlbmRhciBwb3BvdmVyIGlmIG9wZW5lZCBhbmQgdXNlciBob3ZlcmVkIGFueXdoZXJlIGJ1dCBjYWxlbmRhciBwb3BvdmVyXG4gICAgICAgICAgICBpZiAoaXNPbmx5Q2FsZW5kYXJQb3BvdmVyT3BlbiAmJiB0YXJnZXRPdXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHB1YmxpYyBoYW5kbGVSZWZlcmVuY2VFbEhvdmVyKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnXHVEODNEXHVEREIxXHVGRTBGXHVEODNEXHVEREIxXHVGRTBGXHVEODNEXHVEREIxXHVGRTBGaGFuZGxlUmVmZXJlbmNlRWxIb3ZlcigpISEhIFx1RDgzRVx1REQyRlx1RDgzRVx1REQyRlx1RDgzRVx1REQyRicpO1xuXG4gICAgICAgIGlmICghZ2V0UG9wb3Zlckluc3RhbmNlKHRoaXMucGFyYW1zLmlkKT8ub3BlbmVkKSB7XG4gICAgICAgICAgICB0aGlzLm9wZW4oKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgeyBGSUxFX01FTlVfUE9QT1ZFUl9JRCwgU1RJQ0tFUl9QT1BPVkVSX0lEIH0gZnJvbSBcIkAvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyB0eXBlIElHcmFudWxhcml0eSB9IGZyb20gXCJAL2lvXCI7XG5pbXBvcnQgeyBzdGlja2VyQ29tcG9uZW50UHJvcHNTdG9yZSB9IGZyb20gXCJAL3N0b3Jlcy9wb3BvdmVyc1wiO1xuaW1wb3J0IHsgdHlwZSBNb21lbnQgfSBmcm9tIFwibW9tZW50XCI7XG5pbXBvcnQgeyBNZW51LCBURmlsZSB9IGZyb20gXCJvYnNpZGlhblwiO1xuaW1wb3J0IFN0aWNrZXJQb3BvdmVyQ29tcG9uZW50IGZyb20gXCIuLi9jb21wb25lbnRzL1N0aWNrZXJQb3BvdmVyLnN2ZWx0ZVwiO1xuaW1wb3J0IHsgZXZlbnRIYW5kbGVycywgaXNDb250cm9sUHJlc3NlZCB9IGZyb20gXCIuLi91dGlsc1wiO1xuaW1wb3J0IHsgUG9wb3ZlciB9IGZyb20gXCIuL2Jhc2VcIjtcblxuZXhwb3J0IHR5cGUgVEZpbGVNZW51UG9wb3ZlclBhcmFtcyA9IHtcbiAgICBpZDogdHlwZW9mIEZJTEVfTUVOVV9QT1BPVkVSX0lELFxufVxuZXhwb3J0IHR5cGUgVEZpbGVNZW51T3BlblBhcmFtcyA9IHtcbiAgICBldmVudDogTW91c2VFdmVudCxcbiAgICBub3RlOiBURmlsZSB8IHVuZGVmaW5lZCxcbiAgICBkYXRlOiBNb21lbnQsXG4gICAgZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eSxcbn1cblxuZXhwb3J0IGNsYXNzIEZpbGVNZW51UG9wb3ZlckJlaGF2aW9yIHtcbiAgICBwcml2YXRlIG1lbnU6IE1lbnUgfCBudWxsID0gbnVsbDtcbiAgICBwcml2YXRlIHJlZkh0bWxFbDogRWxlbWVudCB8IG51bGwgPSBudWxsO1xuXG4gICAgY29uc3RydWN0b3IocGFyYW1zOiBURmlsZU1lbnVQb3BvdmVyUGFyYW1zKSB7XG4gICAgfVxuXG4gICAgcHVibGljIG9wZW4oeyBldmVudCwgbm90ZSwgZGF0ZSwgZ3JhbnVsYXJpdHkgfTogVEZpbGVNZW51T3BlblBhcmFtcykge1xuICAgICAgICB0aGlzLnJlZkh0bWxFbCA9IGV2ZW50LnRhcmdldCBhcyBFbGVtZW50O1xuICAgICAgICB0aGlzLm1lbnUgPSBuZXcgTWVudSgpO1xuXG4gICAgICAgIGlmIChub3RlKSB7XG4gICAgICAgICAgICB0aGlzLm9wZW5DdXN0b21GaWxlTWVudSh0aGlzLm1lbnUsIG5vdGUsIGdyYW51bGFyaXR5LCBkYXRlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tZW51LmFkZEl0ZW0oKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtXG4gICAgICAgICAgICAgICAgICAgIC5zZXRUaXRsZShcIkNyZWF0ZSBOb3RlXCIpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRJY29uKFwiZG9jdW1lbnRcIilcbiAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRIYW5kbGVycy5vbkNsaWNrKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZU5ld1NwbGl0TGVhZjogaXNDb250cm9sUHJlc3NlZChldmVudCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3JhbnVsYXJpdHlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cblxuICAgICAgICAvLyBTaG93IHRoZSBtZW51XG4gICAgICAgIHRoaXMubWVudS5zaG93QXRQb3NpdGlvbihldmVudCk7XG4gICAgfVxuICAgIHB1YmxpYyBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5tZW51Py5jbG9zZSgpXG4gICAgfVxuICAgIHB1YmxpYyBjbGVhbnVwKCkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIHRoaXMubWVudT8udW5sb2FkKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvcGVuQ3VzdG9tRmlsZU1lbnUobWVudTogTWVudSwgbm90ZTogVEZpbGUsIGdyYW51bGFyaXR5OiBJR3JhbnVsYXJpdHksIGRhdGU6IE1vbWVudCkge1xuICAgICAgICAvLyBBZGQgc2VjdGlvbnMgdG8gdGhlIG1lbnVcbiAgICAgICAgKG1lbnUgYXMgYW55KS5hZGRTZWN0aW9ucyhbXCJ0aXRsZVwiLCBcIm9wZW5cIiwgXCJhY3Rpb24tcHJpbWFyeVwiLCBcImFjdGlvblwiLCBcImluZm9cIiwgXCJ2aWV3XCIsIFwic3lzdGVtXCIsIFwiXCIsIFwiZGFuZ2VyXCJdKTtcblxuICAgICAgICAvLyBBZGQgdGl0bGUgKGZvciBtb2JpbGUpXG4gICAgICAgIGlmICgod2luZG93LmFwcCBhcyBhbnkpLmlzTW9iaWxlKSB7XG4gICAgICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+XG4gICAgICAgICAgICAgICAgaXRlbS5zZXRTZWN0aW9uKFwidGl0bGVcIilcbiAgICAgICAgICAgICAgICAgICAgLnNldEljb24oXCJsdWNpZGUtZmlsZVwiKVxuICAgICAgICAgICAgICAgICAgICAuc2V0VGl0bGUobm90ZS5uYW1lKVxuICAgICAgICAgICAgICAgICAgICAuc2V0SXNMYWJlbCh0cnVlKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE9wZW4gaW4gbmV3IHRhYlxuICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+XG4gICAgICAgICAgICBpdGVtLnNldFNlY3Rpb24oXCJvcGVuXCIpXG4gICAgICAgICAgICAgICAgLnNldFRpdGxlKFwiT3BlbiBpbiBuZXcgdGFiXCIpXG4gICAgICAgICAgICAgICAgLnNldEljb24oXCJsdWNpZGUtZmlsZS1wbHVzXCIpXG4gICAgICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYXBwLndvcmtzcGFjZS5vcGVuTGlua1RleHQobm90ZS5wYXRoLCBcIlwiLCBcInRhYlwiKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIE9wZW4gdG8gdGhlIHJpZ2h0XG4gICAgICAgIG1lbnUuYWRkSXRlbSgoaXRlbSkgPT5cbiAgICAgICAgICAgIGl0ZW0uc2V0U2VjdGlvbihcIm9wZW5cIilcbiAgICAgICAgICAgICAgICAuc2V0VGl0bGUoXCJPcGVuIHRvIHRoZSByaWdodFwiKVxuICAgICAgICAgICAgICAgIC5zZXRJY29uKFwibHVjaWRlLXNlcGFyYXRvci12ZXJ0aWNhbFwiKVxuICAgICAgICAgICAgICAgIC5vbkNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmFwcC53b3Jrc3BhY2Uub3BlbkxpbmtUZXh0KG5vdGUucGF0aCwgXCJcIiwgXCJzcGxpdFwiKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIE1ha2UgYSBjb3B5XG4gICAgICAgIG1lbnUuYWRkSXRlbSgoaXRlbSkgPT5cbiAgICAgICAgICAgIGl0ZW0uc2V0U2VjdGlvbihcImFjdGlvblwiKVxuICAgICAgICAgICAgICAgIC5zZXRUaXRsZShcIk1ha2UgYSBjb3B5XCIpXG4gICAgICAgICAgICAgICAgLnNldEljb24oXCJsdWNpZGUtZmlsZXNcIilcbiAgICAgICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1BhdGggPSAod2luZG93LmFwcC52YXVsdCBhcyBhbnkpLmdldEF2YWlsYWJsZVBhdGgobm90ZS5wYXRoLCBub3RlLmV4dGVuc2lvbik7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hcHAudmF1bHQuY29weShub3RlLCBuZXdQYXRoKS50aGVuKChuZXdGaWxlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYXBwLndvcmtzcGFjZS5vcGVuTGlua1RleHQobmV3RmlsZS5wYXRoLCBcIlwiLCBcInRhYlwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBEZWxldGVcbiAgICAgICAgbWVudS5hZGRJdGVtKChpdGVtKSA9PlxuICAgICAgICAgICAgKGl0ZW0uc2V0U2VjdGlvbihcImRhbmdlclwiKVxuICAgICAgICAgICAgICAgIC5zZXRUaXRsZShcIkRlbGV0ZVwiKVxuICAgICAgICAgICAgICAgIC5zZXRJY29uKFwibHVjaWRlLXRyYXNoLTJcIilcbiAgICAgICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICh3aW5kb3cuYXBwIGFzIGFueSkuZmlsZU1hbmFnZXIucHJvbXB0Rm9yRmlsZURlbGV0aW9uKG5vdGUpO1xuICAgICAgICAgICAgICAgIH0pIGFzIGFueSlcbiAgICAgICAgICAgICAgICAuc2V0V2FybmluZyh0cnVlKVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIEFkZCBjdXN0b20gXCJBZGQgU3RpY2tlclwiIG9wdGlvblxuICAgICAgICBtZW51LmFkZEl0ZW0oKGl0ZW0pID0+XG4gICAgICAgICAgICBpdGVtLnNldFNlY3Rpb24oXCJhY3Rpb25cIilcbiAgICAgICAgICAgICAgICAuc2V0VGl0bGUoXCJBZGQgU3RpY2tlclwiKVxuICAgICAgICAgICAgICAgIC8vIC5zZXRJY29uKFwic21pbGUtcGx1c1wiKVxuICAgICAgICAgICAgICAgIC5zZXRJY29uKFwibHVjaWRlLXNtaWxlLXBsdXNcIilcbiAgICAgICAgICAgICAgICAub25DbGljaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnJlZkh0bWxFbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgUG9wb3Zlci5jcmVhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBTVElDS0VSX1BPUE9WRVJfSUQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb21wb25lbnQ6IFN0aWNrZXJQb3BvdmVyQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KS5vcGVuKHRoaXMucmVmSHRtbEVsKVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgc3RpY2tlckNvbXBvbmVudFByb3BzU3RvcmUuc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JhbnVsYXJpdHlcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIHdpbmRvdy5hcHAud29ya3NwYWNlLnRyaWdnZXIoXCJmaWxlLW1lbnVcIiwgbWVudSwgbm90ZSwgXCJjdXN0b20tZmlsZS1tZW51XCIpO1xuICAgIH1cbn1cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgeyBTVElDS0VSX1BPUE9WRVJfSUQgfSBmcm9tICdAL2NvbnN0YW50cyc7XG5cdGltcG9ydCB7IGluaXRpYWxpemVQaWNrZXIgfSBmcm9tICcuLi91dGlscyc7XG5cdGltcG9ydCB7IHRoZW1lU3RvcmUgfSBmcm9tICdAL3N0b3Jlcyc7XG5cblx0ZXhwb3J0IGxldCBjbG9zZTogKCkgPT4gdm9pZDtcblxuXHRsZXQgcGlja2VyQ29udGFpbmVyRWw6IEhUTUxEaXZFbGVtZW50IHwgbnVsbCA9IG51bGw7XG5cdGxldCBwaWNrZXJJbml0aWFsaXplZCA9IGZhbHNlO1xuXHQkOiB7XG5cdFx0Y29uc3QgdGhlbWUgPSAkdGhlbWVTdG9yZTtcblx0XHRwaWNrZXJDb250YWluZXJFbCAmJiB0aGVtZSAmJiBpbml0aWFsaXplUGlja2VyKHBpY2tlckNvbnRhaW5lckVsLCB0aGVtZSk7XG5cdFx0aWYgKCFwaWNrZXJJbml0aWFsaXplZCAmJiBwaWNrZXJDb250YWluZXJFbCkge1xuXHRcdFx0cGlja2VySW5pdGlhbGl6ZWQgPSB0cnVlO1xuXHRcdH1cblx0fVxuPC9zY3JpcHQ+XG5cbjxkaXZcblx0Y2xhc3M9XCJiZy10cmFuc3BhcmVudCB6LTIwIHctbWF4IG9wYWNpdHktMCBwb2ludGVyLWV2ZW50cy1ub25lIGFic29sdXRlIHRvcC0wIGxlZnQtMFwiXG5cdGRhdGEtcG9wb3Zlcj17dHJ1ZX1cblx0aWQ9e1NUSUNLRVJfUE9QT1ZFUl9JRH1cblx0YmluZDp0aGlzPXtwaWNrZXJDb250YWluZXJFbH1cbi8+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuXHQvKiBAdGFpbHdpbmQgYmFzZTsgKi9cblx0QHRhaWx3aW5kIGNvbXBvbmVudHM7XG5cdEB0YWlsd2luZCB1dGlsaXRpZXM7XG5cblx0I2Vtb2ppLW1vZGFsIHtcblx0XHRwYWRkaW5nOiAwcHg7XG5cdFx0bWluLXdpZHRoOiB1bnNldDtcblx0XHR3aWR0aDogdW5zZXQgIWltcG9ydGFudDtcblx0fVxuPC9zdHlsZT5cbiIsICJpbXBvcnQgeyBTVElDS0VSX1BPUE9WRVJfSUQgfSBmcm9tICdAL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBzZXR0aW5nc1N0b3JlIH0gZnJvbSAnQC9zZXR0aW5ncyc7XG5pbXBvcnQgeyB0eXBlIENvbXBvbmVudFR5cGUgfSBmcm9tICdzdmVsdGUnO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSAnc3ZlbHRlL3N0b3JlJztcbmltcG9ydCB7IHR5cGUgVFdpbmRvd0V2ZW50cyB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IEJhc2VDb21wb25lbnRCZWhhdmlvciB9IGZyb20gJy4vYmFzZS1jb21wb25lbnQtYmVoYXZpb3InO1xuaW1wb3J0IHsgZ2V0UG9wb3Zlckluc3RhbmNlLCBQb3BvdmVyIH0gZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IHR5cGUgVFN0aWNrZXJQb3BvdmVyUGFyYW1zID0ge1xuICAgIGlkOiB0eXBlb2YgU1RJQ0tFUl9QT1BPVkVSX0lELFxuICAgIHZpZXc6IHtcbiAgICAgICAgQ29tcG9uZW50OiBDb21wb25lbnRUeXBlO1xuICAgICAgICBwcm9wcz86IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xuICAgIH0sXG59XG5cbmV4cG9ydCBjbGFzcyBTdGlja2VyUG9wb3ZlckJlaGF2aW9yIGV4dGVuZHMgQmFzZUNvbXBvbmVudEJlaGF2aW9yIHtcbiAgICBwdWJsaWMgcmVmSHRtbEVsOiBIVE1MRWxlbWVudCB8IG51bGwgPSBudWxsO1xuICAgIHB1YmxpYyBib3VuZENhbGxiYWNrcyA9IG5ldyBNYXAoKTtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXJhbXM6IFRTdGlja2VyUG9wb3ZlclBhcmFtcykge1xuICAgICAgICBzdXBlcihwYXJhbXMuaWQsIHBhcmFtcy52aWV3KVxuICAgIH1cblxuICAgIHB1YmxpYyBvcGVuKHJlZkh0bWxFbDogSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5yZWZIdG1sRWwgPSByZWZIdG1sRWw7XG4gICAgICAgIHN1cGVyLm9wZW4ocmVmSHRtbEVsKTtcblxuICAgICAgICB0aGlzLmdldFNlYXJjaElucHV0KCk/LmZvY3VzKCk7XG4gICAgICAgIHRoaXMuYWRkV2luZG93TGlzdGVuZXJzKHRoaXMuZ2V0V2luZG93RXZlbnRzKCksIHRoaXMsIHRoaXMuYm91bmRDYWxsYmFja3MpO1xuICAgIH1cblxuICAgIHB1YmxpYyBjbG9zZSgpIHtcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcblxuICAgICAgICB0aGlzLmdldFNlYXJjaElucHV0KCk/LmJsdXIoKTtcbiAgICAgICAgdGhpcy5yZW1vdmVXaW5kb3dMaXN0ZW5lcnModGhpcy5nZXRXaW5kb3dFdmVudHMoKSwgdGhpcy5ib3VuZENhbGxiYWNrcyk7XG4gICAgfVxuICAgIHB1YmxpYyBjbGVhbnVwKCkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuY29tcG9uZW50LiRkZXN0cm95KCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRXaW5kb3dFdmVudHMoKTogVFdpbmRvd0V2ZW50cyB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjbGljazogdGhpcy5oYW5kbGVXaW5kb3dDbGljayxcbiAgICAgICAgICAgIGF1eGNsaWNrOiB0aGlzLmhhbmRsZVdpbmRvd0NsaWNrLFxuICAgICAgICAgICAga2V5ZG93bjogdGhpcy5oYW5kbGVXaW5kb3dLZXlkb3duXG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIGhhbmRsZVdpbmRvd0NsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGV2ID0gZXZlbnQgYXMgTW91c2VFdmVudCAmIHsgdGFyZ2V0OiBIVE1MRWxlbWVudCB8IG51bGwgfTtcblxuICAgICAgICBjb25zdCBtZW51RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudScpO1xuXG4gICAgICAgIGNvbnN0IHN0aWNrZXJFbFRvdWNoZWQgPVxuICAgICAgICAgICAgdGhpcy5jb21wb25lbnRIdG1sRWw/LmNvbnRhaW5zKGV2LnRhcmdldCkgfHxcbiAgICAgICAgICAgIGV2LnRhcmdldD8uaWQuaW5jbHVkZXMoU1RJQ0tFUl9QT1BPVkVSX0lEKTtcbiAgICAgICAgY29uc3QgbWVudUVsVG91Y2hlZCA9IG1lbnVFbD8uY29udGFpbnMoZXYudGFyZ2V0KSB8fCBldi50YXJnZXQ/LmNsYXNzTmFtZS5pbmNsdWRlcygnbWVudScpO1xuXG4gICAgICAgIC8vIGNsb3NlIFNQIGlmIHVzZXIgY2xpY2tzIGFueXdoZXJlIGJ1dCBTUFxuICAgICAgICBpZiAoZ2V0UG9wb3Zlckluc3RhbmNlKHRoaXMucGFyYW1zPy5pZCk/Lm9wZW5lZCAmJiAhc3RpY2tlckVsVG91Y2hlZCAmJiAhbWVudUVsVG91Y2hlZCkge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcHVibGljIGhhbmRsZVdpbmRvd0tleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICAgICAgY29uc3Qgc2V0dGluZ3MgPSBnZXQoc2V0dGluZ3NTdG9yZSk7XG5cbiAgICAgICAgY29uc3QgZm9jdXNhYmxlU2VsZWN0b3JzID1cbiAgICAgICAgICAgICc6aXMoYVtocmVmXSwgYnV0dG9uLCBpbnB1dCwgdGV4dGFyZWEsIHNlbGVjdCwgZGV0YWlscywgW3RhYmluZGV4XSk6bm90KFt0YWJpbmRleD1cIi0xXCJdKSc7XG5cbiAgICAgICAgY29uc3QgZm9jdXNhYmxlUG9wb3ZlckVsZW1lbnRzOiBIVE1MRWxlbWVudFtdID0gQXJyYXkuZnJvbShcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50SHRtbEVsLnF1ZXJ5U2VsZWN0b3JBbGwoZm9jdXNhYmxlU2VsZWN0b3JzKVxuICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IHJlZmVyZW5jZUVsRm9jdXNlZDogYm9vbGVhbiA9XG4gICAgICAgICAgICAoZ2V0UG9wb3Zlckluc3RhbmNlKHRoaXMucGFyYW1zLmlkKT8ub3BlbmVkICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IHRoaXMucmVmSHRtbEVsKSB8fCBmYWxzZTtcbiAgICAgICAgLy8gV2hlbiB0aGUgdXNlciBmb2N1c2VzIG9uICdyZWZlcmVuY2VFbCcgYW5kIHRoZW4gcHJlc3NlcyB0aGUgVGFiIG9yIEFycm93RG93biBrZXksIHRoZSBmaXJzdCBlbGVtZW50IGluc2lkZSB0aGUgdmlldyBzaG91bGQgcmVjZWl2ZSBmb2N1cy5cbiAgICAgICAgLy8gVE9ETzogbWFrZSBpdCB3b3JrIVxuICAgICAgICBpZiAoXG4gICAgICAgICAgICByZWZlcmVuY2VFbEZvY3VzZWQgJiZcbiAgICAgICAgICAgIChldmVudC5rZXkgPT09ICdBcnJvd0Rvd24nIHx8IGV2ZW50LmtleSA9PT0gJ1RhYicpICYmXG4gICAgICAgICAgICBmb2N1c2FibGVQb3BvdmVyRWxlbWVudHMubGVuZ3RoID4gMFxuICAgICAgICApIHtcbiAgICAgICAgICAgIGZvY3VzYWJsZVBvcG92ZXJFbGVtZW50c1swXS5mb2N1cygpO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICAgICAgY29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdlbS1lbW9qaS1waWNrZXInKT8uc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2VhcmNoSW5wdXQgYWN0aXZlIGFuZCBldmVudDogXCIsIGV2ZW50LCBzZWFyY2hJbnB1dCwgc2VhcmNoSW5wdXQ/LmlzQWN0aXZlRWxlbWVudCgpKTtcblxuICAgICAgICAgICAgaWYgKHNldHRpbmdzLnBvcG92ZXJzQ2xvc2luZy5jbG9zZVBvcG92ZXJzT25lQnlPbmVPbkVzY0tleWRvd24pIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIFBvcG92ZXIuaW5zdGFuY2VzLmZvckVhY2goKGluc3RhbmNlKSA9PiBpbnN0YW5jZT8uY2xvc2UoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnJlZkh0bWxFbD8uZm9jdXMoKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHByaXZhdGUgZ2V0U2VhcmNoSW5wdXQoKSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdlbS1lbW9qaS1waWNrZXInKT8uc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcbiAgICB9XG59XG4iLCAiaW1wb3J0IHsgQ0FMRU5EQVJfUE9QT1ZFUl9JRCwgRklMRV9NRU5VX1BPUE9WRVJfSUQsIFNUSUNLRVJfUE9QT1ZFUl9JRCB9IGZyb20gXCJAL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgQmFzZUNvbXBvbmVudEJlaGF2aW9yIH0gZnJvbSBcIi4vYmFzZS1jb21wb25lbnQtYmVoYXZpb3JcIjtcbmltcG9ydCB7IENhbGVuZGFyUG9wb3ZlckJlaGF2aW9yLCB0eXBlIFRDYWxlbmRhclBvcG92ZXJQYXJhbXMgfSBmcm9tIFwiLi9jYWxlbmRhclwiO1xuaW1wb3J0IHsgRmlsZU1lbnVQb3BvdmVyQmVoYXZpb3IsIHR5cGUgVEZpbGVNZW51T3BlblBhcmFtcywgdHlwZSBURmlsZU1lbnVQb3BvdmVyUGFyYW1zIH0gZnJvbSBcIi4vZmlsZS1tZW51XCI7XG5pbXBvcnQgeyBTdGlja2VyUG9wb3ZlckJlaGF2aW9yLCB0eXBlIFRTdGlja2VyUG9wb3ZlclBhcmFtcyB9IGZyb20gXCIuL3N0aWNrZXJcIjtcblxuZXhwb3J0IHR5cGUgVFBvcG92ZXJUeXBlID0gdHlwZW9mIENBTEVOREFSX1BPUE9WRVJfSUQgfCB0eXBlb2YgU1RJQ0tFUl9QT1BPVkVSX0lEIHwgdHlwZW9mIEZJTEVfTUVOVV9QT1BPVkVSX0lEO1xuZXhwb3J0IHR5cGUgVFBvcG92ZXJQYXJhbXMgPSBUQ2FsZW5kYXJQb3BvdmVyUGFyYW1zIHwgVFN0aWNrZXJQb3BvdmVyUGFyYW1zIHwgVEZpbGVNZW51UG9wb3ZlclBhcmFtcztcblxuZXhwb3J0IGNsYXNzIFBvcG92ZXIge1xuICAgIHN0YXRpYyBpbnN0YW5jZXMgPSBuZXcgTWFwPFRQb3BvdmVyVHlwZSwgUG9wb3Zlcj4oKTtcbiAgICBzdGF0aWMgYmVoYXZpb3JJbnN0YW5jZXMgPSBuZXcgTWFwPFRQb3BvdmVyVHlwZSwgUmV0dXJuVHlwZTx0eXBlb2YgY3JlYXRlQmVoYXZpb3I+PigpO1xuICAgIHN0YXRpYyBtdXRhdGlvbk9ic2VydmVyU3RhcnRlZCA9IGZhbHNlO1xuICAgIHB1YmxpYyBvcGVuZWQgPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIGlkOiBUUG9wb3ZlclR5cGUsXG4gICAgICAgIHByaXZhdGUgYmVoYXZpb3I6IEJhc2VDb21wb25lbnRCZWhhdmlvciB8IEZpbGVNZW51UG9wb3ZlckJlaGF2aW9yLFxuICAgICkgeyB9XG5cbiAgICBzdGF0aWMgY3JlYXRlKHBhcmFtczogVENhbGVuZGFyUG9wb3ZlclBhcmFtcyB8IFRTdGlja2VyUG9wb3ZlclBhcmFtcyB8IFRGaWxlTWVudVBvcG92ZXJQYXJhbXMpIHtcbiAgICAgICAgbGV0IHBvcG92ZXIgPSBnZXRQb3BvdmVySW5zdGFuY2UocGFyYW1zLmlkKTtcbiAgICAgICAgaWYgKCFwb3BvdmVyKSB7XG4gICAgICAgICAgICBjb25zdCBiZWhhdmlvciA9IGNyZWF0ZUJlaGF2aW9yKHBhcmFtcyk7XG4gICAgICAgICAgICBwb3BvdmVyID0gbmV3IFBvcG92ZXIocGFyYW1zLmlkLCBiZWhhdmlvcik7XG4gICAgICAgICAgICBQb3BvdmVyLmluc3RhbmNlcy5zZXQocGFyYW1zLmlkLCBwb3BvdmVyKTtcbiAgICAgICAgICAgIFBvcG92ZXIuYmVoYXZpb3JJbnN0YW5jZXMuc2V0KHBhcmFtcy5pZCwgYmVoYXZpb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHBvcG92ZXI7XG4gICAgfVxuICAgIHN0YXRpYyBjbGVhbnVwKCkge1xuICAgICAgICBQb3BvdmVyLmluc3RhbmNlcy5mb3JFYWNoKChwb3BvdmVyKSA9PiBwb3BvdmVyLmNsZWFudXAoKSk7XG4gICAgICAgIFBvcG92ZXIuaW5zdGFuY2VzLmNsZWFyKCk7XG4gICAgICAgIFBvcG92ZXIubXV0YXRpb25PYnNlcnZlclN0YXJ0ZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdG9nZ2xlKHBhcmFtOiBURmlsZU1lbnVPcGVuUGFyYW1zIHwgRWxlbWVudCkge1xuICAgICAgICBpZiAodGhpcy5vcGVuZWQpIHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMub3BlbihwYXJhbSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIG9wZW4ocGFyYW06IFRGaWxlTWVudU9wZW5QYXJhbXMgfCBFbGVtZW50KSB7XG4gICAgICAgIHRoaXMub3BlbmVkID0gdHJ1ZTtcbiAgICAgICAgaWYgKHBhcmFtIGluc3RhbmNlb2YgRWxlbWVudCkge1xuICAgICAgICAgICAgKHRoaXMuYmVoYXZpb3IgYXMgQmFzZUNvbXBvbmVudEJlaGF2aW9yKS5vcGVuKHBhcmFtKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcGFyYW0gPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICh0aGlzLmJlaGF2aW9yIGFzIEZpbGVNZW51UG9wb3ZlckJlaGF2aW9yKS5vcGVuKHBhcmFtIGFzIFRGaWxlTWVudU9wZW5QYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGNsb3NlKCkge1xuICAgICAgICB0aGlzLm9wZW5lZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmJlaGF2aW9yLmNsb3NlKCk7XG4gICAgfVxuICAgIHB1YmxpYyBjbGVhbnVwKCkge1xuICAgICAgICB0aGlzLmJlaGF2aW9yLmNsZWFudXAoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUJlaGF2aW9yKHBhcmFtczogVFBvcG92ZXJQYXJhbXMpIHtcbiAgICBzd2l0Y2ggKHBhcmFtcy5pZCkge1xuICAgICAgICBjYXNlIENBTEVOREFSX1BPUE9WRVJfSUQ6XG4gICAgICAgICAgICByZXR1cm4gbmV3IENhbGVuZGFyUG9wb3ZlckJlaGF2aW9yKHBhcmFtcyk7XG4gICAgICAgIGNhc2UgU1RJQ0tFUl9QT1BPVkVSX0lEOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBTdGlja2VyUG9wb3ZlckJlaGF2aW9yKHBhcmFtcyk7XG4gICAgICAgIGNhc2UgRklMRV9NRU5VX1BPUE9WRVJfSUQ6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEZpbGVNZW51UG9wb3ZlckJlaGF2aW9yKHBhcmFtcyk7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UG9wb3Zlckluc3RhbmNlKGlkOiBUUG9wb3ZlclR5cGUpIHtcbiAgICByZXR1cm4gUG9wb3Zlci5pbnN0YW5jZXMuZ2V0KGlkKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRCZWhhdmlvckluc3RhbmNlKGlkOiB0eXBlb2YgQ0FMRU5EQVJfUE9QT1ZFUl9JRCk6IENhbGVuZGFyUG9wb3ZlckJlaGF2aW9yIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJlaGF2aW9ySW5zdGFuY2UoaWQ6IHR5cGVvZiBTVElDS0VSX1BPUE9WRVJfSUQpOiBTdGlja2VyUG9wb3ZlckJlaGF2aW9yIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJlaGF2aW9ySW5zdGFuY2UoaWQ6IHR5cGVvZiBGSUxFX01FTlVfUE9QT1ZFUl9JRCk6IEZpbGVNZW51UG9wb3ZlckJlaGF2aW9yIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJlaGF2aW9ySW5zdGFuY2UoaWQ6IFRQb3BvdmVyVHlwZSk6IENhbGVuZGFyUG9wb3ZlckJlaGF2aW9yIHwgU3RpY2tlclBvcG92ZXJCZWhhdmlvciB8IEZpbGVNZW51UG9wb3ZlckJlaGF2aW9yIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gUG9wb3Zlci5iZWhhdmlvckluc3RhbmNlcy5nZXQoaWQpO1xufVxuIiwgImltcG9ydCB7IFNUSUNLRVJfUE9QT1ZFUl9JRCB9IGZyb20gXCJAL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZ2V0Tm90ZURhdGVVSUQgfSBmcm9tIFwiQC9pb1wiO1xuaW1wb3J0IHsgc2V0dGluZ3NTdG9yZSB9IGZyb20gXCJAL3NldHRpbmdzXCI7XG5pbXBvcnQgeyBub3Rlc1N0b3Jlcywgc3RpY2tlckNvbXBvbmVudFByb3BzU3RvcmUgfSBmcm9tIFwiQC9zdG9yZXNcIjtcbmltcG9ydCBkYXRhIGZyb20gXCJAZW1vamktbWFydC9kYXRhXCI7XG5pbXBvcnQgeyBQaWNrZXIgfSBmcm9tIFwiZW1vamktbWFydFwiO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSBcInN2ZWx0ZS9zdG9yZVwiO1xuaW1wb3J0IHsgZ2V0QmVoYXZpb3JJbnN0YW5jZSwgZ2V0UG9wb3Zlckluc3RhbmNlLCBQb3BvdmVyIH0gZnJvbSBcIi4uL3BvcG92ZXJzXCI7XG5pbXBvcnQgeyB0eXBlIFRhZ0NhY2hlIH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5cbnR5cGUgVEVtb2ppID0ge1xuICAgIGFsaWFzZXM/OiBzdHJpbmdbXSxcbiAgICBpZDogc3RyaW5nLFxuICAgIGtleXdvcmRzOiBzdHJpbmdbXSxcbiAgICBuYW1lOiBzdHJpbmcsXG4gICAgbmF0aXZlOiBzdHJpbmcsXG4gICAgc2hvcnRjb2Rlczogc3RyaW5nLFxuICAgIHNraW4/OiBudW1iZXIsXG4gICAgdW5pZmllZDogc3RyaW5nLFxufVxuXG5leHBvcnQgY29uc3Qgb25JbnB1dEtleWRvd24gPSAoZXY6IEtleWJvYXJkRXZlbnQpID0+IHtcbiAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2VtLWVtb2ppLXBpY2tlcicpPy5zaGFkb3dSb290Py5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpO1xuICAgIGNvbnN0IHNldHRpbmdzID0gZ2V0KHNldHRpbmdzU3RvcmUpO1xuICAgIGNvbnN0IHN0aWNrZXJJbnN0YW5jZSA9IGdldFBvcG92ZXJJbnN0YW5jZShTVElDS0VSX1BPUE9WRVJfSUQpO1xuICAgIGNvbnN0IHN0aWNrZXJCZWhhdmlvckluc3RhbmNlID0gZ2V0QmVoYXZpb3JJbnN0YW5jZShTVElDS0VSX1BPUE9WRVJfSUQpO1xuXG4gICAgaWYgKGV2LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgaWYgKHNldHRpbmdzLnBvcG92ZXJzQ2xvc2luZy5jbG9zZVBvcG92ZXJzT25lQnlPbmVPbkVzY0tleWRvd24pIHtcbiAgICAgICAgICAgIGlucHV0ICYmIGlucHV0LmJsdXIoKTtcbiAgICAgICAgICAgIHN0aWNrZXJJbnN0YW5jZT8uY2xvc2UoKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgUG9wb3Zlci5pbnN0YW5jZXMuZm9yRWFjaCgoaW5zdGFuY2UpID0+IGluc3RhbmNlPy5jbG9zZSgpKTtcbiAgICAgICAgfVxuICAgICAgICBzdGlja2VyQmVoYXZpb3JJbnN0YW5jZT8ucmVmSHRtbEVsPy5mb2N1cygpO1xuICAgIH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplUGlja2VyKFxuICAgIGNvbnRhaW5lcjogSFRNTEVsZW1lbnQsXG4gICAgdGhlbWU6IFwibGlnaHRcIiB8IFwiZGFya1wiIHwgbnVsbCxcbikge1xuICAgIGNvbnN0IHBpY2tlck9wdGlvbnMgPSB7XG4gICAgICAgIGRhdGEsXG4gICAgICAgIG9uRW1vamlTZWxlY3Q6IGFzeW5jIChlbW9qaTogVEVtb2ppKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzdGlja2VySW5zdGFuY2UgPSBnZXRQb3BvdmVySW5zdGFuY2UoU1RJQ0tFUl9QT1BPVkVSX0lEKTtcbiAgICAgICAgICAgIHN0aWNrZXJJbnN0YW5jZT8uY2xvc2UoKVxuXG4gICAgICAgICAgICBjb25zdCB7IGRhdGUsIGdyYW51bGFyaXR5IH0gPSBnZXQoc3RpY2tlckNvbXBvbmVudFByb3BzU3RvcmUpO1xuICAgICAgICAgICAgY29uc3Qgbm90ZVN0b3JlID0gZ3JhbnVsYXJpdHkgPyBub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0gOiBudWxsO1xuICAgICAgICAgICAgY29uc3Qgbm90ZURhdGVVSUQgPSBkYXRlICYmIGdyYW51bGFyaXR5ID8gZ2V0Tm90ZURhdGVVSUQoeyBkYXRlLCBncmFudWxhcml0eSB9KSA6IG51bGw7XG5cbiAgICAgICAgICAgIGlmIChub3RlU3RvcmUgJiYgbm90ZURhdGVVSUQpIHtcbiAgICAgICAgICAgICAgICAvLyB1cGRhdGUgc3RvcmUgd2l0aCBuZXcgZW1vamlcbiAgICAgICAgICAgICAgICBub3RlU3RvcmUudXBkYXRlKCh2YWx1ZXMpID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIC4uLnZhbHVlcyxcbiAgICAgICAgICAgICAgICAgICAgW25vdGVEYXRlVUlEXToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZTogdmFsdWVzW25vdGVEYXRlVUlEXS5maWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RpY2tlcjogZW1vamkubmF0aXZlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgICAgICAvLyB1cGRhdGUgbm90ZSB3aXRoIG5ldyBlbW9qaSB0YWdcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxlID0gZ2V0KG5vdGVTdG9yZSlbbm90ZURhdGVVSURdLmZpbGU7XG4gICAgICAgICAgICAgICAgY29uc3QgdGFncyA9IHdpbmRvdy5hcHAubWV0YWRhdGFDYWNoZS5nZXRGaWxlQ2FjaGUoZmlsZSk/LnRhZ3M7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IGF3YWl0IHdpbmRvdy5hcHAudmF1bHQucmVhZChmaWxlKVxuICAgICAgICAgICAgICAgIGxldCB1cGRhdGVkQ29udGVudCA9IGNvbnRlbnRcblxuICAgICAgICAgICAgICAgIGNvbnN0IGhhc0Vtb2ppID0gZG9UYWdzSW5jbHVkZUVtb2ppKHRhZ3MpXG4gICAgICAgICAgICAgICAgaWYgKGhhc0Vtb2ppKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJlZiA9IHVwZGF0ZWRDb250ZW50LnNsaWNlKDAsIGhhc0Vtb2ppLnN0YXJ0T2Zmc2V0KVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBhZnQgPSB1cGRhdGVkQ29udGVudC5zbGljZShoYXNFbW9qaS5lbmRPZmZzZXQpXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZWRDb250ZW50ID0gYCR7YmVmfSMke2Vtb2ppLm5hdGl2ZX0ke2FmdH1gO1xuXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hcHAudmF1bHQubW9kaWZ5KGZpbGUsIHVwZGF0ZWRDb250ZW50KVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpcnN0TGluZSA9IHVwZGF0ZWRDb250ZW50LnNwbGl0KCdcXG4nKVswXS50cmltKCk7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hcHAudmF1bHQubW9kaWZ5KGZpbGUsIGAjJHtlbW9qaS5uYXRpdmV9JHtmaXJzdExpbmUgIT09IFwiXCIgPyBcIiBcXG5cIiA6IFwiXCJ9JHt1cGRhdGVkQ29udGVudH0gYClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBhdXRvRm9jdXM6IHRydWUsXG4gICAgICAgIGVtb2ppQnV0dG9uQ29sb3JzOiBbJ2NvbG9yLW1peChpbiBzcmdiLCB2YXIoLS1pbnRlcmFjdGl2ZS1hY2NlbnQpIDIwJSwgdHJhbnNwYXJlbnQpJ10sXG4gICAgICAgIHRoZW1lLFxuICAgIH07XG5cbiAgICBjb25zdCBwaWNrZXJFbCA9IG5ldyBQaWNrZXIocGlja2VyT3B0aW9ucyk7XG4gICAgY29uc3Qgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHkpXG4gICAgY29uc3QgaCA9IHBhcnNlSW50KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJy0tYWNjZW50LWgnKSk7XG4gICAgY29uc3QgcyA9IHBhcnNlSW50KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJy0tYWNjZW50LXMnKSk7XG4gICAgY29uc3QgbCA9IHBhcnNlSW50KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJy0tYWNjZW50LWwnKSk7XG5cbiAgICBjb25zdCBhY2NlbnRSZ2IgPSBoc2xUb1JnYihoIC8gMzYwLCBzIC8gMTAwLCBsIC8gMTAwKVxuICAgIHBpY2tlckVsLmluamVjdFN0eWxlcyhgXG4gICAgICAgIHNlY3Rpb24jcm9vdCB7XG4gICAgICAgICAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1pbnRlcmZhY2UpO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgLS1yZ2ItYWNjZW50OiAke2FjY2VudFJnYlswXX0sICR7YWNjZW50UmdiWzFdfSwgJHthY2NlbnRSZ2JbMl19O1xuICAgICAgICAgICAgLS1jb2xvci1hOiB2YXIoLS1pbnRlcmFjdGl2ZS1hY2NlbnQtaG92ZXIpO1xuICAgICAgICAgICAgLS1jb2xvci1iOiB2YXIoLS10ZXh0LW11dGVkKTtcbiAgICAgICAgfVxuICAgICAgICAuc3RpY2t5IHtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgYCk7XG5cbiAgICBjb25zdCBwaWNrZXJIdG1sRWwgPSBwaWNrZXJFbCBhcyB1bmtub3duIGFzIEhUTUxFbGVtZW50XG4gICAgY29udGFpbmVyLmZpcnN0Q2hpbGQgJiYgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQocGlja2VySHRtbEVsKTtcblxuICAgIGhhbmRsZU11dGF0aW9uT2JzZXJ2ZXIocGlja2VySHRtbEVsLnNoYWRvd1Jvb3QpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVNdXRhdGlvbk9ic2VydmVyKHNoYWRvd1Jvb3Q6IFNoYWRvd1Jvb3QgfCBudWxsKSB7XG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigobXV0YXRpb25zKSA9PiB7XG4gICAgICAgIG11dGF0aW9ucy5mb3JFYWNoKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlucHV0ID0gc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcblxuICAgICAgICAgICAgaWYgKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIG9uSW5wdXRLZXlkb3duLCB0cnVlKTtcblxuICAgICAgICAgICAgICAgIC8vIFN0b3Agb2JzZXJ2aW5nIG9uY2UgdGhlIGVsZW1lbnQgaXMgZm91bmRcbiAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gU3RhcnQgb2JzZXJ2aW5nIGNoYW5nZXMgaW4gdGhlIHNoYWRvdyBET01cbiAgICBzaGFkb3dSb290ICYmIG9ic2VydmVyLm9ic2VydmUoc2hhZG93Um9vdCwgeyBzdWJ0cmVlOiB0cnVlLCBjaGlsZExpc3Q6IHRydWUgfSk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYW4gSFNMIGNvbG9yIHZhbHVlIHRvIFJHQi4gQ29udmVyc2lvbiBmb3JtdWxhXG4gKiBhZGFwdGVkIGZyb20gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSFNMX2NvbG9yX3NwYWNlLlxuICogQXNzdW1lcyBoLCBzLCBhbmQgbCBhcmUgY29udGFpbmVkIGluIHRoZSBzZXQgWzAsIDFdIGFuZFxuICogcmV0dXJucyByLCBnLCBhbmQgYiBpbiB0aGUgc2V0IFswLCAyNTVdLlxuICpcbiAqIEBwYXJhbSAgIHtudW1iZXJ9ICBoICAgICAgIFRoZSBodWVcbiAqIEBwYXJhbSAgIHtudW1iZXJ9ICBzICAgICAgIFRoZSBzYXR1cmF0aW9uXG4gKiBAcGFyYW0gICB7bnVtYmVyfSAgbCAgICAgICBUaGUgbGlnaHRuZXNzXG4gKiBAcmV0dXJuICB7QXJyYXl9ICAgICAgICAgICBUaGUgUkdCIHJlcHJlc2VudGF0aW9uXG4gKi9cbmZ1bmN0aW9uIGhzbFRvUmdiKGg6IG51bWJlciwgczogbnVtYmVyLCBsOiBudW1iZXIpOiBBcnJheTxudW1iZXI+IHtcbiAgICBsZXQgciwgZywgYjtcblxuICAgIGlmIChzID09PSAwKSB7XG4gICAgICAgIHIgPSBnID0gYiA9IGw7IC8vIGFjaHJvbWF0aWNcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBxID0gbCA8IDAuNSA/IGwgKiAoMSArIHMpIDogbCArIHMgLSBsICogcztcbiAgICAgICAgY29uc3QgcCA9IDIgKiBsIC0gcTtcbiAgICAgICAgciA9IGh1ZVRvUmdiKHAsIHEsIGggKyAxIC8gMyk7XG4gICAgICAgIGcgPSBodWVUb1JnYihwLCBxLCBoKTtcbiAgICAgICAgYiA9IGh1ZVRvUmdiKHAsIHEsIGggLSAxIC8gMyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFtNYXRoLnJvdW5kKHIgKiAyNTUpLCBNYXRoLnJvdW5kKGcgKiAyNTUpLCBNYXRoLnJvdW5kKGIgKiAyNTUpXTtcbn1cblxuZnVuY3Rpb24gaHVlVG9SZ2IocDogbnVtYmVyLCBxOiBudW1iZXIsIHQ6IG51bWJlcikge1xuICAgIGlmICh0IDwgMCkgdCArPSAxO1xuICAgIGlmICh0ID4gMSkgdCAtPSAxO1xuICAgIGlmICh0IDwgMSAvIDYpIHJldHVybiBwICsgKHEgLSBwKSAqIDYgKiB0O1xuICAgIGlmICh0IDwgMSAvIDIpIHJldHVybiBxO1xuICAgIGlmICh0IDwgMiAvIDMpIHJldHVybiBwICsgKHEgLSBwKSAqICgyIC8gMyAtIHQpICogNjtcbiAgICByZXR1cm4gcDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRvVGFnc0luY2x1ZGVFbW9qaSh0YWdzPzogVGFnQ2FjaGVbXSkge1xuICAgIGlmICh0YWdzKSB7XG4gICAgICAgIGxldCBoYXNFbW9qaTogeyBlbW9qaTogc3RyaW5nLCBzdGFydE9mZnNldDogbnVtYmVyLCBlbmRPZmZzZXQ6IG51bWJlciB9IHwgbnVsbCA9IG51bGw7XG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0YWdzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgY29uc3QgdGFnT2JqID0gdGFnc1tpbmRleF07XG5cbiAgICAgICAgICAgIGlmICgvXFxwe1JHSV9FbW9qaX0vdi50ZXN0KHRhZ09iai50YWcpKSB7XG4gICAgICAgICAgICAgICAgaGFzRW1vamkgPSB7XG4gICAgICAgICAgICAgICAgICAgIGVtb2ppOiB0YWdPYmoudGFnLnNsaWNlKDEpLFxuICAgICAgICAgICAgICAgICAgICBzdGFydE9mZnNldDogdGFnT2JqLnBvc2l0aW9uLnN0YXJ0Lm9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgZW5kT2Zmc2V0OiB0YWdPYmoucG9zaXRpb24uZW5kLm9mZnNldCxcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaGFzRW1vamlcbiAgICB9XG59XG4iLCAiaW1wb3J0IHsgRklMRV9NRU5VX1BPUE9WRVJfSUQgfSBmcm9tICdAL2NvbnN0YW50cyc7XG5pbXBvcnQgdHlwZSB7IElHcmFudWxhcml0eSB9IGZyb20gJ0AvaW8nO1xuaW1wb3J0IHsgY3JlYXRlT3JPcGVuTm90ZSwgZ2V0Tm90ZUZyb21TdG9yZSwgZ2V0UGVyaW9kaWNpdHlGcm9tR3JhbnVsYXJpdHkgfSBmcm9tIFwiQC9pb1wiO1xuaW1wb3J0IHsgZ2V0Tm90ZVNldHRpbmdzIH0gZnJvbSAnQC9pby9zZXR0aW5ncyc7XG5pbXBvcnQgeyBzZXR0aW5nc1N0b3JlIH0gZnJvbSAnQC9zZXR0aW5ncyc7XG5pbXBvcnQgdHlwZSB7IE1vbWVudCB9IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdzdmVsdGUvc3RvcmUnO1xuaW1wb3J0IHsgUG9wb3ZlciB9IGZyb20gJy4uL3BvcG92ZXJzJztcblxudHlwZSBUT25DbGljayA9ICh7XG4gICAgZGF0ZSxcbiAgICBjcmVhdGVOZXdTcGxpdExlYWYsXG4gICAgZ3JhbnVsYXJpdHlcbn06IHtcbiAgICBkYXRlOiBNb21lbnQ7XG4gICAgY3JlYXRlTmV3U3BsaXRMZWFmOiBib29sZWFuO1xuICAgIGdyYW51bGFyaXR5OiBJR3JhbnVsYXJpdHk7XG59KSA9PiBQcm9taXNlPHZvaWQ+O1xudHlwZSBUT25Ib3ZlciA9ICh7XG4gICAgZGF0ZSxcbiAgICB0YXJnZXRFbCxcbiAgICBpc0NvbnRyb2xQcmVzc2VkLFxuICAgIGdyYW51bGFyaXR5XG59OiB7XG4gICAgZGF0ZTogTW9tZW50O1xuICAgIHRhcmdldEVsOiBFdmVudFRhcmdldCB8IG51bGw7XG4gICAgaXNDb250cm9sUHJlc3NlZDogYm9vbGVhbjtcbiAgICBncmFudWxhcml0eTogSUdyYW51bGFyaXR5O1xufSkgPT4gdm9pZDtcbnR5cGUgVE9uQ29udGV4dE1lbnUgPSAoe1xuICAgIGRhdGUsXG4gICAgZXZlbnQsXG4gICAgZ3JhbnVsYXJpdHlcbn06IHtcbiAgICBkYXRlOiBNb21lbnQ7XG4gICAgZXZlbnQ6IE1vdXNlRXZlbnQ7XG4gICAgZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eTtcbn0pID0+IHZvaWQ7XG5cbi8vIENvbXBvbmVudCBldmVudCBoYW5kbGVyc1xuY29uc3Qgb25DbGljayA9IGFzeW5jICh7XG4gICAgZGF0ZSxcbiAgICBjcmVhdGVOZXdTcGxpdExlYWYsXG4gICAgZ3JhbnVsYXJpdHlcbn06IFBhcmFtZXRlcnM8VE9uQ2xpY2s+WzBdKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgY29uc3QgbGVhZiA9IHdpbmRvdy5hcHAud29ya3NwYWNlLmdldExlYWYoY3JlYXRlTmV3U3BsaXRMZWFmKTtcblxuICAgIGNyZWF0ZU9yT3Blbk5vdGUoeyBsZWFmLCBkYXRlLCBncmFudWxhcml0eSB9KTtcbn07XG5cbmNvbnN0IG9uSG92ZXIgPSAoe1xuICAgIGRhdGUsXG4gICAgdGFyZ2V0RWwsXG4gICAgaXNDb250cm9sUHJlc3NlZCxcbiAgICBncmFudWxhcml0eVxufTogUGFyYW1ldGVyczxUT25Ib3Zlcj5bMF0pOiB2b2lkID0+IHtcbiAgICBjb25zdCB7IGZvcm1hdCB9ID0gZ2V0Tm90ZVNldHRpbmdzKClbZ3JhbnVsYXJpdHldO1xuICAgIGNvbnN0IG5vdGUgPSBnZXROb3RlRnJvbVN0b3JlKHsgZGF0ZSwgZ3JhbnVsYXJpdHkgfSk7XG5cbiAgICBpZiAoaXNDb250cm9sUHJlc3NlZCB8fCBnZXQoc2V0dGluZ3NTdG9yZSkuYXV0b0hvdmVyUHJldmlldykge1xuICAgICAgICB3aW5kb3cuYXBwLndvcmtzcGFjZS50cmlnZ2VyKCdsaW5rLWhvdmVyJywgdGFyZ2V0RWwsIGRhdGUuZm9ybWF0KGZvcm1hdCksIG5vdGU/LnBhdGgpO1xuICAgIH1cbn07XG5cbmNvbnN0IG9uQ29udGV4dE1lbnUgPSAoeyBkYXRlLCBldmVudCwgZ3JhbnVsYXJpdHkgfTogUGFyYW1ldGVyczxUT25Db250ZXh0TWVudT5bMF0pOiB2b2lkID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIlx1RDgzQ1x1REYzRiBhYm91dCB0byBzaG93IGNvbnRleHQgbWVudSBmb3IgZ3JhbnVsYXJpdHkgYW5kIGRhdGVcIiwgZ3JhbnVsYXJpdHksIGRhdGUpO1xuICAgIGNvbnN0IG5vdGUgPSBnZXROb3RlRnJvbVN0b3JlKHsgZGF0ZSwgZ3JhbnVsYXJpdHkgfSk7XG4gICAgY29uc29sZS5sb2coXCJcdUQ4M0NcdURGM0Ygbm90ZSBmcm9tIHN0b3JlOiBcIiwgbm90ZSk7XG5cbiAgICBQb3BvdmVyLmNyZWF0ZSh7XG4gICAgICAgIGlkOiBGSUxFX01FTlVfUE9QT1ZFUl9JRFxuICAgIH0pLm9wZW4oeyBldmVudCwgbm90ZSwgZGF0ZSwgZ3JhbnVsYXJpdHkgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZXZlbnRIYW5kbGVycyA9IHtcbiAgICBvbkNsaWNrLFxuICAgIG9uSG92ZXIsXG4gICAgb25Db250ZXh0TWVudVxufVxuIiwgImltcG9ydCB7IGxvY2FsZURhdGFTdG9yZSB9IGZyb20gJ0Avc3RvcmVzJztcbmltcG9ydCB0eXBlIHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcbmltcG9ydCB7IGdldCB9IGZyb20gJ3N2ZWx0ZS9zdG9yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVdlZWsge1xuICAgIGRheXM6IE1vbWVudFtdO1xuICAgIHdlZWtOdW06IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgSU1vbnRoID0gSVdlZWtbXTtcblxuZnVuY3Rpb24gaXNNYWNPUygpIHtcbiAgICByZXR1cm4gbmF2aWdhdG9yLmFwcFZlcnNpb24uaW5kZXhPZignTWFjJykgIT09IC0xO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNDb250cm9sUHJlc3NlZChlOiBNb3VzZUV2ZW50IHwgS2V5Ym9hcmRFdmVudCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBpc01hY09TKCkgPyBlLm1ldGFLZXkgOiBlLmN0cmxLZXk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREYXlzT2ZXZWVrKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gd2luZG93Lm1vbWVudC53ZWVrZGF5c1Nob3J0KHRydWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNXZWVrZW5kKGRhdGU6IE1vbWVudCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBkYXRlLmlzb1dlZWtkYXkoKSA9PT0gNiB8fCBkYXRlLmlzb1dlZWtkYXkoKSA9PT0gNztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0YXJ0T2ZXZWVrKGRheXM6IE1vbWVudFtdKTogTW9tZW50IHtcbiAgICByZXR1cm4gZGF5c1swXS53ZWVrZGF5KDApO1xufVxuLyoqXG4gKiBHZW5lcmF0ZSBhIDJEIGFycmF5IG9mIGRhaWx5IGluZm9ybWF0aW9uIHRvIHBvd2VyXG4gKiB0aGUgY2FsZW5kYXIgdmlldy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE1vbnRoKGRpc3BsYXllZERhdGU6IE1vbWVudCk6IElNb250aCB7XG4gICAgY29uc3QgbG9jYWxlID0gZGlzcGxheWVkRGF0ZS5sb2NhbGUoKTtcbiAgICBjb25zdCBtb250aCA9IFtdO1xuICAgIGxldCB3ZWVrOiBJV2VlayA9IHsgZGF5czogW10sIHdlZWtOdW06IDAgfTtcblxuICAgIGNvbnN0IHN0YXJ0T2ZNb250aCA9IGRpc3BsYXllZERhdGUuY2xvbmUoKS5sb2NhbGUobG9jYWxlKS5kYXRlKDEpO1xuICAgIGNvbnN0IHN0YXJ0T2Zmc2V0ID0gZ2V0KGxvY2FsZURhdGFTdG9yZSkud2Vla2RheXMuaW5kZXhPZihzdGFydE9mTW9udGguZm9ybWF0KCdkZGRkJykpO1xuICAgIGxldCBkYXRlOiBNb21lbnQgPSBzdGFydE9mTW9udGguY2xvbmUoKS5zdWJ0cmFjdChzdGFydE9mZnNldCwgJ2RheXMnKTtcblxuICAgIGZvciAobGV0IF9kYXkgPSAwOyBfZGF5IDwgNDI7IF9kYXkrKykge1xuICAgICAgICBpZiAoX2RheSAlIDcgPT09IDApIHtcbiAgICAgICAgICAgIHdlZWsgPSB7XG4gICAgICAgICAgICAgICAgZGF5czogW10sXG4gICAgICAgICAgICAgICAgd2Vla051bTogZGF0ZS53ZWVrKClcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBtb250aC5wdXNoKHdlZWspO1xuICAgICAgICB9XG5cbiAgICAgICAgd2Vlay5kYXlzLnB1c2goZGF0ZSk7XG4gICAgICAgIGRhdGUgPSBkYXRlLmNsb25lKCkuYWRkKDEsICdkYXlzJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1vbnRoO1xufVxuXG50eXBlIElZZWFycyA9IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbnR5cGUgSVllYXJzR3JvdXAgPSBbSVllYXJzLCBJWWVhcnMsIElZZWFycywgSVllYXJzXTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRZZWFycyh7IHN0YXJ0UmFuZ2VZZWFyIH06IHsgc3RhcnRSYW5nZVllYXI6IG51bWJlciB9KTogSVllYXJzR3JvdXAge1xuICAgIGxldCBjcnJSYW5nZVllYXIgPSBzdGFydFJhbmdlWWVhcjtcbiAgICBjb25zdCBDT0xVTU5TID0gMztcbiAgICBjb25zdCBST1dTID0gNDtcbiAgICBjb25zdCB5ZWFyczogSVllYXJzR3JvdXAgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBST1dTIH0sICgpID0+XG4gICAgICAgIEFycmF5KENPTFVNTlMpLmZpbGwoMClcbiAgICApIGFzIElZZWFyc0dyb3VwO1xuXG4gICAgZm9yIChsZXQgcm93SW5kZXggPSAwOyByb3dJbmRleCA8IFJPV1M7IHJvd0luZGV4KyspIHtcbiAgICAgICAgZm9yIChsZXQgY29sSW5kZXggPSAwOyBjb2xJbmRleCA8IENPTFVNTlM7IGNvbEluZGV4KyspIHtcbiAgICAgICAgICAgIHllYXJzW3Jvd0luZGV4XVtjb2xJbmRleF0gPSBjcnJSYW5nZVllYXI7XG4gICAgICAgICAgICBjcnJSYW5nZVllYXIrKztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB5ZWFycztcbn1cblxuZXhwb3J0ICogZnJvbSAnLi9waWNrZXInO1xuZXhwb3J0ICogZnJvbSAnLi9ldmVudC1oYW5kbGVycyc7XG4iLCAiaW1wb3J0IHsgZ3JhbnVsYXJpdGllcyB9IGZyb20gXCJAL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgbm90ZXNTdG9yZXMgfSBmcm9tIFwiQC9zdG9yZXNcIjtcbmltcG9ydCB7IGRvVGFnc0luY2x1ZGVFbW9qaSB9IGZyb20gXCJAL3VpL3V0aWxzXCI7XG5pbXBvcnQgeyB0eXBlIE1vbWVudCB9IGZyb20gXCJtb21lbnRcIjtcbmltcG9ydCB7IG5vcm1hbGl6ZVBhdGgsIE5vdGljZSwgVEZpbGUsIFRGb2xkZXIsIFZhdWx0IH0gZnJvbSBcIm9ic2lkaWFuXCI7XG5pbXBvcnQgeyBnZXQgfSBmcm9tIFwic3ZlbHRlL3N0b3JlXCI7XG5pbXBvcnQgeyBnZXROb3RlRGF0ZVVJRCwgZ2V0UGVyaW9kaWNpdHlGcm9tR3JhbnVsYXJpdHkgfSBmcm9tIFwiLi9wYXJzZVwiO1xuaW1wb3J0IHsgZ2V0Tm90ZVNldHRpbmdzIH0gZnJvbSBcIi4vc2V0dGluZ3NcIjtcbmltcG9ydCB7IHR5cGUgSUdyYW51bGFyaXR5IH0gZnJvbSBcIi4vdHlwZXNcIjtcbmltcG9ydCB7IGlzVmFsaWRQZXJpb2RpY05vdGUgfSBmcm9tIFwiLi92YWxpZGF0aW9uXCI7XG5pbXBvcnQgeyBzZXR0aW5nc1N0b3JlIH0gZnJvbSBcIkAvc2V0dGluZ3NcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldE5vdGVGcm9tU3RvcmUoe1xuICAgIGRhdGUsXG4gICAgZ3JhbnVsYXJpdHlcbn06IHtcbiAgICBkYXRlOiBNb21lbnQ7XG4gICAgZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eTtcbn0pOiBURmlsZSB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3Qgbm90ZXNTdG9yZSA9IGdldChub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0pO1xuXG4gICAgcmV0dXJuIG5vdGVzU3RvcmVbZ2V0Tm90ZURhdGVVSUQoeyBkYXRlLCBncmFudWxhcml0eSB9KV0/LmZpbGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdG9yZUFsbFZhdWx0UGVyaW9kaWNOb3RlcygpIHtcbiAgICBjb25zdCBub3RlU2V0dGluZ3MgPSBnZXROb3RlU2V0dGluZ3MoKTtcbiAgICBjb25zdCB1bmlxdWVGb2xkZXJzOiBSZWNvcmQ8c3RyaW5nLCBJR3JhbnVsYXJpdHlbXT4gPSB7fTtcbiAgICBncmFudWxhcml0aWVzLmZvckVhY2goKGdyYW51bGFyaXR5KSA9PiB7XG4gICAgICAgIGNvbnN0IGNyckdyYW51bGFyaXR5Rm9sZGVyID0gbm90ZVNldHRpbmdzW2dyYW51bGFyaXR5XS5mb2xkZXI7XG4gICAgICAgIGlmICghdW5pcXVlRm9sZGVyc1tjcnJHcmFudWxhcml0eUZvbGRlcl0pIHtcbiAgICAgICAgICAgIHVuaXF1ZUZvbGRlcnNbY3JyR3JhbnVsYXJpdHlGb2xkZXJdID0gW11cbiAgICAgICAgfVxuICAgICAgICB1bmlxdWVGb2xkZXJzW2NyckdyYW51bGFyaXR5Rm9sZGVyXS5wdXNoKGdyYW51bGFyaXR5KVxuICAgIH0pXG5cbiAgICBjb25zb2xlLmxvZyhcIlx1RDgzRFx1RENDMiB1bmlxdWVGb2xkZXJzXCIsIHVuaXF1ZUZvbGRlcnMpXG5cbiAgICBPYmplY3QuZW50cmllcyh1bmlxdWVGb2xkZXJzKS5mb3JFYWNoKChbdW5pcXVlRm9sZGVyLCBncmFudWxhcml0aWVzXSkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgbm90ZXNGb2xkZXIgPSB3aW5kb3cuYXBwLnZhdWx0LmdldEFic3RyYWN0RmlsZUJ5UGF0aChub3JtYWxpemVQYXRoKHVuaXF1ZUZvbGRlcikpIGFzIFRGb2xkZXI7XG5cbiAgICAgICAgICAgIGlmICghbm90ZXNGb2xkZXIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgICAgIGBVbmFibGUgdG8gbG9jYXRlICR7Z3JhbnVsYXJpdGllcy5tYXAoKGcpID0+IGdldFBlcmlvZGljaXR5RnJvbUdyYW51bGFyaXR5KGcpKS5qb2luKCcsICcpfSBcbiAgICAgICAgICAgICAgICAgICAgbm90ZXMgZm9sZGVyLiBDaGVjayB5b3VyIHBsdWdpbidzIHNldHRpbmdzIG9yIHJlc3RhcnQgY2FsZW5kYXIgcGx1Z2luLmBcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBWYXVsdC5yZWN1cnNlQ2hpbGRyZW4obm90ZXNGb2xkZXIsIChub3RlKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUgaW5zdGFuY2VvZiBURmlsZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGlzVmFsaWQsIGdyYW51bGFyaXR5LCBkYXRlIH0gPSBpc1ZhbGlkUGVyaW9kaWNOb3RlKG5vdGUuYmFzZW5hbWUsIGdyYW51bGFyaXRpZXMpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1ZhbGlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBub3RlRGF0ZVVJRCA9IGdldE5vdGVEYXRlVUlEKHsgZGF0ZSwgZ3JhbnVsYXJpdHkgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoYXNFbW9qaSA9IGRvVGFnc0luY2x1ZGVFbW9qaSh3aW5kb3cuYXBwLm1ldGFkYXRhQ2FjaGUuZ2V0RmlsZUNhY2hlKG5vdGUpPy50YWdzKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdXBkYXRlIHN0b3JlXG4gICAgICAgICAgICAgICAgICAgICAgICBub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0udXBkYXRlKCh2YWx1ZXMpID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4udmFsdWVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtub3RlRGF0ZVVJRF06IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZTogbm90ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RpY2tlcjogaGFzRW1vamkgPyBoYXNFbW9qaS5lbW9qaSA6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgdHlwZW9mIGVycm9yID09PSAnc3RyaW5nJyAmJiBuZXcgTm90aWNlKGVycm9yKTtcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zb2xlLmxvZyhcIlx1MjcwNSBhbGwgc3RvcmUgbm90ZXMgXHUyNzA1IFxcblwiLCBPYmplY3QudmFsdWVzKG5vdGVzU3RvcmVzKS5tYXAoKHMpID0+IGdldChzKSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RhcnR1cE5vdGVHcmFudWxhcml0eSgpIHtcbiAgICBmb3IgKGNvbnN0IGdyYW51bGFyaXR5IG9mIGdyYW51bGFyaXRpZXMpIHtcbiAgICAgICAgY29uc3Qgc2V0dGluZ3MgPSBnZXQoc2V0dGluZ3NTdG9yZSkubm90ZXNbZ3JhbnVsYXJpdHldXG4gICAgICAgIGlmIChzZXR0aW5ncy5lbmFibGVkICYmIHNldHRpbmdzLm9wZW5BdFN0YXJ0dXApIHtcbiAgICAgICAgICAgIHJldHVybiBncmFudWxhcml0eVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB7IGdyYW51bGFyaXRpZXMgfSBmcm9tICdAL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBzZXR0aW5nc1N0b3JlIH0gZnJvbSAnQC9zZXR0aW5ncyc7XG5pbXBvcnQgeyB0eXBlIE1vbWVudCB9IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdzdmVsdGUvc3RvcmUnO1xuaW1wb3J0IHsgdHlwZSBJR3JhbnVsYXJpdHkgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBub3JtYWxpemVQYXRoIH0gZnJvbSAnb2JzaWRpYW4nO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlRXNjYXBlZENoYXJhY3RlcnMoZm9ybWF0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGNvbnN0IHdpdGhvdXRCcmFja2V0cyA9IGZvcm1hdC5yZXBsYWNlKC9cXFtbXlxcXV0qXFxdL2csICcnKTsgLy8gcmVtb3ZlIGV2ZXJ5dGhpbmcgd2l0aGluIGJyYWNrZXRzXG5cbiAgICByZXR1cm4gd2l0aG91dEJyYWNrZXRzLnJlcGxhY2UoL1xcXFwuL2csICcnKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJhc2VuYW1lKGZvcm1hdDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBpc1RlbXBsYXRlTmVzdGVkID0gZm9ybWF0LmluZGV4T2YoJy8nKSAhPT0gLTE7XG4gICAgcmV0dXJuIGlzVGVtcGxhdGVOZXN0ZWQgPyBmb3JtYXQuc3BsaXQoJy8nKS5wb3AoKSA/PyAnJyA6IGZvcm1hdDtcbn1cblxuLyoqXG4gKiBYWFg6IFdoZW4gcGFyc2luZyBkYXRlcyB0aGF0IGNvbnRhaW4gYm90aCB3ZWVrIG51bWJlcnMgYW5kIG1vbnRocyxcbiAqIE1vbWVudCBjaG9zZXMgdG8gaWdub3JlIHRoZSB3ZWVrIG51bWJlcnMuIEZvciB0aGUgd2VlayBub3RlRGF0ZVVJRCwgd2VcbiAqIHdhbnQgdGhlIG9wcG9zaXRlIGJlaGF2aW9yLiBTdHJpcCB0aGUgTU1NIGZyb20gdGhlIGZvcm1hdCB0byBwYXRjaC5cbiAqL1xuZnVuY3Rpb24gaXNXZWVrRm9ybWF0QW1iaWd1b3VzKGZvcm1hdDogc3RyaW5nKSB7XG4gICAgY29uc3QgY2xlYW5Gb3JtYXQgPSByZW1vdmVFc2NhcGVkQ2hhcmFjdGVycyhmb3JtYXQpO1xuICAgIHJldHVybiAvd3sxLDJ9L2kudGVzdChjbGVhbkZvcm1hdCkgJiYgKC9NezEsNH0vLnRlc3QoY2xlYW5Gb3JtYXQpIHx8IC9EezEsNH0vLnRlc3QoY2xlYW5Gb3JtYXQpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRQZXJpb2RpY05vdGUoZmlsZU5hbWU6IHN0cmluZywgY3VzdG9tR3JhbnVsYXJpdGllcyA9IGdyYW51bGFyaXRpZXMgYXMgdW5rbm93biBhcyBJR3JhbnVsYXJpdHlbXSlcbiAgICA6IHsgaXNWYWxpZDogdHJ1ZSwgZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eSwgZGF0ZTogTW9tZW50IH0gfCB7IGlzVmFsaWQ6IGZhbHNlLCBncmFudWxhcml0eTogbnVsbCwgZGF0ZTogbnVsbCB9IHtcblxuICAgIGNvbnN0IHZhbGlkRm9ybWF0cyA9IGdldChzZXR0aW5nc1N0b3JlKS52YWxpZEZvcm1hdHM7XG5cbiAgICBmb3IgKGNvbnN0IGdyYW51bGFyaXR5IG9mIGN1c3RvbUdyYW51bGFyaXRpZXMpIHtcbiAgICAgICAgZm9yIChjb25zdCB2YWxpZEZvcm1hdCBvZiB2YWxpZEZvcm1hdHNbZ3JhbnVsYXJpdHldKSB7XG4gICAgICAgICAgICBsZXQgZGF0ZSA9IHdpbmRvdy5tb21lbnQoZmlsZU5hbWUsIHZhbGlkRm9ybWF0LCB0cnVlKTtcblxuICAgICAgICAgICAgaWYgKGRhdGUuaXNWYWxpZCgpICYmIGRhdGUuZm9ybWF0KHZhbGlkRm9ybWF0KSA9PT0gZmlsZU5hbWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoZ3JhbnVsYXJpdHkgPT09ICd3ZWVrJykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIndlZWssIHZhbGlkRm9ybWF0OiBcIiwgdmFsaWRGb3JtYXQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsaWRGb3JtYXQgJiYgaXNXZWVrRm9ybWF0QW1iaWd1b3VzKHZhbGlkRm9ybWF0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xlYW5Gb3JtYXQgPSByZW1vdmVFc2NhcGVkQ2hhcmFjdGVycyh2YWxpZEZvcm1hdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoL3d7MSwyfS9pLnRlc3QoY2xlYW5Gb3JtYXQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZSA9IHdpbmRvdy5tb21lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiBmb3JtYXQgY29udGFpbnMgd2VlaywgcmVtb3ZlIGRheSAmIG1vbnRoIGZvcm1hdHRpbmcsIGRvbnQgcmVtZW1iZXIgd2h5IFx1RDgzRFx1REUwNVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZEZvcm1hdC5yZXBsYWNlKC9NezEsNH0vZywgJycpLnJlcGxhY2UoL0R7MSw0fS9nLCAnJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiB7IGlzVmFsaWQ6IHRydWUsIGdyYW51bGFyaXR5LCBkYXRlIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7IGlzVmFsaWQ6IGZhbHNlLCBncmFudWxhcml0eTogbnVsbCwgZGF0ZTogbnVsbCB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVGb2xkZXIoZm9sZGVyOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmICghZm9sZGVyIHx8IGZvbGRlciA9PT0gXCIvXCIpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuXG4gICAgaWYgKCF3aW5kb3cuYXBwLnZhdWx0LmdldEFic3RyYWN0RmlsZUJ5UGF0aChub3JtYWxpemVQYXRoKGZvbGRlcikpKSB7XG4gICAgICAgIHJldHVybiBcIkZvbGRlciBub3QgZm91bmQgaW4gdmF1bHRcIjtcbiAgICB9XG5cbiAgICByZXR1cm4gXCJcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVRlbXBsYXRlKHRlbXBsYXRlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmICghdGVtcGxhdGUpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuXG4gICAgaWYgKCF3aW5kb3cuYXBwLm1ldGFkYXRhQ2FjaGUuZ2V0Rmlyc3RMaW5rcGF0aERlc3QodGVtcGxhdGUsIFwiXCIpKSB7XG4gICAgICAgIHJldHVybiBcIlRlbXBsYXRlIGZpbGUgbm90IGZvdW5kXCI7XG4gICAgfVxuXG4gICAgcmV0dXJuIFwiXCI7XG59XG5cbmV4cG9ydCAqIGZyb20gXCIuL2Zvcm1hdFwiXG4iLCAiaW1wb3J0IHsgc2V0dGluZ3NTdG9yZSB9IGZyb20gJ0Avc2V0dGluZ3MnO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSAnc3ZlbHRlL3N0b3JlJztcbmltcG9ydCB7IHR5cGUgSUdyYW51bGFyaXR5IH0gZnJvbSAnLi4vdHlwZXMnO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vbGlhbWNhaW4vb2JzaWRpYW4tcGVyaW9kaWMtbm90ZXNcbmZ1bmN0aW9uIHZhbGlkYXRlRmlsZW5hbWUoZmlsZW5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGlsbGVnYWxSZSA9IC9bPzw+XFxcXDoqfFwiXS9nO1xuICAgIGNvbnN0IGNvbnRyb2xSZSA9IC9bXFx4MDAtXFx4MWZcXHg4MC1cXHg5Zl0vZztcbiAgICBjb25zdCByZXNlcnZlZFJlID0gL15cXC4rJC87XG4gICAgY29uc3Qgd2luZG93c1Jlc2VydmVkUmUgPSAvXihjb258cHJufGF1eHxudWx8Y29tWzAtOV18bHB0WzAtOV0pKFxcLi4qKT8kL2k7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICAhaWxsZWdhbFJlLnRlc3QoZmlsZW5hbWUpICYmXG4gICAgICAgICFjb250cm9sUmUudGVzdChmaWxlbmFtZSkgJiZcbiAgICAgICAgIXJlc2VydmVkUmUudGVzdChmaWxlbmFtZSkgJiZcbiAgICAgICAgIXdpbmRvd3NSZXNlcnZlZFJlLnRlc3QoZmlsZW5hbWUpXG4gICAgKTtcbn1cblxuZnVuY3Rpb24gaXNBbWJpZ3VvdXNGb3JtYXQoY3VycmVudERhdGU6IG1vbWVudC5Nb21lbnQsIHBhcnNlZERhdGU6IG1vbWVudC5Nb21lbnQsIGdyYW51bGFyaXR5OiBJR3JhbnVsYXJpdHkpOiBzdHJpbmcgfCBudWxsIHtcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBcIkFtYmlndW91cyBmb3JtYXQuXCI7XG5cbiAgICAvLyBubyBuZWVkIHRvIHdvcnJ5IGFib3V0IHVzaW5nIGEsIGxldHMgc2F5IGRhaWx5IGZvcm1hdCBpbiBhIG1vbnRobHkgZm9ybWF0LCBcbiAgICAvLyBpdCBtYXkgc2VlbSBpbnZhbGlkIGJ1dCBhcyBsb25nIGFzIGl0J3Mgbm90IGEgZHVwIG9mIGFueSBleGlzdGluZyBgdmFsaWRGb3JtYXRgIGl0J3MgZmluZVxuICAgIHN3aXRjaCAoZ3JhbnVsYXJpdHkpIHtcbiAgICAgICAgY2FzZSAneWVhcic6XG4gICAgICAgICAgICBpZiAocGFyc2VkRGF0ZS55ZWFyKCkgIT09IGN1cnJlbnREYXRlLnllYXIoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBgJHtlcnJvck1lc3NhZ2V9IEl0IGRvZXNuJ3QgdW5pcXVlbHkgaWRlbnRpZnkgYSB5ZWFyLlxuICAgICAgICAgICAgICAgICAgICBDdXJyZW50IHllYXI6ICR7Y3VycmVudERhdGUueWVhcigpfSwgUGFyc2VkIHllYXI6ICR7cGFyc2VkRGF0ZS55ZWFyKCl9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdxdWFydGVyJzpcbiAgICAgICAgICAgIGlmIChwYXJzZWREYXRlLnF1YXJ0ZXIoKSAhPT0gY3VycmVudERhdGUucXVhcnRlcigpIHx8IHBhcnNlZERhdGUueWVhcigpICE9PSBjdXJyZW50RGF0ZS55ZWFyKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7ZXJyb3JNZXNzYWdlfSBJdCBkb2Vzbid0IHVuaXF1ZWx5IGlkZW50aWZ5IGEgcXVhcnRlci5cbiAgICAgICAgICAgICAgICAgICAgQ3VycmVudDogUSR7Y3VycmVudERhdGUucXVhcnRlcigpfSAke2N1cnJlbnREYXRlLnllYXIoKX0sIFBhcnNlZDogUSR7cGFyc2VkRGF0ZS5xdWFydGVyKCl9ICR7cGFyc2VkRGF0ZS55ZWFyKCl9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdtb250aCc6XG4gICAgICAgICAgICBpZiAocGFyc2VkRGF0ZS5tb250aCgpICE9PSBjdXJyZW50RGF0ZS5tb250aCgpIHx8IHBhcnNlZERhdGUueWVhcigpICE9PSBjdXJyZW50RGF0ZS55ZWFyKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7ZXJyb3JNZXNzYWdlfSBJdCBkb2Vzbid0IHVuaXF1ZWx5IGlkZW50aWZ5IGEgbW9udGguIFxuICAgICAgICAgICAgICAgICAgICBDdXJyZW50OiAke2N1cnJlbnREYXRlLmZvcm1hdCgnTU1NTSBZWVlZJyl9LCBQYXJzZWQ6ICR7cGFyc2VkRGF0ZS5mb3JtYXQoJ01NTU0gWVlZWScpfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnd2Vlayc6XG4gICAgICAgICAgICBpZiAocGFyc2VkRGF0ZS53ZWVrKCkgIT09IGN1cnJlbnREYXRlLndlZWsoKSB8fCBwYXJzZWREYXRlLnllYXIoKSAhPT0gY3VycmVudERhdGUueWVhcigpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke2Vycm9yTWVzc2FnZX0gSXQgZG9lc24ndCB1bmlxdWVseSBpZGVudGlmeSBhIHdlZWsuIFxuICAgICAgICAgICAgICAgICAgICBDdXJyZW50OiBXZWVrICR7Y3VycmVudERhdGUud2VlaygpfSBvZiAke2N1cnJlbnREYXRlLnllYXIoKX0sIFBhcnNlZDogV2VlayAke3BhcnNlZERhdGUud2VlaygpfSBvZiAke3BhcnNlZERhdGUueWVhcigpfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnZGF5JzpcbiAgICAgICAgICAgIGlmICghcGFyc2VkRGF0ZS5pc1NhbWUoY3VycmVudERhdGUsICdkYXknKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBgJHtlcnJvck1lc3NhZ2V9IEl0IGRvZXNuJ3QgdW5pcXVlbHkgaWRlbnRpZnkgYSBkYXkuIFxuICAgICAgICAgICAgICAgICAgICBDdXJyZW50OiAke2N1cnJlbnREYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCcpfSwgUGFyc2VkOiAke3BhcnNlZERhdGUuZm9ybWF0KCdZWVlZLU1NLUREJyl9IGA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBlcnJvck1lc3NhZ2UgKyBgVW5rbm93biBncmFudWxhcml0eTogJHtncmFudWxhcml0eX0gYDtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gYWRkVG9WYWxpZEZvcm1hdHMoZm9ybWF0OiBzdHJpbmcsIGdyYW51bGFyaXR5OiBJR3JhbnVsYXJpdHkpOiB2b2lkIHtcbiAgICBjb25zdCBpc1ZhbGlkRm9ybWF0TmV3ID0gZ2V0KHNldHRpbmdzU3RvcmUpLnZhbGlkRm9ybWF0c1tncmFudWxhcml0eV0uaW5kZXhPZihmb3JtYXQpID09PSAtMTtcblxuICAgIGlmIChpc1ZhbGlkRm9ybWF0TmV3KSB7XG4gICAgICAgIHNldHRpbmdzU3RvcmUudXBkYXRlKChzZXR0aW5ncykgPT4gKHtcbiAgICAgICAgICAgIC4uLnNldHRpbmdzLFxuICAgICAgICAgICAgdmFsaWRGb3JtYXRzOiB7XG4gICAgICAgICAgICAgICAgLi4uc2V0dGluZ3MudmFsaWRGb3JtYXRzLFxuICAgICAgICAgICAgICAgIFtncmFudWxhcml0eV06IFtcbiAgICAgICAgICAgICAgICAgICAgLi4uc2V0dGluZ3MudmFsaWRGb3JtYXRzW2dyYW51bGFyaXR5XSxcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICB9KSlcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQ6IHN0cmluZywgZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eSkge1xuICAgIGxldCBlcnJvciA9IFwiXCI7XG5cbiAgICBpZiAoIWZvcm1hdCkge1xuICAgICAgICByZXR1cm4gZXJyb3IgPSBcIlwiO1xuICAgIH1cblxuICAgIGlmICghdmFsaWRhdGVGaWxlbmFtZShmb3JtYXQpKSB7XG4gICAgICAgIHJldHVybiBlcnJvciA9IFwiRm9ybWF0IGNvbnRhaW5zIGlsbGVnYWwgY2hhcmFjdGVyc1wiO1xuICAgIH1cblxuICAgIGNvbnN0IGN1cnJlbnREYXRlID0gd2luZG93Lm1vbWVudCgpO1xuICAgIGNvbnN0IGZvcm1hdHRlZERhdGUgPSB3aW5kb3cubW9tZW50KCkuZm9ybWF0KGZvcm1hdCk7XG4gICAgY29uc3QgcGFyc2VkRGF0ZSA9IHdpbmRvdy5tb21lbnQoZm9ybWF0dGVkRGF0ZSwgZm9ybWF0LCB0cnVlKTtcbiAgICBpZiAoIXBhcnNlZERhdGUuaXNWYWxpZCgpKSB7XG4gICAgICAgIHJldHVybiBlcnJvciA9IFwiRm9ybWF0IGlzIG5vdCB2YWxpZFwiO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGZvciBhbWJpZ3VvdXMgZm9ybWF0c1xuICAgIGNvbnN0IGFtYmlndWl0eUVycm9yID0gaXNBbWJpZ3VvdXNGb3JtYXQoY3VycmVudERhdGUsIHBhcnNlZERhdGUsIGdyYW51bGFyaXR5KTtcbiAgICBpZiAoYW1iaWd1aXR5RXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGVycm9yID0gYW1iaWd1aXR5RXJyb3I7XG4gICAgfVxuXG4gICAgLy8gVE9ETzogYWRkIGNoZWNrIHRvIGVuc3VyZSBub24gZHVwbGljYXRlZCBmb3JtYXRzIGJldHdlZW4gZGlmZmVyZW50IGdyYW51bGFyaXRpZXNcbiAgICAvLyB3aWxsIHJlcXVpcmUgZXh0cmEgVUkgdG8gYXZvaWQgc2hvd2luZyBlcnJvcnMgZm9yIFwiaGlkZGVuXCIsIFwiaW52aXNpYmxlXCIgdmFsaWRGb3JtYXRzXG5cbiAgICBhZGRUb1ZhbGlkRm9ybWF0cyhmb3JtYXQsIGdyYW51bGFyaXR5KVxuXG4gICAgcmV0dXJuIGVycm9yO1xufVxuIiwgImltcG9ydCB7IGRlcml2ZWQsIGdldCB9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcbi8qKlxuICogQGV4dGVybmFsIFN0b3JlXG4gKiBAc2VlIFtTdmVsdGUgc3RvcmVzXShodHRwczovL3N2ZWx0ZS5kZXYvZG9jcyNjb21wb25lbnQtZm9ybWF0LXNjcmlwdC00LXByZWZpeC1zdG9yZXMtd2l0aC0kLXRvLWFjY2Vzcy10aGVpci12YWx1ZXMtc3RvcmUtY29udHJhY3QpXG4gKi9cblxuLyoqXG4gKiBDcmVhdGUgYSBzdG9yZSBzaW1pbGFyIHRvIFtTdmVsdGUncyBgZGVyaXZlZGBdKGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzI3J1bi10aW1lLXN2ZWx0ZS1zdG9yZS13cml0YWJsZSksXG4gKiBidXQgd2hpY2ggaGFzIGl0cyBvd24gYHNldGAgYW5kIGB1cGRhdGVgIG1ldGhvZHMgYW5kIGNhbiBzZW5kIHZhbHVlcyBiYWNrIHRvIHRoZSBvcmlnaW4gc3RvcmVzLlxuICogW1JlYWQgbW9yZS4uLl0oaHR0cHM6Ly9naXRodWIuY29tL1BpeGlldm9sdE5vMS9zdmVsdGUtd3JpdGFibGUtZGVyaXZlZCNkZWZhdWx0LWV4cG9ydC13cml0YWJsZWRlcml2ZWQpXG4gKiBcbiAqIEBwYXJhbSB7U3RvcmV8U3RvcmVbXX0gb3JpZ2lucyBPbmUgb3IgbW9yZSBzdG9yZXMgdG8gZGVyaXZlIGZyb20uIFNhbWUgYXNcbiAqIFtgZGVyaXZlZGBdKGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzI3J1bi10aW1lLXN2ZWx0ZS1zdG9yZS13cml0YWJsZSkncyAxc3QgcGFyYW1ldGVyLlxuICogQHBhcmFtIHshRnVuY3Rpb259IGRlcml2ZSBUaGUgY2FsbGJhY2sgdG8gZGV0ZXJtaW5lIHRoZSBkZXJpdmVkIHZhbHVlLiBTYW1lIGFzXG4gKiBbYGRlcml2ZWRgXShodHRwczovL3N2ZWx0ZS5kZXYvZG9jcyNydW4tdGltZS1zdmVsdGUtc3RvcmUtd3JpdGFibGUpJ3MgMm5kIHBhcmFtZXRlci5cbiAqIEBwYXJhbSB7IUZ1bmN0aW9ufSByZWZsZWN0IENhbGxlZCB3aGVuIHRoZSBkZXJpdmVkIHN0b3JlIGdldHMgYSBuZXcgdmFsdWUgdmlhIGl0cyBgc2V0YCBvclxuICogYHVwZGF0ZWAgbWV0aG9kcywgYW5kIGRldGVybWluZXMgbmV3IHZhbHVlcyBmb3IgdGhlIG9yaWdpbiBzdG9yZXMuXG4gKiBbUmVhZCBtb3JlLi4uXShodHRwczovL2dpdGh1Yi5jb20vUGl4aWV2b2x0Tm8xL3N2ZWx0ZS13cml0YWJsZS1kZXJpdmVkI25ldy1wYXJhbWV0ZXItcmVmbGVjdClcbiAqIEBwYXJhbSBbaW5pdGlhbF0gVGhlIG5ldyBzdG9yZSdzIGluaXRpYWwgdmFsdWUuIFNhbWUgYXNcbiAqIFtgZGVyaXZlZGBdKGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzI3J1bi10aW1lLXN2ZWx0ZS1zdG9yZS13cml0YWJsZSkncyAzcmQgcGFyYW1ldGVyLlxuICogXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgd3JpdGFibGUgc3RvcmUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHdyaXRhYmxlRGVyaXZlZChvcmlnaW5zLCBkZXJpdmUsIHJlZmxlY3QsIGluaXRpYWwpIHtcblx0dmFyIGNoaWxkRGVyaXZlZFNldHRlciwgb3JpZ2luVmFsdWVzLCBibG9ja05leHREZXJpdmUgPSBmYWxzZTtcblx0dmFyIHJlZmxlY3RPbGRWYWx1ZXMgPSByZWZsZWN0Lmxlbmd0aCA+PSAyO1xuXHR2YXIgd3JhcHBlZERlcml2ZSA9IChnb3QsIHNldCwgdXBkYXRlKSA9PiB7XG5cdFx0Y2hpbGREZXJpdmVkU2V0dGVyID0gc2V0O1xuXHRcdGlmIChyZWZsZWN0T2xkVmFsdWVzKSB7XG5cdFx0XHRvcmlnaW5WYWx1ZXMgPSBnb3Q7XG5cdFx0fVxuXHRcdGlmICghYmxvY2tOZXh0RGVyaXZlKSB7XG5cdFx0XHRsZXQgcmV0dXJuZWQgPSBkZXJpdmUoZ290LCBzZXQsIHVwZGF0ZSk7XG5cdFx0XHRpZiAoZGVyaXZlLmxlbmd0aCA8IDIpIHtcblx0XHRcdFx0c2V0KHJldHVybmVkKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiByZXR1cm5lZDtcblx0XHRcdH1cblx0XHR9XG5cdFx0YmxvY2tOZXh0RGVyaXZlID0gZmFsc2U7XG5cdH07XG5cdHZhciBjaGlsZERlcml2ZWQgPSBkZXJpdmVkKG9yaWdpbnMsIHdyYXBwZWREZXJpdmUsIGluaXRpYWwpO1xuXHRcblx0dmFyIHNpbmdsZU9yaWdpbiA9ICFBcnJheS5pc0FycmF5KG9yaWdpbnMpO1xuXHRmdW5jdGlvbiBkb1JlZmxlY3QocmVmbGVjdGluZykge1xuXHRcdHZhciBzZXRXaXRoID0gcmVmbGVjdChyZWZsZWN0aW5nLCBvcmlnaW5WYWx1ZXMpO1xuXHRcdGlmIChzaW5nbGVPcmlnaW4pIHtcblx0XHRcdGJsb2NrTmV4dERlcml2ZSA9IHRydWU7XG5cdFx0XHRvcmlnaW5zLnNldChzZXRXaXRoKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c2V0V2l0aC5mb3JFYWNoKCAodmFsdWUsIGkpID0+IHtcblx0XHRcdFx0YmxvY2tOZXh0RGVyaXZlID0gdHJ1ZTtcblx0XHRcdFx0b3JpZ2luc1tpXS5zZXQodmFsdWUpO1xuXHRcdFx0fSApO1xuXHRcdH1cblx0XHRibG9ja05leHREZXJpdmUgPSBmYWxzZTtcblx0fVxuXHRcblx0dmFyIHRyeWluZ1NldCA9IGZhbHNlO1xuXHRmdW5jdGlvbiB1cGRhdGUoZm4pIHtcblx0XHR2YXIgaXNVcGRhdGVkLCBtdXRhdGVkQnlTdWJzY3JpcHRpb25zLCBvbGRWYWx1ZSwgbmV3VmFsdWU7XG5cdFx0aWYgKHRyeWluZ1NldCkge1xuXHRcdFx0bmV3VmFsdWUgPSBmbiggZ2V0KGNoaWxkRGVyaXZlZCkgKTtcblx0XHRcdGNoaWxkRGVyaXZlZFNldHRlcihuZXdWYWx1ZSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdHZhciB1bnN1YnNjcmliZSA9IGNoaWxkRGVyaXZlZC5zdWJzY3JpYmUoICh2YWx1ZSkgPT4ge1xuXHRcdFx0aWYgKCF0cnlpbmdTZXQpIHtcblx0XHRcdFx0b2xkVmFsdWUgPSB2YWx1ZTtcblx0XHRcdH0gZWxzZSBpZiAoIWlzVXBkYXRlZCkge1xuXHRcdFx0XHRpc1VwZGF0ZWQgPSB0cnVlO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bXV0YXRlZEJ5U3Vic2NyaXB0aW9ucyA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHRcdG5ld1ZhbHVlID0gZm4ob2xkVmFsdWUpO1xuXHRcdHRyeWluZ1NldCA9IHRydWU7XG5cdFx0Y2hpbGREZXJpdmVkU2V0dGVyKG5ld1ZhbHVlKTtcblx0XHR1bnN1YnNjcmliZSgpO1xuXHRcdHRyeWluZ1NldCA9IGZhbHNlO1xuXHRcdGlmIChtdXRhdGVkQnlTdWJzY3JpcHRpb25zKSB7XG5cdFx0XHRuZXdWYWx1ZSA9IGdldChjaGlsZERlcml2ZWQpO1xuXHRcdH1cblx0XHRpZiAoaXNVcGRhdGVkKSB7XG5cdFx0XHRkb1JlZmxlY3QobmV3VmFsdWUpO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4ge1xuXHRcdHN1YnNjcmliZTogY2hpbGREZXJpdmVkLnN1YnNjcmliZSxcblx0XHRzZXQodmFsdWUpIHsgdXBkYXRlKCAoKSA9PiB2YWx1ZSApOyB9LFxuXHRcdHVwZGF0ZSxcblx0fTtcbn1cbmV4cG9ydCB7IHdyaXRhYmxlRGVyaXZlZCB9O1xuXG4vKipcbiAqIENyZWF0ZSBhIHN0b3JlIGZvciBhIHByb3BlcnR5IHZhbHVlIGluIGFuIG9iamVjdCBjb250YWluZWQgaW4gYW5vdGhlciBzdG9yZS5cbiAqIFtSZWFkIG1vcmUuLi5dKGh0dHBzOi8vZ2l0aHViLmNvbS9QaXhpZXZvbHRObzEvc3ZlbHRlLXdyaXRhYmxlLWRlcml2ZWQjbmFtZWQtZXhwb3J0LXByb3BlcnR5c3RvcmUpXG4gKiBcbiAqIEBwYXJhbSB7U3RvcmV9IG9yaWdpbiBUaGUgc3RvcmUgY29udGFpbmluZyB0aGUgb2JqZWN0IHRvIGdldC9zZXQgZnJvbS5cbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcnxzeW1ib2x8QXJyYXk8c3RyaW5nfG51bWJlcnxzeW1ib2w+fSBwcm9wTmFtZSBUaGUgcHJvcGVydHkgdG8gZ2V0L3NldCwgb3IgYSBwYXRoIG9mXG4gKiBwcm9wZXJ0aWVzIGluIG5lc3RlZCBvYmplY3RzLlxuICpcbiAqIEByZXR1cm5zIHtTdG9yZX0gQSB3cml0YWJsZSBzdG9yZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5U3RvcmUob3JpZ2luLCBwcm9wTmFtZSkge1xuXHRpZiAoIUFycmF5LmlzQXJyYXkocHJvcE5hbWUpKSB7XG5cdFx0cmV0dXJuIHdyaXRhYmxlRGVyaXZlZChcblx0XHRcdG9yaWdpbixcblx0XHRcdChvYmplY3QpID0+IG9iamVjdFtwcm9wTmFtZV0sXG5cdFx0XHQocmVmbGVjdGluZywgb2JqZWN0KSA9PiB7XG5cdFx0XHRcdG9iamVjdFtwcm9wTmFtZV0gPSByZWZsZWN0aW5nO1xuXHRcdFx0XHRyZXR1cm4gb2JqZWN0O1xuXHRcdFx0fSxcblx0XHQpO1xuXHR9IGVsc2Uge1xuXHRcdGxldCBwcm9wcyA9IHByb3BOYW1lLmNvbmNhdCgpO1xuXHRcdHJldHVybiB3cml0YWJsZURlcml2ZWQoXG5cdFx0XHRvcmlnaW4sXG5cdFx0XHQodmFsdWUpID0+IHtcblx0XHRcdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7ICsraSkge1xuXHRcdFx0XHRcdHZhbHVlID0gdmFsdWVbIHByb3BzW2ldIF07XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0fSxcblx0XHRcdChyZWZsZWN0aW5nLCBvYmplY3QpID0+IHtcblx0XHRcdFx0bGV0IHRhcmdldCA9IG9iamVjdDtcblx0XHRcdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGggLSAxOyArK2kpIHtcblx0XHRcdFx0XHR0YXJnZXQgPSB0YXJnZXRbIHByb3BzW2ldIF07XG5cdFx0XHRcdH1cblx0XHRcdFx0dGFyZ2V0WyBwcm9wc1twcm9wcy5sZW5ndGggLSAxXSBdID0gcmVmbGVjdGluZztcblx0XHRcdFx0cmV0dXJuIG9iamVjdDtcblx0XHRcdH0sXG5cdFx0KTtcblx0fVxufSIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgeyBERUZBVUxUX0ZPUk1BVFNfUEVSX0dSQU5VTEFSSVRZIH0gZnJvbSAnQC9jb25zdGFudHMnO1xuXHRpbXBvcnQgeyB0eXBlIElHcmFudWxhcml0eSB9IGZyb20gJ0AvaW8nO1xuXHRpbXBvcnQgeyB2YWxpZGF0ZUZvcm1hdCB9IGZyb20gJ0AvaW8vdmFsaWRhdGlvbic7XG5cdGltcG9ydCB7IHR5cGUgUGVyaW9kU2V0dGluZ3MgfSBmcm9tICdAL3NldHRpbmdzJztcblx0aW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5cdGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgdHlwZSB7IFJlYWRhYmxlIH0gZnJvbSAnc3ZlbHRlL3N0b3JlJztcblx0ZXhwb3J0IGxldCBncmFudWxhcml0eTogSUdyYW51bGFyaXR5O1xuXHRleHBvcnQgbGV0IHNldHRpbmdzOiBSZWFkYWJsZTxQZXJpb2RTZXR0aW5ncz47XG5cblx0Y29uc3QgZGVmYXVsdEZvcm1hdCA9IERFRkFVTFRfRk9STUFUU19QRVJfR1JBTlVMQVJJVFlbZ3JhbnVsYXJpdHldO1xuXHRsZXQgaW5wdXRFbDogSFRNTElucHV0RWxlbWVudDtcblx0bGV0IHZhbHVlOiBzdHJpbmcgPSAkc2V0dGluZ3MuZm9ybWF0IHx8ICcnO1xuXHRsZXQgZXJyb3I6IHN0cmluZztcblxuXHRvbk1vdW50KCgpID0+IHtcblx0XHRlcnJvciA9IHZhbGlkYXRlRm9ybWF0KGlucHV0RWwudmFsdWUsIGdyYW51bGFyaXR5KTtcblx0fSk7XG48L3NjcmlwdD5cblxuPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbVwiPlxuXHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWluZm9cIj5cblx0XHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLW5hbWVcIj5Gb3JtYXQ8L2Rpdj5cblx0XHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWRlc2NyaXB0aW9uXCI+XG5cdFx0XHQ8YSBocmVmPVwiaHR0cHM6Ly9tb21lbnRqcy5jb20vZG9jcy8jL2Rpc3BsYXlpbmcvZm9ybWF0L1wiPlN5bnRheCBSZWZlcmVuY2U8L2E+XG5cdFx0XHQ8ZGl2PlxuXHRcdFx0XHRZb3VyIGN1cnJlbnQgc3ludGF4IGxvb2tzIGxpa2UgdGhpczpcblx0XHRcdFx0PGIgY2xhc3M9XCJ1LXBvcFwiPnt3aW5kb3cubW9tZW50KCkuZm9ybWF0KHZhbHVlIHx8IGRlZmF1bHRGb3JtYXQpfTwvYj5cblx0XHRcdDwvZGl2PlxuXHRcdDwvZGl2PlxuXHRcdDxkaXYgY2xhc3M9e2Nsc3goJ3NldHRpbmctaXRlbS1kZXNjcmlwdGlvbicsIGVycm9yID8gJ2hhcy1lcnJvcicgOiAnb3BhY2l0eS0wJyl9PlxuXHRcdFx0e2Vycm9yIHx8ICdWYWxpZCd9XG5cdFx0PC9kaXY+XG5cdDwvZGl2PlxuXHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWNvbnRyb2xcIj5cblx0XHQ8aW5wdXRcblx0XHRcdGJpbmQ6dmFsdWVcblx0XHRcdGJpbmQ6dGhpcz17aW5wdXRFbH1cblx0XHRcdGNsYXNzOmhhcy1lcnJvcj17ISFlcnJvcn1cblx0XHRcdHR5cGU9XCJ0ZXh0XCJcblx0XHRcdHNwZWxsY2hlY2s9e2ZhbHNlfVxuXHRcdFx0cGxhY2Vob2xkZXI9e2RlZmF1bHRGb3JtYXR9XG5cdFx0XHRvbjppbnB1dD17KCkgPT4ge1xuXHRcdFx0XHRlcnJvciA9IHZhbGlkYXRlRm9ybWF0KGlucHV0RWwudmFsdWUsIGdyYW51bGFyaXR5KTtcblx0XHRcdFx0aWYgKGVycm9yLnRyaW0oKSA9PT0gJycpIHtcblx0XHRcdFx0XHQkc2V0dGluZ3MuZm9ybWF0ID0gdmFsdWUudHJpbSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9fVxuXHRcdC8+XG5cdDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgeyBnZXRQZXJpb2RpY2l0eUZyb21HcmFudWxhcml0eSwgdHlwZSBJR3JhbnVsYXJpdHkgfSBmcm9tICdAL2lvJztcblx0aW1wb3J0IHsgdmFsaWRhdGVGb2xkZXIgfSBmcm9tICdAL2lvL3ZhbGlkYXRpb24nO1xuXHRpbXBvcnQgeyBjYXBpdGFsaXplIH0gZnJvbSAnQC91dGlscyc7XG5cdGltcG9ydCB7IG9uRGVzdHJveSwgb25Nb3VudCB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGltcG9ydCB0eXBlIHsgUmVhZGFibGUgfSBmcm9tICdzdmVsdGUvc3RvcmUnO1xuXHRpbXBvcnQgeyB0eXBlIFBlcmlvZFNldHRpbmdzLCBGb2xkZXJTdWdnZXN0IH0gZnJvbSAnQC9zZXR0aW5ncyc7XG5cdGltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuXG5cdGV4cG9ydCBsZXQgc2V0dGluZ3M6IFJlYWRhYmxlPFBlcmlvZFNldHRpbmdzPjtcblx0ZXhwb3J0IGxldCBncmFudWxhcml0eTogSUdyYW51bGFyaXR5O1xuXG5cdGxldCBpbnB1dEVsOiBIVE1MSW5wdXRFbGVtZW50O1xuXHRsZXQgdmFsdWU6IHN0cmluZyA9ICRzZXR0aW5ncy5mb2xkZXIgfHwgJyc7XG5cdGxldCBlcnJvcjogc3RyaW5nO1xuXHRsZXQgZm9sZGVyU3VnZ2VzdEluc3RhbmNlOiBGb2xkZXJTdWdnZXN0O1xuXG5cdG9uTW91bnQoKCkgPT4ge1xuXHRcdGVycm9yID0gdmFsaWRhdGVGb2xkZXIoaW5wdXRFbC52YWx1ZSk7XG5cdFx0Zm9sZGVyU3VnZ2VzdEluc3RhbmNlID0gbmV3IEZvbGRlclN1Z2dlc3QoaW5wdXRFbCk7XG5cdH0pO1xuXHRvbkRlc3Ryb3koKCkgPT4ge1xuXHRcdGNvbnNvbGUubG9nKCdvbkRlc3Ryb3knKTtcblx0XHRmb2xkZXJTdWdnZXN0SW5zdGFuY2UuZGVzdHJveSgpO1xuXHR9KTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtXCI+XG5cdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0taW5mb1wiPlxuXHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tbmFtZVwiPkZvbGRlcjwvZGl2PlxuXHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIj5cblx0XHRcdE5ldyB7Y2FwaXRhbGl6ZShnZXRQZXJpb2RpY2l0eUZyb21HcmFudWxhcml0eShncmFudWxhcml0eSkpfSBub3RlcyB3aWxsIGJlIHBsYWNlZCBoZXJlXG5cdFx0PC9kaXY+XG5cdFx0PGRpdiBjbGFzcz17Y2xzeCgnc2V0dGluZy1pdGVtLWRlc2NyaXB0aW9uJywgZXJyb3IgPyAnaGFzLWVycm9yJyA6ICdvcGFjaXR5LTAnKX0+XG5cdFx0XHR7ZXJyb3IgfHwgJ1ZhbGlkJ31cblx0XHQ8L2Rpdj5cblx0PC9kaXY+XG5cdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tY29udHJvbFwiPlxuXHRcdDxpbnB1dFxuXHRcdFx0Y2xhc3M9XCJmbGV4LWdyb3dcIlxuXHRcdFx0YmluZDp2YWx1ZVxuXHRcdFx0YmluZDp0aGlzPXtpbnB1dEVsfVxuXHRcdFx0Y2xhc3M6aGFzLWVycm9yPXshIWVycm9yfVxuXHRcdFx0dHlwZT1cInRleHRcIlxuXHRcdFx0c3BlbGxjaGVjaz17ZmFsc2V9XG5cdFx0XHRwbGFjZWhvbGRlcj1cImUuZy4gZm9sZGVyIDEvZm9sZGVyIDJcIlxuXHRcdFx0b246aW5wdXQ9eygpID0+IHtcblx0XHRcdFx0ZXJyb3IgPSB2YWxpZGF0ZUZvbGRlcihpbnB1dEVsLnZhbHVlKTtcblx0XHRcdFx0aWYgKGVycm9yLnRyaW0oKSA9PT0gJycpIHtcblx0XHRcdFx0XHQkc2V0dGluZ3MuZm9sZGVyID0gdmFsdWUudHJpbSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9fVxuXHRcdC8+XG5cdDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgeyB2YWxpZGF0ZVRlbXBsYXRlIH0gZnJvbSAnQC9pby92YWxpZGF0aW9uJztcblx0aW1wb3J0IHsgdHlwZSBQZXJpb2RTZXR0aW5ncyB9IGZyb20gJ0Avc2V0dGluZ3MnO1xuXHRpbXBvcnQgeyBvbkRlc3Ryb3ksIG9uTW91bnQgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgdHlwZSB7IFJlYWRhYmxlIH0gZnJvbSAnc3ZlbHRlL3N0b3JlJztcblx0aW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5cdGltcG9ydCB7IEZpbGVTdWdnZXN0IH0gZnJvbSAnLi4vLi4vc3VnZ2VzdCc7XG5cblx0ZXhwb3J0IGxldCBzZXR0aW5nczogUmVhZGFibGU8UGVyaW9kU2V0dGluZ3M+O1xuXG5cdGxldCBpbnB1dEVsOiBIVE1MSW5wdXRFbGVtZW50O1xuXHRsZXQgdmFsdWU6IHN0cmluZyA9ICRzZXR0aW5ncy50ZW1wbGF0ZVBhdGggfHwgJyc7XG5cdGxldCBlcnJvcjogc3RyaW5nO1xuXHRsZXQgZmlsZVN1Z2dlc3RJbnN0YW5jZTogRmlsZVN1Z2dlc3Q7XG5cblx0b25Nb3VudCgoKSA9PiB7XG5cdFx0ZXJyb3IgPSB2YWxpZGF0ZVRlbXBsYXRlKGlucHV0RWwudmFsdWUpO1xuXHRcdGZpbGVTdWdnZXN0SW5zdGFuY2UgPSBuZXcgRmlsZVN1Z2dlc3QoaW5wdXRFbCk7XG5cdH0pO1xuXHRvbkRlc3Ryb3koKCkgPT4ge1xuXHRcdGNvbnNvbGUubG9nKCdvbkRlc3Ryb3knKTtcblx0XHRmaWxlU3VnZ2VzdEluc3RhbmNlLmRlc3Ryb3koKTtcblx0fSk7XG48L3NjcmlwdD5cblxuPGRpdiBjbGFzcz1cInNldHRpbmctaXRlbVwiPlxuXHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWluZm9cIj5cblx0XHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLW5hbWVcIj5UZW1wbGF0ZTwvZGl2PlxuXHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tZGVzY3JpcHRpb25cIj5DaG9vc2UgYSBmaWxlIHRvIHVzZSBhcyB0ZW1wbGF0ZTwvZGl2PlxuXHRcdDxkaXYgY2xhc3M9e2Nsc3goJ3NldHRpbmctaXRlbS1kZXNjcmlwdGlvbicsIGVycm9yID8gJ2hhcy1lcnJvcicgOiAnb3BhY2l0eS0wJyl9PlxuXHRcdFx0e2Vycm9yIHx8ICdWYWxpZCd9XG5cdFx0PC9kaXY+XG5cdDwvZGl2PlxuXHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWNvbnRyb2xcIj5cblx0XHQ8aW5wdXRcblx0XHRcdGNsYXNzPVwiZmxleC1ncm93XCJcblx0XHRcdGJpbmQ6dmFsdWVcblx0XHRcdGJpbmQ6dGhpcz17aW5wdXRFbH1cblx0XHRcdGNsYXNzOmhhcy1lcnJvcj17ISFlcnJvcn1cblx0XHRcdHR5cGU9XCJ0ZXh0XCJcblx0XHRcdHNwZWxsY2hlY2s9e2ZhbHNlfVxuXHRcdFx0cGxhY2Vob2xkZXI9XCJlLmcuIHRlbXBsYXRlcy90ZW1wbGF0ZS1maWxlXCJcblx0XHRcdG9uOmlucHV0PXsoKSA9PiB7XG5cdFx0XHRcdGVycm9yID0gdmFsaWRhdGVUZW1wbGF0ZShpbnB1dEVsLnZhbHVlKTtcblx0XHRcdFx0aWYgKGVycm9yLnRyaW0oKSA9PT0gJycpIHtcblx0XHRcdFx0XHQkc2V0dGluZ3MudGVtcGxhdGVQYXRoID0gdmFsdWUudHJpbSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9fVxuXHRcdC8+XG5cdDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgeyBnZXRQZXJpb2RpY2l0eUZyb21HcmFudWxhcml0eSwgdHlwZSBJR3JhbnVsYXJpdHkgfSBmcm9tICdAL2lvJztcblx0aW1wb3J0IHR5cGUgeyBSZWFkYWJsZSB9IGZyb20gJ3N2ZWx0ZS9zdG9yZSc7XG5cblx0aW1wb3J0IHsgdHlwZSBQZXJpb2RTZXR0aW5ncywgc2V0dGluZ3NTdG9yZSB9IGZyb20gJ0Avc2V0dGluZ3MnO1xuXHRpbXBvcnQgeyBTZXR0aW5nSXRlbSwgVG9nZ2xlIH0gZnJvbSAnQC9zZXR0aW5ncy91aSc7XG5cdGltcG9ydCB7IGNhcGl0YWxpemUgfSBmcm9tICdAL3V0aWxzJztcblx0aW1wb3J0IHsgZ3JhbnVsYXJpdGllcyB9IGZyb20gJ0AvY29uc3RhbnRzJztcblxuXHRleHBvcnQgbGV0IHNldHRpbmdzOiBSZWFkYWJsZTxQZXJpb2RTZXR0aW5ncz47XG5cdGV4cG9ydCBsZXQgZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eTtcbjwvc2NyaXB0PlxuXG48U2V0dGluZ0l0ZW1cblx0bmFtZT1cIk9wZW4gb24gc3RhcnR1cFwiXG5cdGRlc2NyaXB0aW9uPXtgT3BlbnMgeW91ciAke2NhcGl0YWxpemUoXG5cdFx0Z2V0UGVyaW9kaWNpdHlGcm9tR3JhbnVsYXJpdHkoZ3JhbnVsYXJpdHkpXG5cdCl9IG5vdGUgYXV0b21hdGljYWxseSB3aGVuZXZlciB5b3Ugb3BlbiB0aGlzIHZhdWx0YH1cblx0dHlwZT1cInRvZ2dsZVwiXG5cdGlzSGVhZGluZz17ZmFsc2V9XG4+XG5cdDxUb2dnbGVcblx0XHRzbG90PVwiY29udHJvbFwiXG5cdFx0aXNFbmFibGVkPXskc2V0dGluZ3Mub3BlbkF0U3RhcnR1cH1cblx0XHRvbkNoYW5nZT17KHZhbCkgPT4ge1xuXHRcdFx0c2V0dGluZ3NTdG9yZS51cGRhdGUoKHNldHRpbmdzKSA9PiB7XG5cdFx0XHRcdGNvbnN0IG5ld1NldHRpbmdzID0gc2V0dGluZ3M7XG5cdFx0XHRcdGZvciAoY29uc3QgZ3JhbnVsYXJpdHkgb2YgZ3JhbnVsYXJpdGllcykge1xuXHRcdFx0XHRcdG5ld1NldHRpbmdzLm5vdGVzW2dyYW51bGFyaXR5XS5vcGVuQXRTdGFydHVwID0gZmFsc2U7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gbmV3U2V0dGluZ3M7XG5cdFx0XHR9KTtcblx0XHRcdCRzZXR0aW5ncy5vcGVuQXRTdGFydHVwID0gdmFsO1xuXHRcdH19XG5cdC8+XG48L1NldHRpbmdJdGVtPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB7IGdldFBlcmlvZGljaXR5RnJvbUdyYW51bGFyaXR5LCB0eXBlIElHcmFudWxhcml0eSB9IGZyb20gJ0AvaW8nO1xuXHRpbXBvcnQgeyBzZXR0aW5nc1N0b3JlIH0gZnJvbSAnQC9zZXR0aW5ncyc7XG5cdGltcG9ydCB7IEFycm93IH0gZnJvbSAnQC9zZXR0aW5ncy91aS8nO1xuXHRpbXBvcnQgeyBjYXBpdGFsaXplIH0gZnJvbSAnQC91dGlscyc7XG5cdGltcG9ydCB3cml0YWJsZURlcml2ZWQgZnJvbSAnc3ZlbHRlLXdyaXRhYmxlLWRlcml2ZWQnO1xuXHRpbXBvcnQgeyBzbGlkZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJztcblx0aW1wb3J0IEZvcm1hdCBmcm9tICcuL0Zvcm1hdC5zdmVsdGUnO1xuXHRpbXBvcnQgRm9sZGVyIGZyb20gJy4vRm9sZGVyLnN2ZWx0ZSc7XG5cdGltcG9ydCBUZW1wbGF0ZSBmcm9tICcuL1RlbXBsYXRlLnN2ZWx0ZSc7XG5cdGltcG9ydCBPcGVuQXRTdGFydHVwIGZyb20gJy4vT3BlbkF0U3RhcnR1cC5zdmVsdGUnO1xuXG5cdGxldCBpc0V4cGFuZGVkID0gZmFsc2U7XG5cdGV4cG9ydCBsZXQgZ3JhbnVsYXJpdHk6IElHcmFudWxhcml0eTtcblxuXHRsZXQgc2V0dGluZ3MgPSB3cml0YWJsZURlcml2ZWQoXG5cdFx0c2V0dGluZ3NTdG9yZSxcblx0XHQvLyBnZXQgZGVyaXZlZCBzdG9yZSBmcm9tIHNldHRpbmdzU3RvcmVcblx0XHQoJHNldHRpbmdzU3RvcmUpID0+ICRzZXR0aW5nc1N0b3JlLm5vdGVzW2dyYW51bGFyaXR5XSxcblx0XHQvLyB1cGRhdGUgc2V0dGluZ3NTdG9yZSB3aGVuIHRoZSBkZXJpdmVkIHN0b3JlIGNoYW5nZXNcblx0XHQocmVmbGVjdGluZywgb2xkKSA9PiB7XG5cdFx0XHRjb25zdCBuZXdTZXR0aW5ncyA9IHtcblx0XHRcdFx0Li4ub2xkLFxuXHRcdFx0XHRub3Rlczoge1xuXHRcdFx0XHRcdC4uLm9sZC5ub3Rlcyxcblx0XHRcdFx0XHRbZ3JhbnVsYXJpdHldOiByZWZsZWN0aW5nXG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHJldHVybiBuZXdTZXR0aW5ncztcblx0XHR9XG5cdCk7XG5cblx0ZnVuY3Rpb24gdG9nZ2xlRXhwYW5kKCkge1xuXHRcdGlzRXhwYW5kZWQgPSAhaXNFeHBhbmRlZDtcblx0fVxuPC9zY3JpcHQ+XG5cbjxkaXZcblx0Y2xhc3M9XCJiZy1bdmFyKC0tYmFja2dyb3VuZC1wcmltYXJ5LWFsdCldIGJvcmRlciBib3JkZXItc29saWQgYm9yZGVyLVt2YXIoLS1iYWNrZ3JvdW5kLW1vZGlmaWVyLWJvcmRlcildIHJvdW5kZWQtMnhsIG1iLTYgbGFzdDptYi0wXCJcbj5cblx0PGFcblx0XHRocmVmPVwiLi9cIlxuXHRcdGNsYXNzPVwic2V0dGluZy1pdGVtIHNldHRpbmctaXRlbS1oZWFkaW5nIHRleHQtdHJhbnNwYXJlbnQgcC02IGN1cnNvci1wb2ludGVyIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlblwiXG5cdFx0b246Y2xpY2s9e3RvZ2dsZUV4cGFuZH1cblx0PlxuXHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0taW5mbyBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXJcIj5cblx0XHRcdDxoMyBjbGFzcz1cInNldHRpbmctaXRlbS1uYW1lIGZsZXggaXRlbXMtY2VudGVyIHRleHQtbGcgZm9udC1zZW1pYm9sZFwiPlxuXHRcdFx0XHQ8QXJyb3cge2lzRXhwYW5kZWR9IC8+XG5cdFx0XHRcdDxzcGFuIGNsYXNzPVwibWwtMlwiPlxuXHRcdFx0XHRcdHtjYXBpdGFsaXplKGdldFBlcmlvZGljaXR5RnJvbUdyYW51bGFyaXR5KGdyYW51bGFyaXR5KSl9IE5vdGVzXG5cdFx0XHRcdDwvc3Bhbj5cblx0XHRcdFx0eyNpZiAkc2V0dGluZ3Mub3BlbkF0U3RhcnR1cH1cblx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cIm1sLTQgbXQtMSB0ZXh0LVt2YXIoLS10ZXh0LW11dGVkKV0gdGV4dC14cyBpdGFsaWMgZm9udC1tZWRpdW1cIlxuXHRcdFx0XHRcdFx0Pk9wZW5zIGF0IHN0YXJ0dXA8L3NwYW5cblx0XHRcdFx0XHQ+XG5cdFx0XHRcdHsvaWZ9XG5cdFx0XHQ8L2gzPlxuXHRcdDwvZGl2PlxuXHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tY29udHJvbFwiPlxuXHRcdFx0PGxhYmVsXG5cdFx0XHRcdGNsYXNzPVwiY2hlY2tib3gtY29udGFpbmVyIGN1cnNvci1wb2ludGVyXCJcblx0XHRcdFx0Y2xhc3M6aXMtZW5hYmxlZD17JHNldHRpbmdzLmVuYWJsZWR9XG5cdFx0XHRcdG9uOmNsaWNrfHN0b3BQcm9wYWdhdGlvblxuXHRcdFx0PlxuXHRcdFx0XHQ8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgYmluZDpjaGVja2VkPXskc2V0dGluZ3MuZW5hYmxlZH0gY2xhc3M9XCJoaWRkZW5cIiAvPlxuXHRcdFx0PC9sYWJlbD5cblx0XHQ8L2Rpdj5cblx0PC9hPlxuXHR7I2lmIGlzRXhwYW5kZWR9XG5cdFx0PGRpdiBjbGFzcz1cInAtNlwiIGluOnNsaWRlfGxvY2FsPXt7IGR1cmF0aW9uOiAzMDAgfX0gb3V0OnNsaWRlfGxvY2FsPXt7IGR1cmF0aW9uOiAzMDAgfX0+XG5cdFx0XHQ8Rm9ybWF0IHtzZXR0aW5nc30ge2dyYW51bGFyaXR5fSAvPlxuXHRcdFx0PEZvbGRlciB7c2V0dGluZ3N9IHtncmFudWxhcml0eX0gLz5cblx0XHRcdDxUZW1wbGF0ZSB7c2V0dGluZ3N9IC8+XG5cdFx0XHQ8T3BlbkF0U3RhcnR1cCB7c2V0dGluZ3N9IHtncmFudWxhcml0eX0gLz5cblx0XHQ8L2Rpdj5cblx0ey9pZn1cbjwvZGl2PlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIGJhc2U7XG5cdEB0YWlsd2luZCB1dGlsaXRpZXM7XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB7IGdyYW51bGFyaXRpZXMgfSBmcm9tICdAL2NvbnN0YW50cyc7XG5cdGltcG9ydCBQZXJpb2QgZnJvbSAnLi9QZXJpb2Quc3ZlbHRlJztcbjwvc2NyaXB0PlxuXG48ZGl2PlxuXHR7I2VhY2ggZ3JhbnVsYXJpdGllcyBhcyBncmFudWxhcml0eX1cblx0XHQ8UGVyaW9kIHtncmFudWxhcml0eX0gLz5cblx0ey9lYWNofVxuPC9kaXY+XG4iLCAiaW1wb3J0IHsgd3JpdGFibGUgfSBmcm9tIFwic3ZlbHRlL3N0b3JlXCI7XG5pbXBvcnQgeyBERUZBVUxUX1NFVFRJTkdTLCB0eXBlIElTZXR0aW5ncyB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgY29uc3Qgc2V0dGluZ3NTdG9yZSA9IHdyaXRhYmxlPElTZXR0aW5ncz4oREVGQVVMVF9TRVRUSU5HUyk7XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0ZXhwb3J0IGxldCBjbGFzc05hbWUgPSAnJztcblx0ZXhwb3J0IGxldCBpc1Zpc2libGUgPSB0cnVlO1xuXHRleHBvcnQgbGV0IGlzRmlsbGVkID0gZmFsc2U7XG5cdGV4cG9ydCBsZXQgaXNBY3RpdmUgPSBmYWxzZTtcbjwvc2NyaXB0PlxuXG48c3ZnXG5cdGNsYXNzPXtgZG90ICR7Y2xhc3NOYW1lfWB9XG5cdGNsYXNzOmlzVmlzaWJsZVxuXHRjbGFzczppc0ZpbGxlZFxuXHRjbGFzczppc0FjdGl2ZVxuXHR2aWV3Qm94PVwiMCAwIDYgNlwiXG5cdHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuPlxuXHQ8Y2lyY2xlIGN4PVwiM1wiIGN5PVwiM1wiIHI9XCIyXCIgLz5cbjwvc3ZnPlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0LmRvdCB7XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdGhlaWdodDogNnB4O1xuXHRcdHdpZHRoOiA2cHg7XG5cdFx0bWFyZ2luOiAwIDFweDtcblx0XHRmaWxsOiBub25lO1xuXHR9XG5cdC5pc1Zpc2libGUge1xuXHRcdHN0cm9rZTogdmFyKC0tY29sb3ItZG90KTtcblx0fVxuXG5cdC5pc0FjdGl2ZSB7XG5cdFx0c3Ryb2tlOiB2YXIoLS10ZXh0LW9uLWFjY2VudCk7XG5cdH1cblxuXHQuaXNGaWxsZWQge1xuXHRcdGZpbGw6IHZhcigtLWNvbG9yLWRvdCk7XG5cdH1cblxuXHQuaXNBY3RpdmUuaXNGaWxsZWQge1xuXHRcdGZpbGw6IHZhcigtLXRleHQtb24tYWNjZW50KTtcblx0fVxuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRleHBvcnQgbGV0IHN0aWNrZXI6IHN0cmluZyB8IG51bGw7XG48L3NjcmlwdD5cblxueyNpZiBzdGlja2VyfVxuXHQ8ZGl2IGNsYXNzPVwicm90YXRlLTEyIGFic29sdXRlIHRvcC0wIGxlZnQtZnVsbCAtdHJhbnNsYXRlLXgtMS8yIC10cmFuc2xhdGUteS0xLzJcIiBpZD1cInN0aWNrZXJcIj5cblx0XHR7c3RpY2tlcn1cblx0PC9kaXY+XG57L2lmfVxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIGJhc2U7XG5cdEB0YWlsd2luZCBjb21wb25lbnRzO1xuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuPC9zdHlsZT5cbiIsICI8c3ZlbHRlOm9wdGlvbnMgaW1tdXRhYmxlIC8+XG5cbjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB0eXBlIHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcblxuXHRpbXBvcnQgeyBnZXROb3RlRGF0ZVVJRCB9IGZyb20gJ0AvaW8nO1xuXHRpbXBvcnQgeyBhY3RpdmVGaWxlSWRTdG9yZSwgZGlzcGxheWVkRGF0ZVN0b3JlLCBub3Rlc1N0b3JlcyB9IGZyb20gJ0Avc3RvcmVzLyc7XG5cdGltcG9ydCB7IGV2ZW50SGFuZGxlcnMsIGlzQ29udHJvbFByZXNzZWQgfSBmcm9tICcuLi91dGlscyc7XG5cdGltcG9ydCBEb3QgZnJvbSAnLi9Eb3Quc3ZlbHRlJztcblx0aW1wb3J0IFN0aWNrZXIgZnJvbSAnLi9TdGlja2VyLnN2ZWx0ZSc7XG5cblx0Ly8gUHJvcGVydGllc1xuXHRleHBvcnQgbGV0IGRhdGU6IE1vbWVudDtcblxuXHQvLyB1cGRhdGUgdG9kYXkgdmFsdWUgaW4gY2FzZSB0aGUgZGlzcGxheWVkIGRhdGUgY2hhbmdlcyBhbmQgdGhlIGN1cnJlbnQgZGF0ZSBpcyBubyBsb25nZXIgdG9kYXlcblx0bGV0IHRvZGF5OiBNb21lbnQ7XG5cdCQ6ICRkaXNwbGF5ZWREYXRlU3RvcmUsICh0b2RheSA9IHdpbmRvdy5tb21lbnQoKSk7XG5cblx0Y29uc3Qgbm90ZXNTdG9yZSA9IG5vdGVzU3RvcmVzWydkYXknXTtcblx0Y29uc3Qgbm90ZURhdGVVSUQgPSBnZXROb3RlRGF0ZVVJRCh7IGRhdGUsIGdyYW51bGFyaXR5OiAnZGF5JyB9KTtcblx0JDogZmlsZSA9ICRub3Rlc1N0b3JlW25vdGVEYXRlVUlEXT8uZmlsZTtcblx0JDogc3RpY2tlciA9ICRub3Rlc1N0b3JlW25vdGVEYXRlVUlEXT8uc3RpY2tlcjtcblxuXHQkOiBpc0FjdGl2ZSA9ICRhY3RpdmVGaWxlSWRTdG9yZSA9PT0gbm90ZURhdGVVSUQ7XG5cdCQ6IGlzVG9kYXkgPSBkYXRlLmlzU2FtZSh0b2RheSwgJ2RheScpO1xuXHQkOiBpc0FkamFjZW50TW9udGggPSAhZGF0ZS5pc1NhbWUoJGRpc3BsYXllZERhdGVTdG9yZSwgJ21vbnRoJyk7XG48L3NjcmlwdD5cblxuPHRkIGNsYXNzPVwicmVsYXRpdmVcIj5cblx0PGJ1dHRvblxuXHRcdGNsYXNzOmFjdGl2ZT17aXNBY3RpdmV9XG5cdFx0Y2xhc3M6dG9kYXk9e2lzVG9kYXl9XG5cdFx0Y2xhc3M6YWRqYWNlbnQtbW9udGg9e2lzQWRqYWNlbnRNb250aH1cblx0XHRjbGFzcz1cIlsmOm5vdCg6Zm9jdXMtdmlzaWJsZSldOnNoYWRvdy1ub25lICFoLWF1dG8gdy1mdWxsIGZsZXggZmxleC1jb2wgZm9udC1tZWRpdW0gcm91bmRlZC1bLS1yYWRpdXMtc10gdGV4dC1zbSBweC0xIHB5LTMgcmVsYXRpdmUgdGV4dC1jZW50ZXIgdGFidWxhci1udW1zIHRyYW5zaXRpb24tY29sb3JzIGRheVwiXG5cdFx0aWQ9XCJkYXlcIlxuXHRcdG9uOmNsaWNrPXsoZXZlbnQpID0+XG5cdFx0XHRldmVudEhhbmRsZXJzLm9uQ2xpY2soe1xuXHRcdFx0XHRkYXRlLFxuXHRcdFx0XHRjcmVhdGVOZXdTcGxpdExlYWY6IGlzQ29udHJvbFByZXNzZWQoZXZlbnQpLFxuXHRcdFx0XHRncmFudWxhcml0eTogJ2RheSdcblx0XHRcdH0pfVxuXHRcdG9uOmNvbnRleHRtZW51PXsoZXZlbnQpID0+IGV2ZW50SGFuZGxlcnMub25Db250ZXh0TWVudSh7IGRhdGUsIGV2ZW50LCBncmFudWxhcml0eTogJ2RheScgfSl9XG5cdFx0b246cG9pbnRlcmVudGVyPXsoZXZlbnQpID0+IHtcblx0XHRcdGV2ZW50SGFuZGxlcnMub25Ib3Zlcih7XG5cdFx0XHRcdGRhdGUsXG5cdFx0XHRcdHRhcmdldEVsOiBldmVudC50YXJnZXQsXG5cdFx0XHRcdGlzQ29udHJvbFByZXNzZWQ6IGlzQ29udHJvbFByZXNzZWQoZXZlbnQpLFxuXHRcdFx0XHRncmFudWxhcml0eTogJ2RheSdcblx0XHRcdH0pO1xuXHRcdH19XG5cdD5cblx0XHR7ZGF0ZS5mb3JtYXQoJ0QnKX1cblx0XHQ8RG90IGNsYXNzTmFtZT1cImFic29sdXRlIGJvdHRvbS0xXCIgaXNWaXNpYmxlPXshIWZpbGV9IGlzRmlsbGVkPXshIWZpbGV9IGlzQWN0aXZlPXshIWZpbGV9IC8+XG5cdDwvYnV0dG9uPlxuXHQ8U3RpY2tlciB7c3RpY2tlcn0gLz5cbjwvdGQ+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuXHRAdGFpbHdpbmQgYmFzZTtcblx0QHRhaWx3aW5kIGNvbXBvbmVudHM7XG5cdEB0YWlsd2luZCB1dGlsaXRpZXM7XG5cblx0LmRheSB7XG5cdFx0QGFwcGx5IHRleHQtWy0tdGV4dC1ub3JtYWxdIGhvdmVyOmJnLVstLWludGVyYWN0aXZlLWhvdmVyXTtcblx0fVxuXHQuZGF5LmFjdGl2ZSB7XG5cdFx0QGFwcGx5IHRleHQtWy0tdGV4dC1vbi1hY2NlbnRdIGJnLVstLWludGVyYWN0aXZlLWFjY2VudF0gaG92ZXI6YmctWy0taW50ZXJhY3RpdmUtYWNjZW50LWhvdmVyXTtcblx0fVxuXHQuZGF5LnRvZGF5IHtcblx0XHRAYXBwbHkgdGV4dC1bLS1jb2xvci10ZXh0LXRvZGF5XTtcblx0fVxuXHQuZGF5LmFjdGl2ZS50b2RheSB7XG5cdFx0QGFwcGx5IHRleHQtWy0tdGV4dC1vbi1hY2NlbnRdO1xuXHR9XG5cdC5kYXkuYWRqYWNlbnQtbW9udGgge1xuXHRcdEBhcHBseSBvcGFjaXR5LTI1O1xuXHR9XG48L3N0eWxlPlxuIiwgIjxzdmVsdGU6b3B0aW9ucyBpbW11dGFibGUgLz5cblxuPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0aW1wb3J0IHsgZ2V0Tm90ZURhdGVVSUQgfSBmcm9tICdAL2lvJztcblx0aW1wb3J0IHsgZGlzcGxheWVkRGF0ZVN0b3JlLCBub3Rlc1N0b3JlcyB9IGZyb20gJ0Avc3RvcmVzJztcblx0aW1wb3J0IHsgZXZlbnRIYW5kbGVycywgaXNDb250cm9sUHJlc3NlZCB9IGZyb20gJy4uL3V0aWxzJztcblx0aW1wb3J0IERvdCBmcm9tICcuL0RvdC5zdmVsdGUnO1xuXHRpbXBvcnQgU3RpY2tlciBmcm9tICcuL1N0aWNrZXIuc3ZlbHRlJztcblxuXHRleHBvcnQgbGV0IG1vbnRoSW5kZXg6IG51bWJlcjtcblxuXHRjb25zdCBub3Rlc1N0b3JlID0gbm90ZXNTdG9yZXNbJ21vbnRoJ107XG5cblx0JDogZGF0ZSA9ICRkaXNwbGF5ZWREYXRlU3RvcmUuY2xvbmUoKS5tb250aChtb250aEluZGV4KS5zdGFydE9mKCdtb250aCcpO1xuXHQkOiBub3RlRGF0ZVVJRCA9IGdldE5vdGVEYXRlVUlEKHsgZGF0ZSwgZ3JhbnVsYXJpdHk6ICdtb250aCcgfSk7XG5cblx0JDogZmlsZSA9ICRub3Rlc1N0b3JlW25vdGVEYXRlVUlEXT8uZmlsZTtcblx0JDogc3RpY2tlciA9ICRub3Rlc1N0b3JlW25vdGVEYXRlVUlEXT8uc3RpY2tlcjtcbjwvc2NyaXB0PlxuXG48dGQgY2xhc3M9XCJyZWxhdGl2ZVwiPlxuXHQ8YnV0dG9uXG5cdFx0aWQ9XCJtb250aFwiXG5cdFx0b246Y2xpY2s9eyhldmVudCkgPT5cblx0XHRcdGV2ZW50SGFuZGxlcnMub25DbGljayh7XG5cdFx0XHRcdGRhdGUsXG5cdFx0XHRcdGNyZWF0ZU5ld1NwbGl0TGVhZjogaXNDb250cm9sUHJlc3NlZChldmVudCksXG5cdFx0XHRcdGdyYW51bGFyaXR5OiAnbW9udGgnXG5cdFx0XHR9KX1cblx0XHRvbjpjb250ZXh0bWVudT17KGV2ZW50KSA9PlxuXHRcdFx0ZXZlbnRIYW5kbGVycy5vbkNvbnRleHRNZW51KHtcblx0XHRcdFx0ZGF0ZSxcblx0XHRcdFx0ZXZlbnQsXG5cdFx0XHRcdGdyYW51bGFyaXR5OiAnbW9udGgnXG5cdFx0XHR9KX1cblx0XHRvbjpwb2ludGVyZW50ZXI9eyhldmVudCkgPT5cblx0XHRcdGV2ZW50SGFuZGxlcnMub25Ib3Zlcih7XG5cdFx0XHRcdGRhdGUsXG5cdFx0XHRcdHRhcmdldEVsOiBldmVudC50YXJnZXQsXG5cdFx0XHRcdGlzQ29udHJvbFByZXNzZWQ6IGlzQ29udHJvbFByZXNzZWQoZXZlbnQpLFxuXHRcdFx0XHRncmFudWxhcml0eTogJ21vbnRoJ1xuXHRcdFx0fSl9XG5cdD5cblx0XHR7JGRpc3BsYXllZERhdGVTdG9yZS5jbG9uZSgpLm1vbnRoKG1vbnRoSW5kZXgpLmZvcm1hdCgnTU1NTScpfVxuXHRcdDxEb3QgaXNGaWxsZWQ9eyEhZmlsZX0gaXNBY3RpdmU9eyEhZmlsZX0gLz5cblx0PC9idXR0b24+XG5cblx0PFN0aWNrZXIge3N0aWNrZXJ9IC8+XG48L3RkPlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIGJhc2U7XG5cdEB0YWlsd2luZCBjb21wb25lbnRzO1xuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuPC9zdHlsZT5cbiIsICI8c2NyaXB0IGxhbmc9XCJ0c1wiPlxuXHRpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcblxuXHRleHBvcnQgbGV0IG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG5cdGV4cG9ydCBsZXQgdG9vbHRpcDogc3RyaW5nO1xuXHRleHBvcnQgbGV0IGRpcmVjdGlvbjogJ2xlZnQnIHwgJ3JpZ2h0JztcblxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuXHRsZXQgaXNNb2JpbGUgPSAod2luZG93LmFwcCBhcyBhbnkpLmlzTW9iaWxlO1xuPC9zY3JpcHQ+XG5cbjxidXR0b25cblx0Y2xhc3M9e2Nsc3goXG5cdFx0J1smOm5vdCg6Zm9jdXMtdmlzaWJsZSldOnNoYWRvdy1ub25lIGZsZXggaXRlbXMtY2VudGVyJyxcblx0XHRkaXJlY3Rpb24gPT09ICdyaWdodCcgJiYgJ3JvdGF0ZS0xODAnLFxuXHRcdGlzTW9iaWxlID8gJ3ctOCcgOiAndy02J1xuXHQpfVxuXHRpZD1cImFycm93XCJcblx0b246Y2xpY2s9e29uQ2xpY2t9XG5cdGFyaWEtbGFiZWw9e3Rvb2x0aXB9XG4+XG5cdDxzdmdcblx0XHRjbGFzcz1cImgtNCB3LTQgdGV4dC1bLS1jb2xvci1hcnJvd11cIlxuXHRcdGZvY3VzYWJsZT1cImZhbHNlXCJcblx0XHRyb2xlPVwiaW1nXCJcblx0XHR4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcblx0XHR2aWV3Qm94PVwiMCAwIDMyMCA1MTJcIlxuXHRcdD48cGF0aFxuXHRcdFx0ZmlsbD1cImN1cnJlbnRDb2xvclwiXG5cdFx0XHRkPVwiTTM0LjUyIDIzOS4wM0wyMjguODcgNDQuNjljOS4zNy05LjM3IDI0LjU3LTkuMzcgMzMuOTQgMGwyMi42NyAyMi42N2M5LjM2IDkuMzYgOS4zNyAyNC41Mi4wNCAzMy45TDEzMS40OSAyNTZsMTU0LjAyIDE1NC43NWM5LjM0IDkuMzggOS4zMiAyNC41NC0uMDQgMzMuOWwtMjIuNjcgMjIuNjdjLTkuMzcgOS4zNy0yNC41NyA5LjM3LTMzLjk0IDBMMzQuNTIgMjcyLjk3Yy05LjM3LTkuMzctOS4zNy0yNC41NyAwLTMzLjk0elwiXG5cdFx0Lz48L3N2Z1xuXHQ+XG48L2J1dHRvbj5cblxuPHN0eWxlIGxhbmc9XCJwb3N0Y3NzXCI+XG5cdEB0YWlsd2luZCBiYXNlO1xuXHRAdGFpbHdpbmQgY29tcG9uZW50cztcblx0QHRhaWx3aW5kIHV0aWxpdGllcztcblxuXHRidXR0b24ge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHR9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB0eXBlIHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcblxuXHRpbXBvcnQgeyBkaXNwbGF5ZWREYXRlU3RvcmUsIHllYXJzUmFuZ2VzIH0gZnJvbSAnQC9zdG9yZXMnO1xuXHRpbXBvcnQgeyBldmVudEhhbmRsZXJzLCBpc0NvbnRyb2xQcmVzc2VkIH0gZnJvbSAnLi4vdXRpbHMnO1xuXHRpbXBvcnQgQXJyb3cgZnJvbSAnLi9BcnJvdy5zdmVsdGUnO1xuXHRpbXBvcnQgRG90IGZyb20gJy4vRG90LnN2ZWx0ZSc7XG5cblx0bGV0IHRvZGF5OiBNb21lbnQ7XG5cdCQ6ICRkaXNwbGF5ZWREYXRlU3RvcmUsICh0b2RheSA9IHdpbmRvdy5tb21lbnQoKSk7XG5cblx0ZnVuY3Rpb24gZGVjcmVtZW50ZGlzcGxheWVkRGF0ZSgpIHtcblx0XHRkaXNwbGF5ZWREYXRlU3RvcmUudXBkYXRlKChkYXRlKSA9PiBkYXRlLmNsb25lKCkuc3VidHJhY3QoMSwgJ21vbnRoJykpO1xuXHR9XG5cblx0ZnVuY3Rpb24gaW5jcmVtZW50ZGlzcGxheWVkRGF0ZSgpIHtcblx0XHRkaXNwbGF5ZWREYXRlU3RvcmUudXBkYXRlKChkYXRlKSA9PiBkYXRlLmNsb25lKCkuYWRkKDEsICdtb250aCcpKTtcblx0fVxuXG5cdGZ1bmN0aW9uIHJlc2V0ZGlzcGxheWVkRGF0ZSgpIHtcblx0XHR5ZWFyc1Jhbmdlcy51cGRhdGUoKHZhbHVlcykgPT4gKHtcblx0XHRcdC4uLnZhbHVlcyxcblx0XHRcdGNyclJhbmdlSW5kZXg6IHZhbHVlcy5yYW5nZXMuZmluZEluZGV4KChyYW5nZSkgPT4gcmFuZ2UgPT09IHZhbHVlcy50b2RheVJhbmdlKVxuXHRcdH0pKTtcblxuXHRcdGRpc3BsYXllZERhdGVTdG9yZS5zZXQodG9kYXkuY2xvbmUoKSk7XG5cdH1cblxuXHRsZXQgc2hvd2luZ0N1cnJlbnRNb250aDogYm9vbGVhbjtcblx0JDogc2hvd2luZ0N1cnJlbnRNb250aCA9ICRkaXNwbGF5ZWREYXRlU3RvcmUuaXNTYW1lKHRvZGF5LCAnbW9udGgnKTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwiZmxleCBmbGV4LWNvbCBzcGFjZS15LTEgbXQtMyBtYi0xLjUgcHgtMlwiIGlkPVwibmF2XCI+XG5cdDxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1lbmQgdGV4dC1bLS1jb2xvci10ZXh0LXRpdGxlXVwiIGlkPVwidGl0bGVcIj5cblx0XHQ8YnV0dG9uXG5cdFx0XHRjbGFzcz1cImgtYXV0byB0ZXh0LTd4bCBbJjpub3QoOmZvY3VzLXZpc2libGUpXTpzaGFkb3ctbm9uZSBmb250LXNlbWlib2xkXCJcblx0XHRcdGlkPVwibW9udGhcIlxuXHRcdFx0b246Y2xpY2s9eyhldmVudCkgPT5cblx0XHRcdFx0ZXZlbnRIYW5kbGVycy5vbkNsaWNrKHtcblx0XHRcdFx0XHRkYXRlOiAkZGlzcGxheWVkRGF0ZVN0b3JlLFxuXHRcdFx0XHRcdGNyZWF0ZU5ld1NwbGl0TGVhZjogaXNDb250cm9sUHJlc3NlZChldmVudCksXG5cdFx0XHRcdFx0Z3JhbnVsYXJpdHk6ICdtb250aCdcblx0XHRcdFx0fSl9XG5cdFx0XHRvbjpjb250ZXh0bWVudT17KGV2ZW50KSA9PlxuXHRcdFx0XHRldmVudEhhbmRsZXJzLm9uQ29udGV4dE1lbnUoe1xuXHRcdFx0XHRcdGRhdGU6ICRkaXNwbGF5ZWREYXRlU3RvcmUsXG5cdFx0XHRcdFx0ZXZlbnQsXG5cdFx0XHRcdFx0Z3JhbnVsYXJpdHk6ICdtb250aCdcblx0XHRcdFx0fSl9XG5cdFx0XHRvbjpwb2ludGVyZW50ZXI9eyhldmVudCkgPT4ge1xuXHRcdFx0XHRldmVudEhhbmRsZXJzLm9uSG92ZXIoe1xuXHRcdFx0XHRcdGRhdGU6ICRkaXNwbGF5ZWREYXRlU3RvcmUsXG5cdFx0XHRcdFx0dGFyZ2V0RWw6IGV2ZW50LnRhcmdldCxcblx0XHRcdFx0XHRpc0NvbnRyb2xQcmVzc2VkOiBpc0NvbnRyb2xQcmVzc2VkKGV2ZW50KSxcblx0XHRcdFx0XHRncmFudWxhcml0eTogJ21vbnRoJ1xuXHRcdFx0XHR9KTtcblx0XHRcdH19XG5cdFx0PlxuXHRcdFx0eyRkaXNwbGF5ZWREYXRlU3RvcmUuZm9ybWF0KCdNTU0nKX1cblx0XHQ8L2J1dHRvbj5cblx0XHQ8YnV0dG9uXG5cdFx0XHRjbGFzcz1cIlsmOm5vdCg6Zm9jdXMtdmlzaWJsZSldOnNoYWRvdy1ub25lIHRleHQtWy0taW50ZXJhY3RpdmUtYWNjZW50XSBmb250LW1lZGl1bSB0ZXh0LWxnXCJcblx0XHRcdGlkPVwieWVhclwiXG5cdFx0XHRvbjpjbGljaz17KGV2ZW50KSA9PlxuXHRcdFx0XHRldmVudEhhbmRsZXJzLm9uQ2xpY2soe1xuXHRcdFx0XHRcdGRhdGU6ICRkaXNwbGF5ZWREYXRlU3RvcmUuY2xvbmUoKS5zdGFydE9mKCd5ZWFyJyksXG5cdFx0XHRcdFx0Y3JlYXRlTmV3U3BsaXRMZWFmOiBpc0NvbnRyb2xQcmVzc2VkKGV2ZW50KSxcblx0XHRcdFx0XHRncmFudWxhcml0eTogJ3llYXInXG5cdFx0XHRcdH0pfVxuXHRcdFx0b246Y29udGV4dG1lbnU9eyhldmVudCkgPT5cblx0XHRcdFx0ZXZlbnRIYW5kbGVycy5vbkNvbnRleHRNZW51KHtcblx0XHRcdFx0XHRkYXRlOiAkZGlzcGxheWVkRGF0ZVN0b3JlLmNsb25lKCkuc3RhcnRPZigneWVhcicpLFxuXHRcdFx0XHRcdGV2ZW50LFxuXHRcdFx0XHRcdGdyYW51bGFyaXR5OiAneWVhcidcblx0XHRcdFx0fSl9XG5cdFx0XHRvbjpwb2ludGVyZW50ZXI9eyhldmVudCkgPT4ge1xuXHRcdFx0XHRldmVudEhhbmRsZXJzLm9uSG92ZXIoe1xuXHRcdFx0XHRcdGRhdGU6ICRkaXNwbGF5ZWREYXRlU3RvcmUuY2xvbmUoKS5zdGFydE9mKCd5ZWFyJyksXG5cdFx0XHRcdFx0dGFyZ2V0RWw6IGV2ZW50LnRhcmdldCxcblx0XHRcdFx0XHRpc0NvbnRyb2xQcmVzc2VkOiBpc0NvbnRyb2xQcmVzc2VkKGV2ZW50KSxcblx0XHRcdFx0XHRncmFudWxhcml0eTogJ3llYXInXG5cdFx0XHRcdH0pO1xuXHRcdFx0fX1cblx0XHQ+XG5cdFx0XHR7JGRpc3BsYXllZERhdGVTdG9yZS5mb3JtYXQoJ1lZWVknKX1cblx0XHQ8L2J1dHRvbj5cblx0PC9kaXY+XG5cblx0PGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIC1tbC0xXCIgaWQ9XCJib3R0b20tbmF2XCI+XG5cdFx0PEFycm93IGRpcmVjdGlvbj1cImxlZnRcIiBvbkNsaWNrPXtkZWNyZW1lbnRkaXNwbGF5ZWREYXRlfSB0b29sdGlwPVwiUHJldmlvdXMgTW9udGhcIiAvPlxuXHRcdDxidXR0b25cblx0XHRcdGNsYXNzPVwiWyY6bm90KDpmb2N1cy12aXNpYmxlKV06c2hhZG93LW5vbmUgdGV4dC1bLS1jb2xvci1hcnJvd10gZmxleCBpdGVtcy1jZW50ZXIgcC0yIHtzaG93aW5nQ3VycmVudE1vbnRoXG5cdFx0XHRcdD8gJ29wYWNpdHktMTAwJ1xuXHRcdFx0XHQ6ICdvcGFjaXR5LTYwICd9XCJcblx0XHRcdGlkPVwicmVzZXQtYnV0dG9uXCJcblx0XHRcdG9uOmNsaWNrPXtyZXNldGRpc3BsYXllZERhdGV9XG5cdFx0XHRhcmlhLWxhYmVsPXshc2hvd2luZ0N1cnJlbnRNb250aCA/ICdDdXJyZW50IE1vbnRoJyA6IG51bGx9XG5cdFx0PlxuXHRcdFx0PERvdCBjbGFzc05hbWU9XCJoLVs4cHhdIHctWzhweF1cIiBpc0ZpbGxlZD17c2hvd2luZ0N1cnJlbnRNb250aH0gLz5cblx0XHQ8L2J1dHRvbj5cblx0XHQ8QXJyb3cgZGlyZWN0aW9uPVwicmlnaHRcIiBvbkNsaWNrPXtpbmNyZW1lbnRkaXNwbGF5ZWREYXRlfSB0b29sdGlwPVwiTmV4dCBNb250aFwiIC8+XG5cdDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuXHRAdGFpbHdpbmQgYmFzZTtcblx0QHRhaWx3aW5kIGNvbXBvbmVudHM7XG5cdEB0YWlsd2luZCB1dGlsaXRpZXM7XG5cblx0YnV0dG9uIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0fVxuPC9zdHlsZT5cbiIsICI8c3ZlbHRlOm9wdGlvbnMgaW1tdXRhYmxlIC8+XG5cbjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB7IGdldE5vdGVEYXRlVUlEIH0gZnJvbSAnQC9pbyc7XG5cdGltcG9ydCB7IGRpc3BsYXllZERhdGVTdG9yZSwgbm90ZXNTdG9yZXMgfSBmcm9tICdAL3N0b3Jlcyc7XG5cdGltcG9ydCB7IGV2ZW50SGFuZGxlcnMsIGlzQ29udHJvbFByZXNzZWQgfSBmcm9tICcuLi91dGlscyc7XG5cdGltcG9ydCBEb3QgZnJvbSAnLi9Eb3Quc3ZlbHRlJztcblx0aW1wb3J0IFN0aWNrZXIgZnJvbSAnLi9TdGlja2VyLnN2ZWx0ZSc7XG5cblx0ZXhwb3J0IGxldCBxdWFydGVyTnVtOiBudW1iZXI7XG5cblx0Y29uc3Qgbm90ZXNTdG9yZSA9IG5vdGVzU3RvcmVzWydxdWFydGVyJ107XG5cblx0JDogZGF0ZSA9ICRkaXNwbGF5ZWREYXRlU3RvcmUuY2xvbmUoKS5xdWFydGVyKHF1YXJ0ZXJOdW0pLnN0YXJ0T2YoJ3F1YXJ0ZXInKTtcblx0JDogbm90ZURhdGVVSUQgPSBnZXROb3RlRGF0ZVVJRCh7IGRhdGUsIGdyYW51bGFyaXR5OiAncXVhcnRlcicgfSk7XG5cdCQ6IGZpbGUgPSAkbm90ZXNTdG9yZVtub3RlRGF0ZVVJRF0/LmZpbGU7XG5cdCQ6IHN0aWNrZXIgPSAkbm90ZXNTdG9yZVtub3RlRGF0ZVVJRF0/LnN0aWNrZXI7XG48L3NjcmlwdD5cblxuPHRkIGNsYXNzPVwicmVsYXRpdmVcIj5cblx0PGJ1dHRvblxuXHRcdGlkPVwicGVyaW9kLW51bVwiXG5cdFx0b246Y2xpY2s9eyhldmVudCkgPT5cblx0XHRcdGV2ZW50SGFuZGxlcnMub25DbGljayh7XG5cdFx0XHRcdGRhdGUsXG5cdFx0XHRcdGNyZWF0ZU5ld1NwbGl0TGVhZjogaXNDb250cm9sUHJlc3NlZChldmVudCksXG5cdFx0XHRcdGdyYW51bGFyaXR5OiAncXVhcnRlcidcblx0XHRcdH0pfVxuXHRcdG9uOmNvbnRleHRtZW51PXsoZXZlbnQpID0+XG5cdFx0XHRldmVudEhhbmRsZXJzLm9uQ29udGV4dE1lbnUoe1xuXHRcdFx0XHRkYXRlLFxuXHRcdFx0XHRldmVudCxcblx0XHRcdFx0Z3JhbnVsYXJpdHk6ICdxdWFydGVyJ1xuXHRcdFx0fSl9XG5cdFx0b246cG9pbnRlcmVudGVyPXsoZXZlbnQpID0+XG5cdFx0XHRldmVudEhhbmRsZXJzLm9uSG92ZXIoe1xuXHRcdFx0XHRkYXRlLFxuXHRcdFx0XHR0YXJnZXRFbDogZXZlbnQudGFyZ2V0LFxuXHRcdFx0XHRpc0NvbnRyb2xQcmVzc2VkOiBpc0NvbnRyb2xQcmVzc2VkKGV2ZW50KSxcblx0XHRcdFx0Z3JhbnVsYXJpdHk6ICdxdWFydGVyJ1xuXHRcdFx0fSl9XG5cdD5cblx0XHRRe3F1YXJ0ZXJOdW19XG5cdFx0PERvdCBpc0ZpbGxlZD17ISFmaWxlfSBpc0FjdGl2ZT17ISFmaWxlfSAvPlxuXHQ8L2J1dHRvbj5cblxuXHQ8U3RpY2tlciB7c3RpY2tlcn0gLz5cbjwvdGQ+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuXHRAdGFpbHdpbmQgYmFzZTtcblx0QHRhaWx3aW5kIGNvbXBvbmVudHM7XG5cdEB0YWlsd2luZCB1dGlsaXRpZXM7XG48L3N0eWxlPlxuIiwgIjxzdmVsdGU6b3B0aW9ucyBpbW11dGFibGUgLz5cblxuPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0aW1wb3J0IHR5cGUgeyBNb21lbnQgfSBmcm9tICdtb21lbnQnO1xuXG5cdGltcG9ydCB7IGdldE5vdGVEYXRlVUlEIH0gZnJvbSAnQC9pbyc7XG5cdGltcG9ydCB7IG5vdGVzU3RvcmVzIH0gZnJvbSAnQC9zdG9yZXMnO1xuXHRpbXBvcnQgeyBldmVudEhhbmRsZXJzLCBpc0NvbnRyb2xQcmVzc2VkIH0gZnJvbSAnLi4vdXRpbHMnO1xuXHRpbXBvcnQgRG90IGZyb20gJy4vRG90LnN2ZWx0ZSc7XG5cdGltcG9ydCBTdGlja2VyIGZyb20gJy4vU3RpY2tlci5zdmVsdGUnO1xuXG5cdC8vIFByb3BlcnRpZXNcblx0ZXhwb3J0IGxldCB3ZWVrTnVtOiBudW1iZXI7XG5cdGV4cG9ydCBsZXQgc3RhcnRPZldlZWtEYXRlOiBNb21lbnQ7XG5cblx0Y29uc3Qgbm90ZXNTdG9yZSA9IG5vdGVzU3RvcmVzWyd3ZWVrJ107XG5cdGNvbnN0IG5vdGVEYXRlVUlEID0gZ2V0Tm90ZURhdGVVSUQoeyBkYXRlOiBzdGFydE9mV2Vla0RhdGUsIGdyYW51bGFyaXR5OiAnd2VlaycgfSk7XG5cdCQ6IGZpbGUgPSAkbm90ZXNTdG9yZVtub3RlRGF0ZVVJRF0/LmZpbGU7XG5cdCQ6IHN0aWNrZXIgPSAkbm90ZXNTdG9yZVtub3RlRGF0ZVVJRF0/LnN0aWNrZXI7XG48L3NjcmlwdD5cblxuPHRkIGNsYXNzPVwicmVsYXRpdmVcIj5cblx0PGJ1dHRvblxuXHRcdGlkPVwicGVyaW9kLW51bVwiXG5cdFx0b246Y2xpY2s9eyhldmVudCkgPT5cblx0XHRcdGV2ZW50SGFuZGxlcnMub25DbGljayh7XG5cdFx0XHRcdGRhdGU6IHN0YXJ0T2ZXZWVrRGF0ZSxcblx0XHRcdFx0Y3JlYXRlTmV3U3BsaXRMZWFmOiBpc0NvbnRyb2xQcmVzc2VkKGV2ZW50KSxcblx0XHRcdFx0Z3JhbnVsYXJpdHk6ICd3ZWVrJ1xuXHRcdFx0fSl9XG5cdFx0b246Y29udGV4dG1lbnU9eyhldmVudCkgPT5cblx0XHRcdGV2ZW50SGFuZGxlcnMub25Db250ZXh0TWVudSh7IGRhdGU6IHN0YXJ0T2ZXZWVrRGF0ZSwgZXZlbnQsIGdyYW51bGFyaXR5OiAnd2VlaycgfSl9XG5cdFx0b246cG9pbnRlcmVudGVyPXsoZXZlbnQpID0+IHtcblx0XHRcdGV2ZW50SGFuZGxlcnMub25Ib3Zlcih7XG5cdFx0XHRcdGRhdGU6IHN0YXJ0T2ZXZWVrRGF0ZSxcblx0XHRcdFx0dGFyZ2V0RWw6IGV2ZW50LnRhcmdldCxcblx0XHRcdFx0aXNDb250cm9sUHJlc3NlZDogaXNDb250cm9sUHJlc3NlZChldmVudCksXG5cdFx0XHRcdGdyYW51bGFyaXR5OiAnd2Vlaydcblx0XHRcdH0pO1xuXHRcdH19XG5cdD5cblx0XHR7d2Vla051bX1cblx0XHQ8RG90IGlzRmlsbGVkPXshIWZpbGV9IGlzQWN0aXZlPXshIWZpbGV9IC8+XG5cdDwvYnV0dG9uPlxuXHQ8U3RpY2tlciB7c3RpY2tlcn0gLz5cbjwvdGQ+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuXHRAdGFpbHdpbmQgYmFzZTtcblx0QHRhaWx3aW5kIGNvbXBvbmVudHM7XG5cdEB0YWlsd2luZCB1dGlsaXRpZXM7XG5cblx0dGQge1xuXHRcdGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHZhcigtLWJhY2tncm91bmQtbW9kaWZpZXItYm9yZGVyKTtcblx0fVxuPC9zdHlsZT5cbiIsICI8c3ZlbHRlOm9wdGlvbnMgaW1tdXRhYmxlIC8+XG5cbjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB7IGdldE5vdGVEYXRlVUlEIH0gZnJvbSAnQC9pbyc7XG5cdGltcG9ydCB7IGRpc3BsYXllZERhdGVTdG9yZSwgbm90ZXNTdG9yZXMgfSBmcm9tICdAL3N0b3Jlcyc7XG5cdGltcG9ydCB7IGV2ZW50SGFuZGxlcnMsIGlzQ29udHJvbFByZXNzZWQgfSBmcm9tICcuLi91dGlscyc7XG5cdGltcG9ydCBEb3QgZnJvbSAnLi9Eb3Quc3ZlbHRlJztcblx0aW1wb3J0IFN0aWNrZXIgZnJvbSAnLi9TdGlja2VyLnN2ZWx0ZSc7XG5cblx0ZXhwb3J0IGxldCB5ZWFyOiBudW1iZXI7XG5cblx0Y29uc3Qgbm90ZXNTdG9yZSA9IG5vdGVzU3RvcmVzWyd5ZWFyJ107XG5cblx0JDogZGF0ZSA9ICRkaXNwbGF5ZWREYXRlU3RvcmUuY2xvbmUoKS55ZWFyKHllYXIpLnN0YXJ0T2YoJ3llYXInKTtcblxuXHQkOiBub3RlRGF0ZVVJRCA9IGdldE5vdGVEYXRlVUlEKHsgZGF0ZSwgZ3JhbnVsYXJpdHk6ICd5ZWFyJyB9KTtcblx0JDogZmlsZSA9ICRub3Rlc1N0b3JlW25vdGVEYXRlVUlEXT8uZmlsZTtcblx0JDogc3RpY2tlciA9ICRub3Rlc1N0b3JlW25vdGVEYXRlVUlEXT8uc3RpY2tlcjtcbjwvc2NyaXB0PlxuXG48dGQgY2xhc3M9XCJyZWxhdGl2ZVwiPlxuXHQ8YnV0dG9uXG5cdFx0aWQ9XCJ5ZWFyXCJcblx0XHRvbjpjbGljaz17KGV2ZW50KSA9PlxuXHRcdFx0ZXZlbnRIYW5kbGVycy5vbkNsaWNrKHtcblx0XHRcdFx0ZGF0ZSxcblx0XHRcdFx0Y3JlYXRlTmV3U3BsaXRMZWFmOiBpc0NvbnRyb2xQcmVzc2VkKGV2ZW50KSxcblx0XHRcdFx0Z3JhbnVsYXJpdHk6ICd5ZWFyJ1xuXHRcdFx0fSl9XG5cdFx0b246Y29udGV4dG1lbnU9eyhldmVudCkgPT5cblx0XHRcdGV2ZW50SGFuZGxlcnMub25Db250ZXh0TWVudSh7XG5cdFx0XHRcdGRhdGUsXG5cdFx0XHRcdGV2ZW50LFxuXHRcdFx0XHRncmFudWxhcml0eTogJ3llYXInXG5cdFx0XHR9KX1cblx0XHRvbjpwb2ludGVyZW50ZXI9eyhldmVudCkgPT4ge1xuXHRcdFx0ZXZlbnRIYW5kbGVycy5vbkhvdmVyKHtcblx0XHRcdFx0ZGF0ZSxcblx0XHRcdFx0dGFyZ2V0RWw6IGV2ZW50LnRhcmdldCxcblx0XHRcdFx0aXNDb250cm9sUHJlc3NlZDogaXNDb250cm9sUHJlc3NlZChldmVudCksXG5cdFx0XHRcdGdyYW51bGFyaXR5OiAneWVhcidcblx0XHRcdH0pO1xuXHRcdH19XG5cdD5cblx0XHR7eWVhcn1cblx0XHQ8RG90IGlzRmlsbGVkPXshIWZpbGV9IGlzQWN0aXZlPXshIWZpbGV9IC8+XG5cdDwvYnV0dG9uPlxuXG5cdDxTdGlja2VyIHtzdGlja2VyfSAvPlxuPC90ZD5cblxuPHN0eWxlIGxhbmc9XCJwb3N0Y3NzXCI+XG5cdEB0YWlsd2luZCBiYXNlO1xuXHRAdGFpbHdpbmQgY29tcG9uZW50cztcblx0QHRhaWx3aW5kIHV0aWxpdGllcztcbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0aW1wb3J0IHR5cGUgeyBNb21lbnQgfSBmcm9tICdtb21lbnQnO1xuXG5cdGltcG9ydCB7IGRpc3BsYXllZERhdGVTdG9yZSwgeWVhcnNSYW5nZXMgfSBmcm9tICdAL3N0b3Jlcyc7XG5cdGltcG9ydCB7IGV2ZW50SGFuZGxlcnMsIGlzQ29udHJvbFByZXNzZWQgfSBmcm9tICcuLi91dGlscyc7XG5cdGltcG9ydCBBcnJvdyBmcm9tICcuL0Fycm93LnN2ZWx0ZSc7XG5cdGltcG9ydCBEb3QgZnJvbSAnLi9Eb3Quc3ZlbHRlJztcblxuXHRsZXQgdG9kYXk6IE1vbWVudDtcblx0JDogJGRpc3BsYXllZERhdGVTdG9yZSwgKHRvZGF5ID0gd2luZG93Lm1vbWVudCgpKTtcblxuXHRmdW5jdGlvbiBkZWNyZW1lbnRkaXNwbGF5ZWREYXRlKCkge1xuXHRcdGRpc3BsYXllZERhdGVTdG9yZS51cGRhdGUoKGRhdGUpID0+IGRhdGUuY2xvbmUoKS5zdWJ0cmFjdCgxLCAneWVhcicpKTtcblx0fVxuXG5cdGZ1bmN0aW9uIGluY3JlbWVudGRpc3BsYXllZERhdGUoKSB7XG5cdFx0ZGlzcGxheWVkRGF0ZVN0b3JlLnVwZGF0ZSgoZGF0ZSkgPT4gZGF0ZS5jbG9uZSgpLmFkZCgxLCAneWVhcicpKTtcblx0fVxuXG5cdGZ1bmN0aW9uIHJlc2V0ZGlzcGxheWVkRGF0ZSgpIHtcblx0XHR5ZWFyc1Jhbmdlcy51cGRhdGUoKHZhbHVlcykgPT4gKHtcblx0XHRcdC4uLnZhbHVlcyxcblx0XHRcdGNyclJhbmdlSW5kZXg6IHZhbHVlcy5yYW5nZXMuZmluZEluZGV4KChyYW5nZSkgPT4gcmFuZ2UgPT09IHZhbHVlcy50b2RheVJhbmdlKVxuXHRcdH0pKTtcblxuXHRcdGRpc3BsYXllZERhdGVTdG9yZS5zZXQodG9kYXkuY2xvbmUoKSk7XG5cdH1cblxuXHRsZXQgc2hvd2luZ0N1cnJlbnRZZWFyOiBib29sZWFuO1xuXHQkOiAkZGlzcGxheWVkRGF0ZVN0b3JlLFxuXHRcdCgoKSA9PiB7XG5cdFx0XHRzaG93aW5nQ3VycmVudFllYXIgPSAkZGlzcGxheWVkRGF0ZVN0b3JlLmlzU2FtZSh0b2RheSwgJ3llYXInKTtcblxuXHRcdFx0Ly8gYWRkIG5ldyByYW5nZXMgb3IgdXBkYXRlIGV4aXN0aW5nIG9uZXMgZXZlcnkgdGltZSBkaXNwbGF5ZWQgZGF0ZSBjaGFuZ2VzXG5cdFx0XHR5ZWFyc1Jhbmdlcy5zZWxlY3RPckNyZWF0ZVJhbmdlcygpO1xuXHRcdH0pKCk7XG48L3NjcmlwdD5cblxuPGRpdiBjbGFzcz1cImZsZXggZmxleC1jb2wgc3BhY2UteS0xIG10LTIuNSBweC0yXCIgaWQ9XCJuYXZcIj5cblx0PGRpdiBjbGFzcz1cImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWVuZCB0ZXh0LVstLWNvbG9yLXRleHQtdGl0bGVdXCIgaWQ9XCJ0aXRsZVwiPlxuXHRcdDxidXR0b25cblx0XHRcdGNsYXNzPVwiaC1hdXRvIHRleHQtN3hsIFsmOm5vdCg6Zm9jdXMtdmlzaWJsZSldOnNoYWRvdy1ub25lIGZvbnQtc2VtaWJvbGRcIlxuXHRcdFx0aWQ9XCJ5ZWFyXCJcblx0XHRcdG9uOmNsaWNrPXsoZXZlbnQpID0+XG5cdFx0XHRcdGV2ZW50SGFuZGxlcnMub25DbGljayh7XG5cdFx0XHRcdFx0ZGF0ZTogJGRpc3BsYXllZERhdGVTdG9yZSxcblx0XHRcdFx0XHRjcmVhdGVOZXdTcGxpdExlYWY6IGlzQ29udHJvbFByZXNzZWQoZXZlbnQpLFxuXHRcdFx0XHRcdGdyYW51bGFyaXR5OiAneWVhcidcblx0XHRcdFx0fSl9XG5cdFx0XHRvbjpjb250ZXh0bWVudT17KGV2ZW50KSA9PlxuXHRcdFx0XHRldmVudEhhbmRsZXJzLm9uQ29udGV4dE1lbnUoe1xuXHRcdFx0XHRcdGRhdGU6ICRkaXNwbGF5ZWREYXRlU3RvcmUsXG5cdFx0XHRcdFx0ZXZlbnQsXG5cdFx0XHRcdFx0Z3JhbnVsYXJpdHk6ICd5ZWFyJ1xuXHRcdFx0XHR9KX1cblx0XHRcdG9uOnBvaW50ZXJlbnRlcj17KGV2ZW50KSA9PiB7XG5cdFx0XHRcdGV2ZW50SGFuZGxlcnMub25Ib3Zlcih7XG5cdFx0XHRcdFx0ZGF0ZTogJGRpc3BsYXllZERhdGVTdG9yZSxcblx0XHRcdFx0XHR0YXJnZXRFbDogZXZlbnQudGFyZ2V0LFxuXHRcdFx0XHRcdGlzQ29udHJvbFByZXNzZWQ6IGlzQ29udHJvbFByZXNzZWQoZXZlbnQpLFxuXHRcdFx0XHRcdGdyYW51bGFyaXR5OiAneWVhcidcblx0XHRcdFx0fSk7XG5cdFx0XHR9fVxuXHRcdD5cblx0XHRcdHskZGlzcGxheWVkRGF0ZVN0b3JlLmZvcm1hdCgnWVlZWScpfVxuXHRcdDwvYnV0dG9uPlxuXHRcdDxidXR0b25cblx0XHRcdGNsYXNzPVwiWyY6bm90KDpmb2N1cy12aXNpYmxlKV06c2hhZG93LW5vbmUgdGV4dC1bLS1pbnRlcmFjdGl2ZS1hY2NlbnRdIGZvbnQtbWVkaXVtIG9wYWNpdHktNjBcIlxuXHRcdFx0aWQ9XCJ5ZWFycy1yYW5nZVwiXG5cdFx0PlxuXHRcdFx0eyR5ZWFyc1Jhbmdlcy5yYW5nZXNbJHllYXJzUmFuZ2VzLmNyclJhbmdlSW5kZXhdfVxuXHRcdDwvYnV0dG9uPlxuXHQ8L2Rpdj5cblxuXHQ8ZGl2IGNsYXNzPVwiZmxleCBpdGVtcy1jZW50ZXIgLW1sLTFcIiBpZD1cImJvdHRvbS1uYXZcIj5cblx0XHQ8QXJyb3cgZGlyZWN0aW9uPVwibGVmdFwiIG9uQ2xpY2s9e2RlY3JlbWVudGRpc3BsYXllZERhdGV9IHRvb2x0aXA9XCJQcmV2aW91cyBZZWFyXCIgLz5cblx0XHQ8YnV0dG9uXG5cdFx0XHRjbGFzcz1cIlsmOm5vdCg6Zm9jdXMtdmlzaWJsZSldOnNoYWRvdy1ub25lIHRleHQtWy0tY29sb3ItYXJyb3ddIGZsZXggaXRlbXMtY2VudGVyIHAtMiB7c2hvd2luZ0N1cnJlbnRZZWFyXG5cdFx0XHRcdD8gJ29wYWNpdHktMTAwJ1xuXHRcdFx0XHQ6ICdvcGFjaXR5LTYwICd9XCJcblx0XHRcdGlkPVwicmVzZXQtYnV0dG9uXCJcblx0XHRcdG9uOmNsaWNrPXtyZXNldGRpc3BsYXllZERhdGV9XG5cdFx0XHRhcmlhLWxhYmVsPXshc2hvd2luZ0N1cnJlbnRZZWFyID8gJ1Jlc2V0IHRvIGN1cnJlbnQgeWVhcicgOiBudWxsfVxuXHRcdD5cblx0XHRcdDxEb3QgY2xhc3NOYW1lPVwiaC1bOHB4XSB3LVs4cHhdXCIgaXNGaWxsZWQ9e3Nob3dpbmdDdXJyZW50WWVhcn0gLz5cblx0XHQ8L2J1dHRvbj5cblx0XHQ8QXJyb3cgZGlyZWN0aW9uPVwicmlnaHRcIiBvbkNsaWNrPXtpbmNyZW1lbnRkaXNwbGF5ZWREYXRlfSB0b29sdGlwPVwiTmV4dCBZZWFyXCIgLz5cblx0PC9kaXY+XG48L2Rpdj5cblxuPHN0eWxlIGxhbmc9XCJwb3N0Y3NzXCI+XG5cdEB0YWlsd2luZCBiYXNlO1xuXHRAdGFpbHdpbmQgY29tcG9uZW50cztcblx0QHRhaWx3aW5kIHV0aWxpdGllcztcblxuXHRidXR0b24ge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHR9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB7IFlFQVJTX1JBTkdFX1NJWkUgfSBmcm9tICdAL2NvbnN0YW50cyc7XG5cdGltcG9ydCBBcnJvdyBmcm9tICcuL0Fycm93LnN2ZWx0ZSc7XG5cdGltcG9ydCBEb3QgZnJvbSAnLi9Eb3Quc3ZlbHRlJztcblx0aW1wb3J0IHsgZGlzcGxheWVkRGF0ZVN0b3JlLCB5ZWFyc1JhbmdlcyB9IGZyb20gJ0Avc3RvcmVzJztcblxuXHRjb25zdCB0b2RheU1vbWVudCA9IHdpbmRvdy5tb21lbnQoKTtcblxuXHRmdW5jdGlvbiBkZWNyZW1lbnRkaXNwbGF5ZWRZZWFyUmFuZ2UoKSB7XG5cdFx0Y29uc29sZS5sb2coJ2RlY3JlbWVudGRpc3BsYXllZFllYXJSYW5nZSgpID4geWVhcnNSYW5nZXMgc3RvcmU6ICcsICR5ZWFyc1Jhbmdlcyk7XG5cblx0XHR5ZWFyc1Jhbmdlcy51cGRhdGVSYW5nZXMoeyBhY3Rpb246ICdkZWNyZW1lbnQnLCBkaXNwbGF5ZWREYXRlTW9kaWZpZXI6IC1ZRUFSU19SQU5HRV9TSVpFIH0pO1xuXHR9XG5cblx0ZnVuY3Rpb24gaW5jcmVtZW50ZGlzcGxheWVkRGF0ZSgpIHtcblx0XHRjb25zb2xlLmxvZygnaW5jcmVtZW50ZWRpc3BsYXllZERhdGUoKSA+IHllYXJzUmFuZ2VzIHN0b3JlOiAnLCAkeWVhcnNSYW5nZXMpO1xuXG5cdFx0eWVhcnNSYW5nZXMudXBkYXRlUmFuZ2VzKHsgYWN0aW9uOiAnaW5jcmVtZW50JyB9KTtcblx0fVxuXG5cdGZ1bmN0aW9uIHJlc2V0ZGlzcGxheWVkRGF0ZSgpIHtcblx0XHR5ZWFyc1Jhbmdlcy51cGRhdGUoKHZhbHVlcykgPT4gKHtcblx0XHRcdC4uLnZhbHVlcyxcblx0XHRcdGNyclJhbmdlSW5kZXg6IHZhbHVlcy5yYW5nZXMuZmluZEluZGV4KChyYW5nZSkgPT4gcmFuZ2UgPT09IHZhbHVlcy50b2RheVJhbmdlKVxuXHRcdH0pKTtcblxuXHRcdGRpc3BsYXllZERhdGVTdG9yZS5zZXQodG9kYXlNb21lbnQuY2xvbmUoKSk7XG5cdH1cblxuXHRsZXQgc2hvd2luZ0N1cnJlbnRSYW5nZTogYm9vbGVhbjtcblx0JDogJGRpc3BsYXllZERhdGVTdG9yZSxcblx0XHQoKCkgPT4ge1xuXHRcdFx0c2hvd2luZ0N1cnJlbnRSYW5nZSA9XG5cdFx0XHRcdCR5ZWFyc1Jhbmdlcy50b2RheVJhbmdlID09PSAkeWVhcnNSYW5nZXMucmFuZ2VzWyR5ZWFyc1Jhbmdlcy5jcnJSYW5nZUluZGV4XTtcblxuXHRcdFx0Ly8gYWRkIG5ldyByYW5nZXMgb3IgdXBkYXRlIGV4aXN0aW5nIG9uZXMgZXZlcnkgdGltZSBkaXNwbGF5ZWQgZGF0ZSBjaGFuZ2VzXG5cdFx0XHR5ZWFyc1Jhbmdlcy5zZWxlY3RPckNyZWF0ZVJhbmdlcygpO1xuXHRcdH0pKCk7XG5cdCQ6IGNyclJhbmdlID0gJHllYXJzUmFuZ2VzLnJhbmdlc1skeWVhcnNSYW5nZXMuY3JyUmFuZ2VJbmRleF0uc3BsaXQoJy0nKTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwiZmxleCBmbGV4LWNvbCBzcGFjZS15LTEgbXQtMyBtYi0xLjUgcHgtMlwiIGlkPVwibmF2XCI+XG5cdDxkaXZcblx0XHRjbGFzcz1cInRleHQtWy0tY29sb3ItdGV4dC10aXRsZV0gdGV4dC03eGwgWyY6bm90KDpmb2N1cy12aXNpYmxlKV06c2hhZG93LW5vbmUgZm9udC1zZW1pYm9sZFwiXG5cdFx0aWQ9XCJ0aXRsZVwiXG5cdD5cblx0XHR7Y3JyUmFuZ2VbMF19IC0ge2NyclJhbmdlWzFdLnNsaWNlKDIpfVxuXHQ8L2Rpdj5cblxuXHQ8ZGl2IGNsYXNzPVwiZmxleCBpdGVtcy1jZW50ZXIgLW1sLTFcIiBpZD1cImJvdHRvbS1uYXZcIj5cblx0XHQ8QXJyb3cgZGlyZWN0aW9uPVwibGVmdFwiIG9uQ2xpY2s9e2RlY3JlbWVudGRpc3BsYXllZFllYXJSYW5nZX0gdG9vbHRpcD1cIlByZXZpb3VzIFJhbmdlXCIgLz5cblx0XHQ8YnV0dG9uXG5cdFx0XHRjbGFzcz1cIlsmOm5vdCg6Zm9jdXMtdmlzaWJsZSldOnNoYWRvdy1ub25lIHRleHQtWy0tY29sb3ItYXJyb3ddIGZsZXggaXRlbXMtY2VudGVyIHAtMiB7c2hvd2luZ0N1cnJlbnRSYW5nZVxuXHRcdFx0XHQ/ICdvcGFjaXR5LTEwMCdcblx0XHRcdFx0OiAnb3BhY2l0eS02MCAnfVwiXG5cdFx0XHRpZD1cInJlc2V0LWJ1dHRvblwiXG5cdFx0XHRvbjpjbGljaz17cmVzZXRkaXNwbGF5ZWREYXRlfVxuXHRcdFx0YXJpYS1sYWJlbD17IXNob3dpbmdDdXJyZW50UmFuZ2UgPyAnQ3VycmVudCBSYW5nZScgOiBudWxsfVxuXHRcdD5cblx0XHRcdDxEb3QgY2xhc3NOYW1lPVwiaC1bOHB4XSB3LVs4cHhdXCIgaXNGaWxsZWQ9e3Nob3dpbmdDdXJyZW50UmFuZ2V9IC8+XG5cdFx0PC9idXR0b24+XG5cdFx0PEFycm93IGRpcmVjdGlvbj1cInJpZ2h0XCIgb25DbGljaz17aW5jcmVtZW50ZGlzcGxheWVkRGF0ZX0gdG9vbHRpcD1cIk5leHQgUmFuZ2VcIiAvPlxuXHQ8L2Rpdj5cbjwvZGl2PlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIGJhc2U7XG5cdEB0YWlsd2luZCBjb21wb25lbnRzO1xuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuXG5cdGJ1dHRvbiB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdH1cbjwvc3R5bGU+XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0aW1wb3J0IHsgbW9udGhzSW5kZXhlc0luUXVhcnRlcnMsIHRvZ2dsZVBlcmlvZHMgfSBmcm9tICdAL2NvbnN0YW50cyc7XG5cdGltcG9ydCB7IHNldHRpbmdzU3RvcmUgfSBmcm9tICdAL3NldHRpbmdzJztcblx0aW1wb3J0IHsgZGlzcGxheWVkRGF0ZVN0b3JlLCBsb2NhbGVEYXRhU3RvcmUsIHllYXJzUmFuZ2VzIH0gZnJvbSAnQC9zdG9yZXMnO1xuXHRpbXBvcnQgeyBjYXBpdGFsaXplIH0gZnJvbSAnQC91dGlscyc7XG5cdGltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuXHRpbXBvcnQgeyBnZXRNb250aCwgZ2V0U3RhcnRPZldlZWssIGdldFllYXJzLCBpc1dlZWtlbmQgfSBmcm9tICcuLi91dGlscyc7XG5cdGltcG9ydCBEYXkgZnJvbSAnLi9EYXkuc3ZlbHRlJztcblx0aW1wb3J0IE1vbnRoIGZyb20gJy4vTW9udGguc3ZlbHRlJztcblx0aW1wb3J0IE1vbnRoTmF2IGZyb20gJy4vTW9udGhOYXYuc3ZlbHRlJztcblx0aW1wb3J0IFF1YXJ0ZXJOdW0gZnJvbSAnLi9RdWFydGVyTnVtLnN2ZWx0ZSc7XG5cdGltcG9ydCBXZWVrTnVtIGZyb20gJy4vV2Vla051bS5zdmVsdGUnO1xuXHRpbXBvcnQgWWVhciBmcm9tICcuL1llYXIuc3ZlbHRlJztcblx0aW1wb3J0IFllYXJOYXYgZnJvbSAnLi9ZZWFyTmF2LnN2ZWx0ZSc7XG5cdGltcG9ydCBZZWFyc05hdiBmcm9tICcuL1llYXJzTmF2LnN2ZWx0ZSc7XG5cdGltcG9ydCBUYWJzIGZyb20gJy4vVGFicy5zdmVsdGUnO1xuXG5cdCQ6ICh7XG5cdFx0bG9jYWxlU2V0dGluZ3M6IHsgc2hvd1dlZWtOdW1zLCBzaG93UXVhcnRlck51bXMgfVxuXHR9ID0gJHNldHRpbmdzU3RvcmUpO1xuXHQkOiAoeyB3ZWVrZGF5c1Nob3J0IH0gPSAkbG9jYWxlRGF0YVN0b3JlKTtcblx0JDogbW9udGggPSBnZXRNb250aCgkZGlzcGxheWVkRGF0ZVN0b3JlKTtcblxuXHRsZXQgY3JyVmlldzogKHR5cGVvZiB0b2dnbGVQZXJpb2RzKVtudW1iZXJdID0gJ2RheXMnO1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJjb250YWluZXIgcHgtNCAhcHQtMlwiPlxuXHQ8VGFic1xuXHRcdHRhYnM9e1suLi50b2dnbGVQZXJpb2RzXX1cblx0XHRiaW5kOnNlbGVjdGVkVGFiPXtjcnJWaWV3fVxuXHRcdGlkPVwicGVyaW9kcy1jb250YWluZXJcIlxuXHRcdHRhYklkPVwicGVyaW9kXCJcblx0Lz5cblxuXHR7I2lmIGNyclZpZXcgPT09ICdkYXlzJ31cblx0XHQ8TW9udGhOYXYgLz5cblx0XHQ8dGFibGUgY2xhc3M9XCJjYWxlbmRhclwiIGlkPVwiY2FsZW5kYXJcIj5cblx0XHRcdDxjb2xncm91cD5cblx0XHRcdFx0eyNpZiBzaG93V2Vla051bXN9XG5cdFx0XHRcdFx0PGNvbCAvPlxuXHRcdFx0XHR7L2lmfVxuXHRcdFx0XHR7I2VhY2ggbW9udGhbMV0uZGF5cyBhcyBkYXRlfVxuXHRcdFx0XHRcdDxjb2wgY2xhc3M6d2Vla2VuZD17aXNXZWVrZW5kKGRhdGUpfSAvPlxuXHRcdFx0XHR7L2VhY2h9XG5cdFx0XHQ8L2NvbGdyb3VwPlxuXHRcdFx0PHRoZWFkPlxuXHRcdFx0XHQ8dHI+XG5cdFx0XHRcdFx0eyNpZiBzaG93V2Vla051bXN9XG5cdFx0XHRcdFx0XHQ8dGg+VzwvdGg+XG5cdFx0XHRcdFx0ey9pZn1cblx0XHRcdFx0XHR7I2VhY2ggd2Vla2RheXNTaG9ydCBhcyBkYXlPZldlZWt9XG5cdFx0XHRcdFx0XHQ8dGg+e2RheU9mV2Vla308L3RoPlxuXHRcdFx0XHRcdHsvZWFjaH1cblx0XHRcdFx0PC90cj5cblx0XHRcdDwvdGhlYWQ+XG5cdFx0XHQ8dGJvZHk+XG5cdFx0XHRcdHsjZWFjaCBtb250aCBhcyB3ZWVrICh3ZWVrLndlZWtOdW0pfVxuXHRcdFx0XHRcdDx0cj5cblx0XHRcdFx0XHRcdHsjaWYgc2hvd1dlZWtOdW1zfVxuXHRcdFx0XHRcdFx0XHQ8IS0tIG9uOmhvdmVyRGF5PXt1cGRhdGVQb3BvdmVyfVxuXHRcdFx0XHRcdFx0XHRvbjplbmRIb3ZlckRheT17ZGlzbWlzc1BvcG92ZXJ9IC0tPlxuXHRcdFx0XHRcdFx0XHQ8V2Vla051bSB3ZWVrTnVtPXt3ZWVrLndlZWtOdW19IHN0YXJ0T2ZXZWVrRGF0ZT17Z2V0U3RhcnRPZldlZWsod2Vlay5kYXlzKX0gLz5cblx0XHRcdFx0XHRcdHsvaWZ9XG5cdFx0XHRcdFx0XHR7I2VhY2ggd2Vlay5kYXlzIGFzIGRheSAoZGF5LmZvcm1hdCgpKX1cblx0XHRcdFx0XHRcdFx0PERheSBkYXRlPXtkYXl9IC8+XG5cdFx0XHRcdFx0XHR7L2VhY2h9XG5cdFx0XHRcdFx0PC90cj5cblx0XHRcdFx0ey9lYWNofVxuXHRcdFx0PC90Ym9keT5cblx0XHQ8L3RhYmxlPlxuXHR7L2lmfVxuXHR7I2lmIGNyclZpZXcgPT09ICdtb250aHMnfVxuXHRcdDxZZWFyTmF2IC8+XG5cdFx0PHRhYmxlIGNsYXNzPVwiY2FsZW5kYXJcIiBpZD1cImNhbGVuZGFyXCI+XG5cdFx0XHQ8dGJvZHk+XG5cdFx0XHRcdHsjZWFjaCBtb250aHNJbmRleGVzSW5RdWFydGVycyBhcyBxdWFydGVyTW9udGhzSW5kZXhlcywgaX1cblx0XHRcdFx0XHQ8dHI+XG5cdFx0XHRcdFx0XHR7I2lmIHNob3dRdWFydGVyTnVtc31cblx0XHRcdFx0XHRcdFx0PFF1YXJ0ZXJOdW0gcXVhcnRlck51bT17aSArIDF9IC8+XG5cdFx0XHRcdFx0XHR7L2lmfVxuXHRcdFx0XHRcdFx0eyNlYWNoIHF1YXJ0ZXJNb250aHNJbmRleGVzIGFzIG1vbnRoSW5kZXh9XG5cdFx0XHRcdFx0XHRcdDxNb250aCB7bW9udGhJbmRleH0gLz5cblx0XHRcdFx0XHRcdHsvZWFjaH1cblx0XHRcdFx0XHQ8L3RyPlxuXHRcdFx0XHR7L2VhY2h9XG5cdFx0XHQ8L3Rib2R5PlxuXHRcdDwvdGFibGU+XG5cdHsvaWZ9XG5cdHsjaWYgY3JyVmlldyA9PT0gJ3llYXJzJ31cblx0XHQ8WWVhcnNOYXYgLz5cblx0XHQ8dGFibGUgY2xhc3M9XCJjYWxlbmRhclwiIGlkPVwiY2FsZW5kYXJcIj5cblx0XHRcdDx0Ym9keT5cblx0XHRcdFx0eyNlYWNoIGdldFllYXJzKCB7IHN0YXJ0UmFuZ2VZZWFyOiArJHllYXJzUmFuZ2VzLnJhbmdlc1skeWVhcnNSYW5nZXMuY3JyUmFuZ2VJbmRleF0uc3BsaXQoJy0nKVswXSB9ICkgYXMgcm93WWVhcnNSYW5nZX1cblx0XHRcdFx0XHQ8dHI+XG5cdFx0XHRcdFx0XHR7I2VhY2ggcm93WWVhcnNSYW5nZSBhcyB5ZWFyfVxuXHRcdFx0XHRcdFx0XHQ8WWVhciB7eWVhcn0gLz5cblx0XHRcdFx0XHRcdHsvZWFjaH1cblx0XHRcdFx0XHQ8L3RyPlxuXHRcdFx0XHR7L2VhY2h9XG5cdFx0XHQ8L3Rib2R5PlxuXHRcdDwvdGFibGU+XG5cdHsvaWZ9XG48L2Rpdj5cblxuPHN0eWxlIGxhbmc9XCJwb3N0Y3NzXCI+XG5cdEB0YWlsd2luZCBiYXNlO1xuXHRAdGFpbHdpbmQgY29tcG9uZW50cztcblx0QHRhaWx3aW5kIHV0aWxpdGllcztcblxuXHQuY29udGFpbmVyIHtcblx0XHQtLWNvbG9yLWJhY2tncm91bmQtaGVhZGluZzogdHJhbnNwYXJlbnQ7XG5cdFx0LS1jb2xvci1iYWNrZ3JvdW5kLWRheTogdHJhbnNwYXJlbnQ7XG5cdFx0LS1jb2xvci1iYWNrZ3JvdW5kLXdlZWtudW06IHRyYW5zcGFyZW50O1xuXHRcdC0tY29sb3ItYmFja2dyb3VuZC13ZWVrZW5kOiB0cmFuc3BhcmVudDtcblxuXHRcdC0tY29sb3ItZG90OiB2YXIoLS10ZXh0LW11dGVkKTtcblx0XHQtLWNvbG9yLWFycm93OiB2YXIoLS10ZXh0LW11dGVkKTtcblx0XHQtLWNvbG9yLWJ1dHRvbjogdmFyKC0tdGV4dC1tdXRlZCk7XG5cblx0XHQtLWNvbG9yLXRleHQtdGl0bGU6IHZhcigtLXRleHQtbm9ybWFsKTtcblx0XHQtLWNvbG9yLXRleHQtaGVhZGluZzogdmFyKC0tdGV4dC1tdXRlZCk7XG5cdFx0LS1jb2xvci10ZXh0LWRheTogdmFyKC0tdGV4dC1ub3JtYWwpO1xuXHRcdC0tY29sb3ItdGV4dC10b2RheTogdmFyKC0taW50ZXJhY3RpdmUtYWNjZW50KTtcblx0XHQtLWNvbG9yLXRleHQtd2Vla251bTogdmFyKC0tdGV4dC1tdXRlZCk7XG5cdH1cblxuXHQud2Vla2VuZCB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmFja2dyb3VuZC13ZWVrZW5kKTtcblx0fVxuXG5cdC5jYWxlbmRhciB7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtaW4td2lkdGg6IDEwMCU7XG5cdH1cblxuXHR0aCB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmFja2dyb3VuZC1oZWFkaW5nKTtcblx0XHRjb2xvcjogdmFyKC0tY29sb3ItdGV4dC1oZWFkaW5nKTtcblx0XHRmb250LXNpemU6IDAuNmVtO1xuXHRcdGxldHRlci1zcGFjaW5nOiAxcHg7XG5cdFx0cGFkZGluZzogNHB4O1xuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHR9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuXHRpbXBvcnQgdHlwZSB7IE1vbWVudCB9IGZyb20gJ21vbWVudCc7XG5cdGltcG9ydCB7IG9uRGVzdHJveSB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGltcG9ydCB7IENBTEVOREFSX1BPUE9WRVJfSUQgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cdGltcG9ydCB7IGRpc3BsYXllZERhdGVTdG9yZSB9IGZyb20gJy4vc3RvcmVzJztcblx0aW1wb3J0IENhbGVuZGFyIGZyb20gJy4vdWkvY29tcG9uZW50cy9DYWxlbmRhci5zdmVsdGUnO1xuXG5cdGV4cG9ydCBsZXQgcG9wb3ZlciA9IGZhbHNlO1xuXG5cdGV4cG9ydCBmdW5jdGlvbiByZXJlbmRlckNhbGVuZGFyKCkge1xuXHRcdC8vIFRPRE86IHJlaW1wbGVtZW50XG5cdFx0Ly8gcmVyZW5kZXJTdG9yZS51cGRhdGUoKHZhbCkgPT4gKHtcblx0XHQvLyBcdC4uLnZhbCxcblx0XHQvLyBcdHJlcmVuZGVyOiB0cnVlXG5cdFx0Ly8gfSkpO1xuXHR9XG5cblx0bGV0IHRvZGF5OiBNb21lbnQgPSB3aW5kb3cubW9tZW50KCk7XG5cblx0bGV0IGhlYXJ0YmVhdCA9IHNldEludGVydmFsKCgpID0+IHtcblx0XHQvLyB1cGRhdGUgdG9kYXlcblx0XHR0b2RheSA9IHdpbmRvdy5tb21lbnQoKTtcblxuXHRcdC8vIHVwZGF0ZSBkaXNwbGF5ZWREYXRlU3RvcmUgdG8gbmV3IGN1cnJlbnQgZGF0ZSBvbmx5IGlmIG5ldyBjdXJyZW50IGRhdGUgaXMgb25lIGRheSBhaGVhZC5cblx0XHQvLyB1c2VmdWwgdG8gdXBkYXRlIGRpc3BsYXkgd2l0aCBuZXcgY3VycmVudCBtb250aCwgeWVhciBvciB5ZWFycyByYW5nZSBhdXRvbWF0aWNhbGx5XG5cdFx0aWYgKHRvZGF5LmlzU2FtZSgkZGlzcGxheWVkRGF0ZVN0b3JlLmNsb25lKCkuYWRkKDEsICdkYXknKSkpIHtcblx0XHRcdGNvbnNvbGUubG9nKCfimpnimpnimpkgUkVSRU5ERVJJTkcgQ0FMRU5kQVIg4pqZ4pqZ4pqZ77iPJyk7XG5cblx0XHRcdGRpc3BsYXllZERhdGVTdG9yZS5zZXQodG9kYXkpO1xuXHRcdFx0cmVyZW5kZXJDYWxlbmRhcigpO1xuXHRcdH1cblx0fSwgMTAwMCAqIDYwKTtcblxuXHRvbkRlc3Ryb3koKCkgPT4ge1xuXHRcdGNsZWFySW50ZXJ2YWwoaGVhcnRiZWF0KTtcblx0fSk7XG48L3NjcmlwdD5cblxueyNpZiBwb3BvdmVyfVxuXHQ8ZGl2XG5cdFx0Y2xhc3M9e2Nsc3goXG5cdFx0XHRwb3BvdmVyICYmICdiZy10cmFuc3BhcmVudCB6LTEwIHctbWF4IG9wYWNpdHktMCBwb2ludGVyLWV2ZW50cy1ub25lIGFic29sdXRlIHRvcC0wIGxlZnQtMCdcblx0XHQpfVxuXHRcdGRhdGEtcG9wb3Zlcj17cG9wb3Zlcn1cblx0XHRpZD17Q0FMRU5EQVJfUE9QT1ZFUl9JRH1cblx0PlxuXHRcdDxkaXYgaWQ9e2Ake0NBTEVOREFSX1BPUE9WRVJfSUR9LWFycm93YH0gY2xhc3M9XCJyb3RhdGUtNDUgYWJzb2x1dGUgdy0yLjUgaC0yLjUgYmctc2xhdGUtNTAwXCIgLz5cblx0XHQ8ZGl2IGNsYXNzPVwibWwtWzVweF0gcC0yXCI+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwiYmctc2xhdGUtNTAwIHJvdW5kZWQtc21cIj5cblx0XHRcdFx0PENhbGVuZGFyIC8+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0PC9kaXY+XG57L2lmfVxueyNpZiAhcG9wb3Zlcn1cblx0PENhbGVuZGFyIC8+XG57L2lmfVxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIGJhc2U7XG5cdEB0YWlsd2luZCBjb21wb25lbnRzO1xuXHRAdGFpbHdpbmQgdXRpbGl0aWVzO1xuXG5cdGJvZHkge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHJlZDtcblx0XHRmb250LXNpemU6IHh4LWxhcmdlO1xuXHR9XG48L3N0eWxlPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCB7IENBTEVOREFSX1BPUE9WRVJfSUQsIFZJRVdfVFlQRSB9IGZyb20gJ0AvY29uc3RhbnRzJztcblx0aW1wb3J0IGxvY2FsZXMgZnJvbSAnQC9sb2NhbGVzJztcblx0aW1wb3J0IHsgZGVmYXVsdFdlZWtkYXlzLCBzeXNMb2NhbGVLZXkgfSBmcm9tICdAL2xvY2FsaXphdGlvbic7XG5cdGltcG9ydCB7IHNldHRpbmdzU3RvcmUgfSBmcm9tICdAL3NldHRpbmdzL3N0b3JlJztcblx0aW1wb3J0IHsgRHJvcGRvd24sIFNldHRpbmdJdGVtLCBUb2dnbGUgfSBmcm9tICdAL3NldHRpbmdzL3VpJztcblx0aW1wb3J0IHsgdXBkYXRlTG9jYWxlLCB1cGRhdGVXZWVrZGF5cywgdXBkYXRlV2Vla1N0YXJ0IH0gZnJvbSAnQC9zdG9yZXMnO1xuXHRpbXBvcnQgeyBQb3BvdmVyIH0gZnJvbSAnQC91aS9wb3BvdmVycyc7XG5cdGltcG9ydCB7IGNhcGl0YWxpemUgfSBmcm9tICdAL3V0aWxzJztcblx0aW1wb3J0IFZpZXcgZnJvbSAnQC9WaWV3LnN2ZWx0ZSc7XG5cdGltcG9ydCB7IGRlcml2ZWQgfSBmcm9tICdzdmVsdGUvc3RvcmUnO1xuXG5cdC8vIERpc3BsYXlcblx0Y29uc3QgaGFuZGxlVmlld0xlYWZQb3NpdGlvbkNoYW5nZSA9IGFzeW5jIChwb3NpdGlvbjogJ2xlZnQnIHwgJ3JpZ2h0JykgPT4ge1xuXHRcdHdpbmRvdy5hcHAud29ya3NwYWNlLmRldGFjaExlYXZlc09mVHlwZShWSUVXX1RZUEUpO1xuXG5cdFx0YXdhaXQgd2luZG93LmFwcC53b3Jrc3BhY2VbYGdldCR7Y2FwaXRhbGl6ZShwb3NpdGlvbikgYXMgJ0xlZnQnIHwgJ1JpZ2h0J31MZWFmYF0oXG5cdFx0XHRmYWxzZVxuXHRcdCk/LnNldFZpZXdTdGF0ZSh7XG5cdFx0XHR0eXBlOiBWSUVXX1RZUEUsXG5cdFx0XHRhY3RpdmU6IGZhbHNlXG5cdFx0fSk7XG5cblx0XHRzZXR0aW5nc1N0b3JlLnVwZGF0ZSgoc2V0dGluZ3MpID0+ICh7XG5cdFx0XHQuLi5zZXR0aW5ncyxcblx0XHRcdHZpZXdMZWFmUG9zaXRpb246IHBvc2l0aW9uIGFzICdsZWZ0JyB8ICdyaWdodCdcblx0XHR9KSk7XG5cdH07XG5cdGNvbnN0IGhhbmRsZVZpZXdNb2RlQ2hhbmdlID0gKHZpZXdNb2RlOiAnZGVkaWNhdGVkLXBhbmVsJyB8ICdmbG9hdGluZy13aW5kb3cnKSA9PiB7XG5cdFx0UG9wb3Zlci5jbGVhbnVwKCk7XG5cblx0XHRpZiAodmlld01vZGUgPT09ICdmbG9hdGluZy13aW5kb3cnKSB7XG5cdFx0XHRQb3BvdmVyLmNyZWF0ZSh7XG5cdFx0XHRcdGlkOiBDQUxFTkRBUl9QT1BPVkVSX0lELFxuXHRcdFx0XHR2aWV3OiB7XG5cdFx0XHRcdFx0Q29tcG9uZW50OiBWaWV3XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdHNldHRpbmdzU3RvcmUudXBkYXRlKChzZXR0aW5ncykgPT4gKHtcblx0XHRcdC4uLnNldHRpbmdzLFxuXHRcdFx0dmlld01vZGVcblx0XHR9KSk7XG5cdH07XG5cblx0Y29uc3QgaGFuZGxlU2hvd1dlZWtOdW1zID0gKHNob3c6IGJvb2xlYW4pID0+IHtcblx0XHRzZXR0aW5nc1N0b3JlLnVwZGF0ZSgoc2V0dGluZ3MpID0+ICh7XG5cdFx0XHQuLi5zZXR0aW5ncyxcblx0XHRcdGxvY2FsZVNldHRpbmdzOiB7XG5cdFx0XHRcdC4uLnNldHRpbmdzLmxvY2FsZVNldHRpbmdzLFxuXHRcdFx0XHRzaG93V2Vla051bXM6IHNob3dcblx0XHRcdH1cblx0XHR9KSk7XG5cdH07XG5cblx0Y29uc3QgaGFuZGxlU2hvd1F1YXJ0ZXJOdW1zID0gKHNob3c6IGJvb2xlYW4pID0+IHtcblx0XHRzZXR0aW5nc1N0b3JlLnVwZGF0ZSgoc2V0dGluZ3MpID0+ICh7XG5cdFx0XHQuLi5zZXR0aW5ncyxcblx0XHRcdGxvY2FsZVNldHRpbmdzOiB7XG5cdFx0XHRcdC4uLnNldHRpbmdzLmxvY2FsZVNldHRpbmdzLFxuXHRcdFx0XHRzaG93UXVhcnRlck51bXM6IHNob3dcblx0XHRcdH1cblx0XHR9KSk7XG5cdH07XG5cblx0Ly8gSW50ZXJhY3RpdmUgQmVoYXZpb3Jcblx0Y29uc3QgaGFuZGxlT3BlblBvcG92ZXJPblJpYmJvbkhvdmVyID0gKG9wZW5Qb3BvdmVyT25SaWJib25Ib3ZlcjogYm9vbGVhbikgPT4ge1xuXHRcdFBvcG92ZXIuY2xlYW51cCgpO1xuXG5cdFx0c2V0dGluZ3NTdG9yZS51cGRhdGUoKHNldHRpbmdzKSA9PiAoe1xuXHRcdFx0Li4uc2V0dGluZ3MsXG5cdFx0XHRvcGVuUG9wb3Zlck9uUmliYm9uSG92ZXJcblx0XHR9KSk7XG5cblx0XHRpZiAob3BlblBvcG92ZXJPblJpYmJvbkhvdmVyKSB7XG5cdFx0XHRQb3BvdmVyLmNyZWF0ZSh7XG5cdFx0XHRcdGlkOiBDQUxFTkRBUl9QT1BPVkVSX0lELFxuXHRcdFx0XHR2aWV3OiB7XG5cdFx0XHRcdFx0Q29tcG9uZW50OiBWaWV3XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH1cblx0fTtcblxuXHRjb25zdCBoYW5kbGVTaG91bGRDb25maXJtQmVmb3JlQ3JlYXRlID0gKHNob3VsZENvbmZpcm1CZWZvcmVDcmVhdGU6IGJvb2xlYW4pID0+IHtcblx0XHRzZXR0aW5nc1N0b3JlLnVwZGF0ZSgoc2V0dGluZ3MpID0+ICh7XG5cdFx0XHQuLi5zZXR0aW5ncyxcblx0XHRcdHNob3VsZENvbmZpcm1CZWZvcmVDcmVhdGVcblx0XHR9KSk7XG5cdH07XG5cblx0Y29uc3QgaGFuZGxlQ29uZmlybUF1dG9Ib3ZlclByZXZpZXcgPSAoYXV0b0hvdmVyUHJldmlldzogYm9vbGVhbikgPT4ge1xuXHRcdHNldHRpbmdzU3RvcmUudXBkYXRlKChzZXR0aW5ncykgPT4gKHtcblx0XHRcdC4uLnNldHRpbmdzLFxuXHRcdFx0YXV0b0hvdmVyUHJldmlld1xuXHRcdH0pKTtcblx0fTtcblxuXHRjb25zdCBoYW5kbGVTZXF1ZW50aWFsRGlzbWlzc2FsT25DbGlja091dCA9IChjbG9zZVBvcG92ZXJzT25lQnlPbmVPbkNsaWNrT3V0OiBib29sZWFuKSA9PiB7XG5cdFx0c2V0dGluZ3NTdG9yZS51cGRhdGUoKHNldHRpbmdzKSA9PiAoe1xuXHRcdFx0Li4uc2V0dGluZ3MsXG5cdFx0XHRwb3BvdmVyc0Nsb3Npbmc6IHtcblx0XHRcdFx0Li4uc2V0dGluZ3MucG9wb3ZlcnNDbG9zaW5nLFxuXHRcdFx0XHRjbG9zZVBvcG92ZXJzT25lQnlPbmVPbkNsaWNrT3V0XG5cdFx0XHR9XG5cdFx0fSkpO1xuXHR9O1xuXHRjb25zdCBoYW5kbGVTZXF1ZW50aWFsRGlzbWlzc2FsT25Fc2MgPSAoY2xvc2VQb3BvdmVyc09uZUJ5T25lT25Fc2NLZXlkb3duOiBib29sZWFuKSA9PiB7XG5cdFx0c2V0dGluZ3NTdG9yZS51cGRhdGUoKHNldHRpbmdzKSA9PiAoe1xuXHRcdFx0Li4uc2V0dGluZ3MsXG5cdFx0XHRwb3BvdmVyc0Nsb3Npbmc6IHtcblx0XHRcdFx0Li4uc2V0dGluZ3MucG9wb3ZlcnNDbG9zaW5nLFxuXHRcdFx0XHRjbG9zZVBvcG92ZXJzT25lQnlPbmVPbkVzY0tleWRvd25cblx0XHRcdH1cblx0XHR9KSk7XG5cdH07XG5cblx0Ly8gTG9jYWxpemF0aW9uXG5cdGNvbnN0IGhhbmRsZVNldExhbmd1YWdlID0gKGxvY2FsZUtleTogc3RyaW5nKSA9PiB7XG5cdFx0dXBkYXRlTG9jYWxlKGxvY2FsZUtleSk7XG5cdFx0dXBkYXRlV2Vla1N0YXJ0KCk7XG5cdFx0dXBkYXRlV2Vla2RheXMoKTtcblx0fTtcblx0Y29uc3QgZ2V0TGFuZ3VhZ2VPcHRpb25zID0gKCkgPT4ge1xuXHRcdGxldCBvcHRpb25zID0gW1xuXHRcdFx0e1xuXHRcdFx0XHRsYWJlbDogYFNhbWUgYXMgc3lzdGVtIC0gJHtsb2NhbGVzLmdldChzeXNMb2NhbGVLZXkpIHx8IHN5c0xvY2FsZUtleX1gLFxuXHRcdFx0XHR2YWx1ZTogc3lzTG9jYWxlS2V5XG5cdFx0XHR9XG5cdFx0XTtcblx0XHR3aW5kb3cubW9tZW50LmxvY2FsZXMoKS5mb3JFYWNoKChtb21lbnRMb2NhbGUpID0+IHtcblx0XHRcdC8vIHVzZSBhIG5hbWUgbGlrZSBcIkVuZ2xpc2hcIiB3aGVuIGF2YWlsYWJsZSBpbiBzdGF0aWMgbG9jYWxlcyBmaWxlIG90aGVyd2lzZSB1c2UgbG9jYWxlS2V5XG5cdFx0XHRvcHRpb25zLnB1c2goe1xuXHRcdFx0XHRsYWJlbDogbG9jYWxlcy5nZXQobW9tZW50TG9jYWxlKSB8fCBtb21lbnRMb2NhbGUsXG5cdFx0XHRcdHZhbHVlOiBtb21lbnRMb2NhbGVcblx0XHRcdH0pO1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIG9wdGlvbnM7XG5cdH07XG5cblx0JDogZmlyc3RXZWVrZGF5ID0gZGVmYXVsdFdlZWtkYXlzWyRzZXR0aW5nc1N0b3JlLmxvY2FsZVNldHRpbmdzLndlZWtTdGFydElkXTtcblx0Y29uc3QgaGFuZGxlRmlyc3RXZWVrZGF5Q2hhbmdlID0gKHdlZWtkYXk6IHN0cmluZykgPT4ge1xuXHRcdGNvbnN0IG5ld1dlZWtTdGFydElkID0gZGVmYXVsdFdlZWtkYXlzLmluZGV4T2Yod2Vla2RheSk7XG5cblx0XHR1cGRhdGVXZWVrU3RhcnQobmV3V2Vla1N0YXJ0SWQpO1xuXHRcdHVwZGF0ZVdlZWtkYXlzKCk7XG5cdH07XG5cdGNvbnN0IHdlZWtkYXlPcHRpb25zU3RvcmUgPSBkZXJpdmVkKHNldHRpbmdzU3RvcmUsICgpID0+IHtcblx0XHRsZXQgb3B0aW9ucyA9IFtcblx0XHRcdHtcblx0XHRcdFx0bGFiZWw6IGBMb2NhbGUgZGVmYXVsdCAtICR7XG5cdFx0XHRcdFx0d2luZG93Lm1vbWVudC5sb2NhbGVEYXRhKCkud2Vla2RheXMoKVt3aW5kb3cubW9tZW50LmxvY2FsZURhdGEoKS5maXJzdERheU9mV2VlaygpXVxuXHRcdFx0XHR9YCxcblx0XHRcdFx0dmFsdWU6IGRlZmF1bHRXZWVrZGF5c1t3aW5kb3cubW9tZW50LmxvY2FsZURhdGEoKS5maXJzdERheU9mV2VlaygpXVxuXHRcdFx0fVxuXHRcdF07XG5cdFx0d2luZG93Lm1vbWVudFxuXHRcdFx0LmxvY2FsZURhdGEoKVxuXHRcdFx0LndlZWtkYXlzKClcblx0XHRcdC5mb3JFYWNoKChsb2NhbGl6ZWREYXksIGkpID0+IHtcblx0XHRcdFx0b3B0aW9ucy5wdXNoKHsgbGFiZWw6IGxvY2FsaXplZERheSwgdmFsdWU6IGRlZmF1bHRXZWVrZGF5c1tpXSB9KTtcblx0XHRcdH0pO1xuXG5cdFx0cmV0dXJuIG9wdGlvbnM7XG5cdH0pO1xuXHQkOiB3ZWVrZGF5T3B0aW9ucyA9ICR3ZWVrZGF5T3B0aW9uc1N0b3JlO1xuXG5cdGNvbnN0IGhhbmRsZUFsbG93TG9jYWxlc1N3aXRjaEZyb21Db21tYW5kUGFsZXR0ZSA9IChcblx0XHRhbGxvd0xvY2FsZXNTd2l0Y2hGcm9tQ29tbWFuZFBhbGV0dGU6IGJvb2xlYW5cblx0KSA9PiB7XG5cdFx0c2V0dGluZ3NTdG9yZS51cGRhdGUoKHNldHRpbmdzKSA9PiAoe1xuXHRcdFx0Li4uc2V0dGluZ3MsXG5cdFx0XHRhbGxvd0xvY2FsZXNTd2l0Y2hGcm9tQ29tbWFuZFBhbGV0dGVcblx0XHR9KSk7XG5cdH07XG48L3NjcmlwdD5cblxuPGgzPkRpc3BsYXk8L2gzPlxuPFNldHRpbmdJdGVtXG5cdG5hbWU9XCJDYWxlbmRhciBQYW5lbCBMb2NhdGlvblwiXG5cdGRlc2NyaXB0aW9uPVwiQ2hvb3NlIHdoZXJlIHRoZSBjYWxlbmRhciBhcHBlYXJzIGluIHlvdXIgd29ya3NwYWNlIChsZWZ0IG9yIHJpZ2h0IHNpZGViYXIpXCJcblx0dHlwZT1cImRyb3Bkb3duXCJcbj5cblx0PERyb3Bkb3duXG5cdFx0c2xvdD1cImNvbnRyb2xcIlxuXHRcdG9wdGlvbnM9e1tcblx0XHRcdHsgbGFiZWw6ICdMZWZ0JywgdmFsdWU6ICdsZWZ0JyB9LFxuXHRcdFx0eyBsYWJlbDogJ1JpZ2h0JywgdmFsdWU6ICdyaWdodCcgfVxuXHRcdF19XG5cdFx0b25DaGFuZ2U9e2hhbmRsZVZpZXdMZWFmUG9zaXRpb25DaGFuZ2V9XG5cdFx0dmFsdWU9eyRzZXR0aW5nc1N0b3JlLnZpZXdMZWFmUG9zaXRpb259XG5cdC8+XG48L1NldHRpbmdJdGVtPlxuXG48U2V0dGluZ0l0ZW1cblx0bmFtZT1cIlZpZXcgTW9kZVwiXG5cdGRlc2NyaXB0aW9uPVwiU2hvdyBjYWxlbmRhciBpbiBhIGRlZGljYXRlZCB3b3Jrc3BhY2UgcGFuZWwgKHJlY29tbWVuZGVkKSBvciBhcyBhIGZsb2F0aW5nIHdpbmRvd1wiXG4+XG5cdDxEcm9wZG93blxuXHRcdHNsb3Q9XCJjb250cm9sXCJcblx0XHRvcHRpb25zPXtbXG5cdFx0XHR7IGxhYmVsOiAnRGVkaWNhdGVkIFBhbmVsJywgdmFsdWU6ICdkZWRpY2F0ZWQtcGFuZWwnIH0sXG5cdFx0XHR7IGxhYmVsOiAnRmxvYXRpbmcgV2luZG93JywgdmFsdWU6ICdmbG9hdGluZy13aW5kb3cnIH1cblx0XHRdfVxuXHRcdG9uQ2hhbmdlPXtoYW5kbGVWaWV3TW9kZUNoYW5nZX1cblx0XHR2YWx1ZT17JHNldHRpbmdzU3RvcmUudmlld01vZGV9XG5cdC8+XG48L1NldHRpbmdJdGVtPlxuXG48U2V0dGluZ0l0ZW1cblx0bmFtZT1cIldlZWsgTnVtYmVyc1wiXG5cdGRlc2NyaXB0aW9uPVwiRGlzcGxheSB3ZWVrIG51bWJlcnMgYWxvbmdzaWRlIHRoZSBjYWxlbmRhciBmb3IgZWFzaWVyIHRlbXBvcmFsIHJlZmVyZW5jZVwiXG4+XG5cdDxUb2dnbGVcblx0XHRzbG90PVwiY29udHJvbFwiXG5cdFx0b25DaGFuZ2U9e2hhbmRsZVNob3dXZWVrTnVtc31cblx0XHRpc0VuYWJsZWQ9eyRzZXR0aW5nc1N0b3JlLmxvY2FsZVNldHRpbmdzLnNob3dXZWVrTnVtc31cblx0Lz5cbjwvU2V0dGluZ0l0ZW0+XG5cbjxTZXR0aW5nSXRlbVxuXHRuYW1lPVwiRmlzY2FsIFF1YXJ0ZXJzXCJcblx0ZGVzY3JpcHRpb249XCJTaG93IHF1YXJ0ZXIgZGl2aXNpb25zIGZvciBidXNpbmVzcyBhbmQgYWNhZGVtaWMgcGxhbm5pbmdcIlxuPlxuXHQ8VG9nZ2xlXG5cdFx0c2xvdD1cImNvbnRyb2xcIlxuXHRcdG9uQ2hhbmdlPXtoYW5kbGVTaG93UXVhcnRlck51bXN9XG5cdFx0aXNFbmFibGVkPXskc2V0dGluZ3NTdG9yZS5sb2NhbGVTZXR0aW5ncy5zaG93UXVhcnRlck51bXN9XG5cdC8+XG48L1NldHRpbmdJdGVtPlxuXG57I2lmICRzZXR0aW5nc1N0b3JlLnZpZXdNb2RlID09PSAnZmxvYXRpbmctd2luZG93J31cblx0PGgzPlBvcG92ZXIgV2luZG93czwvaDM+XG5cdDxTZXR0aW5nSXRlbVxuXHRcdG5hbWU9XCJTZXF1ZW50aWFsIERpc21pc3NhbCAoQ2xpY2spXCJcblx0XHRkZXNjcmlwdGlvbj1cIkNsb3NlIGZsb2F0aW5nIHdpbmRvd3Mgb25lIGF0IGEgdGltZSB3aGVuIGNsaWNraW5nIG91dHNpZGVcIlxuXHQ+XG5cdFx0PFRvZ2dsZVxuXHRcdFx0c2xvdD1cImNvbnRyb2xcIlxuXHRcdFx0b25DaGFuZ2U9e2hhbmRsZVNlcXVlbnRpYWxEaXNtaXNzYWxPbkNsaWNrT3V0fVxuXHRcdFx0aXNFbmFibGVkPXskc2V0dGluZ3NTdG9yZS5wb3BvdmVyc0Nsb3NpbmcuY2xvc2VQb3BvdmVyc09uZUJ5T25lT25DbGlja091dH1cblx0XHQvPlxuXHQ8L1NldHRpbmdJdGVtPlxuXG5cdDxTZXR0aW5nSXRlbVxuXHRcdG5hbWU9XCJTZXF1ZW50aWFsIERpc21pc3NhbCAoRXNjKVwiXG5cdFx0ZGVzY3JpcHRpb249XCJDbG9zZSBmbG9hdGluZyB3aW5kb3dzIG9uZSBhdCBhIHRpbWUgd2hlbiBwcmVzc2luZyBFc2NhcGVcIlxuXHQ+XG5cdFx0PFRvZ2dsZVxuXHRcdFx0c2xvdD1cImNvbnRyb2xcIlxuXHRcdFx0b25DaGFuZ2U9e2hhbmRsZVNlcXVlbnRpYWxEaXNtaXNzYWxPbkVzY31cblx0XHRcdGlzRW5hYmxlZD17JHNldHRpbmdzU3RvcmUucG9wb3ZlcnNDbG9zaW5nLmNsb3NlUG9wb3ZlcnNPbmVCeU9uZU9uRXNjS2V5ZG93bn1cblx0XHQvPlxuXHQ8L1NldHRpbmdJdGVtPlxuey9pZn1cblxuPGgzPkludGVyYWN0aW9uIEJlaGF2aW9yPC9oMz5cbjxTZXR0aW5nSXRlbVxuXHRuYW1lPVwiUXVpY2sgQWNjZXNzXCJcblx0ZGVzY3JpcHRpb249XCJTaG93IGNhbGVuZGFyIHdoZW4gaG92ZXJpbmcgb3ZlciB0aGUgcmliYm9uIGljb24gZm9yIGZhc3RlciBuYXZpZ2F0aW9uXCJcbj5cblx0PFRvZ2dsZVxuXHRcdHNsb3Q9XCJjb250cm9sXCJcblx0XHRvbkNoYW5nZT17aGFuZGxlT3BlblBvcG92ZXJPblJpYmJvbkhvdmVyfVxuXHRcdGlzRW5hYmxlZD17JHNldHRpbmdzU3RvcmUub3BlblBvcG92ZXJPblJpYmJvbkhvdmVyfVxuXHQvPlxuPC9TZXR0aW5nSXRlbT5cblxuPFNldHRpbmdJdGVtXG5cdG5hbWU9XCJDcmVhdGlvbiBDb25maXJtYXRpb25cIlxuXHRkZXNjcmlwdGlvbj1cIlByb21wdCBiZWZvcmUgY3JlYXRpbmcgbmV3IHBlcmlvZGljIG5vdGVzIHRvIHByZXZlbnQgYWNjaWRlbnRhbCBlbnRyaWVzXCJcbj5cblx0PFRvZ2dsZVxuXHRcdHNsb3Q9XCJjb250cm9sXCJcblx0XHRvbkNoYW5nZT17aGFuZGxlU2hvdWxkQ29uZmlybUJlZm9yZUNyZWF0ZX1cblx0XHRpc0VuYWJsZWQ9eyRzZXR0aW5nc1N0b3JlLnNob3VsZENvbmZpcm1CZWZvcmVDcmVhdGV9XG5cdC8+XG48L1NldHRpbmdJdGVtPlxuXG48U2V0dGluZ0l0ZW1cblx0bmFtZT1cIkhvdmVyIFByZXZpZXdcIlxuXHRkZXNjcmlwdGlvbj1cIkluc3RhbnRseSBwcmV2aWV3IG5vdGVzIGJ5IGhvdmVyaW5nIG92ZXIgZGF0ZXMgKG5vIG1vZGlmaWVyIGtleSBuZWVkZWQpXCJcbj5cblx0PFRvZ2dsZVxuXHRcdHNsb3Q9XCJjb250cm9sXCJcblx0XHRvbkNoYW5nZT17aGFuZGxlQ29uZmlybUF1dG9Ib3ZlclByZXZpZXd9XG5cdFx0aXNFbmFibGVkPXskc2V0dGluZ3NTdG9yZS5hdXRvSG92ZXJQcmV2aWV3fVxuXHQvPlxuPC9TZXR0aW5nSXRlbT5cblxuPGgzPkxvY2FsaXphdGlvbjwvaDM+XG48U2V0dGluZ0l0ZW1cblx0bmFtZT1cIkNhbGVuZGFyIExhbmd1YWdlXCJcblx0ZGVzY3JpcHRpb249XCJTZXQgYSBzcGVjaWZpYyBsYW5ndWFnZSBmb3IgdGhlIGNhbGVuZGFyIGludGVyZmFjZVwiXG4+XG5cdDxEcm9wZG93blxuXHRcdHNsb3Q9XCJjb250cm9sXCJcblx0XHRvcHRpb25zPXtnZXRMYW5ndWFnZU9wdGlvbnMoKX1cblx0XHRvbkNoYW5nZT17aGFuZGxlU2V0TGFuZ3VhZ2V9XG5cdFx0dmFsdWU9eyRzZXR0aW5nc1N0b3JlLmxvY2FsZVNldHRpbmdzLmxvY2FsZU92ZXJyaWRlfVxuXHQvPlxuPC9TZXR0aW5nSXRlbT5cblxuPFNldHRpbmdJdGVtIG5hbWU9XCJXZWVrIFN0YXJ0cyBPblwiIGRlc2NyaXB0aW9uPVwiQ2hvb3NlIHdoaWNoIGRheSB5b3VyIHdlZWsgYmVnaW5zIHdpdGhcIj5cblx0PERyb3Bkb3duXG5cdFx0c2xvdD1cImNvbnRyb2xcIlxuXHRcdG9wdGlvbnM9e3dlZWtkYXlPcHRpb25zfVxuXHRcdG9uQ2hhbmdlPXtoYW5kbGVGaXJzdFdlZWtkYXlDaGFuZ2V9XG5cdFx0dmFsdWU9e2ZpcnN0V2Vla2RheX1cblx0Lz5cbjwvU2V0dGluZ0l0ZW0+XG5cbjxTZXR0aW5nSXRlbVxuXHRuYW1lPVwiUXVpY2sgTGFuZ3VhZ2UgU3dpdGNoaW5nXCJcblx0ZGVzY3JpcHRpb249XCJFbmFibGUgbGFuZ3VhZ2Ugc3dpdGNoaW5nIHRocm91Z2ggdGhlIGNvbW1hbmQgcGFsZXR0ZSAocmVxdWlyZXMgcmVzdGFydClcIlxuPlxuXHQ8VG9nZ2xlXG5cdFx0c2xvdD1cImNvbnRyb2xcIlxuXHRcdG9uQ2hhbmdlPXtoYW5kbGVBbGxvd0xvY2FsZXNTd2l0Y2hGcm9tQ29tbWFuZFBhbGV0dGV9XG5cdFx0aXNFbmFibGVkPXskc2V0dGluZ3NTdG9yZS5hbGxvd0xvY2FsZXNTd2l0Y2hGcm9tQ29tbWFuZFBhbGV0dGV9XG5cdC8+XG48L1NldHRpbmdJdGVtPlxuIiwgIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGltcG9ydCBUYWJzIGZyb20gJ0AvdWkvY29tcG9uZW50cy9UYWJzLnN2ZWx0ZSc7XG5cdGltcG9ydCB7IE5vdGVzLCBDYWxlbmRhciB9IGZyb20gJ0Avc2V0dGluZ3MvdWknO1xuXG5cdGNvbnN0IHRhYnMgPSBbJ2NhbGVuZGFyJywgJ25vdGVzJ10gYXMgY29uc3Q7XG5cdGxldCBzZWxlY3RlZFRhYjogKHR5cGVvZiB0YWJzKVtudW1iZXJdID0gJ25vdGVzJztcbjwvc2NyaXB0PlxuXG48VGFicyB0YWJzPXtbLi4udGFic119IGJpbmQ6c2VsZWN0ZWRUYWIgLz5cbjxkaXYgY2xhc3M9XCJtdC02XCI+XG5cdHsjaWYgc2VsZWN0ZWRUYWIgPT09ICdjYWxlbmRhcid9XG5cdFx0PENhbGVuZGFyIC8+XG5cdHs6ZWxzZSBpZiBzZWxlY3RlZFRhYiA9PT0gJ25vdGVzJ31cblx0XHQ8Tm90ZXMgLz5cblx0ey9pZn1cbjwvZGl2PlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIHV0aWxpdGllcztcblxuXHQ6Z2xvYmFsKC52ZXJ0aWNhbC10YWItY29udGVudCkge1xuXHRcdHNjcm9sbGJhci1ndXR0ZXI6IHN0YWJsZTtcblx0XHRwYWRkaW5nLXJpZ2h0OiBjYWxjKDFyZW0gKyAxNnB4KTsgLyogMXJlbSAoMTZweCkgZm9yIGJhc2UgcGFkZGluZyArIDE2cHggZm9yIHNjcm9sbGJhciAqL1xuXHR9XG48L3N0eWxlPlxuIiwgImltcG9ydCBQZXJpb2RpY05vdGVzQ2FsZW5kYXJQbHVnaW4gZnJvbSBcIkAvbWFpblwiO1xuaW1wb3J0IFNldHRpbmdzIGZyb20gXCJAL3NldHRpbmdzL3VpL0luZGV4LnN2ZWx0ZVwiO1xuaW1wb3J0IHsgc2V0dXBMb2NhbGUgfSBmcm9tIFwiQC9zdG9yZXNcIjtcbmltcG9ydCB7IEFwcCwgUGx1Z2luU2V0dGluZ1RhYiB9IGZyb20gJ29ic2lkaWFuJztcbmltcG9ydCB7IFN2ZWx0ZUNvbXBvbmVudCB9IGZyb20gXCJzdmVsdGVcIjtcblxuZXhwb3J0IGNsYXNzIFNldHRpbmdzVGFiIGV4dGVuZHMgUGx1Z2luU2V0dGluZ1RhYiB7XG4gICAgcHVibGljIHBsdWdpbjogUGVyaW9kaWNOb3Rlc0NhbGVuZGFyUGx1Z2luO1xuICAgIHByaXZhdGUgdmlldzogU3ZlbHRlQ29tcG9uZW50IHwgbnVsbCA9IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcihhcHA6IEFwcCwgcGx1Z2luOiBQZXJpb2RpY05vdGVzQ2FsZW5kYXJQbHVnaW4pIHtcbiAgICAgICAgc3VwZXIoYXBwLCBwbHVnaW4pO1xuICAgICAgICB0aGlzLnBsdWdpbiA9IHBsdWdpbjtcblxuICAgICAgICBzZXR1cExvY2FsZSgpO1xuICAgIH1cblxuICAgIGRpc3BsYXkoKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyRWwuZW1wdHkoKTtcblxuICAgICAgICB0aGlzLnZpZXcgPSBuZXcgU2V0dGluZ3Moe1xuICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLmNvbnRhaW5lckVsXG4gICAgICAgIH0pXG4gICAgfVxuICAgIGhpZGUoKSB7XG4gICAgICAgIHN1cGVyLmhpZGUoKVxuICAgICAgICB0aGlzLnZpZXc/LiRkZXN0cm95KClcbiAgICB9XG59XG4iLCAiaW1wb3J0IHsgTW9kYWwgfSBmcm9tICdvYnNpZGlhbic7XG5pbXBvcnQgTmxkYXRlcGlja2VyQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudHMvTmxkYXRlcGlja2VyLnN2ZWx0ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5sZGF0ZVBpY2tlck1vZGFsIGV4dGVuZHMgTW9kYWwge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcih3aW5kb3cuYXBwKTtcblxuICAgICAgICBjb25zdCB7IGNvbnRlbnRFbCB9ID0gdGhpcztcblxuICAgICAgICAvLyBDcmVhdGUgYSBkaXYgdG8gbW91bnQgdGhlIFN2ZWx0ZSBjb21wb25lbnRcbiAgICAgICAgY29uc3Qgc3ZlbHRlQ29udGFpbmVyID0gY29udGVudEVsLmNyZWF0ZURpdigpO1xuXG4gICAgICAgIC8vIEluc3RhbnRpYXRlIHRoZSBTdmVsdGUgY29tcG9uZW50XG4gICAgICAgIG5ldyBObGRhdGVwaWNrZXJDb21wb25lbnQoe1xuICAgICAgICAgICAgdGFyZ2V0OiBzdmVsdGVDb250YWluZXIsXG4gICAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgICAgIG1vZGFsQ2xhc3M6IHRoaXMsXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5sZGF0ZVBpY2tlckRpYWxvZygpIHtcbiAgICBuZXcgTmxkYXRlUGlja2VyTW9kYWwoKS5vcGVuKCk7XG59XG4iLCAiPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0aW1wb3J0IHsgZ2V0IH0gZnJvbSAnc3ZlbHRlL3N0b3JlJztcblxuXHRpbXBvcnQgeyBzZXR0aW5nc1N0b3JlIH0gZnJvbSAnQC9zZXR0aW5ncyc7XG5cdGltcG9ydCB7IGNyZWF0ZU9yT3Blbk5vdGUsIHR5cGUgSUdyYW51bGFyaXR5IH0gZnJvbSAnQC9pbyc7XG5cdGltcG9ydCB0eXBlIHsgTW9tZW50IH0gZnJvbSAnbW9tZW50Jztcblx0aW1wb3J0IHsgZGVib3VuY2UgfSBmcm9tICdvYnNpZGlhbic7XG5cdGltcG9ydCB7IGdyYW51bGFyaXRpZXMgfSBmcm9tICdAL2NvbnN0YW50cyc7XG5cdGltcG9ydCB7IGdldFBlcmlvZGljaXR5RnJvbUdyYW51bGFyaXR5IH0gZnJvbSAnQC9pby9wYXJzZSc7XG5cdGltcG9ydCB7IGNhcGl0YWxpemUgfSBmcm9tICdAL3V0aWxzJztcblx0aW1wb3J0IHR5cGUgTmxkYXRlUGlja2VyTW9kYWwgZnJvbSAnLi4vbW9kYWxzL25sZGF0ZS1waWNrZXInO1xuXHRpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJztcblx0aW1wb3J0IHsgZ2V0Tm90ZVNldHRpbmdzIH0gZnJvbSAnQC9pby9zZXR0aW5ncyc7XG5cblx0ZXhwb3J0IGxldCBtb2RhbENsYXNzOiBObGRhdGVQaWNrZXJNb2RhbDtcblxuXHRpbnRlcmZhY2UgTmxkUGx1Z2luIHtcblx0XHRwYXJzZURhdGU6IChkYXRlU3RyaW5nOiBzdHJpbmcpID0+IE5sZFJlc3VsdDtcblx0fVxuXHRpbnRlcmZhY2UgTmxkUmVzdWx0IHtcblx0XHRmb3JtYXR0ZWRTdHJpbmc6IHN0cmluZztcblx0XHRkYXRlOiBEYXRlO1xuXHRcdG1vbWVudDogTW9tZW50O1xuXHR9XG5cdGNvbnN0IG5sZGF0ZXNQbHVnaW46IE5sZFBsdWdpbiA9ICg8YW55PndpbmRvdy5hcHApLnBsdWdpbnMuZ2V0UGx1Z2luKCdubGRhdGVzLW9ic2lkaWFuJyk7XG5cblx0Y29uc3Qgc2V0dGluZ3MgPSBnZXQoc2V0dGluZ3NTdG9yZSk7XG5cdGxldCBncmFudWxhcml0eTogSUdyYW51bGFyaXR5ID0gc2V0dGluZ3MuY3JyTmxkTW9kYWxHcmFudWxhcml0eTtcblx0bGV0IGRhdGVJbnB1dCA9ICcnO1xuXHRsZXQgcGFyc2VkRGF0ZTogTW9tZW50IHwgbnVsbDtcblxuXHQkOiBmb3JtYXQgPSBnZXROb3RlU2V0dGluZ3MoKVtncmFudWxhcml0eV0uZm9ybWF0O1xuXHQkOiBkYXRlSW5wdXQsIGZvcm1hdCwgZGVib3VuY2UoZ2V0RGF0ZVN0ciwgNTApKCk7XG5cblx0bGV0IGZvcm1hdHRlZERhdGU6IHN0cmluZyA9IHdpbmRvd1xuXHRcdC5tb21lbnQoKVxuXHRcdC5mb3JtYXQoZm9ybWF0IHx8IGdldE5vdGVTZXR0aW5ncygpW2dyYW51bGFyaXR5XS5mb3JtYXQpO1xuXG5cdGNvbnN0IGdldERhdGVTdHIgPSAoKSA9PiB7XG5cdFx0bGV0IGNsZWFuRGF0ZUlucHV0ID0gZGF0ZUlucHV0O1xuXG5cdFx0aWYgKGRhdGVJbnB1dC5lbmRzV2l0aCgnfCcpKSB7XG5cdFx0XHRjbGVhbkRhdGVJbnB1dCA9IGRhdGVJbnB1dC5zbGljZSgwLCAtMSk7XG5cdFx0fVxuXG5cdFx0Zm9ybWF0dGVkRGF0ZSA9ICdMb2FkaW5nLi4uJztcblx0XHRjb25zdCBubFBhcnNlZERhdGUgPSBubGRhdGVzUGx1Z2luLnBhcnNlRGF0ZShjbGVhbkRhdGVJbnB1dCB8fCAndG9kYXknKTtcblxuXHRcdGlmIChubFBhcnNlZERhdGUubW9tZW50LmlzVmFsaWQoKSkge1xuXHRcdFx0cGFyc2VkRGF0ZSA9IG5sUGFyc2VkRGF0ZS5tb21lbnQ7XG5cdFx0XHRmb3JtYXR0ZWREYXRlID0gbmxQYXJzZWREYXRlLm1vbWVudC5mb3JtYXQoZm9ybWF0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cGFyc2VkRGF0ZSA9IG51bGw7XG5cdFx0XHRmb3JtYXR0ZWREYXRlID0gJ0ludmFsaWQgZGF0ZSc7XG5cdFx0fVxuXHR9O1xuXG5cdC8vIGV2ZW50IGhhbmRsZXJzXG5cdGNvbnN0IGVudGVyS2V5Q2IgPSAoZXY6IEtleWJvYXJkRXZlbnQpID0+IHtcblx0XHRjb25zdCB0YXJnZXQgPSBldi50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG5cblx0XHRpZiAoZXYua2V5ID09PSAnRW50ZXInICYmIHRhcmdldC5jbGFzc05hbWUgIT09ICdkcm9wZG93bicpIHtcblx0XHRcdGhhbmRsZUFjY2VwdCgpO1xuXHRcdH1cblxuXHRcdGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdtb2RhbCcpLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBlbnRlcktleUNiKTtcblx0XHR9XG5cdH07XG5cblx0Y29uc3QgaGFuZGxlQ2FuY2VsID0gYXN5bmMgKCkgPT4ge1xuXHRcdG1vZGFsQ2xhc3MuY2xvc2UoKTtcblxuXHRcdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZW50ZXJLZXlDYik7XG5cdH07XG5cblx0Y29uc3QgaGFuZGxlQWNjZXB0ID0gYXN5bmMgKCkgPT4ge1xuXHRcdGlmIChwYXJzZWREYXRlKSB7XG5cdFx0XHRtb2RhbENsYXNzLmNsb3NlKCk7XG5cblx0XHRcdGNvbnN0IHsgd29ya3NwYWNlIH0gPSB3aW5kb3cuYXBwO1xuXHRcdFx0Y29uc3QgbGVhZiA9IHdvcmtzcGFjZS5nZXRMZWFmKGZhbHNlKTtcblxuXHRcdFx0Y3JlYXRlT3JPcGVuTm90ZSh7XG5cdFx0XHRcdGxlYWYsXG5cdFx0XHRcdGRhdGU6IHBhcnNlZERhdGUsXG5cdFx0XHRcdGdyYW51bGFyaXR5LFxuXHRcdFx0XHRjb25maXJtQmVmb3JlQ3JlYXRlT3ZlcnJpZGU6IGZhbHNlXG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBlbnRlcktleUNiKTtcblx0fTtcblx0Y29uc3QgaGFuZGxlT25DaGFuZ2UgPSAoXG5cdFx0ZXY6IEV2ZW50ICYge1xuXHRcdFx0Y3VycmVudFRhcmdldDogRXZlbnRUYXJnZXQgJiBIVE1MU2VsZWN0RWxlbWVudDtcblx0XHR9XG5cdCkgPT4ge1xuXHRcdHNldHRpbmdzU3RvcmUudXBkYXRlKChzZXR0aW5ncykgPT4gKHtcblx0XHRcdC4uLnNldHRpbmdzLFxuXHRcdFx0Y3JyTmxkTW9kYWxHcmFudWxhcml0eTogZXYuY3VycmVudFRhcmdldC52YWx1ZSBhcyBJR3JhbnVsYXJpdHlcblx0XHR9KSk7XG5cdH07XG5cblx0b25Nb3VudCgoKSA9PiB7XG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBlbnRlcktleUNiKTtcblx0fSk7XG48L3NjcmlwdD5cblxuPGRpdiBjbGFzcz1cInB0LTRcIj5cblx0PGRpdiBjbGFzcz1cInNldHRpbmctaXRlbSBib3JkZXItMFwiPlxuXHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0taW5mb1wiPlxuXHRcdFx0PGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1uYW1lXCI+RGF0ZTwvZGl2PlxuXHRcdFx0PGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1kZXNjcmlwdGlvblwiPntmb3JtYXR0ZWREYXRlfTwvZGl2PlxuXHRcdDwvZGl2PlxuXHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tY29udHJvbFwiPlxuXHRcdFx0PGlucHV0IGJpbmQ6dmFsdWU9e2RhdGVJbnB1dH0gdHlwZT1cInRleHRcIiBzcGVsbGNoZWNrPVwiZmFsc2VcIiBwbGFjZWhvbGRlcj1cIlRvZGF5XCIgLz5cblx0XHQ8L2Rpdj5cblx0PC9kaXY+XG5cdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW1cIj5cblx0XHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWluZm9cIj5cblx0XHRcdDxkaXYgY2xhc3M9XCJzZXR0aW5nLWl0ZW0tbmFtZVwiPkRhdGUgRm9ybWF0PC9kaXY+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLWRlc2NyaXB0aW9uXCI+TW9tZW50IGZvcm1hdCB0byBiZSB1c2VkPC9kaXY+XG5cdFx0PC9kaXY+XG5cdFx0PGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1jb250cm9sXCI+XG5cdFx0XHQ8aW5wdXQgYmluZDp2YWx1ZT17Zm9ybWF0fSB0eXBlPVwidGV4dFwiIHNwZWxsY2hlY2s9XCJmYWxzZVwiIHBsYWNlaG9sZGVyPVwiWVlZWS1NTS1ERCBISDptbVwiIC8+XG5cdFx0PC9kaXY+XG5cdDwvZGl2PlxuXHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtXCI+XG5cdFx0PGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1pbmZvXCI+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwic2V0dGluZy1pdGVtLW5hbWVcIj5QZXJpb2RpY2l0eTwvZGl2PlxuXHRcdFx0PGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1kZXNjcmlwdGlvblwiPlR5cGUgb2YgcGVyaW9kaWMgbm90ZSB0byBiZSBjcmVhdGVkPC9kaXY+XG5cdFx0PC9kaXY+XG5cdFx0PGRpdiBjbGFzcz1cInNldHRpbmctaXRlbS1jb250cm9sXCI+XG5cdFx0XHQ8c2VsZWN0IGJpbmQ6dmFsdWU9e2dyYW51bGFyaXR5fSBjbGFzcz1cImRyb3Bkb3duXCIgb246Y2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0+XG5cdFx0XHRcdHsjZWFjaCBncmFudWxhcml0aWVzIGFzIGdyYW51bGFyaXR5fVxuXHRcdFx0XHRcdDxvcHRpb24gdmFsdWU9e2dyYW51bGFyaXR5fT5cblx0XHRcdFx0XHRcdHtjYXBpdGFsaXplKGdldFBlcmlvZGljaXR5RnJvbUdyYW51bGFyaXR5KGdyYW51bGFyaXR5KSl9XG5cdFx0XHRcdFx0PC9vcHRpb24+XG5cdFx0XHRcdHsvZWFjaH1cblx0XHRcdDwvc2VsZWN0PlxuXHRcdDwvZGl2PlxuXHQ8L2Rpdj5cblx0PGRpdiBjbGFzcz1cIm1vZGFsLWJ1dHRvbi1jb250YWluZXIgbXQtM1wiPlxuXHRcdDxidXR0b24gY2xhc3M9XCJjdXJzb3ItcG9pbnRlclwiIG9uOmNsaWNrPXtoYW5kbGVDYW5jZWx9Pk5ldmVyIG1pbmQ8L2J1dHRvbj5cblx0XHQ8YnV0dG9uXG5cdFx0XHRjbGFzcz17YG1vZC1jdGEgJHtwYXJzZWREYXRlID8gJ2N1cnNvci1wb2ludGVyJyA6ICdjdXJzb3Itbm90LWFsbG93ZWQgb3BhY2l0eS01MCd9YH1cblx0XHRcdGFyaWEtZGlzYWJsZWQ9eyFwYXJzZWREYXRlfVxuXHRcdFx0ZGlzYWJsZWQ9eyFwYXJzZWREYXRlfVxuXHRcdFx0b246Y2xpY2s9e2hhbmRsZUFjY2VwdH0+T3BlbjwvYnV0dG9uXG5cdFx0PlxuXHQ8L2Rpdj5cbjwvZGl2PlxuXG48c3R5bGUgbGFuZz1cInBvc3Rjc3NcIj5cblx0QHRhaWx3aW5kIGNvbXBvbmVudHM7XG5cdEB0YWlsd2luZCB1dGlsaXRpZXM7XG48L3N0eWxlPlxuIiwgImltcG9ydCB7XG4gICAgRmlsZVZpZXcsXG4gICAgSXRlbVZpZXcsXG4gICAgVEFic3RyYWN0RmlsZSxcbiAgICBURmlsZSxcbiAgICBXb3Jrc3BhY2VMZWFmLFxuICAgIHR5cGUgQ2FjaGVkTWV0YWRhdGEsXG4gICAgdHlwZSBUYWdDYWNoZVxufSBmcm9tICdvYnNpZGlhbic7XG5cbmltcG9ydCB0eXBlIHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcbmltcG9ydCB7IGdldCB9IGZyb20gJ3N2ZWx0ZS9zdG9yZSc7XG5pbXBvcnQgVmlldyBmcm9tICcuL1ZpZXcuc3ZlbHRlJztcbmltcG9ydCB7IFZJRVdfVFlQRSB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGJhc2VuYW1lLCBnZXROb3RlRGF0ZVVJRCwgc3RvcmVBbGxWYXVsdFBlcmlvZGljTm90ZXMgfSBmcm9tICcuL2lvJztcbmltcG9ydCB7IGlzVmFsaWRQZXJpb2RpY05vdGUgfSBmcm9tICcuL2lvL3ZhbGlkYXRpb24nO1xuaW1wb3J0IHR5cGUgUGVyaW9kaWNOb3Rlc0NhbGVuZGFyUGx1Z2luIGZyb20gJy4vbWFpbic7XG5pbXBvcnQgeyBhY3RpdmVGaWxlSWRTdG9yZSwgbm90ZXNTdG9yZXMsIHRoZW1lU3RvcmUgfSBmcm9tICcuL3N0b3Jlcyc7XG5pbXBvcnQgeyBpc0NvbnRyb2xQcmVzc2VkIH0gZnJvbSAnLi91aS91dGlscyc7XG5cbmV4cG9ydCBjbGFzcyBDYWxlbmRhclZpZXcgZXh0ZW5kcyBJdGVtVmlldyB7XG4gICAgcHJpdmF0ZSB2aWV3OiBWaWV3O1xuICAgIHByaXZhdGUgdHJpZ2dlckxpbmtIb3ZlcjogKCkgPT4gdm9pZDtcbiAgICBwbHVnaW46IFBlcmlvZGljTm90ZXNDYWxlbmRhclBsdWdpbjtcblxuICAgIGNvbnN0cnVjdG9yKGxlYWY6IFdvcmtzcGFjZUxlYWYsIHBsdWdpbjogUGVyaW9kaWNOb3Rlc0NhbGVuZGFyUGx1Z2luKSB7XG4gICAgICAgIHN1cGVyKGxlYWYpO1xuICAgICAgICB0aGlzLnBsdWdpbiA9IHBsdWdpbjtcblxuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnQoXG4gICAgICAgICAgICB0aGlzLmFwcC53b3Jrc3BhY2Uub24oJ2Nzcy1jaGFuZ2UnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY3JyVGhlbWUgPSB0aGlzLnBsdWdpbi5nZXRUaGVtZSgpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgdGhlbWVTdG9yZS5zZXQoKGNyclRoZW1lID09PSAnbW9vbnN0b25lJyB8fCBjcnJUaGVtZSA9PT0gXCJsaWdodFwiKSA/ICdsaWdodCcgOiAnZGFyaycpXG4gICAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICAgIHRoaXMucmVnaXN0ZXJFdmVudChcbiAgICAgICAgICAgIHRoaXMuYXBwLnZhdWx0Lm9uKCdjcmVhdGUnLCAoZmlsZTogVEFic3RyYWN0RmlsZSkgPT4gdGhpcy5vbkZpbGVDcmVhdGVkKGZpbGUgYXMgVEZpbGUpKVxuICAgICAgICApO1xuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnQoXG4gICAgICAgICAgICB0aGlzLmFwcC52YXVsdC5vbignZGVsZXRlJywgKGZpbGU6IFRBYnN0cmFjdEZpbGUpID0+IHRoaXMub25GaWxlRGVsZXRlZChmaWxlIGFzIFRGaWxlKSlcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KFxuICAgICAgICAgICAgdGhpcy5hcHAudmF1bHQub24oJ3JlbmFtZScsIChmaWxlOiBUQWJzdHJhY3RGaWxlLCBvbGRQYXRoOiBzdHJpbmcpID0+XG4gICAgICAgICAgICAgICAgdGhpcy5vbkZpbGVSZW5hbWVkKGZpbGUgYXMgVEZpbGUsIG9sZFBhdGgpXG4gICAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgICAgIC8vIHRoaXMucmVnaXN0ZXJFdmVudChcbiAgICAgICAgLy8gXHR0aGlzLmFwcC52YXVsdC5vbignbW9kaWZ5JywgKGZpbGU6IFRBYnN0cmFjdEZpbGUpID0+IHRoaXMub25GaWxlTW9kaWZpZWQoZmlsZSBhcyBURmlsZSkpXG4gICAgICAgIC8vICk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJFdmVudCh0aGlzLmFwcC5tZXRhZGF0YUNhY2hlLm9uKCdjaGFuZ2VkJywgdGhpcy5vbkZpbGVNb2RpZmllZCkpO1xuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnQodGhpcy5hcHAud29ya3NwYWNlLm9uKCdmaWxlLW9wZW4nLCAoKSA9PiB0aGlzLm9uRmlsZU9wZW4oKSkpO1xuICAgIH1cblxuICAgIGdldFZpZXdUeXBlKCkge1xuICAgICAgICByZXR1cm4gVklFV19UWVBFO1xuICAgIH1cblxuICAgIGdldERpc3BsYXlUZXh0KCkge1xuICAgICAgICByZXR1cm4gJ0V4YW1wbGUgdmlldyc7XG4gICAgfVxuXG4gICAgYXN5bmMgb25PcGVuKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnT24gb3BlbiB2aWV3XHVEODNEXHVEQzUwJyk7XG5cbiAgICAgICAgdGhpcy52aWV3ID0gbmV3IFZpZXcoe1xuICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLmNvbnRlbnRFbFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBpbmRleCBleGlzdGluZyBub3Rlc1xuICAgICAgICBpZiAodGhpcy5hcHAud29ya3NwYWNlLmxheW91dFJlYWR5ICYmIHRoaXMudmlldykge1xuICAgICAgICAgICAgc3RvcmVBbGxWYXVsdFBlcmlvZGljTm90ZXMoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25DbG9zZSgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ09uIGNsb3NlIHZpZXdcdTI3NEMnKTtcbiAgICAgICAgdGhpcy52aWV3Py4kZGVzdHJveSgpO1xuXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uRmlsZUNyZWF0ZWQoZmlsZTogVEZpbGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1x1MjcwNSBPTiBmaWxlIGNyZXRlZCBcdTI3MDUnLCBmaWxlKTtcblxuICAgICAgICBpZiAodGhpcy5hcHAud29ya3NwYWNlLmxheW91dFJlYWR5ICYmIHRoaXMudmlldykge1xuICAgICAgICAgICAgY29uc3QgeyBpc1ZhbGlkLCBncmFudWxhcml0eSwgZGF0ZSB9ID0gaXNWYWxpZFBlcmlvZGljTm90ZShmaWxlLmJhc2VuYW1lKTtcblxuICAgICAgICAgICAgaWYgKGlzVmFsaWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBub3RlRGF0ZVVJRCA9IGdldE5vdGVEYXRlVUlEKHsgZGF0ZSwgZ3JhbnVsYXJpdHkgfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZmlsZUV4aXN0cyA9IGdldChub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0pW25vdGVEYXRlVUlEXTtcblxuICAgICAgICAgICAgICAgIGlmIChmaWxlRXhpc3RzKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICBub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0udXBkYXRlKCh2YWx1ZXMpID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIC4uLnZhbHVlcyxcbiAgICAgICAgICAgICAgICAgICAgW25vdGVEYXRlVUlEXToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0aWNrZXI6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgJHtub3RlRGF0ZVVJRH0gc3VjY2VzZnVsbHkgY3JlYXRlZGAsICduZXcgc3RvcmU6ICcsIGdldChub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgYXN5bmMgb25GaWxlRGVsZXRlZChmaWxlOiBURmlsZSk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBjb25zb2xlLmxvZygnXHUyNzRDIE9OIGZpbGUgZGVsZXRlZCBcdTI3NEMnKTtcblxuICAgICAgICBjb25zdCB7IGlzVmFsaWQsIGdyYW51bGFyaXR5LCBkYXRlIH0gPSBpc1ZhbGlkUGVyaW9kaWNOb3RlKGZpbGUuYmFzZW5hbWUpO1xuXG4gICAgICAgIGlmIChpc1ZhbGlkKSB7XG4gICAgICAgICAgICBjb25zdCBub3RlRGF0ZVVJRCA9IGdldE5vdGVEYXRlVUlEKHsgZGF0ZSwgZ3JhbnVsYXJpdHkgfSk7XG4gICAgICAgICAgICBjb25zdCBmaWxlRXhpc3RzID0gZ2V0KG5vdGVzU3RvcmVzW2dyYW51bGFyaXR5XSlbbm90ZURhdGVVSURdO1xuICAgICAgICAgICAgY29uc3QgbmV3U3RvcmUgPSB7XG4gICAgICAgICAgICAgICAgLi4uZ2V0KG5vdGVzU3RvcmVzW2dyYW51bGFyaXR5XSlcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmIChmaWxlRXhpc3RzKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIG5ld1N0b3JlW25vdGVEYXRlVUlEXTtcbiAgICAgICAgICAgICAgICBub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0udXBkYXRlKCgpID0+IG5ld1N0b3JlKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgJHtub3RlRGF0ZVVJRH0gc3VjY2VzZnVsbHkgZGVsZXRlZGAsICduZXcgc3RvcmU6ICcsIGdldChub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0pKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnVwZGF0ZUFjdGl2ZUZpbGUoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGFzeW5jIG9uRmlsZVJlbmFtZWQocmVuYW1lZEZpbGU6IFRGaWxlLCBvbGRQYXRoOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgY29uc3QgeyBpc1ZhbGlkOiBvbGRJc1ZhbGlkLCBncmFudWxhcml0eTogb2xkR3JhbnVsYXJpdHksIGRhdGU6IG9sZERhdGUgfSA9IGlzVmFsaWRQZXJpb2RpY05vdGUoYmFzZW5hbWUob2xkUGF0aCkpO1xuICAgICAgICBjb25zdCB7IGlzVmFsaWQ6IG5ld0lzVmFsaWQsIGdyYW51bGFyaXR5OiBuZXdHcmFudWxhcml0eSwgZGF0ZTogbmV3RGF0ZSB9ID0gaXNWYWxpZFBlcmlvZGljTm90ZShyZW5hbWVkRmlsZS5iYXNlbmFtZSk7XG5cbiAgICAgICAgLy8gT0xEIGZpbGVuYW1lIElOVkFMSUQgXHUyNzRDICYmIE5FVyBmaWxlbmFtZSBWQUxJRCBcdTI3MDUgPT4gdXBkYXRlIHN0b3JlIHRvIGFkZCBORVcgZmlsZSB3aXRoIG51bGwgZW1vamlcbiAgICAgICAgaWYgKCFvbGRJc1ZhbGlkICYmIG5ld0lzVmFsaWQpIHtcbiAgICAgICAgICAgIGNvbnN0IG5ld05vdGVzU3RvcmUgPSBub3Rlc1N0b3Jlc1tuZXdHcmFudWxhcml0eV07XG4gICAgICAgICAgICBjb25zdCBuZXdOb3RlRGF0ZVVJRCA9IGdldE5vdGVEYXRlVUlEKHtcbiAgICAgICAgICAgICAgICBkYXRlOiBuZXdEYXRlIGFzIHVua25vd24gYXMgTW9tZW50LFxuICAgICAgICAgICAgICAgIGdyYW51bGFyaXR5OiBuZXdHcmFudWxhcml0eVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBuZXdOb3Rlc1N0b3JlLnVwZGF0ZSgodmFsdWVzKSA9PiAoe1xuICAgICAgICAgICAgICAgIC4uLnZhbHVlcyxcbiAgICAgICAgICAgICAgICBbbmV3Tm90ZURhdGVVSURdOiB7XG4gICAgICAgICAgICAgICAgICAgIGZpbGU6IHJlbmFtZWRGaWxlLFxuICAgICAgICAgICAgICAgICAgICBzdGlja2VyOiBudWxsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gT0xEIGZpbGVuYW1lIFZBTElEIFx1MjcwNSAmJiBORVcgZmlsZW5hbWUgSU5WQUxJRCBcdTI3NEMgPT4gdXBkYXRlIHN0b3JlIHRvIHJlbW92ZSBPTERcbiAgICAgICAgaWYgKG9sZElzVmFsaWQgJiYgIW5ld0lzVmFsaWQpIHtcbiAgICAgICAgICAgIGNvbnN0IG9sZE5vdGVzU3RvcmUgPSBub3Rlc1N0b3Jlc1tvbGRHcmFudWxhcml0eV07XG4gICAgICAgICAgICBjb25zdCBvbGROb3RlRGF0ZVVJRCA9IGdldE5vdGVEYXRlVUlEKHtcbiAgICAgICAgICAgICAgICBkYXRlOiBvbGREYXRlIGFzIHVua25vd24gYXMgTW9tZW50LFxuICAgICAgICAgICAgICAgIGdyYW51bGFyaXR5OiBvbGRHcmFudWxhcml0eVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnN0IG1vZE9sZFN0b3JlID0ge1xuICAgICAgICAgICAgICAgIC4uLmdldChvbGROb3Rlc1N0b3JlKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGRlbGV0ZSBtb2RPbGRTdG9yZVtvbGROb3RlRGF0ZVVJRF07XG5cbiAgICAgICAgICAgIG9sZE5vdGVzU3RvcmUuc2V0KG1vZE9sZFN0b3JlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE9MRCBmaWxlbmFtZSBDQUxJRCBcdTI3MDUgJiYgTkVXIGZpbGVuYW1lIElOVkFMSUQgXHUyNzA1ID0+IHVwZGF0ZSBzdG9yZSB0byByZW1vdmUgT0xEIGFuZCBhZGQgTkVXIG9uZSB3aXRoIE9MRCBlbW9qaVxuICAgICAgICBpZiAob2xkSXNWYWxpZCAmJiBuZXdJc1ZhbGlkKSB7XG4gICAgICAgICAgICBjb25zdCBuZXdOb3Rlc1N0b3JlID0gbm90ZXNTdG9yZXNbbmV3R3JhbnVsYXJpdHldO1xuICAgICAgICAgICAgY29uc3QgbmV3Tm90ZURhdGVVSUQgPSBnZXROb3RlRGF0ZVVJRCh7XG4gICAgICAgICAgICAgICAgZGF0ZTogbmV3RGF0ZSBhcyB1bmtub3duIGFzIE1vbWVudCxcbiAgICAgICAgICAgICAgICBncmFudWxhcml0eTogbmV3R3JhbnVsYXJpdHlcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb25zdCBvbGROb3Rlc1N0b3JlID0gbm90ZXNTdG9yZXNbb2xkR3JhbnVsYXJpdHldO1xuICAgICAgICAgICAgY29uc3Qgb2xkTm90ZURhdGVVSUQgPSBnZXROb3RlRGF0ZVVJRCh7XG4gICAgICAgICAgICAgICAgZGF0ZTogb2xkRGF0ZSBhcyB1bmtub3duIGFzIE1vbWVudCxcbiAgICAgICAgICAgICAgICBncmFudWxhcml0eTogbmV3R3JhbnVsYXJpdHlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3Qgb2xkRW1vamkgPSBnZXQob2xkTm90ZXNTdG9yZSlbb2xkTm90ZURhdGVVSURdLnN0aWNrZXI7XG5cbiAgICAgICAgICAgIC8vIHJlbW92ZSBPTEQgZmlsZVxuICAgICAgICAgICAgY29uc3QgbW9kT2xkU3RvcmUgPSB7XG4gICAgICAgICAgICAgICAgLi4uZ2V0KG9sZE5vdGVzU3RvcmUpXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZGVsZXRlIG1vZE9sZFN0b3JlW29sZE5vdGVEYXRlVUlEXTtcblxuICAgICAgICAgICAgLy8gYWRkIE5FVyBmaWxlIHRvIHN0b3JlIHdpdGggT0xEIGVtb2ppXG4gICAgICAgICAgICBuZXdOb3Rlc1N0b3JlLnVwZGF0ZSgodmFsdWVzKSA9PiAoe1xuICAgICAgICAgICAgICAgIC4uLnZhbHVlcyxcbiAgICAgICAgICAgICAgICBbbmV3Tm90ZURhdGVVSURdOiB7XG4gICAgICAgICAgICAgICAgICAgIGZpbGU6IHJlbmFtZWRGaWxlLFxuICAgICAgICAgICAgICAgICAgICBzdGlja2VyOiBvbGRFbW9qaVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnNvbGUubG9nKCdcdTI3MEZcdUZFMEZPbiBmaWxlIHJlbmFtZWQgXHUyNzBGXHVGRTBGID4gZmlsZTogJywgcmVuYW1lZEZpbGUsIG9sZFBhdGgpO1xuICAgICAgICBjb25zb2xlLmxvZygnbmV3IHN0b3JlOiAnLCBuZXdHcmFudWxhcml0eSAmJiBnZXQobm90ZXNTdG9yZXNbbmV3R3JhbnVsYXJpdHldKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhc3luYyBvbkZpbGVNb2RpZmllZChmaWxlOiBURmlsZSwgZGF0YTogc3RyaW5nLCBjYWNoZTogQ2FjaGVkTWV0YWRhdGEpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgY29uc3QgeyBpc1ZhbGlkLCBncmFudWxhcml0eSwgZGF0ZSB9ID0gaXNWYWxpZFBlcmlvZGljTm90ZShmaWxlLmJhc2VuYW1lKTtcblxuICAgICAgICBpZiAoaXNWYWxpZCAmJiBkYXRlICYmIGdyYW51bGFyaXR5KSB7XG4gICAgICAgICAgICBjb25zdCBub3RlRGF0ZVVJRCA9IGdldE5vdGVEYXRlVUlEKHsgZGF0ZSwgZ3JhbnVsYXJpdHkgfSk7XG4gICAgICAgICAgICBjb25zdCBvbGRFbW9qaSA9IGdldChub3Rlc1N0b3Jlc1tncmFudWxhcml0eV0pW25vdGVEYXRlVUlEXS5zdGlja2VyO1xuICAgICAgICAgICAgY29uc3QgbmV3RW1vamkgPVxuICAgICAgICAgICAgICAgIGNhY2hlLnRhZ3M/LmZpbmQoKHRhZ09iajogVGFnQ2FjaGUpID0+IC9cXHB7UkdJX0Vtb2ppfS92LnRlc3QodGFnT2JqLnRhZykpPy50YWcuc2xpY2UoMSkgfHwgbnVsbDtcblxuICAgICAgICAgICAgaWYgKG9sZEVtb2ppICE9PSBuZXdFbW9qaSkge1xuICAgICAgICAgICAgICAgIG5vdGVzU3RvcmVzW2dyYW51bGFyaXR5XS51cGRhdGUoKHZhbHVlcykgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgLi4udmFsdWVzLFxuICAgICAgICAgICAgICAgICAgICBbbm90ZURhdGVVSURdOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RpY2tlcjogbmV3RW1vamlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBvbkZpbGVPcGVuKCkge1xuICAgICAgICBpZiAodGhpcy5hcHAud29ya3NwYWNlLmxheW91dFJlYWR5KSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygndmlldy50cyA+IG9uRmlsZU9wZW4oKScpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVBY3RpdmVGaWxlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBvbkhvdmVyKHsgZGF0ZSwgdGFyZ2V0RWwsIGlzQ29udHJvbFByZXNzZWQsIGdyYW51bGFyaXR5IH06IFBhcmFtZXRlcnM8VE9uSG92ZXI+WzBdKTogdm9pZCB7XG4gICAgLy8gXHQvLyBjb25zb2xlLmxvZygndmlldy50cyA+IG9uSG92ZXIoKTogXHVEODNEXHVEQ0M4JylcbiAgICAvLyBcdC8vIHRoaXMua2V5ZG93bkZuICYmIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5rZXlkb3duRm4pO1xuXG4gICAgLy8gXHRjb25zdCB7IGZvcm1hdCB9ID0gZ2V0Tm90ZVNldHRpbmdzKGdyYW51bGFyaXR5KTtcbiAgICAvLyBcdGNvbnN0IG5vdGUgPSBnZXROb3RlQnlHcmFudWxhcml0eSh7IGRhdGUsIGdyYW51bGFyaXR5IH0pO1xuXG4gICAgLy8gXHR0aGlzLnRyaWdnZXJMaW5rSG92ZXIgPSAoKSA9PlxuICAgIC8vIFx0XHR0aGlzLmFwcC53b3Jrc3BhY2UudHJpZ2dlcignbGluay1ob3ZlcicsIHRoaXMsIHRhcmdldEVsLCBkYXRlLmZvcm1hdChmb3JtYXQpLCBub3RlPy5wYXRoKTtcblxuICAgIC8vIFx0aWYgKCFpc0NvbnRyb2xQcmVzc2VkICYmICF0aGlzLnNldHRpbmdzLmF1dG9Ib3ZlclByZXZpZXcpIHtcbiAgICAvLyBcdFx0Ly8gVE9ETzogYWRkIG1hcmtkb3duIHZpZXcgcG9wb3ZlciB3aGVuIGN0cmxLZXkgcHJlc3NlZCBhZnRlciBob3ZlclxuICAgIC8vIFx0XHQvLyB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMua2V5ZG93bkZuKTtcblxuICAgIC8vIFx0XHRyZXR1cm47XG4gICAgLy8gXHR9XG5cbiAgICAvLyBcdHRoaXMudHJpZ2dlckxpbmtIb3ZlcigpO1xuICAgIC8vIH1cblxuICAgIC8vIFV0aWxzXG5cbiAgICAvKipcbiAgICAgICAgKiBTZXQgbm90ZURhdGVVSUQgZnJvbSBjdXJyZW50IHZpZXcncyBmaWxlIGluIGFjdGl2ZUZpbGVJZFN0b3JlLlxuICAgICAgICAqL1xuICAgIHByaXZhdGUgdXBkYXRlQWN0aXZlRmlsZSgpOiB2b2lkIHtcbiAgICAgICAgLy8gY29uc3QgYWN0aXZlTGVhZk9HID0gdGhpcy5hcHAud29ya3NwYWNlLmFjdGl2ZUxlYWY7XG5cbiAgICAgICAgLy8gVE9ETzogbWF5IGNhdXNlIHVuZXhwZWN0ZWQgYmVoYXZpb3IuXG4gICAgICAgIGNvbnN0IGFjdGl2ZUxlYWYgPSB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0QWN0aXZlVmlld09mVHlwZShDYWxlbmRhclZpZXcpXG5cbiAgICAgICAgaWYgKGFjdGl2ZUxlYWY/LnZpZXcgJiYgYWN0aXZlTGVhZi52aWV3IGluc3RhbmNlb2YgRmlsZVZpZXcpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBhY3RpdmVMZWFmLnZpZXcuZmlsZTtcbiAgICAgICAgICAgIGlmICghZmlsZSkgcmV0dXJuO1xuXG4gICAgICAgICAgICBjb25zdCB7IGlzVmFsaWQsIGdyYW51bGFyaXR5LCBkYXRlIH0gPSBpc1ZhbGlkUGVyaW9kaWNOb3RlKGZpbGUuYmFzZW5hbWUpO1xuICAgICAgICAgICAgaWYgKGlzVmFsaWQgJiYgZGF0ZSAmJiBncmFudWxhcml0eSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5vdGVEYXRlVUlEID0gZ2V0Tm90ZURhdGVVSUQoeyBkYXRlLCBncmFudWxhcml0eSB9KVxuICAgICAgICAgICAgICAgIGFjdGl2ZUZpbGVJZFN0b3JlLnNldChub3RlRGF0ZVVJRCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zb2xlLmxvZygnXHVEODNFXHVERTlGXHVEODNEXHVEQ0M1IHZpZXcudHMgPiB1cGRhdGVBY3RpdmVGaWxlKCksIGFjdGl2ZUZpbGVJZFN0b3JlOiAnLCBnZXQoYWN0aXZlRmlsZUlkU3RvcmUpKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGtleWRvd25DYWxsYmFjayhldjogS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICBjb25zb2xlLmxvZygndmlldy50cyA+IGtleWRvd25DYWxsYmFjayA+IGlzQ29udHJvbFByZXNzZWQoKSA+IHRoaXM6ICcsIHRoaXMsIGlzQ29udHJvbFByZXNzZWQoZXYpKTtcbiAgICAgICAgaWYgKGlzQ29udHJvbFByZXNzZWQoZXYpKSB7XG4gICAgICAgICAgICB0aGlzLnRyaWdnZXJMaW5rSG92ZXI/LigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcHVibGljIHJldmVhbEFjdGl2ZU5vdGUoKTogdm9pZCB7XG4gICAgLy8gXHRjb25zdCB7IG1vbWVudCB9ID0gd2luZG93O1xuICAgIC8vIFx0Y29uc3QgeyBhY3RpdmVMZWFmIH0gPSB0aGlzLmFwcC53b3Jrc3BhY2U7XG5cbiAgICAvLyBcdGlmIChhY3RpdmVMZWFmLnZpZXcgaW5zdGFuY2VvZiBGaWxlVmlldykge1xuICAgIC8vIFx0XHQvLyBDaGVjayB0byBzZWUgaWYgdGhlIGFjdGl2ZSBub3RlIGlzIGEgZGFpbHktbm90ZVxuICAgIC8vIFx0XHRsZXQgZGF0ZSA9IGdldERhdGVGcm9tRmlsZShhY3RpdmVMZWFmLnZpZXcuZmlsZSwgJ2RheScpO1xuICAgIC8vIFx0XHRpZiAoZGF0ZSkge1xuICAgIC8vIFx0XHRcdHRoaXMuY2FsZW5kYXIuJHNldCh7IGRpc3BsYXllZERhdGU6IGRhdGUgfSk7XG4gICAgLy8gXHRcdFx0cmV0dXJuO1xuICAgIC8vIFx0XHR9XG5cbiAgICAvLyBcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIHRoZSBhY3RpdmUgbm90ZSBpcyBhIHdlZWtseS1ub3RlXG4gICAgLy8gXHRcdGNvbnN0IHsgZm9ybWF0IH0gPSBnZXRXZWVrbHlOb3RlU2V0dGluZ3MoKTtcbiAgICAvLyBcdFx0ZGF0ZSA9IG1vbWVudChhY3RpdmVMZWFmLnZpZXcuZmlsZS5iYXNlbmFtZSwgZm9ybWF0LCB0cnVlKTtcbiAgICAvLyBcdFx0aWYgKGRhdGUuaXNWYWxpZCgpKSB7XG4gICAgLy8gXHRcdFx0dGhpcy5jYWxlbmRhci4kc2V0KHsgZGlzcGxheWVkRGF0ZTogZGF0ZSB9KTtcbiAgICAvLyBcdFx0XHRyZXR1cm47XG4gICAgLy8gXHRcdH1cbiAgICAvLyBcdH1cbiAgICAvLyB9XG59XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQSwyQ0FBQUEsU0FBQTtBQU1DLEtBQUMsU0FBVUMsU0FBUSxTQUFTO0FBQ3pCLGFBQU8sWUFBWSxZQUFZLE9BQU9ELFlBQVcsY0FBY0EsUUFBTyxVQUFVLFFBQVEsSUFDeEYsT0FBTyxXQUFXLGNBQWMsT0FBTyxNQUFNLE9BQU8sT0FBTyxJQUMzREMsUUFBTyxTQUFTLFFBQVE7QUFBQSxJQUM1QixHQUFFLFNBQU8sV0FBWTtBQUFFO0FBRW5CLFVBQUk7QUFFSixlQUFTLFFBQVE7QUFDYixlQUFPLGFBQWEsTUFBTSxNQUFNLFNBQVM7QUFBQSxNQUM3QztBQUlBLGVBQVMsZ0JBQWdCLFVBQVU7QUFDL0IsdUJBQWU7QUFBQSxNQUNuQjtBQUVBLGVBQVMsUUFBUSxPQUFPO0FBQ3BCLGVBQ0ksaUJBQWlCLFNBQ2pCLE9BQU8sVUFBVSxTQUFTLEtBQUssS0FBSyxNQUFNO0FBQUEsTUFFbEQ7QUFFQSxlQUFTLFNBQVMsT0FBTztBQUdyQixlQUNJLFNBQVMsUUFDVCxPQUFPLFVBQVUsU0FBUyxLQUFLLEtBQUssTUFBTTtBQUFBLE1BRWxEO0FBRUEsZUFBUyxXQUFXLEdBQUcsR0FBRztBQUN0QixlQUFPLE9BQU8sVUFBVSxlQUFlLEtBQUssR0FBRyxDQUFDO0FBQUEsTUFDcEQ7QUFFQSxlQUFTLGNBQWMsS0FBSztBQUN4QixZQUFJLE9BQU8scUJBQXFCO0FBQzVCLGlCQUFPLE9BQU8sb0JBQW9CLEdBQUcsRUFBRSxXQUFXO0FBQUEsUUFDdEQsT0FBTztBQUNILGNBQUk7QUFDSixlQUFLLEtBQUssS0FBSztBQUNYLGdCQUFJLFdBQVcsS0FBSyxDQUFDLEdBQUc7QUFDcEIscUJBQU87QUFBQSxZQUNYO0FBQUEsVUFDSjtBQUNBLGlCQUFPO0FBQUEsUUFDWDtBQUFBLE1BQ0o7QUFFQSxlQUFTLFlBQVks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QUFjO0FBQUEsRUFDakMsRUFBRSxLQUFLLE1BQU0sTUFBTSxhQUFhO0FBQUEsRUFDaEMsRUFBRSxLQUFLLE1BQU0sTUFBTSxZQUFZO0FBQUEsRUFDL0IsRUFBRSxLQUFLLE1BQU0sTUFBTSxVQUFVO0FBQUEsRUFDN0IsRUFBRSxLQUFLLE1BQU0sTUFBTSxVQUFVO0FBQUEsRUFDN0IsRUFBRSxLQUFLLFNBQVMsTUFBTSx1QkFBdUI7QUFBQSxFQUM3QyxFQUFFLEtBQUssTUFBTSxNQUFNLFVBQVU7QUFBQSxFQUM3QixFQUFFLEtBQUssTUFBTSxNQUFNLFVBQVU7QUFBQSxFQUM3QixFQUFFLEtBQUssTUFBTSxNQUFNLFNBQVM7QUFBQSxFQUM1QixFQUFFLEtBQUssTUFBTSxNQUFNLFVBQVU7QUFBQSxFQUM3QixFQUFFLEtBQUssTUFBTSxNQUFNLFVBQVU7QUFBQSxFQUM3QixFQUFFLEtBQUssTUFBTSxNQUFNLFFBQVE7QUFBQSxFQUMzQixFQUFFLEtBQUssTUFBTSxNQUFNLFVBQVU7QUFBQSxFQUM3QixFQUFFLEtBQUssTUFBTSxNQUFNLFFBQVE7QUFBQSxFQUMzQixFQUFFLEtBQUssTUFBTSxNQUFNLFNBQVM7QUFBQSxFQUM1QixFQUFFLEtBQUssU0FBUyxNQUFNLG1CQUFtQjtBQUFBLEVBQ3pDLEVBQUUsS0FBSyxTQUFTLE1BQU0sdUJBQXVCO0FBQUEsRUFDN0MsRUFBRSxLQUFLLE1BQU0sTUFBTSxTQUFTO0FBQUEsRUFDNUIsRUFBRSxLQUFLLE1BQU0sTUFBTSxZQUFZO0FBQUEsRUFDL0IsRUFBRSxLQUFLLE1BQU0sTUFBTSxRQUFRO0FBQUEsRUFDM0IsRUFBRSxLQUFLLFNBQVMsTUFBTSxzQkFBc0I7QUFBQSxFQUM1QyxFQUFFLEtBQUssU0FBUyxNQUFNLG1CQUFtQjtBQUFBLEVBQ3pDLEVBQUUsS0FBSyxTQUFTLE1BQU0sMkJBQTJCO0FBQUEsRUFDakQsRUFBRSxLQUFLLFNBQVMsTUFBTSxvQkFBb0I7QUFBQSxFQUMxQyxFQUFFLEtBQUssU0FBUyxNQUFNLG1CQUFtQjtBQUFBLEVBQ3pDLEVBQUUs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VSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxpQkFBZ0IsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsY0FBYSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsV0FBVSxXQUFVLFdBQVUsTUFBSyxNQUFLLE1BQUssTUFBSyxNQUFLLGVBQWMsZ0JBQWUsTUFBSyxvQkFBbUIsMkJBQTBCLE1BQUsscUJBQW9CLG1CQUFtQixFQUFDLENBQUMsR0FBRSxRQUFTLEVBQUMsT0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLGtCQUFpQixVQUFXLENBQUMsT0FBTSxTQUFRLFdBQVUsV0FBVSxXQUFVLFFBQU8sUUFBTyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxRQUFPLFFBQU8sVUFBUyxLQUFJLEtBQUksS0FBSSxHQUFHLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLGlCQUFnQixXQUFZLENBQUMsSUFBSSxHQUFFLFVBQVcsQ0FBQyxTQUFRLFNBQVEsT0FBTSxNQUFLLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sK0JBQThCLFdBQVksQ0FBQyxNQUFLLE1BQUssS0FBSyxHQUFFLFVBQVcsQ0FBQyxVQUFTLFNBQVEsT0FBTSxRQUFPLE1BQUssTUFBSyxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sbUNBQWtDLFdBQVksQ0FBQyxNQUFLLE1BQUssTUFBSyxNQUFLLEtBQUssR0FBRSxVQUFXLENBQUMsU0FBUSxTQUFRLE9BQU0sU0FBUSxRQUFPLFNBQVEsUUFBTyxNQUFLLElBQUksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sa0NBQWlDLFVBQVcsQ0FBQyxRQUFPLFNBQVEsU0FBUSxPQUFNLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sMkJBQTBCLFdBQVksQ0FBQyxNQUFLLEtBQUssR0FBRSxVQUFXLENBQUMsWUFBVyxhQUFZLFNBQVEsT0FBTSxPQUFNLFFBQU8sUUFBTyxNQUFLLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sNEJBQTJCLFVBQVcsQ0FBQyxTQUFRLE9BQU0sU0FBUSxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSwrQkFBZ0MsRUFBQyxJQUFLLGlDQUFnQyxNQUFPLGlDQUFnQyxVQUFXLENBQUMsUUFBTyxPQUFNLFFBQU8sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTywwQkFBeUIsVUFBVyxDQUFDLE9BQU0sUUFBTyxTQUFRLGNBQWEsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHVCQUF3QixFQUFDLElBQUsseUJBQXdCLE1BQU8seUJBQXdCLFdBQVksQ0FBQyxNQUFLLE1BQUssS0FBSyxHQUFFLFVBQVcsQ0FBQyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsa0JBQW1CLEVBQUMsSUFBSyxvQkFBbUIsTUFBTyxvQkFBbUIsVUFBVyxDQUFDLFVBQVMsUUFBTyxXQUFVLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE9BQU0sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxnQkFBZSxXQUFZLENBQUMsTUFBSyxLQUFLLEdBQUUsVUFBVyxDQUFDLFFBQU8sU0FBUSxlQUFjLFVBQVMsTUFBSyxTQUFRLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sa0NBQWlDLFdBQVksQ0FBQyxJQUFJLEdBQUUsVUFBVyxDQUFDLFNBQVEsU0FBUSxTQUFRLFdBQVUsU0FBUSxlQUFjLE9BQU0sS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTywwQkFBeUIsVUFBVyxDQUFDLFlBQVcsU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsNEJBQTZCLEVBQUMsSUFBSyw4QkFBNkIsTUFBTyw0QkFBMkIsVUFBVyxDQUFDLEtBQUksUUFBTyxRQUFPLGFBQVksY0FBYSxlQUFjLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxnQ0FBK0IsVUFBVyxDQUFDLFNBQVEsUUFBTyxRQUFPLFFBQU8sYUFBWSxjQUFhLGVBQWMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxRQUFPLFVBQVMsWUFBVyxRQUFPLFFBQU8sUUFBTyxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8sdUJBQXNCLFdBQVksQ0FBQyxNQUFLLEtBQUssR0FBRSxVQUFXLENBQUMsV0FBVSxTQUFRLFFBQU8sUUFBTyxhQUFZLGNBQWEsYUFBYSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsUUFBTyxRQUFPLEtBQUksY0FBYSxlQUFjLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFdBQVUsU0FBUSxXQUFVLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxxQkFBc0IsRUFBQyxJQUFLLHVCQUFzQixNQUFPLGlDQUFnQyxVQUFXLENBQUMsUUFBTyxRQUFPLGFBQVksY0FBYSxlQUFjLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxzQkFBdUIsRUFBQyxJQUFLLHdCQUF1QixNQUFPLGtDQUFpQyxVQUFXLENBQUMsYUFBWSxjQUFhLGVBQWMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHdCQUF5QixFQUFDLElBQUssMEJBQXlCLE1BQU8sMEJBQXlCLFVBQVcsQ0FBQyxPQUFNLE9BQU0sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxzQkFBcUIsVUFBVyxDQUFDLE9BQU0sU0FBUSxPQUFNLFVBQVMsU0FBUSxTQUFRLFNBQVEsT0FBTSxhQUFZLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxrQkFBbUIsRUFBQyxJQUFLLG9CQUFtQixNQUFPLG9CQUFtQixXQUFZLENBQUMsTUFBSyxPQUFNLE1BQUssT0FBTSxNQUFLLEtBQUssR0FBRSxVQUFXLENBQUMsU0FBUSxPQUFNLFNBQVEsWUFBVyxXQUFVLGVBQWMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLDhCQUErQixFQUFDLElBQUssZ0NBQStCLE1BQU8sNEJBQTJCLFdBQVksQ0FBQyxNQUFLLE9BQU0sTUFBSyxPQUFNLE1BQUssS0FBSyxHQUFFLFVBQVcsQ0FBQyxTQUFRLE9BQU0sT0FBTSxTQUFRLFlBQVcsV0FBVSxlQUFjLFNBQVEsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxZQUFXLFFBQU8sT0FBTSxTQUFRLE9BQU0sU0FBUSxPQUFNLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLDhCQUErQixFQUFDLElBQUssZ0NBQStCLE1BQU8sOEJBQTZCLFVBQVcsQ0FBQyxTQUFRLE9BQU0sVUFBUyxRQUFPLFNBQVEsV0FBVSxlQUFjLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxrQkFBbUIsRUFBQyxJQUFLLG9CQUFtQixNQUFPLG9CQUFtQixVQUFXLENBQUMsU0FBUSxTQUFRLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFNBQVEsS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLDJCQUE0QixFQUFDLElBQUssNkJBQTRCLE1BQU8sNkJBQTRCLFVBQVcsQ0FBQyxXQUFVLFFBQU8sT0FBTSxZQUFXLFVBQVMsU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUseUNBQTBDLEVBQUMsSUFBSywyQ0FBMEMsTUFBTywyQ0FBMEMsVUFBVyxDQUFDLFdBQVUsVUFBUyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSx1QkFBd0IsRUFBQyxJQUFLLHlCQUF3QixNQUFPLHlCQUF3QixVQUFXLENBQUMsVUFBUyxlQUFjLGdCQUFlLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxRQUFPLFVBQVMsWUFBVyxVQUFTLFFBQU8sU0FBUSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZUFBZ0IsRUFBQyxJQUFLLGlCQUFnQixNQUFPLGlCQUFnQixVQUFXLENBQUMsUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxtQkFBb0IsRUFBQyxJQUFLLHFCQUFvQixNQUFPLHFCQUFvQixVQUFXLENBQUMsVUFBUyxTQUFRLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLDBCQUEyQixFQUFDLElBQUssNEJBQTJCLE1BQU8sNEJBQTJCLFVBQVcsQ0FBQyxPQUFNLFlBQVcsY0FBYSxlQUFjLGFBQVksVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsV0FBWSxDQUFDLE1BQUssS0FBSyxHQUFFLFVBQVcsQ0FBQyxnQkFBZSxPQUFNLEtBQUksRUFBRSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdCQUFpQixFQUFDLElBQUssa0JBQWlCLE1BQU8sdUJBQXNCLFdBQVksQ0FBQyxLQUFLLEdBQUUsVUFBVyxDQUFDLGVBQWMsS0FBSSxJQUFHLE9BQU0sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxzQkFBcUIsVUFBVyxDQUFDLE1BQUssWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGtCQUFtQixFQUFDLElBQUssb0JBQW1CLE1BQU8sb0JBQW1CLFVBQVcsQ0FBQyxhQUFZLFVBQVMsYUFBWSxZQUFZLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFVBQVMsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSx5QkFBd0IsUUFBUyxpQ0FBUSxDQUFDLEdBQUUsU0FBVSxLQUFJLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLGlCQUFnQixVQUFXLENBQUMsU0FBUSxTQUFRLFFBQU8sU0FBUSxRQUFPLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8saUJBQWdCLFdBQVksQ0FBQyxJQUFJLEdBQUUsVUFBVyxDQUFDLGdCQUFlLFNBQVEsWUFBVyxXQUFVLFdBQVUsZUFBYyxhQUFZLFdBQVUsUUFBTyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsd0JBQXlCLEVBQUMsSUFBSywwQkFBeUIsTUFBTywwQkFBeUIsVUFBVyxDQUFDLFdBQVUsWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFdBQVUsVUFBUyxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG9CQUFtQixRQUFTLDJCQUFPLENBQUMsR0FBRSxTQUFVLEtBQUksR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sY0FBYSxVQUFXLENBQUMsT0FBTSxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyxnQkFBZSxVQUFXLENBQUMsU0FBUSxTQUFRLFVBQVMsWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFdBQVUsUUFBTyxXQUFVLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE9BQU0sYUFBWSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLGVBQWMsVUFBVyxDQUFDLFNBQVEsUUFBTyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZUFBZ0IsRUFBQyxJQUFLLGlCQUFnQixNQUFPLGlCQUFnQixVQUFXLENBQUMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxTQUFRLFVBQVMsU0FBUSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLDBCQUF5QixVQUFXLENBQUMsUUFBTyxPQUFNLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHVCQUF3QixFQUFDLElBQUsseUJBQXdCLE1BQU8seUJBQXdCLFVBQVcsQ0FBQyxRQUFPLGVBQWMsUUFBTyxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSx3QkFBeUIsRUFBQyxJQUFLLDBCQUF5QixNQUFPLDBCQUF5QixVQUFXLENBQUMsUUFBTyxXQUFVLFdBQVUsVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFNBQVEsU0FBUSxTQUFRLFFBQU8sU0FBUSxNQUFLLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxRQUFPLFFBQU8sU0FBUSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZUFBZ0IsRUFBQyxJQUFLLGlCQUFnQixNQUFPLGlCQUFnQixVQUFXLENBQUMsY0FBYSxVQUFTLFFBQU8sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxZQUFXLFFBQU8sT0FBTSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFFBQU8sWUFBVyxVQUFTLGFBQVksU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxTQUFRLGVBQWMsU0FBUSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFNBQVEsZUFBYyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsdUJBQXdCLEVBQUMsSUFBSyx5QkFBd0IsTUFBTyx5QkFBd0IsVUFBVyxDQUFDLFFBQU8sT0FBTSxZQUFXLFlBQVcsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsb0JBQW1CLFFBQVMsMkJBQU8sQ0FBQyxHQUFFLFNBQVUsS0FBSSxHQUFFLGdCQUFpQixFQUFDLElBQUssa0JBQWlCLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxXQUFVLFFBQU8sUUFBTyxRQUFPLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxzQkFBdUIsRUFBQyxJQUFLLHdCQUF1QixNQUFPLG1CQUFrQixVQUFXLENBQUMsUUFBTyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZUFBZ0IsRUFBQyxJQUFLLGlCQUFnQixNQUFPLGlCQUFnQixVQUFXLENBQUMsZUFBYyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFdBQVUsU0FBUSxXQUFVLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sZ0NBQStCLFdBQVksQ0FBQyxJQUFJLEdBQUUsVUFBVyxDQUFDLFFBQU8sU0FBUSxVQUFTLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxTQUFRLFFBQU8sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLG1CQUFvQixFQUFDLElBQUsscUJBQW9CLE1BQU8scUJBQW9CLFVBQVcsQ0FBQyxVQUFTLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8saUJBQWdCLFdBQVksQ0FBQyxPQUFNLFFBQU8sTUFBSyxLQUFLLEdBQUUsVUFBVyxDQUFDLGdCQUFlLE9BQU0sU0FBUSxRQUFPLElBQUksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSwwQkFBMkIsRUFBQyxJQUFLLDRCQUEyQixNQUFPLDRCQUEyQixVQUFXLENBQUMsV0FBVSxXQUFVLGNBQWEsYUFBYSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsV0FBVSxXQUFVLElBQUksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSx3QkFBeUIsRUFBQyxJQUFLLDBCQUF5QixNQUFPLDBCQUF5QixVQUFXLENBQUMsZ0JBQWUsT0FBTSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUscUJBQXNCLEVBQUMsSUFBSyx1QkFBc0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFNBQVEsT0FBTSxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sd0JBQXVCLFdBQVksQ0FBQyxNQUFLLE9BQU0sTUFBSyxLQUFLLEdBQUUsVUFBVyxDQUFDLFlBQVcsYUFBWSxPQUFNLFFBQU8sSUFBSSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxPQUFNLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxPQUFNLGFBQVksVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsU0FBUSxPQUFNLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxXQUFVLFNBQVEsT0FBTSxTQUFRLE9BQU0sV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLHlCQUEwQixFQUFDLElBQUssMkJBQTBCLE1BQU8sMkJBQTBCLFVBQVcsQ0FBQyxXQUFVLGFBQVksS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxpQ0FBZ0MsVUFBVyxDQUFDLE1BQUssTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxrQkFBaUIsV0FBWSxDQUFDLElBQUksR0FBRSxVQUFXLENBQUMsV0FBVSxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxVQUFTLGFBQVksU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTywyQkFBMEIsVUFBVyxDQUFDLFFBQU8sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHVCQUF3QixFQUFDLElBQUsseUJBQXdCLE1BQU8seUJBQXdCLFVBQVcsQ0FBQyxnQkFBZSxRQUFPLFNBQVEsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxlQUFjLFdBQVksQ0FBQyxLQUFLLEdBQUUsVUFBVyxDQUFDLE9BQU0sU0FBUSxPQUFNLGFBQVksU0FBUSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLHNCQUFxQixXQUFZLENBQUMsS0FBSyxHQUFFLFVBQVcsQ0FBQyxPQUFNLE9BQU0sU0FBUSxPQUFNLFNBQVEsV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTywwQkFBeUIsVUFBVyxDQUFDLFVBQVMsU0FBUSxVQUFTLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxZQUFXLFFBQU8sVUFBUyxRQUFPLElBQUksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sb0JBQW1CLFVBQVcsQ0FBQyxhQUFZLFFBQU8sTUFBSyxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLHFCQUFvQixXQUFZLENBQUMsTUFBSyxNQUFLLEtBQUssR0FBRSxVQUFXLENBQUMsT0FBTSxTQUFRLGFBQVksSUFBSSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyx3QkFBdUIsVUFBVyxDQUFDLFlBQVcsT0FBTSxPQUFNLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxTQUFRLFVBQVMsT0FBTSxjQUFhLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sY0FBYSxVQUFXLENBQUMsUUFBTyxTQUFRLFNBQVEsWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFNBQVEsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyw2QkFBNEIsVUFBVyxDQUFDLFNBQVEsUUFBTyxRQUFPLE9BQU0sUUFBTyxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFFBQU8sU0FBUSxPQUFNLFFBQU8sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxjQUFhLFdBQVksQ0FBQyxPQUFNLE1BQU0sR0FBRSxVQUFXLENBQUMsT0FBTSxXQUFVLFlBQVksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSw0QkFBNkIsRUFBQyxJQUFLLDhCQUE2QixNQUFPLDhCQUE2QixVQUFXLENBQUMsV0FBVSxZQUFXLFlBQVcsV0FBVSxXQUFVLGFBQVksV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTywyQkFBMEIsVUFBVyxDQUFDLE9BQU0sT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxTQUFRLFFBQU8sUUFBTyxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsUUFBTyxZQUFXLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHNCQUF1QixFQUFDLElBQUssd0JBQXVCLE1BQU8sd0JBQXVCLFVBQVcsQ0FBQyxVQUFTLFVBQVMsVUFBUyxTQUFRLFNBQVEsVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLGVBQWMsVUFBVyxDQUFDLFVBQVMsUUFBTyxRQUFPLFlBQVcsUUFBTyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZUFBZ0IsRUFBQyxJQUFLLGlCQUFnQixNQUFPLFFBQU8sVUFBVyxDQUFDLFlBQVcsV0FBVSxPQUFNLFFBQU8sYUFBWSxTQUFRLFVBQVMsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsaUJBQWtCLEVBQUMsSUFBSyxtQkFBa0IsTUFBTyxVQUFTLFVBQVcsQ0FBQyxZQUFXLE9BQU0sUUFBTyxRQUFPLFdBQVUsU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLGFBQVksVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLE9BQU0sUUFBTyxTQUFRLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFNBQVEsV0FBVSxRQUFPLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFPLFlBQVcsV0FBVSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxVQUFTLFVBQVMsUUFBTyxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8s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QUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLFFBQU8sUUFBTyxRQUFPLGFBQVksWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxnQkFBZSxVQUFXLENBQUMsU0FBUSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLGFBQVksVUFBVyxDQUFDLFFBQU8sUUFBTyxXQUFVLGFBQVksT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFPLFdBQVUsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGtCQUFpQixVQUFXLENBQUMsU0FBUSxTQUFRLFFBQU8sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxlQUFjLFVBQVcsQ0FBQyxXQUFVLFFBQU8sUUFBTyxPQUFNLFFBQU8sUUFBTyxRQUFPLFNBQVEsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFD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TyxFQUFDLElBQUssUUFBTyxNQUFPLGVBQWMsVUFBVyxDQUFDLFdBQVUsUUFBTyxZQUFXLFFBQU8sUUFBTyxRQUFPLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLEdBQUUsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxHQUFFLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssR0FBRSxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLEdBQUUsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxHQUFFLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFNBQVEsUUFBTyxXQUFVLFFBQU8sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsaUJBQWtCLEVBQUMsSUFBSyxtQkFBa0IsTUFBTyxtQkFBa0IsVUFBVyxDQUFDLFFBQU8sT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFD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LHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyxnQkFBZSxVQUFXLENBQUMsU0FBUSxXQUFVLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxnQ0FBK0IsVUFBVyxDQUFDLFNBQVEsYUFBWSxXQUFVLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxpQ0FBZ0MsVUFBVyxDQUFDLFNBQVEsV0FBVSxRQUFPLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyw4QkFBNkIsVUFBVyxDQUFDLFNBQVEsS0FBSSxXQUFVLFFBQU8sV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZUFBZ0IsRUFBQyxJQUFLLGlCQUFnQixNQUFPLGlCQUFnQixVQUFXLENBQUMsWUFBVyxRQUFPLFFBQU8sWUFBVyxXQUFVLFFBQU8sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGdDQUErQixVQUFXLENBQUMsU0FBUSxXQUFVLFFBQU8sV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLHFC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QUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHFCQUFvQixFQUFDLElBQUsscUJBQW9CLE1BQU8scUJBQW9CLFVBQVcsQ0FBQyxTQUFRLFVBQVMsUUFBTyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxRQUFPLFVBQVMsWUFBVyxZQUFXLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxVQUFTLFdBQVUsVUFBUyxPQUFNLGFBQWEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxRQUFPLGdCQUFlLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxXQUFVLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLG1CQUFvQixFQUFDLElBQUsscUJBQW9CLE1BQU8scUJBQW9CLFVBQVcsQ0FBQyxTQUFRLFdBQVUsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsYUFBWSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFFBQU8sVUFBUyxRQUFPLFFBQU8sV0FBVSxZQUFXLFFBQU8sUUFBTyxTQUFRLE9BQU0sVUFBUyxZQUFZLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxTQUFRLFFBQU8sYUFBWSxPQUFNLGNBQWEsU0FBUSxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxHQUFFLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssR0FBRSxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLEdBQUUsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxHQUFFLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssR0FBRSxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sZUFBYyxVQUFXLENBQUMsUUFBTyxVQUFTLFlBQVcsVUFBUyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxVQUFTLE9BQU0sUUFBTyxRQUFPLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLGVBQWUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxnQkFBaUIsRUFBQyxJQUFLLGtCQUFpQixNQUFPLGtCQUFpQixVQUFXLENBQUMsZUFBZSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxRQUFPLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxRQUFPLFFBQU8sU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxzQkFBdUIsRUFBQyxJQUFLLHdCQUF1QixNQUFPLHdCQUF1QixVQUFXLENBQUMsZUFBZSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFNBQVEsYUFBYSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGtCQUFtQixFQUFDLElBQUssb0JBQW1CLE1BQU8sb0JBQW1CLFVBQVcsQ0FBQyxVQUFTLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxTQUFRLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxRQUFPLFNBQVEsU0FBUSxRQUFPLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sT0FBTSxVQUFXLENBQUMsUUFBTyxRQUFPLE9BQU0sU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxTQUFRLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sU0FBUSxVQUFXLENBQUMsUUFBTyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFNBQVEsUUFBTyxRQUFPLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsU0FBUSxPQUFNLFFBQU8sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFVBQVMsV0FBVSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sT0FBTSxVQUFXLENBQUMsT0FBTSxRQUFPLE9BQU0sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFVBQVMsU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsVUFBUyxVQUFTLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHdCQUF5QixFQUFDLElBQUssMEJBQXlCLE1BQU8scUJBQW9CLFVBQVcsQ0FBQyxRQUFPLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxZQUFXLFVBQVMsT0FBTSxPQUFNLFVBQVMsT0FBTSxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxnQkFBaUIsRUFBQyxJQUFLLGtCQUFpQixNQUFPLGdCQUFlLFVBQVcsQ0FBQyxXQUFVLE9BQU0sYUFBYSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxjQUFhLFVBQVcsQ0FBQyxPQUFNLFFBQU8sVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSx3QkFBdUIsUUFBUyw4QkFBTyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxDQUFDLEdBQUUsU0FBVSxLQUFJLEdBQUUsa0JBQW1CLEVBQUMsSUFBSyxvQkFBbUIsTUFBTyxnQkFBZSxVQUFXLENBQUMsU0FBUSxRQUFPLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsd0JBQXVCLFFBQVMsOEJBQU8sR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsQ0FBQyxHQUFFLFNBQVUsS0FBSSxHQUFFLGdCQUFpQixFQUFDLElBQUssa0JBQWlCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxVQUFTLE9BQU0sV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsb0JBQW1CLFFBQVMsMkJBQU8sR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGtCQUFtQixFQUFDLElBQUssb0JBQW1CLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxVQUFTLE9BQU0sV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsb0JBQW1CLFFBQVMsMkJBQU8sR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGtCQUFtQixFQUFDLElBQUssb0JBQW1CLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxVQUFTLE9BQU0sT0FBTSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxvQkFBbUIsUUFBUywyQkFBTyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLGFBQVksVUFBVyxDQUFDLE9BQU0sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsb0JBQW1CLFFBQVMsMkJBQU8sR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxVQUFTLFNBQVEsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsa0JBQW1CLEVBQUMsSUFBSyxvQkFBbUIsTUFBTyxtQkFBa0IsVUFBVyxDQUFDLFVBQVMsU0FBUSxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxvQkFBbUIsUUFBUywyQkFBTyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsbUJBQW9CLEVBQUMsSUFBSyxxQkFBb0IsTUFBTyxvQkFBbUIsVUFBVyxDQUFDLFVBQVMsVUFBUyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxvQkFBbUIsUUFBUywyQkFBTyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxDQUFDLEdBQUUsU0FBVSxLQUFJLEdBQUUsb0JBQXFCLEVBQUMsSUFBSyxzQkFBcUIsTUFBTyxxQkFBb0IsVUFBVyxDQUFDLFVBQVMsU0FBUSxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxvQkFBbUIsUUFBUywyQkFBTyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUscUJBQXNCLEVBQUMsSUFBSyx1QkFBc0IsTUFBTyxzQkFBcUIsVUFBVyxDQUFDLFVBQVMsVUFBUyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxvQkFBbUIsUUFBUywyQkFBTyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxHQUFFLEVBQUMsU0FBVSwwQkFBeUIsUUFBUyxvQ0FBUyxDQUFDLEdBQUUsU0FBVSxLQUFJLEdBQUUsb0JBQXFCLEVBQUMsSUFBSyxzQkFBcUIsTUFBTyxxQkFBb0IsVUFBVyxDQUFDLFVBQVMsU0FBUSxPQUFNLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG9CQUFtQixRQUFTLDJCQUFPLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxxQkFBc0IsRUFBQyxJQUFLLHVCQUFzQixNQUFPLHNCQUFxQixVQUFXLENBQUMsVUFBUyxVQUFTLFNBQVEsS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsb0JBQW1CLFFBQVMsMkJBQU8sR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsQ0FBQyxHQUFFLFNBQVUsS0FBSSxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxlQUFjLFVBQVcsQ0FBQyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG9CQUFtQixRQUFTLDJCQUFPLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFVBQVMsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsb0JBQW1CLFFBQVMsMkJBQU8sR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsQ0FBQyxHQUFFLFNBQVUsS0FBSSxHQUFFLHNCQUFxQixFQUFDLElBQUssc0JBQXFCLE1BQU8scUJBQW9CLFVBQVcsQ0FBQyxnQkFBZSxTQUFRLFVBQVMsUUFBTyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLHdCQUF1QixRQUFTLDhCQUFPLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxvQkFBbUIsRUFBQyxJQUFLLG9CQUFtQixNQUFPLG1CQUFrQixVQUFXLENBQUMsY0FBYSxPQUFNLFFBQU8sT0FBTSxVQUFTLE9BQU0sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsd0JBQXVCLFFBQVMsOEJBQU8sR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxVQUFTLFNBQVEsU0FBUSxVQUFTLFVBQVMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLFdBQVUsVUFBVyxDQUFDLFNBQVEsU0FBUSxRQUFPLE9BQU0sU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sYUFBWSxVQUFXLENBQUMsU0FBUSxTQUFRLFVBQVMsU0FBUSxRQUFPLFNBQVEsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMs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WSxVQUFXLENBQUMsUUFBTyxXQUFVLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsd0JBQXVCLFFBQVMsOEJBQU8sR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdCQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGVBQWMsVUFBVyxDQUFDLFVBQVMsV0FBVSxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLHdCQUF1QixRQUFTLDhCQUFPLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsb0JBQW1CLFFBQVMsMkJBQU8sR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsQ0FBQyxHQUFFLFNBQVUsS0FBSSxHQUFFLGVBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxjQUFhLFVBQVcsQ0FBQyxRQUFPLFdBQVUsWUFBVyxPQUFPLEdB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LFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsR0FBRSxFQUFDLFNBQVUsMEJBQXlCLFFBQVMsb0NBQVMsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGlCQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFVBQVMsWUFBVyxlQUFjLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG9CQUFtQixRQUFTLDJCQUFPLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsWUFBVyxRQUFPLFlBQVksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG9CQUFtQixRQUFTLDJCQUFPLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLENBQUMsR0FBRSxTQUFVLEtBQUksR0FBRSxlQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sY0FBYSxVQUFXLENBQUMsUUFBTyxXQUFVLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG9CQUFtQixRQUFTLDJCQUFPLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFV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QUFDLElBQUssZ0JBQWUsTUFBTyxlQUFjLFVBQVcsQ0FBQyxVQUFTLE1BQUssTUFBSyxXQUFVLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLHdCQUF1QixRQUFTLDhCQUFPLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsWUFBVyxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLHFCQUFzQixFQUFDLElBQUssdUJBQXNCLE1BQU8sdUJBQXNCLFVBQVcsQ0FBQyxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLDRCQUEyQixFQUFDLElBQUssNEJBQTJCLE1BQU8sMkJBQTBCLFVBQVcsQ0FBQyxRQUFPLHVCQUFz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LFNBQVUsR0FBRSxHQUFFLHFCQUFzQixFQUFDLElBQUssdUJBQXNCLE1BQU8sdUJBQXNCLFVBQVcsQ0FBQyxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG9CQUFtQixRQUFTLDJCQUFPLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLEdBQUUsRUFBQyxTQUFVLDBCQUF5QixRQUFTLG9DQUFTLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sY0FBYSxVQUFXLENBQUMsVUFBUyxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxlQUFjLFVBQVcsQ0FBQyxZQUFXLE9BQU0sUUFBTyxRQUFPLFVBQVMsV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGNBQWEs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LHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGVBQWMsVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLHdCQUF1QixRQUFTLDhCQUFPLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGVBQWMsVUFBVyxDQUFDLFFBQU8sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsd0JBQXVCLFFBQVMsOEJBQU8sR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsR0FBRSxFQUFDLFNBQVUsOEJBQTZCLFFBQVMsdUNBQVMsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdC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QyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLEdBQUUsRUFBQyxTQUFVLDhCQUE2QixRQUFTLHVDQUFTLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGFBQVksVUFBVyxDQUFDLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLHdCQUF1QixRQUFTLDhCQUFPLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGVBQWMsVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLHdCQUF1QixRQUFTLDhCQUFPLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxjQUFhLFVBQVcsQ0FBQyxRQUFPLFdBQVUsVUFBUyxXQUFVLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLHdCQUF1QixRQUFTLDhCQUFPLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFVBQVMsVUFBUyxXQUFVLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLHdCQUF1QixRQUFTLDhCQUFPLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFX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dUNBQVMsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxVQUFTLFdBQVUsVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyxnQkFBZSxVQUFXLENBQUMsVUFBUyxXQUFVLGVBQWMsWUFBVyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsVUFBUyxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxVQUFTLFVBQVMsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sR0FBRSxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLEdBQUUsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxHQUFFLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSw2QkFBNEIsUUFBUyxvQ0FBUSxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsaUJBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFVBQVMsWUFBVyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSw2QkFBNEIsUUFBUyxvQ0FBUSxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxHQUFFLEVBQUMsU0FBVSw4QkFBNkIsUUFBUyx1Q0FBUyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFVBQVMsV0FBVSxTQUFRLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLEdBQUUsRUFBQyxTQUFVLGVB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SUFBSyxlQUFjLE1BQU8sZUFBYyxXQUFZLENBQUMsS0FBSyxHQUFFLFVBQVcsQ0FBQyxVQUFTLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxVQUFTLFVBQVMsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFVBQVMsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxVQUFTLFVBQVMsUUFBTyxTQUFRLE9BQU0sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxPQUFNLFVBQVcsQ0FBQyxRQUFPLFVBQVMsVUFBUyxVQUFTLFFBQU8sT0FBTSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG9CQUFtQixRQUFTLDJCQUFPLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsT0FBTSxVQUFTLE9BQU0sVUFBUyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFVBQVMsVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLE9BQU0sVUFBVyxDQUFDLFFBQU8sVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxZQUFXLFVBQVcsQ0FBQyxVQUFTLFFBQU8sVUFBUyxPQUFNLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sT0FBTSxVQUFXLENBQUMsUUFBTyxVQUFTLFFBQU8sT0FBTSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLGdCQUFlLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLG1CQUFrQixRQUFTLHdCQUFNLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sUUFBTyxVQUFXLENBQUMsUUFBTyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sY0FBYSxVQUFXLENBQUMsVUFBUyxPQUFNLFVBQVMsUUFBTyxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sU0FBUSxVQUFXLENBQUMsVUFBUyxVQUFTLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sY0FBYSxVQUFXLENBQUMsVUFBUyxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsU0FBUSxVQUFTLFVBQVMsUUFBTyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxTQUFRLFVBQVcsQ0FBQyxhQUFZLFVBQVMsVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxRQUFPLFVBQVMsVUFBUyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLFNBQVEsVUFBVyxDQUFDLFFBQU8sVUFBUyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxVQUFTLFVBQVMsU0FBUSxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLElBQUksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sWUFBVyxVQUFXLENBQUMsUUFBTyxNQUFLLFVBQVMsVUFBUyxPQUFNLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxJQUFLLEVBQUMsSUFBSyxNQUFLLE1BQU8sTUFBSyxVQUFXLENBQUMsVUFBUyxPQUFNLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxVQUFTLFVBQVMsTUFBSyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLE9BQU0sVUFBVyxDQUFDLFFBQU8sUUFBTyxNQUFLLFVBQVMsVUFBUyxPQUFNLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sT0FBTSxVQUFXLENBQUMsUUFBTyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxVQUFTLFNBQVEsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxPQUFNLFVBQVcsQ0FBQyxTQUFRLFVBQVMsVUFBUyxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsaUJBQWtCLEVBQUMsSUFBSyxtQkFBa0IsTUFBTyxTQUFRLFVBQVcsQ0FBQyxhQUFZLFVBQVMsT0FBTSxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxPQUFNLFFBQU8sVUFBUyxVQUFTLE9BQU0sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxVQUFTLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sV0FBVSxVQUFXLENBQUMsUUFBTyxVQUFTLFVBQVMsU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFVBQVMsVUFBUyxRQUFPLE1BQUssUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxZQUFXLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sY0FBYSxVQUFXLENBQUMsVUFBUyxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sY0FBYSxVQUFXLENBQUMsVUFBUyxVQUFTLFVBQVMsU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFNBQVEsVUFBVyxDQUFDLFVBQVMsVUFBUyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sT0FBTSxVQUFXLENBQUMsVUFBUyxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLGVBQWMsVUFBVyxDQUFDLFVBQVMsVUFBUyxPQUFNLFVBQVMsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFVBQVMsVUFBVyxDQUFDLFdBQVUsVUFBUyxVQUFTLE9BQU0sU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFVBQVMsVUFBUyxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxVQUFTLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxVQUFTLFVBQVMsU0FBUSxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFVBQVMsVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsd0JBQXVCLFFBQVMsOEJBQU8sQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sU0FBUSxVQUFXLENBQUMsUUFBTyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxVQUFTLGFBQVksUUFBTyxPQUFNLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsVUFBUyxVQUFTLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sY0FBYSxVQUFXLENBQUMsUUFBTyxVQUFTLFlBQVcsY0FBYSxPQUFNLE9BQU0sS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsVUFBUyxTQUFRLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxVQUFTLFVBQVMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdCQUFpQixFQUFDLElBQUssa0JBQWlCLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxVQUFTLFdBQVUsT0FBTSxRQUFPLFFBQU8sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxVQUFTLFdBQVUsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTywyQkFBMEIsVUFBVyxDQUFDLFdBQVUsU0FBUSxVQUFTLFVBQVMsV0FBVSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFVBQVMsVUFBUyxPQUFNLFNBQVEsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8sUUFBTyxVQUFXLENBQUMsTUFBSyxTQUFRLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsVUFBUyxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBUyxVQUFTLFFBQU8sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxVQUFTLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxVQUFTLFVBQVMsUUFBTyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxRQUFPLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxVQUFTLFVBQVMsVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFVBQVMsVUFBUyxRQUFPLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxTQUFRLFNBQVEsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxtQkFBa0IsUUFBUyx3QkFBTSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFNBQVEsVUFBUyxZQUFZLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFVBQVMsVUFBUyxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsVUFBUyxVQUFTLFdBQVUsVUFBUyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFVBQVMsUUFBTyxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsVUFBUyxVQUFTLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsVUFBUyxRQUFPLFVBQVMsUUFBTyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGVBQWMsVUFBVyxDQUFDLFVBQVMsUUFBTyxVQUFTLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxVQUFTLFFBQU8sVUFBUyxXQUFVLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxVQUFTLFlBQVcsaUJBQWdCLGdCQUFlLGNBQWEsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxLQUFJLE9BQU0sVUFBUyxVQUFTLFlBQVcsaUJBQWdCLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxVQUFTLFVBQVMsT0FBTSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFNBQVEsVUFBVyxDQUFDLFVBQVMsVUFBUyxVQUFTLE9BQU0sT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxXQUFVLFVBQVMsVUFBUyxRQUFPLE9BQU0sU0FBUSxRQUFPLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBUyxZQUFXLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBUyxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxVQUFTLFFBQU8sU0FBUSxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxVQUFTLFFBQU8sT0FBTSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFVBQVMsVUFBUyxRQUFPLE9BQU0sU0FBUSxRQUFPLFFBQU8sT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxVQUFTLFlBQVcsU0FBUSxPQUFNLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxnQkFBZSxVQUFXLENBQUMsVUFBUyxPQUFNLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsU0FBUSxPQUFNLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsU0FBUSxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFFBQU8sVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFVBQVMsVUFBUyxVQUFTLGFBQWEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sT0FBTSxVQUFXLENBQUMsVUFBUyxVQUFTLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxVQUFTLFVBQVMsVUFBUyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLFlBQVcsVUFBVyxDQUFDLE9BQU0sVUFBUyxVQUFTLFVBQVMsT0FBTSxVQUFTLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxlQUFjLFVBQVcsQ0FBQyxXQUFVLFVBQVMsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxVQUFTLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsVUFBUyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxVQUFTLFVBQVMsWUFBVyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxVQUFTLFVBQVMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsVUFBUyxZQUFXLFNBQVEsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFdBQVUsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFVBQVMsU0FBUSxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxZQUFXLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsVUFBUyxRQUFPLFlBQVksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsVUFBUyxjQUFhLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFdBQVUsY0FBYSxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxTQUFRLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxTQUFRLGFBQVksV0FBVSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFVBQVMsU0FBUSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFdBQVUsU0FBUSxVQUFTLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsU0FBUSxVQUFTLFNBQVEsUUFBTyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyxnQkFBZSxVQUFXLENBQUMsWUFBVyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsZ0JBQWlCLEVBQUMsSUFB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LE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsU0FBUSxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sY0FBYSxVQUFXLENBQUMsU0FBUSxRQUFPLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLFNBQVEsVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFNBQVEsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxTQUFRLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxTQUFRLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxTQUFRLFFBQU8sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxhQUFZLFVBQVcsQ0FBQyxTQUFRLE9BQU0sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsU0FBUSxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsU0FBUSxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsUUFBTyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFNBQVEsUUFBTyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGVBQWMsVUFBVyxDQUFDLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsUUFBTyxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsU0FBUSxhQUFZLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFNBQVEsVUFBUyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsU0FBUSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLGFBQVksVUFBUyxRQUFPLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsUUFBTyxTQUFRLGFBQVksUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxhQUFZLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxlQUFjLFVBQVcsQ0FBQyxRQUFPLGFBQVksT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxRQUFPLFNBQVEsVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsU0FBUSxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsUUFBTyxhQUFZLFNBQVEsT0FBTSxRQUFPLFdBQVUsUUFBTyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFNBQVEsUUFBTyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFFBQU8sU0FBUSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFFBQU8sUUFBTyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFFBQU8sS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFFBQU8sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxTQUFRLFVBQVMsV0FBVSxhQUFhLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFFBQU8sT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFPLFNBQVEsYUFBWSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFFBQU8sU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFFBQU8sVUFBUyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsU0FBUSxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsUUFBTyxTQUFRLFdBQVUsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFFBQU8sU0FBUSxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxRQUFPLGFBQVksYUFBWSxZQUFXLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsUUFBTyxhQUFZLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxRQUFPLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFFBQU8sUUFBTyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGVBQWMsVUFBVyxDQUFDLFFBQU8sUUFBTyxhQUFZLFFBQU8sV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGVBQWMsVUFBVyxDQUFDLFFBQU8sT0FBTSxRQUFPLFlBQVcsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFPLGFBQVksUUFBTyxPQUFNLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLFFBQU8sUUFBTyxRQUFPLGdCQUFlLGFBQVksVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxTQUFRLFNBQVEsUUFBTyxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsUUFBTyxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sV0FBVSxVQUFXLENBQUMsVUFBUyxRQUFPLGVBQWMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxRQUFPLFNBQVEsU0FBUSxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsUUFBTyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFFBQU8sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxtQkFBb0IsRUFBQyxJQUFLLHFCQUFvQixNQUFPLHFCQUFvQixVQUFXLENBQUMsUUFBTyxRQUFPLGVBQWUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsUUFBTyxlQUFlLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLE9BQU0sVUFBVyxDQUFDLFFBQU8sV0FBVSxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLFdBQVUsVUFBVyxDQUFDLFNBQVEsT0FBTSxRQUFPLGFBQVksV0FBVSxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUscUJBQXNCLEVBQUMsSUFBSyx1QkFBc0IsTUFBTyx1QkFBc0IsVUFBVyxDQUFDLFdBQVUsYUFBWSxVQUFTLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sZUFBYyxVQUFXLENBQUMsUUFBTyxRQUFPLFFBQU8sS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxVQUFTLE9BQU0sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGlCQUFrQixFQUFDLElBQUssbUJBQWtCLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxRQUFPLGFBQVksVUFBUyxXQUFVLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsUUFBTyxXQUFVLFdBQVUsV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxRQUFPLFNBQVEsV0FBVSxTQUFRLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsYUFBWSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGVBQWMsVUFBVyxDQUFDLFFBQU8sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLFlBQVcsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFFBQU8sWUFBVyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFFBQU8sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxlQUFjLFVBQVcsQ0FBQyxRQUFPLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sY0FBYSxVQUFXLENBQUMsUUFBTyxTQUFRLE9BQU0sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFNBQVEsUUFBTyxZQUFXLFVBQVMsWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLFdBQVUsU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyx3QkFBdUIsVUFBVyxDQUFDLFFBQU8sVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFFBQU8sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFPLFFBQU8sWUFBVyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyxnQkFBZSxVQUFXLENBQUMsUUFBTyxVQUFTLGFBQVksUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyx3QkFBdUIsVUFBVyxDQUFDLFFBQU8sU0FBUSxPQUFNLFNBQVEsY0FBYSxRQUFPLFlBQVcsVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFFBQU8sVUFBUyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFFBQU8sV0FBVSxTQUFRLFlBQVcsWUFBVyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFFBQU8sWUFBVyxXQUFVLGNBQWEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdCQUFpQixFQUFDLElBQUssa0JBQWlCLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxRQUFPLFlBQVcsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxRQUFPLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBUyxZQUFZLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFVBQVMsVUFBUyxVQUFTLFNBQVEsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxVQUFTLFNBQVEsVUFBUyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFVBQVMsVUFBUyxTQUFRLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFlBQVcsUUFBTyxPQUFNLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxPQUFNLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLE9BQU0sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxRQUFPLFdBQVUsU0FBUSxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsUUFBTyxTQUFRLFFBQU8sYUFBWSxTQUFRLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxRQUFPLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sYUFBWSxVQUFXLENBQUMsUUFBTyxRQUFPLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsUUFBTyxXQUFVLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxPQUFNLFVBQVcsQ0FBQyxRQUFPLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFFBQU8sU0FBUSxXQUFVLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsU0FBUSxXQUFVLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxRQUFPLFNBQVEsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFdBQVUsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLFNBQVEsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxRQUFPLGFBQVksTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFlBQVcsU0FBUSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxVQUFTLFlBQVcsU0FBUSxZQUFXLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsU0FBUSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxN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RUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxVQUFTLFdBQVUsWUFBVyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFlBQVcsY0FBYSxjQUFjLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsc0JBQXVCLEVBQUMsSUFBSyx3QkFBdUIsTUFBTyx3QkFBdUIsVUFBVyxDQUFDLFFBQU8sVUFBUyxTQUFRLFVBQVMsZUFBYyxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFNBQVEsVUFBUyxhQUFhLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFNBQVEsVUFBUyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFNBQVEsWUFBVyxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsU0FBUSxZQUFXLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGNBQWEsUUFBUyxr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QU8sU0FBUSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLG1CQUFrQixVQUFXLENBQUMsVUFBUyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLHdCQUF1QixVQUFXLENBQUMsWUFBVyxZQUFXLGVBQWUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxzQkFBdUIsRUFBQyxJQUFLLHdCQUF1QixNQUFPLGVBQWMsVUFBVyxDQUFDLFlBQVcsWUFBVyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFlBQVcsVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsWUFBVyxTQUFRLFNBQVEsUUFBTyxZQUFXLFlBQVksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsWUFBVyxnQkFBZSxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFFBQU8sYUFBWSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsbUJBQW9CLEVBQUMsSUFBSyxxQkFBb0IsTUFBTyxxQkFBb0IsVUFBVyxDQUFDLFlBQVcsWUFBVyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFlBQVcsV0FBVSxhQUFZLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGtCQUFtQixFQUFDLElBQUssb0JBQW1CLE1BQU8sb0JBQW1CLFVBQVcsQ0FBQyxZQUFXLFlBQVcsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxZQUFXLFlBQVcsYUFBWSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsaUJBQWtCLEVBQUMsSUFBSyxtQkFBa0IsTUFBTyxtQkFBa0IsVUFBVyxDQUFDLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGlCQUFrQixFQUFDLElBQUssbUJBQWtCLE1BQU8sVUFBUyxVQUFXLENBQUMsWUFBVyxZQUFXLFdBQVUsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxRQUFPLFFBQU8sYUFBWSxVQUFTLFlBQVcsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGVBQWMsVUFBVyxDQUFDLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLG1CQUFvQixFQUFDLElBQUsscUJBQW9CLE1BQU8scUJBQW9CLFVBQVcsQ0FBQyxZQUFXLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsWUFBVyxZQUFXLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsU0FBUSxXQUFVLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFdBQVUsV0FBVSxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxVQUFTLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsYUFBWSxRQUFTLGVBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxTQUFRLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxTQUFRLFVBQVMsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxRQUFPLFFBQVMsU0FBRyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFNBQVEsV0FBVSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxRQUFPLFFBQVMsU0FBRyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGtCQUFtQixFQUFDLElBQUssb0JBQW1CLE1BQU8sb0JBQW1CLFVBQVcsQ0FBQyxXQUFVLFFBQU8sVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxTQUFRLFNBQVEsUUFBTyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHdCQUF5QixFQUFDLElBQUssMEJBQXlCLE1BQU8sMEJBQXlCLFVBQVcsQ0FBQyxRQUFPLFlBQVcsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxXQUFVLFFBQU8sWUFBVyxPQUFPLEdBQUUs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U0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLG9CQUFjLFVBQVcsQ0FBQyxVQUFTLEtBQUksU0FBUSxLQUFJLFFBQU8sT0FBTSxTQUFRLFFBQU8sUUFBTyxRQUFPLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxjQUFhLFVBQVcsQ0FBQyxZQUFXLE9BQU0sVUFBUyxRQUFPLE9BQU0sU0FBUSxRQUFPLFFBQU8sUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sb0JBQWMsVUFBVyxDQUFDLFVBQVMsS0FBSSxTQUFRLEtBQUksUUFBTyxPQUFNLFNBQVEsUUFBTyxRQUFPLFFBQU8sU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLGNBQWEsVUFBVyxDQUFDLFlBQVcsT0FBTSxVQUFTLFFBQU8sT0FBTSxTQUFRLFFBQU8sUUFBTyxRQUFPLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxzQkFBZ0IsVUFBVyxDQUFDLFVBQVMsS0FBSSxTQUFRLEtBQUksUUFBTyxPQUFNLFNBQVEsUUFBTyxRQUFPLFFBQU8sU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxZQUFXLFNBQVEsVUFBUyxRQUFPLE9BQU0sU0FBUSxRQUFPLFFBQU8sUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8scUJBQWUsVUFBVyxDQUFDLFVBQVMsS0FBSSxTQUFRLEtBQUksUUFBTyxPQUFNLFNBQVEsUUFBTyxRQUFPLFFBQU8sU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLGVBQWMsVUFBVyxDQUFDLFlBQVcsUUFBTyxVQUFTLFFBQU8sT0FBTSxTQUFRLFFBQU8sUUFBTyxRQUFPLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxxQkFBZSxVQUFXLENBQUMsVUFBUyxLQUFJLFNBQVEsS0FBSSxRQUFPLE9BQU0sU0FBUSxRQUFPLFFBQU8sUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sZUFBYyxVQUFXLENBQUMsWUFBVyxRQUFPLFVBQVMsUUFBTyxPQUFNLFNBQVEsUUFBTyxRQUFPLFFBQU8sU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLG9CQUFjLFVBQVcsQ0FBQyxVQUFTLEtBQUksU0FBUSxLQUFJLFFBQU8sT0FBTSxTQUFRLFFBQU8sUUFBTyxRQUFPLFNBQVEsWUFBVyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sY0FBYSxVQUFXLENBQUMsWUFBVyxPQUFNLFVBQVMsUUFBTyxPQUFNLFNBQVEsUUFBTyxRQUFPLFFBQU8sU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLHNCQUFnQixVQUFXLENBQUMsVUFBUyxLQUFJLFNBQVEsS0FBSSxRQUFPLE9BQU0sU0FBUSxRQUFPLFFBQU8sUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFlBQVcsU0FBUSxVQUFTLFFBQU8sT0FBTSxTQUFRLFFBQU8sUUFBTyxRQUFPLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxzQkFBZ0IsVUFBVyxDQUFDLFVBQVMsS0FBSSxTQUFRLEtBQUksUUFBTyxPQUFNLFNBQVEsUUFBTyxRQUFPLFFBQU8sU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxZQUFXLFNBQVEsVUFBUyxRQUFPLE9BQU0sU0FBUSxRQUFPLFFBQU8sUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8scUJBQWUsVUFBVyxDQUFDLFVBQVMsS0FBSSxTQUFRLEtBQUksUUFBTyxPQUFNLFNBQVEsUUFBTyxRQUFPLFFBQU8sU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLGVBQWMsVUFBVyxDQUFDLFlBQVcsUUFBTyxVQUFTLFFBQU8sT0FBTSxTQUFRLFFBQU8sUUFBTyxRQUFPLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxvQkFBYyxVQUFXLENBQUMsV0FBVSxLQUFJLFNBQVEsTUFBSyxTQUFRLFFBQU8sU0FBUSxRQUFPLFFBQU8sUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sY0FBYSxVQUFXLENBQUMsYUFBWSxPQUFNLFVBQVMsU0FBUSxRQUFPLFNBQVEsUUFBTyxRQUFPLFFBQU8sU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLHVCQUFpQixVQUFXLENBQUMsV0FBVSxLQUFJLFNBQVEsTUFBSyxTQUFRLFFBQU8sU0FBUSxRQUFPLFFBQU8sUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxhQUFZLFVBQVMsVUFBUyxTQUFRLFFBQU8sU0FBUSxRQUFPLFFBQU8sUUFBTyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxZQUFXLFVBQVMsU0FBUSxTQUFRLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHNCQUF1QixFQUFDLElBQUssd0JBQXVCLE1BQU8sd0JBQXVCLFVBQVcsQ0FBQyxVQUFTLFlBQVcsVUFBUyxTQUFRLFNBQVEsV0FBVSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsb0JBQXFCLEVBQUMsSUFBSyxzQkFBcUIsTUFBTyxzQkFBcUIsVUFBVyxDQUFDLFVBQVMsWUFBVyxVQUFTLFNBQVEsU0FBUSxXQUFVLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sdUJBQXNCLFVBQVcsQ0FBQyxVQUFTLFNBQVEsT0FBTSxRQUFPLFlBQVcsVUFBUyxTQUFRLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxVQUFTLFVBQVMsWUFBVyxVQUFTLFNBQVEsU0FBUSxXQUFVLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxxQkFBc0IsRUFBQyxJQUFLLHVCQUFzQixNQUFPLHVCQUFzQixVQUFXLENBQUMsVUFBUyxZQUFXLFVBQVMsU0FBUSxTQUFRLFdBQVUsU0FBUSxRQUFRLEdBQUUs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U0FBUSxRQUFPLFNBQVEsVUFBUyxVQUFTLGFBQVksUUFBTyxXQUFVLGFBQVksU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxVQUFTLFNBQVEsV0FBVSxRQUFPLFNBQVEsT0FBTSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsaUJBQWtCLEVBQUMsSUFBSyxtQkFBa0IsTUFBTyxtQkFBa0IsVUFBVyxDQUFDLFdBQVUsUUFBTyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsYUFBWSxRQUFTLGVBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLDBCQUEyQixFQUFDLElBQUssNEJBQTJCLE1BQU8sNEJBQTJCLFVBQVcsQ0FBQyxTQUFRLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsUUFBTyxRQUFTLFNBQUcsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLG9CQUFxQixFQUFDLElBQUssc0JBQXFCLE1BQU8sc0JBQXFCLFVBQVcsQ0FBQyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE9BQU0sV0FBVSxXQUFVLGFBQVksUUFBTyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxRQUFPLFFBQVMsU0FBRyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFVBQVMsVUFBUyxRQUFPLFdBQVUsYUFBWSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFVBQVMsVUFBUyxRQUFPLFdBQVUsYUFBWSxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxzQkFBdUIsRUFBQyxJQUFLLHdCQUF1QixNQUFPLHdCQUF1QixVQUFXLENBQUMsVUFBUyxVQUFTLFFBQU8sV0FBVSxhQUFZLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsUUFBTyxRQUFTLFNBQUcsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLE9BQU0sUUFBTyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFNBQVEsUUFBTyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sY0FBYSxVQUFXLENBQUMsU0FBUSxPQUFNLFVBQVMsV0FBVSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFFBQU8sS0FBSSxXQUFVLGFBQVksU0FBUSxXQUFVLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdCQUFpQixFQUFDLElBQUssa0JBQWlCLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxZQUFXLFlBQVcsWUFBVyxRQUFPLGFBQWEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsU0FBUSxZQUFXLFlBQVcsaUJBQWlCLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFNBQVEsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGVBQWMsVUFBVyxDQUFDLFlBQVcsUUFBTyxXQUFVLGFBQVksV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxTQUFRLFNBQVEsU0FBUSxRQUFPLFdBQVUsUUFBTyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxRQUFPLFFBQVMsU0FBRyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFNBQVEsZUFBYyxZQUFXLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxT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RUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxVQUFTLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFVBQVMsU0FBUSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxxQkFBb0IsVUFBVyxDQUFDLFVBQVMsU0FBUSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZ0JBQWlCLEVBQUMsSUFBSyxrQkFBaUIsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFVBQVMsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxVQUFTLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxVQUFTLFdBQVUsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNB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LDJCQUEwQixNQUFPLGlCQUFnQixVQUFXLENBQUMsUUFBTyxRQUFPLFFBQU8sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxRQUFPLFVBQVcsQ0FBQyxPQUFNLFVBQVMsVUFBUyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBUyxRQUFPLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFlBQVcsVUFBVyxDQUFDLFFBQU8sVUFBUyxPQUFNLFFBQU8sUUFBTyxPQUFNLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsTUFBSyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFFBQU8sS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxVQUFTLFVBQVcsQ0FBQyxPQUFNLFlBQVcsVUFBUyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLGFBQVksVUFBVyxDQUFDLFNBQVEsUUFBTyxLQUFJLFFBQU8sU0FBUSxRQUFPLFFBQU8sT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFNBQVEsU0FBUSxTQUFRLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLGVBQWMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxRQUFPLFdBQVUsT0FBTSxZQUFZLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFFBQU8sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxPQUFNLFVBQVMsU0FBUSxTQUFRLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxRQUFPLFVBQVMsWUFBVyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFVBQVMsY0FBYyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxTQUFRLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsVUFBUyxTQUFRLGFBQWEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsU0FBUSxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxjQUFhLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sY0FBYSxVQUFXLENBQUMsVUFBUyxTQUFRLFNBQVEsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLGNBQWEsVUFBVyxDQUFDLFVBQVMsU0FBUSxTQUFRLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsYUFBWSxRQUFTLGVBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxnQkFBZSxVQUFXLENBQUMsWUFBVyxTQUFRLFNBQVEsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLGFBQVksVUFBVyxDQUFDLFNBQVEsU0FBUSxTQUFRLFNBQVEsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsYUFBWSxRQUFTLGVBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxZQUFZLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLFNBQVEsVUFBVyxDQUFDLFNBQVEsU0FBUSxTQUFRLFFBQU8sUUFBTyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLHNCQUFxQixVQUFXLENBQUMsUUFBTyxRQUFPLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLHNCQUF1QixFQUFDLElBQUssd0JBQXVCLE1BQU8sd0JBQXVCLFVBQVcsQ0FBQyxRQUFPLFVBQVMsS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGlCQUFrQixFQUFDLElBQUssbUJBQWtCLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxVQUFTLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLG9CQUFxQixFQUFDLElBQUssc0JBQXFCLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxTQUFRLFFBQU8sYUFBYSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxPQUFNLFVBQVMsU0FBUSxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsVUFBUyxVQUFTLFNBQVEsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsUUFBTyxXQUFVLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsUUFBTyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLFdBQVUsVUFBVyxDQUFDLGNBQWEsV0FBVSxlQUFjLFlBQVcsU0FBUSxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxpQkFBa0IsRUFBQyxJQUFLLG1CQUFrQixNQUFPLGNBQWEsVUFBVyxDQUFDLFFBQU8sUUFBTyxRQUFPLGFBQWEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFFBQU8sY0FBYSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLFVBQVMsY0FBYSxhQUFZLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxXQUFVLFVBQVcsQ0FBQyxTQUFRLFVBQVMsVUFBUyxXQUFVLFNBQVEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxXQUFVLFVBQVcsQ0FBQyxTQUFRLFVBQVMsS0FBSSxXQUFVLFNBQVEsVUFBUyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFdBQVUsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFPLFVBQVMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxTQUFRLFVBQVMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLGFBQVksU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxXQUFVLFdBQVUsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxTQUFRLFdBQVUsU0FBUSxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLHNCQUFxQixFQUFDLElBQUssc0JBQXFCLE1BQU8sc0JBQXFCLFVBQVcsQ0FBQyxPQUFNLFNBQVEsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsWUFBVyxVQUFTLFNBQVEsUUFBTyxXQUFVLFNBQVEsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdCQUFpQixFQUFDLElBQUssa0JBQWlCLE1BQU8sa0JBQWlCLFVBQVcsQ0FBQyxTQUFRLEtBQUksV0FBVSxZQUFXLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGtCQUFtQixFQUFDLElBQUssb0JBQW1CLE1BQU8sb0JBQW1CLFVBQVcsQ0FBQyxZQUFXLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsV0FBVSxlQUFjLFNBQVEsU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFdBQVUsYUFBWSxlQUFjLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsVUFBUyxPQUFNLGVBQWMsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFFBQU8sT0FBTSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdCQUFpQixFQUFDLElBQUssa0JBQWlCLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxXQUFVLFdBQVUsYUFBWSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyxnQkFBZSxVQUFXLENBQUMsWUFBVyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLE9BQU0sS0FBSSxXQUFVLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxlQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFlBQVcsU0FBUSxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsZUFBYyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsa0JBQW1CLEVBQUMsSUFBSyxvQkFBbUIsTUFBTyxhQUFZLFVBQVcsQ0FBQyxVQUFTLFVBQVMsUUFBTyxNQUFLLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sb0JBQW1CLFVBQVcsQ0FBQyxRQUFPLFFBQU8sVUFBUyxXQUFVLFNBQVEsVUFBUyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxTQUFRLEtBQUksU0FBUSxXQUFVLFFBQU8sT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFFBQU8sU0FBUSxLQUFJLFNBQVEsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsUUFBTyxPQUFNLFVBQVMsV0FBVSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFNBQVEsS0FBSSxXQUFVLGVBQWMsVUFBUyxRQUFPLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sV0FBVSxVQUFXLENBQUMsVUFBUyxTQUFRLGFBQVksVUFBUyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsY0FBZSxFQUFDLElBQUssZ0JBQWUsTUFBTyxrQkFBaUIsVUFBVyxDQUFDLFVBQVMsU0FBUSxVQUFTLFdBQVUsVUFBUyxjQUFhLE9BQU0sU0FBUSxTQUFRLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sY0FBYSxVQUFXLENBQUMsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGlCQUFrQixFQUFDLElBQUssbUJBQWtCLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxRQUFPLFlBQVksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSx5QkFBMEIsRUFBQyxJQUFLLDJCQUEwQixNQUFPLCtCQUF5QixVQUFXLENBQUMsUUFBTyxTQUFRLFNBQVEsVUFBUyxLQUFJLGdCQUFlLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxTQUFRLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sWUFBVyxVQUFXLENBQUMsVUFBUyxRQUFPLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxXQUFVLFdBQVUsWUFBVyxjQUFhLFdBQVUsV0FBVSxXQUFVLE9BQU0sWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxhQUFZLFVBQVcsQ0FBQyxRQUFPLFFBQU8sV0FBVSxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLGlCQUFnQixVQUFXLENBQUMsUUFBTyxTQUFRLFVBQVMsV0FBVSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLE9BQU0sVUFBUyxTQUFRLFdBQVUsV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyx5QkFBd0IsVUFBVyxDQUFDLFNBQVEsV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyx1QkFBc0IsVUFBVyxDQUFDLFFBQU8sU0FBUSxTQUFRLFNBQVEsV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxH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VyxDQUFDLFVBQVMsYUFBWSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLGVBQWMsVUFBVyxDQUFDLGlCQUFnQixZQUFZLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFNBQVEsVUFBUyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsYUFBYyxFQUFDLElBQUssZUFBYyxNQUFPLGVBQWMsVUFBVyxDQUFDLFdBQVUsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxVQUFTLFVBQVcsQ0FBQyxZQUFXLGNBQWEsVUFBUyxXQUFVLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxrQkFBbUIsRUFBQyxJQUFLLG9CQUFtQixNQUFPLG9CQUFtQixVQUFXLENBQUMsY0FBYSxhQUFZLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFNBQVEsS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsY0FBYSxRQUFT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QUFDLGVBQWMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLE9BQU0sVUFBUyxTQUFRLGFBQVksT0FBTSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLGdDQUErQixVQUFXLENBQUMsT0FBTSxVQUFTLFFBQU8sUUFBTyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGlDQUFnQyxVQUFXLENBQUMsT0FBTSxVQUFTLFFBQU8sUUFBTyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFFBQU8sS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sY0FBYSxVQUFXLENBQUMsZUFBYyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFFBQU8sV0FBVSxTQUFRLE9BQU8sR0FBRSxPQUFRLENB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UyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsU0FBUSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUscUJBQXNCLEVBQUMsSUFBSyx1QkFBc0IsTUFBTyx1QkFBc0IsVUFBVyxDQUFDLFVBQVMsTUFBSyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsZUFBZ0IsRUFBQyxJQUFLLGlCQUFnQixNQUFPLGlCQUFnQixVQUFXLENBQUMsWUFBVyxRQUFPLFNBQVEsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFVBQVcsRUFBQyxJQUFLLFlBQVcsTUFBTyxZQUFXLFVBQVcsQ0FBQyxZQUFXLFNBQVEsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFPLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGNBQWEsUUFBUyxrQkFBSyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLGFBQVksVUFBVyxDQUFDLFlBQVcsVUFBUyxXQUFVLFNBQVEsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxLQUFNLEVBQUMs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a0JBQWlCLFVBQVcsQ0FBQyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFFBQU8sV0FBVSxhQUFZLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsY0FBYSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLE9BQU0sTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxTQUFRLE9BQU0sUUFBTyxPQUFNLFlBQVksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGNBQWUsRUFBQyxJQUFLLGdCQUFlLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLFNBQVEsU0FBUSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sU0FBUSxVQUFXLENBQUMsZUFBYyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFVBQVMsT0FBTSxZQUFXLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGNBQWEsVUFBVyxDQUFDLFdBQVUsZUFBZSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxTQUFRLEtBQUssR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsUUFBTyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsU0FBUSxPQUFNLE9BQU0sY0FBYSxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLGNBQWEsVUFBVSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLGNBQWEsV0FBVSxjQUFhLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFZLEVBQUMsSUFBSyxhQUFZLE1BQU8sYUFBWSxVQUFXLENBQUMsYUFBWSxjQUFhLE9BQU0sU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFlBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxZQUFXLFdBQVUsV0FBVSxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLE9BQU0sVUFBVyxDQUFDLGFBQVksWUFBVyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLGNBQWEsY0FBYSxVQUFTLFdBQVUsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxTQUFRLFNBQVEsUUFBTyxXQUFVLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxtQkFBb0IsRUFBQyxJQUFLLHFCQUFvQixNQUFPLHFCQUFvQixVQUFXLENBQUMsaUJBQWdCLFVBQVMsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFVBQVMsWUFBVyxTQUFRLFNBQVEsWUFBVyxVQUFTLFVBQVMsT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLFVBQVMsUUFBTyxRQUFPLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxNQUFPLEVBQUMsSUFBSyxRQUFPLE1BQU8sUUFBTyxVQUFXLENBQUMsVUFBUyxZQUFXLFVBQVMsWUFBVyxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsa0JBQW1CLEVBQUMsSUFBSyxvQkFBbUIsTUFBTyxvQkFBbUIsVUFBVyxDQUFDLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsaUJBQWdCLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFNBQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxLQUFJLE9BQU0sWUFBVyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLFFBQU8sVUFBVyxDQUFDLFNBQVEsU0FBUSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsVUFBVyxFQUFDLElBQUssWUFBVyxNQUFPLFlBQVcsVUFBVyxDQUFDLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsWUFBWSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLE9BQU0sVUFBVyxDQUFDLFNBQVEsTUFBTSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsY0FBYSxRQUFTLGtCQUFLLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxnQkFBaUIsRUFBQyxJQUFLLGtCQUFpQixNQUFPLGtCQUFpQixVQUFXLENBQUMsUUFBTyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxjQUFhLFFBQVMsa0JBQUssQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxPQUFNLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsWUFBVyxNQUFLLFlBQVcsWUFBVyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsU0FBUSxTQUFRLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsU0FBUSxVQUFTLFVBQVUsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sY0FBYSxVQUFXLENBQUMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxLQUFLLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsZUFBZ0IsRUFBQyxJQUFLLGlCQUFnQixNQUFPLGlCQUFnQixVQUFXLENBQUMsZUFBYyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsWUFBYSxFQUFDLElBQUssY0FBYSxNQUFPLGNBQWEsVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsWUFBVyxZQUFXLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGVBQWdCLEVBQUMsSUFBSyxpQkFBZ0IsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLFNBQVEsV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLE1BQU8sRUFBQyxJQUFLLFFBQU8sTUFBTyxRQUFPLFVBQVcsQ0FBQyxPQUFNLFdBQVUsWUFBVyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsU0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLFdBQVUsVUFBVyxDQUFDLFFBQU8sT0FBTSxlQUFjLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxZQUFhLEVBQUMsSUFBSyxjQUFhLE1BQU8sY0FBYSxVQUFXLENBQUMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsUUFBUyxFQUFDLElBQUssVUFBUyxNQUFPLFVBQVMsVUFBVyxDQUFDLGFBQVksWUFBVyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsbUJBQW9CLEVBQUMsSUFBSyxxQkFBb0IsTUFBTyxxQkFBb0IsVUFBVyxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxrQkFBbUIsRUFBQyxJQUFLLG9CQUFtQixNQUFPLGlCQUFnQixVQUFXLENBQUMsU0FBUyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFNBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxhQUFZLFVBQVcsQ0FBQyxXQUFVLFNBQVEsV0FBVSxTQUFRLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxRQUFTLEVBQUMsSUFBSyxVQUFTLE1BQU8sVUFBUyxVQUFXLENBQUMsV0FBVSxRQUFPLE9BQU0sU0FBUSxPQUFNLGFBQVksWUFBVyxVQUFTLFdBQVUsS0FBSyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsYUFBWSxRQUFTLGVBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVksRUFBQyxJQUFLLGFBQVksTUFBTyxhQUFZLFVBQVcsQ0FBQyxTQUFRLE9BQU0sT0FBTyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLGFBQWMsRUFBQyxJQUFLLGVBQWMsTUFBTyxlQUFjLFVBQVcsQ0FBQyxRQUFPLE9BQU0sU0FBUSxPQUFNLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxjQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxRQUFPLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEdBQUUsR0FBRSxPQUFRLEVBQUMsSUFBSyxTQUFRLE1BQU8sU0FBUSxVQUFXLENBQUMsWUFBVyxZQUFZLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFFBQU8sVUFBVyxDQUFDLFNBQVEsUUFBTyxVQUFTLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxTQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sV0FBVSxVQUFXLENBQUMsY0FBYyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsU0FBUSxRQUFTLFlBQUksQ0FBQyxHQUFFLFNBQVUsR0FBRSxHQUFFLHFCQUFzQixFQUFDLElBQUssdUJBQXNCLE1BQU8sdUJBQXNCLFVBQVcsQ0FBQyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxHQUFFLEdBQUUsS0FBTSxFQUFDLElBQUssT0FBTSxNQUFPLFlBQVcsVUFBVyxDQUFDLFNBQVEsU0FBUSxRQUFPLFFBQU8sVUFBUyxXQUFVLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENB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LE9BQVEsQ0FBQyxFQUFDLFNBQVUsUUFBTyxRQUFTLFNBQUcsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFFBQVMsRUFBQyxJQUFLLFVBQVMsTUFBTyxVQUFTLFVBQVcsQ0FBQyxRQUFPLFVBQVMsVUFBUyxVQUFTLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxLQUFNLEVBQUMsSUFBSyxPQUFNLE1BQU8sT0FBTSxVQUFXLENBQUMsUUFBTyxVQUFTLFVBQVMsVUFBUyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxRQUFPLFFBQVMsU0FBRyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsT0FBUSxFQUFDLElBQUssU0FBUSxNQUFPLFNBQVEsVUFBVyxDQUFDLFFBQU8sVUFBUyxVQUFTLFVBQVMsV0FBVyxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsUUFBTyxRQUFTLFNBQUcsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLE9BQVEsRUFBQyxJQUFLLFNBQVEsTUFBTyxTQUFRLFVBQVcsQ0FBQyxRQUFPLFVBQVMsVUFBUyxVQUFTLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxVQUFXLEVBQUMsSUFBSyxZQUFXLE1BQU8sV0FBVSxVQUFXLENBQUMsWUFBVyxRQUFPLFVBQVMsVUFBUyxVQUFTLFdBQVcsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxhQUFjLEVBQUMsSUFBSyxlQUFjLE1BQU8sZUFBYyxVQUFXLENBQUMsUUFBTyxVQUFTLFVBQVMsVUFBUyxXQUFXLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxRQUFPLFFBQVMsU0FBRyxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBWSxFQUFDLElBQUssYUFBWSxNQUFPLGFBQVksVUFBVyxDQUFDLFFBQU8sVUFBUyxVQUFT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Q0FBQyxZQUFXLFNBQVEsT0FBTSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLGVBQWMsVUFBVyxDQUFDLFNBQVEsUUFBTyxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsTUFBTyxFQUFDLElBQUssUUFBTyxNQUFPLGVBQWMsVUFBVyxDQUFDLFFBQU8sVUFBUyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsb0JBQXFCLEVBQUMsSUFBSyxzQkFBcUIsTUFBTyxlQUFjLFVBQVcsQ0FBQyxVQUFTLFFBQU8sVUFBUyxZQUFXLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxJQUFLLEVBQUMsSUFBSyxNQUFLLE1BQU8sYUFBWSxVQUFXLENBQUMsVUFBUyxVQUFTLE9BQU8sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFNBQVEsUUFBUyxZQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxHQUFJLEVBQUMsSUFBSyxLQUFJLE1BQU8sYUFBWSxVQUFXLENBQUMsWUFBVyxRQUFPLFVBQVMsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsYUFBWSxRQUFTLGVBQUksQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLEtBQU0sRUFBQyxJQUFLLE9BQU0sTUFBTyxjQUFhLFVBQVcsQ0FBQyxRQUFPLFVBQVMsU0FBUSxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxTQUFRLFFBQVMsWUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsSUFBSyxFQUFDLElBQUssTUFBSyxNQUFPLGFBQVksVUFBVyxDQUFDLFFBQU8sVUFBUyxTQUFRLFNBQVEsTUFBTSxH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QXFCLEVBQUMsSUFBSyxzQkFBcUIsTUFBTyxzQkFBcUIsVUFBVyxDQUFDLFNBQVEsUUFBTyxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxxQkFBc0IsRUFBQyxJQUFLLHVCQUFzQixNQUFPLHVCQUFzQixVQUFXLENBQUMsU0FBUSxVQUFTLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxxQkFBc0IsRUFBQyxJQUFLLHVCQUFzQixNQUFPLHVCQUFzQixVQUFXLENBQUMsU0FBUSxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSwyQkFBNEIsRUFBQyxJQUFLLDZCQUE0QixNQUFPLDZCQUE0QixVQUFXLENBQUMsUUFBTyxTQUFRLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLFFBQU8sUUFBUyxTQUFHLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSwyQkFBNEIsRUFBQyxJQUFLLDZCQUE0QixNQUFPLDZCQUE0QixVQUFXLENBQUMsU0FBUSxTQUFRLFFBQU8sUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsUUFBTyxRQUFTLFNBQUcsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLG9CQUFxQixFQUFDLElBQUssc0JBQXFCLE1BQU8sc0JBQXFCLFVBQVcsQ0FBQyxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGFBQVksUUFBUyxlQUFJLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxvQkFBcUIsRUFBQyxJQUFLLHNCQUFxQixNQUFPLHNCQUFxQixVQUFXLENBQUMsU0FBUSxNQUFNLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxhQUFZLFFBQVMsZUFBSSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsc0JBQXVCLEVBQUMsSUFBSyx3QkFB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LEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGNBQWEsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLDBCQUFzQixVQUFXLENBQUMsTUFBSyxNQUFLLGNBQWEsU0FBUSxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGVBQWMsVUFBVyxDQUFDLE1BQUssY0FBYSxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLDhCQUE2QixVQUFXLENBQUMsTUFBSyxXQUFVLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxlQUFjLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZUFBYyxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sc0JBQXFCLFVBQVcsQ0FBQyxNQUFLLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGlCQUFnQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGVBQWMsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElB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QUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGFBQVksVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLG1CQUFrQixVQUFXLENBQUMsTUFBSyxRQUFPLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxtQkFBZSxVQUFXLENBQUMsTUFBSyxXQUFVLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyx5QkFBd0IsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGVBQWMsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLElBQUssRUFBQyxJQUFLLE1BQUssTUFBTyxnQkFBZSxVQUFXLENBQUMsTUFBSyxVQUFTLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxxQkFBb0IsVUFBVyxDQUFDLElBQUksR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGlCQUFnQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGlCQUFnQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sMkJBQTBCLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sd0JBQXVCLFVBQVcsQ0FBQyxJQUFJLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGNBQWEsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLHVCQUFzQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsSUFBSyxFQUFDLElBQUssTUFBSyxNQUFPLGNBQWEsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGlCQUFnQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sdUJBQXNCLFVBQVcsQ0FBQyxNQUFLLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxhQUFZLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyx5QkFBd0IsVUFBVyxDQUFDLE1BQUssWUFBVyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxNQUFLLGFBQVksVUFBUyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sc0JBQXFCLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLElBQUssRUFBQyxJQUFLLE1BQUssTUFBTyxlQUFjLFVBQVcsQ0FBQyxNQUFLLFVBQVMsVUFBUyxVQUFTLFNBQVMsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGNBQWEsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsSUFBSyxFQUFDLElBQUssTUFBSyxNQUFPLHVCQUFzQixVQUFXLENBQUMsTUFBSyxNQUFLLFNBQVEsV0FBVSxZQUFXLFdBQVUsVUFBUyxXQUFVLFVBQVMsV0FBVSxNQUFLLFdBQVUsV0FBVSxTQUFRLE1BQU0sR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sc0JBQXFCLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxpQkFBZ0IsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGNBQWEsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FB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QUFDLElBQUssV0FBVSxNQUFPLGlCQUFnQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGNBQWEsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyx1QkFBc0IsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGtCQUFpQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGVBQWMsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLG9CQUFtQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sY0FBYSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sdUNBQXNDLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxhQUFZLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxhQUFZLFVBQVcsQ0FBQyxNQUFLLFdBQVUsWUFBVyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsSUFBSyxFQUFDLElBQUssTUFBSyxNQUFPLGNBQWEsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGVBQWMsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxlQUFjLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLElBQUssRUFBQyxJQUFLLE1BQUssTUFBTyxjQUFhLFVBQVcsQ0FBQyxNQUFLLFlBQVcsVUFBUyxXQUFVLFVBQVMsSUFBSSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sY0FBYSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sbUJBQWtCLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFB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QVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxlQUFjLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxjQUFhLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxjQUFhLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxhQUFZLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxvQkFBbUIsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGFBQVksVUFBVyxDQUFDLE1BQUssVUFBUyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZUFBYyxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFB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LEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxtQkFBZSxVQUFXLENBQUMsTUFBSyxXQUFVLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZUFBYyxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxJQUFLLEVBQUMsSUFBSyxNQUFLLE1BQU8sZUFBYyxVQUFXLENBQUMsTUFBSyxXQUFVLGNBQWEsVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLGVBQWMsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLHFCQUFvQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sd0JBQXVCLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxR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U0FBUSxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8scUJBQW9CLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxnQkFBZSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sY0FBYSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZUFBYyxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sMEJBQXlCLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxlQUFjLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLFdBQVUsRUFBQyxJQUFLLFdBQVUsTUFBTyxlQUFjLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FB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QUFlLFVBQVcsQ0FBQyxNQUFLLFFBQU8sT0FBTSxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLHdCQUF1QixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sY0FBYSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZUFBYyxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sY0FBYSxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZ0JBQWUsVUFBVyxDQUFDLE1BQUssVUFBUyxXQUFVLFFBQVEsR0FBRSxPQUFRLENBQUMsRUFBQyxTQUFVLGVBQWMsUUFBUyxxQkFBTSxDQUFDLEdBQUUsU0FBVSxFQUFDLEdBQUUsV0FBVSxFQUFDLElBQUssV0FBVSxNQUFPLHFCQUFvQixVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8sZUFBYyxVQUFXLENBQUMsTUFBSyxVQUFTLFdBQVUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxFQUFDLFNBQVUsZUFBYyxRQUFTLHFCQUFNLENBQUMsR0FBRSxTQUFVLEVBQUMsR0FBRSxXQUFVLEVBQUMsSUFBSyxXQUFVLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxNQUFLLFVBQVMsV0FBVSxRQUFRLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSxlQUFjLFFBQVMscUJBQU0sQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGdCQUFlLEVBQUMsSUFBSyxnQkFBZSxNQUFPLGdCQUFlLFVBQVcsQ0FBQyxTQUFTLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSw2Q0FBNEMsUUFBUyxrRUFBZ0IsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGlCQUFnQixFQUFDLElBQUssaUJBQWdCLE1BQU8saUJBQWdCLFVBQVcsQ0FBQyxVQUFVLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSw2Q0FBNEMsUUFBUyxrRUFBZ0IsQ0FBQyxHQUFFLFNBQVUsRUFBQyxHQUFFLGNBQWEsRUFBQyxJQUFLLGNBQWEsTUFBTyxjQUFhLFVBQVcsQ0FBQyxPQUFPLEdBQUUsT0FBUSxDQUFDLEVBQUMsU0FBVSw2Q0FBNEMsUUFBUyxrRUFBZ0IsQ0FBQyxHQUFFLFNBQVUsRUFBQyxFQUFDLEdBQUUsU0FBVSxFQUFDLFdBQVksWUFBVyw4QkFBK0IsZUFBYyxnREFBaUQsYUFBWSx3REFBeUQsNkJBQTRCLHVDQUF3QyxpQkFBZ0IsOEJBQStCLDRCQUEyQiwrQkFBZ0MsaUJBQWdCLGtDQUFtQyxrQkFBaUIsMENBQTJDLDhCQUE2QixNQUFPLFVBQVMsTUFBTyxVQUFTLFdBQVksUUFBTyxhQUFjLFFBQU8sNENBQTZDLG1CQUFrQixtQkFBb0IsYUFBWSwyQ0FBNEMsaUJBQWdCLFVBQVcsTUFBSyxZQUFhLE1BQUssT0FBUSxhQUFZLGtCQUFtQixhQUFZLFNBQVUsVUFBUyxnQ0FBK0IsZ0NBQStCLGtDQUFpQyxrQ0FBaUMscUJBQXNCLDJCQUEwQiw2QkFBOEIsK0JBQThCLFFBQVMsK0JBQThCLG1CQUFvQix5QkFBd0IsWUFBYSxRQUFPLFNBQVUsV0FBVSxVQUFXLE9BQU0sYUFBYyxXQUFVLFNBQVUsYUFBWSxPQUFRLFNBQVEsU0FBVSxPQUFNLFVBQVcsUUFBTyxxQkFBc0IsUUFBTyxpQkFBa0IsZ0JBQWUsa0JBQW1CLGdCQUFlLHVCQUF3QixxQkFBb0IsaUJBQWtCLGFBQVksZUFBZ0IsV0FBVSxRQUFTLFNBQVEsTUFBTyxhQUFZLFdBQVksU0FBUSxTQUFVLG1CQUFrQixXQUFZLFFBQU8sVUFBVyxTQUFRLFFBQVMsUUFBTyx3QkFBeUIsZUFBYyxzQkFBdUIsa0JBQWlCLFdBQVUsTUFBSyxXQUFVLE1BQUssV0FBVSxNQUFLLFdBQVUsTUFBSyxJQUFLLE1BQUssV0FBVSxNQUFLLFdBQVUsTUFBSyxXQUFVLE1BQUssV0FBVSxNQUFLLFdBQVUsTUFBSyxXQUFVLEtBQUksR0FBRSxPQUFRLEVBQUMsTUFBTyxJQUFHLE1BQU8sR0FBRSxFQUFDOzs7Ozs7QUlBMzZyWixTQUFBLHlDQUF5QixLQUFLLEtBQUssT0FBTztBQUN2RCxNQUFJLE9BQU8sSUFDVCxRQUFPLGVBQWUsS0FBSyxLQUFLO0lBQzlCO0lBQ0EsWUFBWTtJQUNaLGNBQWM7SUFDZCxVQUFVO0dBQ1g7TUFFRCxLQUFJLEdBQUcsSUFBSTtBQUdiLFNBQU87O0FJWkYsSUMwQk1DO0FEMUJOLElFV0RDO0FGWEMsSUdHSEM7QUhIRyxJR2dHTUM7QUhoR04sSUkwS0hDO0FKMUtHLElJa0xEQztBSmxMQyxJSWdNSEM7QUpoTUcsSUtFSUM7QUxGSixJQUFNQywwQkFBWSxDQUFBO0FBQWxCLElBQ01DLDBCQUFZLENBQUE7QUFEbEIsSUFFTUMsMEJBQUFBO0FDT04sU0FBU0Msd0JBQU9DLElBQUtDLElBQUFBO0FBQUFBLFdBRWxCTixNQUFLTSxHQUFPRCxJQUFJTCxFQUFBQSxJQUFLTSxHQUFNTixFQUFBQTtBQUFBQSxTQUNQSzs7QUFTdkIsU0FBU0Usd0JBQVdDLElBQUFBO0FBQUFBLE1BQ3RCQyxLQUFhRCxHQUFLQztBQUNsQkEsUUFBWUEsR0FBV0MsWUFBWUYsRUFBQUE7O0FFVnhDLFNBQWdCRywwQ0FBY0MsSUFBTU4sSUFBT08sSUFBQUE7QUFBQUEsTUFFekNDLElBQ0FDLElBQ0FmLElBSEdnQixLQUFrQixDQUFBO0FBQUEsT0FJakJoQixNQUFLTSxHQUNBLFVBQUxOLEtBQVljLEtBQU1SLEdBQU1OLEVBQUFBLElBQ2QsU0FBTEEsS0FBWWUsS0FBTVQsR0FBTU4sRUFBQUEsSUFDNUJnQixHQUFnQmhCLEVBQUFBLElBQUtNLEdBQU1OLEVBQUFBO0FBQUFBLE1BRzdCaUIsVUFBVUMsU0FBUyxNQUN0QkYsR0FBZ0JILFdBQ2ZJLFVBQVVDLFNBQVMsSUFBSXpCLHdCQUFNMEIsS0FBS0YsV0FBVyxDQUFBLElBQUtKLEtBS2pDLGNBQUEsT0FBUkQsTUFBMkMsUUFBckJBLEdBQUtRLGFBQUFBLE1BQ2hDcEIsTUFBS1ksR0FBS1EsYUFBQUEsWUFDVkosR0FBZ0JoQixFQUFBQSxNQUNuQmdCLEdBQWdCaEIsRUFBQUEsSUFBS1ksR0FBS1EsYUFBYXBCLEVBQUFBO0FBQUFBLFNBS25DcUIsd0JBQVlULElBQU1JLElBQWlCRixJQUFLQyxJQUFLLElBQUE7O0FBZTlDLFNBQVNNLHdCQUFZVCxJQUFNTixJQUFPUSxJQUFLQyxJQUFLTyxJQUFBQTtBQUFBQSxNQUc1Q0MsS0FBUTtJQUNiWCxNQUFBQTtJQUNBTixPQUFBQTtJQUNBUSxLQUFBQTtJQUNBQyxLQUFBQTtJQUFBQSxLQUNXO0lBQUEsSUFDRjtJQUFBLEtBQ0Q7SUFBQSxLQUNGO0lBQUEsS0FBQTtJQUtJUyxLQUNFO0lBQUEsS0FDQTtJQUNaQyxhQUFBQTtJQUFhRCxLQUNVLFFBQVpGLEtBQUFBLEVBQXFCM0IsMEJBQVUyQjs7QUFBQUEsU0FJM0IsUUFBWkEsTUFBcUMsUUFBakI1QiwwQ0FBUTZCLFNBQWU3QiwwQ0FBUTZCLE1BQU1BLEVBQUFBLEdBRXREQTs7QUFHUixTQUFnQkcsNENBQUFBO0FBQUFBLFNBQ1I7SUFBRUMsU0FBUzs7O0FBR1osU0FBU0MsMENBQVN0QixJQUFBQTtBQUFBQSxTQUNqQkEsR0FBTU87O0FDNUVQLFNBQVNnQiwwQ0FBVXZCLElBQU93QixJQUFBQTtBQUFBQSxPQUMzQnhCLFFBQVFBLElBQUFBLEtBQ1J3QixVQUFVQTs7QUF5RVQsU0FBU0Msd0JBQWNSLElBQU9TLElBQUFBO0FBQUFBLE1BQ2xCLFFBQWRBLEdBQUFBLFFBRUlULEdBQUFBLEtBQ0pRLHdCQUFjUixHQUFBQSxJQUFlQSxHQUFBQSxHQUFBQSxJQUF3QlUsUUFBUVYsRUFBQUEsSUFBUyxDQUFBLElBQ3RFO0FBQUEsV0FHQVcsSUFDR0YsS0FBYVQsR0FBQUEsSUFBZ0JMLFFBQVFjLEtBQUFBLEtBRzVCLFNBRmZFLEtBQVVYLEdBQUFBLElBQWdCUyxFQUFBQSxNQUVhLFFBQWhCRSxHQUFBQSxJQUFBQSxRQUlmQSxHQUFBQTtBQUFBQSxTQVNtQixjQUFBLE9BQWRYLEdBQU1YLE9BQXFCbUIsd0JBQWNSLEVBQUFBLElBQVM7O0FBdUNqRSxTQUFTWSx3QkFBd0JaLElBQUFBO0FBQWpDLE1BR1d2QixJQUNKb0M7QUFBQUEsTUFIeUIsU0FBMUJiLEtBQVFBLEdBQUFBLE9BQThDLFFBQXBCQSxHQUFBQSxLQUEwQjtBQUFBLFNBQ2hFQSxHQUFBQSxNQUFhQSxHQUFBQSxJQUFpQmMsT0FBTyxNQUM1QnJDLEtBQUksR0FBR0EsS0FBSXVCLEdBQUFBLElBQWdCTCxRQUFRbEIsS0FBQUEsS0FFOUIsU0FEVG9DLEtBQVFiLEdBQUFBLElBQWdCdkIsRUFBQUEsTUFDTyxRQUFkb0MsR0FBQUEsS0FBb0I7QUFDeENiLFNBQUFBLE1BQWFBLEdBQUFBLElBQWlCYyxPQUFPRCxHQUFBQTtBQUFBQTs7QUFBQUEsV0FLaENELHdCQUF3QlosRUFBQUE7OztBQW9DMUIsU0FBU2Usd0JBQWNDLElBQUFBO0FBQUFBLEdBQUFBLENBRTFCQSxHQUFBQSxRQUNBQSxHQUFBQSxNQUFBQSxTQUNEMUMsd0JBQWMyQyxLQUFLRCxFQUFBQSxLQUFBQSxDQUNsQkUsd0JBQUFBLFNBQ0YxQyw0QkFBaUJMLDBDQUFRZ0Qsd0JBRXpCM0MsMEJBQWVMLDBDQUFRZ0Qsc0JBQ041Qyx5QkFBTzJDLHVCQUFBQTs7QUFLMUIsU0FBU0EsMEJBQUFBO0FBQUFBLFdBQ0pFLElBQ0lGLHdCQUFBQSxNQUF5QjVDLHdCQUFjcUIsU0FDOUN5QixNQUFROUMsd0JBQWMrQyxLQUFLLFNBQUNDLEtBQUdDLElBQUFBO0FBQUFBLFdBQU1ELElBQUFBLElBQUFBLE1BQWtCQyxHQUFBQSxJQUFBQTtHQUFBQSxHQUN2RGpELDBCQUFnQixDQUFBLEdBR2hCOEMsR0FBTUksS0FBSyxTQUFBUixLQUFBQTtBQXBHYixRQUF5QlMsSUFNbkJDLElBQ0VDLElBTkgzQixJQUNINEIsSUFDQUM7QUFrR0tiLFFBQUFBLFFBbkdMWSxNQURHNUIsTUFEb0J5QixLQXFHUVQsS0FBQUEsS0FBQUEsTUFsRy9CYSxLQUFZSixHQUFBQSxTQUdSQyxLQUFjLENBQUEsSUFDWkMsS0FBVzlDLHdCQUFPLENBQUEsR0FBSW1CLEVBQUFBLEdBQUFBLE1BQ1BBLEdBQUFBLE1BQWtCLEdBRXZDOEIsd0JBQ0NELElBQ0E3QixJQUNBMkIsSUFDQUYsR0FBQUEsS0FBQUEsV0FDQUksR0FBVUUsaUJBQ1UsUUFBcEIvQixHQUFBQSxNQUEyQjtNQUFDNEI7UUFBVSxNQUN0Q0YsSUFDVSxRQUFWRSxLQUFpQnBCLHdCQUFjUixFQUFBQSxJQUFTNEIsSUFDeEM1QixHQUFBQSxHQUFBQSxHQUVEZ0Msd0JBQVdOLElBQWExQixFQUFBQSxHQUVwQkEsR0FBQUEsT0FBYzRCLE1BQ2pCaEIsd0JBQXdCWixFQUFBQTtHQUFBQTs7QUV0SDNCLFNBQWdCaUMsd0JBQ2ZKLEtBQ0FLLElBQ0FDLElBQ0FDLElBQ0FDLElBQ0FDLElBQ0FDLElBQ0FiLElBQ0FFLElBQ0FZLElBQUFBO0FBVkQsTUFZSy9ELElBQUdnRSxJQUFHZCxJQUFVZSxJQUFZQyxJQUFRQyxJQUFlQyxJQUluREMsS0FBZVYsTUFBa0JBLEdBQUFBLE9BQTZCekQseUJBRTlEb0UsS0FBb0JELEdBQVluRDtBQUFBQSxPQUVwQ3dDLEdBQUFBLE1BQTJCLENBQUEsR0FDdEIxRCxLQUFJLEdBQUdBLEtBQUl5RCxHQUFhdkMsUUFBUWxCLEtBQUFBLEtBZ0RsQixTQTVDakJpRSxLQUFhUCxHQUFBQSxJQUF5QjFELEVBQUFBLElBRHJCLFNBRmxCaUUsS0FBYVIsR0FBYXpELEVBQUFBLE1BRXFCLGFBQUEsT0FBZGlFLEtBQ1csT0FNdEIsWUFBQSxPQUFkQSxNQUNjLFlBQUEsT0FBZEEsTUFFYyxZQUFBLE9BQWRBLEtBRW9DNUMsd0JBQzFDLE1BQ0E0QyxJQUNBLE1BQ0EsTUFDQUEsRUFBQUEsSUFFU00sTUFBTUMsUUFBUVAsRUFBQUEsSUFDbUI1Qyx3QkFDMUNPLDJDQUNBO0lBQUVmLFVBQVVvRDtLQUNaLE1BQ0EsTUFDQSxJQUFBLElBRVNBLEdBQUFBLE1BQW9CLElBS2E1Qyx3QkFDMUM0QyxHQUFXckQsTUFDWHFELEdBQVczRCxPQUNYMkQsR0FBV25ELEtBQ1gsTUFDQW1ELEdBQUFBLEdBQUFBLElBRzBDQSxLQUFBQTtBQUFBQSxRQVM1Q0EsR0FBQUEsS0FBcUJQLElBQ3JCTyxHQUFBQSxNQUFvQlAsR0FBQUEsTUFBd0IsR0FTOUIsVUFIZFIsS0FBV21CLEdBQVlyRSxFQUFBQSxNQUlyQmtELE1BQ0FlLEdBQVduRCxPQUFPb0MsR0FBU3BDLE9BQzNCbUQsR0FBV3JELFNBQVNzQyxHQUFTdEMsS0FFOUJ5RCxJQUFZckUsRUFBQUEsSUFBQUE7UUFBS3dCLE1BSVp3QyxLQUFJLEdBQUdBLEtBQUlNLElBQW1CTixNQUFLO0FBQUEsV0FDdkNkLEtBQVdtQixHQUFZTCxFQUFBQSxNQUt0QkMsR0FBV25ELE9BQU9vQyxHQUFTcEMsT0FDM0JtRCxHQUFXckQsU0FBU3NDLEdBQVN0QyxNQUM1QjtBQUNEeUQsV0FBWUwsRUFBQUEsSUFBQUE7QUFBS3hDOztBQUdsQjBCLFdBQVc7O0FBT2JHLDRCQUNDRCxLQUNBYSxJQUxEZixLQUFXQSxNQUFZakQseUJBT3RCMkQsSUFDQUMsSUFDQUMsSUFDQWIsSUFDQUUsSUFDQVksRUFBQUEsR0FHREcsS0FBU0QsR0FBQUEsTUFFSkQsS0FBSUMsR0FBV2xELFFBQVFtQyxHQUFTbkMsT0FBT2lELE9BQ3RDSSxPQUFNQSxLQUFPLENBQUEsSUFDZGxCLEdBQVNuQyxPQUFLcUQsR0FBSzVCLEtBQUtVLEdBQVNuQyxLQUFLLE1BQU1rRCxFQUFBQSxHQUNoREcsR0FBSzVCLEtBQUt3QixJQUFHQyxHQUFBQSxPQUF5QkMsSUFBUUQsRUFBQUEsSUFHakMsUUFBVkMsTUFDa0IsUUFBakJDLE9BQ0hBLEtBQWdCRCxLQUlVLGNBQUEsT0FBbkJELEdBQVdyRCxRQUNsQnFELEdBQUFBLFFBQXlCZixHQUFBQSxNQUV6QmUsR0FBQUEsTUFBc0JkLEtBQVNzQix3QkFDOUJSLElBQ0FkLElBQ0FDLEdBQUFBLElBR0RELEtBQVN1Qix3QkFDUnRCLEtBQ0FhLElBQ0FmLElBQ0FtQixJQUNBSCxJQUNBZixFQUFBQSxHQUlnQyxjQUFBLE9BQXZCTyxHQUFlOUMsU0FRekI4QyxHQUFBQSxNQUEwQlAsT0FHM0JBLE1BQ0FELEdBQUFBLE9BQWlCQyxNQUNqQkEsR0FBTzFDLGNBQWMyQyxRQUlyQkQsS0FBU3BCLHdCQUFjbUIsRUFBQUE7O0FBQUFBLE9BSXpCUSxHQUFBQSxNQUFzQlMsSUFHakJuRSxLQUFJc0UsSUFBbUJ0RSxPQUNMLFNBQWxCcUUsR0FBWXJFLEVBQUFBLE1BRWdCLGNBQUEsT0FBdkIwRCxHQUFlOUMsUUFDQyxRQUF2QnlELEdBQVlyRSxFQUFBQSxFQUFBQSxPQUNacUUsR0FBWXJFLEVBQUFBLEVBQUFBLE9BQVcwRCxHQUFBQSxRQUt2QkEsR0FBQUEsTUFBMEIzQix3QkFBYzRCLElBQWdCM0QsS0FBSSxDQUFBLElBRzdEMkUsd0JBQVFOLEdBQVlyRSxFQUFBQSxHQUFJcUUsR0FBWXJFLEVBQUFBLENBQUFBO0FBQUFBLE1BS2xDb0UsR0FBQUEsTUFDRXBFLEtBQUksR0FBR0EsS0FBSW9FLEdBQUtsRCxRQUFRbEIsS0FDNUI0RSx5QkFBU1IsR0FBS3BFLEVBQUFBLEdBQUlvRSxHQUFBQSxFQUFPcEUsRUFBQUEsR0FBSW9FLEdBQUFBLEVBQU9wRSxFQUFBQSxDQUFBQTs7QUFLdkMsU0FBU3lFLHdCQUFnQlIsS0FBWWQsS0FBUUMsSUFBQUE7QUFBQUEsV0FLdkM3QixJQUhEZ0IsS0FBSTBCLElBQUFBLEtBQ0pZLEtBQU0sR0FDSHRDLE1BQUtzQyxLQUFNdEMsR0FBRXJCLFFBQVEyRCxLQUN2QnRELEVBQUFBLEtBQVFnQixHQUFFc0MsRUFBQUEsT0FNYnRELEdBQUFBLEtBQWdCMEMsS0FHZmQsTUFEd0IsY0FBQSxPQUFkNUIsR0FBTVgsT0FDUDZELHdCQUFnQmxELElBQU80QixLQUFRQyxFQUFBQSxJQUUvQnNCLHdCQUNSdEIsSUFDQTdCLElBQ0FBLElBQ0FnQixJQUNBaEIsR0FBQUEsS0FDQTRCLEdBQUFBO0FBQUFBLFNBTUdBOztBQVNELFNBQVMyQiwwQ0FBYWpFLEtBQVVrRSxLQUFBQTtBQUFBQSxTQUN0Q0EsTUFBTUEsT0FBTyxDQUFBLEdBQ0csUUFBWmxFLE9BQXVDLGFBQUEsT0FBWkEsUUFDcEIwRCxNQUFNQyxRQUFRM0QsR0FBQUEsSUFDeEJBLElBQVNrQyxLQUFLLFNBQUFYLEtBQUFBO0FBQ2IwQyw4Q0FBYTFDLEtBQU8yQyxHQUFBQTtHQUFBQSxJQUdyQkEsSUFBSXZDLEtBQUszQixHQUFBQSxJQUVIa0U7O0FBR1IsU0FBU0wsd0JBQ1J0QixLQUNBYSxLQUNBZixJQUNBbUIsSUFDQUgsSUFDQWYsSUFBQUE7QUFORCxNQVFLNkIsSUF1QkdDLElBQWlCakI7QUFBQUEsTUFBQUEsV0F0QnBCQyxJQUFBQSxJQUlIZSxNQUFVZixJQUFBQSxLQU1WQSxJQUFBQSxNQUFBQTtXQUVZLFFBQVpmLE1BQ0FnQixNQUFVZixNQUNXLFFBQXJCZSxHQUFPekQsV0FFUHlFLEdBQU8sS0FBYyxRQUFWL0IsTUFBa0JBLEdBQU8xQyxlQUFlMkMsSUFDbERBLEtBQVUrQixZQUFZakIsRUFBQUEsR0FDdEJjLEtBQVU7T0FDSjtBQUFBLFNBR0RDLEtBQVM5QixJQUFRYSxLQUFJLElBQ3hCaUIsS0FBU0EsR0FBT0csZ0JBQWdCcEIsS0FBSUssR0FBWW5ELFFBQ2pEOEMsTUFBSyxFQUFBLEtBRURpQixNQUFVZixHQUFBQSxPQUNQZ0I7QUFHUjlCLFFBQVVpQyxhQUFhbkIsSUFBUWYsRUFBQUEsR0FDL0I2QixLQUFVN0I7O0FBQUFBLFNBQUFBLFdBT1I2QixLQUNNQSxLQUVBZCxHQUFPa0I7O0FDOVRYLFNBQVNFLHdCQUFVQyxLQUFLQyxLQUFVQyxJQUFVNUIsSUFBTzZCLElBQUFBO0FBQUFBLE1BQ3JEMUY7QUFBQUEsT0FFQ0EsTUFBS3lGLEdBQ0MsZ0JBQU56RixNQUEwQixVQUFOQSxNQUFpQkEsTUFBS3dGLE9BQzdDRyx3QkFBWUosS0FBS3ZGLElBQUcsTUFBTXlGLEdBQVN6RixFQUFBQSxHQUFJNkQsRUFBQUE7QUFBQUEsT0FJcEM3RCxNQUFLd0YsSUFFTkUsT0FBaUMsY0FBQSxPQUFmRixJQUFTeEYsRUFBQUEsS0FDdkIsZUFBTkEsTUFDTSxVQUFOQSxNQUNNLFlBQU5BLE1BQ00sY0FBTkEsTUFDQXlGLEdBQVN6RixFQUFBQSxNQUFPd0YsSUFBU3hGLEVBQUFBLEtBRXpCMkYsd0JBQVlKLEtBQUt2RixJQUFHd0YsSUFBU3hGLEVBQUFBLEdBQUl5RixHQUFTekYsRUFBQUEsR0FBSTZELEVBQUFBOztBQUtqRCxTQUFTK0Isd0JBQVNDLEtBQU8vRSxLQUFLZ0YsS0FBQUE7QUFDZCxVQUFYaEYsSUFBSSxDQUFBLElBQ1ArRSxJQUFNRixZQUFZN0UsS0FBS2dGLEdBQUFBLElBRXZCRCxJQUFNL0UsR0FBQUEsSUFEYSxRQUFUZ0YsTUFDRyxLQUNhLFlBQUEsT0FBVEEsT0FBcUIzRix3QkFBbUI0RixLQUFLakYsR0FBQUEsSUFDakRnRixNQUVBQSxNQUFROztBQVloQixTQUFTSCx3QkFBWUosS0FBS1MsS0FBTUYsS0FBT0csSUFBVXBDLElBQUFBO0FBQWpELE1BQ0ZxQztBQUVKQyxJQUFHLEtBQWEsWUFBVEgsS0FBQUE7QUFBQUEsUUFDYyxZQUFBLE9BQVRGLElBQ1ZQLEtBQUlNLE1BQU1PLFVBQVVOO1NBQ2Q7QUFBQSxVQUNpQixZQUFBLE9BQVpHLE9BQ1ZWLElBQUlNLE1BQU1PLFVBQVVILEtBQVcsS0FHNUJBLEdBQUFBLE1BQ0VELE9BQVFDLEdBQ05ILFFBQVNFLE9BQVFGLE9BQ3RCRix3QkFBU0wsSUFBSU0sT0FBT0csS0FBTSxFQUFBO0FBQUEsVUFLekJGLElBQUFBLE1BQ0VFLE9BQVFGLElBQ1BHLE9BQVlILElBQU1FLEdBQUFBLE1BQVVDLEdBQVNELEdBQUFBLEtBQ3pDSix3QkFBU0wsSUFBSU0sT0FBT0csS0FBTUYsSUFBTUUsR0FBQUEsQ0FBQUE7O2FBT2hCLFFBQVpBLElBQUssQ0FBQSxLQUEwQixRQUFaQSxJQUFLLENBQUEsRUFDaENFLE1BQWFGLFNBQVVBLE1BQU9BLElBQUtLLFFBQUFBLFlBQW9CLEVBQUEsSUFHeEJMLE1BQTNCQSxJQUFLTSxZQUFBQSxLQUFpQmYsTUFBWVMsSUFBS00sWUFBQUEsRUFBYzdHLE1BQU0sQ0FBQSxJQUNuRHVHLElBQUt2RyxNQUFNLENBQUEsR0FFbEI4RixJQUFJZ0IsTUFBWWhCLElBQUlnQixJQUFhLENBQUEsSUFDdENoQixJQUFJZ0IsRUFBV1AsTUFBT0UsRUFBQUEsSUFBY0osS0FFaENBLE1BQ0VHLE1BRUpWLElBQUlpQixpQkFBaUJSLEtBRExFLEtBQWFPLDBCQUFvQkMseUJBQ2JSLEVBQUFBLElBSXJDWCxJQUFJb0Isb0JBQW9CWCxLQURSRSxLQUFhTywwQkFBb0JDLHlCQUNWUixFQUFBQTtXQUVyQiw4QkFBVEYsS0FBb0M7QUFBQSxRQUMxQ25DLEdBSUhtQyxPQUFPQSxJQUFLSyxRQUFBQSxjQUFzQixHQUFBLEVBQUtBLFFBQUFBLFVBQWtCLEdBQUE7YUFFaEQsV0FBVEwsT0FDUyxXQUFUQSxPQUNTLFdBQVRBLE9BR1MsZUFBVEEsT0FDUyxlQUFUQSxPQUNBQSxPQUFRVCxJQUFBQSxLQUFBQTtBQUdQQSxVQUFJUyxHQUFBQSxJQUFpQixRQUFURixNQUFnQixLQUFLQTtBQUFBQSxZQUUzQks7YUFDRVMsR0FBQUE7SUFBQUE7QUFVVyxrQkFBQSxPQUFWZCxRQUdELFFBQVRBLFFBQUFBLFVBQ0NBLE9BQWdDLFFBQVpFLElBQUssQ0FBQSxLQUEwQixRQUFaQSxJQUFLLENBQUEsS0FFN0NULElBQUlzQixhQUFhYixLQUFNRixHQUFBQSxJQUV2QlAsSUFBSXVCLGdCQUFnQmQsR0FBQUE7OztBQVV2QixTQUFTVSx3QkFBV0UsS0FBQUE7QUFBQUEsT0FDZEwsRUFBV0ssSUFBRWhHLE9BQUFBLEtBQU8sRUFBT2xCLDBDQUFRcUgsUUFBUXJILDBDQUFRcUgsTUFBTUgsR0FBQUEsSUFBS0EsR0FBQUE7O0FBR3BFLFNBQVNILHdCQUFrQkcsS0FBQUE7QUFBQUEsT0FDckJMLEVBQVdLLElBQUVoRyxPQUFBQSxJQUFPLEVBQU1sQiwwQ0FBUXFILFFBQVFySCwwQ0FBUXFILE1BQU1ILEdBQUFBLElBQUtBLEdBQUFBOztBQ3BJbkUsU0FBZ0J2RCx3QkFDZkQsS0FDQTRELEtBQ0E5RCxJQUNBVSxJQUNBQyxJQUNBQyxJQUNBYixJQUNBRSxJQUNBWSxJQUFBQTtBQVRELE1BV0tjLElBb0JFdEMsSUFBRzBFLElBQU94QixJQUFVeUIsSUFBVUMsSUFBVUMsSUFDeEM1QixJQUtBNkIsSUFDQUMsSUFxSUE3RCxJQS9KTDhELEtBQVVQLElBQVNwRztBQUFBQSxNQUFBQSxXQUloQm9HLElBQVN2RixZQUEyQixRQUFPO0FBR3BCLFVBQXZCeUIsR0FBQUEsUUFDSGEsS0FBY2IsR0FBQUEsS0FDZEMsS0FBUzZELElBQUFBLE1BQWdCOUQsR0FBQUEsS0FFekI4RCxJQUFBQSxNQUFzQixNQUN0QmxELEtBQW9CO0lBQUNYO09BR2pCMEIsS0FBTW5GLDBDQUFBQSxRQUFnQm1GLEdBQUltQyxHQUFBQTtBQUFBQSxNQUFBQTtBQUc5QjlCLE1BQU8sS0FBc0IsY0FBQSxPQUFYcUMsSUFBdUI7QUFBQSxVQUVwQy9CLEtBQVd3QixJQUFTMUcsT0FLcEIrRyxNQURKeEMsS0FBTTBDLEdBQVFDLGdCQUNRNUQsR0FBY2lCLEdBQUFBLEdBQUFBLEdBQ2hDeUMsS0FBbUJ6QyxLQUNwQndDLEtBQ0NBLEdBQVMvRyxNQUFNd0YsUUFDZmpCLEdBQUFBLEtBQ0RqQixJQUdDVixHQUFBQSxNQUVIa0UsTUFEQTdFLEtBQUl5RSxJQUFBQSxNQUFzQjlELEdBQUFBLEtBQUFBLEtBQzBCWCxHQUFBQSxPQUdoRCxlQUFlZ0YsTUFBV0EsR0FBUUUsVUFBVUMsU0FFL0NWLElBQUFBLE1BQXNCekUsS0FBSSxJQUFJZ0YsR0FBUS9CLElBQVU4QixFQUFBQSxLQUdoRE4sSUFBQUEsTUFBc0J6RSxLQUFJLElBQUlWLDBDQUFVMkQsSUFBVThCLEVBQUFBLEdBQ2xEL0UsR0FBRWQsY0FBYzhGLElBQ2hCaEYsR0FBRW1GLFNBQVNDLDBCQUVSTixNQUFVQSxHQUFTTyxJQUFJckYsRUFBQUEsR0FFM0JBLEdBQUVqQyxRQUFRa0YsSUFDTGpELEdBQUVzRixVQUFPdEYsR0FBRXNGLFFBQVEsQ0FBQSxJQUN4QnRGLEdBQUVULFVBQVV3RixJQUNaL0UsR0FBQUEsTUFBbUJxQixJQUNuQnFELEtBQVExRSxHQUFBQSxNQUFBQSxNQUNSQSxHQUFBQSxNQUFxQixDQUFBLElBSUYsUUFBaEJBLEdBQUFBLFFBQ0hBLEdBQUFBLE1BQWVBLEdBQUVzRixRQUVzQixRQUFwQ04sR0FBUU8sNkJBQ1B2RixHQUFBQSxPQUFnQkEsR0FBRXNGLFVBQ3JCdEYsR0FBQUEsTUFBZW5DLHdCQUFPLENBQUEsR0FBSW1DLEdBQUFBLEdBQUFBLElBRzNCbkMsd0JBQ0NtQyxHQUFBQSxLQUNBZ0YsR0FBUU8seUJBQXlCdEMsSUFBVWpELEdBQUFBLEdBQUFBLENBQUFBLElBSTdDa0QsS0FBV2xELEdBQUVqQyxPQUNiNEcsS0FBVzNFLEdBQUVzRixPQUdUWixHQUVrQyxTQUFwQ00sR0FBUU8sNEJBQ2dCLFFBQXhCdkYsR0FBRXdGLHNCQUVGeEYsR0FBRXdGLG1CQUFBQSxHQUd3QixRQUF2QnhGLEdBQUV5RixxQkFDTHpGLEdBQUFBLElBQW1CQyxLQUFLRCxHQUFFeUYsaUJBQUFBO1dBRXJCO0FBQUEsWUFFK0IsUUFBcENULEdBQVFPLDRCQUNSdEMsT0FBYUMsTUFDa0IsUUFBL0JsRCxHQUFFMEYsNkJBRUYxRixHQUFFMEYsMEJBQTBCekMsSUFBVThCLEVBQUFBLEdBQUFBLENBSXBDL0UsR0FBQUEsT0FDMEIsUUFBM0JBLEdBQUUyRix5QkFBQUEsVUFDRjNGLEdBQUUyRixzQkFDRDFDLElBQ0FqRCxHQUFBQSxLQUNBK0UsRUFBQUEsS0FFRk4sSUFBQUEsUUFBdUI5RCxHQUFBQSxLQUN0QjtBQUNEWCxhQUFFakMsUUFBUWtGLElBQ1ZqRCxHQUFFc0YsUUFBUXRGLEdBQUFBLEtBRU55RSxJQUFBQSxRQUF1QjlELEdBQUFBLFFBQW9CWCxHQUFBQSxNQUFBQSxRQUMvQ0EsR0FBQUEsTUFBV3lFLEtBQ1hBLElBQUFBLE1BQWdCOUQsR0FBQUEsS0FDaEI4RCxJQUFBQSxNQUFxQjlELEdBQUFBLEtBQ3JCOEQsSUFBQUEsSUFBbUJtQixRQUFRLFNBQUE1RyxLQUFBQTtBQUN0QkEsb0JBQU9BLElBQUFBLEtBQWdCeUY7V0FBQUEsR0FFeEJ6RSxHQUFBQSxJQUFtQnJCLFVBQ3RCK0IsR0FBWVQsS0FBS0QsRUFBQUE7QUFBQUEsZ0JBR1oyQzs7QUFHc0IsZ0JBQXpCM0MsR0FBRTZGLHVCQUNMN0YsR0FBRTZGLG9CQUFvQjVDLElBQVVqRCxHQUFBQSxLQUFjK0UsRUFBQUEsR0FHbkIsUUFBeEIvRSxHQUFFOEYsc0JBQ0w5RixHQUFBQSxJQUFtQkMsS0FBSyxXQUFBO0FBQ3ZCRCxhQUFFOEYsbUJBQW1CNUMsSUFBVXlCLElBQVVDLEVBQUFBO1NBQUFBOztBQUs1QzVFLFNBQUVULFVBQVV3RixJQUNaL0UsR0FBRWpDLFFBQVFrRixJQUNWakQsR0FBRXNGLFFBQVF0RixHQUFBQSxNQUVMc0MsS0FBTW5GLDBDQUFBQSxRQUFrQm1GLEdBQUltQyxHQUFBQSxHQUVqQ3pFLEdBQUFBLE1BQUFBLE9BQ0FBLEdBQUFBLE1BQVd5RSxLQUNYekUsR0FBQUEsTUFBZWEsS0FFZnlCLEtBQU10QyxHQUFFbUYsT0FBT25GLEdBQUVqQyxPQUFPaUMsR0FBRXNGLE9BQU90RixHQUFFVCxPQUFBQSxHQUduQ1MsR0FBRXNGLFFBQVF0RixHQUFBQSxLQUVlLFFBQXJCQSxHQUFFK0Ysb0JBQ0wxRSxLQUFnQnhELHdCQUFPQSx3QkFBTyxDQUFBLEdBQUl3RCxFQUFBQSxHQUFnQnJCLEdBQUUrRixnQkFBQUEsQ0FBQUEsSUFHaERyQixNQUFzQyxRQUE3QjFFLEdBQUVnRyw0QkFDZnBCLEtBQVc1RSxHQUFFZ0csd0JBQXdCOUMsSUFBVXlCLEVBQUFBLElBSzVDekQsS0FESSxRQUFQb0IsTUFBZUEsR0FBSWpFLFNBQVNnQiw2Q0FBdUIsUUFBWGlELEdBQUkvRCxNQUNMK0QsR0FBSXZFLE1BQU1PLFdBQVdnRSxJQUU3RHJCLHdCQUNDSixLQUNBbUIsTUFBTUMsUUFBUWYsRUFBQUEsSUFBZ0JBLEtBQWU7UUFBQ0E7U0FDOUN1RCxLQUNBOUQsSUFDQVUsSUFDQUMsSUFDQUMsSUFDQWIsSUFDQUUsSUFDQVksRUFBQUEsR0FHRHhCLEdBQUVGLE9BQU8yRSxJQUFBQSxLQUdUQSxJQUFBQSxNQUFzQixNQUVsQnpFLEdBQUFBLElBQW1CckIsVUFDdEIrQixHQUFZVCxLQUFLRCxFQUFBQSxHQUdkNkUsT0FDSDdFLEdBQUFBLE1BQWtCQSxHQUFBQSxLQUF5QixPQUc1Q0EsR0FBQUEsTUFBQUE7VUFFcUIsU0FBckJ1QixNQUNBa0QsSUFBQUEsUUFBdUI5RCxHQUFBQSxPQUV2QjhELElBQUFBLE1BQXFCOUQsR0FBQUEsS0FDckI4RCxJQUFBQSxNQUFnQjlELEdBQUFBLE9BRWhCOEQsSUFBQUEsTUFBZ0J3Qix3QkFDZnRGLEdBQUFBLEtBQ0E4RCxLQUNBOUQsSUFDQVUsSUFDQUMsSUFDQUMsSUFDQWIsSUFDQWMsRUFBQUE7QUFJR2MsS0FBQUEsS0FBTW5GLDBDQUFRK0ksV0FBUzVELEdBQUltQyxHQUFBQTtXQUN4QkosS0FBQUE7QUFDUkksUUFBQUEsTUFBcUIsT0FFakJqRCxNQUFvQyxRQUFyQkQsUUFDbEJrRCxJQUFBQSxNQUFnQjdELElBQ2hCNkQsSUFBQUEsTUFBQUEsQ0FBQUEsQ0FBd0JqRCxJQUN4QkQsR0FBa0JBLEdBQWtCN0IsUUFBUWtCLEVBQUFBLENBQUFBLElBQVcsT0FJeER6RCwwQ0FBQUEsSUFBb0JrSCxLQUFHSSxLQUFVOUQsRUFBQUE7OztBQVM1QixTQUFTSyx3QkFBV04sS0FBYXlGLEtBQUFBO0FBQ25DaEosNENBQUFBLE9BQWlCQSwwQ0FBQUEsSUFBZ0JnSixLQUFNekYsR0FBQUEsR0FFM0NBLElBQVlGLEtBQUssU0FBQVIsS0FBQUE7QUFBQUEsUUFBQUE7QUFHZlUsWUFBY1YsSUFBQUEsS0FDZEEsSUFBQUEsTUFBcUIsQ0FBQSxHQUNyQlUsSUFBWUYsS0FBSyxTQUFBNEYsS0FBQUE7QUFFaEJBLFlBQUd4SCxLQUFLb0IsR0FBQUE7T0FBQUE7YUFFRHFFLEtBQUFBO0FBQ1JsSCxnREFBQUEsSUFBb0JrSCxLQUFHckUsSUFBQUEsR0FBQUE7O0dBQUFBOztBQW1CMUIsU0FBU2lHLHdCQUNSakQsS0FDQXlCLEtBQ0E5RCxLQUNBVSxLQUNBQyxLQUNBQyxJQUNBYixJQUNBYyxJQUFBQTtBQVJELE1Bb0JTM0IsSUFzREh3RyxJQUNBQyxJQWpFRHBELEtBQVd2QyxJQUFTNUMsT0FDcEJrRixLQUFXd0IsSUFBUzFHLE9BQ3BCd0ksS0FBVzlCLElBQVNwRyxNQUNwQlosS0FBSTtBQUFBLE1BR1MsVUFBYjhJLE9BQW9CakYsTUFBQUEsT0FFQyxRQUFyQkMsSUFBQUE7QUFBQUEsV0FDSTlELEtBQUk4RCxHQUFrQjVDLFFBQVFsQixLQUFBQSxNQUM5Qm9DLEtBQVEwQixHQUFrQjlELEVBQUFBLE1BTy9CLGtCQUFrQm9DLE1BQUFBLENBQUFBLENBQVkwRyxPQUM3QkEsS0FBVzFHLEdBQU0yRyxjQUFjRCxLQUE4QixNQUFuQjFHLEdBQU0wRyxXQUNoRDtBQUNEdkQsWUFBTW5ELElBQ04wQixHQUFrQjlELEVBQUFBLElBQUs7QUFBQTs7O0FBQUEsTUFNZixRQUFQdUYsS0FBYTtBQUFBLFFBQ0MsU0FBYnVELEdBQUFBLFFBRUlFLFNBQVNDLGVBQWV6RCxFQUFBQTtBQUkvQkQsVUFERzFCLE1BQ0dtRixTQUFTRSxnQkFDZCw4QkFFQUosRUFBQUEsSUFHS0UsU0FBU3JJLGNBRWRtSSxJQUNBdEQsR0FBUzJELE1BQU0zRCxFQUFBQSxHQUtqQjFCLEtBQW9CLE1BRXBCQyxLQUFBQTs7QUFBYyxNQUdFLFNBQWIrRSxHQUVDckQsUUFBYUQsTUFBY3pCLE1BQWV3QixJQUFJNkQsU0FBUzVELE9BQzFERCxJQUFJNkQsT0FBTzVEO09BRU47QUFBQSxRQUVOMUIsS0FBb0JBLE1BQXFCckUsd0JBQU0wQixLQUFLb0UsSUFBSThELFVBQUFBLEdBSXBEVCxNQUZKbkQsS0FBV3ZDLElBQVM1QyxTQUFTTCx5QkFFTnFKLHlCQUNuQlQsS0FBVXJELEdBQVM4RCx5QkFBQUEsQ0FJbEJ2RixJQUFhO0FBQUEsVUFHUSxRQUFyQkQsR0FBQUEsTUFDSDJCLEtBQVcsQ0FBQSxHQUNOekYsS0FBSSxHQUFHQSxLQUFJdUYsSUFBSWdFLFdBQVdySSxRQUFRbEIsS0FDdEN5RixJQUFTRixJQUFJZ0UsV0FBV3ZKLEVBQUFBLEVBQUdnRyxJQUFBQSxJQUFRVCxJQUFJZ0UsV0FBV3ZKLEVBQUFBLEVBQUc4RjtBQUluRCtDLE9BQUFBLE1BQVdELFFBR1pDLE9BQ0VELE1BQVdDLEdBQUFBLFVBQWtCRCxHQUFBQSxVQUMvQkMsR0FBQUEsV0FBbUJ0RCxJQUFJaUUsZUFFeEJqRSxJQUFJaUUsWUFBYVgsTUFBV0EsR0FBQUEsVUFBbUI7O0FBQUEsUUFLbER2RCx3QkFBVUMsS0FBS0MsSUFBVUMsSUFBVTVCLEtBQU9FLEVBQUFBLEdBR3RDOEUsR0FDSDdCLEtBQUFBLE1BQXFCLENBQUE7YUFFckJoSCxLQUFJZ0gsSUFBUzFHLE1BQU1PLFVBQ25CMkMsd0JBQ0MrQixLQUNBaEIsTUFBTUMsUUFBUXhFLEVBQUFBLElBQUtBLEtBQUk7TUFBQ0E7T0FDeEJnSCxLQUNBOUQsS0FDQVUsS0FDQUMsT0FBc0Isb0JBQWJpRixJQUNUaEYsSUFDQWIsSUFDQWEsS0FDR0EsR0FBa0IsQ0FBQSxJQUNsQlosSUFBQUEsT0FBc0JuQix3QkFBY21CLEtBQVUsQ0FBQSxHQUNqRGEsRUFBQUEsR0FJd0IsUUFBckJELEdBQUFBLE1BQ0U5RCxLQUFJOEQsR0FBa0I1QyxRQUFRbEIsT0FDTixTQUF4QjhELEdBQWtCOUQsRUFBQUEsS0FBWU8sd0JBQVd1RCxHQUFrQjlELEVBQUFBLENBQUFBO0FBTTdEK0QsV0FFSCxXQUFXeUIsTUFBQUEsWUFDVnhGLEtBQUl3RixHQUFTTSxXQUtiOUYsT0FBTXlGLEdBQVNLLFNBQ2Y5RixPQUFNdUYsSUFBSU8sU0FDSSxlQUFiZ0QsTUFBQUEsQ0FBNEI5SSxPQUU5QjJGLHdCQUFZSixLQUFLLFNBQVN2RixJQUFHeUYsR0FBU0ssT0FBQUEsS0FBTyxHQUc3QyxhQUFhTixNQUFBQSxZQUNaeEYsS0FBSXdGLEdBQVNpRSxZQUNkekosT0FBTXVGLElBQUlrRSxXQUVWOUQsd0JBQVlKLEtBQUssV0FBV3ZGLElBQUd5RixHQUFTZ0UsU0FBQUEsS0FBUzs7QUFBQSxTQUs3Q2xFOztBQVNSLFNBQWdCWCx3QkFBUzdELEtBQUsrRSxLQUFPdkUsS0FBQUE7QUFBQUEsTUFBQUE7QUFFakIsa0JBQUEsT0FBUFIsTUFBbUJBLElBQUkrRSxHQUFBQSxJQUM3Qi9FLElBQUlZLFVBQVVtRTtXQUNYYyxLQUFBQTtBQUNSbEgsOENBQUFBLElBQW9Ca0gsS0FBR3JGLEdBQUFBOzs7QUFZekIsU0FBZ0JvRCx3QkFBUXBELEtBQU9tSSxLQUFhQyxLQUFBQTtBQUE1QyxNQUNLQyxLQW9CTTVKO0FBQUFBLE1BbkJOTiwwQ0FBUWlGLFdBQVNqRiwwQ0FBUWlGLFFBQVFwRCxHQUFBQSxJQUVoQ3FJLE1BQUlySSxJQUFNUixTQUNUNkksSUFBRWpJLFdBQVdpSSxJQUFFakksWUFBWUosSUFBQUEsT0FBWXFELHdCQUFTZ0YsS0FBRyxNQUFNRixHQUFBQSxJQUdqQyxTQUF6QkUsTUFBSXJJLElBQUFBLE1BQTJCO0FBQUEsUUFDL0JxSSxJQUFFQyxxQkFBQUEsS0FBQUE7QUFFSkQsVUFBRUMscUJBQUFBO2FBQ01qRCxLQUFBQTtBQUNSbEgsZ0RBQUFBLElBQW9Ca0gsS0FBRzhDLEdBQUFBOztBQUl6QkUsUUFBRXZILE9BQU91SCxJQUFBQSxNQUFlOztBQUFBLE1BR3BCQSxNQUFJckksSUFBQUEsSUFBQUEsTUFDQ3ZCLE1BQUksR0FBR0EsTUFBSTRKLElBQUUxSSxRQUFRbEIsTUFDekI0SixLQUFFNUosR0FBQUEsS0FDTDJFLHdCQUFRaUYsSUFBRTVKLEdBQUFBLEdBQUkwSixLQUFrQyxjQUFBLE9BQWRuSSxJQUFNWCxJQUFBQTtBQUt0QytJLFNBQTRCLFFBQWRwSSxJQUFBQSxPQUFvQmhCLHdCQUFXZ0IsSUFBQUEsR0FBQUEsR0FJbERBLElBQUFBLE1BQWFBLElBQUFBLE1BQUFBOztBQUlkLFNBQVNvRyx3QkFBU3JILEtBQU91SCxHQUFPL0YsS0FBQUE7QUFBQUEsU0FDeEJnSSxLQUFLckksWUFBWW5CLEtBQU93QixHQUFBQTs7QUNwZmhDLFNBQWdCNEYsMENBQU9uRyxLQUFPNkIsS0FBVzJHLEtBQUFBO0FBQXpDLE1BTUtoRyxLQU9BYixJQVVBRDtBQXRCQXZELDRDQUFBQSxNQUFlQSwwQ0FBQUEsR0FBYzZCLEtBQU82QixHQUFBQSxHQVlwQ0YsTUFQQWEsTUFBcUMsY0FBQSxPQUFoQmdHLE9BUXRCLE9BQ0NBLE9BQWVBLElBQUFBLE9BQTBCM0csSUFBQUEsS0FRekNILEtBQWMsQ0FBQSxHQUNsQkksd0JBQ0NELEtBUkQ3QixPQUFBQSxDQUNHd0MsT0FBZWdHLE9BQ2pCM0csS0FBQUEsTUFDYXpDLDBDQUFjaUIsMkNBQVUsTUFBTTtJQUFDTDtHQUFBQSxHQVM1QzJCLE1BQVlqRCx5QkFDWkEseUJBQUFBLFdBQ0FtRCxJQUFVRSxpQkFBQUEsQ0FDVFMsT0FBZWdHLE1BQ2I7SUFBQ0E7TUFDRDdHLEtBQ0EsT0FDQUUsSUFBVTRHLGFBQ1Z2Syx3QkFBTTBCLEtBQUtpQyxJQUFVaUcsVUFBQUEsSUFDckIsTUFDSHBHLElBQUFBLENBQ0NjLE9BQWVnRyxNQUNiQSxNQUNBN0csS0FDQUEsR0FBQUEsTUFDQUUsSUFBVTRHLFlBQ2JqRyxHQUFBQSxHQUlEUix3QkFBV04sSUFBYTFCLEdBQUFBOztBUnJDWjBJLDBCQUFRQyx3QkFBVUQsT0NmekJFLDRDQUFVO0VBQUEsS1NKVCxTQUFxQkMsS0FBT0MsS0FBQUE7QUFBQUEsYUFFOUJDLEtBQVdDLEtBQU1DLEtBRWJILE1BQVFBLElBQUFBLEtBQUFBLE1BQ1ZDLE1BQVlELElBQUFBLFFBQUFBLENBQXNCQyxJQUFBQSxHQUFBQSxLQUFBQTtBQUFBQSxXQUVyQ0MsTUFBT0QsSUFBVUcsZ0JBRTRCLFFBQWpDRixJQUFLRyw2QkFDaEJKLElBQVVLLFNBQVNKLElBQUtHLHlCQUF5Qk4sR0FBQUEsQ0FBQUEsR0FDakRJLE1BQVVGLElBQUFBLE1BR3dCLFFBQS9CQSxJQUFVTSxzQkFDYk4sSUFBVU0sa0JBQWtCUixHQUFBQSxHQUM1QkksTUFBVUYsSUFBQUEsTUFJUEUsSUFBQUEsUUFDS0YsSUFBQUEsTUFBMEJBO2FBRTNCTyxLQUFBQTtBQUNSVCxZQUFRUzs7QUFBQUEsVUFLTFQ7O0dSakNIVSwwQkFBVSxHQTZGREMsNENBQWlCLFNBQUFWLEtBQUFBO0FBQUFBLFNBQ3BCLFFBQVRBLE9BQUFBLFdBQWlCQSxJQUFNSTtHQ3ZFeEJPLDBDQUFVQyxVQUFVTixXQUFXLFNBQVNPLEtBQVFDLEtBQUFBO0FBQUFBLE1BRTNDQztBQUVIQSxRQURzQixRQUFuQkMsS0FBQUEsT0FBMkJBLEtBQUFBLFFBQW9CQSxLQUFLQyxRQUNuREQsS0FBQUEsTUFFQUEsS0FBQUEsTUFBa0JFLHdCQUFPLENBQUEsR0FBSUYsS0FBS0MsS0FBQUEsR0FHbEIsY0FBQSxPQUFWSixRQUdWQSxNQUFTQSxJQUFPSyx3QkFBTyxDQUFBLEdBQUlILEdBQUFBLEdBQUlDLEtBQUtHLEtBQUFBLElBR2pDTixPQUNISyx3QkFBT0gsS0FBR0YsR0FBQUEsR0FJRyxRQUFWQSxPQUVBRyxLQUFBQSxRQUNDRixPQUFVRSxLQUFBQSxJQUFzQkksS0FBS04sR0FBQUEsR0FDekNPLHdCQUFjTCxJQUFBQTtHQVVoQkwsMENBQVVDLFVBQVVVLGNBQWMsU0FBU1IsS0FBQUE7QUFDdENFLE9BQUFBLFFBQUFBLEtBQUFBLE1BQUFBLE1BS0NGLE9BQVVFLEtBQUFBLElBQXNCSSxLQUFLTixHQUFBQSxHQUN6Q08sd0JBQWNMLElBQUFBO0dBY2hCTCwwQ0FBVUMsVUFBVVcsU0FBU0MsMkNBeUZ6QkMsMEJBQWdCLENBQUEsR0FRZEMsMEJBQ2EsY0FBQSxPQUFYQyxVQUNKQSxRQUFRZixVQUFVZ0IsS0FBS0MsS0FBS0YsUUFBUUcsUUFBQUEsQ0FBQUEsSUFDcENDLFlBMkNKQyx3QkFBQUEsTUFBeUIsR0M5TmRDLDBCQUFJO0FQRWYsSUFBSXhCLDBCQUFVO0FBcUJkLFNBQVN5QiwwQ0FBWUMsSUFBTWhCLElBQU9pQixHQUFLQyxHQUFVQyxHQUFBQTtBQUFBQSxNQUsvQ0MsR0FDQU4sR0FGR08sSUFBa0IsQ0FBQTtBQUFBLE9BR2pCUCxLQUFLZCxHQUNBLFVBQUxjLElBQ0hNLElBQU1wQixHQUFNYyxDQUFBQSxJQUVaTyxFQUFnQlAsQ0FBQUEsSUFBS2QsR0FBTWMsQ0FBQUE7QUFBQUEsTUFJdkJqQyxJQUFRO0lBQ2JtQyxNQUFBQTtJQUNBaEIsT0FBT3FCO0lBQ1BKLEtBQUFBO0lBQ0FHLEtBQUFBO0lBQUFBLEtBQ1c7SUFBQSxJQUNGO0lBQUEsS0FDRDtJQUFBLEtBQ0Y7SUFBQSxLQUFBO0lBQ0lFLEtBQ0U7SUFBQSxLQUNBO0lBQ1pyQyxhQUFBQTtJQUFhcUMsS0FBQUEsRUFDQWhDO0lBQ2I0QixVQUFBQTtJQUNBQyxRQUFBQTs7QUFBQUEsTUFLbUIsY0FBQSxPQUFUSCxPQUF3QkksSUFBTUosR0FBS08sY0FBQUEsTUFDeENULEtBQUtNLEVBQUFBLFlBQ0VDLEVBQWdCUCxDQUFBQSxNQUMxQk8sRUFBZ0JQLENBQUFBLElBQUtNLEVBQUlOLENBQUFBO0FBQUFBLFVBSXhCbkMsR0FBQUEsMkNBQVFFLFVBQU9GLEdBQUFBLDJDQUFRRSxNQUFNQSxDQUFBQSxHQUMxQkE7O0FnQnBFUixTQUFTLDBCQUFJLEtBQWEsT0FBZTtBQUN2QyxNQUFJO0FBQ0YsV0FBTyxhQUFhLGNBQWMsR0FBRyxFQUFFLElBQUksS0FBSyxVQUFVLEtBQUs7V0FDeEQsT0FBTztFQUFBOztBQUdsQixTQUFTLDBCQUFJLEtBQWtCO0FBQzdCLE1BQUk7QUFDRixVQUFNLFFBQVEsT0FBTyxhQUFhLGNBQWMsR0FBRyxFQUFFO0FBRXJELFFBQUksTUFDRixRQUFPLEtBQUssTUFBTSxLQUFLO1dBRWxCLE9BQU87RUFBQTs7SUFHbEIsMkNBQWU7T0FBRTtPQUFLOztBQ2hCdEIsSUFBTSw4QkFBUSxvQkFBSSxJQUFHO0FBQ3JCLElBQU0saUNBQVc7RUFDZjtJQUFFLEdBQUc7SUFBSSxPQUFPOztFQUNiO0lBQUQsR0FBRztJQUFJLE9BQU87O0VBQ2I7SUFBRCxHQUFHO0lBQU0sT0FBTzs7RUFDUjtJQUFSLEdBQUc7SUFBSSxPQUFPOztFQUNiO0lBQUQsR0FBRztJQUFNLE9BQU87O0VBQ1Y7SUFBTixHQUFHO0lBQUksT0FBTzs7RUFDYjtJQUFELEdBQUc7SUFBSSxPQUFPOztFQUNiO0lBQUQsR0FBRztJQUFHLE9BQU87O0VBQ1o7SUFBRCxHQUFHO0lBQUcsT0FBTzs7RUFDTjtJQUFQLEdBQUc7SUFBRyxPQUFPOztFQUNaO0lBQUQsR0FBRztJQUFHLE9BQU87O0VBQ1Q7SUFBSixHQUFHO0lBQUcsT0FBTzs7O0FBR2pCLFNBQVMsc0NBQWdCO0FBQ3ZCLGFBQVcsRUFBQSxHQUFHLE1BQU8sS0FBTSxnQ0FBVTtBQUNuQyxRQUFJLGtDQUFZLEtBQUssRUFDbkIsUUFBTzs7O0FBS2IsU0FBUyx1Q0FBaUI7QUFDeEIsTUFBSSxrQ0FBWSxvQkFBSSxFQUNsQixRQUFPO0FBR1QsU0FBTzs7QUFHVCxTQUFTLGtDQUFZLE9BQU87QUFDMUIsTUFBSSw0QkFBTSxJQUFJLEtBQUssRUFDakIsUUFBTyw0QkFBTSxJQUFJLEtBQUs7QUFHeEIsUUFBTSxZQUFZLHVDQUFpQixLQUFLO0FBQ3hDLDhCQUFNLElBQUksT0FBTyxTQUFTO0FBRTFCLFNBQU87O0FBSVQsSUFBTSwwQ0FBb0IsTUFBTTtBQUM5QixNQUFJLE1BQU07QUFDVixNQUFJO0FBQ0YsUUFBSSxDQUFDLFVBQVUsVUFBVSxTQUFTLE9BQU8sRUFDdkMsT0FBTSxTQUNILGNBQWMsUUFBUSxFQUN0QixXQUFXLE1BQU07TUFBRSxvQkFBb0I7S0FBTTtVQUU1QztFQUFBO0FBR1IsTUFBSSxDQUFDLElBQ0gsUUFBTyxNQUFNO0FBR2YsUUFBTSxnQkFBZ0I7QUFDdEIsUUFBTSxlQUFlO0FBQ3JCLFFBQU0sV0FBVyxLQUFLLE1BQU0sZ0JBQWdCLENBQUM7QUFHN0MsTUFBSSxPQUFPLFdBQVc7QUFDdEIsTUFBSSxlQUFlO0FBQ25CLE1BQUksT0FBTyxRQUFRLGVBQWU7QUFDbEMsTUFBSSxPQUFPLFNBQVM7QUFFcEIsU0FBTyxDQUFDLFlBQVk7QUFDbEIsUUFBSSxVQUFVLEdBQUcsR0FBRyxlQUFlLEdBQUcsYUFBYTtBQUduRCxRQUFJLFlBQVk7QUFDaEIsUUFBSSxTQUFTLFNBQVMsR0FBRyxFQUFFO0FBRzNCLFFBQUksWUFBWTtBQUNoQixRQUFJLFNBQVMsU0FBUyxjQUFjLEVBQUU7QUFFdEMsVUFBTSxJQUFJLElBQUksYUFBYSxHQUFHLEdBQUcsY0FBYyxhQUFhLEVBQUU7QUFDOUQsVUFBTSxRQUFRLEVBQUU7QUFDaEIsUUFBSSxJQUFJO0FBR1IsV0FBTyxJQUFJLFNBQVMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLEtBQUssRUFBQztBQUdyQyxRQUFJLEtBQUssTUFDUCxRQUFPO0FBS1QsVUFBTSxJQUFJLGVBQWlCLElBQUksSUFBSztBQUNwQyxVQUFNLElBQUksS0FBSyxNQUFNLElBQUksSUFBSSxZQUFZO0FBQ3pDLFVBQU0sSUFBSSxJQUFJLGFBQWEsR0FBRyxHQUFHLEdBQUcsQ0FBQyxFQUFFO0FBRXZDLFFBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFDbkMsUUFBTztBQUtULFFBQUksSUFBSSxZQUFZLE9BQU8sRUFBRSxTQUFTLGFBQ3BDLFFBQU87QUFJVCxXQUFPOztHQUVWO0lBRUQsMkNBQWU7aUJBQUU7a0JBQWU7O0FDOUdoQyxJQUFNLGlDQUFXO0VBQ2Y7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUdGLElBQUksOEJBQW9CO0FBRXhCLFNBQVMsMEJBQUksT0FBdUI7QUFDbEMsa0NBQVUsK0JBQVEsR0FBQSwwQ0FBTSxJQUFJLFlBQVksS0FBSyxDQUFBO0FBRTdDLFFBQU0sVUFBVSxNQUFNLE1BQU07QUFDNUIsTUFBSSxDQUFDLFFBQVM7QUFFZCw4QkFBTSxPQUFPLE1BQU0sNEJBQU0sT0FBTyxJQUFJO0FBQ3BDLDhCQUFNLE9BQU8sS0FBSztBQUVsQixHQUFBLEdBQUEsMENBQU0sSUFBSSxRQUFRLE9BQU87QUFDekIsR0FBQSxHQUFBLDBDQUFNLElBQUksY0FBYywyQkFBSzs7QUFHL0IsU0FBUywwQkFBSSxFQUFBLGlCQUFpQixRQUFTLEdBQUk7QUFDekMsTUFBSSxDQUFDLGdCQUFpQixRQUFPLENBQUE7QUFFN0Isa0NBQVUsK0JBQVEsR0FBQSwwQ0FBTSxJQUFJLFlBQVk7QUFDeEMsTUFBSSxXQUFXLENBQUE7QUFFZixNQUFJLENBQUMsNkJBQU87QUFDVixrQ0FBUSxDQUFBO0FBRVIsYUFBUyxLQUFLLCtCQUFTLE1BQU0sR0FBRyxPQUFPLEdBQUc7QUFDeEMsWUFBTSxVQUFVLCtCQUFTLENBQUM7QUFFMUIsa0NBQU0sT0FBTyxJQUFJLFVBQVU7QUFDM0IsZUFBUyxLQUFLLE9BQU87O0FBR3ZCLFdBQU87O0FBR1QsUUFBTTJDLE9BQU0sa0JBQWtCO0FBQzlCLFFBQU0sUUFBTyxHQUFBLDBDQUFNLElBQUksTUFBTTtBQUU3QixXQUFTLFdBQVcsNEJBQ2xCLFVBQVMsS0FBSyxPQUFPO0FBR3ZCLFdBQVMsS0FBSyxDQUFDLEdBQUcsTUFBTTtBQUN0QixVQUFNLFNBQVMsNEJBQU0sQ0FBQztBQUN0QixVQUFNLFNBQVMsNEJBQU0sQ0FBQztBQUV0QixRQUFJLFVBQVUsT0FDWixRQUFPLEVBQUUsY0FBYyxDQUFDO0FBRzFCLFdBQU8sU0FBUztHQUNqQjtBQUVELE1BQUksU0FBUyxTQUFTQSxNQUFLO0FBQ3pCLFVBQU0sYUFBYSxTQUFTLE1BQU1BLElBQUc7QUFDckMsZUFBVyxTQUFTLE1BQU0sR0FBR0EsSUFBRztBQUVoQyxhQUFTLGFBQWEsWUFBWTtBQUNoQyxVQUFJLGFBQWEsS0FBTTtBQUN2QixhQUFPLDRCQUFNLFNBQVM7O0FBR3hCLFFBQUksUUFBUSxTQUFTLFFBQVEsSUFBSSxLQUFLLElBQUk7QUFDeEMsYUFBTyw0QkFBTSxTQUFTLFNBQVMsU0FBUyxDQUFDLENBQUM7QUFDMUMsZUFBUyxPQUFPLElBQUksR0FBRyxJQUFJOztBQUc3QixLQUFBLEdBQUEsMENBQU0sSUFBSSxjQUFjLDJCQUFLOztBQUcvQixTQUFPOztJQUdULDJDQUFlO09BQUU7T0FBSztZQUFLOzs7QUc3RjNCLDRCQUFpQixLQUFLLE1BQU0sZ2tCQUFzcEI7QUNBbHJCLElBQUEsMkNBQWU7RUFDYixXQUFXO0lBQ1QsT0FBTzs7RUFFVCxjQUFjO0lBQ1osT0FBTzs7RUFFVCxtQkFBbUI7SUFDakIsT0FBTzs7RUFFVCxtQkFBbUI7SUFDakIsT0FBTzs7RUFFVCxpQkFBaUI7SUFDZixPQUFPOztFQUVULFdBQVc7SUFDVCxPQUFPOztFQUVULGNBQWM7SUFDWixPQUFPO0lBQ1AsU0FBUztNQUFDO01BQUc7TUFBRztNQUFHO01BQUc7TUFBRztNQUFJO01BQUk7TUFBTTtNQUFJO01BQU07TUFBSTs7O0VBRXZELGNBQWM7SUFDWixPQUFPLENBQUE7O0VBRVQsT0FBTztJQUNMLE9BQU87SUFDUCxTQUFTO01BQUM7TUFBUTtNQUFXOzs7RUFFL0IsUUFBUTtJQUNOLE9BQU87SUFDUCxTQUFTO01BQ1A7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7OztFQUdKLGlCQUFpQjtJQUNmLE9BQU87O0VBRVQsYUFBYTtJQUNYLE9BQU87SUFDUCxTQUFTO01BQUM7TUFBTztNQUFVOzs7RUFFN0IsZ0JBQWdCO0lBQ2QsT0FBTzs7RUFFVCxnQkFBZ0I7SUFDZCxPQUFPOztFQUVULFNBQVM7SUFDUCxPQUFPOztFQUVULGNBQWM7SUFDWixPQUFPOztFQUVULGlCQUFpQjtJQUNmLE9BQU87SUFDUCxTQUFTO01BQUM7TUFBTztNQUFVOzs7RUFFN0IsZ0JBQWdCO0lBQ2QsT0FBTztJQUNQLFNBQVM7TUFBQztNQUFVO01BQVU7OztFQUVoQyxLQUFLO0lBQ0gsT0FBTztJQUNQLFNBQVM7TUFBQztNQUFVO01BQVM7TUFBWTtNQUFVOzs7RUFFckQsTUFBTTtJQUNKLE9BQU87SUFDUCxTQUFTO01BQUM7TUFBRztNQUFHO01BQUc7TUFBRztNQUFHOzs7RUFFM0Isa0JBQWtCO0lBQ2hCLE9BQU87SUFDUCxTQUFTO01BQUM7TUFBVztNQUFVOzs7RUFFakMsT0FBTztJQUNMLE9BQU87SUFDUCxTQUFTO01BQUM7TUFBUTtNQUFTOzs7O0VBSTdCLFlBQVk7RUFDWixlQUFlO0VBQ2YsUUFBUTtFQUNSLE1BQU07RUFDTixNQUFNOztFQUdOLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlOztFQUdmLGNBQWM7SUFDWixZQUFZO0lBQ1osT0FBTzs7O0FGNUdKLElBQUksNENBQU87QUFDWCxJQUFJLDRDQUFPO0FBRWxCLElBQU0sbUNBQWEsQ0FBQTtBQUNuQixlQUFlLGdDQUFVLEtBQUs7QUFDNUIsTUFBSSxpQ0FBVyxHQUFHLEVBQ2hCLFFBQU8saUNBQVcsR0FBRztBQUd2QixRQUFNLFdBQVcsTUFBTSxNQUFNLEdBQUc7QUFDaEMsUUFBTSxPQUFPLE1BQU0sU0FBUyxLQUFJO0FBRWhDLG1DQUFXLEdBQUcsSUFBSTtBQUNsQixTQUFPOztBQUdULElBQUksZ0NBQWdDO0FBRXBDLElBQUkscUNBQWU7QUFDbkIsSUFBSSxvQ0FBYztBQUVYLFNBQVMsMENBQUssU0FBUyxFQUFBLE9BQVEsSUFBSyxDQUFBLEdBQUk7QUFDN0Msb0NBQ0csZ0NBQVUsSUFBSSxRQUFRLENBQUMsWUFBWTtBQUNsQyx5Q0FBZTtHQUNoQjtBQUVILE1BQUksUUFDRiw2QkFBTSxPQUFPO1dBQ0osVUFBVSxDQUFDLGtDQUNwQixTQUFRLEtBQ04sS0FBSyxNQUFNLDZGQUE2RjtBQUk1RyxTQUFPOztBQUdULGVBQWUsNEJBQU0sT0FBTztBQUMxQixzQ0FBYztBQUVkLE1BQUksRUFBQSxjQUFjLEtBQUssT0FBUSxJQUFLO0FBQ3BDLG1CQUFpQixnQkFBZSxHQUFBLDBDQUFZLGFBQWE7QUFDekQsVUFBUSxPQUFNLEdBQUEsMENBQVksSUFBSTtBQUM5QixhQUFXLFVBQVMsR0FBQSwwQ0FBWSxPQUFPO0FBRXZDLE1BQUksQ0FBQywyQ0FBTTtBQUNULGlEQUNHLE9BQU8sTUFBTSxTQUFTLGFBQWEsTUFBTSxNQUFNLEtBQUksSUFBSyxNQUFNLFNBQzlELE1BQU0sZ0NBQ0wsNkRBQTZELFlBQVksSUFBSSxHQUFHLE9BQU87QUFHM0YsOENBQUssWUFBWSxDQUFBO0FBQ2pCLDhDQUFLLFVBQVUsQ0FBQTtBQUVmLDhDQUFLLFdBQVcsUUFBUTtNQUN0QixJQUFJO01BQ0osUUFBUSxDQUFBO0tBQ1Q7QUFFRCxlQUFXLFNBQVMsMENBQUssU0FBUztBQUNoQyxZQUFNLFVBQVUsMENBQUssUUFBUSxLQUFLO0FBQ2xDLFlBQU0sUUFBUSwwQ0FBSyxPQUFPLE9BQU87QUFDakMsVUFBSSxDQUFDLE1BQU87QUFFWixZQUFNLFlBQVksTUFBTSxVQUFVLENBQUE7QUFDbEMsWUFBTSxRQUFRLEtBQUssS0FBSzs7QUFHMUIsOENBQUsscUJBQXFCLDBDQUFLO1FBRS9CLDJDQUFLLGFBQWEsMENBQUssV0FBVyxPQUFPLENBQUMsTUFBTTtBQUM5QyxVQUFNLFdBQVcsQ0FBQyxDQUFDLEVBQUU7QUFDckIsUUFBSSxDQUFDLFNBQVUsUUFBTztBQUV0QixXQUFPO0dBQ1I7QUFHSCwrQ0FDRyxPQUFPLE1BQU0sU0FBUyxhQUFhLE1BQU0sTUFBTSxLQUFJLElBQUssTUFBTSxVQUM5RCxVQUFVLFFBQ1AsR0FBQSx1Q0FBQSx5QkFBQSxLQUNBLE1BQU0sZ0NBQ0osNkRBQTZELE1BQU0sT0FBTztBQUdsRixNQUFJLE1BQU0sT0FDUixVQUFTLEtBQUssTUFBTSxRQUFRO0FBQzFCLFFBQUksU0FBUyxDQUFDO0FBQ2QsVUFBTSxXQUFXLE1BQU0sT0FBTyxDQUFDO0FBQy9CLFVBQU0sZUFBZSxNQUFNLE9BQU8sSUFBSSxDQUFDO0FBRXZDLFFBQUksQ0FBQyxTQUFTLFVBQVUsQ0FBQyxTQUFTLE9BQU8sT0FBUTtBQUVqRCxhQUFTLE9BQU8sU0FBUyxLQUFLLFVBQVUsSUFBSSxDQUFDO0FBQzdDLGFBQVMsU0FBUyxTQUFTLE9BQU8sMENBQUssV0FBVztBQUVsRCxRQUFJLGdCQUFnQixDQUFDLFNBQVMsS0FDNUIsVUFBUyxTQUFTLGFBQWEsVUFBVTtBQUczQyw4Q0FBSyxXQUFXLEtBQUssUUFBUTtBQUU3QixlQUFXLFNBQVMsU0FBUyxPQUMzQiwyQ0FBSyxPQUFPLE1BQU0sRUFBRSxJQUFJOztBQUs5QixNQUFJLE1BQU0sV0FDUiwyQ0FBSyxhQUFhLDBDQUFLLG1CQUNwQixPQUFPLENBQUMsTUFBTTtBQUNiLFdBQU8sTUFBTSxXQUFXLFFBQVEsRUFBRSxFQUFFLEtBQUs7R0FDMUMsRUFDQSxLQUFLLENBQUMsSUFBSSxPQUFPO0FBQ2hCLFVBQU0sS0FBSyxNQUFNLFdBQVcsUUFBUSxHQUFHLEVBQUU7QUFDekMsVUFBTSxLQUFLLE1BQU0sV0FBVyxRQUFRLEdBQUcsRUFBRTtBQUV6QyxXQUFPLEtBQUs7R0FDYjtBQUdMLE1BQUksdUJBQXVCO0FBQzNCLE1BQUksaUJBQWlCO0FBQ3JCLE1BQUksT0FBTyxVQUFVO0FBQ25CLDRCQUF1QixHQUFBLDBDQUFjLGNBQWE7QUFDbEQscUJBQWlCLE1BQU0sbUJBQWtCLEdBQUEsMENBQWMsZUFBYzs7QUFHdkUsTUFBSSxnQkFBZ0IsMENBQUssV0FBVztBQUNwQyxNQUFJLG1CQUFtQjtBQUN2QixTQUFPLGlCQUFpQjtBQUN0QixVQUFNLFdBQVcsMENBQUssV0FBVyxhQUFhO0FBRTlDLFFBQUksU0FBUyxNQUFNLFlBQVk7QUFDN0IsVUFBSSxFQUFBLGlCQUFpQixRQUFTLElBQUs7QUFFbkMsd0JBQ0UsbUJBQW1CLElBQ2YsbUJBQ0EsR0FBQSwwQ0FBWSxnQkFBZ0I7QUFDbEMsa0JBQVksV0FBVSxHQUFBLDBDQUFZLFFBQVE7QUFFMUMsZUFBUyxVQUFTLEdBQUEsMENBQWUsSUFBSTs7O09BQTRCOztBQUduRSxRQUFJLENBQUMsU0FBUyxVQUFVLENBQUMsU0FBUyxPQUFPLFFBQVE7QUFDL0MsZ0RBQUssV0FBVyxPQUFPLGVBQWUsQ0FBQztBQUN2Qzs7QUFHRixVQUFNLEVBQUEsY0FBZSxJQUFLO0FBQzFCLFFBQUksZUFBZTtBQUNqQixZQUFNLE9BQU8sY0FBYyxTQUFTLEVBQUU7QUFDdEMsVUFBSSxRQUFRLENBQUMsU0FBUyxLQUNwQixVQUFTLE9BQU87O0FBSXBCLFFBQUksYUFBYSxTQUFTLE9BQU87QUFDakMsV0FBTyxjQUFjO0FBQ25CLFlBQU0sVUFBVSxTQUFTLE9BQU8sVUFBVTtBQUMxQyxZQUFNLFFBQVEsUUFBUSxLQUFLLFVBQVUsMENBQUssT0FBTyxPQUFPO0FBRXhELFlBQU0sU0FBUyxNQUFNO0FBQ25CLGlCQUFTLE9BQU8sT0FBTyxZQUFZLENBQUM7O0FBR3RDLFVBQ0UsQ0FBQyxTQUNBLE1BQU0sZ0JBQWdCLE1BQU0sYUFBYSxTQUFTLE1BQU0sRUFBRSxHQUMzRDtBQUNBLGVBQU07QUFDTjs7QUFHRixVQUFJLHdCQUF3QixNQUFNLFVBQVUsc0JBQXNCO0FBQ2hFLGVBQU07QUFDTjs7QUFHRixVQUFJLGtCQUFrQixTQUFTLE1BQU0sU0FDbkM7QUFBQSxZQUFJLEVBQUMsR0FBQSwyQ0FBVSxTQUFTLE1BQU0sRUFBRSxHQUFHO0FBQ2pDLGlCQUFNO0FBQ047OztBQUlKLFVBQUksQ0FBQyxNQUFNLFFBQVE7QUFDakIsMkJBQW1CO0FBQ25CLGNBQU0sU0FDSixNQUNBO1VBQ0U7WUFBQyxNQUFNO1lBQUk7O1VBQ1g7WUFBQyxNQUFNO1lBQU07O1VBQ2I7WUFBQyxNQUFNO1lBQVU7O1VBQ2pCO1lBQUMsTUFBTTtZQUFXOztVQUVqQixJQUFJLENBQUMsQ0FBQyxTQUFTLEtBQUssTUFBTTtBQUN6QixjQUFJLENBQUMsUUFBUztBQUNkLGtCQUFRLE1BQU0sUUFBUSxPQUFPLElBQUksVUFBVTtZQUFDO2FBQ3pDLElBQUksQ0FBQyxXQUFXO0FBQ2Ysb0JBQVEsUUFBUSxPQUFPLE1BQUssV0FBQSxJQUFnQjtjQUFDO2VBQVMsSUFDcEQsQ0FBQyxNQUFNLEVBQUUsWUFBVyxDQUFFO1dBRXpCLEVBQ0EsS0FBSTtTQUNSLEVBQ0EsS0FBSSxFQUNKLE9BQU8sQ0FBQyxNQUFNLEtBQUssRUFBRSxLQUFJLENBQUUsRUFDM0IsS0FBSyxHQUFHO0FBRWIsWUFBSSxNQUFNLFVBQ1IsWUFBVyxZQUFZLE1BQU0sV0FBVztBQUN0QyxjQUFJLDBDQUFLLFVBQVUsUUFBUSxFQUFHO0FBQzlCLG9EQUFLLFVBQVUsUUFBUSxJQUFJLE1BQU07O0FBSXJDLFlBQUksWUFBWTtBQUNoQixtQkFBVyxRQUFRLE1BQU0sT0FBTztBQUM5QixjQUFJLENBQUMsS0FBTTtBQUNYO0FBRUEsZ0JBQU0sRUFBQSxPQUFRLElBQUs7QUFDbkIsY0FBSSxRQUFRO0FBQ1Ysc0RBQUssUUFBUSxNQUFNLElBQUksTUFBTTtBQUM3QixrQkFBTSxVQUFVLElBQUksTUFBTTs7QUFHNUIsZ0JBQU0saUJBQ0osYUFBYSxJQUFJLEtBQUssY0FBYyxTQUFTO0FBQy9DLGVBQUssYUFBYSxJQUFJLE1BQU0sRUFBRSxJQUFJLGNBQWM7Ozs7O0FBTXhELE1BQUksaUJBQ0YsRUFBQSxHQUFBLDBDQUFZLE1BQUs7QUFHbkIscUNBQVk7O0FBR1AsU0FBUywwQ0FBUyxPQUFPLGNBQWNDLFVBQVM7QUFDckQsWUFBVSxRQUFRLENBQUE7QUFFbEIsUUFBTSxTQUFTLENBQUE7QUFDZixXQUFTLEtBQUssYUFDWixRQUFPLENBQUMsSUFBSSwwQ0FBUSxHQUFHLE9BQU8sY0FBY0EsUUFBTztBQUdyRCxTQUFPOztBQUdGLFNBQVMsMENBQVEsVUFBVSxPQUFPLGNBQWNBLFVBQVM7QUFDOUQsUUFBTSxXQUFXLGFBQWEsUUFBUTtBQUN0QyxNQUFJLFFBQ0RBLFlBQVdBLFNBQVEsYUFBYSxRQUFRLE1BQ3hDLE1BQU0sUUFBUSxLQUFLLFFBQVEsTUFBTSxRQUFRLEtBQUssU0FDM0MsTUFBTSxRQUFRLElBQ2Q7QUFFTixNQUFJLENBQUMsU0FDSCxRQUFPO0FBR1QsTUFDRSxTQUFTLFFBQ1QsU0FBUyxTQUNULE9BQU8sU0FBUyxTQUFTLE9BQU8sT0FBSztBQUVyQyxRQUFJLE9BQU8sU0FBUyxTQUFTLFVBQzNCLFNBQVEsU0FBUyxVQUFVLFFBQVE7UUFFbkMsU0FBUSxTQUFTLE1BQU0sWUFBWSxLQUFLOztBQUk1QyxNQUFJLFNBQVMsYUFBYSxNQUN4QixTQUFRLFNBQVMsVUFBVSxLQUFLO0FBR2xDLE1BQ0UsU0FBUyxRQUNSLFNBQVMsV0FBVyxTQUFTLFFBQVEsUUFBUSxLQUFLLEtBQUssR0FFeEQsU0FBUSxTQUFTO0FBR25CLFNBQU87O0FENVNULElBQU0seUNBQWdCO0FBQ3RCLElBQUksNkJBQU87QUFFWCxTQUFTLDBCQUFJLFNBQVM7QUFDcEIsTUFBSSxRQUFRLEdBQ1YsUUFBTztBQUdULFVBQ0UsR0FBQSwyQ0FBSyxPQUFPLE9BQU8sTUFDbkIsR0FBQSwyQ0FBSyxRQUFPLEdBQUEsMkNBQUssUUFBUSxPQUFPLENBQUMsTUFDakMsR0FBQSwyQ0FBSyxRQUFPLEdBQUEsMkNBQUssUUFBUSxPQUFPLENBQUM7O0FBSXJDLFNBQVMsOEJBQVE7QUFDZiwrQkFBTzs7QUFHVCxlQUFlLDZCQUFPLE9BQU8sRUFBQSxZQUFZLE9BQVEsSUFBSyxDQUFBLEdBQUk7QUFDeEQsTUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEtBQUksRUFBRyxPQUFRLFFBQU87QUFDM0MsaUJBQWUsYUFBYTtBQUU1QixTQUFNLEdBQUEsMkNBQUssTUFBTTtJQUFFLFFBQVEsVUFBVTtHQUFzQjtBQUUzRCxRQUFNLFNBQVMsTUFDWixZQUFXLEVBQ1gsUUFBTyxTQUFVLEtBQUssRUFDdEIsTUFBSyxTQUFBLEVBQ0wsT0FBTyxDQUFDLE1BQU0sR0FBRyxVQUFVO0FBQzFCLFdBQU8sS0FBSyxLQUFJLEtBQU0sTUFBTSxRQUFRLElBQUksS0FBSztHQUM5QztBQUVILE1BQUksQ0FBQyxPQUFPLE9BQVE7QUFFcEIsTUFBSSxPQUFPLCtCQUFTLDZCQUFPLE9BQU8sUUFBTyxHQUFBLDJDQUFLLE1BQU07QUFDcEQsTUFBSSxTQUFTO0FBRWIsYUFBVyxVQUFTLFFBQVE7QUFDMUIsUUFBSSxDQUFDLEtBQUssT0FBUTtBQUVsQixjQUFVLENBQUE7QUFDVixhQUFTLENBQUE7QUFFVCxlQUFXLFNBQVMsTUFBTTtBQUN4QixVQUFJLENBQUMsTUFBTSxPQUFRO0FBQ25CLFlBQU0sUUFBUSxNQUFNLE9BQU8sUUFBUSxJQUFJLE1BQUssRUFBRTtBQUM5QyxVQUFJLFNBQVMsR0FBSTtBQUVqQixjQUFRLEtBQUssS0FBSztBQUNsQixhQUFPLE1BQU0sRUFBRSxNQUFNLE9BQU8sTUFBTSxFQUFFLElBQUk7QUFDeEMsYUFBTyxNQUFNLEVBQUUsS0FBSyxNQUFNLE1BQU0sU0FBUSxJQUFJLFFBQVE7O0FBR3RELFdBQU87O0FBR1QsTUFBSSxRQUFRLFNBQVMsRUFDbkIsUUFBTztBQUdULFVBQVEsS0FBSyxDQUFDLEdBQUcsTUFBTTtBQUNyQixVQUFNLFNBQVMsT0FBTyxFQUFFLEVBQUU7QUFDMUIsVUFBTSxTQUFTLE9BQU8sRUFBRSxFQUFFO0FBRTFCLFFBQUksVUFBVSxPQUNaLFFBQU8sRUFBRSxHQUFHLGNBQWMsRUFBRSxFQUFFO0FBR2hDLFdBQU8sU0FBUztHQUNqQjtBQUVELE1BQUksUUFBUSxTQUFTLFdBQ25CLFdBQVUsUUFBUSxNQUFNLEdBQUcsVUFBVTtBQUd2QyxTQUFPOztJQUdULDJDQUFlO1VBQUU7T0FBUTtTQUFLO29CQUFPOztBSjVFOUIsSUFBTSw0Q0FBWTtFQUN2QjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBRFpLLFNBQVMsMENBQVUsR0FBUSxHQUFpQjtBQUNqRCxTQUNFLE1BQU0sUUFBUSxDQUFDLEtBQ2YsTUFBTSxRQUFRLENBQUMsS0FDZixFQUFFLFdBQVcsRUFBRSxVQUNmLEVBQUUsTUFBTSxDQUFDLEtBQUssVUFBVSxPQUFPLEVBQUUsS0FBSyxDQUFDOztBQUlwQyxlQUFlLDBDQUFNLFNBQVMsR0FBRztBQUN0QyxXQUFTLEtBQUs7T0FBSSxNQUFNLE1BQU0sRUFBRSxLQUFJO0lBQ2xDLE9BQU0sSUFBSSxRQUFRLHFCQUFxQjs7QUFJcEMsU0FBUywwQ0FBYSxPQUFPLEVBQUEsWUFBYyxFQUFDLElBQUssQ0FBQSxHQUFJO0FBQzFELFFBQU0sT0FDSixNQUFNLE1BQU0sU0FBUyxNQUNwQixNQUFNO0FBQ0wsZ0JBQVk7QUFDWixXQUFPLE1BQU0sTUFBTSxTQUFTO0tBQzdCO0FBRUgsUUFBTSxZQUFpQjtJQUNyQixJQUFJLE1BQU07SUFDVixNQUFNLE1BQU07SUFDWixRQUFRLEtBQUs7SUFDYixTQUFTLEtBQUs7SUFDZCxVQUFVLE1BQU07SUFDaEIsWUFBWSxLQUFLLGNBQWMsTUFBTTs7QUFHdkMsTUFBSSxNQUFNLE1BQU0sU0FBUyxFQUN2QixXQUFVLE9BQU8sWUFBWTtBQUcvQixNQUFJLEtBQUssSUFDUCxXQUFVLE1BQU0sS0FBSztBQUd2QixNQUFJLE1BQU0sV0FBVyxNQUFNLFFBQVEsT0FDakMsV0FBVSxVQUFVLE1BQU07QUFHNUIsTUFBSSxNQUFNLGFBQWEsTUFBTSxVQUFVLE9BQ3JDLFdBQVUsWUFBWSxNQUFNO0FBRzlCLFNBQU87O0FTbERULElBQU0sbUNBQWE7RUFDakIsVUFBVTtJQUNSLFNBQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7OztJQUdaLE9BQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7Ozs7RUFLZCxRQUNFLG9CQUFBLDJDQUFDLE9BQUc7SUFBQyxPQUFNO0lBQTZCLFNBQVE7Y0FDOUMsb0JBQUEsMkNBQUMsUUFBSTtNQUFDLEdBQUU7OztFQUlaLE9BQU87SUFDTCxTQUNFLG9CQUFBLDJDQUFDLE9BQUc7TUFBQyxPQUFNO01BQTZCLFNBQVE7Z0JBQzlDLG9CQUFBLDJDQUFDLFFBQUk7UUFBQyxHQUFFOzs7SUFHWixPQUNFLG9CQUFBLDJDQUFDLE9BQUc7TUFBQyxPQUFNO01BQTZCLFNBQVE7Z0JBQzlDLG9CQUFBLDJDQUFDLFFBQUk7UUFBQyxHQUFFOzs7O0VBS2QsT0FBTztJQUNMLFNBQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7OztJQUdaLE9BQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7Ozs7RUFLZCxVQUFVO0lBQ1IsU0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQUMsT0FBTTtNQUE2QixTQUFROztRQUM5QyxvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7UUFDUixvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7OztJQUdaLE9BQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7Ozs7RUFLZCxRQUFRO0lBQ04sU0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQUMsT0FBTTtNQUE2QixTQUFROztRQUM5QyxvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7UUFDUixvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7OztJQUdaLE9BQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7Ozs7RUFLZCxTQUFTO0lBQ1AsU0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQUMsT0FBTTtNQUE2QixTQUFROztRQUM5QyxvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7UUFDUixvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7OztJQUdaLE9BQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7Ozs7RUFLZCxRQUFRO0lBQ04sU0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQUMsT0FBTTtNQUE2QixTQUFROztRQUM5QyxvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7UUFDUixvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7OztJQUdaLE9BQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7Ozs7RUFLZCxRQUFRO0lBQ04sU0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQUMsT0FBTTtNQUE2QixTQUFROztRQUM5QyxvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7UUFDUixvQkFBQSwyQ0FBQyxRQUFJO1VBQUMsR0FBRTs7OztJQUdaLE9BQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLE9BQU07TUFBNkIsU0FBUTtnQkFDOUMsb0JBQUEsMkNBQUMsUUFBSTtRQUFDLEdBQUU7Ozs7RUFLZCxTQUFTO0lBQ1AsU0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQUMsT0FBTTtNQUE2QixTQUFRO2dCQUM5QyxvQkFBQSwyQ0FBQyxRQUFJO1FBQUMsR0FBRTs7O0lBR1osT0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQUMsT0FBTTtNQUE2QixTQUFRO2dCQUM5QyxvQkFBQSwyQ0FBQyxRQUFJO1FBQUMsR0FBRTs7Ozs7QUFNaEIsSUFBTSwrQkFBUztFQUNiLE9BQ0Usb0JBQUEsMkNBQUMsT0FBRztJQUFDLE9BQU07SUFBNkIsU0FBUTtjQUM5QyxvQkFBQSwyQ0FBQyxRQUFJO01BQUMsR0FBRTs7O0VBSVosUUFDRSxvQkFBQSwyQ0FBQyxPQUFHO0lBQUMsT0FBTTtJQUE2QixTQUFRO2NBQzlDLG9CQUFBLDJDQUFDLFFBQUk7TUFBQyxHQUFFOzs7O0lBS2QsMkNBQWU7Y0FBRTtVQUFZOztBRTdJZCxTQUFBLHlDQUFlLE9BQU87QUFDbkMsTUFBSSxFQUFBLElBQUksTUFBTSxNQUFPLElBQUs7QUFFMUIsTUFBSSxNQUFNLFlBQVk7QUFDcEIsVUFBTSxVQUFVLE1BQU0sV0FBVyxPQUFNLEdBQUEsMENBQVksZ0JBQWdCO0FBRW5FLFFBQUksU0FBUztBQUNYLFdBQUssUUFBUSxDQUFDO0FBRWQsVUFBSSxRQUFRLENBQUMsRUFDWCxRQUFPLFFBQVEsQ0FBQzs7O0FBS3RCLFlBQVUsU0FBUSxHQUFBLDBDQUFZLElBQUksTUFBTSxNQUFNLE1BQU07QUFDcEQsTUFBSSxDQUFDLE1BQU8sUUFBTyxNQUFNO0FBRXpCLFFBQU0sWUFBWSxNQUFNLE1BQU0sT0FBTyxDQUFDLEtBQUssTUFBTSxNQUFNLENBQUM7QUFFeEQsUUFBTSxXQUNKLFVBQVUsUUFDVCxNQUFNLE9BQU8sWUFBWSxDQUFDLE1BQU0sY0FDN0IsT0FBTyxNQUFNLGdCQUFnQixhQUMzQixNQUFNLFlBQVksTUFBTSxLQUFLLFVBQVUsT0FBTyxJQUM5QyxpREFBaUQsTUFBTSxHQUFHLGVBQWUsTUFBTSxHQUFHLE9BQU8sVUFBVSxPQUFPLFNBQzVHO0FBRU4sUUFBTSxpQkFDSixPQUFPLE1BQU0sc0JBQXNCLGFBQy9CLE1BQU0sa0JBQWtCLE1BQU0sR0FBRyxJQUNqQyxpREFBaUQsTUFBTSxHQUFHLGVBQWUsTUFBTSxHQUFHO0FBRXhGLFNBQ0Usb0JBQUEsMkNBQUMsUUFBSTtJQUFDLE9BQU07SUFBbUIsa0JBQWdCLE1BQU07Y0FDbEQsV0FDQyxvQkFBQSwyQ0FBQyxPQUFHO01BQ0YsT0FBTztRQUNMLFVBQVUsTUFBTSxRQUFRO1FBQ3hCLFdBQVcsTUFBTSxRQUFRO1FBQ3pCLFNBQVM7O01BRVgsS0FBSyxVQUFVLFVBQVUsVUFBVTtNQUNuQyxLQUFLO1NBRUwsTUFBTSxPQUFPLFdBQ2Ysb0JBQUEsMkNBQUMsUUFBSTtNQUNILE9BQU87UUFDTCxVQUFVLE1BQU07UUFDaEIsWUFDRTs7Z0JBR0gsVUFBVTtTQUdiLG9CQUFBLDJDQUFDLFFBQUk7TUFDSCxPQUFPO1FBQ0wsU0FBUztRQUNULE9BQU8sTUFBTTtRQUNiLFFBQVEsTUFBTTtRQUNkLGlCQUFpQixPQUFPLGNBQWM7UUFDdEMsZ0JBQWdCLEdBQUcsT0FBTSxHQUFBLDJDQUFLLE1BQU0sSUFBSSxLQUN0QyxPQUFNLEdBQUEsMkNBQUssTUFBTSxJQUFJO1FBRXZCLG9CQUFvQixHQUNqQixRQUFPLEdBQUEsMkNBQUssTUFBTSxPQUFPLEtBQU0sVUFBVSxDQUFDLEtBQ3ZDLFFBQU8sR0FBQSwyQ0FBSyxNQUFNLE9BQU8sS0FBTSxVQUFVLENBQUM7Ozs7O0FHbkU1RCxJQUFNLDBDQUNKLE9BQU8sV0FBVyxlQUFlLE9BQU8sY0FDcEMsT0FBTyxjQUNQO0FBRVMsSUFBTSwyQ0FBTixjQUEwQix3Q0FBaUI7RUFDeEQsV0FBVyxxQkFBcUI7QUFDOUIsV0FBTyxPQUFPLEtBQUssS0FBSyxLQUFLOztFQWdCL0IsT0FBTyxRQUFRLENBQUEsR0FBSTtBQUNqQixhQUFTLEtBQUssTUFDWixNQUFLLHlCQUF5QixHQUFHLE1BQU0sTUFBTSxDQUFDLENBQUM7O0VBSW5ELHlCQUF5QkMsT0FBTSxHQUFHLFVBQVU7QUFDMUMsUUFBSSxDQUFDLEtBQUssVUFBVztBQUVyQixVQUFNLFNBQVEsR0FBQSwyQ0FDWkEsT0FDQTtNQUFFLENBQUNBLEtBQUksR0FBRztPQUNWLEtBQUssWUFBWSxPQUNqQixJQUFJO0FBR04sUUFBSSxLQUFLLFVBQVUsMEJBQ2pCLE1BQUssVUFBVSwwQkFBMEI7TUFBRSxDQUFDQSxLQUFJLEdBQUc7S0FBTztTQUNyRDtBQUNMLFdBQUssVUFBVSxNQUFNQSxLQUFJLElBQUk7QUFDN0IsV0FBSyxVQUFVLFlBQVc7OztFQUk5Qix1QkFBdUI7QUFDckIsU0FBSyxlQUFlO0FBRXBCLFFBQUksS0FBSyxhQUFhLEtBQUssVUFBVSxXQUNuQyxNQUFLLFVBQVUsV0FBVTs7RUF6QzdCLFlBQVksUUFBUSxDQUFBLEdBQUk7QUFDdEIsVUFBSztBQUNMLFNBQUssUUFBUTtBQUViLFFBQUksTUFBTSxVQUFVLE1BQU0sS0FBSztBQUM3QixVQUFJLE1BQU07QUFDVixZQUFNLFNBQVMsTUFBTSxXQUFXLE1BQU0sTUFBTSxPQUFPLE1BQU0sSUFBSTtBQUU3RCxVQUFJLElBQUssS0FBSSxZQUFZO0FBQ3pCLFVBQUksT0FBUSxRQUFPLFlBQVksSUFBSTs7OztBQ25CMUIsSUFBTSwyQ0FBTixlQUE0QixHQUFBLDBDQUFXO0VBUXBELFlBQVk7QUFDVixTQUFLLGFBQWE7TUFBRSxNQUFNO0tBQVE7O0VBR3BDLGFBQWEsUUFBUTtBQUNuQixRQUFJLENBQUMsT0FBUTtBQUViLFVBQU0sUUFBUSxTQUFTLGNBQWMsT0FBTztBQUM1QyxVQUFNLGNBQWM7QUFFcEIsU0FBSyxXQUFXLGFBQWEsT0FBTyxLQUFLLFdBQVcsVUFBVTs7RUFqQmhFLFlBQVksT0FBTyxFQUFBLE9BQVEsSUFBSyxDQUFBLEdBQUk7QUFDbEMsVUFBTSxLQUFLO0FBRVgsU0FBSyxVQUFTO0FBQ2QsU0FBSyxhQUFhLE1BQU07OztJQ041QiwyQ0FBZTtFQUNiLFVBQVU7RUFDVixJQUFJO0VBQ0osUUFBUTtFQUNSLFlBQVk7RUFDWixNQUFNO0lBQ0osT0FBTztJQUNQLFdBQVcsQ0FBQyxVQUFVO0FBRXBCLFVBQUksQ0FBQyxLQUFLLEtBQUssS0FBSyxFQUNsQixRQUFPLEdBQUcsS0FBSztBQUdqQixhQUFPOzs7O0VBS1gsTUFBSyxHQUFBLDBDQUFZO0VBQ2pCLE9BQU0sR0FBQSwwQ0FBWTs7QUpkTCxJQUFNLDJDQUFOLGVBQTJCLEdBQUEsMENBQVc7RUFPbkQsTUFBTSxvQkFBb0I7QUFDeEIsVUFBTSxTQUFRLEdBQUEsMkNBQVMsS0FBSyxRQUFPLEdBQUEsMkNBQVksSUFBSTtBQUNuRCxVQUFNLFVBQVU7QUFDaEIsVUFBTSxNQUFNLENBQUMsY0FBYztBQUN6QixXQUFLLFlBQVk7O0FBR25CLFdBQU0sR0FBQSwyQ0FBSTtBQUNWLFFBQUksS0FBSyxhQUFjO0FBRXZCLEtBQUEsR0FBQSwyQ0FBTyxvQkFBQSw0Q0FBQyxHQUFBLDJDQUFLO01BQUUsR0FBRztRQUFXLElBQUk7O0VBZG5DLFlBQVksT0FBTztBQUNqQixVQUFNLEtBQUs7OztDQUhiLEdBQUEsMENBRG1CLDBDQUNaLFVBQVEsR0FBQSx5Q0FBVTtBQW9CM0IsSUFBSSxPQUFPLG1CQUFtQixlQUFlLENBQUMsZUFBZSxJQUFJLFVBQVUsRUFDekUsZ0JBQWUsT0FBTyxZQUFZLHdDQUFZO0FtQjFCaEQsSUFBSUM7QUFBSixJQUdJQztBQUhKLElBa0JJQztBQWxCSixJQVNJQywwQkFBb0IsQ0FBQTtBQVR4QixJQVdJQywyQkFBZ0JDLEdBQUFBLDJDQUFBQTtBQVhwQixJQVlJQywyQkFBa0JELEdBQUFBLDJDQUFBQTtBQVp0QixJQWFJRSwyQkFBZUYsR0FBQUEsMkNBQVFHO0FBYjNCLElBY0lDLDJCQUFZSixHQUFBQSwyQ0FBQUE7QUFkaEIsSUFlSUssMkJBQW1CTCxHQUFBQSwyQ0FBUU07QUErUS9CLFNBQVNDLDBCQUFBQTtBQUFBQSxNQUNKQztBQUFBQSxPQUVKQyx3QkFBa0JDLEtBQUssU0FBQ0MsS0FBR0MsSUFBQUE7QUFBQUEsV0FBTUQsSUFBQUEsSUFBQUEsTUFBa0JDLEdBQUFBLElBQUFBO0dBQUFBLEdBQzVDSixLQUFZQyx3QkFBa0JJLElBQUFBLElBQUFBLEtBQy9CTCxHQUFBQSxJQUFBQSxLQUFBQTtBQUVKQSxPQUFBQSxJQUFBQSxJQUFrQ00sUUFBUUMsdUJBQUFBLEdBQzFDUCxHQUFBQSxJQUFBQSxJQUFrQ00sUUFBUUUsdUJBQUFBLEdBQzFDUixHQUFBQSxJQUFBQSxNQUFvQyxDQUFBO1dBQzVCUyxJQUFBQTtBQUNSVCxPQUFBQSxJQUFBQSxNQUFvQyxDQUFBLElBQ3BDVSxHQUFBQSwyQ0FBQUEsSUFBb0JELElBQUdULEdBQUFBLEdBQUFBOzs7Q0F0UjFCVSxHQUFBQSwyQ0FBQUEsTUFBZ0IsU0FBQUMsS0FBQUE7QUFDZkMsNEJBQW1CLE1BQ2ZDLDJCQUFlQSx3QkFBY0YsR0FBQUE7SUFHbENELEdBQUFBLDJDQUFBQSxNQUFrQixTQUFBQyxLQUFBQTtBQUNiRyw2QkFBaUJBLHdCQUFnQkgsR0FBQUEsR0FHckNJLDBCQUFlO0FBQUEsTUFFVEMsTUFITkosMEJBQW1CRCxJQUFBQSxLQUFBQTtBQUlmSyxTQUNIQSxHQUFBQSxJQUFzQlYsUUFBUUMsdUJBQUFBLEdBQzlCUyxHQUFBQSxJQUFzQlYsUUFBUUUsdUJBQUFBLEdBQzlCUSxHQUFBQSxNQUF3QixDQUFBO0lBSTFCTixHQUFBQSwyQ0FBUU8sU0FBUyxTQUFBTixJQUFBQTtBQUNaTyw2QkFBY0Esd0JBQWFQLEVBQUFBO0FBQUFBLE1BRXpCUSxLQUFJUixHQUFBQTtBQUNOUSxRQUFLQSxHQUFBQSxPQUFhQSxHQUFBQSxJQUFBQSxJQUEwQkMsV0FzU3pCLE1BclNYbkIsd0JBQWtCb0IsS0FBS0YsRUFBQUEsS0FxU1BHLDZCQUFZWixHQUFBQSwyQ0FBUWEsMkJBQy9DRCwyQkFBVVosR0FBQUEsMkNBQVFhLDBCQXZCcEIsU0FBd0JDLEtBQUFBO0FBQUFBLFFBUW5CQyxJQVBFQyxLQUFPLFdBQUE7QUFDWkMsbUJBQWFDLEVBQUFBLEdBQ1RDLDJCQUFTQyxxQkFBcUJMLEVBQUFBLEdBQ2xDTSxXQUFXUCxHQUFBQTtPQUVOSSxLQUFVRyxXQUFXTCxJQWhUUixHQUFBO0FBbVRmRyxnQ0FDSEosS0FBTUYsc0JBQXNCRyxFQUFBQTtLQWNBM0IsdUJBQUFBLElBclM3QmEsMEJBQW1CO0lBR3BCRixHQUFBQSwyQ0FBQUEsTUFBa0IsU0FBQ0MsS0FBT3FCLElBQUFBO0FBQ3pCQSxLQUFZQyxLQUFLLFNBQUFqQyxLQUFBQTtBQUFBQSxRQUFBQTtBQUVmQSxVQUFBQSxJQUEyQk0sUUFBUUMsdUJBQUFBLEdBQ25DUCxJQUFBQSxNQUE2QkEsSUFBQUEsSUFBMkJrQyxPQUFPLFNBQUFDLEtBQUFBO0FBQUFBLGVBQUFBLENBQzlEQSxJQUFBQSxNQUFZM0Isd0JBQWEyQixHQUFBQTtPQUFBQTthQUVsQjFCLEtBQUFBO0FBQ1J1QixTQUFZQyxLQUFLLFNBQUFkLEtBQUFBO0FBQ1pBLFlBQUFBLFFBQW9CQSxJQUFBQSxNQUFxQixDQUFBO09BQUEsR0FFOUNhLEtBQWMsQ0FBQSxJQUNkdEIsR0FBQUEsMkNBQUFBLElBQW9CRCxLQUFHVCxJQUFBQSxHQUFBQTs7R0FBQUEsR0FJckJvQywyQkFBV0Esd0JBQVV6QixLQUFPcUIsRUFBQUE7SUFHakN0QixHQUFBQSwyQ0FBUTJCLFVBQVUsU0FBQTFCLEtBQUFBO0FBQ2IyQiw2QkFBa0JBLHdCQUFpQjNCLEdBQUFBO0FBQUFBLE1BSWxDNEIsSUFGQ3BCLE1BQUlSLElBQUFBO0FBQ05RLFNBQUtBLElBQUFBLFFBRVJBLElBQUFBLElBQUFBLEdBQWdCYixRQUFRLFNBQUFrQyxLQUFBQTtBQUFBQSxRQUFBQTtBQUV0QmpDLDhCQUFjaUMsR0FBQUE7YUFDTi9CLEtBQUFBO0FBQ1I4QixXQUFhOUI7O0dBQUFBLEdBR1g4QixPQUFZN0IsR0FBQUEsMkNBQUFBLElBQW9CNkIsSUFBWXBCLElBQUFBLEdBQUFBOztBQThObEQsSUFBSVUsMEJBQTBDLGNBQUEsT0FBekJOO0FBMkNyQixTQUFTaEIsd0JBQWNrQyxLQUFBQTtBQUFBQSxNQUdoQkMsTUFBTzlCLHlCQUNUK0IsTUFBVUYsSUFBQUE7QUFDUSxnQkFBQSxPQUFYRSxRQUNWRixJQUFBQSxNQUFBQSxRQUNBRSxJQUFBQSxJQUVEL0IsMEJBQW1COEI7O0FBT3BCLFNBQVNsQyx3QkFBYWlDLEtBQUFBO0FBQUFBLE1BR2ZDLE1BQU85QjtBQUNiNkIsTUFBQUEsTUFBZ0JBLElBQUFBLEdBQUFBLEdBQ2hCN0IsMEJBQW1COEI7O0FYM1diLFNBQVNFLHdCQUFPQyxJQUFLQyxJQUFBQTtBQUFBQSxXQUNsQkMsTUFBS0QsR0FBT0QsSUFBSUUsRUFBQUEsSUFBS0QsR0FBTUMsRUFBQUE7QUFBQUEsU0FDUEY7O0FBU3ZCLFNBQVNHLHdCQUFlQyxJQUFHQyxJQUFBQTtBQUFBQSxXQUN4QkgsTUFBS0UsR0FBQUEsS0FBYSxlQUFORixNQUFBQSxFQUFzQkEsTUFBS0csSUFBSSxRQUFBO0FBQU8sV0FDbERILE1BQUtHLEdBQUFBLEtBQWEsZUFBTkgsTUFBb0JFLEdBQUVGLEVBQUFBLE1BQU9HLEdBQUVILEVBQUFBLEVBQUksUUFBQTtBQUFPLFNBQUE7O0FDZHpELFNBQVNJLDBDQUFjQyxJQUFBQTtBQUFBQSxPQUN4Qk4sUUFBUU07O0NBRWRDLDBDQUFjQyxZQUFZLEtBQUlDLEdBQUFBLDhDQUVOQyx1QkFBQUEsTUFDeEJILDBDQUFjQyxVQUFVRyx3QkFBd0IsU0FBU0MsSUFBT0MsSUFBQUE7QUFBQUEsU0FDeERDLHdCQUFlQyxLQUFLSCxPQUFPQSxFQUFBQSxLQUFVRSx3QkFBZUMsS0FBS0YsT0FBT0EsRUFBQUE7O0FFVnhFLElBQUlHLDJCQUFjQyxHQUFBQSwyQ0FBQUE7Q0FDbEJBLEdBQUFBLDJDQUFBQSxNQUFnQixTQUFBQyxJQUFBQTtBQUNYQSxLQUFNQyxRQUFRRCxHQUFNQyxLQUFBQSxPQUFtQkQsR0FBTUUsUUFDaERGLEdBQU1OLE1BQU1RLE1BQU1GLEdBQU1FLEtBQ3hCRixHQUFNRSxNQUFNLE9BRVRKLDJCQUFhQSx3QkFBWUUsRUFBQUE7O0FBRzlCLElBQWFHLDBCQUNNLGVBQUEsT0FBVkMsVUFDUEEsT0FBT0MsT0FDUEQsT0FBT0MsSUFBSSxtQkFBQSxLQUNaO0FBaUNPQyxJRTlDRkMsMkJBQWdCQyxHQUFBQSwyQ0FBQUE7Q0FDdEJBLEdBQUFBLDJDQUFBQSxNQUFzQixTQUFTQyxLQUFPQyxLQUFVQyxJQUFBQTtBQUFBQSxNQUMzQ0YsSUFBTUcsTUFBQUE7QUFBQUEsYUFFTEMsSUFDQUMsS0FBUUosS0FFSkksS0FBUUEsR0FBQUEsS0FBQUEsTUFDVkQsS0FBWUMsR0FBQUEsUUFBcUJELEdBQUFBLElBQUFBLFFBQ2hCLFFBQWpCSCxJQUFBQSxRQUNIQSxJQUFBQSxNQUFnQkMsR0FBQUEsS0FDaEJELElBQUFBLE1BQXFCQyxHQUFBQSxNQUdmRSxHQUFBQSxJQUEyQkosS0FBT0MsR0FBQUE7O0FBSTVDSCwwQkFBY0UsS0FBT0MsS0FBVUMsRUFBQUE7O0FBR2hDLElBQU1JLDJCQUFhUCxHQUFBQSwyQ0FBUVE7QUF1RTNCLFNBQWdCQyw0Q0FBQUE7QUFBQUEsT0FBQUEsTUFFZ0IsR0FBQSxLQUMxQkMsSUFBYyxNQUFBLEtBQUEsTUFDUTs7QUFvSXJCLFNBQVNDLHdCQUFVTCxLQUFBQTtBQUFBQSxNQUVyQkQsTUFBWUMsSUFBQUEsR0FBQUE7QUFBQUEsU0FDVEQsT0FBYUEsSUFBQUEsT0FBd0JBLElBQUFBLElBQXFCQyxHQUFBQTs7QUNqT2xFLFNBQWdCTSw0Q0FBQUE7QUFBQUEsT0FDVkMsSUFBUSxNQUFBLEtBQ1JDLElBQU87O0NEY2JDLEdBQUFBLDJDQUFRQyxVQUFVLFNBQVNDLEtBQUFBO0FBQUFBLE1BRXBCQyxNQUFZRCxJQUFBQTtBQUNkQyxTQUFhQSxJQUFBQSxPQUNoQkEsSUFBQUEsSUFBQUEsR0FPR0EsT0FBQUEsU0FBYUQsSUFBQUEsUUFDaEJBLElBQU1FLE9BQU8sT0FHVkMsMkJBQVlBLHdCQUFXSCxHQUFBQTtJQWlFNUJJLDBDQUFTQyxZQUFZLEtBQUlDLEdBQUFBLDhDQUFBQSxNQU9hLFNBQVNDLEtBQVNDLEtBQUFBO0FBQUFBLE1BQ2pEQyxLQUFzQkQsSUFBQUEsS0FHdEJFLEtBQUlDO0FBRVcsVUFBakJELEdBQUVFLE1BQ0xGLEdBQUVFLElBQWMsQ0FBQSxJQUVqQkYsR0FBRUUsRUFBWUMsS0FBS0osRUFBQUE7QUFBQUEsTUFFYkssS0FBVUMsd0JBQVVMLEdBQUFBLEdBQUFBLEdBRXRCTSxLQUFBQSxPQUNFQyxLQUFhLFdBQUE7QUFDZEQsV0FFSkEsS0FBQUEsTUFDQVAsR0FBQUEsTUFBaUMsTUFFN0JLLEtBQ0hBLEdBQVFJLEVBQUFBLElBRVJBLEdBQUFBOztBQUlGVCxLQUFBQSxNQUFpQ1E7QUFBQUEsTUFFM0JDLEtBQXVCLFdBQUE7QUFBQSxRQUFBLENBQUEsRUFDckJSLEdBQUFBLEtBQTJCO0FBQUEsVUFHN0JBLEdBQUVTLE1BQUFBLEtBQWtCO0FBQUEsWUFDakJDLE1BQWlCVixHQUFFUyxNQUFBQTtBQUN6QlQsV0FBQUEsSUFBQUEsSUFBbUIsQ0FBQSxJQTVFdkIsU0FBU1csSUFBZXJCLEtBQU9zQixJQUFnQkMsSUFBQUE7QUFBQUEsaUJBQzFDdkIsUUFDSEEsSUFBQUEsTUFBa0IsTUFDbEJBLElBQUFBLE1BQ0NBLElBQUFBLE9BQ0FBLElBQUFBLElBQWdCd0IsSUFBSSxTQUFBQyxLQUFBQTtBQUFBQSxtQkFDbkJKLElBQWVJLEtBQU9ILElBQWdCQyxFQUFBQTtXQUFBQSxHQUdwQ3ZCLElBQUFBLE9BQ0NBLElBQUFBLElBQUFBLFFBQWdDc0IsT0FDL0J0QixJQUFBQSxPQUNIdUIsR0FBZUcsYUFBYTFCLElBQUFBLEtBQVlBLElBQUFBLEdBQUFBLEdBRXpDQSxJQUFBQSxJQUFBQSxNQUFBQSxNQUNBQSxJQUFBQSxJQUFBQSxNQUE4QnVCLE1BSzFCdkI7VUF5REhvQixLQUNBQSxJQUFBQSxJQUFBQSxLQUNBQSxJQUFBQSxJQUFBQSxHQUFBQTs7QUFBQUEsVUFNRUw7QUFBQUEsV0FGSkwsR0FBRWlCLFNBQVM7UUFBQSxLQUFlakIsR0FBQUEsTUFBd0I7T0FBQSxHQUcxQ0ssTUFBWUwsR0FBRUUsRUFBWWdCLElBQUFBLElBQ2pDYixLQUFVYyxZQUFBQTs7S0FVUEMsS0FBQUEsU0FBZXRCLElBQUFBO0FBQ2hCRSxFQUFBQSxHQUFBQSxTQUFnQ29CLE1BQ3BDcEIsR0FBRWlCLFNBQVM7SUFBQSxLQUFlakIsR0FBQUEsTUFBd0JBLEdBQUFBLElBQUFBLElBQW1CLENBQUE7R0FBQSxHQUV0RUgsSUFBUXdCLEtBQUtkLElBQVlBLEVBQUFBO0dBRzFCYiwwQ0FBU0MsVUFBVTJCLHVCQUF1QixXQUFBO0FBQUEsT0FDcENwQixJQUFjLENBQUE7R0FRcEJSLDBDQUFTQyxVQUFVNEIsU0FBUyxTQUFTQyxLQUFPZixLQUFBQTtBQUFBQSxNQUN2Q1IsS0FBQUEsS0FBMEI7QUFBQSxRQUl6QkEsS0FBQUEsSUFBQUEsS0FBdUI7QUFBQSxVQUNwQlcsTUFBaUJhLFNBQVNDLGNBQWMsS0FBQSxHQUN4Q0MsS0FBb0IxQixLQUFBQSxJQUFBQSxJQUFzQixDQUFBLEVBQUE7QUFBQSxXQUFBLElBQUEsSUFDMUIsQ0FBQSxJQXJKekIsU0FBUzJCLElBQWN0QyxLQUFPc0IsS0FBZ0JpQixLQUFBQTtBQUFBQSxlQUN6Q3ZDLFFBQ0NBLElBQUFBLE9BQW9CQSxJQUFBQSxJQUFBQSxRQUN2QkEsSUFBQUEsSUFBQUEsSUFBQUEsR0FBK0J3QyxRQUFRLFNBQUFDLEtBQUFBO0FBQ1Isd0JBQUEsT0FBbkJBLElBQUFBLE9BQStCQSxJQUFBQSxJQUFBQTtTQUFBQSxHQUczQ3pDLElBQUFBLElBQUFBLE1BQTJCLE9BSUosU0FEeEJBLE1BQVEwQyx3QkFBTyxDQUFBLEdBQUkxQyxHQUFBQSxHQUFBQSxRQUVkQSxJQUFBQSxJQUFBQSxRQUFnQ3VDLFFBQ25DdkMsSUFBQUEsSUFBQUEsTUFBOEJzQixNQUUvQnRCLElBQUFBLE1BQW1CLE9BR3BCQSxJQUFBQSxNQUNDQSxJQUFBQSxPQUNBQSxJQUFBQSxJQUFnQndCLElBQUksU0FBQUMsS0FBQUE7QUFBQUEsaUJBQ25CYSxJQUFjYixLQUFPSCxLQUFnQmlCLEdBQUFBO1NBQUFBLElBSWpDdkM7UUE2SEpXLEtBQUFBLEtBQ0FXLEtBQ0NlLEdBQUFBLE1BQXVDQSxHQUFBQSxHQUFBQTs7QUFBQUEsU0FBQUEsTUFJZjs7QUFBQSxNQUt0Qk0sS0FDTHhCLElBQUFBLFFBQW9CaUIsR0FBQUEsNENBQWNRLEdBQUFBLDRDQUFVLE1BQU1WLElBQU1TLFFBQUFBO0FBQUFBLFNBQ3JEQSxPQUFVQSxHQUFBQSxNQUFzQixPQUU3QjtLQUNOUCxHQUFBQSw0Q0FBY1EsR0FBQUEsNENBQVUsTUFBTXpCLElBQUFBLE1BQW1CLE9BQU9lLElBQU1XLFFBQUFBO0lBQzlERjs7O0FDaE1GLElBQU03QiwwQkFBVSxTQUFDZ0MsS0FBTXJCLEtBQU9zQixLQUFBQTtBQUFBQSxNQUFBQSxFQUN2QkEsSUFkZ0IsQ0FBQSxNQWNTQSxJQWZSLENBQUEsS0FxQnRCRCxJQUFLakQsRUFBS21ELE9BQU92QixHQUFBQSxHQVFoQnFCLElBQUtaLE1BQU1lLGdCQUNtQixRQUE5QkgsSUFBS1osTUFBTWUsWUFBWSxDQUFBLEtBQUEsQ0FBY0gsSUFBS2pELEVBQUtxRCxNQUFBQSxNQVFqREgsTUFBT0QsSUFBS2xELEdBQ0xtRCxPQUFNO0FBQUEsV0FDTEEsSUFBS0ksU0FBUyxJQUNwQkosS0FBS25CLElBQUFBLEVBQUxtQjtBQUFBQSxRQUVHQSxJQTFDaUIsQ0FBQSxJQTBDTUEsSUEzQ0wsQ0FBQSxFQUFBO0FBOEN0QkQsUUFBS2xELElBQVFtRCxNQUFPQSxJQTVDSixDQUFBOzs7Q0FtRGxCSywwQ0FBYUMsWUFBWSxLQUFJQyxHQUFBQSw4Q0FBQUEsTUFFTyxTQUFTQyxLQUFBQTtBQUFBQSxNQUN0Q0MsTUFBT0MsTUFDUEMsTUFBWUMsd0JBQVVILElBQUFBLEdBQUFBLEdBRXhCSSxNQUFPSixJQUFLSyxFQUFLQyxJQUFJUCxHQUFBQTtBQUFBQSxTQUN6QkssSUE1RHVCLENBQUEsS0E4RGhCLFNBQUFHLElBQUFBO0FBQUFBLFFBQ0FDLEtBQW1CLFdBQUE7QUFDbkJSLFVBQUtTLE1BQU1DLGVBS2ZOLElBQUtPLEtBQUtKLEVBQUFBLEdBQ1ZLLHdCQUFRWixLQUFNRCxLQUFPSyxHQUFBQSxLQUhyQkcsR0FBQUE7O0FBTUVMLFVBQ0hBLElBQVVNLEVBQUFBLElBRVZBLEdBQUFBOztHQUtIWiwwQ0FBYUMsVUFBVWdCLFNBQVMsU0FBU0osS0FBQUE7QUFBQUEsT0FDbkNLLElBQVEsTUFBQSxLQUNSVCxJQUFPLG9CQUFJVTtBQUFBQSxNQUVWQyxPQUFXQyxHQUFBQSwyQ0FBYVIsSUFBTU8sUUFBQUE7QUFDaENQLE1BQU1DLGVBQXdDLFFBQXpCRCxJQUFNQyxZQUFZLENBQUEsS0FJMUNNLElBQVNFLFFBQUFBO0FBQUFBLFdBSURDLE1BQUlILElBQVNJLFFBQVFELFFBQUFBLE1BWXhCZCxFQUFLZ0IsSUFBSUwsSUFBU0csR0FBQUEsR0FBS2xCLEtBQUthLElBQVE7SUFBQztJQUFHO0lBQUdiLEtBQUthO0dBQUFBO0FBQUFBLFNBRS9DTCxJQUFNTztHQUdkcEIsMENBQWFDLFVBQVV5QixxQkFBcUIxQiwwQ0FBYUMsVUFBVTBCLG9CQUFvQixXQUFBO0FBQUEsTUFBQSxNQUFBO0FBQUEsT0FPakZsQixFQUFLbUIsUUFBUSxTQUFDcEIsS0FBTUwsS0FBQUE7QUFDeEJhLDRCQUFRYSxLQUFNMUIsS0FBT0ssR0FBQUE7R0FBQUE7O0FBQUFBLElFbkhWc0IsMEJBQ00sZUFBQSxPQUFWQyxVQUF5QkEsT0FBT0MsT0FBT0QsT0FBT0MsSUFBSSxlQUFBLEtBQzFEO0FGaUhzQnhCLElFL0dqQnlCLDBCQUFBQTtBRitHaUJ6QixJRTdHakIwQiwwQkFBNkIsZUFBQSxPQUFiQztBRjZHQzNCLElFeEdqQjRCLDBCQUFvQixTQUFBQyxLQUFBQTtBQUFBQSxVQUNQLGVBQUEsT0FBVk4sVUFBNEMsWUFBQSxPQUFaQSxPQUFBQSxJQUFBQSxpQkFBQUEsZUFHdENPLEtBQUtELEdBQUFBOztDQUdSRSxHQUFBQSwyQ0FBVUMsVUFBVUMsbUJBQW1CLENBQUEsR0FTdkM7RUFDQztFQUNBO0VBQ0E7RUFDQ0MsUUFBUSxTQUFBQyxLQUFBQTtBQUNUQyxTQUFPQyxnQkFBZU4sR0FBQUEsMkNBQVVDLFdBQVdHLEtBQUs7SUFDL0NHLGNBQUFBO0lBQ0FDLEtBQUFBLFdBQUFBO0FBQUFBLGFBQ1FDLEtBQUssWUFBWUwsR0FBQUE7O0lBRXpCTSxLQUFBQSxTQUFJQyxLQUFBQTtBQUNITixhQUFPQyxlQUFlRyxNQUFNTCxLQUFLO1FBQ2hDRyxjQUFBQTtRQUNBSyxVQUFBQTtRQUNBQyxPQUFPRjtPQUFBQTs7R0FBQUE7Q0FBQUE7QUFpQ1gsSUFBSUcsMkJBQWVDLEdBQUFBLDJDQUFRQztBQVMzQixTQUFTQywwQkFBQUE7QUFBQUE7QUFFVCxTQUFTQywwQkFBQUE7QUFBQUEsU0FDRFQsS0FBS1U7O0FBR2IsU0FBU0MsMEJBQUFBO0FBQUFBLFNBQ0RYLEtBQUtZOztDQWZiTixHQUFBQSwyQ0FBUUMsUUFBUSxTQUFBTSxLQUFBQTtBQUFBQSxTQUNYUiw0QkFBY1EsTUFBSVIsd0JBQWFRLEdBQUFBLElBQ25DQSxJQUFFQyxVQUFVTix5QkFDWkssSUFBRUosdUJBQXVCQSx5QkFDekJJLElBQUVGLHFCQUFxQkEseUJBQ2ZFLElBQUVFLGNBQWNGOztBQWF6QixJQTJHSUc7QUEzR0osSUFBSUMsMEJBQXNCO0VBQ3pCbkIsY0FBQUE7RUFDQUMsS0FBQUEsV0FBQUE7QUFBQUEsV0FDUUMsS0FBS2tCOzs7QUFIZCxJQU9JQywyQkFBZWIsR0FBQUEsMkNBQVFjO0NBQzNCZCxHQUFBQSwyQ0FBUWMsUUFBUSxTQUFBQSxLQUFBQTtBQUFBQSxNQUNYQyxNQUFPRCxJQUFNQyxNQUNiQyxNQUFRRixJQUFNRSxPQUNkQyxNQUFrQkQ7QUFBQUEsTUFHRixZQUFBLE9BQVRELEtBQW1CO0FBQUEsUUFDdkJHLEtBQUFBLE9BQW1CSCxJQUFLSSxRQUFRLEdBQUE7QUFBQSxhQUc3QkMsTUFGVEgsTUFBa0IsQ0FBQSxHQUVKRCxLQUFPO0FBQUEsVUFDaEJsQixLQUFRa0IsSUFBTUksRUFBQUE7QUFFZEMsaUNBQWdCLGVBQU5ELE1BQTZCLGVBQVRMLE9BSW5CLFlBQU5LLE1BQWlCLGtCQUFrQkosT0FBa0IsUUFBVGxCLE9BSzlDLG1CQUFOc0IsTUFDQSxXQUFXSixPQUNJLFFBQWZBLElBQU1sQixRQUlOc0IsS0FBSSxVQUNZLGVBQU5BLE1BQUFBLFNBQW9CdEIsS0FNOUJBLEtBQVEsS0FDRSxpQkFBaUJ3QixLQUFLRixFQUFBQSxJQUNoQ0EsS0FBSSxlQUVKLDZCQUE2QkUsS0FBS0YsS0FBSUwsR0FBQUEsS0FBQUEsQ0FDckNRLHdCQUFrQlAsSUFBTUQsSUFBQUEsSUFFekJLLEtBQUksWUFDTSxhQUFhRSxLQUFLRixFQUFBQSxJQUM1QkEsS0FBSSxjQUNNLFlBQVlFLEtBQUtGLEVBQUFBLElBQzNCQSxLQUFJLGVBQ00sNkJBQTZCRSxLQUFLRixFQUFBQSxJQUM1Q0EsS0FBSUEsR0FBRUksWUFBQUEsSUFDSU4sTUFBb0JPLHdCQUFZSCxLQUFLRixFQUFBQSxJQUMvQ0EsS0FBSUEsR0FBRU0sUUFBQUEsWUFBb0IsS0FBQSxFQUFPRixZQUFBQSxJQUNiLFNBQVYxQixPQUNWQSxLQUFBQSxTQUdEbUIsSUFBZ0JHLEVBQUFBLElBQUt0Qjs7QUFLYixnQkFBUmlCLE9BQ0FFLElBQWdCVSxZQUNoQkMsTUFBTUMsUUFBUVosSUFBZ0JuQixLQUFBQSxNQUc5Qm1CLElBQWdCbkIsU0FBUWdDLEdBQUFBLDJDQUFhZCxJQUFNZSxRQUFBQSxFQUFVM0MsUUFBUSxTQUFBNEMsS0FBQUE7QUFDNURBLFVBQU1oQixNQUFNaUIsV0FBQUEsTUFDWGhCLElBQWdCbkIsTUFBTXFCLFFBQVFhLElBQU1oQixNQUFNbEIsS0FBQUE7S0FBQUEsSUFLakMsWUFBUmlCLE9BQW9ELFFBQWhDRSxJQUFnQmlCLGlCQUN2Q2pCLElBQWdCbkIsU0FBUWdDLEdBQUFBLDJDQUFhZCxJQUFNZSxRQUFBQSxFQUFVM0MsUUFBUSxTQUFBNEMsS0FBQUE7QUFFM0RBLFVBQU1oQixNQUFNaUIsV0FEVGhCLElBQWdCVSxXQUFBQSxNQUVsQlYsSUFBZ0JpQixhQUFhZixRQUFRYSxJQUFNaEIsTUFBTWxCLEtBQUFBLElBR2pEbUIsSUFBZ0JpQixnQkFBZ0JGLElBQU1oQixNQUFNbEI7S0FBQUEsSUFLaERnQixJQUFNRSxRQUFRQyxLQUVWRCxJQUFNSixTQUFTSSxJQUFNbUIsY0FDeEJ4Qix3QkFBb0J5QixhQUFhLGVBQWVwQixLQUN6QixRQUFuQkEsSUFBTW1CLGNBQW1CbEIsSUFBZ0JMLFFBQVFJLElBQU1tQixZQUMzRDdDLE9BQU9DLGVBQWUwQixLQUFpQixhQUFhTix1QkFBQUE7O0FBSXRERyxNQUFNdUIsV0FBV0MseUJBRWJ6QiwyQkFBY0Esd0JBQWFDLEdBQUFBOztBQUtoQyxJQUFNeUIsMkJBQWtCdkMsR0FBQUEsMkNBQUFBO0NBQ3hCQSxHQUFBQSwyQ0FBQUEsTUFBa0IsU0FBU2MsS0FBQUE7QUFDdEJ5Qiw2QkFDSEEsd0JBQWdCekIsR0FBQUEsR0FFakJKLDBCQUFtQkksSUFBQUE7O0FWak5wQixJQUFNLG9DQUFjO0VBQ2xCLE9BQU87RUFDUCxNQUFNOztBQUdPLElBQU0sMkNBQU4sZUFBeUIsR0FBQSwyQ0FBYTtFQWFuRCxXQUFXLFVBQVU7QUFDbkIsVUFBTSxFQUFBLEtBQU0sSUFBSztBQUVqQixRQUFJLE1BQU07QUFDUixVQUFJLEtBQUssSUFDUCxRQUNFLG9CQUFBLDJDQUFDLFFBQUk7UUFDSCxPQUFNO1FBQ04seUJBQXlCO1VBQUUsUUFBUSxLQUFLOzs7QUFLOUMsVUFBSSxLQUFLLElBQ1AsUUFBTyxvQkFBQSwyQ0FBQyxPQUFHO1FBQUMsS0FBSyxLQUFLOzs7QUFJMUIsVUFBTSxpQkFDSixHQUFBLDBDQUFNLFdBQVcsU0FBUyxFQUFFLE1BQUssR0FBQSwwQ0FBTSxXQUFXO0FBRXBELFVBQU0sUUFDSixLQUFLLE1BQU0sU0FBUyxTQUNoQixrQ0FBWSxLQUFLLE1BQU0sS0FBSyxJQUM1QixLQUFLLE1BQU07QUFFakIsV0FBTyxjQUFjLEtBQUssS0FBSzs7RUFHakMsU0FBUztBQUNQLFFBQUksd0JBQXdCO0FBRTVCLFdBQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUNGLElBQUc7TUFDSCxPQUFNO01BQ04saUJBQWUsS0FBSyxNQUFNO01BQzFCLEtBQUssS0FBSyxNQUFNO2dCQUVoQixvQkFBQSwyQ0FBQyxPQUFHO1FBQUMsT0FBTTs7VUFDUixLQUFLLFdBQVcsSUFBSSxDQUFDLFVBQVUsTUFBTTtBQUNwQyxrQkFBTSxRQUFRLFNBQVMsU0FBUSxHQUFBLDJDQUFLLFdBQVcsU0FBUyxFQUFFO0FBQzFELGtCQUFNLFdBQ0osQ0FBQyxLQUFLLE1BQU0sYUFBYSxTQUFTLE1BQU0sS0FBSyxNQUFNO0FBRXJELGdCQUFJLFNBQ0YseUJBQXdCO0FBRzFCLG1CQUNFLG9CQUFBLDJDQUFDLFVBQU07Y0FDTCxjQUFZO2NBQ1osaUJBQWUsWUFBWTtjQUMzQjtjQUNBLE1BQUs7Y0FDTCxPQUFNO2NBQ04sYUFBYSxDQUFDLE1BQU0sRUFBRSxlQUFjO2NBQ3BDLFNBQVMsTUFBTTtBQUNiLHFCQUFLLE1BQU0sUUFBUTs7O2lCQUFlOzt3QkFHbkMsS0FBSyxXQUFXLFFBQVE7O1dBRzlCO1VBRUQsb0JBQUEsMkNBQUMsT0FBRztZQUNGLE9BQU07WUFDTixPQUFPO2NBQ0wsT0FBTyxHQUFHLE1BQU0sS0FBSyxXQUFXLE1BQU07Y0FDdEMsU0FBUyx5QkFBeUIsT0FBTyxJQUFJO2NBQzdDLFdBQ0UsS0FBSyxNQUFNLFFBQVEsUUFDZix5QkFBeUIsd0JBQXdCLEdBQUcsT0FDcEQsY0FBYyx3QkFBd0IsR0FBRzs7Ozs7OztFQXRGM0QsY0FBYztBQUNaLFVBQUs7QUFFTCxTQUFLLGNBQWEsR0FBQSwyQ0FBSyxXQUFXLE9BQU8sQ0FBQyxhQUFhO0FBQ3JELGFBQU8sQ0FBQyxTQUFTO0tBQ2xCO0FBRUQsU0FBSyxRQUFRO01BQ1gsWUFBWSxLQUFLLFdBQVcsQ0FBQyxFQUFFOzs7O0FlakJ0QixJQUFNLDJDQUFOLGVBQWtDLEdBQUEsMkNBQWE7RUFDNUQsc0JBQXNCLFdBQVc7QUFDL0IsYUFBUyxLQUFLLFdBQVc7QUFDdkIsVUFBSSxLQUFLLFdBQVk7QUFFckIsVUFBSSxVQUFVLENBQUMsS0FBSyxLQUFLLE1BQU0sQ0FBQyxFQUM5QixRQUFPOztBQUlYLFdBQU87O0VBR1QsU0FBUztBQUNQLFdBQU8sS0FBSyxNQUFNOzs7QWxESnRCLElBQU0sb0NBQWM7RUFDbEIsZUFBZTs7QUFHRixJQUFNLDJDQUFOLGVBQXFCLEdBQUEsMkNBQVM7RUFjM0MsZ0JBQWdCLFFBQVEsS0FBSyxPQUFPO0FBQ2xDLFdBQU87TUFDTCxPQUFNLEdBQUEsMENBQU0sSUFBSSxNQUFNLEtBQUssTUFBTTtNQUNqQyxPQUFPLEtBQUssVUFBVSxNQUFNLEtBQUs7OztFQUlyQyxxQkFBcUI7QUFDbkIsU0FBSyxPQUFNLEdBQUEsMkNBQUssTUFBTSxRQUFRO0FBQzlCLFNBQUssT0FBTztNQUNWLE9BQU0sR0FBQSwyQ0FBUztNQUNmLGFBQVksR0FBQSwyQ0FBUztNQUNyQixTQUFRLEdBQUEsMkNBQVM7TUFDakIsU0FBUSxHQUFBLDJDQUFTO01BQ2pCLGNBQWEsR0FBQSwyQ0FBUztNQUN0QixpQkFBZ0IsR0FBQSwyQ0FBUztNQUN6QixnQkFBZSxHQUFBLDJDQUFTOztBQUcxQixTQUFLLFNBQVE7QUFFYixRQUNFLEtBQUssTUFBTSxnQkFBZ0IsU0FDM0IsS0FBSyxNQUFNLGtCQUFrQixVQUM3QjtBQUNBLGNBQVEsS0FDTixvRkFBb0Y7QUFHdEYsV0FBSyxNQUFNLGlCQUFpQjs7O0VBSWhDLG9CQUFvQjtBQUNsQixTQUFLLFNBQVE7QUFFYixTQUFLLGFBQWEsS0FBSyxLQUFLO0FBRTVCLFFBQUksS0FBSyxNQUFNLFdBQVc7QUFDeEIsWUFBTSxFQUFBLFlBQWEsSUFBSyxLQUFLO0FBQzdCLFVBQUksWUFBWSxRQUNkLGFBQVksUUFBUSxNQUFLOzs7RUFLL0IsMEJBQTBCLFdBQVc7QUFDbkMsU0FBSyxjQUFjLEtBQUssWUFBWSxDQUFBO0FBRXBDLGVBQVcsTUFBSyxVQUNkLE1BQUssVUFBVSxFQUFDLElBQUksVUFBVSxFQUFDO0FBR2pDLGlCQUFhLEtBQUssY0FBYztBQUNoQyxTQUFLLGlCQUFpQixXQUFXLE1BQU07QUFDckMsVUFBSSxvQkFBb0I7QUFFeEIsaUJBQVcsS0FBSyxLQUFLLFdBQVc7QUFDOUIsYUFBSyxNQUFNLENBQUMsSUFBSSxLQUFLLFVBQVUsQ0FBQztBQUVoQyxZQUFJLE1BQU0sWUFBWSxNQUFNLGFBQzFCLHFCQUFvQjs7QUFJeEIsYUFBTyxLQUFLO0FBQ1osWUFBTSxZQUFZLEtBQUssZ0JBQWU7QUFFdEMsVUFBSSxrQkFDRixRQUFPLEtBQUssTUFBTSxTQUFTO0FBRzdCLFdBQUssU0FBUyxTQUFTO0tBQ3hCOztFQUdILHVCQUF1QjtBQUNyQixTQUFLLFdBQVU7O0VBR2pCLE1BQU0sTUFBTSxZQUFZLENBQUEsR0FBSTtBQUMxQixXQUFNLEdBQUEsMkNBQUssS0FBSyxLQUFLO0FBRXJCLFNBQUssU0FBUTtBQUNiLFNBQUssVUFBUztBQUVkLFNBQUssU0FBUyxXQUFXLE1BQU07QUFDN0IsV0FBSyxrQkFBaUI7QUFDdEIsV0FBSyxZQUFXO0tBQ2pCOztFQUdILFdBQVc7QUFDVCxhQUFTLGlCQUFpQixTQUFTLEtBQUssa0JBQWtCO0FBQzFELFNBQUssUUFBTzs7RUFHZCxhQUFhO0FBQ1gsYUFBUyxvQkFBb0IsU0FBUyxLQUFLLGtCQUFrQjtBQUM3RCxTQUFLLFdBQVcsb0JBQW9CLFVBQVUsS0FBSyxpQkFBaUI7QUFDcEUsU0FBSyxVQUFTOztFQUdoQixVQUFVO0FBQ1IsU0FBSyxrQkFBaUI7QUFDdEIsU0FBSyxZQUFXOztFQUdsQixVQUFVLEVBQUEsU0FBVyxDQUFBLEVBQUUsSUFBSyxDQUFBLEdBQUk7QUFDOUIsUUFBSSxDQUFDLE1BQU0sUUFBUSxNQUFNLEVBQ3ZCLFVBQVM7TUFBQzs7QUFHWixlQUFXLFlBQVksS0FBSyxXQUFXO0FBQ3JDLFVBQUksT0FBTyxTQUFTLFFBQVEsRUFBRztBQUMvQixlQUFTLFdBQVU7O0FBR3JCLFNBQUssWUFBWSxDQUFBLEVBQUcsT0FBTyxNQUFNOztFQUduQyxXQUFXO0FBQ1QsVUFBTSxFQUFBLFdBQVksS0FBSyxHQUFBO0FBRXZCLFNBQUssS0FBSyxhQUFhLG9CQUFJLElBQUc7QUFFOUIsVUFBTSxVQUFTLEdBQUEsMkNBQUssV0FBVyxJQUFJLENBQUMsYUFBYSxTQUFTLEVBQUUsRUFBRSxLQUFLLEdBQUc7QUFDdEUsUUFBSSxLQUFLLFVBQVUsS0FBSyxVQUFVLE9BQ2hDLE1BQUssS0FBSyxPQUFPLFlBQVksS0FBSyxLQUFLLE9BQU8sUUFBUSxZQUFZO0FBRXBFLFNBQUssU0FBUztBQUVkLFNBQUssT0FBTyxDQUFBO0FBQ1osU0FBSyxLQUFLLFVBQVU7QUFFcEIsVUFBTSxTQUFTLENBQUMsTUFBTSxhQUFhO0FBQ2pDLFlBQU0sTUFBTSxDQUFBO0FBQ1osVUFBSSxlQUFlLFNBQVM7QUFDNUIsVUFBSSxVQUFVLEtBQUs7QUFDbkIsV0FBSyxLQUFLLEtBQUssR0FBRztBQUVsQixZQUFNLFdBQVcsS0FBSyxLQUFLLFNBQVM7QUFDcEMsWUFBTSxTQUFTLFdBQVcsa0NBQVksZ0JBQWdCLENBQUEsS0FBSyxHQUFBLDJDQUFTO0FBQ3BFLGFBQU8sUUFBUTtBQUNmLGFBQU8sV0FBVyxLQUFLLEtBQUssVUFBVTtBQUN0QyxXQUFLLEtBQUssTUFBTTtBQUVoQixhQUFPOztBQUdULGFBQVMsYUFBWSxZQUFZO0FBQy9CLFlBQU0sT0FBTyxDQUFBO0FBQ2IsVUFBSSxNQUFNLE9BQU8sTUFBTSxTQUFRO0FBRS9CLGVBQVMsU0FBUyxVQUFTLFFBQVE7QUFDakMsWUFBSSxJQUFJLFVBQVUsS0FBSyxXQUFVLEVBQy9CLE9BQU0sT0FBTyxNQUFNLFNBQVE7QUFHN0IsYUFBSyxLQUFLLFdBQVc7QUFDckIsWUFBSSxLQUFLLEtBQUs7O0FBR2hCLFdBQUssS0FBSyxXQUFXLElBQUksVUFBUyxJQUFJO1FBQUUsT0FBTSxHQUFBLDJDQUFTOztPQUFVOzs7RUFTckUsVUFBVSxPQUFPO0FBQ2YsUUFBSSxTQUFTLE9BQVEsUUFBTztBQUU1QixRQUFJLENBQUMsS0FBSyxXQUFXO0FBQ25CLFdBQUssWUFBWSxXQUFXLDhCQUE4QjtBQUMxRCxVQUFJLEtBQUssVUFBVSxNQUFNLE1BQUssTUFBQSxFQUFVLFFBQU87QUFFL0MsV0FBSyxVQUFVLGlCQUFpQixVQUFVLEtBQUssaUJBQWlCOztBQUdsRSxXQUFPLEtBQUssVUFBVSxVQUFVLFNBQVM7O0VBcUMzQyxtQkFBbUIsUUFBUSxLQUFLLE9BQU87QUFDckMsUUFBSSxDQUFDLE1BQU0sYUFBYztBQUN6QixVQUFNLEVBQUEsU0FBRTBCLFVBQU8sZ0JBQWlCLElBQUs7QUFFckMsVUFBTSxtQkFBbUIsTUFBTTtBQUM3QixZQUFNLEVBQUEsTUFBTyxJQUFLQSxTQUFRLHNCQUFxQjtBQUMvQyxhQUFPLEtBQUssTUFBTSxRQUFRLGVBQWU7O0FBRzNDLFVBQU0sV0FBVyxJQUFJLGVBQWUsTUFBTTtBQUN4QyxXQUFLLFVBQVU7UUFBRSxRQUFRO09BQVU7QUFDbkMsV0FBSyxTQUFTO1FBQUUsU0FBUyxpQkFBZ0I7U0FBTSxNQUFNO0FBQ25ELGFBQUssU0FBUTtBQUNiLGFBQUssWUFBWSxNQUFNO0FBQ3JCLGVBQUssa0JBQWlCO0FBQ3RCLGVBQUssWUFBVztTQUNqQjtPQUNGO0tBQ0Y7QUFFRCxhQUFTLFFBQVFBLFFBQU87QUFDeEIsU0FBSyxVQUFVLEtBQUssUUFBUTtBQUU1QixXQUFPLGlCQUFnQjs7RUFHekIsYUFBYTtBQUNYLFdBQU8sS0FBSyxNQUFNLFdBQVcsS0FBSyxNQUFNOztFQUcxQyxjQUFjLENBQUMsSUFBSSxFQUFFLEdBQUc7QUFDdEIsVUFBTSxPQUFPLEtBQUssTUFBTSxpQkFBaUIsS0FBSztBQUM5QyxVQUFNLFFBQVEsS0FBSyxFQUFFLEtBQUssS0FBSyxFQUFFLEVBQUUsRUFBRTtBQUVyQyxRQUFJLENBQUMsTUFBTztBQUNaLFlBQU8sR0FBQSwwQ0FBWSxJQUFJLEtBQUs7O0VBRzlCLG9CQUFvQjtBQUNsQixVQUFNLGFBQWEsS0FBSyxLQUFLLFdBQVc7QUFDeEMsUUFBSSxDQUFDLFdBQVk7QUFFakIsVUFBTSxvQkFBb0Isb0JBQUksSUFBRztBQUNqQyxVQUFNLHFCQUFxQixDQUFDLGVBQWU7QUFDekMsVUFBSSxjQUFjLFdBQVcsTUFBTSxXQUNqQyxZQUFXLFNBQVM7O09BQWM7O0FBSXRDLFVBQU0sa0JBQWtCO01BQ3RCLE1BQU0sS0FBSyxLQUFLLE9BQU87TUFDdkIsV0FBVztRQUFDO1FBQUs7OztBQUduQixVQUFNLFdBQVcsSUFBSSxxQkFBcUIsQ0FBQyxZQUFZO0FBQ3JELGlCQUFXLFNBQVMsU0FBUztBQUMzQixjQUFNLEtBQUssTUFBTSxPQUFPLFFBQVE7QUFDaEMsMEJBQWtCLElBQUksSUFBSSxNQUFNLGlCQUFpQjs7QUFHbkQsWUFBTSxTQUFTO1dBQUk7O0FBQ25CLGlCQUFXLENBQUMsSUFBSSxLQUFLLEtBQUssT0FDeEIsS0FBSSxPQUFPO0FBQ1QsMkJBQW1CLEVBQUU7QUFDckI7O09BR0gsZUFBZTtBQUVsQixlQUFXLEVBQUEsS0FBTSxLQUFNLEtBQUssS0FBSyxXQUFXLE9BQU0sRUFDaEQsVUFBUyxRQUFRLEtBQUssT0FBTztBQUcvQixTQUFLLFVBQVUsS0FBSyxRQUFROztFQUc5QixjQUFjO0FBQ1osVUFBTSxjQUFjO01BQUUsR0FBRyxLQUFLLE1BQU07O0FBRXBDLFVBQU0sV0FBVyxJQUFJLHFCQUNuQixDQUFDLFlBQVk7QUFDWCxpQkFBVyxTQUFTLFNBQVM7QUFDM0IsY0FBTSxRQUFRLFNBQVMsTUFBTSxPQUFPLFFBQVEsS0FBSztBQUVqRCxZQUFJLE1BQU0sZUFDUixhQUFZLEtBQUssSUFBSTtZQUVyQixRQUFPLFlBQVksS0FBSzs7QUFJNUIsV0FBSyxTQUFTOztPQUFlO09BRS9CO01BQ0UsTUFBTSxLQUFLLEtBQUssT0FBTztNQUN2QixZQUFZLEdBQ1YsS0FBSyxNQUFNLG1CQUFtQixrQ0FBWSxnQkFBZ0IsRUFBRSxVQUNwRCxLQUFLLE1BQU0sa0JBQWtCLGtDQUFZLGFBQWE7S0FDakU7QUFHSCxlQUFXLEVBQUEsS0FBTSxLQUFNLEtBQUssS0FBSyxXQUFXLE9BQU0sR0FBSTtBQUNwRCxpQkFBVyxPQUFPLEtBQ2hCLEtBQUksSUFBSSxRQUNOLFVBQVMsUUFBUSxJQUFJLE9BQU87O0FBS2xDLFNBQUssVUFBVSxLQUFLLFFBQVE7O0VBRzlCLGVBQWUsR0FBRztBQUNoQixNQUFFLGVBQWM7O0VBd0dsQixnQkFBZ0I7QUFDZCxVQUFNLFFBQVEsS0FBSyxLQUFLLFlBQVk7QUFDcEMsUUFBSSxDQUFDLE1BQU87QUFFWixVQUFNLEtBQUk7O0VBR1osU0FBUyxFQUFBLEdBQUcsT0FBTyxNQUFNLE9BQU8sSUFBSSxLQUFNLEdBQUk7QUFDNUMsVUFBTSxPQUFPLEtBQUssTUFBTSxpQkFBaUIsS0FBSztBQUM5QyxRQUFJLENBQUMsS0FBSyxPQUFRO0FBRWxCLFFBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxLQUFLLE1BQU07QUFFMUIsVUFBTSxPQUFPLE1BQU07QUFDakIsVUFBSSxNQUFNLEdBQUc7QUFDWCxZQUFJLE1BQU0sS0FBSyxDQUFDLEVBQUUsV0FBVyxRQUFRLElBQ25DLFFBQU87O0FBSVgsVUFBSSxNQUFNLElBQUk7QUFDWixZQUNFLENBQUMsRUFBRSxXQUNGLFNBQVMsU0FDVixNQUFNLGtCQUFrQixNQUFNLE1BQU0sT0FFcEMsUUFBTztVQUFDO1VBQUc7O0FBR2IsZUFBTzs7QUFHVCxVQUFJLFFBQVEsT0FBTztBQUNqQixZQUFJLE1BQU0sS0FBSyxFQUFFO0FBQ2pCLGNBQU0sWUFBWSxPQUFPLEtBQUs7QUFFOUIsY0FBTTtBQUNOLFlBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRztBQUNaLGdCQUFNO0FBQ04sZ0JBQU0sS0FBSyxFQUFFO0FBRWIsY0FBSSxDQUFDLEtBQUs7QUFDUixpQkFBSyxPQUFPLElBQUksS0FBSyxTQUFTO0FBQzlCLGlCQUFLLE9BQU8sSUFBSSxLQUFLLEVBQUUsRUFBRSxTQUFTO0FBRWxDLG1CQUFPO2NBQUM7Y0FBSTs7O0FBR2QsZUFBSyxPQUFPLElBQUksU0FBUyxJQUFJOztBQUcvQixlQUFPO1VBQUM7VUFBSTs7O0FBR2QsVUFBSSxNQUFNLE1BQU07QUFDZCxjQUFNLEtBQUssS0FBSztBQUNoQixjQUFNLE1BQU0sS0FBSyxFQUFFO0FBRW5CLFlBQUksQ0FBQyxLQUFLO0FBQ1IsZUFBSyxLQUFLLElBQUksS0FBSyxTQUFTO0FBQzVCLGVBQUssS0FBSyxJQUFJLEtBQUssRUFBRSxFQUFFLFNBQVM7QUFFaEMsaUJBQU87WUFBQztZQUFJOzs7QUFHZCxZQUFJLENBQUMsSUFBSSxFQUFFLEVBQ1QsTUFBSyxJQUFJLFNBQVM7QUFHcEIsZUFBTztVQUFDO1VBQUk7OztPQUVmO0FBRUQsUUFBSSxJQUNGLEdBQUUsZUFBYztTQUNYO0FBQ0wsVUFBSSxLQUFLLE1BQU0sSUFBSSxDQUFDLElBQUksR0FDdEIsTUFBSyxTQUFTO1FBQUUsS0FBSztVQUFDO1VBQUk7O09BQUs7QUFHakM7O0FBR0YsU0FBSyxTQUFTOztNQUFPLFVBQVU7T0FBUSxNQUFNO0FBQzNDLFdBQUssU0FBUztRQUFFLEtBQUssSUFBSSxDQUFDO09BQUc7S0FDOUI7O0VBR0gsU0FBUyxFQUFBLFlBQVksSUFBSyxHQUFJO0FBQzVCLFVBQU0sT0FBTyxLQUFLLE1BQU0saUJBQWlCLEtBQUs7QUFDOUMsUUFBSSxDQUFDLEtBQUssT0FBUTtBQUVsQixVQUFNLFNBQVMsS0FBSyxLQUFLLE9BQU87QUFDaEMsVUFBTSxhQUFhLE9BQU8sc0JBQXFCO0FBRS9DLFFBQUksWUFBWTtBQUVoQixRQUFJLE9BQU8sRUFDVCxjQUFhLEtBQUssR0FBRyxFQUFFO0FBR3pCLFFBQUksWUFBWTtBQUNkLFlBQU0sTUFDSixLQUFLLEtBQUssVUFBVSxLQUFLLEtBQUssS0FBSyxXQUFXLElBQUksVUFBVSxFQUFFO0FBQ2hFLFlBQU0sZUFBZSxJQUFJLFFBQVEsc0JBQXFCO0FBRXRELGtCQUFZLGFBQWEsT0FBTyxXQUFXLE1BQU0sT0FBTyxhQUFhOztBQUd2RSxRQUFJLE9BQU8sR0FBQztBQUNWLFVBQUksQ0FBQyxJQUNILGFBQVk7V0FDUDtBQUNMLGNBQU0sV0FBVyxLQUFLLEdBQUcsRUFBRTtBQUMzQixjQUFNLFNBQVMsWUFBWSxXQUFXLEtBQUssTUFBTTtBQUNqRCxjQUFNLFNBQ0osU0FDQSxLQUFLLE1BQU0sa0JBQ1gsS0FBSyxNQUFNLGtCQUFrQjtBQUUvQixZQUFJLFNBQVMsT0FBTyxVQUNsQixhQUFZO2lCQUNILFNBQVMsT0FBTyxZQUFZLFdBQVcsT0FDaEQsYUFBWSxTQUFTLFdBQVc7WUFFaEM7OztBQUtOLFNBQUssWUFBVztBQUNoQixXQUFPLFlBQVk7O0VBR3JCLGNBQWM7QUFDWixTQUFLLGlCQUFpQjtBQUN0QixpQkFBYSxLQUFLLGdCQUFnQjtBQUNsQyxTQUFLLG1CQUFtQixXQUFXLE1BQU07QUFDdkMsYUFBTyxLQUFLO09BQ1gsR0FBRzs7RUFPUixnQkFBZ0IsS0FBSztBQUNuQixRQUFJLEtBQUssa0JBQWtCLEtBQUssTUFBTSxVQUFXO0FBQ2pELFNBQUssU0FBUztNQUFFLEtBQUssT0FBTztRQUFDO1FBQUk7O01BQUssVUFBVTtLQUFPOztFQUd6RCxpQkFBaUIsRUFBQSxHQUFHLE9BQU8sSUFBSyxHQUFJO0FBQ2xDLFFBQUksQ0FBQyxLQUFLLE1BQU0sY0FBZTtBQUUvQixRQUFJLENBQUMsU0FBUyxJQUNaLFNBQVEsS0FBSyxjQUFjLEdBQUc7QUFHaEMsUUFBSSxPQUFPO0FBQ1QsWUFBTSxhQUFZLEdBQUEsMkNBQWEsT0FBTztRQUFFLFdBQVcsS0FBSyxNQUFNLE9BQU87T0FBRztBQUV4RSxVQUFJLEtBQUssTUFBTSxnQkFDYixFQUFBLEdBQUEsMENBQWUsSUFBSSxXQUFXLEtBQUssS0FBSztBQUcxQyxXQUFLLE1BQU0sY0FBYyxXQUFXLENBQUM7OztFQXVCekMsYUFBYTtBQUNYLFFBQUksQ0FBQyxLQUFLLE1BQU0sVUFBVztBQUMzQixTQUFLLFNBQVM7TUFBRSxXQUFXO01BQU0sVUFBVTtLQUFNO0FBRWpELFNBQUssS0FBSyxvQkFBb0IsU0FBUyxLQUFLLGVBQWU7QUFDM0QsU0FBSyxLQUFLLG9CQUFvQixXQUFXLEtBQUssaUJBQWlCOztFQUdqRSxvQkFBb0IsVUFBVTtBQUM1QixTQUFLLFNBQVM7O0tBQVk7O0VBRzVCLGdCQUFnQixNQUFNO0FBQ3BCLFNBQUssWUFBVztBQUNoQixTQUFLLFdBQVU7QUFFZixTQUFLLFNBQVM7O01BQVEsVUFBVTtLQUFNO0FBQ3RDLEtBQUEsR0FBQSwwQ0FBTSxJQUFJLFFBQVEsSUFBSTs7RUFHeEIsWUFBWTtBQUNWLFdBQ0Usb0JBQUEsNENBQUMsR0FBQSwyQ0FBVTtNQUVULEtBQUssS0FBSyxLQUFLO01BQ2YsT0FBTyxLQUFLLE1BQU07TUFDbEIsT0FBTyxLQUFLLE1BQU07TUFDbEIsS0FBSyxLQUFLO01BQ1YsV0FBVyxDQUFDLENBQUMsS0FBSyxNQUFNO01BQ3hCLFVBQVUsS0FBSyxNQUFNO01BQ3JCLFNBQVMsS0FBSztPQVBULEtBQUssTUFBTTs7RUFZdEIsZ0JBQWdCO0FBQ2QsVUFBTSxRQUFRLEtBQUssY0FBYyxLQUFLLE1BQU0sR0FBRztBQUMvQyxVQUFNLGtCQUNKLEtBQUssTUFBTSxpQkFBaUIsQ0FBQyxLQUFLLE1BQU0sY0FBYztBQUV4RCxXQUNFLG9CQUFBLDJDQUFDLE9BQUc7TUFDRixJQUFHO01BQ0gsT0FBTTtNQUNOLEtBQUssS0FBSztNQUNWLGlCQUFlLEtBQUssTUFBTTs7UUFFMUIsb0JBQUEsMkNBQUMsT0FBRztVQUFDLE9BQU07O1lBQ1Qsb0JBQUEsMkNBQUMsT0FBRztjQUNGLE9BQU07Y0FDTixPQUFPO2dCQUNMLFFBQVEsS0FBSyxNQUFNO2dCQUNuQixVQUFVLEtBQUssTUFBTTs7d0JBR3ZCLG9CQUFBLDRDQUFDLEdBQUEsMkNBQUs7Z0JBQ0o7Z0JBQ0EsSUFDRSxrQkFDSSxLQUFLLE1BQU0sa0JBQWtCLFFBQzdCLEtBQUssTUFBTSxpQkFDVixLQUFLLE1BQU0sbUJBQW1CLFFBQzNCLGVBQ0E7Z0JBRVYsS0FBSyxLQUFLLE1BQU07Z0JBQ2hCLE1BQU0sS0FBSyxNQUFNO2dCQUNqQixNQUFNLEtBQUssTUFBTSxZQUFZLEtBQUssTUFBTTtnQkFDeEMsYUFBYTtnQkFDYixtQkFBbUIsS0FBSyxNQUFNOzs7WUFJbEMsb0JBQUEsMkNBQUMsT0FBRztjQUFDLE9BQU8sVUFBVSxLQUFLLElBQUksQ0FBQyxDQUFDO3dCQUM5QixTQUFTLGtCQUNSLG9CQUFBLDJDQUFDLE9BQUc7Z0JBQUMsT0FBTyxXQUFXLEtBQUssSUFBSSxDQUFDLENBQUMsVUFBVSxLQUFLLElBQUksQ0FBQyxDQUFDOztrQkFDckQsb0JBQUEsMkNBQUMsT0FBRztvQkFBQyxPQUFNOzhCQUNSLFFBQVEsTUFBTSxRQUFPLEdBQUEsMkNBQUs7O2tCQUU3QixvQkFBQSwyQ0FBQyxPQUFHO29CQUFDLE9BQU07OEJBQ1IsUUFBUSxNQUFNLE1BQU0sQ0FBQyxFQUFFLGNBQWEsR0FBQSwyQ0FBSzs7O21CQUk5QyxvQkFBQSwyQ0FBQyxPQUFHO2dCQUFDLE9BQU07MkJBQStCLEdBQUEsMkNBQUs7Ozs7O1FBS3BELENBQUMsU0FDQSxLQUFLLE1BQU0sb0JBQW9CLGFBQy9CLEtBQUsscUJBQW9COzs7O0VBS2pDLGtCQUFrQixPQUFPLEVBQUEsS0FBSyxVQUFVLEtBQU0sR0FBSTtBQUNoRCxVQUFNQyxRQUFPLEtBQUssTUFBTTtBQUN4QixVQUFNLE9BQU8sS0FBSyxNQUFNLFlBQVksS0FBSyxNQUFNO0FBQy9DLFVBQU0sWUFBWSxNQUFNLE1BQU0sT0FBTyxDQUFDLEtBQUssTUFBTSxNQUFNLENBQUM7QUFDeEQsVUFBTSxTQUFTLFVBQVU7QUFDekIsVUFBTSxZQUFXLEdBQUEsMkNBQVUsS0FBSyxNQUFNLEtBQUssR0FBRztBQUM5QyxVQUFNLE1BQU0sSUFBSSxPQUFPLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRTtBQUV4QyxXQUNFLG9CQUFBLDRDQUFDLEdBQUEsMkNBQW1COzs7WUFBaUNBO2dCQUNuRCxvQkFBQSwyQ0FBQyxVQUFNO1FBQ0wsY0FBWTtRQUNaLGlCQUFlLFlBQVk7UUFDM0IsaUJBQWU7UUFDZixnQkFBYyxLQUFLO1FBQ25CLGlCQUFlLEtBQUssTUFBTTtRQUMxQixPQUFPLEtBQUssTUFBTSxtQkFBbUIsU0FBUyxNQUFNLE9BQU87UUFDM0QsTUFBSztRQUNMLE9BQU07UUFDTixVQUFTO1FBQ1QsU0FBUyxDQUFDLE1BQU0sS0FBSyxpQkFBaUI7OztTQUFZO1FBQ2xELGNBQWMsTUFBTSxLQUFLLGdCQUFnQixHQUFHO1FBQzVDLGNBQWMsTUFBTSxLQUFLLGdCQUFlO1FBQ3hDLE9BQU87VUFDTCxPQUFPLEtBQUssTUFBTTtVQUNsQixRQUFRLEtBQUssTUFBTTtVQUNuQixVQUFVLEtBQUssTUFBTTtVQUNyQixZQUFZOzs7VUFHZCxvQkFBQSwyQ0FBQyxPQUFHO1lBQ0YsZUFBWTtZQUNaLE9BQU07WUFDTixPQUFPO2NBQ0wsY0FBYyxLQUFLLE1BQU07Y0FDekIsaUJBQWlCLEtBQUssTUFBTSxvQkFDeEIsS0FBSyxNQUFNLG1CQUNSLFdBQVcsS0FBSyxLQUFLLE1BQU0sa0JBQWtCLE1BQU0sSUFFdEQ7OztVQUdSLG9CQUFBLDRDQUFDLEdBQUEsMkNBQUs7WUFDSjtZQUNBLEtBQUssS0FBSyxNQUFNO1lBQ2hCLE1BQU0sS0FBSyxNQUFNO1lBQ2pCO1lBQ0EsYUFBYTtZQUNiLG1CQUFtQixLQUFLLE1BQU07Ozs7T0F2Q1YsR0FBRzs7RUE4Q2pDLGVBQWU7QUFDYixVQUFNLGlCQUNKLEtBQUssTUFBTSxtQkFBbUIsVUFDOUIsS0FBSyxNQUFNLG9CQUFvQjtBQUVqQyxXQUNFLG9CQUFBLDJDQUFDLE9BQUc7O1FBQ0Ysb0JBQUEsMkNBQUMsT0FBRztVQUFDLE9BQU07O1FBQ1gsb0JBQUEsMkNBQUMsT0FBRztVQUFDLE9BQU07O1lBQ1Qsb0JBQUEsMkNBQUMsT0FBRztjQUFDLE9BQU07O2dCQUNULG9CQUFBLDJDQUFDLFNBQUs7a0JBQ0osTUFBSztrQkFDTCxLQUFLLEtBQUssS0FBSztrQkFDZixjQUFhLEdBQUEsMkNBQUs7a0JBQ2xCLFNBQVMsS0FBSztrQkFDZCxTQUFTLEtBQUs7a0JBQ2QsV0FBVyxLQUFLO2tCQUNoQixjQUFhOztnQkFFZixvQkFBQSwyQ0FBQyxRQUFJO2tCQUFDLE9BQU07NkJBQW1CLEdBQUEsMENBQU0sT0FBTzs7Z0JBQzNDLEtBQUssTUFBTSxpQkFDVixvQkFBQSwyQ0FBQyxVQUFNO2tCQUNMLE9BQU07a0JBQ04sY0FBVztrQkFDWCxNQUFLO2tCQUNMLE9BQU07a0JBQ04sU0FBUyxLQUFLO2tCQUNkLGFBQWEsS0FBSzs2QkFFakIsR0FBQSwwQ0FBTSxPQUFPOzs7O1lBS25CLGtCQUFrQixLQUFLLHFCQUFvQjs7Ozs7O0VBTXBELHNCQUFzQjtBQUNwQixVQUFNLEVBQUEsY0FBZSxJQUFLLEtBQUs7QUFDL0IsUUFBSSxDQUFDLGNBQWUsUUFBTztBQUUzQixXQUNFLG9CQUFBLDJDQUFDLE9BQUc7TUFBQyxPQUFNO01BQVcsS0FBSyxLQUFLLEtBQUs7O1FBQ25DLG9CQUFBLDJDQUFDLE9BQUc7VUFBQyxPQUFPLDhCQUE4QixLQUFLLElBQUksQ0FBQyxDQUFDO3FCQUNsRCxHQUFBLDJDQUFLLFdBQVc7O1FBRW5CLG9CQUFBLDJDQUFDLE9BQUc7b0JBQ0QsQ0FBQyxjQUFjLFNBQ2Qsb0JBQUEsMkNBQUMsT0FBRztZQUFDLE9BQU8sdUJBQXVCLEtBQUssSUFBSSxDQUFDLENBQUM7c0JBQzNDLEtBQUssTUFBTSxvQkFDVixvQkFBQSwyQ0FBQyxLQUFDO2NBQUMsU0FBUyxLQUFLLE1BQU07eUJBQW1CLEdBQUEsMkNBQUs7O2VBSW5ELGNBQWMsSUFBSSxDQUFDLEtBQUssTUFBTTtBQUM1QixtQkFDRSxvQkFBQSwyQ0FBQyxPQUFHO2NBQUMsT0FBTTt3QkFDUixJQUFJLElBQUksQ0FBQyxPQUFPLE9BQU87QUFDdEIsdUJBQU8sS0FBSyxrQkFBa0IsT0FBTztrQkFDbkMsS0FBSztvQkFBQztvQkFBRzs7a0JBQ1QsVUFBVSxJQUFJLEtBQUssTUFBTSxVQUFVLEtBQUs7a0JBQ3hDLE1BQU07aUJBQ1A7ZUFDRjs7V0FHTjs7Ozs7RUFPWCxtQkFBbUI7QUFDakIsVUFBTSxFQUFBLFdBQVksS0FBSyxHQUFBO0FBQ3ZCLFVBQU0sU0FBUyxDQUFDLENBQUMsS0FBSyxNQUFNO0FBQzVCLFVBQU0sVUFBVSxLQUFLLFdBQVU7QUFFL0IsV0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQ0YsT0FBTztRQUNMLFlBQVksU0FBUyxXQUFXO1FBQ2hDLFNBQVMsU0FBUyxTQUFTO1FBQzNCLFFBQVE7O2dCQUdULFdBQVcsSUFBSSxDQUFDLGFBQWE7QUFDNUIsY0FBTSxFQUFBLE1BQU0sS0FBTSxJQUFLLEtBQUssS0FBSyxXQUFXLElBQUksU0FBUyxFQUFFO0FBRTNELGVBQ0Usb0JBQUEsMkNBQUMsT0FBRztVQUNGLFdBQVMsU0FBUyxTQUFTLFNBQVMsT0FBTyxLQUFLLFNBQVM7VUFDekQsT0FBTTtVQUNOLEtBQUs7O1lBRUwsb0JBQUEsMkNBQUMsT0FBRztjQUFDLE9BQU8sOEJBQThCLEtBQUssSUFBSSxDQUFDLENBQUM7d0JBQ2xELFNBQVMsU0FBUSxHQUFBLDJDQUFLLFdBQVcsU0FBUyxFQUFFOztZQUUvQyxvQkFBQSwyQ0FBQyxPQUFHO2NBQ0YsT0FBTTtjQUNOLE9BQU87Z0JBQ0wsUUFBUSxLQUFLLFNBQVMsS0FBSyxNQUFNOzt3QkFHbEMsS0FBSyxJQUFJLENBQUMsS0FBSyxNQUFNO0FBQ3BCLHNCQUFNLFlBQ0osSUFBSSxRQUFTLElBQUksUUFBUSxrQ0FBWTtBQUN2QyxzQkFBTSxVQUFVLEtBQUssTUFBTSxZQUFZLFNBQVM7QUFDaEQsc0JBQU0sTUFBTSxhQUFhLE1BQU0sTUFBTTtBQUVyQyxvQkFBSSxDQUFDLFdBQVcsQ0FBQyxJQUNmLFFBQU87QUFHVCxzQkFBTSxRQUFRLElBQUk7QUFDbEIsc0JBQU0sTUFBTSxRQUFRO0FBQ3BCLHNCQUFNLFdBQVcsU0FBUyxPQUFPLE1BQU0sT0FBTyxHQUFHO0FBRWpELG9CQUFJLFNBQVMsU0FBUyxRQUNwQixVQUFTLEtBQUksR0FBSSxJQUFJLE1BQU0sVUFBVSxTQUFTLE1BQU0sQ0FBQztBQUd2RCx1QkFDRSxvQkFBQSwyQ0FBQyxPQUFHO2tCQUVGLGNBQVksSUFBSTtrQkFDaEI7a0JBQ0EsT0FBTTtrQkFDTixPQUFPO29CQUFFLEtBQUssSUFBSSxLQUFLLE1BQU07OzRCQUU1QixXQUNDLFNBQVMsSUFBSSxDQUFDLFNBQVMsT0FBTztBQUM1Qix3QkFBSSxDQUFDLFFBQ0gsUUFDRSxvQkFBQSwyQ0FBQyxPQUFHO3NCQUNGLE9BQU87d0JBQ0wsT0FBTyxLQUFLLE1BQU07d0JBQ2xCLFFBQVEsS0FBSyxNQUFNOzs7QUFNM0IsMEJBQU0sU0FBUSxHQUFBLDBDQUFZLElBQUksT0FBTztBQUVyQywyQkFBTyxLQUFLLGtCQUFrQixPQUFPO3NCQUNuQyxLQUFLO3dCQUFDLElBQUk7d0JBQU87O3NCQUNqQixVQUFVLElBQUksV0FBVztzQkFDekIsTUFBTSxLQUFLO3FCQUNaO21CQUNGO21CQTFCRSxJQUFJLEtBQUs7ZUE2Qm5COzs7O09BSVI7OztFQUtQLHVCQUF1QjtBQUNyQixRQUFJLEtBQUssTUFBTSxvQkFBb0IsT0FDakMsUUFBTztBQUdULFdBQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUNGLE9BQU07TUFDTixPQUFPO1FBQ0wsVUFBVTtRQUNWLE9BQU8sS0FBSyxNQUFNO1FBQ2xCLFFBQVEsS0FBSyxNQUFNOztnQkFHckIsb0JBQUEsMkNBQUMsVUFBTTtRQUNMLE1BQUs7UUFDTCxLQUFLLEtBQUssS0FBSztRQUNmLE9BQU07UUFDTixpQkFBZSxLQUFLLE1BQU0sWUFBWSxLQUFLO1FBQzNDLGVBQVksR0FBQSwyQ0FBSyxNQUFNO1FBQ3ZCLFFBQU8sR0FBQSwyQ0FBSyxNQUFNO1FBQ2xCLFNBQVMsS0FBSztRQUNkLE9BQU87VUFDTCxPQUFPLEtBQUssTUFBTTtVQUNsQixRQUFRLEtBQUssTUFBTTs7a0JBR3JCLG9CQUFBLDJDQUFDLFFBQUk7VUFBQyxPQUFPLHVCQUF1QixLQUFLLE1BQU0sSUFBSTs7Ozs7RUFNM0QsbUJBQW1CO0FBQ2pCLFVBQU0sUUFBUSxLQUFLLGNBQWMsS0FBSyxNQUFNLEdBQUc7QUFDL0MsVUFBTSxXQUFXLFFBQVEsTUFBTSxPQUFPO0FBRXRDLFdBQ0Usb0JBQUEsMkNBQUMsT0FBRztNQUFDLGFBQVU7TUFBUyxPQUFNO2dCQUMzQjs7O0VBS1AsY0FBYztBQUNaLFVBQU0saUJBQWlCLEtBQUssS0FBSyxlQUFlO0FBQ2hELFVBQU0scUJBQXFCLGVBQWUsc0JBQXFCO0FBQy9ELFVBQU0sV0FBVyxLQUFLLEtBQUssc0JBQXFCO0FBRWhELFVBQU0sV0FBVyxDQUFBO0FBRWpCLFFBQUksS0FBSyxPQUFPLE1BQ2QsVUFBUyxRQUFRLFNBQVMsUUFBUSxtQkFBbUIsUUFBUTtRQUU3RCxVQUFTLE9BQU8sbUJBQW1CLE9BQU8sU0FBUyxPQUFPO0FBRzVELFFBQ0UsS0FBSyxNQUFNLG1CQUFtQixZQUM5QixLQUFLLE1BQU0sb0JBQW9CLFVBRS9CLFVBQVMsU0FBUyxTQUFTLFNBQVMsbUJBQW1CLE1BQU07U0FDeEQ7QUFDTCxlQUFTLE1BQU0sbUJBQW1CLFNBQVMsU0FBUyxNQUFNO0FBQzFELGVBQVMsU0FBUzs7QUFHcEIsV0FDRSxvQkFBQSwyQ0FBQyxPQUFHO01BQ0YsS0FBSyxLQUFLLEtBQUs7TUFDZixNQUFLO01BQ0wsS0FBSyxLQUFLO01BQ1YsZUFBWSxHQUFBLDJDQUFLLE1BQU07TUFDdkIsT0FBTTtNQUNOLGlCQUFlLFNBQVMsTUFBTSxRQUFRO01BQ3RDLE9BQU87Z0JBRU47V0FBSSxNQUFNLENBQUMsRUFBRSxLQUFJO1FBQUksSUFBSSxDQUFDLE1BQU07QUFDL0IsY0FBTSxPQUFPLElBQUk7QUFDakIsY0FBTSxVQUFVLEtBQUssTUFBTSxRQUFRO0FBRW5DLGVBQ0Usb0JBQUEsMkNBQUMsT0FBRzs7WUFDRixvQkFBQSwyQ0FBQyxTQUFLO2NBQ0osTUFBSztjQUNMLE1BQUs7Y0FDTCxPQUFPO2NBQ1AsZUFBWSxHQUFBLDJDQUFLLE1BQU0sSUFBSTtjQUMzQixLQUFLLFVBQVUsS0FBSyxLQUFLLGdCQUFnQjtjQUN6QyxnQkFBZ0I7Y0FDaEIsVUFBVSxNQUFNLEtBQUssb0JBQW9CLElBQUk7Y0FDN0MsV0FBVyxDQUFDLE1BQU07QUFDaEIsb0JBQ0UsRUFBRSxRQUFRLFdBQ1YsRUFBRSxRQUFRLFdBQ1YsRUFBRSxRQUFRLE9BQ1Y7QUFDQSxvQkFBRSxlQUFjO0FBQ2hCLHVCQUFLLGdCQUFnQixJQUFJOzs7O1lBSy9CLG9CQUFBLDJDQUFDLFVBQU07Y0FDTCxlQUFZO2NBQ1osVUFBUztjQUNULFNBQVMsTUFBTSxLQUFLLGdCQUFnQixJQUFJO2NBQ3hDLGNBQWMsTUFBTSxLQUFLLG9CQUFvQixJQUFJO2NBQ2pELGNBQWMsTUFBTSxLQUFLLG9CQUFtQjtjQUM1QyxPQUFNOztnQkFFTixvQkFBQSwyQ0FBQyxRQUFJO2tCQUFDLE9BQU8sdUJBQXVCLElBQUk7O2dCQUN4QyxvQkFBQSwyQ0FBQyxRQUFJO2tCQUFDLE9BQU07NkJBQW1CLEdBQUEsMkNBQUssTUFBTSxJQUFJOzs7Ozs7T0FJckQ7OztFQUtQLFNBQVM7QUFDUCxVQUFNLFlBQVksS0FBSyxNQUFNLFVBQVUsS0FBSyxNQUFNO0FBRWxELFdBQ0Usb0JBQUEsMkNBQUMsV0FBTztNQUNOLElBQUc7TUFDSCxPQUFNO01BQ04sS0FBSyxLQUFLO01BQ1YsT0FBTztRQUNMLE9BQU8sS0FBSyxNQUFNLGVBQ2QsU0FDQSxRQUFRLFNBQVM7O01BRXZCLGtCQUFnQixLQUFLLE1BQU07TUFDM0IsY0FBWSxLQUFLLE1BQU07TUFDdkIsYUFBVyxLQUFLLE1BQU0sWUFBWSxLQUFLOztRQUV0QyxLQUFLLE1BQU0sbUJBQW1CLFNBQVMsS0FBSyxjQUFhO1FBQ3pELEtBQUssTUFBTSxlQUFlLFNBQVMsS0FBSyxVQUFTO1FBQ2pELEtBQUssTUFBTSxrQkFBa0IsWUFDNUIsb0JBQUEsMkNBQUMsT0FBRztVQUFDLE9BQU07b0JBQWMsS0FBSyxhQUFZOztRQUc1QyxvQkFBQSwyQ0FBQyxPQUFHO1VBQUMsS0FBSyxLQUFLLEtBQUs7VUFBUSxPQUFNO29CQUNoQyxvQkFBQSwyQ0FBQyxPQUFHO1lBQ0YsT0FBTztjQUNMLE9BQU8sS0FBSyxNQUFNLGVBQWUsU0FBUztjQUMxQyxRQUFROzs7Y0FHVCxLQUFLLE1BQU0sa0JBQWtCLFlBQVksS0FBSyxhQUFZO2NBQzFELEtBQUssb0JBQW1CO2NBQ3hCLEtBQUssaUJBQWdCOzs7O1FBSXpCLEtBQUssTUFBTSxlQUFlLFlBQVksS0FBSyxVQUFTO1FBQ3BELEtBQUssTUFBTSxtQkFBbUIsWUFBWSxLQUFLLGNBQWE7UUFDNUQsS0FBSyxNQUFNLGFBQWEsS0FBSyxZQUFXO1FBQ3hDLEtBQUssaUJBQWdCOzs7O0VBemxDNUIsWUFBWSxPQUFPO0FBQ2pCLFVBQUs7QUFtTFAsS0FBQSxHQUFBLDBDQUFBLE1BQUEscUJBQW9CLE1BQU07QUFDeEIsVUFBSSxLQUFLLE1BQU0sU0FBUyxPQUFRO0FBQ2hDLFdBQUssU0FBUztRQUFFLE9BQU8sS0FBSyxVQUFVLFVBQVUsU0FBUztPQUFTO0tBQ25FO0FBZUQsS0FBQSxHQUFBLDBDQUFBLE1BQUEsc0JBQXFCLENBQUMsTUFBTTtBQUMxQixZQUFNLEVBQUEsU0FBRUQsU0FBTyxJQUFLLEtBQUs7QUFFekIsVUFBSSxFQUFFLFVBQVVBLFVBQVM7QUFDdkIsWUFBSSxLQUFLLE1BQU0sVUFDYixNQUFLLFdBQVU7QUFHakIsWUFBSSxLQUFLLE1BQU0sZUFDYixNQUFLLE1BQU0sZUFBZSxDQUFDOztLQUdoQztBQUVELEtBQUEsR0FBQSwwQ0FBQSxNQUFBLG1CQUFrQixDQUFDLE1BQU07QUFDdkIsVUFBSSxDQUFDLEtBQUssTUFBTSxVQUFXO0FBQzNCLFVBQUksQ0FBQyxFQUFFLE9BQU8sUUFBUSxPQUFPLEdBQUc7QUFDOUIsVUFBRSxlQUFjO0FBQ2hCLFVBQUUseUJBQXdCO0FBRTFCLGFBQUssV0FBVTs7S0FFbEI7QUFFRCxLQUFBLEdBQUEsMENBQUEsTUFBQSxxQkFBb0IsQ0FBQyxNQUFNO0FBQ3pCLFVBQUksQ0FBQyxLQUFLLE1BQU0sVUFBVztBQUMzQixVQUFJLEVBQUUsT0FBTyxVQUFVO0FBQ3JCLFVBQUUsZUFBYztBQUNoQixVQUFFLHlCQUF3QjtBQUUxQixhQUFLLFdBQVU7O0tBRWxCO0FBc0hELEtBQUEsR0FBQSwwQ0FBQSxNQUFBLHFCQUFvQixNQUFNO0FBQ3hCLFlBQU0sUUFBUSxLQUFLLGNBQWMsS0FBSyxNQUFNLEdBQUc7QUFDL0MsVUFBSSxDQUFDLE1BQU87QUFFWixXQUFLLFNBQVM7UUFBRSxLQUFLO1VBQUM7VUFBSTs7T0FBSztLQUNoQztBQUVELEtBQUEsR0FBQSwwQ0FBQSxNQUFBLHFCQUFvQixZQUFZO0FBQzlCLFlBQU0sUUFBUSxLQUFLLEtBQUssWUFBWTtBQUNwQyxVQUFJLENBQUMsTUFBTztBQUVaLFlBQU0sRUFBQSxNQUFPLElBQUs7QUFDbEIsWUFBTSxnQkFBZ0IsT0FBTSxHQUFBLDBDQUFZLE9BQU8sS0FBSztBQUNwRCxZQUFNLGNBQWMsTUFBTTtBQUN4QixZQUFJLENBQUMsS0FBSyxLQUFLLE9BQU8sUUFBUztBQUMvQixhQUFLLEtBQUssT0FBTyxRQUFRLFlBQVk7O0FBR3ZDLFVBQUksQ0FBQyxjQUNILFFBQU8sS0FBSyxTQUFTOztRQUFpQixLQUFLO1VBQUM7VUFBSTs7U0FBTyxXQUFXO0FBR3BFLFlBQU0sTUFBTSxNQUFNLGtCQUFrQixNQUFNLE1BQU0sU0FBUztRQUFDO1FBQUc7VUFBSztRQUFDO1FBQUk7O0FBQ3ZFLFlBQU0sT0FBTyxDQUFBO0FBQ2IsV0FBSyxVQUFVLGNBQWM7QUFDN0IsVUFBSSxNQUFNO0FBRVYsZUFBUyxTQUFTLGVBQWU7QUFDL0IsWUFBSSxDQUFDLEtBQUssVUFBVSxJQUFJLFVBQVUsS0FBSyxXQUFVLEdBQUk7QUFDbkQsZ0JBQU0sQ0FBQTtBQUNOLGNBQUksZUFBZTtBQUNuQixjQUFJLFVBQVUsS0FBSztBQUNuQixlQUFLLEtBQUssR0FBRzs7QUFHZixZQUFJLEtBQUssS0FBSzs7QUFHaEIsV0FBSyxZQUFXO0FBQ2hCLFdBQUssU0FBUztRQUFFLGVBQWU7O1NBQWEsV0FBVztLQUN4RDtBQUVELEtBQUEsR0FBQSwwQ0FBQSxNQUFBLHVCQUFzQixDQUFDLE1BQU07QUFFM0IsWUFBTSxRQUFRLEVBQUU7QUFDaEIsUUFBRSx5QkFBd0I7QUFFMUIsY0FBUSxFQUFFLEtBQUc7UUFDWCxLQUFLO0FBR0gsZUFBSyxTQUFTOzs7WUFBWSxNQUFNO1dBQU07QUFDdEM7UUFFRixLQUFLO0FBR0gsZUFBSyxTQUFTOzs7WUFBWSxPQUFPO1dBQU07QUFDdkM7UUFFRixLQUFLO0FBR0gsZUFBSyxTQUFTOzs7WUFBWSxJQUFJO1dBQU07QUFDcEM7UUFFRixLQUFLO0FBR0gsZUFBSyxTQUFTOzs7WUFBWSxNQUFNO1dBQU07QUFDdEM7UUFFRixLQUFLO0FBQ0gsWUFBRSxlQUFjO0FBQ2hCLGVBQUssaUJBQWlCOztZQUFLLEtBQUssS0FBSyxNQUFNO1dBQUs7QUFDaEQ7UUFFRixLQUFLO0FBQ0gsWUFBRSxlQUFjO0FBQ2hCLGNBQUksS0FBSyxNQUFNLGNBQ2IsTUFBSyxZQUFXO2NBRWhCLE1BQUssY0FBYTtBQUVwQjtRQUVGO0FBQ0U7O0tBRUw7QUFFRCxLQUFBLEdBQUEsMENBQUEsTUFBQSxlQUFjLE1BQU07QUFDbEIsWUFBTSxRQUFRLEtBQUssS0FBSyxZQUFZO0FBQ3BDLFVBQUksQ0FBQyxNQUFPO0FBRVosWUFBTSxRQUFRO0FBQ2QsWUFBTSxNQUFLO0FBRVgsV0FBSyxrQkFBaUI7S0FDdkI7QUFnSkQsS0FBQSxHQUFBLDBDQUFBLE1BQUEsdUJBQXNCLENBQUMsRUFBQSxVQUFVLEVBQUcsTUFBTztBQUN6QyxXQUFLLFNBQVMsS0FBSyxJQUFJO1FBQUUsS0FBSztVQUFPO1FBQUUsWUFBWSxTQUFTO09BQUk7S0FDakU7QUF5QkQsS0FBQSxHQUFBLDBDQUFBLE1BQUEsYUFBWSxDQUFDLE1BQU07QUFDakIsWUFBTSxFQUFBLGNBQWUsSUFBSztBQUMxQixZQUFNLE9BQU8sY0FBYyxzQkFBcUI7QUFFaEQsV0FBSyxTQUFTO1FBQUUsV0FBVztTQUFRLFlBQVk7QUFFN0MsZUFBTSxHQUFBLDJDQUFNLENBQUM7QUFFYixjQUFNLE9BQU8sS0FBSyxLQUFLLEtBQUs7QUFDNUIsWUFBSSxDQUFDLEtBQU07QUFFWCxhQUFLLFVBQVUsT0FBTyxRQUFRO0FBQzlCLGFBQUssS0FBSyxjQUFjLFFBQVEsTUFBSztBQUVyQyxhQUFLLEtBQUssaUJBQWlCLFNBQVMsS0FBSyxpQkFBaUIsSUFBSTtBQUM5RCxhQUFLLEtBQUssaUJBQWlCLFdBQVcsS0FBSyxtQkFBbUIsSUFBSTtPQUNuRTtLQUNGO0FBeG5CQyxTQUFLLFlBQVksQ0FBQTtBQUVqQixTQUFLLFFBQVE7TUFDWCxLQUFLO1FBQUM7UUFBSTs7TUFDVixTQUFTLEtBQUssbUJBQW1CLEtBQUs7TUFDdEMsYUFBYTtRQUFFLEdBQUc7O01BQ2xCLEdBQUcsS0FBSyxnQkFBZ0IsS0FBSzs7OztBbURsQnBCLElBQU0sMkNBQU4sZUFBNEIsR0FBQSwwQ0FBYTtFQU90RCxNQUFNLG9CQUFvQjtBQUN4QixVQUFNLFNBQVEsR0FBQSwyQ0FBUyxLQUFLLFFBQU8sR0FBQSwyQ0FBYSxJQUFJO0FBQ3BELFVBQU0sVUFBVTtBQUNoQixVQUFNLE1BQU0sQ0FBQyxjQUFjO0FBQ3pCLFdBQUssWUFBWTs7QUFHbkIsV0FBTSxHQUFBLDJDQUFLLEtBQUs7QUFDaEIsUUFBSSxLQUFLLGFBQWM7QUFFdkIsS0FBQSxHQUFBLDJDQUFPLG9CQUFBLDRDQUFDLEdBQUEsMkNBQU07TUFBRSxHQUFHO1FBQVcsS0FBSyxVQUFVOztFQWQvQyxZQUFZLE9BQU87QUFDakIsVUFBTSxPQUFPO01BQUUsU0FBUSxHQUFBLHVDQUFBLHlCQUFBO0tBQWM7OztDQUh2QyxHQUFBLDBDQURtQiwwQ0FDWixVQUFRLEdBQUEseUNBQVc7QUFvQjVCLElBQ0UsT0FBTyxtQkFBbUIsZUFDMUIsQ0FBQyxlQUFlLElBQUksaUJBQWlCLEVBRXJDLGdCQUFlLE9BQU8sbUJBQW1CLHdDQUFhOztBQ2pDeEQsNEJBQWlCOzs7QUNRVixJQUFNLHdCQUFOLE1BQTRCO0FBQUEsRUFLL0IsWUFDVyxJQUNQLE1BSUY7QUFMUztBQU1QLFNBQUssWUFBWSxJQUFJLEtBQUssVUFBVTtBQUFBLE1BQ2hDLFFBQVEsU0FBUztBQUFBLE1BQ2pCLE9BQU87QUFBQSxRQUNILFNBQVM7QUFBQSxRQUNULE9BQU8sS0FBSztBQUFBLFFBQ1osR0FBRyxLQUFLO0FBQUEsTUFDWjtBQUFBLElBQ0osQ0FBQztBQUNELFNBQUssa0JBQWtCLFNBQVMsY0FBYyxJQUFJLEVBQUUsdUJBQXVCO0FBQUEsRUFDL0U7QUFBQSxFQXBCTztBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFvQkEsS0FBSyxXQUFvQjtBQUU1QixRQUFJLENBQUMsUUFBUSx5QkFBeUI7QUFDbEMsWUFBTSxLQUFLLENBQUMsb0JBQXNDO0FBQzlDLHdCQUFnQixRQUFRLENBQUMsV0FBVztBQUVoQyxnQkFBTSxhQUFhLENBQUMsR0FBRyxPQUFPLFVBQVUsRUFBRSxLQUFLLENBQUMsU0FBUztBQUNyRCxnQkFBSSxnQkFBZ0IsYUFBYTtBQUM3QixxQkFBTyxLQUFLLFVBQVUsU0FBUyxXQUFXO0FBQUEsWUFDOUM7QUFBQSxVQUNKLENBQUM7QUFDRCxjQUFJLFlBQVk7QUFDWixvQkFBUSxVQUFVLFFBQVEsQ0FBQ0UsZUFBYUEsWUFBVSxNQUFNLENBQUM7QUFFekQsNkJBQWlCLFdBQVc7QUFDNUIsb0JBQVEsMEJBQTBCO0FBQUEsVUFDdEM7QUFBQSxRQUNKLENBQUM7QUFBQSxNQUNMO0FBRUEsWUFBTSxtQkFBbUIsSUFBSSxpQkFBaUIsRUFBRTtBQUNoRCx1QkFBaUIsUUFBUSxTQUFTLGNBQWMsTUFBTSxHQUFzQjtBQUFBLFFBQ3hFLFdBQVc7QUFBQSxNQUNmLENBQUM7QUFBQSxJQUNMO0FBRUEsU0FBSyxLQUFLO0FBQ1YsU0FBSyxpQkFBaUIsSUFBSTtBQUMxQixTQUFLLGtCQUFrQixFQUFFLFVBQVUsQ0FBQztBQUNwQyxTQUFLLG9CQUFvQixXQUFXLFdBQVcsS0FBSyxpQkFBaUIsTUFBTTtBQUN2RSxXQUFLLGtCQUFrQixFQUFFLFVBQVUsQ0FBQztBQUFBLElBQ3hDLENBQUM7QUFBQSxFQUNMO0FBQUEsRUFDTyxRQUFRO0FBQ1gsU0FBSyxLQUFLO0FBQ1YsU0FBSyxpQkFBaUIsS0FBSztBQUMzQixTQUFLLG9CQUFvQjtBQUN6QixTQUFLLG9CQUFvQjtBQUFBLEVBQzdCO0FBQUEsRUFDTyxVQUFVO0FBQUEsRUFDakI7QUFBQSxFQUVPLGtCQUFrQjtBQUFBLElBQ3JCO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxFQUNKLEdBSUc7QUFDQyxVQUFNLFVBQVUsU0FBUyxjQUFjLElBQUksS0FBSyxFQUFFLFFBQVE7QUFDMUQsSUFBQUMsaUJBQWdCLFdBQVcsS0FBSyxpQkFBaUI7QUFBQSxNQUM3QyxXQUFXO0FBQUEsTUFDWCxZQUFZLENBQUNDLE1BQUssR0FBR0MsT0FBTSxFQUFFLFNBQVMsUUFBUSxDQUFDLENBQUM7QUFBQSxJQUNwRCxDQUFDLEVBQUUsS0FBSyxDQUFDLEVBQUUsR0FBRyxHQUFHLFdBQVcsZUFBZSxNQUFNO0FBQzdDLGFBQU8sT0FBTyxLQUFLLGdCQUFpQixPQUFPO0FBQUEsUUFDdkMsTUFBTSxHQUFHLFdBQVcsQ0FBQztBQUFBLFFBQ3JCLEtBQUssR0FBRyxXQUFXLENBQUM7QUFBQSxNQUN4QixDQUFDO0FBR0QsVUFBSSxXQUFXLGVBQWUsT0FBTztBQUNqQyxjQUFNLEVBQUUsR0FBRyxRQUFRLEdBQUcsT0FBTyxJQUFJLGVBQWU7QUFFaEQsY0FBTSxhQUFhO0FBQUEsVUFDZixLQUFLO0FBQUEsVUFDTCxPQUFPO0FBQUEsVUFDUCxRQUFRO0FBQUEsVUFDUixNQUFNO0FBQUEsUUFDVixFQUFFLFVBQVUsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBRXpCLHNCQUNJLE9BQU8sT0FBTyxRQUFRLE9BQU87QUFBQSxVQUN6QixNQUFNLFVBQVUsT0FBTyxHQUFHLE1BQU0sT0FBTztBQUFBLFVBQ3ZDLEtBQUssVUFBVSxPQUFPLEdBQUcsTUFBTSxPQUFPO0FBQUEsVUFDdEMsT0FBTztBQUFBLFVBQ1AsUUFBUTtBQUFBLFVBQ1IsQ0FBQyxVQUFVLEdBQUc7QUFBQSxRQUNsQixDQUFDO0FBQUEsTUFDVDtBQUFBLElBQ0osQ0FBQztBQUFBLEVBQ0w7QUFBQSxFQUVPLG1CQUFtQixjQUE2QixpQkFBd0MsZ0JBQXFGO0FBQ2hMLElBQUMsT0FBTyxRQUFRLFlBQVksRUFBeUU7QUFBQSxNQUNqRyxDQUFDLENBQUMsUUFBUSxFQUFFLE1BQU07QUFDZCxZQUFJLElBQUk7QUFDSixjQUFJLFdBQVcsZUFBZSxDQUFDLGdCQUFJLGFBQWEsRUFBRSwwQkFBMEI7QUFDeEU7QUFBQSxVQUNKO0FBQ0EsZ0JBQU0sZ0JBQWdCLEdBQUcsS0FBSyxlQUFlO0FBQzdDLHlCQUFlLElBQUksUUFBUSxhQUFhO0FBRXhDLGlCQUFPLGlCQUFpQixRQUFRLGFBQWE7QUFBQSxRQUNqRDtBQUFBLE1BQ0o7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUFBLEVBQ08sc0JBQXNCLGNBQTZCLGdCQUFxRjtBQUMzSSxJQUFDLE9BQU8sUUFBUSxZQUFZLEVBQXlFO0FBQUEsTUFDakcsQ0FBQyxDQUFDLE1BQU0sTUFBTTtBQUNWLGNBQU0sS0FBSyxlQUFlLElBQUksTUFBTTtBQUNwQyxZQUFJLElBQUk7QUFDSixpQkFBTyxvQkFBb0IsUUFBUSxFQUFFO0FBQUEsUUFDekM7QUFBQSxNQUNKO0FBQUEsSUFDSjtBQUFBLEVBQ0o7QUFBQSxFQUVRLE9BQU87QUFDWCxTQUFLLGdCQUFnQixNQUFNLFVBQVU7QUFDckMsU0FBSyxnQkFBZ0IsTUFBTSxVQUFVO0FBQ3JDLFNBQUssZ0JBQWdCLE1BQU0sZ0JBQWdCO0FBQUEsRUFDL0M7QUFBQSxFQUNRLE9BQU87QUFDWCxTQUFLLGdCQUFnQixNQUFNLFVBQVU7QUFBQSxFQUN6QztBQUFBLEVBQ1EsaUJBQWlCLFVBQVUsTUFBTTtBQUNyQyxRQUFJLFNBQVM7QUFDVCxXQUFLLGdCQUFnQixnQkFBZ0IsT0FBTztBQUFBLElBQ2hELE9BQU87QUFDSCxXQUFLLGdCQUFnQixhQUFhLFNBQVMsRUFBRTtBQUFBLElBQ2pEO0FBQUEsRUFDSjtBQUNKOzs7QUNwSkEsU0FBUyxlQUFlO0FBQ3BCLFNBQU8sU0FBUyxjQUFjLE9BQU8sbUJBQW1CLGlCQUFpQjtBQUM3RTtBQVVPLElBQU0sMEJBQU4sY0FBc0Msc0JBQXNCO0FBQUEsRUFJL0QsWUFDWSxRQUNWO0FBQ0UsVUFBTSxPQUFPLElBQUksT0FBTyxJQUFJO0FBRnBCO0FBR1IsU0FBSyxZQUFZLGFBQWE7QUFFOUIsUUFBSSxLQUFLLGFBQWEsZ0JBQUksYUFBYSxFQUFFLDBCQUEwQjtBQUMvRCxXQUFLLFVBQVUsaUJBQWlCLGFBQWEsS0FBSyxzQkFBc0I7QUFBQSxJQUM1RTtBQUFBLEVBQ0o7QUFBQSxFQVpPO0FBQUEsRUFDQSxpQkFBaUIsb0JBQUksSUFBSTtBQUFBLEVBYXpCLE9BQU87QUFDVixTQUFLLFlBQVksYUFBYTtBQUM5QixTQUFLLGFBQWEsTUFBTSxLQUFLLEtBQUssU0FBUztBQUMzQyxTQUFLLG1CQUFtQixLQUFLLGdCQUFnQixHQUFHLE1BQU0sS0FBSyxjQUFjO0FBQUEsRUFDN0U7QUFBQSxFQUVPLFFBQVE7QUFDWCxVQUFNLE1BQU07QUFDWixTQUFLLHNCQUFzQixLQUFLLGdCQUFnQixHQUFHLEtBQUssY0FBYztBQUFBLEVBQzFFO0FBQUEsRUFDTyxVQUFVO0FBQ2IsU0FBSyxNQUFNO0FBQ1gsU0FBSyxXQUFXLG9CQUFvQixhQUFhLEtBQUssc0JBQXNCO0FBQzVFLFNBQUssVUFBVSxTQUFTO0FBQUEsRUFDNUI7QUFBQSxFQUVRLGtCQUFpQztBQUNyQyxXQUFPO0FBQUEsTUFDSCxPQUFPLEtBQUs7QUFBQSxNQUNaLFVBQVUsS0FBSztBQUFBLE1BQ2YsU0FBUyxLQUFLO0FBQUEsTUFDZCxXQUFXLEtBQUs7QUFBQSxJQUNwQjtBQUFBLEVBQ0o7QUFBQSxFQUNPLGtCQUFrQixPQUFtQjtBQUN4QyxVQUFNLEtBQUs7QUFFWCxVQUFNLFdBQVcsZ0JBQUksYUFBYTtBQUNsQyxVQUFNLFNBQVMsU0FBUyxjQUFjLE9BQU87QUFDN0MsVUFBTSxZQUFZLFNBQVMsY0FBYyxJQUFJLGtCQUFrQix1QkFBdUI7QUFFdEYsVUFBTSxvQkFDRixLQUFLLGdCQUFnQixTQUFTLEdBQUcsTUFBTSxLQUN2QyxHQUFHLFFBQVEsR0FBRyxTQUFTLG1CQUFtQjtBQUM5QyxVQUFNLG1CQUNGLFdBQVcsU0FBUyxHQUFHLE1BQU0sS0FDN0IsR0FBRyxRQUFRLEdBQUcsU0FBUyxrQkFBa0I7QUFDN0MsVUFBTSxnQkFBZ0IsUUFBUSxTQUFTLEdBQUcsTUFBTSxLQUFLLEdBQUcsUUFBUSxVQUFVLFNBQVMsTUFBTTtBQUV6RixVQUFNLFlBQVksQ0FBQyxxQkFBcUIsQ0FBQyxpQkFBaUIsQ0FBQztBQUczRCxRQUNJLG1CQUFtQixLQUFLLE9BQU8sRUFBRSxHQUFHLFVBQ3BDLG1CQUFtQixrQkFBa0IsR0FBRyxVQUN4QyxTQUFTLGdCQUFnQixpQ0FDM0I7QUFDRTtBQUFBLElBQ0o7QUFHQSxRQUFJLFdBQVc7QUFDWCxXQUFLLE1BQU07QUFBQSxJQUNmO0FBQUEsRUFDSjtBQUFBLEVBRU8sb0JBQW9CLE9BQXNCO0FBQzdDLFVBQU0sV0FBVyxnQkFBSSxhQUFhO0FBRWxDLFVBQU0scUJBQ0Y7QUFFSixVQUFNLDJCQUEwQyxNQUFNO0FBQUEsTUFDbEQsS0FBSyxnQkFBZ0IsaUJBQWlCLGtCQUFrQjtBQUFBLElBQzVEO0FBRUEsVUFBTSxxQkFDRCxtQkFBbUIsS0FBSyxPQUFPLEVBQUUsR0FBRyxVQUFVLFNBQVMsa0JBQWtCLEtBQUssYUFBYztBQUdqRyxRQUNJLHVCQUNDLE1BQU0sUUFBUSxlQUFlLE1BQU0sUUFBUSxVQUM1Qyx5QkFBeUIsU0FBUyxHQUNwQztBQUNFLCtCQUF5QixDQUFDLEVBQUUsTUFBTTtBQUVsQztBQUFBLElBQ0o7QUFHQSxRQUNJLG1CQUFtQixLQUFLLE9BQU8sRUFBRSxHQUFHLFVBQ3BDLG1CQUFtQixrQkFBa0IsR0FBRyxVQUN4QyxTQUFTLGdCQUFnQixtQ0FDM0I7QUFDRTtBQUFBLElBQ0o7QUFFQSxRQUFJLE1BQU0sUUFBUSxVQUFVO0FBQ3hCLFdBQUssV0FBVyxNQUFNO0FBQ3RCLFdBQUssTUFBTTtBQUVYO0FBQUEsSUFDSjtBQUFBLEVBQ0o7QUFBQSxFQUVPLHNCQUFzQixPQUFtQjtBQUM1QyxRQUFJLGdCQUFJLGFBQWEsRUFBRSwwQkFBMEI7QUFDN0MsWUFBTSxLQUFLO0FBRVgsWUFBTSxrQkFBa0IsbUJBQW1CLG1CQUFtQjtBQUM5RCxZQUFNLGlCQUFpQixtQkFBbUIsa0JBQWtCO0FBQzVELFlBQU0sa0JBQWtCLG1CQUFtQixvQkFBb0I7QUFFL0QsWUFBTSxTQUFTLFNBQVMsY0FBYyxPQUFPO0FBQzdDLFlBQU0sWUFBWSxTQUFTLGNBQWMsSUFBSSxrQkFBa0IsdUJBQXVCO0FBRXRGLFlBQU0sb0JBQ0YsS0FBSyxnQkFBZ0IsU0FBUyxHQUFHLE1BQU0sS0FDdkMsR0FBRyxRQUFRLEdBQUcsU0FBUyxtQkFBbUI7QUFDOUMsWUFBTSxtQkFDRixXQUFXLFNBQVMsR0FBRyxNQUFNLEtBQzdCLEdBQUcsUUFBUSxHQUFHLFNBQVMsa0JBQWtCO0FBQzdDLFlBQU0sZ0JBQWdCLFFBQVEsU0FBUyxHQUFHLE1BQU0sS0FBSyxHQUFHLFFBQVEsVUFBVSxTQUFTLE1BQU07QUFDekYsWUFBTSxxQkFBcUIsS0FBSyxXQUFXLFNBQVMsTUFBTSxNQUFjO0FBRXhFLFlBQU0sWUFBWSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDO0FBRTNELFVBQUksbUJBQW9CO0FBRXhCLFlBQU0sNEJBQ0YsaUJBQWlCLFVBQVUsQ0FBQyxnQkFBZ0IsVUFBVSxDQUFDLGlCQUFpQjtBQUc1RSxVQUFJLDZCQUE2QixXQUFXO0FBQ3hDLGFBQUssTUFBTTtBQUFBLE1BQ2Y7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUFBLEVBQ08seUJBQXlCO0FBQzVCLFlBQVEsSUFBSSxzR0FBNkM7QUFFekQsUUFBSSxDQUFDLG1CQUFtQixLQUFLLE9BQU8sRUFBRSxHQUFHLFFBQVE7QUFDN0MsV0FBSyxLQUFLO0FBQUEsSUFDZDtBQUFBLEVBQ0o7QUFDSjs7O0FDeEtBLElBQUFDLG1CQUE0Qjs7Ozs7Ozs7Ozs7Ozt5RENnQmIsSUFBSTtzQkFDZCxrQkFBa0I7OztBQUh2QixhQUtDLFFBQUEsS0FBQSxNQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRFcsMEJBQWlCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QURIdEIsSUFBTSwwQkFBTixNQUE4QjtBQUFBLEVBQ3pCLE9BQW9CO0FBQUEsRUFDcEIsWUFBNEI7QUFBQSxFQUVwQyxZQUFZLFFBQWdDO0FBQUEsRUFDNUM7QUFBQSxFQUVPLEtBQUssRUFBRSxPQUFPLE1BQU0sTUFBTSxZQUFZLEdBQXdCO0FBQ2pFLFNBQUssWUFBWSxNQUFNO0FBQ3ZCLFNBQUssT0FBTyxJQUFJLHNCQUFLO0FBRXJCLFFBQUksTUFBTTtBQUNOLFdBQUssbUJBQW1CLEtBQUssTUFBTSxNQUFNLGFBQWEsSUFBSTtBQUFBLElBQzlELE9BQU87QUFDSCxXQUFLLEtBQUssUUFBUSxDQUFDLFNBQVM7QUFDeEIsYUFDSyxTQUFTLGFBQWEsRUFDdEIsUUFBUSxVQUFVLEVBQ2xCLFFBQVEsTUFBTTtBQUNYLHdCQUFjLFFBQVE7QUFBQSxZQUNsQjtBQUFBLFlBQ0Esb0JBQW9CLGlCQUFpQixLQUFLO0FBQUEsWUFDMUM7QUFBQSxVQUNKLENBQUM7QUFBQSxRQUNMLENBQUM7QUFBQSxNQUNULENBQUM7QUFBQSxJQUNMO0FBSUEsU0FBSyxLQUFLLGVBQWUsS0FBSztBQUFBLEVBQ2xDO0FBQUEsRUFDTyxRQUFRO0FBQ1gsU0FBSyxNQUFNLE1BQU07QUFBQSxFQUNyQjtBQUFBLEVBQ08sVUFBVTtBQUNiLFNBQUssTUFBTTtBQUNYLFNBQUssTUFBTSxPQUFPO0FBQUEsRUFDdEI7QUFBQSxFQUVRLG1CQUFtQixNQUFZLE1BQWEsYUFBMkIsTUFBYztBQUV6RixJQUFDLEtBQWEsWUFBWSxDQUFDLFNBQVMsUUFBUSxrQkFBa0IsVUFBVSxRQUFRLFFBQVEsVUFBVSxJQUFJLFFBQVEsQ0FBQztBQUcvRyxRQUFLLE9BQU8sSUFBWSxVQUFVO0FBQzlCLFdBQUs7QUFBQSxRQUFRLENBQUMsU0FDVixLQUFLLFdBQVcsT0FBTyxFQUNsQixRQUFRLGFBQWEsRUFDckIsU0FBUyxLQUFLLElBQUksRUFDbEIsV0FBVyxJQUFJO0FBQUEsTUFDeEI7QUFBQSxJQUNKO0FBR0EsU0FBSztBQUFBLE1BQVEsQ0FBQyxTQUNWLEtBQUssV0FBVyxNQUFNLEVBQ2pCLFNBQVMsaUJBQWlCLEVBQzFCLFFBQVEsa0JBQWtCLEVBQzFCLFFBQVEsTUFBTTtBQUNYLGVBQU8sSUFBSSxVQUFVLGFBQWEsS0FBSyxNQUFNLElBQUksS0FBSztBQUFBLE1BQzFELENBQUM7QUFBQSxJQUNUO0FBR0EsU0FBSztBQUFBLE1BQVEsQ0FBQyxTQUNWLEtBQUssV0FBVyxNQUFNLEVBQ2pCLFNBQVMsbUJBQW1CLEVBQzVCLFFBQVEsMkJBQTJCLEVBQ25DLFFBQVEsTUFBTTtBQUNYLGVBQU8sSUFBSSxVQUFVLGFBQWEsS0FBSyxNQUFNLElBQUksT0FBTztBQUFBLE1BQzVELENBQUM7QUFBQSxJQUNUO0FBR0EsU0FBSztBQUFBLE1BQVEsQ0FBQyxTQUNWLEtBQUssV0FBVyxRQUFRLEVBQ25CLFNBQVMsYUFBYSxFQUN0QixRQUFRLGNBQWMsRUFDdEIsUUFBUSxNQUFNO0FBQ1gsY0FBTSxVQUFXLE9BQU8sSUFBSSxNQUFjLGlCQUFpQixLQUFLLE1BQU0sS0FBSyxTQUFTO0FBQ3BGLGVBQU8sSUFBSSxNQUFNLEtBQUssTUFBTSxPQUFPLEVBQUUsS0FBSyxDQUFDLFlBQVk7QUFDbkQsaUJBQU8sSUFBSSxVQUFVLGFBQWEsUUFBUSxNQUFNLElBQUksS0FBSztBQUFBLFFBQzdELENBQUM7QUFBQSxNQUNMLENBQUM7QUFBQSxJQUNUO0FBR0EsU0FBSztBQUFBLE1BQVEsQ0FBQyxTQUNULEtBQUssV0FBVyxRQUFRLEVBQ3BCLFNBQVMsUUFBUSxFQUNqQixRQUFRLGdCQUFnQixFQUN4QixRQUFRLE1BQU07QUFDWCxRQUFDLE9BQU8sSUFBWSxZQUFZLHNCQUFzQixJQUFJO0FBQUEsTUFDOUQsQ0FBQyxFQUNBLFdBQVcsSUFBSTtBQUFBLElBQ3hCO0FBR0EsU0FBSztBQUFBLE1BQVEsQ0FBQyxTQUNWLEtBQUssV0FBVyxRQUFRLEVBQ25CLFNBQVMsYUFBYSxFQUV0QixRQUFRLG1CQUFtQixFQUMzQixRQUFRLE1BQU07QUFDWCxZQUFJLEtBQUssV0FBVztBQUNoQixrQkFBUSxPQUFPO0FBQUEsWUFDWCxJQUFJO0FBQUEsWUFDSixNQUFNO0FBQUEsY0FDRixXQUFXO0FBQUEsWUFDZjtBQUFBLFVBQ0osQ0FBQyxFQUFFLEtBQUssS0FBSyxTQUFTO0FBQUEsUUFDMUI7QUFFQSxtQ0FBMkIsSUFBSTtBQUFBLFVBQzNCO0FBQUEsVUFDQTtBQUFBLFVBQ0E7QUFBQSxRQUNKLENBQUM7QUFBQSxNQUNMLENBQUM7QUFBQSxJQUNUO0FBRUEsV0FBTyxJQUFJLFVBQVUsUUFBUSxhQUFhLE1BQU0sTUFBTSxrQkFBa0I7QUFBQSxFQUM1RTtBQUNKOzs7QUUvSE8sSUFBTSx5QkFBTixjQUFxQyxzQkFBc0I7QUFBQSxFQUk5RCxZQUFtQixRQUErQjtBQUM5QyxVQUFNLE9BQU8sSUFBSSxPQUFPLElBQUk7QUFEYjtBQUFBLEVBRW5CO0FBQUEsRUFMTyxZQUFnQztBQUFBLEVBQ2hDLGlCQUFpQixvQkFBSSxJQUFJO0FBQUEsRUFNekIsS0FBSyxXQUF3QjtBQUNoQyxTQUFLLFlBQVk7QUFDakIsVUFBTSxLQUFLLFNBQVM7QUFFcEIsU0FBSyxlQUFlLEdBQUcsTUFBTTtBQUM3QixTQUFLLG1CQUFtQixLQUFLLGdCQUFnQixHQUFHLE1BQU0sS0FBSyxjQUFjO0FBQUEsRUFDN0U7QUFBQSxFQUVPLFFBQVE7QUFDWCxVQUFNLE1BQU07QUFFWixTQUFLLGVBQWUsR0FBRyxLQUFLO0FBQzVCLFNBQUssc0JBQXNCLEtBQUssZ0JBQWdCLEdBQUcsS0FBSyxjQUFjO0FBQUEsRUFDMUU7QUFBQSxFQUNPLFVBQVU7QUFDYixTQUFLLE1BQU07QUFDWCxTQUFLLFVBQVUsU0FBUztBQUFBLEVBQzVCO0FBQUEsRUFFUSxrQkFBaUM7QUFDckMsV0FBTztBQUFBLE1BQ0gsT0FBTyxLQUFLO0FBQUEsTUFDWixVQUFVLEtBQUs7QUFBQSxNQUNmLFNBQVMsS0FBSztBQUFBLElBQ2xCO0FBQUEsRUFDSjtBQUFBLEVBQ08sa0JBQWtCLE9BQW1CO0FBQ3hDLFVBQU0sS0FBSztBQUVYLFVBQU0sU0FBUyxTQUFTLGNBQWMsT0FBTztBQUU3QyxVQUFNLG1CQUNGLEtBQUssaUJBQWlCLFNBQVMsR0FBRyxNQUFNLEtBQ3hDLEdBQUcsUUFBUSxHQUFHLFNBQVMsa0JBQWtCO0FBQzdDLFVBQU0sZ0JBQWdCLFFBQVEsU0FBUyxHQUFHLE1BQU0sS0FBSyxHQUFHLFFBQVEsVUFBVSxTQUFTLE1BQU07QUFHekYsUUFBSSxtQkFBbUIsS0FBSyxRQUFRLEVBQUUsR0FBRyxVQUFVLENBQUMsb0JBQW9CLENBQUMsZUFBZTtBQUNwRixXQUFLLE1BQU07QUFFWDtBQUFBLElBQ0o7QUFBQSxFQUNKO0FBQUEsRUFFTyxvQkFBb0IsT0FBc0I7QUFDN0MsVUFBTSxXQUFXLGdCQUFJLGFBQWE7QUFFbEMsVUFBTSxxQkFDRjtBQUVKLFVBQU0sMkJBQTBDLE1BQU07QUFBQSxNQUNsRCxLQUFLLGdCQUFnQixpQkFBaUIsa0JBQWtCO0FBQUEsSUFDNUQ7QUFFQSxVQUFNLHFCQUNELG1CQUFtQixLQUFLLE9BQU8sRUFBRSxHQUFHLFVBQVUsU0FBUyxrQkFBa0IsS0FBSyxhQUFjO0FBR2pHLFFBQ0ksdUJBQ0MsTUFBTSxRQUFRLGVBQWUsTUFBTSxRQUFRLFVBQzVDLHlCQUF5QixTQUFTLEdBQ3BDO0FBQ0UsK0JBQXlCLENBQUMsRUFBRSxNQUFNO0FBRWxDO0FBQUEsSUFDSjtBQUVBLFFBQUksTUFBTSxRQUFRLFVBQVU7QUFDeEIsWUFBTSxjQUFjLFNBQVMsY0FBYyxpQkFBaUIsR0FBRyxZQUFZLGNBQWMsT0FBTztBQUNoRyxjQUFRLElBQUksa0NBQWtDLE9BQU8sYUFBYSxhQUFhLGdCQUFnQixDQUFDO0FBRWhHLFVBQUksU0FBUyxnQkFBZ0IsbUNBQW1DO0FBQzVELGFBQUssTUFBTTtBQUFBLE1BQ2YsT0FBTztBQUNILGdCQUFRLFVBQVUsUUFBUSxDQUFDQyxlQUFhQSxZQUFVLE1BQU0sQ0FBQztBQUFBLE1BQzdEO0FBQ0EsV0FBSyxXQUFXLE1BQU07QUFFdEI7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUFBLEVBRVEsaUJBQWlCO0FBQ3JCLFdBQU8sU0FBUyxjQUFjLGlCQUFpQixHQUFHLFlBQVksY0FBYyxPQUFPO0FBQUEsRUFDdkY7QUFDSjs7O0FDckdPLElBQU0sVUFBTixNQUFNLFNBQVE7QUFBQSxFQU1qQixZQUNZLElBQ0EsVUFDVjtBQUZVO0FBQ0E7QUFBQSxFQUNSO0FBQUEsRUFSSixPQUFPLFlBQVksb0JBQUksSUFBMkI7QUFBQSxFQUNsRCxPQUFPLG9CQUFvQixvQkFBSSxJQUFxRDtBQUFBLEVBQ3BGLE9BQU8sMEJBQTBCO0FBQUEsRUFDMUIsU0FBUztBQUFBLEVBT2hCLE9BQU8sT0FBTyxRQUFpRjtBQUMzRixRQUFJLFVBQVUsbUJBQW1CLE9BQU8sRUFBRTtBQUMxQyxRQUFJLENBQUMsU0FBUztBQUNWLFlBQU0sV0FBVyxlQUFlLE1BQU07QUFDdEMsZ0JBQVUsSUFBSSxTQUFRLE9BQU8sSUFBSSxRQUFRO0FBQ3pDLGVBQVEsVUFBVSxJQUFJLE9BQU8sSUFBSSxPQUFPO0FBQ3hDLGVBQVEsa0JBQWtCLElBQUksT0FBTyxJQUFJLFFBQVE7QUFBQSxJQUNyRDtBQUVBLFdBQU87QUFBQSxFQUNYO0FBQUEsRUFDQSxPQUFPLFVBQVU7QUFDYixhQUFRLFVBQVUsUUFBUSxDQUFDLFlBQVksUUFBUSxRQUFRLENBQUM7QUFDeEQsYUFBUSxVQUFVLE1BQU07QUFDeEIsYUFBUSwwQkFBMEI7QUFBQSxFQUN0QztBQUFBLEVBRU8sT0FBTyxPQUFzQztBQUNoRCxRQUFJLEtBQUssUUFBUTtBQUNiLFdBQUssTUFBTTtBQUFBLElBQ2YsT0FBTztBQUNILFdBQUssS0FBSyxLQUFLO0FBQUEsSUFDbkI7QUFBQSxFQUNKO0FBQUEsRUFDTyxLQUFLLE9BQXNDO0FBQzlDLFNBQUssU0FBUztBQUNkLFFBQUksaUJBQWlCLFNBQVM7QUFDMUIsTUFBQyxLQUFLLFNBQW1DLEtBQUssS0FBSztBQUFBLElBQ3ZELFdBQVcsT0FBTyxVQUFVLFVBQVU7QUFDbEMsTUFBQyxLQUFLLFNBQXFDLEtBQUssS0FBNEI7QUFBQSxJQUNoRjtBQUFBLEVBQ0o7QUFBQSxFQUVPLFFBQVE7QUFDWCxTQUFLLFNBQVM7QUFDZCxTQUFLLFNBQVMsTUFBTTtBQUFBLEVBQ3hCO0FBQUEsRUFDTyxVQUFVO0FBQ2IsU0FBSyxTQUFTLFFBQVE7QUFBQSxFQUMxQjtBQUNKO0FBRUEsU0FBUyxlQUFlLFFBQXdCO0FBQzVDLFVBQVEsT0FBTyxJQUFJO0FBQUEsSUFDZixLQUFLO0FBQ0QsYUFBTyxJQUFJLHdCQUF3QixNQUFNO0FBQUEsSUFDN0MsS0FBSztBQUNELGFBQU8sSUFBSSx1QkFBdUIsTUFBTTtBQUFBLElBQzVDLEtBQUs7QUFDRCxhQUFPLElBQUksd0JBQXdCLE1BQU07QUFBQSxFQUNqRDtBQUNKO0FBRU8sU0FBUyxtQkFBbUIsSUFBa0I7QUFDakQsU0FBTyxRQUFRLFVBQVUsSUFBSSxFQUFFO0FBQ25DO0FBSU8sU0FBUyxvQkFBb0IsSUFBMEc7QUFDMUksU0FBTyxRQUFRLGtCQUFrQixJQUFJLEVBQUU7QUFDM0M7OztBQzVETyxJQUFNLGlCQUFpQixDQUFDLE9BQXNCO0FBQ2pELFFBQU0sUUFBUSxTQUFTLGNBQWMsaUJBQWlCLEdBQUcsWUFBWSxjQUFjLE9BQU87QUFDMUYsUUFBTSxXQUFXLGdCQUFJLGFBQWE7QUFDbEMsUUFBTSxrQkFBa0IsbUJBQW1CLGtCQUFrQjtBQUM3RCxRQUFNLDBCQUEwQixvQkFBb0Isa0JBQWtCO0FBRXRFLE1BQUksR0FBRyxRQUFRLFVBQVU7QUFDckIsUUFBSSxTQUFTLGdCQUFnQixtQ0FBbUM7QUFDNUQsZUFBUyxNQUFNLEtBQUs7QUFDcEIsdUJBQWlCLE1BQU07QUFBQSxJQUMzQixPQUFPO0FBQ0gsY0FBUSxVQUFVLFFBQVEsQ0FBQ0MsZUFBYUEsWUFBVSxNQUFNLENBQUM7QUFBQSxJQUM3RDtBQUNBLDZCQUF5QixXQUFXLE1BQU07QUFBQSxFQUM5QztBQUNKO0FBRU8sU0FBUyxpQkFDWixXQUNBLE9BQ0Y7QUFDRSxRQUFNLGdCQUFnQjtBQUFBLElBQ2xCO0FBQUEsSUFDQSxlQUFlLE9BQU8sVUFBa0I7QUFDcEMsWUFBTSxrQkFBa0IsbUJBQW1CLGtCQUFrQjtBQUM3RCx1QkFBaUIsTUFBTTtBQUV2QixZQUFNLEVBQUUsTUFBTSxZQUFZLElBQUksZ0JBQUksMEJBQTBCO0FBQzVELFlBQU0sWUFBWSxjQUFjLFlBQVksV0FBVyxJQUFJO0FBQzNELFlBQU0sY0FBYyxRQUFRLGNBQWMsZUFBZSxFQUFFLE1BQU0sWUFBWSxDQUFDLElBQUk7QUFFbEYsVUFBSSxhQUFhLGFBQWE7QUFFMUIsa0JBQVUsT0FBTyxDQUFDLFlBQVk7QUFBQSxVQUMxQixHQUFHO0FBQUEsVUFDSCxDQUFDLFdBQVcsR0FBRztBQUFBLFlBQ1gsTUFBTSxPQUFPLFdBQVcsRUFBRTtBQUFBLFlBQzFCLFNBQVMsTUFBTTtBQUFBLFVBQ25CO0FBQUEsUUFDSixFQUFFO0FBR0YsY0FBTSxPQUFPLGdCQUFJLFNBQVMsRUFBRSxXQUFXLEVBQUU7QUFDekMsY0FBTSxPQUFPLE9BQU8sSUFBSSxjQUFjLGFBQWEsSUFBSSxHQUFHO0FBQzFELGNBQU0sVUFBVSxNQUFNLE9BQU8sSUFBSSxNQUFNLEtBQUssSUFBSTtBQUNoRCxZQUFJLGlCQUFpQjtBQUVyQixjQUFNLFdBQVcsbUJBQW1CLElBQUk7QUFDeEMsWUFBSSxVQUFVO0FBQ1YsZ0JBQU0sTUFBTSxlQUFlLE1BQU0sR0FBRyxTQUFTLFdBQVc7QUFDeEQsZ0JBQU0sTUFBTSxlQUFlLE1BQU0sU0FBUyxTQUFTO0FBQ25ELDJCQUFpQixHQUFHLEdBQUcsSUFBSSxNQUFNLE1BQU0sR0FBRyxHQUFHO0FBRTdDLGlCQUFPLElBQUksTUFBTSxPQUFPLE1BQU0sY0FBYztBQUFBLFFBQ2hELE9BQU87QUFDSCxnQkFBTSxZQUFZLGVBQWUsTUFBTSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUs7QUFDckQsaUJBQU8sSUFBSSxNQUFNLE9BQU8sTUFBTSxJQUFJLE1BQU0sTUFBTSxHQUFHLGNBQWMsS0FBSyxRQUFRLEVBQUUsR0FBRyxjQUFjLEdBQUc7QUFBQSxRQUN0RztBQUFBLE1BQ0o7QUFBQztBQUFBLElBQ0w7QUFBQSxJQUNBLFdBQVc7QUFBQSxJQUNYLG1CQUFtQixDQUFDLGdFQUFnRTtBQUFBLElBQ3BGO0FBQUEsRUFDSjtBQUVBLFFBQU0sV0FBVyxJQUFJLHlDQUFPLGFBQWE7QUFDekMsUUFBTSxRQUFRLGlCQUFpQixTQUFTLElBQUk7QUFDNUMsUUFBTSxJQUFJLFNBQVMsTUFBTSxpQkFBaUIsWUFBWSxDQUFDO0FBQ3ZELFFBQU0sSUFBSSxTQUFTLE1BQU0saUJBQWlCLFlBQVksQ0FBQztBQUN2RCxRQUFNLElBQUksU0FBUyxNQUFNLGlCQUFpQixZQUFZLENBQUM7QUFFdkQsUUFBTSxZQUFZLFNBQVMsSUFBSSxLQUFLLElBQUksS0FBSyxJQUFJLEdBQUc7QUFDcEQsV0FBUyxhQUFhO0FBQUE7QUFBQTtBQUFBO0FBQUEsNEJBSUUsVUFBVSxDQUFDLENBQUMsS0FBSyxVQUFVLENBQUMsQ0FBQyxLQUFLLFVBQVUsQ0FBQyxDQUFDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FPckU7QUFFRCxRQUFNLGVBQWU7QUFDckIsWUFBVSxjQUFjLFVBQVUsWUFBWSxVQUFVLFVBQVU7QUFDbEUsWUFBVSxZQUFZLFlBQVk7QUFFbEMseUJBQXVCLGFBQWEsVUFBVTtBQUNsRDtBQUVBLFNBQVMsdUJBQXVCLFlBQStCO0FBQzNELFFBQU0sV0FBVyxJQUFJLGlCQUFpQixDQUFDLGNBQWM7QUFDakQsY0FBVSxRQUFRLE1BQU07QUFDcEIsWUFBTSxRQUFRLFlBQVksY0FBYyxPQUFPO0FBRS9DLFVBQUksT0FBTztBQUNQLGNBQU0saUJBQWlCLFdBQVcsZ0JBQWdCLElBQUk7QUFHdEQsaUJBQVMsV0FBVztBQUFBLE1BQ3hCO0FBQUEsSUFDSixDQUFDO0FBQUEsRUFDTCxDQUFDO0FBR0QsZ0JBQWMsU0FBUyxRQUFRLFlBQVksRUFBRSxTQUFTLE1BQU0sV0FBVyxLQUFLLENBQUM7QUFDakY7QUFhQSxTQUFTLFNBQVMsR0FBVyxHQUFXLEdBQTBCO0FBQzlELE1BQUlDLElBQUcsR0FBRztBQUVWLE1BQUksTUFBTSxHQUFHO0FBQ1QsSUFBQUEsS0FBSSxJQUFJLElBQUk7QUFBQSxFQUNoQixPQUFPO0FBQ0gsVUFBTSxJQUFJLElBQUksTUFBTSxLQUFLLElBQUksS0FBSyxJQUFJLElBQUksSUFBSTtBQUM5QyxVQUFNLElBQUksSUFBSSxJQUFJO0FBQ2xCLElBQUFBLEtBQUksU0FBUyxHQUFHLEdBQUcsSUFBSSxJQUFJLENBQUM7QUFDNUIsUUFBSSxTQUFTLEdBQUcsR0FBRyxDQUFDO0FBQ3BCLFFBQUksU0FBUyxHQUFHLEdBQUcsSUFBSSxJQUFJLENBQUM7QUFBQSxFQUNoQztBQUVBLFNBQU8sQ0FBQyxLQUFLLE1BQU1BLEtBQUksR0FBRyxHQUFHLEtBQUssTUFBTSxJQUFJLEdBQUcsR0FBRyxLQUFLLE1BQU0sSUFBSSxHQUFHLENBQUM7QUFDekU7QUFFQSxTQUFTLFNBQVMsR0FBVyxHQUFXLEdBQVc7QUFDL0MsTUFBSSxJQUFJLEVBQUcsTUFBSztBQUNoQixNQUFJLElBQUksRUFBRyxNQUFLO0FBQ2hCLE1BQUksSUFBSSxJQUFJLEVBQUcsUUFBTyxLQUFLLElBQUksS0FBSyxJQUFJO0FBQ3hDLE1BQUksSUFBSSxJQUFJLEVBQUcsUUFBTztBQUN0QixNQUFJLElBQUksSUFBSSxFQUFHLFFBQU8sS0FBSyxJQUFJLE1BQU0sSUFBSSxJQUFJLEtBQUs7QUFDbEQsU0FBTztBQUNYO0FBRU8sU0FBUyxtQkFBbUIsTUFBbUI7QUFDbEQsTUFBSSxNQUFNO0FBQ04sUUFBSSxXQUE2RTtBQUNqRixhQUFTLFFBQVEsR0FBRyxRQUFRLEtBQUssUUFBUSxTQUFTO0FBQzlDLFlBQU0sU0FBUyxLQUFLLEtBQUs7QUFFekIsVUFBSSxpQkFBaUIsS0FBSyxPQUFPLEdBQUcsR0FBRztBQUNuQyxtQkFBVztBQUFBLFVBQ1AsT0FBTyxPQUFPLElBQUksTUFBTSxDQUFDO0FBQUEsVUFDekIsYUFBYSxPQUFPLFNBQVMsTUFBTTtBQUFBLFVBQ25DLFdBQVcsT0FBTyxTQUFTLElBQUk7QUFBQSxRQUNuQztBQUVBO0FBQUEsTUFDSixPQUFPO0FBQ0g7QUFBQSxNQUNKO0FBQUEsSUFDSjtBQUVBLFdBQU87QUFBQSxFQUNYO0FBQ0o7OztBQ3BKQSxJQUFNLFVBQVUsT0FBTztBQUFBLEVBQ25CO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFDSixNQUE4QztBQUMxQyxRQUFNLE9BQU8sT0FBTyxJQUFJLFVBQVUsUUFBUSxrQkFBa0I7QUFFNUQsbUJBQWlCLEVBQUUsTUFBTSxNQUFNLFlBQVksQ0FBQztBQUNoRDtBQUVBLElBQU0sVUFBVSxDQUFDO0FBQUEsRUFDYjtBQUFBLEVBQ0E7QUFBQSxFQUNBLGtCQUFBQztBQUFBLEVBQ0E7QUFDSixNQUFxQztBQUNqQyxRQUFNLEVBQUUsT0FBTyxJQUFJLGdCQUFnQixFQUFFLFdBQVc7QUFDaEQsUUFBTSxPQUFPLGlCQUFpQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRW5ELE1BQUlBLHFCQUFvQixnQkFBSSxhQUFhLEVBQUUsa0JBQWtCO0FBQ3pELFdBQU8sSUFBSSxVQUFVLFFBQVEsY0FBYyxVQUFVLEtBQUssT0FBTyxNQUFNLEdBQUcsTUFBTSxJQUFJO0FBQUEsRUFDeEY7QUFDSjtBQUVBLElBQU0sZ0JBQWdCLENBQUMsRUFBRSxNQUFNLE9BQU8sWUFBWSxNQUEyQztBQUN6RixVQUFRLElBQUksaUVBQTBELGFBQWEsSUFBSTtBQUN2RixRQUFNLE9BQU8saUJBQWlCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkQsVUFBUSxJQUFJLCtCQUF3QixJQUFJO0FBRXhDLFVBQVEsT0FBTztBQUFBLElBQ1gsSUFBSTtBQUFBLEVBQ1IsQ0FBQyxFQUFFLEtBQUssRUFBRSxPQUFPLE1BQU0sTUFBTSxZQUFZLENBQUM7QUFDOUM7QUFFTyxJQUFNLGdCQUFnQjtBQUFBLEVBQ3pCO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFDSjs7O0FDbkVBLFNBQVMsVUFBVTtBQUNmLFNBQU8sVUFBVSxXQUFXLFFBQVEsS0FBSyxNQUFNO0FBQ25EO0FBRU8sU0FBUyxpQkFBaUIsR0FBd0M7QUFDckUsU0FBTyxRQUFRLElBQUksRUFBRSxVQUFVLEVBQUU7QUFDckM7QUFNTyxTQUFTLFVBQVUsTUFBdUI7QUFDN0MsU0FBTyxLQUFLLFdBQVcsTUFBTSxLQUFLLEtBQUssV0FBVyxNQUFNO0FBQzVEO0FBRU8sU0FBUyxlQUFlLE1BQXdCO0FBQ25ELFNBQU8sS0FBSyxDQUFDLEVBQUUsUUFBUSxDQUFDO0FBQzVCO0FBS08sU0FBUyxTQUFTLGVBQStCO0FBQ3BELFFBQU0sU0FBUyxjQUFjLE9BQU87QUFDcEMsUUFBTSxRQUFRLENBQUM7QUFDZixNQUFJLE9BQWMsRUFBRSxNQUFNLENBQUMsR0FBRyxTQUFTLEVBQUU7QUFFekMsUUFBTSxlQUFlLGNBQWMsTUFBTSxFQUFFLE9BQU8sTUFBTSxFQUFFLEtBQUssQ0FBQztBQUNoRSxRQUFNLGNBQWMsZ0JBQUksZUFBZSxFQUFFLFNBQVMsUUFBUSxhQUFhLE9BQU8sTUFBTSxDQUFDO0FBQ3JGLE1BQUksT0FBZSxhQUFhLE1BQU0sRUFBRSxTQUFTLGFBQWEsTUFBTTtBQUVwRSxXQUFTLE9BQU8sR0FBRyxPQUFPLElBQUksUUFBUTtBQUNsQyxRQUFJLE9BQU8sTUFBTSxHQUFHO0FBQ2hCLGFBQU87QUFBQSxRQUNILE1BQU0sQ0FBQztBQUFBLFFBQ1AsU0FBUyxLQUFLLEtBQUs7QUFBQSxNQUN2QjtBQUNBLFlBQU0sS0FBSyxJQUFJO0FBQUEsSUFDbkI7QUFFQSxTQUFLLEtBQUssS0FBSyxJQUFJO0FBQ25CLFdBQU8sS0FBSyxNQUFNLEVBQUUsSUFBSSxHQUFHLE1BQU07QUFBQSxFQUNyQztBQUVBLFNBQU87QUFDWDtBQUlPLFNBQVMsU0FBUyxFQUFFLGVBQWUsR0FBNEM7QUFDbEYsTUFBSSxlQUFlO0FBQ25CLFFBQU0sVUFBVTtBQUNoQixRQUFNLE9BQU87QUFDYixRQUFNLFFBQXFCLE1BQU07QUFBQSxJQUFLLEVBQUUsUUFBUSxLQUFLO0FBQUEsSUFBRyxNQUNwRCxNQUFNLE9BQU8sRUFBRSxLQUFLLENBQUM7QUFBQSxFQUN6QjtBQUVBLFdBQVMsV0FBVyxHQUFHLFdBQVcsTUFBTSxZQUFZO0FBQ2hELGFBQVMsV0FBVyxHQUFHLFdBQVcsU0FBUyxZQUFZO0FBQ25ELFlBQU0sUUFBUSxFQUFFLFFBQVEsSUFBSTtBQUM1QjtBQUFBLElBQ0o7QUFBQSxFQUNKO0FBRUEsU0FBTztBQUNYOzs7QUN6RUEsSUFBQUMsbUJBQTZEOzs7QUNDN0QsSUFBQUMsbUJBQThCOzs7QUNBOUIsU0FBUyxpQkFBaUIsVUFBMkI7QUFDakQsUUFBTSxZQUFZO0FBQ2xCLFFBQU0sWUFBWTtBQUNsQixRQUFNLGFBQWE7QUFDbkIsUUFBTSxvQkFBb0I7QUFFMUIsU0FDSSxDQUFDLFVBQVUsS0FBSyxRQUFRLEtBQ3hCLENBQUMsVUFBVSxLQUFLLFFBQVEsS0FDeEIsQ0FBQyxXQUFXLEtBQUssUUFBUSxLQUN6QixDQUFDLGtCQUFrQixLQUFLLFFBQVE7QUFFeEM7QUFFQSxTQUFTLGtCQUFrQixhQUE0QixZQUEyQixhQUEwQztBQUN4SCxRQUFNLGVBQWU7QUFJckIsVUFBUSxhQUFhO0FBQUEsSUFDakIsS0FBSztBQUNELFVBQUksV0FBVyxLQUFLLE1BQU0sWUFBWSxLQUFLLEdBQUc7QUFDMUMsZUFBTyxHQUFHLFlBQVk7QUFBQSxvQ0FDRixZQUFZLEtBQUssQ0FBQyxrQkFBa0IsV0FBVyxLQUFLLENBQUM7QUFBQSxNQUM3RTtBQUNBO0FBQUEsSUFDSixLQUFLO0FBQ0QsVUFBSSxXQUFXLFFBQVEsTUFBTSxZQUFZLFFBQVEsS0FBSyxXQUFXLEtBQUssTUFBTSxZQUFZLEtBQUssR0FBRztBQUM1RixlQUFPLEdBQUcsWUFBWTtBQUFBLGdDQUNOLFlBQVksUUFBUSxDQUFDLElBQUksWUFBWSxLQUFLLENBQUMsY0FBYyxXQUFXLFFBQVEsQ0FBQyxJQUFJLFdBQVcsS0FBSyxDQUFDO0FBQUEsTUFDdEg7QUFDQTtBQUFBLElBQ0osS0FBSztBQUNELFVBQUksV0FBVyxNQUFNLE1BQU0sWUFBWSxNQUFNLEtBQUssV0FBVyxLQUFLLE1BQU0sWUFBWSxLQUFLLEdBQUc7QUFDeEYsZUFBTyxHQUFHLFlBQVk7QUFBQSwrQkFDUCxZQUFZLE9BQU8sV0FBVyxDQUFDLGFBQWEsV0FBVyxPQUFPLFdBQVcsQ0FBQztBQUFBLE1BQzdGO0FBQ0E7QUFBQSxJQUNKLEtBQUs7QUFDRCxVQUFJLFdBQVcsS0FBSyxNQUFNLFlBQVksS0FBSyxLQUFLLFdBQVcsS0FBSyxNQUFNLFlBQVksS0FBSyxHQUFHO0FBQ3RGLGVBQU8sR0FBRyxZQUFZO0FBQUEsb0NBQ0YsWUFBWSxLQUFLLENBQUMsT0FBTyxZQUFZLEtBQUssQ0FBQyxrQkFBa0IsV0FBVyxLQUFLLENBQUMsT0FBTyxXQUFXLEtBQUssQ0FBQztBQUFBLE1BQzlIO0FBQ0E7QUFBQSxJQUNKLEtBQUs7QUFDRCxVQUFJLENBQUMsV0FBVyxPQUFPLGFBQWEsS0FBSyxHQUFHO0FBQ3hDLGVBQU8sR0FBRyxZQUFZO0FBQUEsK0JBQ1AsWUFBWSxPQUFPLFlBQVksQ0FBQyxhQUFhLFdBQVcsT0FBTyxZQUFZLENBQUM7QUFBQSxNQUMvRjtBQUNBO0FBQUEsSUFDSjtBQUNJLGFBQU8sZUFBZSx3QkFBd0IsV0FBVztBQUFBLEVBQ2pFO0FBRUEsU0FBTztBQUNYO0FBRUEsU0FBUyxrQkFBa0IsUUFBZ0IsYUFBaUM7QUFDeEUsUUFBTSxtQkFBbUIsZ0JBQUksYUFBYSxFQUFFLGFBQWEsV0FBVyxFQUFFLFFBQVEsTUFBTSxNQUFNO0FBRTFGLE1BQUksa0JBQWtCO0FBQ2xCLGtCQUFjLE9BQU8sQ0FBQyxjQUFjO0FBQUEsTUFDaEMsR0FBRztBQUFBLE1BQ0gsY0FBYztBQUFBLFFBQ1YsR0FBRyxTQUFTO0FBQUEsUUFDWixDQUFDLFdBQVcsR0FBRztBQUFBLFVBQ1gsR0FBRyxTQUFTLGFBQWEsV0FBVztBQUFBLFVBQ3BDO0FBQUEsUUFDSjtBQUFBLE1BQ0o7QUFBQSxJQUNKLEVBQUU7QUFBQSxFQUNOO0FBQ0o7QUFFTyxTQUFTLGVBQWUsUUFBZ0IsYUFBMkI7QUFDdEUsTUFBSSxRQUFRO0FBRVosTUFBSSxDQUFDLFFBQVE7QUFDVCxXQUFPLFFBQVE7QUFBQSxFQUNuQjtBQUVBLE1BQUksQ0FBQyxpQkFBaUIsTUFBTSxHQUFHO0FBQzNCLFdBQU8sUUFBUTtBQUFBLEVBQ25CO0FBRUEsUUFBTSxjQUFjLE9BQU8sT0FBTztBQUNsQyxRQUFNLGdCQUFnQixPQUFPLE9BQU8sRUFBRSxPQUFPLE1BQU07QUFDbkQsUUFBTSxhQUFhLE9BQU8sT0FBTyxlQUFlLFFBQVEsSUFBSTtBQUM1RCxNQUFJLENBQUMsV0FBVyxRQUFRLEdBQUc7QUFDdkIsV0FBTyxRQUFRO0FBQUEsRUFDbkI7QUFHQSxRQUFNLGlCQUFpQixrQkFBa0IsYUFBYSxZQUFZLFdBQVc7QUFDN0UsTUFBSSxnQkFBZ0I7QUFDaEIsV0FBTyxRQUFRO0FBQUEsRUFDbkI7QUFLQSxvQkFBa0IsUUFBUSxXQUFXO0FBRXJDLFNBQU87QUFDWDs7O0FEdEdPLFNBQVMsd0JBQXdCLFFBQXdCO0FBQzVELFFBQU0sa0JBQWtCLE9BQU8sUUFBUSxlQUFlLEVBQUU7QUFFeEQsU0FBTyxnQkFBZ0IsUUFBUSxRQUFRLEVBQUU7QUFDN0M7QUFZQSxTQUFTLHNCQUFzQixRQUFnQjtBQUMzQyxRQUFNLGNBQWMsd0JBQXdCLE1BQU07QUFDbEQsU0FBTyxVQUFVLEtBQUssV0FBVyxNQUFNLFNBQVMsS0FBSyxXQUFXLEtBQUssU0FBUyxLQUFLLFdBQVc7QUFDbEc7QUFFTyxTQUFTLG9CQUFvQixVQUFrQixzQkFBc0IsZUFDeUM7QUFFakgsUUFBTSxlQUFlLGdCQUFJLGFBQWEsRUFBRTtBQUV4QyxhQUFXLGVBQWUscUJBQXFCO0FBQzNDLGVBQVcsZUFBZSxhQUFhLFdBQVcsR0FBRztBQUNqRCxVQUFJLE9BQU8sT0FBTyxPQUFPLFVBQVUsYUFBYSxJQUFJO0FBRXBELFVBQUksS0FBSyxRQUFRLEtBQUssS0FBSyxPQUFPLFdBQVcsTUFBTSxVQUFVO0FBQ3pELFlBQUksZ0JBQWdCLFFBQVE7QUFDeEIsa0JBQVEsSUFBSSx1QkFBdUIsV0FBVztBQUM5QyxjQUFJLGVBQWUsc0JBQXNCLFdBQVcsR0FBRztBQUNuRCxrQkFBTSxjQUFjLHdCQUF3QixXQUFXO0FBQ3ZELGdCQUFJLFVBQVUsS0FBSyxXQUFXLEdBQUc7QUFDN0IscUJBQU8sT0FBTztBQUFBLGdCQUNWO0FBQUE7QUFBQSxnQkFFQSxZQUFZLFFBQVEsV0FBVyxFQUFFLEVBQUUsUUFBUSxXQUFXLEVBQUU7QUFBQSxnQkFDeEQ7QUFBQSxjQUNKO0FBQUEsWUFDSjtBQUFBLFVBQ0o7QUFBQSxRQUNKO0FBRUEsZUFBTyxFQUFFLFNBQVMsTUFBTSxhQUFhLEtBQUs7QUFBQSxNQUM5QztBQUFBLElBQ0o7QUFBQSxFQUNKO0FBRUEsU0FBTyxFQUFFLFNBQVMsT0FBTyxhQUFhLE1BQU0sTUFBTSxLQUFLO0FBQzNEO0FBRU8sU0FBUyxlQUFlLFFBQXdCO0FBQ25ELE1BQUksQ0FBQyxVQUFVLFdBQVcsS0FBSztBQUMzQixXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQUksQ0FBQyxPQUFPLElBQUksTUFBTSwwQkFBc0IsZ0NBQWMsTUFBTSxDQUFDLEdBQUc7QUFDaEUsV0FBTztBQUFBLEVBQ1g7QUFFQSxTQUFPO0FBQ1g7QUFDTyxTQUFTLGlCQUFpQkMsV0FBMEI7QUFDdkQsTUFBSSxDQUFDQSxXQUFVO0FBQ1gsV0FBTztBQUFBLEVBQ1g7QUFFQSxNQUFJLENBQUMsT0FBTyxJQUFJLGNBQWMscUJBQXFCQSxXQUFVLEVBQUUsR0FBRztBQUM5RCxXQUFPO0FBQUEsRUFDWDtBQUVBLFNBQU87QUFDWDs7O0FEdEVPLFNBQVMsaUJBQWlCO0FBQUEsRUFDN0I7QUFBQSxFQUNBO0FBQ0osR0FHc0I7QUFDbEIsUUFBTSxhQUFhLGdCQUFJLFlBQVksV0FBVyxDQUFDO0FBRS9DLFNBQU8sV0FBVyxlQUFlLEVBQUUsTUFBTSxZQUFZLENBQUMsQ0FBQyxHQUFHO0FBQzlEO0FBRU8sU0FBUyw2QkFBNkI7QUFDekMsUUFBTSxlQUFlLGdCQUFnQjtBQUNyQyxRQUFNLGdCQUFnRCxDQUFDO0FBQ3ZELGdCQUFjLFFBQVEsQ0FBQyxnQkFBZ0I7QUFDbkMsVUFBTSx1QkFBdUIsYUFBYSxXQUFXLEVBQUU7QUFDdkQsUUFBSSxDQUFDLGNBQWMsb0JBQW9CLEdBQUc7QUFDdEMsb0JBQWMsb0JBQW9CLElBQUksQ0FBQztBQUFBLElBQzNDO0FBQ0Esa0JBQWMsb0JBQW9CLEVBQUUsS0FBSyxXQUFXO0FBQUEsRUFDeEQsQ0FBQztBQUVELFVBQVEsSUFBSSwyQkFBb0IsYUFBYTtBQUU3QyxTQUFPLFFBQVEsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDLGNBQWNDLGNBQWEsTUFBTTtBQUNyRSxRQUFJO0FBQ0EsWUFBTSxjQUFjLE9BQU8sSUFBSSxNQUFNLDBCQUFzQixnQ0FBYyxZQUFZLENBQUM7QUFFdEYsVUFBSSxDQUFDLGFBQWE7QUFDZCxjQUFNLElBQUk7QUFBQSxVQUNOLG9CQUFvQkEsZUFBYyxJQUFJLENBQUMsTUFBTSw4QkFBOEIsQ0FBQyxDQUFDLEVBQUUsS0FBSyxJQUFJLENBQUM7QUFBQTtBQUFBLFFBRTdGO0FBQUEsTUFDSjtBQUVBLDZCQUFNLGdCQUFnQixhQUFhLENBQUMsU0FBUztBQUN6QyxZQUFJLGdCQUFnQix3QkFBTztBQUN2QixnQkFBTSxFQUFFLFNBQVMsYUFBYSxLQUFLLElBQUksb0JBQW9CLEtBQUssVUFBVUEsY0FBYTtBQUV2RixjQUFJLFNBQVM7QUFDVCxrQkFBTSxjQUFjLGVBQWUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN4RCxrQkFBTSxXQUFXLG1CQUFtQixPQUFPLElBQUksY0FBYyxhQUFhLElBQUksR0FBRyxJQUFJO0FBR3JGLHdCQUFZLFdBQVcsRUFBRSxPQUFPLENBQUMsWUFBWTtBQUFBLGNBQ3pDLEdBQUc7QUFBQSxjQUNILENBQUMsV0FBVyxHQUFHO0FBQUEsZ0JBQ1gsTUFBTTtBQUFBLGdCQUNOLFNBQVMsV0FBVyxTQUFTLFFBQVE7QUFBQSxjQUN6QztBQUFBLFlBQ0osRUFBRTtBQUFBLFVBQ047QUFBQSxRQUNKO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTCxTQUFTLE9BQU87QUFDWixhQUFPLFVBQVUsWUFBWSxJQUFJLHdCQUFPLEtBQUs7QUFBQSxJQUNqRDtBQUFBLEVBQ0osQ0FBQztBQUVELFVBQVEsSUFBSSxvQ0FBMEIsT0FBTyxPQUFPLFdBQVcsRUFBRSxJQUFJLENBQUMsTUFBTSxnQkFBSSxDQUFDLENBQUMsQ0FBQztBQUN2RjtBQUVPLFNBQVMsNEJBQTRCO0FBQ3hDLGFBQVcsZUFBZSxlQUFlO0FBQ3JDLFVBQU0sV0FBVyxnQkFBSSxhQUFhLEVBQUUsTUFBTSxXQUFXO0FBQ3JELFFBQUksU0FBUyxXQUFXLFNBQVMsZUFBZTtBQUM1QyxhQUFPO0FBQUEsSUFDWDtBQUFBLEVBQ0o7QUFDSjs7O0FHM0RlLFNBQVIsZ0JBQWlDLFNBQVMsUUFBUSxTQUFTLFNBQVM7QUFDMUUsTUFBSSxvQkFBb0IsY0FBYyxrQkFBa0I7QUFDeEQsTUFBSSxtQkFBbUIsUUFBUSxVQUFVO0FBQ3pDLE1BQUksZ0JBQWdCLENBQUMsS0FBSyxLQUFLQyxZQUFXO0FBQ3pDLHlCQUFxQjtBQUNyQixRQUFJLGtCQUFrQjtBQUNyQixxQkFBZTtBQUFBLElBQ2hCO0FBQ0EsUUFBSSxDQUFDLGlCQUFpQjtBQUNyQixVQUFJLFdBQVcsT0FBTyxLQUFLLEtBQUtBLE9BQU07QUFDdEMsVUFBSSxPQUFPLFNBQVMsR0FBRztBQUN0QixZQUFJLFFBQVE7QUFBQSxNQUNiLE9BQU87QUFDTixlQUFPO0FBQUEsTUFDUjtBQUFBLElBQ0Q7QUFDQSxzQkFBa0I7QUFBQSxFQUNuQjtBQUNBLE1BQUksZUFBZSxRQUFRLFNBQVMsZUFBZSxPQUFPO0FBRTFELE1BQUksZUFBZSxDQUFDLE1BQU0sUUFBUSxPQUFPO0FBQ3pDLFdBQVMsVUFBVSxZQUFZO0FBQzlCLFFBQUksVUFBVSxRQUFRLFlBQVksWUFBWTtBQUM5QyxRQUFJLGNBQWM7QUFDakIsd0JBQWtCO0FBQ2xCLGNBQVEsSUFBSSxPQUFPO0FBQUEsSUFDcEIsT0FBTztBQUNOLGNBQVEsUUFBUyxDQUFDLE9BQU8sTUFBTTtBQUM5QiwwQkFBa0I7QUFDbEIsZ0JBQVEsQ0FBQyxFQUFFLElBQUksS0FBSztBQUFBLE1BQ3JCLENBQUU7QUFBQSxJQUNIO0FBQ0Esc0JBQWtCO0FBQUEsRUFDbkI7QUFFQSxNQUFJLFlBQVk7QUFDaEIsV0FBU0EsUUFBTyxJQUFJO0FBQ25CLFFBQUksV0FBVyx3QkFBd0IsVUFBVTtBQUNqRCxRQUFJLFdBQVc7QUFDZCxpQkFBVyxHQUFJLGdCQUFJLFlBQVksQ0FBRTtBQUNqQyx5QkFBbUIsUUFBUTtBQUMzQjtBQUFBLElBQ0Q7QUFDQSxRQUFJLGNBQWMsYUFBYSxVQUFXLENBQUMsVUFBVTtBQUNwRCxVQUFJLENBQUMsV0FBVztBQUNmLG1CQUFXO0FBQUEsTUFDWixXQUFXLENBQUMsV0FBVztBQUN0QixvQkFBWTtBQUFBLE1BQ2IsT0FBTztBQUNOLGlDQUF5QjtBQUFBLE1BQzFCO0FBQUEsSUFDRCxDQUFFO0FBQ0YsZUFBVyxHQUFHLFFBQVE7QUFDdEIsZ0JBQVk7QUFDWix1QkFBbUIsUUFBUTtBQUMzQixnQkFBWTtBQUNaLGdCQUFZO0FBQ1osUUFBSSx3QkFBd0I7QUFDM0IsaUJBQVcsZ0JBQUksWUFBWTtBQUFBLElBQzVCO0FBQ0EsUUFBSSxXQUFXO0FBQ2QsZ0JBQVUsUUFBUTtBQUFBLElBQ25CO0FBQUEsRUFDRDtBQUNBLFNBQU87QUFBQSxJQUNOLFdBQVcsYUFBYTtBQUFBLElBQ3hCLElBQUksT0FBTztBQUFFLE1BQUFBLFFBQVEsTUFBTSxLQUFNO0FBQUEsSUFBRztBQUFBLElBQ3BDLFFBQUFBO0FBQUEsRUFDRDtBQUNEOzs7Ozs7Ozs7Ozs7Ozs7OztpQkNoRXNCLE9BQU8sT0FBTSxFQUFHOztJQUFPLElBQUssQ0FBQTtJQUFJLElBQWEsQ0FBQTtFQUFBLElBQUE7Ozs7OztLQUkvRCxJQUFLLENBQUEsS0FBSSxXQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dCQU5iLDRDQUVIOzs7Ozs7Ozs7Ozs7OzJEQUdVO1FBQUs7O1FBQTRCLElBQUssQ0FBQSxJQUFHLGNBQWM7TUFBVyxDQUFBLElBQUEsZ0JBQUE7Ozt5REFVakUsS0FBSzs7Ozs7UUFDSixJQUFhLENBQUE7TUFBQTs7TUFIUCxJQUFLLENBQUEsQ0FBQTs7Ozs7QUFsQjNCLGFBOEJLLFFBQUEsTUFBQSxNQUFBO0FBN0JKLGFBWUssTUFBQSxJQUFBO0FBWEosYUFBMEMsTUFBQSxJQUFBOztBQUMxQyxhQU1LLE1BQUEsSUFBQTtBQUxKLGFBQTRFLE1BQUEsQ0FBQTs7QUFDNUUsYUFHSyxNQUFBLElBQUE7O0FBREosYUFBb0UsTUFBQSxDQUFBOzs7QUFHdEUsYUFFSyxNQUFBLElBQUE7OztBQUVOLGFBZUssTUFBQSxJQUFBO0FBZEosYUFhQyxNQUFBLEtBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQ0FyQm1CLE9BQU8sT0FBTSxFQUFHOztRQUFPQyxLQUFLLENBQUE7UUFBSUEsS0FBYSxDQUFBO01BQUEsSUFBQSxJQUFBLFVBQUEsSUFBQSxRQUFBOzs7T0FJL0RBLEtBQUssQ0FBQSxLQUFJLFdBQU8sSUFBQSxVQUFBLElBQUEsUUFBQTs7bUVBRE47UUFBSzs7UUFBNEJBLEtBQUssQ0FBQSxJQUFHLGNBQWM7TUFBVyxDQUFBLElBQUEsbUJBQUE7Ozs7Ozs7Ozs7Ozs7OztRQVExREEsS0FBSyxDQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFEYixnQkFBTzs7Ozs7b0JBTWpCLFFBQVEsZUFBZSxRQUFRLE9BQU8sV0FBVyxDQUFBO1FBQzdDLE1BQU0sS0FBSSxNQUFPLElBQUU7Z0NBQ3RCLFVBQVUsU0FBUyxNQUFNLEtBQUksR0FBQSxTQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUJDZjFCLFdBQVc7O0lBQThCLElBQVcsQ0FBQTtFQUFBLENBQUEsSUFBQTs7Ozs7OztLQUd4RCxJQUFLLENBQUEsS0FBSSxXQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0JBSm1CLE1BQ2hDOztnQkFBd0QsNEJBQzdEOzs7Ozs7Ozs7MkRBQ1k7UUFBSzs7UUFBNEIsSUFBSyxDQUFBLElBQUcsY0FBYztNQUFXLENBQUEsSUFBQSxnQkFBQTs7Ozt5REFXakUsS0FBSzs7O01BRkUsSUFBSyxDQUFBLENBQUE7Ozs7O0FBZjNCLGFBMkJLLFFBQUEsTUFBQSxNQUFBO0FBMUJKLGFBUUssTUFBQSxJQUFBO0FBUEosYUFBMEMsTUFBQSxJQUFBOztBQUMxQyxhQUVLLE1BQUEsSUFBQTs7Ozs7QUFDTCxhQUVLLE1BQUEsSUFBQTs7O0FBRU4sYUFnQkssTUFBQSxJQUFBO0FBZkosYUFjQyxNQUFBLEtBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQ0FyQkssV0FBVzs7UUFBOEJDLEtBQVcsQ0FBQTtNQUFBLENBQUEsSUFBQSxJQUFBLFVBQUEsSUFBQSxRQUFBOzs7T0FHeERBLEtBQUssQ0FBQSxLQUFJLFdBQU8sSUFBQSxVQUFBLElBQUEsUUFBQTs7bUVBRE47UUFBSzs7UUFBNEJBLEtBQUssQ0FBQSxJQUFHLGNBQWM7TUFBVyxDQUFBLElBQUEsbUJBQUE7Ozs7Ozs7Ozs7Ozs7OztRQVMxREEsS0FBSyxDQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQURiLGdCQUFPOzs7OztvQkFNakIsUUFBUSxlQUFlLFFBQVEsS0FBSyxDQUFBO1FBQ2hDLE1BQU0sS0FBSSxNQUFPLElBQUU7Z0NBQ3RCLFVBQVUsU0FBUyxNQUFNLEtBQUksR0FBQSxTQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQ25COUIsSUFBSyxDQUFBLEtBQUksV0FBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJEQUROO1FBQUs7O1FBQTRCLElBQUssQ0FBQSxJQUFHLGNBQWM7TUFBVyxDQUFBLElBQUEsZ0JBQUE7Ozs7eURBV2pFLEtBQUs7OztNQUZFLElBQUssQ0FBQSxDQUFBOzs7OztBQWIzQixhQXlCSyxRQUFBLE1BQUEsTUFBQTtBQXhCSixhQU1LLE1BQUEsSUFBQTtBQUxKLGFBQTRDLE1BQUEsSUFBQTs7QUFDNUMsYUFBMkUsTUFBQSxJQUFBOztBQUMzRSxhQUVLLE1BQUEsSUFBQTs7O0FBRU4sYUFnQkssTUFBQSxJQUFBO0FBZkosYUFjQyxNQUFBLEtBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0FsQkNDLEtBQUssQ0FBQSxLQUFJLFdBQU8sSUFBQSxVQUFBLElBQUEsUUFBQTs7a0VBRE47UUFBSzs7UUFBNEJBLEtBQUssQ0FBQSxJQUFHLGNBQWM7TUFBVyxDQUFBLElBQUEsbUJBQUE7Ozs7Ozs7Ozs7Ozs7OztRQVMxREEsS0FBSyxDQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRGIsZ0JBQU87Ozs7O29CQU1qQixRQUFRLGlCQUFpQixRQUFRLEtBQUssQ0FBQTtRQUNsQyxNQUFNLEtBQUksTUFBTyxJQUFFO2dDQUN0QixVQUFVLGVBQWUsTUFBTSxLQUFJLEdBQUEsU0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQ3RCM0IsSUFBUyxDQUFBLEVBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BQVZDLEtBQVMsQ0FBQSxFQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQ0FSSyxXQUMxQjs7UUFBOEIsSUFBVyxDQUFBO01BQUEsQ0FBQSxDQUFBOztpQkFHL0I7Ozs7Ozs7Ozs7Ozs7Ozs7eURBSmdCLFdBQzFCOztRQUE4QkEsS0FBVyxDQUFBO01BQUEsQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFROUIsU0FBRztBQUNiLGtCQUFjLE9BQVEsQ0FBQUMsY0FBUTtZQUN2QixjQUFjQTtpQkFDVEMsZ0JBQWUsZUFBYTtBQUN0QyxvQkFBWSxNQUFNQSxZQUFXLEVBQUUsZ0JBQWdCOzthQUd6Qzs7OEJBRVIsVUFBVSxnQkFBZ0IsS0FBRyxTQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ29CM0IsYUFFQSxRQUFBLE1BQUEsTUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlSCxhQUtLLFFBQUEsS0FBQSxNQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lEQUw4QixVQUFVLElBQUcsQ0FBQTs7Ozs7Ozs7Ozs7Ozt3REFBdUIsVUFBVSxJQUFHLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQkFwQmhGLFdBQVc7O0lBQThCLElBQVcsQ0FBQTtFQUFBLENBQUEsSUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFakQsSUFBUyxDQUFBLEVBQUMsaUJBQWEsa0JBQUEsR0FBQTs7OztJQWlCMUIsSUFBVSxDQUFBLEtBQUFDLGlCQUFBLEdBQUE7Ozs7Ozs7Ozs7OztnQkFuQjZDLFFBQ3pEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBV2tCLElBQVMsQ0FBQSxFQUFDO01BQU87Ozs7Ozs7QUF4QnZDLGFBdUNLLFFBQUEsTUFBQSxNQUFBO0FBcENKLGFBMkJHLE1BQUEsQ0FBQTtBQXRCRixhQVlLLEdBQUEsSUFBQTtBQVhKLGFBVUksTUFBQSxFQUFBOzs7QUFSSCxhQUVNLElBQUEsSUFBQTs7Ozs7O0FBUVIsYUFRSyxHQUFBLElBQUE7QUFQSixhQU1PLE1BQUEsS0FBQTtBQUROLGFBQXdFLE9BQUEsS0FBQTs7TUFBbkMsSUFBUyxDQUFBLEVBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1lBckJ2QyxJQUFZLENBQUE7VUFBQTs7Ozs7Ozs7Ozs7O3FDQU1sQixXQUFXOztRQUE4QkMsS0FBVyxDQUFBO01BQUEsQ0FBQSxJQUFBLElBQUEsVUFBQSxJQUFBLFFBQUE7OztRQUVqREEsS0FBUyxDQUFBLEVBQUM7UUFBYTs7Ozs7Ozs7Ozs7Ozs7UUFhU0EsS0FBUyxDQUFBLEVBQUM7Ozs7Ozs7O1VBSDdCQSxLQUFTLENBQUEsRUFBQztRQUFPOzs7O1FBT2pDQSxLQUFVLENBQUE7UUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSnlCLGNBQVUsVUFBTyxLQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxQ0MzRGxELGFBQWE7O2lDQUFsQixRQUFJLEtBQUEsR0FBQTs7Ozs7Ozs7Ozs7QUFEUCxhQUlLLFFBQUEsS0FBQSxNQUFBOzs7Ozs7Ozs7OztxQ0FIRixRQUFJLEtBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNIQSxJQUFNLGdCQUFnQixTQUFvQixnQkFBZ0I7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQ0tsRCxJQUFTLENBQUEsQ0FBQSxFQUFBLElBQUEsaUJBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRHhCLGFBU0ssUUFBQSxLQUFBLE1BQUE7QUFESixhQUE2QixLQUFBLE1BQUE7Ozs7O01BUGZDLEtBQVMsQ0FBQSxDQUFBLEVBQUEsSUFBQSxvQkFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUFSUCxZQUFBLEdBQUEsSUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FDTWQsSUFBTyxDQUFBO01BQUE7Ozs7O0FBRFQsYUFFSyxRQUFBLEtBQUEsTUFBQTs7Ozs7Ozs7UUFESEMsS0FBTyxDQUFBO01BQUE7Ozs7Ozs7Ozs7Ozs7SUFGTCxJQUFPLENBQUEsS0FBQUMsaUJBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs7UUFBUEQsS0FBTyxDQUFBO1FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQUpLLFFBQUEsSUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUNtRGQsSUFBSSxDQUFBLEVBQUMsT0FBTyxHQUFHLElBQUE7Ozs7Ozs7Ozs7Ozs7O01BQ2dDLElBQUksQ0FBQTs7TUFBYyxJQUFJLENBQUE7O01BQWMsSUFBSSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBdEIxRSxJQUFRLENBQUE7TUFBQTs7Ozs7UUFDVCxJQUFPLENBQUE7TUFBQTs7Ozs7UUFDRSxJQUFlLENBQUE7TUFBQTs7OztBQUp2QyxhQTJCSSxRQUFBLElBQUEsTUFBQTtBQTFCSCxhQXdCUSxJQUFBLE1BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFGTkUsS0FBSSxDQUFBLEVBQUMsT0FBTyxHQUFHLElBQUEsSUFBQSxVQUFBLElBQUEsUUFBQTs7OztNQUNnQ0EsS0FBSSxDQUFBOzs7TUFBY0EsS0FBSSxDQUFBOzs7TUFBY0EsS0FBSSxDQUFBOzs7Ozs7OztVQXRCMUVBLEtBQVEsQ0FBQTtRQUFBOzs7Ozs7OztVQUNUQSxLQUFPLENBQUE7UUFBQTs7Ozs7Ozs7VUFDRUEsS0FBZSxDQUFBO1FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBRzFCLFdBQ1YsY0FBYyxRQUFPO0lBQ3BCO0lBQ0Esb0JBQW9CLGlCQUFpQixLQUFLO0lBQzFDLGFBQWE7OzhCQUVFLFdBQVUsY0FBYyxjQUFhLEVBQUcsTUFBTSxPQUFPLGFBQWEsTUFBSyxDQUFBOytCQUN0RSxXQUFLO0FBQ3RCLGtCQUFjLFFBQU87TUFDcEI7TUFDQSxVQUFVLE1BQU07TUFDaEIsa0JBQWtCLGlCQUFpQixLQUFLO01BQ3hDLGFBQWE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQ0pkLElBQW1CLENBQUEsRUFBQyxNQUFLLEVBQUc7O01BQU0sSUFBVSxDQUFBO0lBQUEsRUFBRSxPQUFPLE1BQU0sSUFBQTs7Ozs7Ozs7Ozs7OztNQUMzQyxJQUFJLENBQUE7O01BQWMsSUFBSSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF4QnpDLGFBNEJJLFFBQUEsSUFBQSxNQUFBO0FBM0JILGFBd0JRLElBQUEsTUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQUZOQyxLQUFtQixDQUFBLEVBQUMsTUFBSyxFQUFHOztRQUFNQSxLQUFVLENBQUE7TUFBQSxFQUFFLE9BQU8sTUFBTSxJQUFBLElBQUEsVUFBQSxJQUFBLFFBQUE7Ozs7TUFDM0NBLEtBQUksQ0FBQTs7O01BQWNBLEtBQUksQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBckI1QixXQUNWLGNBQWMsUUFBTztJQUNwQjtJQUNBLG9CQUFvQixpQkFBaUIsS0FBSztJQUMxQyxhQUFhOzs4QkFFRSxXQUNoQixjQUFjLGNBQWEsRUFDMUIsTUFDQSxPQUNBLGFBQWEsUUFBTSxDQUFBOytCQUVILFdBQ2pCLGNBQWMsUUFBTztJQUNwQjtJQUNBLFVBQVUsTUFBTTtJQUNoQixrQkFBa0IsaUJBQWlCLEtBQUs7SUFDeEMsYUFBYTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytEQzVCVDtRQUNOOztRQUNBLElBQVMsQ0FBQSxNQUFLLFdBQVc7O1FBQ3pCLElBQVEsQ0FBQSxJQUFHLFFBQVE7TUFBSSxDQUFBLElBQUEsZ0JBQUE7Ozs7OztRQUlaLElBQU8sQ0FBQTtNQUFBOzs7QUFScEIsYUFxQlEsUUFBQSxRQUFBLE1BQUE7QUFYUCxhQVVBLFFBQUEsR0FBQTtBQUpFLGFBR0MsS0FBQSxJQUFBOzs7OztZQVpPLElBQU8sQ0FBQTtVQUFBLEVBQVAsS0FBTyxDQUFBLEVBQUEsTUFBQSxNQUFBLFNBQUE7Ozs7Ozs7O3NFQU5WO1FBQ047O1FBQ0EsSUFBUyxDQUFBLE1BQUssV0FBVzs7UUFDekIsSUFBUSxDQUFBLElBQUcsUUFBUTtNQUFJLENBQUEsSUFBQSxtQkFBQTs7Ozs7Ozs7O1VBSVosSUFBTyxDQUFBO1FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDdUNoQixJQUFtQixDQUFBLEVBQUMsT0FBTyxLQUFLLElBQUE7Ozs7Ozs7SUEwQmhDLElBQW1CLENBQUEsRUFBQyxPQUFPLE1BQU0sSUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBS0YsSUFBc0IsQ0FBQTs7Ozs7Ozs7OztRQVNYLElBQW1CLENBQUE7Ozs7Ozs7OztRQUU3QixJQUFzQixDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQVRnQyxJQUFBLENBQUEsSUFDcEYsZ0JBQ0EsaUJBQWEsZ0JBQUE7OztNQUdILElBQW1CLENBQUEsSUFBRyxrQkFBa0IsSUFBSTs7Ozs7OztBQWhFNUQsYUFzRUssUUFBQSxNQUFBLE1BQUE7QUFyRUosYUFxREssTUFBQSxJQUFBO0FBcERKLGFBeUJRLE1BQUEsT0FBQTs7O0FBQ1IsYUF5QlEsTUFBQSxPQUFBOzs7QUFHVCxhQWFLLE1BQUEsSUFBQTs7O0FBWEosYUFTUSxNQUFBLE9BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1lBSkcsSUFBa0IsQ0FBQTtVQUFBOzs7Ozs7OztNQXJDM0JDLEtBQW1CLENBQUEsRUFBQyxPQUFPLEtBQUssSUFBQSxJQUFBLFVBQUEsSUFBQSxRQUFBOzs7TUEwQmhDQSxLQUFtQixDQUFBLEVBQUMsT0FBTyxNQUFNLElBQUEsSUFBQSxVQUFBLElBQUEsUUFBQTs7OztNQWNTQSxLQUFtQixDQUFBOzs7O09BUHlCQSxLQUFBLENBQUEsSUFDcEYsZ0JBQ0EsaUJBQWEsbUJBQUE7Ozs7O01BR0hBLEtBQW1CLENBQUEsSUFBRyxrQkFBa0IsT0FBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBM0Q5QyxXQUNWLGNBQWMsUUFBTztJQUNwQixNQUFNO0lBQ04sb0JBQW9CLGlCQUFpQixLQUFLO0lBQzFDLGFBQWE7OzhCQUVFLFdBQ2hCLGNBQWMsY0FBYTtJQUMxQixNQUFNO0lBQ047SUFDQSxhQUFhOzsrQkFFRyxXQUFLO0FBQ3RCLGtCQUFjLFFBQU87TUFDcEIsTUFBTTtNQUNOLFVBQVUsTUFBTTtNQUNoQixrQkFBa0IsaUJBQWlCLEtBQUs7TUFDeEMsYUFBYTs7OzBCQVNKLFdBQ1YsY0FBYyxRQUFPO0lBQ3BCLE1BQU0sb0JBQW9CLE1BQUssRUFBRyxRQUFRLE1BQU07SUFDaEQsb0JBQW9CLGlCQUFpQixLQUFLO0lBQzFDLGFBQWE7O2dDQUVFLFdBQ2hCLGNBQWMsY0FBYTtJQUMxQixNQUFNLG9CQUFvQixNQUFLLEVBQUcsUUFBUSxNQUFNO0lBQ2hEO0lBQ0EsYUFBYTs7aUNBRUcsV0FBSztBQUN0QixrQkFBYyxRQUFPO01BQ3BCLE1BQU0sb0JBQW9CLE1BQUssRUFBRyxRQUFRLE1BQU07TUFDaEQsVUFBVSxNQUFNO01BQ2hCLGtCQUFrQixpQkFBaUIsS0FBSztNQUN4QyxhQUFhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01DckNDLElBQUksQ0FBQTs7TUFBYyxJQUFJLENBQUE7Ozs7Ozs7Ozs7O2dCQUZ4QyxHQUNFOzs7UUFBQyxJQUFVLENBQUE7TUFBQTs7Ozs7Ozs7OztBQXZCZCxhQTRCSSxRQUFBLElBQUEsTUFBQTtBQTNCSCxhQXdCUSxJQUFBLE1BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUFGTEMsS0FBVSxDQUFBO01BQUE7Ozs7TUFDS0EsS0FBSSxDQUFBOzs7TUFBY0EsS0FBSSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFyQjVCLFdBQ1YsY0FBYyxRQUFPO0lBQ3BCO0lBQ0Esb0JBQW9CLGlCQUFpQixLQUFLO0lBQzFDLGFBQWE7OzhCQUVFLFdBQ2hCLGNBQWMsY0FBYSxFQUMxQixNQUNBLE9BQ0EsYUFBYSxVQUFRLENBQUE7K0JBRUwsV0FDakIsY0FBYyxRQUFPO0lBQ3BCO0lBQ0EsVUFBVSxNQUFNO0lBQ2hCLGtCQUFrQixpQkFBaUIsS0FBSztJQUN4QyxhQUFhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUNHRSxJQUFJLENBQUE7O01BQWMsSUFBSSxDQUFBOzs7Ozs7Ozs7Ozs7O1FBRHRDLElBQU8sQ0FBQTtNQUFBOzs7Ozs7Ozs7O0FBcEJWLGFBd0JJLFFBQUEsSUFBQSxNQUFBO0FBdkJILGFBcUJRLElBQUEsTUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBRk5DLEtBQU8sQ0FBQTtNQUFBOzs7O01BQ1NBLEtBQUksQ0FBQTs7O01BQWNBLEtBQUksQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQWxCNUIsV0FDVixjQUFjLFFBQU87SUFDcEIsTUFBTTtJQUNOLG9CQUFvQixpQkFBaUIsS0FBSztJQUMxQyxhQUFhOzs4QkFFRSxXQUNoQixjQUFjLGNBQWE7SUFBRyxNQUFNO0lBQWlCO0lBQU8sYUFBYTs7K0JBQ3hELFdBQUs7QUFDdEIsa0JBQWMsUUFBTztNQUNwQixNQUFNO01BQ04sVUFBVSxNQUFNO01BQ2hCLGtCQUFrQixpQkFBaUIsS0FBSztNQUN4QyxhQUFhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01DUUUsSUFBSSxDQUFBOztNQUFjLElBQUksQ0FBQTs7Ozs7Ozs7Ozs7OztRQUR0QyxJQUFJLENBQUE7TUFBQTs7Ozs7Ozs7OztBQXhCUCxhQTZCSSxRQUFBLElBQUEsTUFBQTtBQTVCSCxhQXlCUSxJQUFBLE1BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQUZOQyxLQUFJLENBQUE7TUFBQTs7OztNQUNZQSxLQUFJLENBQUE7OztNQUFjQSxLQUFJLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQXRCNUIsV0FDVixjQUFjLFFBQU87SUFDcEI7SUFDQSxvQkFBb0IsaUJBQWlCLEtBQUs7SUFDMUMsYUFBYTs7OEJBRUUsV0FDaEIsY0FBYyxjQUFhLEVBQzFCLE1BQ0EsT0FDQSxhQUFhLE9BQUssQ0FBQTsrQkFFRixXQUFLO0FBQ3RCLGtCQUFjLFFBQU87TUFDcEI7TUFDQSxVQUFVLE1BQU07TUFDaEIsa0JBQWtCLGlCQUFpQixLQUFLO01BQ3hDLGFBQWE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDd0JiLElBQW1CLENBQUEsRUFBQyxPQUFPLE1BQU0sSUFBQTs7Ozs7OztJQU1qQyxJQUFZLENBQUEsRUFBQzs7TUFBTyxJQUFZLENBQUEsRUFBQztJQUFhLElBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQUtmLElBQXNCLENBQUE7Ozs7Ozs7Ozs7UUFTWCxJQUFrQixDQUFBOzs7Ozs7Ozs7UUFFNUIsSUFBc0IsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0FUZ0MsSUFBQSxDQUFBLElBQ3BGLGdCQUNBLGlCQUFhLGdCQUFBOzs7TUFHSCxJQUFrQixDQUFBLElBQUcsMEJBQTBCLElBQUk7Ozs7Ozs7QUE1Q25FLGFBa0RLLFFBQUEsTUFBQSxNQUFBO0FBakRKLGFBaUNLLE1BQUEsSUFBQTtBQWhDSixhQXlCUSxNQUFBLE9BQUE7OztBQUNSLGFBS1EsTUFBQSxPQUFBOzs7QUFHVCxhQWFLLE1BQUEsSUFBQTs7O0FBWEosYUFTUSxNQUFBLE9BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1lBSkcsSUFBa0IsQ0FBQTtVQUFBOzs7Ozs7OztNQWpCM0JDLEtBQW1CLENBQUEsRUFBQyxPQUFPLE1BQU0sSUFBQSxJQUFBLFVBQUEsSUFBQSxRQUFBOzs7TUFNakNBLEtBQVksQ0FBQSxFQUFDOztRQUFPQSxLQUFZLENBQUEsRUFBQztNQUFhLElBQUEsSUFBQSxVQUFBLElBQUEsUUFBQTs7OztNQWNKQSxLQUFrQixDQUFBOzs7O09BUDBCQSxLQUFBLENBQUEsSUFDcEYsZ0JBQ0EsaUJBQWEsbUJBQUE7Ozs7O01BR0hBLEtBQWtCLENBQUEsSUFBRywwQkFBMEIsT0FBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkF2Q3JELFdBQ1YsY0FBYyxRQUFPO0lBQ3BCLE1BQU07SUFDTixvQkFBb0IsaUJBQWlCLEtBQUs7SUFDMUMsYUFBYTs7OEJBRUUsV0FDaEIsY0FBYyxjQUFhO0lBQzFCLE1BQU07SUFDTjtJQUNBLGFBQWE7OytCQUVHLFdBQUs7QUFDdEIsa0JBQWMsUUFBTztNQUNwQixNQUFNO01BQ04sVUFBVSxNQUFNO01BQ2hCLGtCQUFrQixpQkFBaUIsS0FBSztNQUN4QyxhQUFhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDZGYsSUFBUSxDQUFBLEVBQUMsQ0FBQyxJQUFBOzs7Ozs7SUFBTSxJQUFRLENBQUEsRUFBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLElBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQUlILElBQTJCLENBQUE7Ozs7Ozs7Ozs7UUFTaEIsSUFBbUIsQ0FBQTs7Ozs7Ozs7O1FBRTdCLElBQXNCLENBQUE7Ozs7Ozs7Ozs7Z0JBZjNDLEtBQUc7Ozs7Ozs7Ozs7Ozs7T0FNd0UsSUFBQSxDQUFBLElBQ3BGLGdCQUNBLGlCQUFhLGdCQUFBOzs7TUFHSCxJQUFtQixDQUFBLElBQUcsa0JBQWtCLElBQUk7Ozs7Ozs7QUFoQjVELGFBc0JLLFFBQUEsTUFBQSxNQUFBO0FBckJKLGFBS0ssTUFBQSxJQUFBOzs7OztBQUVMLGFBYUssTUFBQSxJQUFBOzs7QUFYSixhQVNRLE1BQUEsTUFBQTs7Ozs7Ozs7OztVQUpHLElBQWtCLENBQUE7UUFBQTs7Ozs7OztNQVY1QkMsS0FBUSxDQUFBLEVBQUMsQ0FBQyxJQUFBLElBQUEsVUFBQSxJQUFBLFFBQUE7OztNQUFNQSxLQUFRLENBQUEsRUFBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLElBQUEsSUFBQSxVQUFBLElBQUEsUUFBQTs7OztNQWFRQSxLQUFtQixDQUFBOzs7O09BUHlCQSxLQUFBLENBQUEsSUFDcEYsZ0JBQ0EsaUJBQWEsbUJBQUE7Ozs7O01BR0hBLEtBQW1CLENBQUEsSUFBRyxrQkFBa0IsT0FBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUNuQm5ELElBQVksQ0FBQSxLQUFBLGtCQUFBLEdBQUE7Ozs7SUFHVixJQUFLLENBQUEsRUFBQyxDQUFDLEVBQUU7RUFBSTs7bUNBQWxCLFFBQUksS0FBQSxHQUFBOzs7OztJQU1BLElBQVksQ0FBQSxLQUFBLGtCQUFBLEdBQUE7Ozs7SUFHVixJQUFhLENBQUE7RUFBQTs7bUNBQWxCLFFBQUksS0FBQSxHQUFBOzs7OztJQU1BLElBQUssQ0FBQTtFQUFBOzs7SUFBVUMsS0FBSSxFQUFBLEVBQUM7O21DQUF6QixRQUFJLEtBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcEJSLGFBaUNPLFFBQUEsT0FBQSxNQUFBO0FBaENOLGFBT1UsT0FBQSxRQUFBOzs7Ozs7Ozs7QUFDVixhQVNPLE9BQUEsS0FBQTtBQVJOLGFBT0ksT0FBQSxFQUFBOzs7Ozs7Ozs7QUFFTCxhQWFPLE9BQUEsS0FBQTs7Ozs7Ozs7Ozs7UUE5QkRBLEtBQVksQ0FBQTtRQUFBOzs7Ozs7Ozs7Ozs7Ozs7VUFHVkEsS0FBSyxDQUFBLEVBQUMsQ0FBQyxFQUFFO1FBQUk7O3FDQUFsQixRQUFJLEtBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs0Q0FBSjs7OztRQU1JQSxLQUFZLENBQUE7UUFBQTs7Ozs7Ozs7Ozs7Ozs7O1VBR1ZBLEtBQWEsQ0FBQTtRQUFBOztxQ0FBbEIsUUFBSSxLQUFBLEdBQUE7Ozs7Ozs7Ozs7Ozs7NENBQUo7Ozs7OztVQU1JQSxLQUFLLENBQUE7UUFBQTs7Ozs7Ozs7O3VDQUFWLFFBQUksS0FBQSxHQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFqQkwsYUFBTSxRQUFBLEtBQUEsTUFBQTs7Ozs7Ozs7Ozs7Ozs7O21DQUdjOztRQUFVLElBQUksRUFBQTtNQUFBLENBQUE7OztBQUFsQyxhQUFzQyxRQUFBLEtBQUEsTUFBQTs7Ozs7cUNBQWxCOztVQUFVQSxLQUFJLEVBQUE7UUFBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTWpDLGFBQVMsUUFBQSxJQUFBLE1BQUE7Ozs7Ozs7Ozs7Ozs7SUFHSixJQUFTLEVBQUEsSUFBQTs7Ozs7Ozs7OztBQUFkLGFBQW1CLFFBQUEsSUFBQSxNQUFBOzs7Ozs7TUFBZEEsS0FBUyxFQUFBLElBQUEsSUFBQSxVQUFBLEdBQUEsT0FBQTs7Ozs7Ozs7Ozs7Ozs7OztRQVVLLElBQUksRUFBQSxFQUFDOzt1QkFBMEI7O1FBQWUsSUFBSSxFQUFBLEVBQUM7TUFBSTs7Ozs7Ozs7Ozs7Ozs7O01BQXZEQSxLQUFJLEVBQUEsRUFBQzs7MkNBQTBCOztRQUFlQSxLQUFJLEVBQUEsRUFBQztNQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUc5RCxJQUFHLEVBQUE7SUFBQSxFQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFBSCxJQUFHLEVBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTlYsSUFBWSxDQUFBLEtBQUEsa0JBQUEsR0FBQTs7OztJQUtWLElBQUksRUFBQSxFQUFDO0VBQUk7OztJQUFTQSxLQUFHLEVBQUEsRUFBQyxPQUFNOzttQ0FBakMsUUFBSSxLQUFBLEdBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTlAsYUFTSSxRQUFBLElBQUEsTUFBQTs7Ozs7Ozs7Ozs7Ozs7O1FBUkUsSUFBWSxDQUFBO1FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztVQUtWLElBQUksRUFBQSxFQUFDO1FBQUk7Ozs7Ozs7Ozt1Q0FBZCxRQUFJLEtBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3VDQVlELHVCQUF1Qjs7bUNBQTVCLFFBQUksS0FBQSxHQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRlIsYUFhTyxRQUFBLE9BQUEsTUFBQTtBQVpOLGFBV08sT0FBQSxLQUFBOzs7Ozs7Ozs7Ozt5Q0FWQyx1QkFBdUI7O3FDQUE1QixRQUFJLEtBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs4QkFBSixRQUFJLElBQUEsWUFBQSxRQUFBLEtBQUEsR0FBQTs7Ozs7Ozs7O3VDQUFKLFFBQUksS0FBQSxHQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBR3FCLElBQUMsRUFBQSxJQUFHO0lBQUMsRUFBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUR6QixJQUFlLENBQUEsS0FBQSxrQkFBQSxHQUFBOzs7O0lBR2IsSUFBb0IsRUFBQTtFQUFBOzttQ0FBekIsUUFBSSxLQUFBLEdBQUE7Ozs7Ozs7Ozs7Ozs7OztBQUpQLGFBT0ksUUFBQSxJQUFBLE1BQUE7Ozs7Ozs7Ozs7Ozs7O1FBTkVBLEtBQWUsQ0FBQTtRQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1Q0FHbEIsUUFBSSxLQUFBLEdBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FDQVlELFNBQVE7SUFBSSxnQkFBYztJQUFHLElBQVksQ0FBQSxFQUFDOztNQUFPLElBQVksQ0FBQSxFQUFDO0lBQWEsRUFBRSxNQUFNLEdBQUcsRUFBRSxDQUFDOzs7aUNBQTlGLFFBQUksS0FBQSxHQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRlIsYUFVTyxRQUFBLE9BQUEsTUFBQTtBQVROLGFBUU8sT0FBQSxLQUFBOzs7Ozs7Ozs7Ozt1Q0FQQyxTQUFRO1VBQUksZ0JBQWM7VUFBR0EsS0FBWSxDQUFBLEVBQUM7O1lBQU9BLEtBQVksQ0FBQSxFQUFDO1VBQWEsRUFBRSxNQUFNLEdBQUcsRUFBRSxDQUFDOzs7bUNBQTlGLFFBQUksS0FBQSxHQUFBOzs7Ozs7Ozs7Ozs7OzRCQUFKLFFBQUksSUFBQSxZQUFBLFFBQUEsS0FBQSxHQUFBOzs7Ozs7Ozs7cUNBQUosUUFBSSxLQUFBLEdBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRUcsSUFBYSxFQUFBO0VBQUE7O21DQUFsQixRQUFJLEtBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs7OztBQURQLGFBSUksUUFBQSxJQUFBLE1BQUE7Ozs7Ozs7Ozs7Ozs7O1VBSElBLEtBQWEsRUFBQTtRQUFBOztxQ0FBbEIsUUFBSSxLQUFBLEdBQUE7Ozs7Ozs7Ozs7Ozs7OEJBQUosUUFBSSxJQUFBLFlBQUEsUUFBQSxLQUFBLEdBQUE7Ozs7Ozs7O3VDQUFKLFFBQUksS0FBQSxHQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztjQWxFQSxhQUFhOzs7Ozs7SUFDTCxJQUFPLENBQUEsTUFBQTtJQUFBOztJQUFQLElBQU8sQ0FBQTs7Ozs7O0lBS3JCLElBQU8sQ0FBQSxNQUFLLFVBQU0sa0JBQUEsR0FBQTs7OztJQXFDbEIsSUFBTyxDQUFBLE1BQUssWUFBUUMsbUJBQUEsR0FBQTs7OztJQWlCcEIsSUFBTyxDQUFBLE1BQUssV0FBT0MsaUJBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs7O0FBOUR6QixhQTRFSyxRQUFBLEtBQUEsTUFBQTs7Ozs7Ozs7Ozs7Ozs7OztRQXpFZUYsS0FBTyxDQUFBOzs7Ozs7UUFLckJBLEtBQU8sQ0FBQSxNQUFLO1FBQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUFxQ2xCQSxLQUFPLENBQUEsTUFBSztRQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBaUJwQkEsS0FBTyxDQUFBLE1BQUs7UUFBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEzREwsY0FBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQ0NrQmIsbUJBQW1CLFFBQUE7Ozs7MkRBTnhCOztRQUNOLElBQU8sQ0FBQSxLQUFJO01BQThFLENBQUEsSUFBQSxpQkFBQTs7Ozs7UUFFNUUsSUFBTyxDQUFBO01BQUE7dUJBQ2pCLG1CQUFtQjs7O0FBTHhCLGFBYUssUUFBQSxNQUFBLE1BQUE7QUFOSixhQUE4RixNQUFBLElBQUE7O0FBQzlGLGFBSUssTUFBQSxJQUFBO0FBSEosYUFFSyxNQUFBLElBQUE7Ozs7OztrRUFWQzs7UUFDTkcsS0FBTyxDQUFBLEtBQUk7TUFBOEUsQ0FBQSxJQUFBLG9CQUFBOzs7Ozs7Ozs7VUFFNUVBLEtBQU8sQ0FBQTtRQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTGxCLElBQU8sQ0FBQSxLQUFBQyxtQkFBQSxHQUFBOzs7RUFnQk4sSUFBTyxDQUFBLEtBQUFDLGlCQUFBLEdBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQWhCUkYsS0FBTyxDQUFBO1FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQWdCTkEsS0FBTyxDQUFBLEdBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0JDcUlSLE9BQU8sUUFBUSxPQUFPLE9BQU0sR0FBQSxFQUM1QixPQUFPLFNBQVMsT0FBTyxRQUFPLENBQUE7OztRQUV2QixJQUE0QixDQUFBOzs7O1FBQy9CLElBQWMsQ0FBQSxFQUFDOzs7Ozs7Ozs7Ozs7Ozs7O01BQWZHLEtBQWMsQ0FBQSxFQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1VBV25CLE9BQU87VUFBbUIsT0FBTzs7O1VBQ2pDLE9BQU87VUFBbUIsT0FBTzs7Ozs7UUFFMUIsSUFBb0IsQ0FBQTs7OztRQUN2QixJQUFjLENBQUEsRUFBQzs7Ozs7Ozs7Ozs7Ozs7OztNQUFmQSxLQUFjLENBQUEsRUFBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQVVaLElBQWtCLENBQUE7Ozs7UUFDakIsSUFBYyxDQUFBLEVBQUMsZUFBZTs7Ozs7Ozs7Ozs7Ozs7OztNQUE5QkEsS0FBYyxDQUFBLEVBQUMsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQVUvQixJQUFxQixDQUFBOzs7O1FBQ3BCLElBQWMsQ0FBQSxFQUFDLGVBQWU7Ozs7Ozs7Ozs7Ozs7Ozs7TUFBOUJBLEtBQWMsQ0FBQSxFQUFDLGVBQWU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSzFDLGFBQXVCLFFBQUEsSUFBQSxNQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUFPWCxJQUFtQyxFQUFBOzs7O1FBQ2xDLElBQWMsQ0FBQSxFQUFDLGdCQUFnQjs7Ozs7Ozs7Ozs7Ozs7OztNQUEvQkEsS0FBYyxDQUFBLEVBQUMsZ0JBQWdCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBVWhDLElBQThCLEVBQUE7Ozs7UUFDN0IsSUFBYyxDQUFBLEVBQUMsZ0JBQWdCOzs7Ozs7Ozs7Ozs7Ozs7O01BQS9CQSxLQUFjLENBQUEsRUFBQyxnQkFBZ0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUFZakMsSUFBOEIsQ0FBQTs7OztRQUM3QixJQUFjLENBQUEsRUFBQzs7Ozs7Ozs7Ozs7Ozs7OztNQUFmQSxLQUFjLENBQUEsRUFBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQVVoQixJQUErQixDQUFBOzs7O1FBQzlCLElBQWMsQ0FBQSxFQUFDOzs7Ozs7Ozs7Ozs7Ozs7O01BQWZBLEtBQWMsQ0FBQSxFQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBVWhCLElBQTZCLENBQUE7Ozs7UUFDNUIsSUFBYyxDQUFBLEVBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7TUFBZkEsS0FBYyxDQUFBLEVBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUFXakIsSUFBa0IsRUFBQSxFQUFBOzs7O1FBQ2pCLElBQWlCLEVBQUE7Ozs7UUFDcEIsSUFBYyxDQUFBLEVBQUMsZUFBZTs7Ozs7Ozs7Ozs7Ozs7OztNQUE5QkEsS0FBYyxDQUFBLEVBQUMsZUFBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQU81QixJQUFjLENBQUE7Ozs7UUFDYixJQUF3QixFQUFBOzs7O1FBQzNCLElBQVksQ0FBQTs7Ozs7Ozs7Ozs7Ozs7OztNQUZWQSxLQUFjLENBQUE7OztNQUVoQkEsS0FBWSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBVVQsSUFBMEMsRUFBQTs7OztRQUN6QyxJQUFjLENBQUEsRUFBQzs7Ozs7Ozs7Ozs7Ozs7OztNQUFmQSxLQUFjLENBQUEsRUFBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUF4RnZCLElBQWMsQ0FBQSxFQUFDLGFBQWEscUJBQWlCQyxpQkFBQSxHQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF0RGxELGFBQWUsUUFBQSxLQUFBLE1BQUE7Ozs7Ozs7Ozs7OztBQStFZixhQUE0QixRQUFBLEtBQUEsTUFBQTs7Ozs7Ozs7QUFrQzVCLGFBQW9CLFFBQUEsS0FBQSxNQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUEzRGZELEtBQWMsQ0FBQSxFQUFDLGFBQWE7UUFBaUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUNqT2xDLElBQUksQ0FBQSxDQUFBLEVBQUE7Ozs7Ozs7Ozs7Ozs7OztNQUVkRSxLQUFXLENBQUEsTUFBSztLQUFVLFFBQUE7OztNQUVyQkEsS0FBVyxDQUFBLE1BQUs7S0FBTyxRQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztBQUhsQyxhQU1LLFFBQUEsS0FBQSxNQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNaTCxJQUFBQyxvQkFBc0M7QUFHL0IsSUFBTSxjQUFOLGNBQTBCLG1DQUFpQjtBQUFBLEVBQ3ZDO0FBQUEsRUFDQyxPQUErQjtBQUFBLEVBRXZDLFlBQVksS0FBVSxRQUFxQztBQUN2RCxVQUFNLEtBQUssTUFBTTtBQUNqQixTQUFLLFNBQVM7QUFFZCxnQkFBWTtBQUFBLEVBQ2hCO0FBQUEsRUFFQSxVQUFVO0FBQ04sU0FBSyxZQUFZLE1BQU07QUFFdkIsU0FBSyxPQUFPLElBQUlDLGVBQVM7QUFBQSxNQUNyQixRQUFRLEtBQUs7QUFBQSxJQUNqQixDQUFDO0FBQUEsRUFDTDtBQUFBLEVBQ0EsT0FBTztBQUNILFVBQU0sS0FBSztBQUNYLFNBQUssTUFBTSxTQUFTO0FBQUEsRUFDeEI7QUFDSjs7O0F6STNCQSxJQUFBQyxvQkFBNkQ7OztBMElEN0QsSUFBQUMsb0JBQXNCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OEJDd0lmLFdBQVc7O1FBQThCLElBQVcsQ0FBQTtNQUFBLENBQUEsQ0FBQTs7TUFEdkMsSUFBVyxDQUFBOzs7O0FBQTFCLGFBRVEsUUFBQSxRQUFBLE1BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FDQUhGLGFBQWE7O2lDQUFsQixRQUFJLEtBQUEsR0FBQTs7Ozs7Ozs7Ozs7Ozs7UUF0QmdDLElBQWEsQ0FBQTtNQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUJBb0M1QixNQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBZlIsSUFBVyxDQUFBLE1BQUE7T0FBQSxxQkFBQTs7UUFBQSxJQUFBLEVBQUEsRUFBQSxLQUFBLE1BQUE7T0FBQTs7Ozs7TUFZYixJQUFVLENBQUEsSUFBRyxtQkFBbUIsK0JBQStCLEVBQUEsSUFBQSxnQkFBQTs7TUFDakUsSUFBVSxDQUFBLENBQUE7O01BQ2YsSUFBVSxDQUFBOzs7OztBQXZDeEIsYUEyQ0ssUUFBQSxPQUFBLE1BQUE7QUExQ0osYUFRSyxPQUFBLElBQUE7QUFQSixhQUdLLE1BQUEsSUFBQTtBQUZKLGFBQXdDLE1BQUEsSUFBQTs7QUFDeEMsYUFBMEQsTUFBQSxJQUFBOzs7QUFFM0QsYUFFSyxNQUFBLElBQUE7QUFESixhQUFrRixNQUFBLE1BQUE7Ozs7UUFBL0QsSUFBUyxDQUFBO01BQUE7O0FBRzlCLGFBUUssT0FBQSxJQUFBO0FBUEosYUFHSyxNQUFBLElBQUE7O0FBQ0wsYUFFSyxNQUFBLElBQUE7QUFESixhQUEwRixNQUFBLE1BQUE7Ozs7UUFBdkUsSUFBTSxDQUFBO01BQUE7O0FBRzNCLGFBY0ssT0FBQSxLQUFBO0FBYkosYUFHSyxPQUFBLEtBQUE7O0FBQ0wsYUFRSyxPQUFBLEtBQUE7QUFQSixhQU1RLE9BQUEsTUFBQTs7Ozs7Ozs7O1FBTlksSUFBVyxDQUFBO1FBQUE7TUFBQTs7QUFTakMsYUFRSyxPQUFBLEtBQUE7QUFQSixhQUF5RSxPQUFBLE9BQUE7O0FBQ3pFLGFBS0EsT0FBQSxPQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQWhCOEQsSUFBYyxDQUFBO1VBQUE7Ozs7O1lBVW5DLElBQVksQ0FBQTtVQUFBOzs7OztZQUsxQyxJQUFZLENBQUE7VUFBQTs7Ozs7Ozs7OztRQXBDaUJDLEtBQWEsQ0FBQTtNQUFBOzs7TUFHakNBLEtBQVMsQ0FBQSxHQUFBOzs7O1VBQVRBLEtBQVMsQ0FBQTtRQUFBOzs7O01BU1RBLEtBQU0sQ0FBQSxHQUFBOzs7O1VBQU5BLEtBQU0sQ0FBQTtRQUFBOzs7Ozs7O1VBU0xBLEtBQVcsQ0FBQTtRQUFBOzs7O01BWWJBLEtBQVUsQ0FBQSxJQUFHLG1CQUFtQiwrQkFBK0IsRUFBQSxJQUFBLG1CQUFBOzs7OztNQUNqRUEsS0FBVSxDQUFBLElBQUE7Ozs7O01BQ2ZBLEtBQVUsQ0FBQSxJQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWhDRixnQkFBUyxLQUFBOzs7O0FBU1QsYUFBTSxLQUFBOzs7O0FBU0wsa0JBQVcsYUFBQSxJQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FEbElsQyxJQUFxQixvQkFBckIsY0FBK0Msd0JBQU07QUFBQSxFQUNqRCxjQUFjO0FBQ1YsVUFBTSxPQUFPLEdBQUc7QUFFaEIsVUFBTSxFQUFFLFVBQVUsSUFBSTtBQUd0QixVQUFNLGtCQUFrQixVQUFVLFVBQVU7QUFHNUMsUUFBSSxxQkFBc0I7QUFBQSxNQUN0QixRQUFRO0FBQUEsTUFDUixPQUFPO0FBQUEsUUFDSCxZQUFZO0FBQUEsTUFDaEI7QUFBQSxJQUNKLENBQUM7QUFBQSxFQUNMO0FBQ0o7QUFFTyxTQUFTLDJCQUEyQjtBQUN2QyxNQUFJLGtCQUFrQixFQUFFLEtBQUs7QUFDakM7OztBRXhCQSxJQUFBQyxvQkFRTztBQVlBLElBQU0sZUFBTixNQUFNLHNCQUFxQiwyQkFBUztBQUFBLEVBQy9CO0FBQUEsRUFDQTtBQUFBLEVBQ1I7QUFBQSxFQUVBLFlBQVksTUFBcUIsUUFBcUM7QUFDbEUsVUFBTSxJQUFJO0FBQ1YsU0FBSyxTQUFTO0FBRWQsU0FBSztBQUFBLE1BQ0QsS0FBSyxJQUFJLFVBQVUsR0FBRyxjQUFjLE1BQU07QUFDdEMsY0FBTSxXQUFXLEtBQUssT0FBTyxTQUFTO0FBQ3RDLGdCQUFRLElBQUksSUFBSTtBQUVoQixtQkFBVyxJQUFLLGFBQWEsZUFBZSxhQUFhLFVBQVcsVUFBVSxNQUFNO0FBQUEsTUFDeEYsQ0FBQztBQUFBLElBQ0w7QUFDQSxTQUFLO0FBQUEsTUFDRCxLQUFLLElBQUksTUFBTSxHQUFHLFVBQVUsQ0FBQyxTQUF3QixLQUFLLGNBQWMsSUFBYSxDQUFDO0FBQUEsSUFDMUY7QUFDQSxTQUFLO0FBQUEsTUFDRCxLQUFLLElBQUksTUFBTSxHQUFHLFVBQVUsQ0FBQyxTQUF3QixLQUFLLGNBQWMsSUFBYSxDQUFDO0FBQUEsSUFDMUY7QUFDQSxTQUFLO0FBQUEsTUFDRCxLQUFLLElBQUksTUFBTTtBQUFBLFFBQUc7QUFBQSxRQUFVLENBQUMsTUFBcUIsWUFDOUMsS0FBSyxjQUFjLE1BQWUsT0FBTztBQUFBLE1BQzdDO0FBQUEsSUFDSjtBQUlBLFNBQUssY0FBYyxLQUFLLElBQUksY0FBYyxHQUFHLFdBQVcsS0FBSyxjQUFjLENBQUM7QUFDNUUsU0FBSyxjQUFjLEtBQUssSUFBSSxVQUFVLEdBQUcsYUFBYSxNQUFNLEtBQUssV0FBVyxDQUFDLENBQUM7QUFBQSxFQUNsRjtBQUFBLEVBRUEsY0FBYztBQUNWLFdBQU87QUFBQSxFQUNYO0FBQUEsRUFFQSxpQkFBaUI7QUFDYixXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRUEsTUFBTSxTQUFTO0FBQ1gsWUFBUSxJQUFJLHVCQUFnQjtBQUU1QixTQUFLLE9BQU8sSUFBSSxhQUFLO0FBQUEsTUFDakIsUUFBUSxLQUFLO0FBQUEsSUFDakIsQ0FBQztBQUdELFFBQUksS0FBSyxJQUFJLFVBQVUsZUFBZSxLQUFLLE1BQU07QUFDN0MsaUNBQTJCO0FBQUEsSUFDL0I7QUFBQSxFQUNKO0FBQUEsRUFFQSxVQUF5QjtBQUNyQixZQUFRLElBQUkscUJBQWdCO0FBQzVCLFNBQUssTUFBTSxTQUFTO0FBRXBCLFdBQU8sUUFBUSxRQUFRO0FBQUEsRUFDM0I7QUFBQSxFQUVRLGNBQWMsTUFBYTtBQUMvQixZQUFRLElBQUksZ0NBQXNCLElBQUk7QUFFdEMsUUFBSSxLQUFLLElBQUksVUFBVSxlQUFlLEtBQUssTUFBTTtBQUM3QyxZQUFNLEVBQUUsU0FBUyxhQUFhLEtBQUssSUFBSSxvQkFBb0IsS0FBSyxRQUFRO0FBRXhFLFVBQUksU0FBUztBQUNULGNBQU0sY0FBYyxlQUFlLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDeEQsY0FBTSxhQUFhLGdCQUFJLFlBQVksV0FBVyxDQUFDLEVBQUUsV0FBVztBQUU1RCxZQUFJLFdBQVk7QUFFaEIsb0JBQVksV0FBVyxFQUFFLE9BQU8sQ0FBQyxZQUFZO0FBQUEsVUFDekMsR0FBRztBQUFBLFVBQ0gsQ0FBQyxXQUFXLEdBQUc7QUFBQSxZQUNYO0FBQUEsWUFDQSxTQUFTO0FBQUEsVUFDYjtBQUFBLFFBQ0osRUFBRTtBQUNGLGdCQUFRLElBQUksR0FBRyxXQUFXLHdCQUF3QixlQUFlLGdCQUFJLFlBQVksV0FBVyxDQUFDLENBQUM7QUFBQSxNQUNsRztBQUFBLElBQ0o7QUFBQSxFQUNKO0FBQUEsRUFFQSxNQUFjLGNBQWMsTUFBNEI7QUFDcEQsWUFBUSxJQUFJLCtCQUFxQjtBQUVqQyxVQUFNLEVBQUUsU0FBUyxhQUFhLEtBQUssSUFBSSxvQkFBb0IsS0FBSyxRQUFRO0FBRXhFLFFBQUksU0FBUztBQUNULFlBQU0sY0FBYyxlQUFlLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDeEQsWUFBTSxhQUFhLGdCQUFJLFlBQVksV0FBVyxDQUFDLEVBQUUsV0FBVztBQUM1RCxZQUFNLFdBQVc7QUFBQSxRQUNiLEdBQUcsZ0JBQUksWUFBWSxXQUFXLENBQUM7QUFBQSxNQUNuQztBQUVBLFVBQUksWUFBWTtBQUNaLGVBQU8sU0FBUyxXQUFXO0FBQzNCLG9CQUFZLFdBQVcsRUFBRSxPQUFPLE1BQU0sUUFBUTtBQUM5QyxnQkFBUSxJQUFJLEdBQUcsV0FBVyx3QkFBd0IsZUFBZSxnQkFBSSxZQUFZLFdBQVcsQ0FBQyxDQUFDO0FBQUEsTUFDbEc7QUFBQztBQUFBLElBQ0w7QUFFQSxTQUFLLGlCQUFpQjtBQUFBLEVBQzFCO0FBQUEsRUFFQSxNQUFjLGNBQWMsYUFBb0IsU0FBZ0M7QUFDNUUsVUFBTSxFQUFFLFNBQVMsWUFBWSxhQUFhLGdCQUFnQixNQUFNLFFBQVEsSUFBSSxvQkFBb0IsU0FBUyxPQUFPLENBQUM7QUFDakgsVUFBTSxFQUFFLFNBQVMsWUFBWSxhQUFhLGdCQUFnQixNQUFNLFFBQVEsSUFBSSxvQkFBb0IsWUFBWSxRQUFRO0FBR3BILFFBQUksQ0FBQyxjQUFjLFlBQVk7QUFDM0IsWUFBTSxnQkFBZ0IsWUFBWSxjQUFjO0FBQ2hELFlBQU0saUJBQWlCLGVBQWU7QUFBQSxRQUNsQyxNQUFNO0FBQUEsUUFDTixhQUFhO0FBQUEsTUFDakIsQ0FBQztBQUNELG9CQUFjLE9BQU8sQ0FBQyxZQUFZO0FBQUEsUUFDOUIsR0FBRztBQUFBLFFBQ0gsQ0FBQyxjQUFjLEdBQUc7QUFBQSxVQUNkLE1BQU07QUFBQSxVQUNOLFNBQVM7QUFBQSxRQUNiO0FBQUEsTUFDSixFQUFFO0FBQUEsSUFDTjtBQUdBLFFBQUksY0FBYyxDQUFDLFlBQVk7QUFDM0IsWUFBTSxnQkFBZ0IsWUFBWSxjQUFjO0FBQ2hELFlBQU0saUJBQWlCLGVBQWU7QUFBQSxRQUNsQyxNQUFNO0FBQUEsUUFDTixhQUFhO0FBQUEsTUFDakIsQ0FBQztBQUVELFlBQU0sY0FBYztBQUFBLFFBQ2hCLEdBQUcsZ0JBQUksYUFBYTtBQUFBLE1BQ3hCO0FBQ0EsYUFBTyxZQUFZLGNBQWM7QUFFakMsb0JBQWMsSUFBSSxXQUFXO0FBQUEsSUFDakM7QUFHQSxRQUFJLGNBQWMsWUFBWTtBQUMxQixZQUFNLGdCQUFnQixZQUFZLGNBQWM7QUFDaEQsWUFBTSxpQkFBaUIsZUFBZTtBQUFBLFFBQ2xDLE1BQU07QUFBQSxRQUNOLGFBQWE7QUFBQSxNQUNqQixDQUFDO0FBRUQsWUFBTSxnQkFBZ0IsWUFBWSxjQUFjO0FBQ2hELFlBQU0saUJBQWlCLGVBQWU7QUFBQSxRQUNsQyxNQUFNO0FBQUEsUUFDTixhQUFhO0FBQUEsTUFDakIsQ0FBQztBQUNELFlBQU0sV0FBVyxnQkFBSSxhQUFhLEVBQUUsY0FBYyxFQUFFO0FBR3BELFlBQU0sY0FBYztBQUFBLFFBQ2hCLEdBQUcsZ0JBQUksYUFBYTtBQUFBLE1BQ3hCO0FBQ0EsYUFBTyxZQUFZLGNBQWM7QUFHakMsb0JBQWMsT0FBTyxDQUFDLFlBQVk7QUFBQSxRQUM5QixHQUFHO0FBQUEsUUFDSCxDQUFDLGNBQWMsR0FBRztBQUFBLFVBQ2QsTUFBTTtBQUFBLFVBQ04sU0FBUztBQUFBLFFBQ2I7QUFBQSxNQUNKLEVBQUU7QUFBQSxJQUNOO0FBRUEsWUFBUSxJQUFJLHFEQUFpQyxhQUFhLE9BQU87QUFDakUsWUFBUSxJQUFJLGVBQWUsa0JBQWtCLGdCQUFJLFlBQVksY0FBYyxDQUFDLENBQUM7QUFBQSxFQUNqRjtBQUFBLEVBRUEsTUFBYyxlQUFlLE1BQWEsTUFBYyxPQUFzQztBQUMxRixVQUFNLEVBQUUsU0FBUyxhQUFhLEtBQUssSUFBSSxvQkFBb0IsS0FBSyxRQUFRO0FBRXhFLFFBQUksV0FBVyxRQUFRLGFBQWE7QUFDaEMsWUFBTSxjQUFjLGVBQWUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN4RCxZQUFNLFdBQVcsZ0JBQUksWUFBWSxXQUFXLENBQUMsRUFBRSxXQUFXLEVBQUU7QUFDNUQsWUFBTSxXQUNGLE1BQU0sTUFBTSxLQUFLLENBQUMsV0FBcUIsaUJBQWlCLEtBQUssT0FBTyxHQUFHLENBQUMsR0FBRyxJQUFJLE1BQU0sQ0FBQyxLQUFLO0FBRS9GLFVBQUksYUFBYSxVQUFVO0FBQ3ZCLG9CQUFZLFdBQVcsRUFBRSxPQUFPLENBQUMsWUFBWTtBQUFBLFVBQ3pDLEdBQUc7QUFBQSxVQUNILENBQUMsV0FBVyxHQUFHO0FBQUEsWUFDWDtBQUFBLFlBQ0EsU0FBUztBQUFBLFVBQ2I7QUFBQSxRQUNKLEVBQUU7QUFBQSxNQUNOO0FBQUEsSUFDSjtBQUFBLEVBQ0o7QUFBQSxFQUVPLGFBQWE7QUFDaEIsUUFBSSxLQUFLLElBQUksVUFBVSxhQUFhO0FBQ2hDLGNBQVEsSUFBSSx3QkFBd0I7QUFDcEMsV0FBSyxpQkFBaUI7QUFBQSxJQUMxQjtBQUFBLEVBQ0o7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQTJCUSxtQkFBeUI7QUFJN0IsVUFBTSxhQUFhLEtBQUssSUFBSSxVQUFVLG9CQUFvQixhQUFZO0FBRXRFLFFBQUksWUFBWSxRQUFRLFdBQVcsZ0JBQWdCLDRCQUFVO0FBQ3pELFlBQU0sT0FBTyxXQUFXLEtBQUs7QUFDN0IsVUFBSSxDQUFDLEtBQU07QUFFWCxZQUFNLEVBQUUsU0FBUyxhQUFhLEtBQUssSUFBSSxvQkFBb0IsS0FBSyxRQUFRO0FBQ3hFLFVBQUksV0FBVyxRQUFRLGFBQWE7QUFDaEMsY0FBTSxjQUFjLGVBQWUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN4RCwwQkFBa0IsSUFBSSxXQUFXO0FBQUEsTUFDckM7QUFBQSxJQUNKO0FBRUEsWUFBUSxJQUFJLHdFQUEwRCxnQkFBSSxpQkFBaUIsQ0FBQztBQUFBLEVBQ2hHO0FBQUEsRUFFUSxnQkFBZ0IsSUFBbUI7QUFDdkMsWUFBUSxJQUFJLDJEQUEyRCxNQUFNLGlCQUFpQixFQUFFLENBQUM7QUFDakcsUUFBSSxpQkFBaUIsRUFBRSxHQUFHO0FBQ3RCLFdBQUssbUJBQW1CO0FBQUEsSUFDNUI7QUFBQSxFQUNKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUF1Qko7OztBNUl2UkEsSUFBcUIsOEJBQXJCLGNBQXlELHlCQUFPO0FBQUEsRUFDNUQsV0FBbUQsQ0FBQztBQUFBLEVBQ3BELG1CQUFtQyxDQUFDO0FBQUEsRUFDcEMsMkJBQWdEO0FBQUEsRUFFaEQsV0FBVztBQUNQLFlBQVEsSUFBSSx3QkFBYztBQUUxQixTQUFLLElBQUksVUFBVSxnQkFBZ0IsU0FBUyxFQUFFLFFBQVEsQ0FBQyxTQUFTLEtBQUssT0FBTyxDQUFDO0FBRTdFLFNBQUssaUJBQWlCLFNBQVMsS0FBSyxLQUFLLGlCQUFpQixRQUFRLENBQUMsWUFBWSxRQUFRLENBQUM7QUFBQSxFQUM1RjtBQUFBLEVBRUEsTUFBTSxTQUFTO0FBQ1gsVUFBTSxLQUFLLGFBQWE7QUFDeEIsWUFBUSxJQUFJLG1CQUFZO0FBRXhCLElBQUFDLGtCQUFpQixJQUFJLElBQUk7QUFHekIsVUFBTSxXQUFXLEtBQUssU0FBUztBQUMvQixlQUFXLElBQUssYUFBYSxlQUFlLGFBQWEsVUFBVyxVQUFVLE1BQU07QUFHcEYsVUFBTSxvQkFBb0I7QUFHMUIsVUFBTSxxQkFBcUIsY0FBYyxVQUFVLEtBQUssYUFBYSxLQUFLLElBQUksQ0FBQztBQUMvRSxTQUFLLFNBQVMsa0JBQWtCO0FBRWhDLFNBQUssY0FBYyxJQUFJLFlBQVksS0FBSyxLQUFLLElBQUksQ0FBQztBQUVsRCxTQUFLLGFBQWE7QUFHbEIsU0FBSyxhQUFhLFdBQVcsQ0FBQyxTQUFTLElBQUksYUFBYSxNQUFNLElBQUksQ0FBQztBQUduRSxTQUFLLFdBQVc7QUFBQSxNQUNaLElBQUk7QUFBQSxNQUNKLE1BQU07QUFBQSxNQUNOLFVBQVUsTUFBTTtBQUNaLGFBQUssV0FBVztBQUFBLE1BQ3BCO0FBQUEsSUFDSixDQUFDO0FBRUQsa0JBQWMsUUFBUSxDQUFDLGdCQUFnQjtBQUNuQyxNQUFDLENBQUMsWUFBWSxNQUFNLEVBQVksUUFBUSxDQUFDLFFBQVE7QUFDN0MsY0FBTSxjQUFjLDhCQUE4QixXQUFXO0FBSzdELFlBQUk7QUFLSixZQUFJLGdCQUFnQixPQUFPO0FBQ3ZCLG9CQUFVLFFBQVEsU0FBUyxhQUFhO0FBQUEsUUFDNUMsT0FBTztBQUNILG9CQUFVLEdBQUcsR0FBRyxJQUFJLFdBQVc7QUFBQSxRQUNuQztBQUVBLGFBQUssV0FBVztBQUFBLFVBQ1osSUFBSSxVQUFVLE9BQU87QUFBQSxVQUNyQixNQUFNLFFBQVEsZ0JBQWdCLFFBQ3hCLEdBQUcsT0FBTyxPQUNWLEdBQUcsR0FBRyxJQUFJLDhCQUE4QixXQUFXLENBQUMsRUFDdEQ7QUFBQSxVQUNKLFVBQVUsTUFBTTtBQUNaLGtCQUFNLEVBQUUsVUFBVSxJQUFJLE9BQU87QUFDN0Isa0JBQU0sT0FBTyxVQUFVLFFBQVEsS0FBSztBQUNwQyxrQkFBTSxVQUFVLE9BQ1gsT0FBTyxFQUNQLE1BQU0sRUFDVixRQUFRLFNBQVMsUUFBUSxVQUFVLEVBQUUsR0FBRyxXQUFXLEVBQy9DLFFBQVEsV0FBVztBQUV4Qiw2QkFBaUIsRUFBRSxNQUFNLE1BQU0sU0FBUyxhQUFhLDZCQUE2QixNQUFNLENBQUM7QUFBQSxVQUM3RjtBQUFBLFFBQ0osQ0FBQztBQUFBLE1BQ0wsQ0FBQztBQUFBLElBQ0wsQ0FBQztBQUVELFVBQU0sZ0JBQWdCLE1BQU0sVUFBVSxpQkFBaUI7QUFDdkQsU0FBSyxXQUFXO0FBQUEsTUFDWixJQUFJO0FBQUEsTUFDSixNQUFNO0FBQUEsTUFDTixVQUFVLE1BQU07QUFDWixZQUFJLGVBQWU7QUFDZixtQ0FBeUI7QUFBQSxRQUM3QixPQUFPO0FBQ0gsY0FBSSx5QkFBTyxtQkFBbUIsaUJBQWlCLDhCQUE4QjtBQUFBLFFBQ2pGO0FBQUEsTUFDSjtBQUFBLElBQ0osQ0FBQztBQUdELFFBQUksZ0JBQUksYUFBYSxFQUFFLHNDQUFzQztBQUN6RCxhQUFPLE9BQU8sUUFBUSxFQUFFLFFBQVEsQ0FBQyxpQkFBaUI7QUFDOUMsYUFBSyxXQUFXO0FBQUEsVUFDWixJQUFJLGVBQWUsWUFDZjtBQUFBLFVBQ0osTUFBTSxhQUFhLGdCQUFRLElBQUksWUFBWSxLQUFLLFlBQVk7QUFBQSxVQUM1RCxVQUFVLE1BQU07QUFDWix5QkFBYSxZQUFZO0FBQ3pCLDRCQUFnQjtBQUNoQiwyQkFBZTtBQUFBLFVBQ25CO0FBQUEsUUFDSixDQUFDO0FBQUEsTUFDTCxDQUFDO0FBQUEsSUFDTDtBQUVBLFNBQUssSUFBSSxVQUFVLGNBQWMsTUFBTTtBQUNuQyxjQUFRLElBQUksMkJBQW9CO0FBRWhDLFdBQUssU0FBUyxFQUFFLFFBQVEsTUFBTSxDQUFDO0FBRS9CLFVBQUksZ0JBQUksYUFBYSxFQUFFLDBCQUEwQjtBQUM3QyxnQkFBUSxPQUFPO0FBQUEsVUFDWCxJQUFJO0FBQUEsVUFDSixNQUFNO0FBQUEsWUFDRixXQUFXO0FBQUEsVUFDZjtBQUFBLFFBQ0osQ0FBQztBQUFBLE1BQ0w7QUFHQSxZQUFNLHlCQUF5QiwwQkFBMEI7QUFDekQsVUFBSSx3QkFBd0I7QUFDeEIsZ0JBQVEsSUFBSSx1REFBZ0Q7QUFDNUQseUJBQWlCO0FBQUEsVUFDYixNQUFNLEtBQUssSUFBSSxVQUFVLFFBQVE7QUFBQSxVQUNqQyxNQUFNLE9BQU8sT0FBTztBQUFBLFVBQ3BCLGFBQWE7QUFBQSxVQUNiLDZCQUE2QjtBQUFBLFFBQ2pDLENBQUM7QUFBQSxNQUNMO0FBQUEsSUFDSixDQUFDO0FBQUEsRUFDTDtBQUFBLEVBRUEsTUFBTSxlQUFlO0FBQ2pCLFVBQU0sV0FBWSxNQUFNLEtBQUssU0FBUztBQUN0QyxLQUFDLFlBQWEsTUFBTSxLQUFLLFNBQVMsZ0JBQWdCO0FBRWxELGtCQUFjLE9BQU8sQ0FBQyxTQUFTO0FBQUEsTUFDM0IsR0FBRztBQUFBLE1BQ0gsR0FBSSxZQUFZLENBQUM7QUFBQSxJQUNyQixFQUFFO0FBQUEsRUFDTjtBQUFBLEVBRUEsTUFBTSxhQUFhLGFBQXdCO0FBQ3ZDLFlBQVEsSUFBSSxpQ0FBNEIsV0FBVztBQUNuRCxVQUFNLEtBQUssU0FBUyxXQUFXO0FBQUEsRUFDbkM7QUFBQSxFQUVBLGVBQWU7QUFDWCxVQUFNLFdBQVcsS0FBSyxjQUFjLFFBQVEsaUJBQWlCLENBQUMsT0FBTztBQUNqRSxZQUFNLGtCQUFrQixtQkFBbUIsbUJBQW1CO0FBRTlELFVBQUksZ0JBQUksYUFBYSxFQUFFLGFBQWEsbUJBQW1CO0FBQ25ELGFBQUssV0FBVztBQUVoQixZQUFJLGdCQUFJLGFBQWEsRUFBRSw0QkFBNEIsaUJBQWlCLFFBQVE7QUFDeEUsMEJBQWdCLE1BQU07QUFBQSxRQUMxQjtBQUVBO0FBQUEsTUFDSixPQUFPO0FBQ0gsY0FBTSxhQUFhLFNBQVMsY0FBYyxJQUFJLG1CQUFtQix1QkFBdUI7QUFDeEYsY0FBTSxTQUFTLEdBQUc7QUFFbEIsWUFDSSxDQUFDLGNBQ0QsQ0FBQyxtQkFDRCxRQUNGO0FBQ0Usa0JBQVEsT0FBTztBQUFBLFlBQ1gsSUFBSTtBQUFBLFlBQ0osTUFBTTtBQUFBLGNBQ0YsV0FBVztBQUFBLFlBQ2Y7QUFBQSxVQUNKLENBQUMsRUFBRSxLQUFLLE1BQU07QUFBQSxRQUNsQixPQUFPO0FBQ0gsMkJBQWlCLE9BQU8sTUFBTTtBQUFBLFFBQ2xDO0FBQUEsTUFDSjtBQUFBLElBQ0osQ0FBQztBQUVELGFBQVMsS0FBSyxHQUFHLG1CQUFtQjtBQUFBLEVBQ3hDO0FBQUEsRUFFQSxNQUFNLFNBQVMsRUFBRSxRQUFBQyxRQUFPLElBQXlCLEVBQUUsUUFBUSxLQUFLLEdBQUc7QUFDL0QsU0FBSyxJQUFJLFVBQVUsbUJBQW1CLFNBQVM7QUFFL0MsVUFBTSxLQUFLLElBQUksVUFBVSxNQUFNLGdCQUFJLGFBQWEsRUFBRSxnQkFBZ0IsTUFBTSxFQUFFLEtBQUssR0FBRyxhQUFhO0FBQUEsTUFDM0YsTUFBTTtBQUFBLE1BQ04sUUFBQUE7QUFBQSxJQUNKLENBQUM7QUFBQSxFQUNMO0FBQUEsRUFDQSxhQUFhO0FBRVQsU0FBSyxJQUFJLFVBQVUsV0FBVyxLQUFLLElBQUksVUFBVSxnQkFBZ0IsU0FBUyxFQUFFLENBQUMsQ0FBQztBQUM5RSxTQUFLLElBQUksVUFBVSxnQkFBZ0IsU0FBUyxFQUFFLENBQUMsRUFBRSxhQUFhO0FBQUEsTUFDMUQsTUFBTTtBQUFBLE1BQ04sUUFBUTtBQUFBLElBQ1osQ0FBQztBQUFBLEVBQ0w7QUFBQSxFQUVBLE1BQU0sYUFBYTtBQUlmLFVBQU0sT0FBTyxLQUFLLElBQUksVUFBVSxnQkFBZ0IsU0FBUyxFQUFFLENBQUM7QUFJNUQsUUFBSSxDQUFDLE1BQU07QUFDUCxZQUFNLEtBQUssU0FBUztBQUVwQjtBQUFBLElBQ0o7QUFFQSxVQUFNLGNBQWMsTUFBTTtBQUN0QixZQUFNLGlDQUNGLEtBQUssWUFBWSxRQUFRLGtCQUFrQixHQUFHO0FBRWxELFVBQUksZ0NBQWdDLFNBQVMsTUFBTSxHQUFHO0FBQ2xELGVBQU87QUFBQSxNQUNYO0FBRUEsVUFBSSxnQ0FBZ0MsU0FBUyxPQUFPLEdBQUc7QUFDbkQsZUFBTztBQUFBLE1BQ1g7QUFFQSxhQUFPO0FBQUEsSUFDWDtBQU1BLFVBQU0sY0FBYyxZQUFZO0FBQ2hDLFlBQVEsSUFBSSxlQUFlLFdBQVc7QUFJdEMsVUFBTSxXQUFXLEtBQUssSUFBSSxVQUFVLEdBQUcsV0FBVyxPQUFPO0FBQ3pELFlBQVEsSUFBSSxZQUFZLFFBQVE7QUFFaEMsVUFBTSxhQUFhLEtBQUssWUFBWSxVQUFVLFNBQVMsV0FBVztBQUNsRSxZQUFRLElBQUksY0FBYyxVQUFVO0FBSXBDLFFBQUksb0JBQW9CLGlDQUFlO0FBQ25DLFVBQUksWUFBWTtBQUVaLGFBQUssS0FBSyxPQUFPO0FBQ2pCLGNBQU0sS0FBSyxTQUFTLEVBQUUsUUFBUSxNQUFNLENBQUM7QUFFckM7QUFBQSxNQUNKO0FBRUEsV0FBSyxXQUFXO0FBRWhCO0FBQUEsSUFDSjtBQUlBLFFBQUksQ0FBQyxTQUFTLFdBQVc7QUFDckIsVUFBSSxZQUFZO0FBRVosaUJBQVMsU0FBUztBQUFBLE1BQ3RCLE9BQU87QUFFSCxhQUFLLFdBQVc7QUFBQSxNQUNwQjtBQUFBLElBQ0osT0FBTztBQUVILFdBQUssV0FBVztBQUFBLElBQ3BCO0FBQUEsRUFDSjtBQUFBLEVBRU8sV0FBVztBQUNkLFdBQVEsS0FBSyxJQUFZLFNBQVM7QUFBQSxFQUN0QztBQUNKOyIsCiAgIm5hbWVzIjogWyJtb2R1bGUiLCAiZ2xvYmFsIiwgImZvcm1hdCIsICJsb2NhbGUiLCAidG8iLCAiZnJvbSIsICJub3ciLCAic2lnbiIsICJ0b2tlbiIsICJvcmRpbmFsIiwgImkiLCAiZGlmZiIsICJsb2NhbGVEYXRhIiwgImhvdXJzIiwgIm1pbnV0ZXMiLCAibG9jYWxlcyIsICJ1cGRhdGVMb2NhbGUiLCAicmVzdWx0IiwgInRva2VucyIsICJtZXJpZGllbSIsICJtaW4iLCAibWF4IiwgInllYXJzIiwgIm1vbnRocyIsICJ3ZWVrcyIsICJkYXlzIiwgInNlY29uZHMiLCAibWlsbGlzZWNvbmRzIiwgIm9mZnNldCIsICJzaGlmdCIsICJidWJibGUiLCAicm91bmQiLCAidGhyZXNob2xkcyIsICJub3ciLCAiZWxlbWVudCIsICJlbGVtZW50IiwgInRleHQiLCAiZWxlbWVudCIsICJlbGVtZW50IiwgInJlc3VsdCIsICJoYXNoIiwgImRldGFjaCIsICJ0aWNrIiwgIm5vdyIsICJpbml0IiwgImNyZWF0ZV9lYWNoX2Jsb2NrIiwgImluc2VydCIsICJpbnN0YW5jZSIsICJjcmVhdGVfZnJhZ21lbnQiLCAibm90X2VxdWFsIiwgImFwcGVuZF9zdHlsZXMiLCAiY3JlYXRlX3Nsb3QiLCAiYXR0ciIsICJtb2R1bGUiLCAiY3R4IiwgImN0eCIsICJjdHgiLCAiY3R4IiwgImN0eCIsICJwbGF0Zm9ybSIsICJlbGVtZW50IiwgIm1heCIsICJvZmZzZXQiLCAicGxhdGZvcm0iLCAicGxhY2VtZW50cyIsICJzaWRlcyIsICJzaWRlIiwgInBsYWNlbWVudCIsICJvdmVyZmxvdyIsICJlbGVtZW50IiwgImdldENvbXB1dGVkU3R5bGUiLCAicmVzdWx0IiwgImVsZW1lbnQiLCAiZ2V0Q29tcHV0ZWRTdHlsZSIsICJyZXN1bHQiLCAidXBkYXRlIiwgImZsaXAiLCAiYXJyb3ciLCAiY29tcHV0ZVBvc2l0aW9uIiwgImltcG9ydF9vYnNpZGlhbiIsICJjb21wdXRlUG9zaXRpb24iLCAiZmxpcCIsICJzaXplIiwgInVwZGF0ZSIsICJzdWJzY3JpYmUiLCAicnVuIiwgInJlc3VsdCIsICJwbHVnaW5DbGFzc1N0b3JlIiwgImltcG9ydF9vYnNpZGlhbiIsICJjcmVhdGVfaWZfYmxvY2siLCAiY3R4IiwgIkNvbmZpcm1hdGlvbk1vZGFsIiwgImltcG9ydF9vYnNpZGlhbiIsICJpbXBvcnRfb2JzaWRpYW4iLCAidGVtcGxhdGUiLCAiZmlsZSIsICJ0ZW1wbGF0ZSIsICJub3ciLCAibW9tZW50IiwgInNsaWNlIiwgIm9wdGlvbnMiLCAidm5vZGVJZCIsICJpc1ZhbGlkRWxlbWVudCIsICJyZXJlbmRlclF1ZXVlIiwgImRlZmVyIiwgInByZXZEZWJvdW5jZSIsICJpIiwgIkVNUFRZX09CSiIsICJFTVBUWV9BUlIiLCAiSVNfTk9OX0RJTUVOU0lPTkFMIiwgImFzc2lnbiIsICJvYmoiLCAicHJvcHMiLCAicmVtb3ZlTm9kZSIsICJub2RlIiwgInBhcmVudE5vZGUiLCAicmVtb3ZlQ2hpbGQiLCAiY3JlYXRlRWxlbWVudCIsICJ0eXBlIiwgImNoaWxkcmVuIiwgImtleSIsICJyZWYiLCAibm9ybWFsaXplZFByb3BzIiwgImFyZ3VtZW50cyIsICJsZW5ndGgiLCAiY2FsbCIsICJkZWZhdWx0UHJvcHMiLCAiY3JlYXRlVk5vZGUiLCAib3JpZ2luYWwiLCAidm5vZGUiLCAidW5kZWZpbmVkIiwgImNvbnN0cnVjdG9yIiwgImNyZWF0ZVJlZiIsICJjdXJyZW50IiwgIkZyYWdtZW50IiwgIkNvbXBvbmVudCIsICJjb250ZXh0IiwgImdldERvbVNpYmxpbmciLCAiY2hpbGRJbmRleCIsICJpbmRleE9mIiwgInNpYmxpbmciLCAidXBkYXRlUGFyZW50RG9tUG9pbnRlcnMiLCAiY2hpbGQiLCAiYmFzZSIsICJlbnF1ZXVlUmVuZGVyIiwgImMiLCAicHVzaCIsICJwcm9jZXNzIiwgImRlYm91bmNlUmVuZGVyaW5nIiwgInF1ZXVlIiwgInNvcnQiLCAiYSIsICJiIiwgInNvbWUiLCAiY29tcG9uZW50IiwgImNvbW1pdFF1ZXVlIiwgIm9sZFZOb2RlIiwgIm9sZERvbSIsICJwYXJlbnREb20iLCAiZGlmZiIsICJvd25lclNWR0VsZW1lbnQiLCAiY29tbWl0Um9vdCIsICJkaWZmQ2hpbGRyZW4iLCAicmVuZGVyUmVzdWx0IiwgIm5ld1BhcmVudFZOb2RlIiwgIm9sZFBhcmVudFZOb2RlIiwgImdsb2JhbENvbnRleHQiLCAiaXNTdmciLCAiZXhjZXNzRG9tQ2hpbGRyZW4iLCAiaXNIeWRyYXRpbmciLCAiaiIsICJjaGlsZFZOb2RlIiwgIm5ld0RvbSIsICJmaXJzdENoaWxkRG9tIiwgInJlZnMiLCAib2xkQ2hpbGRyZW4iLCAib2xkQ2hpbGRyZW5MZW5ndGgiLCAiQXJyYXkiLCAiaXNBcnJheSIsICJyZW9yZGVyQ2hpbGRyZW4iLCAicGxhY2VDaGlsZCIsICJ1bm1vdW50IiwgImFwcGx5UmVmIiwgInRtcCIsICJ0b0NoaWxkQXJyYXkiLCAib3V0IiwgIm5leHREb20iLCAic2liRG9tIiwgIm91dGVyIiwgImFwcGVuZENoaWxkIiwgIm5leHRTaWJsaW5nIiwgImluc2VydEJlZm9yZSIsICJkaWZmUHJvcHMiLCAiZG9tIiwgIm5ld1Byb3BzIiwgIm9sZFByb3BzIiwgImh5ZHJhdGUiLCAic2V0UHJvcGVydHkiLCAic2V0U3R5bGUiLCAic3R5bGUiLCAidmFsdWUiLCAidGVzdCIsICJuYW1lIiwgIm9sZFZhbHVlIiwgInVzZUNhcHR1cmUiLCAibyIsICJjc3NUZXh0IiwgInJlcGxhY2UiLCAidG9Mb3dlckNhc2UiLCAiX2xpc3RlbmVycyIsICJhZGRFdmVudExpc3RlbmVyIiwgImV2ZW50UHJveHlDYXB0dXJlIiwgImV2ZW50UHJveHkiLCAicmVtb3ZlRXZlbnRMaXN0ZW5lciIsICJlIiwgInNldEF0dHJpYnV0ZSIsICJyZW1vdmVBdHRyaWJ1dGUiLCAiZXZlbnQiLCAibmV3Vk5vZGUiLCAiaXNOZXciLCAib2xkU3RhdGUiLCAic25hcHNob3QiLCAiY2xlYXJQcm9jZXNzaW5nRXhjZXB0aW9uIiwgInByb3ZpZGVyIiwgImNvbXBvbmVudENvbnRleHQiLCAibmV3VHlwZSIsICJjb250ZXh0VHlwZSIsICJwcm90b3R5cGUiLCAicmVuZGVyIiwgImRvUmVuZGVyIiwgInN1YiIsICJzdGF0ZSIsICJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCAiY29tcG9uZW50V2lsbE1vdW50IiwgImNvbXBvbmVudERpZE1vdW50IiwgImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCAic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwgImZvckVhY2giLCAiY29tcG9uZW50V2lsbFVwZGF0ZSIsICJjb21wb25lbnREaWRVcGRhdGUiLCAiZ2V0Q2hpbGRDb250ZXh0IiwgImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwgImRpZmZFbGVtZW50Tm9kZXMiLCAiZGlmZmVkIiwgInJvb3QiLCAiY2IiLCAib2xkSHRtbCIsICJuZXdIdG1sIiwgIm5vZGVUeXBlIiwgImxvY2FsTmFtZSIsICJkb2N1bWVudCIsICJjcmVhdGVUZXh0Tm9kZSIsICJjcmVhdGVFbGVtZW50TlMiLCAiaXMiLCAiZGF0YSIsICJjaGlsZE5vZGVzIiwgImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwgImF0dHJpYnV0ZXMiLCAiaW5uZXJIVE1MIiwgImNoZWNrZWQiLCAicGFyZW50Vk5vZGUiLCAic2tpcFJlbW92ZSIsICJyIiwgImNvbXBvbmVudFdpbGxVbm1vdW50IiwgInRoaXMiLCAicmVwbGFjZU5vZGUiLCAiZmlyc3RDaGlsZCIsICJzbGljZSIsICJFTVBUWV9BUlIiLCAib3B0aW9ucyIsICJlcnJvciIsICJ2bm9kZSIsICJjb21wb25lbnQiLCAiY3RvciIsICJoYW5kbGVkIiwgImNvbnN0cnVjdG9yIiwgImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsICJzZXRTdGF0ZSIsICJjb21wb25lbnREaWRDYXRjaCIsICJlIiwgInZub2RlSWQiLCAiaXNWYWxpZEVsZW1lbnQiLCAiQ29tcG9uZW50IiwgInByb3RvdHlwZSIsICJ1cGRhdGUiLCAiY2FsbGJhY2siLCAicyIsICJ0aGlzIiwgInN0YXRlIiwgImFzc2lnbiIsICJwcm9wcyIsICJwdXNoIiwgImVucXVldWVSZW5kZXIiLCAiZm9yY2VVcGRhdGUiLCAicmVuZGVyIiwgIkZyYWdtZW50IiwgInJlcmVuZGVyUXVldWUiLCAiZGVmZXIiLCAiUHJvbWlzZSIsICJ0aGVuIiwgImJpbmQiLCAicmVzb2x2ZSIsICJzZXRUaW1lb3V0IiwgInByb2Nlc3MiLCAiaSIsICJjcmVhdGVWTm9kZSIsICJ0eXBlIiwgImtleSIsICJfX3NvdXJjZSIsICJfX3NlbGYiLCAicmVmIiwgIm5vcm1hbGl6ZWRQcm9wcyIsICJ1bmRlZmluZWQiLCAiZGVmYXVsdFByb3BzIiwgIm1heCIsICJlbGVtZW50IiwgImF0dHIiLCAiY3VycmVudEluZGV4IiwgImN1cnJlbnRDb21wb25lbnQiLCAicHJldlJhZiIsICJhZnRlclBhaW50RWZmZWN0cyIsICJvbGRCZWZvcmVEaWZmIiwgIm9wdGlvbnMiLCAib2xkQmVmb3JlUmVuZGVyIiwgIm9sZEFmdGVyRGlmZiIsICJkaWZmZWQiLCAib2xkQ29tbWl0IiwgIm9sZEJlZm9yZVVubW91bnQiLCAidW5tb3VudCIsICJmbHVzaEFmdGVyUGFpbnRFZmZlY3RzIiwgImNvbXBvbmVudCIsICJhZnRlclBhaW50RWZmZWN0cyIsICJzb3J0IiwgImEiLCAiYiIsICJwb3AiLCAiZm9yRWFjaCIsICJpbnZva2VDbGVhbnVwIiwgImludm9rZUVmZmVjdCIsICJlIiwgIm9wdGlvbnMiLCAidm5vZGUiLCAiY3VycmVudENvbXBvbmVudCIsICJvbGRCZWZvcmVEaWZmIiwgIm9sZEJlZm9yZVJlbmRlciIsICJjdXJyZW50SW5kZXgiLCAiaG9va3MiLCAiZGlmZmVkIiwgIm9sZEFmdGVyRGlmZiIsICJjIiwgImxlbmd0aCIsICJwdXNoIiwgInByZXZSYWYiLCAicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwgImNhbGxiYWNrIiwgInJhZiIsICJkb25lIiwgImNsZWFyVGltZW91dCIsICJ0aW1lb3V0IiwgIkhBU19SQUYiLCAiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCAic2V0VGltZW91dCIsICJjb21taXRRdWV1ZSIsICJzb21lIiwgImZpbHRlciIsICJjYiIsICJvbGRDb21taXQiLCAidW5tb3VudCIsICJvbGRCZWZvcmVVbm1vdW50IiwgImhhc0Vycm9yZWQiLCAicyIsICJob29rIiwgImNvbXAiLCAiY2xlYW51cCIsICJhc3NpZ24iLCAib2JqIiwgInByb3BzIiwgImkiLCAic2hhbGxvd0RpZmZlcnMiLCAiYSIsICJiIiwgIlB1cmVDb21wb25lbnQiLCAicCIsICJQdXJlQ29tcG9uZW50IiwgInByb3RvdHlwZSIsICJDb21wb25lbnQiLCAiaXNQdXJlUmVhY3RDb21wb25lbnQiLCAic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwgInByb3BzIiwgInN0YXRlIiwgInNoYWxsb3dEaWZmZXJzIiwgInRoaXMiLCAib2xkRGlmZkhvb2siLCAib3B0aW9ucyIsICJ2bm9kZSIsICJ0eXBlIiwgInJlZiIsICJSRUFDVF9GT1JXQVJEX1NZTUJPTCIsICJTeW1ib2wiLCAiZm9yIiwgIkZvcndhcmRlZCIsICJvbGRDYXRjaEVycm9yIiwgIm9wdGlvbnMiLCAiZXJyb3IiLCAibmV3Vk5vZGUiLCAib2xkVk5vZGUiLCAidGhlbiIsICJjb21wb25lbnQiLCAidm5vZGUiLCAib2xkVW5tb3VudCIsICJ1bm1vdW50IiwgIlN1c3BlbnNlIiwgIl9zdXNwZW5kZXJzIiwgInN1c3BlbmRlZCIsICJTdXNwZW5zZUxpc3QiLCAiX25leHQiLCAiX21hcCIsICJvcHRpb25zIiwgInVubW91bnQiLCAidm5vZGUiLCAiY29tcG9uZW50IiwgInR5cGUiLCAib2xkVW5tb3VudCIsICJTdXNwZW5zZSIsICJwcm90b3R5cGUiLCAiQ29tcG9uZW50IiwgInByb21pc2UiLCAic3VzcGVuZGluZ1ZOb2RlIiwgInN1c3BlbmRpbmdDb21wb25lbnQiLCAiYyIsICJ0aGlzIiwgIl9zdXNwZW5kZXJzIiwgInB1c2giLCAicmVzb2x2ZSIsICJzdXNwZW5kZWQiLCAicmVzb2x2ZWQiLCAib25SZXNvbHZlZCIsICJvblN1c3BlbnNpb25Db21wbGV0ZSIsICJzdGF0ZSIsICJzdXNwZW5kZWRWTm9kZSIsICJyZW1vdmVPcmlnaW5hbCIsICJkZXRhY2hlZFBhcmVudCIsICJvcmlnaW5hbFBhcmVudCIsICJtYXAiLCAiY2hpbGQiLCAiaW5zZXJ0QmVmb3JlIiwgInNldFN0YXRlIiwgInBvcCIsICJmb3JjZVVwZGF0ZSIsICJ3YXNIeWRyYXRpbmciLCAidGhlbiIsICJjb21wb25lbnRXaWxsVW5tb3VudCIsICJyZW5kZXIiLCAicHJvcHMiLCAiZG9jdW1lbnQiLCAiY3JlYXRlRWxlbWVudCIsICJkZXRhY2hlZENvbXBvbmVudCIsICJkZXRhY2hlZENsb25lIiwgInBhcmVudERvbSIsICJmb3JFYWNoIiwgImVmZmVjdCIsICJhc3NpZ24iLCAiZmFsbGJhY2siLCAiRnJhZ21lbnQiLCAiY2hpbGRyZW4iLCAibGlzdCIsICJub2RlIiwgImRlbGV0ZSIsICJyZXZlYWxPcmRlciIsICJzaXplIiwgImxlbmd0aCIsICJTdXNwZW5zZUxpc3QiLCAicHJvdG90eXBlIiwgIkNvbXBvbmVudCIsICJjaGlsZCIsICJsaXN0IiwgInRoaXMiLCAiZGVsZWdhdGVkIiwgInN1c3BlbmRlZCIsICJub2RlIiwgIl9tYXAiLCAiZ2V0IiwgInVuc3VzcGVuZCIsICJ3cmFwcGVkVW5zdXNwZW5kIiwgInByb3BzIiwgInJldmVhbE9yZGVyIiwgInB1c2giLCAicmVzb2x2ZSIsICJyZW5kZXIiLCAiX25leHQiLCAiTWFwIiwgImNoaWxkcmVuIiwgInRvQ2hpbGRBcnJheSIsICJyZXZlcnNlIiwgImkiLCAibGVuZ3RoIiwgInNldCIsICJjb21wb25lbnREaWRVcGRhdGUiLCAiY29tcG9uZW50RGlkTW91bnQiLCAiZm9yRWFjaCIsICJfdGhpcyIsICJSRUFDVF9FTEVNRU5UX1RZUEUiLCAiU3ltYm9sIiwgImZvciIsICJDQU1FTF9QUk9QUyIsICJJU19ET00iLCAiZG9jdW1lbnQiLCAib25DaGFuZ2VJbnB1dFR5cGUiLCAidHlwZSIsICJ0ZXN0IiwgIkNvbXBvbmVudCIsICJwcm90b3R5cGUiLCAiaXNSZWFjdENvbXBvbmVudCIsICJmb3JFYWNoIiwgImtleSIsICJPYmplY3QiLCAiZGVmaW5lUHJvcGVydHkiLCAiY29uZmlndXJhYmxlIiwgImdldCIsICJ0aGlzIiwgInNldCIsICJ2IiwgIndyaXRhYmxlIiwgInZhbHVlIiwgIm9sZEV2ZW50SG9vayIsICJvcHRpb25zIiwgImV2ZW50IiwgImVtcHR5IiwgImlzUHJvcGFnYXRpb25TdG9wcGVkIiwgImNhbmNlbEJ1YmJsZSIsICJpc0RlZmF1bHRQcmV2ZW50ZWQiLCAiZGVmYXVsdFByZXZlbnRlZCIsICJlIiwgInBlcnNpc3QiLCAibmF0aXZlRXZlbnQiLCAiY3VycmVudENvbXBvbmVudCIsICJjbGFzc05hbWVEZXNjcmlwdG9yIiwgImNsYXNzIiwgIm9sZFZOb2RlSG9vayIsICJ2bm9kZSIsICJ0eXBlIiwgInByb3BzIiwgIm5vcm1hbGl6ZWRQcm9wcyIsICJub25DdXN0b21FbGVtZW50IiwgImluZGV4T2YiLCAiaSIsICJJU19ET00iLCAidGVzdCIsICJvbkNoYW5nZUlucHV0VHlwZSIsICJ0b0xvd2VyQ2FzZSIsICJDQU1FTF9QUk9QUyIsICJyZXBsYWNlIiwgIm11bHRpcGxlIiwgIkFycmF5IiwgImlzQXJyYXkiLCAidG9DaGlsZEFycmF5IiwgImNoaWxkcmVuIiwgImNoaWxkIiwgInNlbGVjdGVkIiwgImRlZmF1bHRWYWx1ZSIsICJjbGFzc05hbWUiLCAiZW51bWVyYWJsZSIsICIkJHR5cGVvZiIsICJSRUFDVF9FTEVNRU5UX1RZUEUiLCAib2xkQmVmb3JlUmVuZGVyIiwgImVsZW1lbnQiLCAic2l6ZSIsICJpbnN0YW5jZSIsICJjb21wdXRlUG9zaXRpb24iLCAiZmxpcCIsICJhcnJvdyIsICJpbXBvcnRfb2JzaWRpYW4iLCAiaW5zdGFuY2UiLCAiaW5zdGFuY2UiLCAiciIsICJpc0NvbnRyb2xQcmVzc2VkIiwgImltcG9ydF9vYnNpZGlhbiIsICJpbXBvcnRfb2JzaWRpYW4iLCAidGVtcGxhdGUiLCAiZ3JhbnVsYXJpdGllcyIsICJ1cGRhdGUiLCAiY3R4IiwgImN0eCIsICJjdHgiLCAiY3R4IiwgInNldHRpbmdzIiwgImdyYW51bGFyaXR5IiwgImNyZWF0ZV9pZl9ibG9jayIsICJjdHgiLCAiY3R4IiwgImN0eCIsICJjcmVhdGVfaWZfYmxvY2siLCAiY3R4IiwgImN0eCIsICJjdHgiLCAiY3R4IiwgImN0eCIsICJjdHgiLCAiY3R4IiwgImN0eCIsICJjdHgiLCAiY3JlYXRlX2lmX2Jsb2NrXzEiLCAiY3JlYXRlX2lmX2Jsb2NrIiwgImN0eCIsICJjcmVhdGVfaWZfYmxvY2tfMSIsICJjcmVhdGVfaWZfYmxvY2siLCAiY3R4IiwgImNyZWF0ZV9pZl9ibG9jayIsICJjdHgiLCAiaW1wb3J0X29ic2lkaWFuIiwgIkluZGV4X2RlZmF1bHQiLCAiaW1wb3J0X29ic2lkaWFuIiwgImltcG9ydF9vYnNpZGlhbiIsICJjdHgiLCAiaW1wb3J0X29ic2lkaWFuIiwgInBsdWdpbkNsYXNzU3RvcmUiLCAiYWN0aXZlIl0KfQo=
